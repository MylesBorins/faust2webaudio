/*
faust2webaduio

Primarily written by Myles Borins
During the Spring 2013 offering of Music 420b with Julius Smith
A bit during the Summer of 2013 with the help of Joshua Kit Clayton
And finally a sprint during the late fall of 2013 to get everything working
A Special thanks to Yann Orlarey and StÃ©phane Letz

faust2webaudio is distributed under the terms the MIT or GPL2 Licenses.
Choose the license that best suits your project. The text of the MIT and GPL
licenses are at the root directory.

*/

/*global webkitAudioContext, Module, HEAPF32, HEAP32, Pointer_stringify, ALLOC_STACK, intArrayFromString, allocate*/

var faust = faust || {};

(function () {// Note: Some Emscripten settings will significantly limit the speed of the generated code.
// Note: Some Emscripten settings may limit the speed of the generated code.
// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = eval('(function() { try { return Module || {} } catch(e) { return {} } })()');
// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}
// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function';
var ENVIRONMENT_IS_WEB = typeof window === 'object';
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;
if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  Module['print'] = function print(x) {
    process['stdout'].write(x + '\n');
  };
  Module['printErr'] = function printErr(x) {
    process['stderr'].write(x + '\n');
  };
  var nodeFS = require('fs');
  var nodePath = require('path');
  Module['read'] = function read(filename, binary) {
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    // The path is absolute if the normalized version is the same as the resolved.
    if (!ret && filename != nodePath['resolve'](filename)) {
      filename = path.join(__dirname, '..', 'src', filename);
      ret = nodeFS['readFileSync'](filename);
    }
    if (ret && !binary) ret = ret.toString();
    return ret;
  };
  Module['readBinary'] = function readBinary(filename) { return Module['read'](filename, true) };
  Module['load'] = function load(f) {
    globalEval(read(f));
  };
  Module['arguments'] = process['argv'].slice(2);
  module['exports'] = Module;
}
else if (ENVIRONMENT_IS_SHELL) {
  Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm
  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function read() { throw 'no read() available (jsc?)' };
  }
  Module['readBinary'] = function readBinary(f) {
    return read(f, 'binary');
  };
  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }
  this['Module'] = Module;
  eval("if (typeof gc === 'function' && gc.toString().indexOf('[native code]') > 0) var gc = undefined"); // wipe out the SpiderMonkey shell 'gc' function, which can confuse closure (uses it as a minified name, and it is then initted to a non-falsey value unexpectedly)
}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function read(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };
  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }
  if (typeof console !== 'undefined') {
    Module['print'] = function print(x) {
      console.log(x);
    };
    Module['printErr'] = function printErr(x) {
      console.log(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }
  if (ENVIRONMENT_IS_WEB) {
    this['Module'] = Module;
  } else {
    Module['load'] = importScripts;
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}
function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] == 'undefined' && Module['read']) {
  Module['load'] = function load(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
// *** Environment setup code ***
// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];
// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];
// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}
// === Auto-generated preamble library stuff ===
//========================================
// Runtime code shared with compiler
//========================================
var Runtime = {
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  forceAlign: function (target, quantum) {
    quantum = quantum || 4;
    if (quantum == 1) return target;
    if (isNumber(target) && isNumber(quantum)) {
      return Math.ceil(target/quantum)*quantum;
    } else if (isNumber(quantum) && isPowerOfTwo(quantum)) {
      return '(((' +target + ')+' + (quantum-1) + ')&' + -quantum + ')';
    }
    return 'Math.ceil((' + target + ')/' + quantum + ')*' + quantum;
  },
  isNumberType: function (type) {
    return type in Runtime.INT_TYPES || type in Runtime.FLOAT_TYPES;
  },
  isPointerType: function isPointerType(type) {
  return type[type.length-1] == '*';
},
  isStructType: function isStructType(type) {
  if (isPointerType(type)) return false;
  if (isArrayType(type)) return true;
  if (/<?{ ?[^}]* ?}>?/.test(type)) return true; // { i32, i8 } etc. - anonymous struct types
  // See comment in isStructPointerType()
  return type[0] == '%';
},
  INT_TYPES: {"i1":0,"i8":0,"i16":0,"i32":0,"i64":0},
  FLOAT_TYPES: {"float":0,"double":0},
  or64: function (x, y) {
    var l = (x | 0) | (y | 0);
    var h = (Math.round(x / 4294967296) | Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  and64: function (x, y) {
    var l = (x | 0) & (y | 0);
    var h = (Math.round(x / 4294967296) & Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  xor64: function (x, y) {
    var l = (x | 0) ^ (y | 0);
    var h = (Math.round(x / 4294967296) ^ Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  dedup: function dedup(items, ident) {
  var seen = {};
  if (ident) {
    return items.filter(function(item) {
      if (seen[item[ident]]) return false;
      seen[item[ident]] = true;
      return true;
    });
  } else {
    return items.filter(function(item) {
      if (seen[item]) return false;
      seen[item] = true;
      return true;
    });
  }
},
  set: function set() {
  var args = typeof arguments[0] === 'object' ? arguments[0] : arguments;
  var ret = {};
  for (var i = 0; i < args.length; i++) {
    ret[args[i]] = 0;
  }
  return ret;
},
  STACK_ALIGN: 8,
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (vararg) return 8;
    if (!vararg && (type == 'i64' || type == 'double')) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  calculateStructAlignment: function calculateStructAlignment(type) {
    type.flatSize = 0;
    type.alignSize = 0;
    var diffs = [];
    var prev = -1;
    var index = 0;
    type.flatIndexes = type.fields.map(function(field) {
      index++;
      var size, alignSize;
      if (Runtime.isNumberType(field) || Runtime.isPointerType(field)) {
        size = Runtime.getNativeTypeSize(field); // pack char; char; in structs, also char[X]s.
        alignSize = Runtime.getAlignSize(field, size);
      } else if (Runtime.isStructType(field)) {
        if (field[1] === '0') {
          // this is [0 x something]. When inside another structure like here, it must be at the end,
          // and it adds no size
          // XXX this happens in java-nbody for example... assert(index === type.fields.length, 'zero-length in the middle!');
          size = 0;
          if (Types.types[field]) {
            alignSize = Runtime.getAlignSize(null, Types.types[field].alignSize);
          } else {
            alignSize = type.alignSize || QUANTUM_SIZE;
          }
        } else {
          size = Types.types[field].flatSize;
          alignSize = Runtime.getAlignSize(null, Types.types[field].alignSize);
        }
      } else if (field[0] == 'b') {
        // bN, large number field, like a [N x i8]
        size = field.substr(1)|0;
        alignSize = 1;
      } else if (field[0] === '<') {
        // vector type
        size = alignSize = Types.types[field].flatSize; // fully aligned
      } else if (field[0] === 'i') {
        // illegal integer field, that could not be legalized because it is an internal structure field
        // it is ok to have such fields, if we just use them as markers of field size and nothing more complex
        size = alignSize = parseInt(field.substr(1))/8;
        assert(size % 1 === 0, 'cannot handle non-byte-size field ' + field);
      } else {
        assert(false, 'invalid type for calculateStructAlignment');
      }
      if (type.packed) alignSize = 1;
      type.alignSize = Math.max(type.alignSize, alignSize);
      var curr = Runtime.alignMemory(type.flatSize, alignSize); // if necessary, place this on aligned memory
      type.flatSize = curr + size;
      if (prev >= 0) {
        diffs.push(curr-prev);
      }
      prev = curr;
      return curr;
    });
    if (type.name_[0] === '[') {
      // arrays have 2 elements, so we get the proper difference. then we scale here. that way we avoid
      // allocating a potentially huge array for [999999 x i8] etc.
      type.flatSize = parseInt(type.name_.substr(1))*type.flatSize/2;
    }
    type.flatSize = Runtime.alignMemory(type.flatSize, type.alignSize);
    if (diffs.length == 0) {
      type.flatFactor = type.flatSize;
    } else if (Runtime.dedup(diffs).length == 1) {
      type.flatFactor = diffs[0];
    }
    type.needsFlattening = (type.flatFactor != 1);
    return type.flatIndexes;
  },
  generateStructInfo: function (struct, typeName, offset) {
    var type, alignment;
    if (typeName) {
      offset = offset || 0;
      type = (typeof Types === 'undefined' ? Runtime.typeInfo : Types.types)[typeName];
      if (!type) return null;
      if (type.fields.length != struct.length) {
        printErr('Number of named fields must match the type for ' + typeName + ': possibly duplicate struct names. Cannot return structInfo');
        return null;
      }
      alignment = type.flatIndexes;
    } else {
      var type = { fields: struct.map(function(item) { return item[0] }) };
      alignment = Runtime.calculateStructAlignment(type);
    }
    var ret = {
      __size__: type.flatSize
    };
    if (typeName) {
      struct.forEach(function(item, i) {
        if (typeof item === 'string') {
          ret[item] = alignment[i] + offset;
        } else {
          // embedded struct
          var key;
          for (var k in item) key = k;
          ret[key] = Runtime.generateStructInfo(item[key], type.fields[i], alignment[i]);
        }
      });
    } else {
      struct.forEach(function(item, i) {
        ret[item[1]] = alignment[i];
      });
    }
    return ret;
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      assert(args.length == sig.length-1);
      return FUNCTION_TABLE[ptr].apply(null, args);
    } else {
      assert(sig.length == 1);
      return FUNCTION_TABLE[ptr]();
    }
  },
  addFunction: function (func) {
    var table = FUNCTION_TABLE;
    var ret = table.length;
    assert(ret % 2 === 0);
    table.push(func);
    for (var i = 0; i < 2-1; i++) table.push(0);
    return ret;
  },
  removeFunction: function (index) {
    var table = FUNCTION_TABLE;
    table[index] = null;
  },
  getAsmConst: function (code, numArgs) {
    // code is a constant string on the heap, so we can cache these
    if (!Runtime.asmConstCache) Runtime.asmConstCache = {};
    var func = Runtime.asmConstCache[code];
    if (func) return func;
    var args = [];
    for (var i = 0; i < numArgs; i++) {
      args.push(String.fromCharCode(36) + i); // $0, $1 etc
    }
    return Runtime.asmConstCache[code] = eval('(function(' + args.join(',') + '){ ' + Pointer_stringify(code) + ' })'); // new Function does not allow upvars in node
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[func]) {
      Runtime.funcWrappers[func] = function dynCall_wrapper() {
        return Runtime.dynCall(sig, func, arguments);
      };
    }
    return Runtime.funcWrappers[func];
  },
  UTF8Processor: function () {
    var buffer = [];
    var needed = 0;
    this.processCChar = function (code) {
      code = code & 0xFF;
      if (buffer.length == 0) {
        if ((code & 0x80) == 0x00) {        // 0xxxxxxx
          return String.fromCharCode(code);
        }
        buffer.push(code);
        if ((code & 0xE0) == 0xC0) {        // 110xxxxx
          needed = 1;
        } else if ((code & 0xF0) == 0xE0) { // 1110xxxx
          needed = 2;
        } else {                            // 11110xxx
          needed = 3;
        }
        return '';
      }
      if (needed) {
        buffer.push(code);
        needed--;
        if (needed > 0) return '';
      }
      var c1 = buffer[0];
      var c2 = buffer[1];
      var c3 = buffer[2];
      var c4 = buffer[3];
      var ret;
      if (buffer.length == 2) {
        ret = String.fromCharCode(((c1 & 0x1F) << 6)  | (c2 & 0x3F));
      } else if (buffer.length == 3) {
        ret = String.fromCharCode(((c1 & 0x0F) << 12) | ((c2 & 0x3F) << 6)  | (c3 & 0x3F));
      } else {
        // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
        var codePoint = ((c1 & 0x07) << 18) | ((c2 & 0x3F) << 12) |
                        ((c3 & 0x3F) << 6)  | (c4 & 0x3F);
        ret = String.fromCharCode(
          Math.floor((codePoint - 0x10000) / 0x400) + 0xD800,
          (codePoint - 0x10000) % 0x400 + 0xDC00);
      }
      buffer.length = 0;
      return ret;
    }
    this.processJSString = function processJSString(string) {
      string = unescape(encodeURIComponent(string));
      var ret = [];
      for (var i = 0; i < string.length; i++) {
        ret.push(string.charCodeAt(i));
      }
      return ret;
    }
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + (assert(!staticSealed),size))|0;STATICTOP = (((STATICTOP)+7)&-8); return ret; },
  dynamicAlloc: function (size) { var ret = DYNAMICTOP;DYNAMICTOP = (DYNAMICTOP + (assert(DYNAMICTOP > 0),size))|0;DYNAMICTOP = (((DYNAMICTOP)+7)&-8); if (DYNAMICTOP >= TOTAL_MEMORY) enlargeMemory();; return ret; },
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 8))*(quantum ? quantum : 8); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((low>>>0)+((high>>>0)*4294967296)) : ((low>>>0)+((high|0)*4294967296))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}
//========================================
// Runtime essentials
//========================================
var __THREW__ = 0; // Used in checking for thrown exceptions.
var setjmpId = 1; // Used in setjmp/longjmp
var setjmpLabels = {};
var ABORT = false; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;
var undef = 0;
// tempInt is used for 32-bit signed values or smaller. tempBigInt is used
// for 32-bit unsigned values or more than 32 bits. TODO: audit all uses of tempInt
var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS, tempBigIntP, tempBigIntD, tempDouble, tempFloat;
var tempI64, tempI64b;
var tempRet0, tempRet1, tempRet2, tempRet3, tempRet4, tempRet5, tempRet6, tempRet7, tempRet8, tempRet9;
function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}
var globalScope = this;
// C calling interface. A convenient way to call C functions (in C files, or
// defined with extern "C").
//
// Note: LLVM optimizations can inline and remove functions, after which you will not be
//       able to call them. Closure can also do so. To avoid that, add your function to
//       the exports using something like
//
//         -s EXPORTED_FUNCTIONS='["_main", "_myfunc"]'
//
// @param ident      The name of the C function (note that C++ functions will be name-mangled - use extern "C")
// @param returnType The return type of the function, one of the JS types 'number', 'string' or 'array' (use 'number' for any C pointer, and
//                   'array' for JavaScript arrays and typed arrays; note that arrays are 8-bit).
// @param argTypes   An array of the types of arguments for the function (if there are no arguments, this can be ommitted). Types are as in returnType,
//                   except that 'array' is not possible (there is no way for us to know the length of the array)
// @param args       An array of the arguments to the function, as native JS values (as in returnType)
//                   Note that string arguments will be stored on the stack (the JS string will become a C string on the stack).
// @return           The return value, as a native JS value (as in returnType)
function ccall(ident, returnType, argTypes, args) {
  return ccallFunc(getCFunc(ident), returnType, argTypes, args);
}
Module["ccall"] = ccall;
// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  try {
    var func = Module['_' + ident]; // closure exported function
    if (!func) func = eval('_' + ident); // explicit lookup
  } catch(e) {
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}
// Internal function that does a C call using a function, not an identifier
function ccallFunc(func, returnType, argTypes, args) {
  var stack = 0;
  function toC(value, type) {
    if (type == 'string') {
      if (value === null || value === undefined || value === 0) return 0; // null string
      value = intArrayFromString(value);
      type = 'array';
    }
    if (type == 'array') {
      if (!stack) stack = Runtime.stackSave();
      var ret = Runtime.stackAlloc(value.length);
      writeArrayToMemory(value, ret);
      return ret;
    }
    return value;
  }
  function fromC(value, type) {
    if (type == 'string') {
      return Pointer_stringify(value);
    }
    assert(type != 'array');
    return value;
  }
  var i = 0;
  var cArgs = args ? args.map(function(arg) {
    return toC(arg, argTypes[i++]);
  }) : [];
  var ret = fromC(func.apply(null, cArgs), returnType);
  if (stack) Runtime.stackRestore(stack);
  return ret;
}
// Returns a native JS wrapper for a C function. This is similar to ccall, but
// returns a function you can call repeatedly in a normal way. For example:
//
//   var my_function = cwrap('my_c_function', 'number', ['number', 'number']);
//   alert(my_function(5, 22));
//   alert(my_function(99, 12));
//
function cwrap(ident, returnType, argTypes) {
  var func = getCFunc(ident);
  return function() {
    return ccallFunc(func, returnType, argTypes, Array.prototype.slice.call(arguments));
  }
}
Module["cwrap"] = cwrap;
// Sets a value in memory in a dynamic way at run-time. Uses the
// type data. This is the same as makeSetValue, except that
// makeSetValue is done at compile-time and generates the needed
// code then, whereas this function picks the right code at
// run-time.
// Note that setValue and getValue only do *aligned* writes and reads!
// Note that ccall uses JS types as for defining types, while setValue and
// getValue need LLVM types ('i8', 'i32') - this is a lower-level operation
function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[(ptr)]=value; break;
      case 'i8': HEAP8[(ptr)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,Math_abs(tempDouble) >= 1 ? (tempDouble > 0 ? Math_min(Math_floor((tempDouble)/4294967296), 4294967295)>>>0 : (~~(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296)))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module['setValue'] = setValue;
// Parallel to setValue.
function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[(ptr)];
      case 'i8': return HEAP8[(ptr)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module['getValue'] = getValue;
var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module['ALLOC_NORMAL'] = ALLOC_NORMAL;
Module['ALLOC_STACK'] = ALLOC_STACK;
Module['ALLOC_STATIC'] = ALLOC_STATIC;
Module['ALLOC_DYNAMIC'] = ALLOC_DYNAMIC;
Module['ALLOC_NONE'] = ALLOC_NONE;
// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }
  var singleType = typeof types === 'string' ? types : null;
  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }
  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)|0)]=0;
    }
    return ret;
  }
  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }
  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];
    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }
    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }
    assert(type, 'Must know what type to store in allocate!');
    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later
    setValue(ret+i, curr, type);
    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }
  return ret;
}
Module['allocate'] = allocate;
function Pointer_stringify(ptr, /* optional */ length) {
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = false;
  var t;
  var i = 0;
  while (1) {
    assert(ptr + i < TOTAL_MEMORY);
    t = HEAPU8[(((ptr)+(i))|0)];
    if (t >= 128) hasUtf = true;
    else if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;
  var ret = '';
  if (!hasUtf) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }
  var utf8 = new Runtime.UTF8Processor();
  for (i = 0; i < length; i++) {
    assert(ptr + i < TOTAL_MEMORY);
    t = HEAPU8[(((ptr)+(i))|0)];
    ret += utf8.processCChar(t);
  }
  return ret;
}
Module['Pointer_stringify'] = Pointer_stringify;
// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.
function UTF16ToString(ptr) {
  var i = 0;
  var str = '';
  while (1) {
    var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
    if (codeUnit == 0)
      return str;
    ++i;
    // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
    str += String.fromCharCode(codeUnit);
  }
}
Module['UTF16ToString'] = UTF16ToString;
// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16LE form. The copy will require at most (str.length*2+1)*2 bytes of space in the HEAP.
function stringToUTF16(str, outPtr) {
  for(var i = 0; i < str.length; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[(((outPtr)+(i*2))>>1)]=codeUnit;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[(((outPtr)+(str.length*2))>>1)]=0;
}
Module['stringToUTF16'] = stringToUTF16;
// Given a pointer 'ptr' to a null-terminated UTF32LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.
function UTF32ToString(ptr) {
  var i = 0;
  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}
Module['UTF32ToString'] = UTF32ToString;
// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32LE form. The copy will require at most (str.length+1)*4 bytes of space in the HEAP,
// but can use less, since str.length does not return the number of characters in the string, but the number of UTF-16 code units in the string.
function stringToUTF32(str, outPtr) {
  var iChar = 0;
  for(var iCodeUnit = 0; iCodeUnit < str.length; ++iCodeUnit) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    var codeUnit = str.charCodeAt(iCodeUnit); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++iCodeUnit);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[(((outPtr)+(iChar*4))>>2)]=codeUnit;
    ++iChar;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[(((outPtr)+(iChar*4))>>2)]=0;
}
Module['stringToUTF32'] = stringToUTF32;
function demangle(func) {
  try {
    if (typeof func === 'number') func = Pointer_stringify(func);
    if (func[0] !== '_') return func;
    if (func[1] !== '_') return func; // C function
    if (func[2] !== 'Z') return func;
    switch (func[3]) {
      case 'n': return 'operator new()';
      case 'd': return 'operator delete()';
    }
    var i = 3;
    // params, etc.
    var basicTypes = {
      'v': 'void',
      'b': 'bool',
      'c': 'char',
      's': 'short',
      'i': 'int',
      'l': 'long',
      'f': 'float',
      'd': 'double',
      'w': 'wchar_t',
      'a': 'signed char',
      'h': 'unsigned char',
      't': 'unsigned short',
      'j': 'unsigned int',
      'm': 'unsigned long',
      'x': 'long long',
      'y': 'unsigned long long',
      'z': '...'
    };
    function dump(x) {
      //return;
      if (x) Module.print(x);
      Module.print(func);
      var pre = '';
      for (var a = 0; a < i; a++) pre += ' ';
      Module.print (pre + '^');
    }
    var subs = [];
    function parseNested() {
      i++;
      if (func[i] === 'K') i++; // ignore const
      var parts = [];
      while (func[i] !== 'E') {
        if (func[i] === 'S') { // substitution
          i++;
          var next = func.indexOf('_', i);
          var num = func.substring(i, next) || 0;
          parts.push(subs[num] || '?');
          i = next+1;
          continue;
        }
        if (func[i] === 'C') { // constructor
          parts.push(parts[parts.length-1]);
          i += 2;
          continue;
        }
        var size = parseInt(func.substr(i));
        var pre = size.toString().length;
        if (!size || !pre) { i--; break; } // counter i++ below us
        var curr = func.substr(i + pre, size);
        parts.push(curr);
        subs.push(curr);
        i += pre + size;
      }
      i++; // skip E
      return parts;
    }
    var first = true;
    function parse(rawList, limit, allowVoid) { // main parser
      limit = limit || Infinity;
      var ret = '', list = [];
      function flushList() {
        return '(' + list.join(', ') + ')';
      }
      var name;
      if (func[i] === 'N') {
        // namespaced N-E
        name = parseNested().join('::');
        limit--;
        if (limit === 0) return rawList ? [name] : name;
      } else {
        // not namespaced
        if (func[i] === 'K' || (first && func[i] === 'L')) i++; // ignore const and first 'L'
        var size = parseInt(func.substr(i));
        if (size) {
          var pre = size.toString().length;
          name = func.substr(i + pre, size);
          i += pre + size;
        }
      }
      first = false;
      if (func[i] === 'I') {
        i++;
        var iList = parse(true);
        var iRet = parse(true, 1, true);
        ret += iRet[0] + ' ' + name + '<' + iList.join(', ') + '>';
      } else {
        ret = name;
      }
      paramLoop: while (i < func.length && limit-- > 0) {
        //dump('paramLoop');
        var c = func[i++];
        if (c in basicTypes) {
          list.push(basicTypes[c]);
        } else {
          switch (c) {
            case 'P': list.push(parse(true, 1, true)[0] + '*'); break; // pointer
            case 'R': list.push(parse(true, 1, true)[0] + '&'); break; // reference
            case 'L': { // literal
              i++; // skip basic type
              var end = func.indexOf('E', i);
              var size = end - i;
              list.push(func.substr(i, size));
              i += size + 2; // size + 'EE'
              break;
            }
            case 'A': { // array
              var size = parseInt(func.substr(i));
              i += size.toString().length;
              if (func[i] !== '_') throw '?';
              i++; // skip _
              list.push(parse(true, 1, true)[0] + ' [' + size + ']');
              break;
            }
            case 'E': break paramLoop;
            default: ret += '?' + c; break paramLoop;
          }
        }
      }
      if (!allowVoid && list.length === 1 && list[0] === 'void') list = []; // avoid (void)
      return rawList ? list : ret + flushList();
    }
    return parse();
  } catch(e) {
    return func;
  }
}
function demangleAll(text) {
  return text.replace(/__Z[\w\d_]+/g, function(x) { var y = demangle(x); return x === y ? x : (x + ' [' + y + ']') });
}
function stackTrace() {
  var stack = new Error().stack;
  return stack ? demangleAll(stack) : '(no stack trace available)'; // Stack trace is not available at least on IE10 and Safari 6.
}
// Memory management
var PAGE_SIZE = 4096;
function alignMemoryPage(x) {
  return (x+4095)&-4096;
}
var HEAP;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;
var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false; // static area
var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0; // stack area
var DYNAMIC_BASE = 0, DYNAMICTOP = 0; // dynamic area handled by sbrk
function enlargeMemory() {
  abort('Cannot enlarge memory arrays. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value ' + TOTAL_MEMORY + ', (2) compile with ALLOW_MEMORY_GROWTH which adjusts the size at runtime but prevents some optimizations, or (3) set Module.TOTAL_MEMORY before the program runs.');
}
var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 16777216;
var FAST_MEMORY = Module['FAST_MEMORY'] || 2097152;
// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
       'Cannot fallback to non-typed array case: Code is too specialized');
var buffer = new ArrayBuffer(TOTAL_MEMORY);
HEAP8 = new Int8Array(buffer);
HEAP16 = new Int16Array(buffer);
HEAP32 = new Int32Array(buffer);
HEAPU8 = new Uint8Array(buffer);
HEAPU16 = new Uint16Array(buffer);
HEAPU32 = new Uint32Array(buffer);
HEAPF32 = new Float32Array(buffer);
HEAPF64 = new Float64Array(buffer);
// Endianness check (note: assumes compiler arch was little-endian)
HEAP32[0] = 255;
assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, 'Typed arrays 2 must be run on a little-endian system');
Module['HEAP'] = HEAP;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;
function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}
var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited
var runtimeInitialized = false;
function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}
function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}
function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}
function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
}
function postRun() {
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}
function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module['addOnPreRun'] = Module.addOnPreRun = addOnPreRun;
function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module['addOnInit'] = Module.addOnInit = addOnInit;
function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module['addOnPreMain'] = Module.addOnPreMain = addOnPreMain;
function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module['addOnExit'] = Module.addOnExit = addOnExit;
function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module['addOnPostRun'] = Module.addOnPostRun = addOnPostRun;
// Tools
// This processes a JS string into a C-line array of numbers, 0-terminated.
// For LLVM-originating strings, see parser.js:parseLLVMString function
function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var ret = (new Runtime.UTF8Processor()).processJSString(stringy);
  if (length) {
    ret.length = length;
  }
  if (!dontAddNull) {
    ret.push(0);
  }
  return ret;
}
Module['intArrayFromString'] = intArrayFromString;
function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
        assert(false, 'Character code ' + chr + ' (' + String.fromCharCode(chr) + ')  at offset ' + i + ' not in 0x00-0xFF.');
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module['intArrayToString'] = intArrayToString;
// Write a Javascript array to somewhere in the heap
function writeStringToMemory(string, buffer, dontAddNull) {
  var array = intArrayFromString(string, dontAddNull);
  var i = 0;
  while (i < array.length) {
    var chr = array[i];
    HEAP8[(((buffer)+(i))|0)]=chr;
    i = i + 1;
  }
}
Module['writeStringToMemory'] = writeStringToMemory;
function writeArrayToMemory(array, buffer) {
  for (var i = 0; i < array.length; i++) {
    HEAP8[(((buffer)+(i))|0)]=array[i];
  }
}
Module['writeArrayToMemory'] = writeArrayToMemory;
function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; i++) {
    assert(str.charCodeAt(i) === str.charCodeAt(i)&0xff);
    HEAP8[(((buffer)+(i))|0)]=str.charCodeAt(i);
  }
  if (!dontAddNull) HEAP8[(((buffer)+(str.length))|0)]=0;
}
Module['writeAsciiToMemory'] = writeAsciiToMemory;
function unSign(value, bits, ignore, sig) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore, sig) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}
if (!Math['imul']) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];
var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_min = Math.min;
// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled
var runDependencyTracking = {};
function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(!runDependencyTracking[id]);
    runDependencyTracking[id] = 1;
    if (runDependencyWatcher === null && typeof setInterval !== 'undefined') {
      // Check for missing dependencies every few seconds
      runDependencyWatcher = setInterval(function() {
        var shown = false;
        for (var dep in runDependencyTracking) {
          if (!shown) {
            shown = true;
            Module.printErr('still waiting on run dependencies:');
          }
          Module.printErr('dependency: ' + dep);
        }
        if (shown) {
          Module.printErr('(end of list)');
        }
      }, 10000);
    }
  } else {
    Module.printErr('warning: run dependency added without ID');
  }
}
Module['addRunDependency'] = addRunDependency;
function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(runDependencyTracking[id]);
    delete runDependencyTracking[id];
  } else {
    Module.printErr('warning: run dependency removed without ID');
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module['removeRunDependency'] = removeRunDependency;
Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data
var memoryInitializer = null;
// === Body ===
STATIC_BASE = 8;
STATICTOP = STATIC_BASE + 16064;
var _stdout;
var _stdout=_stdout=allocate([0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);
var _stdin;
var _stdin=_stdin=allocate([0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);
var _stderr;
var _stderr=_stderr=allocate([0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);
/* global initializers */ __ATINIT__.push({ func: function() { runPostSets() } },{ func: function() { __GLOBAL__I_a() } });
var ___fsmu8;
var ___dso_handle;
var ___dso_handle=___dso_handle=allocate([0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);
var __ZTVN10__cxxabiv120__si_class_type_infoE;
__ZTVN10__cxxabiv120__si_class_type_infoE=allocate([0,0,0,0,240,45,0,0,10,3,0,0,148,1,0,0,176,0,0,0,154,1,0,0,218,0,0,0,114,0,0,0,2,1,0,0,38,1,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);
var __ZTVN10__cxxabiv117__class_type_infoE;
__ZTVN10__cxxabiv117__class_type_infoE=allocate([0,0,0,0,0,46,0,0,10,3,0,0,2,3,0,0,176,0,0,0,154,1,0,0,218,0,0,0,76,2,0,0,32,1,0,0,170,1,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);
var __ZNSt13runtime_errorC1EPKc;
var __ZNSt13runtime_errorD1Ev;
var __ZNSt12length_errorD1Ev;
var __ZNSt3__16localeC1Ev;
var __ZNSt3__16localeC1ERKS0_;
var __ZNSt3__16localeD1Ev;
var __ZNSt8bad_castC1Ev;
var __ZNSt8bad_castD1Ev;
/* memory initializer */ allocate([0,0,0,0,0,0,36,64,0,0,0,0,0,0,89,64,0,0,0,0,0,136,195,64,0,0,0,0,132,215,151,65,0,128,224,55,121,195,65,67,23,110,5,181,181,184,147,70,245,249,63,233,3,79,56,77,50,29,48,249,72,119,130,90,60,191,115,127,221,79,21,117,74,117,108,0,0,0,0,0,74,117,110,0,0,0,0,0,65,112,114,0,0,0,0,0,77,97,114,0,0,0,0,0,117,110,115,117,112,112,111,114,116,101,100,32,108,111,99,97,108,101,32,102,111,114,32,115,116,97,110,100,97,114,100,32,105,110,112,117,116,0,0,0,70,101,98,0,0,0,0,0,74,97,110,0,0,0,0,0,68,101,99,101,109,98,101,114,0,0,0,0,0,0,0,0,78,111,118,101,109,98,101,114,0,0,0,0,0,0,0,0,79,99,116,111,98,101,114,0,83,101,112,116,101,109,98,101,114,0,0,0,0,0,0,0,69,97,99,104,32,100,101,108,97,121,45,108,105,110,101,32,115,105,103,110,97,108,32,105,115,32,115,112,108,105,116,32,105,110,116,111,32,102,114,101,113,117,101,110,99,121,45,98,97,110,100,115,32,102,111,114,32,115,101,112,97,114,97,116,101,32,100,101,99,97,121,45,116,105,109,101,32,99,111,110,116,114,111,108,32,105,110,32,101,97,99,104,32,98,97,110,100,0,0,0,0,0,0,0,65,117,103,117,115,116,0,0,74,117,108,121,0,0,0,0,74,117,110,101,0,0,0,0,77,97,121,0,0,0,0,0,65,112,114,105,108,0,0,0,77,97,114,99,104,0,0,0,70,101,98,114,117,97,114,121,0,0,0,0,0,0,0,0,74,97,110,117,97,114,121,0,98,97,115,105,99,95,115,116,114,105,110,103,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,0,0,0,0,48,0,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,0,0,0,0,66,97,110,100,32,67,114,111,115,115,111,118,101,114,32,70,114,101,113,117,101,110,99,105,101,115,0,0,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,111,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,116,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,117,0,0,0,115,0,0,0,116,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,105,0,0,0,108,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,99,0,0,0,104,0,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,114,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,80,77,0,0,0,0,0,0,65,77,0,0,0,0,0,0,80,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,79,117,116,112,117,116,32,76,101,118,101,108,32,40,100,66,41,0,0,0,0,0,0,0,100,66,0,0,0,0,0,0,79,117,116,112,117,116,32,115,99,97,108,101,32,102,97,99,116,111,114,0,0,0,0,0,81,117,101,110,99,104,0,0,72,111,108,100,32,100,111,119,110,32,39,81,117,101,110,99,104,39,32,116,111,32,99,108,101,97,114,32,116,104,101,32,114,101,118,101,114,98,101,114,97,116,111,114,0,0,0,0,82,101,118,101,114,98,32,83,116,97,116,101,0,0,0,0,82,105,103,104,116,0,0,0,70,69,69,68,66,65,67,75,32,68,69,76,65,89,32,78,69,84,87,79,82,75,32,40,70,68,78,41,32,82,69,86,69,82,66,69,82,65,84,79,82,44,32,79,82,68,69,82,32,49,54,0,0,0,0,0,108,111,99,97,108,101,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,0,0,0,83,101,110,100,32,105,109,112,117,108,115,101,32,105,110,116,111,32,82,73,71,72,84,32,99,104,97,110,110,101,108,0,67,101,110,116,101,114,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,83,101,110,100,32,105,109,112,117,108,115,101,32,105,110,116,111,32,76,69,70,84,32,97,110,100,32,82,73,71,72,84,32,99,104,97,110,110,101,108,115,0,0,0,0,0,0,0,37,73,58,37,77,58,37,83,32,37,112,0,0,0,0,0,76,101,102,116,0,0,0,0,37,0,0,0,97,0,0,0,32,0,0,0,37,0,0,0,98,0,0,0,32,0,0,0,37,0,0,0,100,0,0,0,32,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,89,0,0,0,0,0,0,0,0,0,0,0,83,101,110,100,32,105,109,112,117,108,115,101,32,105,110,116,111,32,76,69,70,84,32,99,104,97,110,110,101,108,0,0,37,97,32,37,98,32,37,100,32,37,72,58,37,77,58,37,83,32,37,89,0,0,0,0,73,109,112,117,108,115,101,32,83,101,108,101,99,116,105,111,110,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,0,0,0,0,0,0,0,0,80,105,110,107,32,78,111,105,115,101,0,0,0,0,0,0,37,72,58,37,77,58,37,83,0,0,0,0,0,0,0,0,115,116,100,58,58,98,97,100,95,97,108,108,111,99,0,0,80,105,110,107,32,78,111,105,115,101,32,40,111,114,32,49,47,102,32,110,111,105,115,101,41,32,105,115,32,67,111,110,115,116,97,110,116,45,81,32,78,111,105,115,101,32,40,117,115,101,102,117,108,32,102,111,114,32,97,100,106,117,115,116,105,110,103,32,116,104,101,32,69,81,32,115,101,99,116,105,111,110,115,41,0,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,77,117,116,101,32,69,120,116,32,73,110,112,117,116,115,0,37,109,47,37,100,47,37,121,0,0,0,0,0,0,0,0,87,104,101,110,32,116,104,105,115,32,105,115,32,99,104,101,99,107,101,100,44,32,116,104,101,32,115,116,101,114,101,111,32,101,120,116,101,114,110,97,108,32,97,117,100,105,111,32,105,110,112,117,116,115,32,97,114,101,32,100,105,115,97,98,108,101,100,32,40,103,111,111,100,32,102,111,114,32,104,101,97,114,105,110,103,32,116,104,101,32,105,109,112,117,108,115,101,32,114,101,115,112,111,110,115,101,32,111,114,32,112,105,110,107,45,110,111,105,115,101,32,114,101,115,112,111,110,115,101,32,97,108,111,110,101,41,0,0,0,0,0,0,0,0,83,101,101,32,70,97,117,115,116,39,115,32,101,102,102,101,99,116,46,108,105,98,32,102,111,114,32,100,111,99,117,109,101,110,116,97,116,105,111,110,32,97,110,100,32,114,101,102,101,114,101,110,99,101,115,0,73,110,112,117,116,32,67,111,110,102,105,103,0,0,0,0,102,0,0,0,97,0,0,0,108,0,0,0,115,0,0,0,101,0,0,0,0,0,0,0,73,110,112,117,116,32,67,111,110,116,114,111,108,115,0,0,37,112,0,0,0,0,0,0,102,97,108,115,101,0,0,0,102,109,97,120,32,97,99,111,117,115,116,105,99,32,114,97,121,32,108,101,110,103,116,104,0,0,0,0,0,0,0,0,116,0,0,0,114,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,84,104,105,115,32,108,101,110,103,116,104,32,40,105,110,32,109,101,116,101,114,115,41,32,100,101,116,101,114,102,109,105,110,101,115,32,116,104,101,32,108,111,110,103,101,115,116,32,100,101,108,97,121,45,108,105,110,101,32,117,115,101,100,32,105,110,32,116,104,101,32,70,68,78,32,114,101,118,101,114,98,101,114,97,116,111,114,46,32,32,32,32,32,9,32,32,32,32,32,32,84,104,105,110,107,32,111,102,32,105,116,32,97,115,32,116,104,101,32,108,97,114,103,101,115,116,32,119,97,108,108,45,116,111,45,119,97,108,108,32,115,101,112,97,114,97,116,105,111,110,32,105,110,32,116,104,101,32,114,111,111,109,46,0,0,0,0,0,116,114,117,101,0,0,0,0,102,109,105,110,32,97,99,111,117,115,116,105,99,32,114,97,121,32,108,101,110,103,116,104,0,0,0,0,0,0,0,0,58,32,0,0,0,0,0,0,109,0,0,0,0,0,0,0,84,104,105,115,32,108,101,110,103,116,104,32,40,105,110,32,109,101,116,101,114,115,41,32,100,101,116,101,114,102,109,105,110,101,115,32,116,104,101,32,115,104,111,114,116,101,115,116,32,100,101,108,97,121,45,108,105,110,101,32,117,115,101,100,32,105,110,32,116,104,101,32,70,68,78,32,114,101,118,101,114,98,101,114,97,116,111,114,46,32,32,32,32,32,9,32,32,32,32,32,32,84,104,105,110,107,32,111,102,32,105,116,32,97,115,32,116,104,101,32,115,104,111,114,116,101,115,116,32,119,97,108,108,45,116,111,45,119,97,108,108,32,115,101,112,97,114,97,116,105,111,110,32,105,110,32,116,104,101,32,114,111,111,109,46,0,0,0,115,116,100,58,58,98,97,100,95,99,97,115,116,0,0,0,82,111,111,109,32,68,105,109,101,110,115,105,111,110,115,0,105,111,115,95,98,97,115,101,58,58,99,108,101,97,114,0,52,0,0,0,0,0,0,0,115,0,0,0,0,0,0,0,116,111,111,108,116,105,112,0,84,54,48,32,105,115,32,116,104,101,32,54,48,100,66,32,100,101,99,97,121,45,116,105,109,101,32,105,110,32,115,101,99,111,110,100,115,46,32,70,111,114,32,99,111,110,99,101,114,116,32,104,97,108,108,115,44,32,97,110,32,111,118,101,114,97,108,108,32,114,101,118,101,114,98,101,114,97,116,105,111,110,32,116,105,109,101,32,40,84,54,48,41,32,110,101,97,114,32,49,46,57,32,115,101,99,111,110,100,115,32,105,115,32,116,121,112,105,99,97,108,32,91,66,101,114,97,110,101,107,32,50,48,48,52,93,46,32,72,101,114,101,32,119,101,32,109,97,121,32,115,101,116,32,84,54,48,32,105,110,100,101,112,101,110,100,101,110,116,108,121,32,105,110,32,101,97,99,104,32,102,114,101,113,117,101,110,99,121,32,98,97,110,100,46,32,32,73,110,32,114,101,97,108,32,114,111,111,109,115,44,32,104,105,103,104,101,114,32,102,114,101,113,117,101,110,99,121,32,98,97,110,100,115,32,103,101,110,101,114,97,108,108,121,32,100,101,99,97,121,32,102,97,115,116,101,114,32,100,117,101,32,116,111,32,97,98,115,111,114,112,116,105,111,110,32,97,110,100,32,115,99,97,116,116,101,114,105,110,103,46,0,0,0,0,0,66,97,110,100,32,68,101,99,97,121,32,84,105,109,101,115,32,40,84,54,48,41,0,0,67,0,0,0,0,0,0,0,66,97,110,100,32,51,32,117,112,112,101,114,32,101,100,103,101,32,105,110,32,72,122,0,118,101,99,116,111,114,0,0,51,0,0,0,0,0,0,0,37,46,48,76,102,0,0,0,66,97,110,100,32,50,32,117,112,112,101,114,32,101,100,103,101,32,105,110,32,72,122,0,109,111,110,101,121,95,103,101,116,32,101,114,114,111,114,0,50,0,0,0,0,0,0,0,83,97,116,0,0,0,0,0,70,114,105,0,0,0,0,0,105,111,115,116,114,101,97,109,0,0,0,0,0,0,0,0,37,76,102,0,0,0,0,0,84,104,117,0,0,0,0,0,87,101,100,0,0,0,0,0,84,117,101,0,0,0,0,0,66,97,110,100,32,49,32,117,112,112,101,114,32,101,100,103,101,32,105,110,32,72,122,0,77,111,110,0,0,0,0,0,83,117,110,0,0,0,0,0,83,97,116,117,114,100,97,121,0,0,0,0,0,0,0,0,70,114,105,100,97,121,0,0,84,104,117,114,115,100,97,121,0,0,0,0,0,0,0,0,87,101,100,110,101,115,100,97,121,0,0,0,0,0,0,0,84,117,101,115,100,97,121,0,77,111,110,100,97,121,0,0,83,117,110,100,97,121,0,0,66,97,110,100,32,48,32,117,112,112,101,114,32,101,100,103,101,32,105,110,32,72,122,0,83,0,0,0,97,0,0,0,116,0,0,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,0,0,0,0,117,110,115,112,101,99,105,102,105,101,100,32,105,111,115,116,114,101,97,109,95,99,97,116,101,103,111,114,121,32,101,114,114,111,114,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,117,0,0,0,114,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,114,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,72,122,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,110,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,68,101,99,0,0,0,0,0,78,111,118,0,0,0,0,0,79,99,116,0,0,0,0,0,83,101,112,0,0,0,0,0,65,117,103,0,0,0,0,0,117,110,105,116,0,0,0,0,114,101,118,101,114,98,68,101,115,105,103,110,101,114,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,0,0,0,0,0,0,37,0,0,0,89,0,0,0,45,0,0,0,37,0,0,0,109,0,0,0,45,0,0,0,37,0,0,0,100,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,0,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,37,72,58,37,77,58,37,83,37,72,58,37,77,0,0,0,37,73,58,37,77,58,37,83,32,37,112,0,0,0,0,0,37,89,45,37,109,45,37,100,37,109,47,37,100,47,37,121,37,72,58,37,77,58,37,83,37,0,0,0,0,0,0,0,37,112,0,0,0,0,0,0,0,0,0,0,8,40,0,0,74,0,0,0,80,1,0,0,160,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,40,0,0,50,2,0,0,186,1,0,0,220,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,40,0,0,204,0,0,0,36,3,0,0,234,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,40,0,0,16,1,0,0,18,0,0,0,164,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,40,0,0,16,1,0,0,42,0,0,0,164,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,40,0,0,194,1,0,0,238,0,0,0,134,0,0,0,238,1,0,0,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,40,0,0,22,3,0,0,254,1,0,0,134,0,0,0,236,2,0,0,116,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,40,0,0,184,1,0,0,2,2,0,0,134,0,0,0,242,1,0,0,8,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,40,0,0,28,3,0,0,132,1,0,0,134,0,0,0,222,1,0,0,64,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,41,0,0,16,3,0,0,10,1,0,0,134,0,0,0,138,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,41,0,0,182,1,0,0,64,1,0,0,134,0,0,0,188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,41,0,0,100,0,0,0,66,1,0,0,134,0,0,0,178,2,0,0,22,0,0,0,4,2,0,0,32,0,0,0,216,0,0,0,180,2,0,0,244,0,0,0,248,255,255,255,160,41,0,0,130,0,0,0,52,0,0,0,196,0,0,0,88,0,0,0,8,0,0,0,180,0,0,0,208,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,200,41,0,0,254,2,0,0,192,2,0,0,134,0,0,0,126,0,0,0,144,0,0,0,210,2,0,0,146,1,0,0,178,0,0,0,16,0,0,0,150,2,0,0,248,255,255,255,200,41,0,0,118,1,0,0,98,2,0,0,152,2,0,0,200,2,0,0,62,2,0,0,4,1,0,0,48,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,41,0,0,226,0,0,0,12,2,0,0,134,0,0,0,26,1,0,0,242,0,0,0,132,0,0,0,122,1,0,0,206,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,42,0,0,172,0,0,0,190,0,0,0,134,0,0,0,252,0,0,0,250,1,0,0,174,0,0,0,230,1,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,42,0,0,4,3,0,0,2,0,0,0,134,0,0,0,158,1,0,0,18,3,0,0,80,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,42,0,0,128,0,0,0,146,2,0,0,134,0,0,0,190,2,0,0,224,0,0,0,200,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,42,0,0,166,2,0,0,74,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,42,0,0,70,0,0,0,130,1,0,0,234,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,42,0,0,14,0,0,0,200,1,0,0,134,0,0,0,112,0,0,0,98,0,0,0,92,0,0,0,96,0,0,0,90,0,0,0,108,0,0,0,106,0,0,0,168,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,42,0,0,24,1,0,0,40,0,0,0,134,0,0,0,44,2,0,0,48,2,0,0,36,2,0,0,46,2,0,0,22,1,0,0,40,2,0,0,38,2,0,0,204,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,42,0,0,102,0,0,0,54,0,0,0,134,0,0,0,110,2,0,0,106,2,0,0,96,2,0,0,100,2,0,0,246,1,0,0,104,2,0,0,94,2,0,0,116,2,0,0,114,2,0,0,112,2,0,0,106,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,200,42,0,0,148,0,0,0,4,0,0,0,134,0,0,0,250,2,0,0,234,2,0,0,228,2,0,0,230,2,0,0,206,2,0,0,232,2,0,0,226,2,0,0,244,2,0,0,242,2,0,0,240,2,0,0,102,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,232,42,0,0,214,0,0,0,6,1,0,0,134,0,0,0,102,1,0,0,30,2,0,0,68,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,42,0,0,68,0,0,0,208,1,0,0,134,0,0,0,24,2,0,0,136,2,0,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,43,0,0,24,0,0,0,244,1,0,0,134,0,0,0,84,0,0,0,234,1,0,0,226,1,0,0,176,2,0,0,84,2,0,0,162,2,0,0,142,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,43,0,0,216,1,0,0,114,1,0,0,134,0,0,0,216,2,0,0,20,3,0,0,56,2,0,0,186,0,0,0,50,0,0,0,60,2,0,0,42,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,43,0,0,216,1,0,0,44,0,0,0,134,0,0,0,14,1,0,0,124,0,0,0,248,0,0,0,78,2,0,0,76,1,0,0,176,1,0,0,246,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,43,0,0,216,1,0,0,42,1,0,0,134,0,0,0,34,2,0,0,202,1,0,0,134,2,0,0,170,0,0,0,150,1,0,0,128,1,0,0,26,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,43,0,0,216,1,0,0,82,0,0,0,134,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,43,0,0,162,0,0,0,168,1,0,0,134,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,43,0,0,216,1,0,0,232,0,0,0,134,0,0,0,136,1,0,0,202,0,0,0,92,1,0,0,12,3,0,0,206,0,0,0,66,2,0,0,16,2,0,0,62,0,0,0,136,0,0,0,156,2,0,0,52,1,0,0,208,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,200,43,0,0,34,3,0,0,94,0,0,0,134,0,0,0,166,0,0,0,58,0,0,0,108,1,0,0,148,2,0,0,156,0,0,0,112,1,0,0,188,1,0,0,94,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,43,0,0,194,0,0,0,182,2,0,0,172,1,0,0,74,2,0,0,84,1,0,0,120,2,0,0,126,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,44,0,0,216,1,0,0,240,0,0,0,134,0,0,0,34,2,0,0,202,1,0,0,134,2,0,0,170,0,0,0,150,1,0,0,128,1,0,0,26,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,44,0,0,216,1,0,0,190,1,0,0,134,0,0,0,34,2,0,0,202,1,0,0,134,2,0,0,170,0,0,0,150,1,0,0,128,1,0,0,26,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,44,0,0,98,1,0,0,218,2,0,0,210,0,0,0,156,1,0,0,18,1,0,0,72,2,0,0,18,2,0,0,88,2,0,0,138,2,0,0,164,0,0,0,150,0,0,0,142,0,0,0,30,3,0,0,6,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,44,0,0,20,0,0,0,82,1,0,0,14,2,0,0,202,2,0,0,198,2,0,0,26,2,0,0,28,1,0,0,0,2,0,0,104,1,0,0,36,0,0,0,64,0,0,0,220,2,0,0,88,1,0,0,196,2,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,96,44,0,0,124,2,0,0,130,2,0,0,252,255,255,255,252,255,255,255,96,44,0,0,142,1,0,0,96,1,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,120,44,0,0,168,2,0,0,222,2,0,0,252,255,255,255,252,255,255,255,120,44,0,0,62,1,0,0,68,2,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,144,44,0,0,246,0,0,0,38,3,0,0,248,255,255,255,248,255,255,255,144,44,0,0,218,1,0,0,214,2,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,168,44,0,0,58,1,0,0,92,2,0,0,248,255,255,255,248,255,255,255,168,44,0,0,124,1,0,0,146,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,44,0,0,82,2,0,0,220,1,0,0,234,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,232,44,0,0,6,3,0,0,224,1,0,0,198,0,0,0,156,1,0,0,18,1,0,0,72,2,0,0,54,1,0,0,88,2,0,0,138,2,0,0,164,0,0,0,150,0,0,0,142,0,0,0,108,2,0,0,224,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,44,0,0,162,1,0,0,214,1,0,0,70,1,0,0,202,2,0,0,198,2,0,0,26,2,0,0,20,2,0,0,0,2,0,0,104,1,0,0,36,0,0,0,64,0,0,0,220,2,0,0,248,2,0,0,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,45,0,0,184,2,0,0,138,1,0,0,134,0,0,0,116,1,0,0,158,2,0,0,144,1,0,0,14,3,0,0,60,0,0,0,44,1,0,0,40,1,0,0,228,0,0,0,110,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,45,0,0,56,1,0,0,158,0,0,0,134,0,0,0,132,2,0,0,10,0,0,0,86,2,0,0,188,2,0,0,204,2,0,0,0,1,0,0,144,2,0,0,210,1,0,0,152,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,45,0,0,194,2,0,0,78,1,0,0,134,0,0,0,110,0,0,0,72,1,0,0,76,0,0,0,164,1,0,0,212,2,0,0,212,1,0,0,58,2,0,0,236,1,0,0,182,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,45,0,0,222,0,0,0,198,1,0,0,134,0,0,0,90,2,0,0,118,2,0,0,36,1,0,0,154,2,0,0,8,1,0,0,212,0,0,0,174,1,0,0,128,2,0,0,122,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,45,0,0,250,0,0,0,38,0,0,0,100,1,0,0,156,1,0,0,18,1,0,0,72,2,0,0,18,2,0,0,88,2,0,0,138,2,0,0,126,1,0,0,228,1,0,0,184,0,0,0,30,3,0,0,6,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,45,0,0,30,0,0,0,172,2,0,0,28,2,0,0,202,2,0,0,198,2,0,0,26,2,0,0,28,1,0,0,0,2,0,0,104,1,0,0,70,2,0,0,140,0,0,0,34,0,0,0,88,1,0,0,196,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,45,0,0,10,3,0,0,54,2,0,0,176,0,0,0,154,1,0,0,218,0,0,0,72,0,0,0,160,2,0,0,46,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,46,0,0,30,1,0,0,8,2,0,0,0,3,0,0,118,0,0,0,80,0,0,0,26,0,0,0,60,1,0,0,24,3,0,0,86,0,0,0,160,0,0,0,154,0,0,0,248,1,0,0,122,0,0,0,240,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,46,0,0,186,2,0,0,254,0,0,0,10,2,0,0,10,2,0,0,10,2,0,0,10,2,0,0,10,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,46,0,0,238,2,0,0,170,2,0,0,10,2,0,0,10,2,0,0,10,2,0,0,10,2,0,0,10,2,0,0,10,2,0,0,10,2,0,0,10,2,0,0,10,2,0,0,10,2,0,0,10,2,0,0,120,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,46,0,0,32,2,0,0,252,1,0,0,140,1,0,0,180,1,0,0,140,2,0,0,34,1,0,0,12,0,0,0,230,0,0,0,232,1,0,0,12,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,46,0,0,66,0,0,0,52,2,0,0,140,1,0,0,180,1,0,0,140,2,0,0,34,1,0,0,12,0,0,0,230,0,0,0,232,1,0,0,12,1,0,0,0,0,0,0,0,0,0,0,83,116,57,116,121,112,101,95,105,110,102,111,0,0,0,0,83,116,57,101,120,99,101,112,116,105,111,110,0,0,0,0,83,116,57,98,97,100,95,97,108,108,111,99,0,0,0,0,83,116,56,98,97,100,95,99,97,115,116,0,0,0,0,0,83,116,49,51,114,117,110,116,105,109,101,95,101,114,114,111,114,0,0,0,0,0,0,0,83,116,49,50,108,101,110,103,116,104,95,101,114,114,111,114,0,0,0,0,0,0,0,0,83,116,49,49,108,111,103,105,99,95,101,114,114,111,114,0,78,83,116,51,95,95,49,57,116,105,109,101,95,98,97,115,101,69,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,119,69,69,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,99,69,69,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,119,69,69,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,99,69,69,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,119,69,69,0,0,0,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,99,69,69,0,0,0,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,119,69,69,0,0,0,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,99,69,69,0,0,0,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,55,102,97,105,108,117,114,101,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,119,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,99,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,119,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,99,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,115,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,105,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,102,97,99,101,116,69,0,0,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,95,95,105,109,112,69,0,0,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,119,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,99,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,119,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,99,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,57,95,95,105,111,115,116,114,101,97,109,95,99,97,116,101,103,111,114,121,69,0,0,0,78,83,116,51,95,95,49,49,55,95,95,119,105,100,101,110,95,102,114,111,109,95,117,116,102,56,73,76,106,51,50,69,69,69,0,0,0,0,0,0,78,83,116,51,95,95,49,49,54,95,95,110,97,114,114,111,119,95,116,111,95,117,116,102,56,73,76,106,51,50,69,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,101,114,114,111,114,95,99,97,116,101,103,111,114,121,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,95,95,115,104,97,114,101,100,95,99,111,117,110,116,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,112,117,116,95,98,97,115,101,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,103,101,116,95,98,97,115,101,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,51,109,101,115,115,97,103,101,115,95,98,97,115,101,69,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,78,83,116,51,95,95,49,49,50,115,121,115,116,101,109,95,101,114,114,111,114,69,0,0,78,83,116,51,95,95,49,49,50,99,111,100,101,99,118,116,95,98,97,115,101,69,0,0,78,83,116,51,95,95,49,49,50,95,95,100,111,95,109,101,115,115,97,103,101,69,0,0,78,83,116,51,95,95,49,49,49,95,95,115,116,100,111,117,116,98,117,102,73,119,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,115,116,100,111,117,116,98,117,102,73,99,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,119,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,99,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,119,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,99,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,49,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,48,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,49,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,48,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,95,98,97,115,101,69,0,0,0,0,78,83,116,51,95,95,49,49,48,99,116,121,112,101,95,98,97,115,101,69,0,0,0,0,78,83,116,51,95,95,49,49,48,95,95,116,105,109,101,95,112,117,116,69,0,0,0,0,78,83,116,51,95,95,49,49,48,95,95,115,116,100,105,110,98,117,102,73,119,69,69,0,78,83,116,51,95,95,49,49,48,95,95,115,116,100,105,110,98,117,102,73,99,69,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,49,95,95,118,109,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,48,95,95,115,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,54,95,95,115,104,105,109,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,0,52,74,83,85,73,0,0,0,51,100,115,112,0,0,0,0,50,85,73,0,0,0,0,0,49,57,82,101,118,101,114,98,68,101,115,105,103,110,101,114,95,119,114,97,112,0,0,0,49,52,82,101,118,101,114,98,68,101,115,105,103,110,101,114,0,0,0,0,0,0,0,0,0,0,0,0,8,28,0,0,0,0,0,0,24,28,0,0].concat([0,0,0,0,40,28,0,0,0,40,0,0,0,0,0,0,0,0,0,0,56,28,0,0,0,40,0,0,0,0,0,0,0,0,0,0,72,28,0,0,0,40,0,0,0,0,0,0,0,0,0,0,96,28,0,0,72,40,0,0,0,0,0,0,0,0,0,0,120,28,0,0,0,40,0,0,0,0,0,0,0,0,0,0,136,28,0,0,176,26,0,0,160,28,0,0,0,0,0,0,2,0,0,0,136,43,0,0,2,0,0,0,8,45,0,0,0,0,0,0,176,26,0,0,232,28,0,0,0,0,0,0,2,0,0,0,136,43,0,0,2,0,0,0,16,45,0,0,0,0,0,0,176,26,0,0,48,29,0,0,0,0,0,0,2,0,0,0,136,43,0,0,2,0,0,0,24,45,0,0,0,0,0,0,176,26,0,0,120,29,0,0,0,0,0,0,2,0,0,0,136,43,0,0,2,0,0,0,32,45,0,0,0,0,0,0,0,0,0,0,192,29,0,0,80,42,0,0,0,0,0,0,0,0,0,0,240,29,0,0,80,42,0,0,0,0,0,0,176,26,0,0,32,30,0,0,0,0,0,0,1,0,0,0,72,44,0,0,0,0,0,0,176,26,0,0,56,30,0,0,0,0,0,0,1,0,0,0,72,44,0,0,0,0,0,0,176,26,0,0,80,30,0,0,0,0,0,0,1,0,0,0,80,44,0,0,0,0,0,0,176,26,0,0,104,30,0,0,0,0,0,0,1,0,0,0,80,44,0,0,0,0,0,0,176,26,0,0,128,30,0,0,0,0,0,0,2,0,0,0,136,43,0,0,2,0,0,0,184,45,0,0,0,8,0,0,176,26,0,0,200,30,0,0,0,0,0,0,2,0,0,0,136,43,0,0,2,0,0,0,184,45,0,0,0,8,0,0,176,26,0,0,16,31,0,0,0,0,0,0,3,0,0,0,136,43,0,0,2,0,0,0,88,40,0,0,2,0,0,0,232,43,0,0,0,8,0,0,176,26,0,0,88,31,0,0,0,0,0,0,3,0,0,0,136,43,0,0,2,0,0,0,88,40,0,0,2,0,0,0,240,43,0,0,0,8,0,0,0,0,0,0,160,31,0,0,136,43,0,0,0,0,0,0,0,0,0,0,184,31,0,0,136,43,0,0,0,0,0,0,176,26,0,0,208,31,0,0,0,0,0,0,2,0,0,0,136,43,0,0,2,0,0,0,88,44,0,0,2,0,0,0,176,26,0,0,232,31,0,0,0,0,0,0,2,0,0,0,136,43,0,0,2,0,0,0,88,44,0,0,2,0,0,0,0,0,0,0,0,32,0,0,0,0,0,0,24,32,0,0,192,44,0,0,0,0,0,0,176,26,0,0,56,32,0,0,0,0,0,0,2,0,0,0,136,43,0,0,2,0,0,0,0,41,0,0,0,0,0,0,176,26,0,0,128,32,0,0,0,0,0,0,2,0,0,0,136,43,0,0,2,0,0,0,24,41,0,0,0,0,0,0,176,26,0,0,200,32,0,0,0,0,0,0,2,0,0,0,136,43,0,0,2,0,0,0,48,41,0,0,0,0,0,0,176,26,0,0,16,33,0,0,0,0,0,0,2,0,0,0,136,43,0,0,2,0,0,0,72,41,0,0,0,0,0,0,0,0,0,0,88,33,0,0,136,43,0,0,0,0,0,0,0,0,0,0,112,33,0,0,136,43,0,0,0,0,0,0,176,26,0,0,136,33,0,0,0,0,0,0,2,0,0,0,136,43,0,0,2,0,0,0,208,44,0,0,2,0,0,0,176,26,0,0,176,33,0,0,0,0,0,0,2,0,0,0,136,43,0,0,2,0,0,0,208,44,0,0,2,0,0,0,176,26,0,0,216,33,0,0,0,0,0,0,2,0,0,0,136,43,0,0,2,0,0,0,208,44,0,0,2,0,0,0,176,26,0,0,0,34,0,0,0,0,0,0,2,0,0,0,136,43,0,0,2,0,0,0,208,44,0,0,2,0,0,0,0,0,0,0,40,34,0,0,64,44,0,0,0,0,0,0,0,0,0,0,64,34,0,0,136,43,0,0,0,0,0,0,176,26,0,0,88,34,0,0,0,0,0,0,2,0,0,0,136,43,0,0,2,0,0,0,176,45,0,0,2,0,0,0,176,26,0,0,112,34,0,0,0,0,0,0,2,0,0,0,136,43,0,0,2,0,0,0,176,45,0,0,2,0,0,0,0,0,0,0,136,34,0,0,0,0,0,0,176,34,0,0,0,0,0,0,216,34,0,0,216,44,0,0,0,0,0,0,0,0,0,0,248,34,0,0,104,43,0,0,0,0,0,0,0,0,0,0,32,35,0,0,104,43,0,0,0,0,0,0,0,0,0,0,72,35,0,0,0,0,0,0,128,35,0,0,0,0,0,0,184,35,0,0,0,0,0,0,216,35,0,0,0,0,0,0,248,35,0,0,0,0,0,0,24,36,0,0,0,0,0,0,56,36,0,0,176,26,0,0,80,36,0,0,0,0,0,0,1,0,0,0,224,40,0,0,3,244,255,255,176,26,0,0,128,36,0,0,0,0,0,0,1,0,0,0,240,40,0,0,3,244,255,255,176,26,0,0,176,36,0,0,0,0,0,0,1,0,0,0,224,40,0,0,3,244,255,255,176,26,0,0,224,36,0,0,0,0,0,0,1,0,0,0,240,40,0,0,3,244,255,255,0,0,0,0,16,37,0,0,40,40,0,0,0,0,0,0,0,0,0,0,40,37,0,0,0,0,0,0,64,37,0,0,56,44,0,0,0,0,0,0,0,0,0,0,88,37,0,0,40,44,0,0,0,0,0,0,0,0,0,0,120,37,0,0,48,44,0,0,0,0,0,0,0,0,0,0,152,37,0,0,0,0,0,0,184,37,0,0,0,0,0,0,216,37,0,0,0,0,0,0,248,37,0,0,176,26,0,0,24,38,0,0,0,0,0,0,2,0,0,0,136,43,0,0,2,0,0,0,168,45,0,0,2,0,0,0,176,26,0,0,56,38,0,0,0,0,0,0,2,0,0,0,136,43,0,0,2,0,0,0,168,45,0,0,2,0,0,0,176,26,0,0,88,38,0,0,0,0,0,0,2,0,0,0,136,43,0,0,2,0,0,0,168,45,0,0,2,0,0,0,176,26,0,0,120,38,0,0,0,0,0,0,2,0,0,0,136,43,0,0,2,0,0,0,168,45,0,0,2,0,0,0,0,0,0,0,152,38,0,0,0,0,0,0,176,38,0,0,0,0,0,0,200,38,0,0,0,0,0,0,224,38,0,0,40,44,0,0,0,0,0,0,0,0,0,0,248,38,0,0,48,44,0,0,0,0,0,0,0,0,0,0,16,39,0,0,0,46,0,0,0,0,0,0,0,0,0,0,56,39,0,0,0,46,0,0,0,0,0,0,0,0,0,0,96,39,0,0,16,46,0,0,0,0,0,0,0,0,0,0,136,39,0,0,248,39,0,0,0,0,0,0,0,0,0,0,176,39,0,0,56,46,0,0,0,0,0,0,0,0,0,0,184,39,0,0,0,0,0,0,192,39,0,0,0,0,0,0,200,39,0,0,80,46,0,0,0,0,0,0,0,0,0,0,224,39,0,0,48,46,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102,65,66,67,68,69,70,120,88,43,45,112,80,105,73,110,78,0,0,0,0,0,0,0,0])
, "i8", ALLOC_NONE, Runtime.GLOBAL_BASE)
function runPostSets() {
HEAP32[((10232 )>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((10240 )>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((10248 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((10264 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((10280 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((10296 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((10312 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((10328 )>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((10464 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((10480 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((10736 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((10752 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((10832 )>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((10840 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((10984 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((11000 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((11144 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((11160 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((11240 )>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((11248 )>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((11256 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((11272 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((11288 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((11304 )>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((11312 )>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((11320 )>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((11328 )>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((11336 )>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((11344 )>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((11352 )>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((11456 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((11472 )>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((11480 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((11496 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((11512 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((11528 )>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((11536 )>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((11544 )>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((11552 )>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((11688 )>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((11696 )>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((11704 )>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((11712 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((11728 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((11744 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((11760 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((11776 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((11792 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((11808 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((11824 )>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((11832 )>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((11840 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((11856 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
}
var tempDoublePtr = Runtime.alignMemory(allocate(12, "i8", ALLOC_STATIC), 8);
assert(tempDoublePtr % 8 == 0);
function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much
  HEAP8[tempDoublePtr] = HEAP8[ptr];
  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];
  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];
  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];
}
function copyTempDouble(ptr) {
  HEAP8[tempDoublePtr] = HEAP8[ptr];
  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];
  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];
  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];
  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];
  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];
  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];
  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];
}
  function _memset(ptr, value, num) {
      ptr = ptr|0; value = value|0; num = num|0;
      var stop = 0, value4 = 0, stop4 = 0, unaligned = 0;
      stop = (ptr + num)|0;
      if ((num|0) >= 20) {
        // This is unaligned, but quite large, so work hard to get to aligned settings
        value = value & 0xff;
        unaligned = ptr & 3;
        value4 = value | (value << 8) | (value << 16) | (value << 24);
        stop4 = stop & ~3;
        if (unaligned) {
          unaligned = (ptr + 4 - unaligned)|0;
          while ((ptr|0) < (unaligned|0)) { // no need to check for stop, since we have large num
            HEAP8[(ptr)]=value;
            ptr = (ptr+1)|0;
          }
        }
        while ((ptr|0) < (stop4|0)) {
          HEAP32[((ptr)>>2)]=value4;
          ptr = (ptr+4)|0;
        }
      }
      while ((ptr|0) < (stop|0)) {
        HEAP8[(ptr)]=value;
        ptr = (ptr+1)|0;
      }
      return (ptr-num)|0;
    }var _llvm_memset_p0i8_i32=_memset;
  function ___gxx_personality_v0() {
    }
  function _memcpy(dest, src, num) {
      dest = dest|0; src = src|0; num = num|0;
      var ret = 0;
      ret = dest|0;
      if ((dest&3) == (src&3)) {
        while (dest & 3) {
          if ((num|0) == 0) return ret|0;
          HEAP8[(dest)]=HEAP8[(src)];
          dest = (dest+1)|0;
          src = (src+1)|0;
          num = (num-1)|0;
        }
        while ((num|0) >= 4) {
          HEAP32[((dest)>>2)]=HEAP32[((src)>>2)];
          dest = (dest+4)|0;
          src = (src+4)|0;
          num = (num-4)|0;
        }
      }
      while ((num|0) > 0) {
        HEAP8[(dest)]=HEAP8[(src)];
        dest = (dest+1)|0;
        src = (src+1)|0;
        num = (num-1)|0;
      }
      return ret|0;
    }var _llvm_memcpy_p0i8_p0i8_i32=_memcpy;
  function _strcpy(pdest, psrc) {
      pdest = pdest|0; psrc = psrc|0;
      var i = 0;
      do {
        HEAP8[(((pdest+i)|0)|0)]=HEAP8[(((psrc+i)|0)|0)];
        i = (i+1)|0;
      } while (HEAP8[(((psrc)+(i-1))|0)]);
      return pdest|0;
    }
  function ___cxa_call_unexpected(exception) {
      Module.printErr('Unexpected exception thrown, this is not properly supported - aborting');
      ABORT = true;
      throw exception;
    }
  function __exit(status) {
      // void _exit(int status);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/exit.html
      Module['exit'](status);
    }function _exit(status) {
      __exit(status);
    }function __ZSt9terminatev() {
      _exit(-1234);
    }
  function _strlen(ptr) {
      ptr = ptr|0;
      var curr = 0;
      curr = ptr;
      while (HEAP8[(curr)]) {
        curr = (curr + 1)|0;
      }
      return (curr - ptr)|0;
    }
  function ___cxa_allocate_exception(size) {
      return _malloc(size);
    }
  function ___cxa_free_exception(ptr) {
      try {
        return _free(ptr);
      } catch(e) { // XXX FIXME
        Module.printErr('exception during cxa_free_exception: ' + e);
      }
    }
  function _llvm_eh_exception() {
      return HEAP32[((_llvm_eh_exception.buf)>>2)];
    }
  function __ZSt18uncaught_exceptionv() { // std::uncaught_exception()
      return !!__ZSt18uncaught_exceptionv.uncaught_exception;
    }
  function ___cxa_is_number_type(type) {
      var isNumber = false;
      try { if (type == __ZTIi) isNumber = true } catch(e){}
      try { if (type == __ZTIj) isNumber = true } catch(e){}
      try { if (type == __ZTIl) isNumber = true } catch(e){}
      try { if (type == __ZTIm) isNumber = true } catch(e){}
      try { if (type == __ZTIx) isNumber = true } catch(e){}
      try { if (type == __ZTIy) isNumber = true } catch(e){}
      try { if (type == __ZTIf) isNumber = true } catch(e){}
      try { if (type == __ZTId) isNumber = true } catch(e){}
      try { if (type == __ZTIe) isNumber = true } catch(e){}
      try { if (type == __ZTIc) isNumber = true } catch(e){}
      try { if (type == __ZTIa) isNumber = true } catch(e){}
      try { if (type == __ZTIh) isNumber = true } catch(e){}
      try { if (type == __ZTIs) isNumber = true } catch(e){}
      try { if (type == __ZTIt) isNumber = true } catch(e){}
      return isNumber;
    }function ___cxa_does_inherit(definiteType, possibilityType, possibility) {
      if (possibility == 0) return false;
      if (possibilityType == 0 || possibilityType == definiteType)
        return true;
      var possibility_type_info;
      if (___cxa_is_number_type(possibilityType)) {
        possibility_type_info = possibilityType;
      } else {
        var possibility_type_infoAddr = HEAP32[((possibilityType)>>2)] - 8;
        possibility_type_info = HEAP32[((possibility_type_infoAddr)>>2)];
      }
      switch (possibility_type_info) {
      case 0: // possibility is a pointer
        // See if definite type is a pointer
        var definite_type_infoAddr = HEAP32[((definiteType)>>2)] - 8;
        var definite_type_info = HEAP32[((definite_type_infoAddr)>>2)];
        if (definite_type_info == 0) {
          // Also a pointer; compare base types of pointers
          var defPointerBaseAddr = definiteType+8;
          var defPointerBaseType = HEAP32[((defPointerBaseAddr)>>2)];
          var possPointerBaseAddr = possibilityType+8;
          var possPointerBaseType = HEAP32[((possPointerBaseAddr)>>2)];
          return ___cxa_does_inherit(defPointerBaseType, possPointerBaseType, possibility);
        } else
          return false; // one pointer and one non-pointer
      case 1: // class with no base class
        return false;
      case 2: // class with base class
        var parentTypeAddr = possibilityType + 8;
        var parentType = HEAP32[((parentTypeAddr)>>2)];
        return ___cxa_does_inherit(definiteType, parentType, possibility);
      default:
        return false; // some unencountered type
      }
    }
  function ___resumeException(ptr) {
      if (HEAP32[((_llvm_eh_exception.buf)>>2)] == 0) HEAP32[((_llvm_eh_exception.buf)>>2)]=ptr;
      throw ptr;;
    }function ___cxa_find_matching_catch(thrown, throwntype) {
      if (thrown == -1) thrown = HEAP32[((_llvm_eh_exception.buf)>>2)];
      if (throwntype == -1) throwntype = HEAP32[(((_llvm_eh_exception.buf)+(4))>>2)];
      var typeArray = Array.prototype.slice.call(arguments, 2);
      // If throwntype is a pointer, this means a pointer has been
      // thrown. When a pointer is thrown, actually what's thrown
      // is a pointer to the pointer. We'll dereference it.
      if (throwntype != 0 && !___cxa_is_number_type(throwntype)) {
        var throwntypeInfoAddr= HEAP32[((throwntype)>>2)] - 8;
        var throwntypeInfo= HEAP32[((throwntypeInfoAddr)>>2)];
        if (throwntypeInfo == 0)
          thrown = HEAP32[((thrown)>>2)];
      }
      // The different catch blocks are denoted by different types.
      // Due to inheritance, those types may not precisely match the
      // type of the thrown object. Find one which matches, and
      // return the type of the catch block which should be called.
      for (var i = 0; i < typeArray.length; i++) {
        if (___cxa_does_inherit(typeArray[i], throwntype, thrown))
          return tempRet0 = typeArray[i],thrown;
      }
      // Shouldn't happen unless we have bogus data in typeArray
      // or encounter a type for which emscripten doesn't have suitable
      // typeinfo defined. Best-efforts match just in case.
      return tempRet0 = throwntype,thrown;
    }function ___cxa_throw(ptr, type, destructor) {
      if (!___cxa_throw.initialized) {
        try {
          HEAP32[((__ZTVN10__cxxabiv119__pointer_type_infoE)>>2)]=0; // Workaround for libcxxabi integration bug
        } catch(e){}
        try {
          HEAP32[((__ZTVN10__cxxabiv117__class_type_infoE)>>2)]=1; // Workaround for libcxxabi integration bug
        } catch(e){}
        try {
          HEAP32[((__ZTVN10__cxxabiv120__si_class_type_infoE)>>2)]=2; // Workaround for libcxxabi integration bug
        } catch(e){}
        ___cxa_throw.initialized = true;
      }
      HEAP32[((_llvm_eh_exception.buf)>>2)]=ptr
      HEAP32[(((_llvm_eh_exception.buf)+(4))>>2)]=type
      HEAP32[(((_llvm_eh_exception.buf)+(8))>>2)]=destructor
      if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
        __ZSt18uncaught_exceptionv.uncaught_exception = 1;
      } else {
        __ZSt18uncaught_exceptionv.uncaught_exception++;
      }
      throw ptr;;
    }
  function _memcmp(p1, p2, num) {
      p1 = p1|0; p2 = p2|0; num = num|0;
      var i = 0, v1 = 0, v2 = 0;
      while ((i|0) < (num|0)) {
        v1 = HEAPU8[(((p1)+(i))|0)];
        v2 = HEAPU8[(((p2)+(i))|0)];
        if ((v1|0) != (v2|0)) return ((v1|0) > (v2|0) ? 1 : -1)|0;
        i = (i+1)|0;
      }
      return 0;
    }
  function ___cxa_pure_virtual() {
      ABORT = true;
      throw 'Pure virtual function called!';
    }
  function _fmin(x, y) {
      return isNaN(x) ? y : isNaN(y) ? x : Math.min(x, y);
    }
  function _fmax(x, y) {
      return isNaN(x) ? y : isNaN(y) ? x : Math.max(x, y);
    }
  var _powf=Math_pow;
  var _floorf=Math_floor;
  var _logf=Math_log;
  var _expf=Math_exp;
  var _tanf=Math_tan;
  var _llvm_memcpy_p0i8_p0i8_i64=_memcpy;
  function _pthread_mutex_lock() {}
  function _pthread_mutex_unlock() {}
  function ___cxa_guard_acquire(variable) {
      if (!HEAP8[(variable)]) { // ignore SAFE_HEAP stuff because llvm mixes i64 and i8 here
        HEAP8[(variable)]=1;
        return 1;
      }
      return 0;
    }
  function ___cxa_guard_release() {}
  function _pthread_cond_broadcast() {
      return 0;
    }
  function _pthread_cond_wait() {
      return 0;
    }
  function _atexit(func, arg) {
      __ATEXIT__.unshift({ func: func, arg: arg });
    }var ___cxa_atexit=_atexit;
  function ___cxa_begin_catch(ptr) {
      __ZSt18uncaught_exceptionv.uncaught_exception--;
      return ptr;
    }
  function ___cxa_end_catch() {
      if (___cxa_end_catch.rethrown) {
        ___cxa_end_catch.rethrown = false;
        return;
      }
      // Clear state flag.
      __THREW__ = 0;
      // Clear type.
      HEAP32[(((_llvm_eh_exception.buf)+(4))>>2)]=0
      // Call destructor if one is registered then clear it.
      var ptr = HEAP32[((_llvm_eh_exception.buf)>>2)];
      var destructor = HEAP32[(((_llvm_eh_exception.buf)+(8))>>2)];
      if (destructor) {
        Runtime.dynCall('vi', destructor, [ptr]);
        HEAP32[(((_llvm_eh_exception.buf)+(8))>>2)]=0
      }
      // Free ptr if it isn't null.
      if (ptr) {
        ___cxa_free_exception(ptr);
        HEAP32[((_llvm_eh_exception.buf)>>2)]=0
      }
    }
  var _llvm_memset_p0i8_i64=_memset;
  function _llvm_lifetime_start() {}
  function _llvm_lifetime_end() {}
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};
  var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};
  var ___errno_state=0;function ___setErrNo(value) {
      // For convenient setting and returning of errno.
      HEAP32[((___errno_state)>>2)]=value
      return value;
    }
  var PATH={splitPath:function (filename) {
        var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
        return splitPathRe.exec(filename).slice(1);
      },normalizeArray:function (parts, allowAboveRoot) {
        // if the path tries to go above the root, `up` ends up > 0
        var up = 0;
        for (var i = parts.length - 1; i >= 0; i--) {
          var last = parts[i];
          if (last === '.') {
            parts.splice(i, 1);
          } else if (last === '..') {
            parts.splice(i, 1);
            up++;
          } else if (up) {
            parts.splice(i, 1);
            up--;
          }
        }
        // if the path is allowed to go above the root, restore leading ..s
        if (allowAboveRoot) {
          for (; up--; up) {
            parts.unshift('..');
          }
        }
        return parts;
      },normalize:function (path) {
        var isAbsolute = path.charAt(0) === '/',
            trailingSlash = path.substr(-1) === '/';
        // Normalize the path
        path = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), !isAbsolute).join('/');
        if (!path && !isAbsolute) {
          path = '.';
        }
        if (path && trailingSlash) {
          path += '/';
        }
        return (isAbsolute ? '/' : '') + path;
      },dirname:function (path) {
        var result = PATH.splitPath(path),
            root = result[0],
            dir = result[1];
        if (!root && !dir) {
          // No dirname whatsoever
          return '.';
        }
        if (dir) {
          // It has a dirname, strip trailing slash
          dir = dir.substr(0, dir.length - 1);
        }
        return root + dir;
      },basename:function (path) {
        // EMSCRIPTEN return '/'' for '/', not an empty string
        if (path === '/') return '/';
        var lastSlash = path.lastIndexOf('/');
        if (lastSlash === -1) return path;
        return path.substr(lastSlash+1);
      },extname:function (path) {
        return PATH.splitPath(path)[3];
      },join:function () {
        var paths = Array.prototype.slice.call(arguments, 0);
        return PATH.normalize(paths.join('/'));
      },join2:function (l, r) {
        return PATH.normalize(l + '/' + r);
      },resolve:function () {
        var resolvedPath = '',
          resolvedAbsolute = false;
        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
          var path = (i >= 0) ? arguments[i] : FS.cwd();
          // Skip empty and invalid entries
          if (typeof path !== 'string') {
            throw new TypeError('Arguments to path.resolve must be strings');
          } else if (!path) {
            continue;
          }
          resolvedPath = path + '/' + resolvedPath;
          resolvedAbsolute = path.charAt(0) === '/';
        }
        // At this point the path should be resolved to a full absolute path, but
        // handle relative paths to be safe (might happen when process.cwd() fails)
        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter(function(p) {
          return !!p;
        }), !resolvedAbsolute).join('/');
        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
      },relative:function (from, to) {
        from = PATH.resolve(from).substr(1);
        to = PATH.resolve(to).substr(1);
        function trim(arr) {
          var start = 0;
          for (; start < arr.length; start++) {
            if (arr[start] !== '') break;
          }
          var end = arr.length - 1;
          for (; end >= 0; end--) {
            if (arr[end] !== '') break;
          }
          if (start > end) return [];
          return arr.slice(start, end - start + 1);
        }
        var fromParts = trim(from.split('/'));
        var toParts = trim(to.split('/'));
        var length = Math.min(fromParts.length, toParts.length);
        var samePartsLength = length;
        for (var i = 0; i < length; i++) {
          if (fromParts[i] !== toParts[i]) {
            samePartsLength = i;
            break;
          }
        }
        var outputParts = [];
        for (var i = samePartsLength; i < fromParts.length; i++) {
          outputParts.push('..');
        }
        outputParts = outputParts.concat(toParts.slice(samePartsLength));
        return outputParts.join('/');
      }};
  var TTY={ttys:[],init:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY
        //   // device, it always assumes it's a TTY device. because of this, we're forcing
        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible
        //   // with text files until FS.init can be refactored.
        //   process['stdin']['setEncoding']('utf8');
        // }
      },shutdown:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?
        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation
        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?
        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle
        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call
        //   process['stdin']['pause']();
        // }
      },register:function (dev, ops) {
        TTY.ttys[dev] = { input: [], output: [], ops: ops };
        FS.registerDevice(dev, TTY.stream_ops);
      },stream_ops:{open:function (stream) {
          var tty = TTY.ttys[stream.node.rdev];
          if (!tty) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          stream.tty = tty;
          stream.seekable = false;
        },close:function (stream) {
          // flush any pending line data
          if (stream.tty.output.length) {
            stream.tty.ops.put_char(stream.tty, 10);
          }
        },read:function (stream, buffer, offset, length, pos /* ignored */) {
          if (!stream.tty || !stream.tty.ops.get_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          var bytesRead = 0;
          for (var i = 0; i < length; i++) {
            var result;
            try {
              result = stream.tty.ops.get_char(stream.tty);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            if (result === undefined && bytesRead === 0) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
            if (result === null || result === undefined) break;
            bytesRead++;
            buffer[offset+i] = result;
          }
          if (bytesRead) {
            stream.node.timestamp = Date.now();
          }
          return bytesRead;
        },write:function (stream, buffer, offset, length, pos) {
          if (!stream.tty || !stream.tty.ops.put_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          for (var i = 0; i < length; i++) {
            try {
              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
          }
          if (length) {
            stream.node.timestamp = Date.now();
          }
          return i;
        }},default_tty_ops:{get_char:function (tty) {
          if (!tty.input.length) {
            var result = null;
            if (ENVIRONMENT_IS_NODE) {
              result = process['stdin']['read']();
              if (!result) {
                if (process['stdin']['_readableState'] && process['stdin']['_readableState']['ended']) {
                  return null;  // EOF
                }
                return undefined;  // no data available
              }
            } else if (typeof window != 'undefined' &&
              typeof window.prompt == 'function') {
              // Browser.
              result = window.prompt('Input: ');  // returns null on cancel
              if (result !== null) {
                result += '\n';
              }
            } else if (typeof readline == 'function') {
              // Command line.
              result = readline();
              if (result !== null) {
                result += '\n';
              }
            }
            if (!result) {
              return null;
            }
            tty.input = intArrayFromString(result, true);
          }
          return tty.input.shift();
        },put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['print'](tty.output.join(''));
            tty.output = [];
          } else {
            tty.output.push(TTY.utf8.processCChar(val));
          }
        }},default_tty1_ops:{put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['printErr'](tty.output.join(''));
            tty.output = [];
          } else {
            tty.output.push(TTY.utf8.processCChar(val));
          }
        }}};
  var MEMFS={ops_table:null,CONTENT_OWNING:1,CONTENT_FLEXIBLE:2,CONTENT_FIXED:3,mount:function (mount) {
        return MEMFS.createNode(null, '/', 16384 | 0777, 0);
      },createNode:function (parent, name, mode, dev) {
        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
          // no supported
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (!MEMFS.ops_table) {
          MEMFS.ops_table = {
            dir: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                lookup: MEMFS.node_ops.lookup,
                mknod: MEMFS.node_ops.mknod,
                mknod: MEMFS.node_ops.mknod,
                rename: MEMFS.node_ops.rename,
                unlink: MEMFS.node_ops.unlink,
                rmdir: MEMFS.node_ops.rmdir,
                readdir: MEMFS.node_ops.readdir,
                symlink: MEMFS.node_ops.symlink
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek
              }
            },
            file: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek,
                read: MEMFS.stream_ops.read,
                write: MEMFS.stream_ops.write,
                allocate: MEMFS.stream_ops.allocate,
                mmap: MEMFS.stream_ops.mmap
              }
            },
            link: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                readlink: MEMFS.node_ops.readlink
              },
              stream: {}
            },
            chrdev: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: FS.chrdev_stream_ops
            },
          };
        }
        var node = FS.createNode(parent, name, mode, dev);
        if (FS.isDir(node.mode)) {
          node.node_ops = MEMFS.ops_table.dir.node;
          node.stream_ops = MEMFS.ops_table.dir.stream;
          node.contents = {};
        } else if (FS.isFile(node.mode)) {
          node.node_ops = MEMFS.ops_table.file.node;
          node.stream_ops = MEMFS.ops_table.file.stream;
          node.contents = [];
          node.contentMode = MEMFS.CONTENT_FLEXIBLE;
        } else if (FS.isLink(node.mode)) {
          node.node_ops = MEMFS.ops_table.link.node;
          node.stream_ops = MEMFS.ops_table.link.stream;
        } else if (FS.isChrdev(node.mode)) {
          node.node_ops = MEMFS.ops_table.chrdev.node;
          node.stream_ops = MEMFS.ops_table.chrdev.stream;
        }
        node.timestamp = Date.now();
        // add the new node to the parent
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },ensureFlexible:function (node) {
        if (node.contentMode !== MEMFS.CONTENT_FLEXIBLE) {
          var contents = node.contents;
          node.contents = Array.prototype.slice.call(contents);
          node.contentMode = MEMFS.CONTENT_FLEXIBLE;
        }
      },node_ops:{getattr:function (node) {
          var attr = {};
          // device numbers reuse inode numbers.
          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
          attr.ino = node.id;
          attr.mode = node.mode;
          attr.nlink = 1;
          attr.uid = 0;
          attr.gid = 0;
          attr.rdev = node.rdev;
          if (FS.isDir(node.mode)) {
            attr.size = 4096;
          } else if (FS.isFile(node.mode)) {
            attr.size = node.contents.length;
          } else if (FS.isLink(node.mode)) {
            attr.size = node.link.length;
          } else {
            attr.size = 0;
          }
          attr.atime = new Date(node.timestamp);
          attr.mtime = new Date(node.timestamp);
          attr.ctime = new Date(node.timestamp);
          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),
          //       but this is not required by the standard.
          attr.blksize = 4096;
          attr.blocks = Math.ceil(attr.size / attr.blksize);
          return attr;
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
          if (attr.size !== undefined) {
            MEMFS.ensureFlexible(node);
            var contents = node.contents;
            if (attr.size < contents.length) contents.length = attr.size;
            else while (attr.size > contents.length) contents.push(0);
          }
        },lookup:function (parent, name) {
          throw FS.genericErrors[ERRNO_CODES.ENOENT];
        },mknod:function (parent, name, mode, dev) {
          return MEMFS.createNode(parent, name, mode, dev);
        },rename:function (old_node, new_dir, new_name) {
          // if we're overwriting a directory at new_name, make sure it's empty.
          if (FS.isDir(old_node.mode)) {
            var new_node;
            try {
              new_node = FS.lookupNode(new_dir, new_name);
            } catch (e) {
            }
            if (new_node) {
              for (var i in new_node.contents) {
                throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
              }
            }
          }
          // do the internal rewiring
          delete old_node.parent.contents[old_node.name];
          old_node.name = new_name;
          new_dir.contents[new_name] = old_node;
          old_node.parent = new_dir;
        },unlink:function (parent, name) {
          delete parent.contents[name];
        },rmdir:function (parent, name) {
          var node = FS.lookupNode(parent, name);
          for (var i in node.contents) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
          }
          delete parent.contents[name];
        },readdir:function (node) {
          var entries = ['.', '..']
          for (var key in node.contents) {
            if (!node.contents.hasOwnProperty(key)) {
              continue;
            }
            entries.push(key);
          }
          return entries;
        },symlink:function (parent, newname, oldpath) {
          var node = MEMFS.createNode(parent, newname, 0777 | 40960, 0);
          node.link = oldpath;
          return node;
        },readlink:function (node) {
          if (!FS.isLink(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return node.link;
        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (size > 8 && contents.subarray) { // non-trivial, and typed array
            buffer.set(contents.subarray(position, position + size), offset);
          } else
          {
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          }
          return size;
        },write:function (stream, buffer, offset, length, position, canOwn) {
          var node = stream.node;
          node.timestamp = Date.now();
          var contents = node.contents;
          if (length && contents.length === 0 && position === 0 && buffer.subarray) {
            // just replace it with the new data
            assert(buffer.length);
            if (canOwn && offset === 0) {
              node.contents = buffer; // this could be a subarray of Emscripten HEAP, or allocated from some other source.
              node.contentMode = (buffer.buffer === HEAP8.buffer) ? MEMFS.CONTENT_OWNING : MEMFS.CONTENT_FIXED;
            } else {
              node.contents = new Uint8Array(buffer.subarray(offset, offset+length));
              node.contentMode = MEMFS.CONTENT_FIXED;
            }
            return length;
          }
          MEMFS.ensureFlexible(node);
          var contents = node.contents;
          while (contents.length < position) contents.push(0);
          for (var i = 0; i < length; i++) {
            contents[position + i] = buffer[offset + i];
          }
          return length;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.contents.length;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          stream.ungotten = [];
          stream.position = position;
          return position;
        },allocate:function (stream, offset, length) {
          MEMFS.ensureFlexible(stream.node);
          var contents = stream.node.contents;
          var limit = offset + length;
          while (limit > contents.length) contents.push(0);
        },mmap:function (stream, buffer, offset, length, position, prot, flags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          var ptr;
          var allocated;
          var contents = stream.node.contents;
          // Only make a new copy when MAP_PRIVATE is specified.
          if ( !(flags & 2) &&
                (contents.buffer === buffer || contents.buffer === buffer.buffer) ) {
            // We can't emulate MAP_SHARED when the file is not backed by the buffer
            // we're mapping to (e.g. the HEAP buffer).
            allocated = false;
            ptr = contents.byteOffset;
          } else {
            // Try to avoid unnecessary slices.
            if (position > 0 || position + length < contents.length) {
              if (contents.subarray) {
                contents = contents.subarray(position, position + length);
              } else {
                contents = Array.prototype.slice.call(contents, position, position + length);
              }
            }
            allocated = true;
            ptr = _malloc(length);
            if (!ptr) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);
            }
            buffer.set(contents, ptr);
          }
          return { ptr: ptr, allocated: allocated };
        }}};
  var IDBFS={dbs:{},indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",mount:function (mount) {
        return MEMFS.mount.apply(null, arguments);
      },syncfs:function (mount, populate, callback) {
        IDBFS.getLocalSet(mount, function(err, local) {
          if (err) return callback(err);
          IDBFS.getRemoteSet(mount, function(err, remote) {
            if (err) return callback(err);
            var src = populate ? remote : local;
            var dst = populate ? local : remote;
            IDBFS.reconcile(src, dst, callback);
          });
        });
      },reconcile:function (src, dst, callback) {
        var total = 0;
        var create = {};
        for (var key in src.files) {
          if (!src.files.hasOwnProperty(key)) continue;
          var e = src.files[key];
          var e2 = dst.files[key];
          if (!e2 || e.timestamp > e2.timestamp) {
            create[key] = e;
            total++;
          }
        }
        var remove = {};
        for (var key in dst.files) {
          if (!dst.files.hasOwnProperty(key)) continue;
          var e = dst.files[key];
          var e2 = src.files[key];
          if (!e2) {
            remove[key] = e;
            total++;
          }
        }
        if (!total) {
          // early out
          return callback(null);
        }
        var completed = 0;
        function done(err) {
          if (err) return callback(err);
          if (++completed >= total) {
            return callback(null);
          }
        };
        // create a single transaction to handle and IDB reads / writes we'll need to do
        var db = src.type === 'remote' ? src.db : dst.db;
        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');
        transaction.onerror = function transaction_onerror() { callback(this.error); };
        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
        for (var path in create) {
          if (!create.hasOwnProperty(path)) continue;
          var entry = create[path];
          if (dst.type === 'local') {
            // save file to local
            try {
              if (FS.isDir(entry.mode)) {
                FS.mkdir(path, entry.mode);
              } else if (FS.isFile(entry.mode)) {
                var stream = FS.open(path, 'w+', 0666);
                FS.write(stream, entry.contents, 0, entry.contents.length, 0, true /* canOwn */);
                FS.close(stream);
              }
              done(null);
            } catch (e) {
              return done(e);
            }
          } else {
            // save file to IDB
            var req = store.put(entry, path);
            req.onsuccess = function req_onsuccess() { done(null); };
            req.onerror = function req_onerror() { done(this.error); };
          }
        }
        for (var path in remove) {
          if (!remove.hasOwnProperty(path)) continue;
          var entry = remove[path];
          if (dst.type === 'local') {
            // delete file from local
            try {
              if (FS.isDir(entry.mode)) {
                // TODO recursive delete?
                FS.rmdir(path);
              } else if (FS.isFile(entry.mode)) {
                FS.unlink(path);
              }
              done(null);
            } catch (e) {
              return done(e);
            }
          } else {
            // delete file from IDB
            var req = store.delete(path);
            req.onsuccess = function req_onsuccess() { done(null); };
            req.onerror = function req_onerror() { done(this.error); };
          }
        }
      },getLocalSet:function (mount, callback) {
        var files = {};
        function isRealDir(p) {
          return p !== '.' && p !== '..';
        };
        function toAbsolute(root) {
          return function(p) {
            return PATH.join2(root, p);
          }
        };
        var check = FS.readdir(mount.mountpoint)
          .filter(isRealDir)
          .map(toAbsolute(mount.mountpoint));
        while (check.length) {
          var path = check.pop();
          var stat, node;
          try {
            var lookup = FS.lookupPath(path);
            node = lookup.node;
            stat = FS.stat(path);
          } catch (e) {
            return callback(e);
          }
          if (FS.isDir(stat.mode)) {
            check.push.apply(check, FS.readdir(path)
              .filter(isRealDir)
              .map(toAbsolute(path)));
            files[path] = { mode: stat.mode, timestamp: stat.mtime };
          } else if (FS.isFile(stat.mode)) {
            files[path] = { contents: node.contents, mode: stat.mode, timestamp: stat.mtime };
          } else {
            return callback(new Error('node type not supported'));
          }
        }
        return callback(null, { type: 'local', files: files });
      },getDB:function (name, callback) {
        // look it up in the cache
        var db = IDBFS.dbs[name];
        if (db) {
          return callback(null, db);
        }
        var req;
        try {
          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        req.onupgradeneeded = function req_onupgradeneeded() {
          db = req.result;
          db.createObjectStore(IDBFS.DB_STORE_NAME);
        };
        req.onsuccess = function req_onsuccess() {
          db = req.result;
          // add to the cache
          IDBFS.dbs[name] = db;
          callback(null, db);
        };
        req.onerror = function req_onerror() {
          callback(this.error);
        };
      },getRemoteSet:function (mount, callback) {
        var files = {};
        IDBFS.getDB(mount.mountpoint, function(err, db) {
          if (err) return callback(err);
          var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');
          transaction.onerror = function transaction_onerror() { callback(this.error); };
          var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
          store.openCursor().onsuccess = function store_openCursor_onsuccess(event) {
            var cursor = event.target.result;
            if (!cursor) {
              return callback(null, { type: 'remote', db: db, files: files });
            }
            files[cursor.key] = cursor.value;
            cursor.continue();
          };
        });
      }};
  var NODEFS={isWindows:false,staticInit:function () {
        NODEFS.isWindows = !!process.platform.match(/^win/);
      },mount:function (mount) {
        assert(ENVIRONMENT_IS_NODE);
        return NODEFS.createNode(null, '/', NODEFS.getMode(mount.opts.root), 0);
      },createNode:function (parent, name, mode, dev) {
        if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node = FS.createNode(parent, name, mode);
        node.node_ops = NODEFS.node_ops;
        node.stream_ops = NODEFS.stream_ops;
        return node;
      },getMode:function (path) {
        var stat;
        try {
          stat = fs.lstatSync(path);
          if (NODEFS.isWindows) {
            // On Windows, directories return permission bits 'rw-rw-rw-', even though they have 'rwxrwxrwx', so 
            // propagate write bits to execute bits.
            stat.mode = stat.mode | ((stat.mode & 146) >> 1);
          }
        } catch (e) {
          if (!e.code) throw e;
          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
        }
        return stat.mode;
      },realPath:function (node) {
        var parts = [];
        while (node.parent !== node) {
          parts.push(node.name);
          node = node.parent;
        }
        parts.push(node.mount.opts.root);
        parts.reverse();
        return PATH.join.apply(null, parts);
      },flagsToPermissionStringMap:{0:"r",1:"r+",2:"r+",64:"r",65:"r+",66:"r+",129:"rx+",193:"rx+",514:"w+",577:"w",578:"w+",705:"wx",706:"wx+",1024:"a",1025:"a",1026:"a+",1089:"a",1090:"a+",1153:"ax",1154:"ax+",1217:"ax",1218:"ax+",4096:"rs",4098:"rs+"},flagsToPermissionString:function (flags) {
        if (flags in NODEFS.flagsToPermissionStringMap) {
          return NODEFS.flagsToPermissionStringMap[flags];
        } else {
          return flags;
        }
      },node_ops:{getattr:function (node) {
          var path = NODEFS.realPath(node);
          var stat;
          try {
            stat = fs.lstatSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          // node.js v0.10.20 doesn't report blksize and blocks on Windows. Fake them with default blksize of 4096.
          // See http://support.microsoft.com/kb/140365
          if (NODEFS.isWindows && !stat.blksize) {
            stat.blksize = 4096;
          }
          if (NODEFS.isWindows && !stat.blocks) {
            stat.blocks = (stat.size+stat.blksize-1)/stat.blksize|0;
          }
          return {
            dev: stat.dev,
            ino: stat.ino,
            mode: stat.mode,
            nlink: stat.nlink,
            uid: stat.uid,
            gid: stat.gid,
            rdev: stat.rdev,
            size: stat.size,
            atime: stat.atime,
            mtime: stat.mtime,
            ctime: stat.ctime,
            blksize: stat.blksize,
            blocks: stat.blocks
          };
        },setattr:function (node, attr) {
          var path = NODEFS.realPath(node);
          try {
            if (attr.mode !== undefined) {
              fs.chmodSync(path, attr.mode);
              // update the common node structure mode as well
              node.mode = attr.mode;
            }
            if (attr.timestamp !== undefined) {
              var date = new Date(attr.timestamp);
              fs.utimesSync(path, date, date);
            }
            if (attr.size !== undefined) {
              fs.truncateSync(path, attr.size);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },lookup:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          var mode = NODEFS.getMode(path);
          return NODEFS.createNode(parent, name, mode);
        },mknod:function (parent, name, mode, dev) {
          var node = NODEFS.createNode(parent, name, mode, dev);
          // create the backing node for this in the fs root as well
          var path = NODEFS.realPath(node);
          try {
            if (FS.isDir(node.mode)) {
              fs.mkdirSync(path, node.mode);
            } else {
              fs.writeFileSync(path, '', { mode: node.mode });
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return node;
        },rename:function (oldNode, newDir, newName) {
          var oldPath = NODEFS.realPath(oldNode);
          var newPath = PATH.join2(NODEFS.realPath(newDir), newName);
          try {
            fs.renameSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },unlink:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.unlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },rmdir:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.rmdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readdir:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },symlink:function (parent, newName, oldPath) {
          var newPath = PATH.join2(NODEFS.realPath(parent), newName);
          try {
            fs.symlinkSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readlink:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        }},stream_ops:{open:function (stream) {
          var path = NODEFS.realPath(stream.node);
          try {
            if (FS.isFile(stream.node.mode)) {
              stream.nfd = fs.openSync(path, NODEFS.flagsToPermissionString(stream.flags));
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },close:function (stream) {
          try {
            if (FS.isFile(stream.node.mode) && stream.nfd) {
              fs.closeSync(stream.nfd);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },read:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(length);
          var res;
          try {
            res = fs.readSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          if (res > 0) {
            for (var i = 0; i < res; i++) {
              buffer[offset + i] = nbuffer[i];
            }
          }
          return res;
        },write:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(buffer.subarray(offset, offset + length));
          var res;
          try {
            res = fs.writeSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return res;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              try {
                var stat = fs.fstatSync(stream.nfd);
                position += stat.size;
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES[e.code]);
              }
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          stream.position = position;
          return position;
        }}};
  var _stdin=allocate(1, "i32*", ALLOC_STATIC);
  var _stdout=allocate(1, "i32*", ALLOC_STATIC);
  var _stderr=allocate(1, "i32*", ALLOC_STATIC);
  function _fflush(stream) {
      // int fflush(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fflush.html
      // we don't currently perform any user-space buffering of data
    }var FS={root:null,mounts:[],devices:[null],streams:[null],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,ErrnoError:null,genericErrors:{},handleFSError:function (e) {
        if (!(e instanceof FS.ErrnoError)) throw e + ' : ' + stackTrace();
        return ___setErrNo(e.errno);
      },lookupPath:function (path, opts) {
        path = PATH.resolve(FS.cwd(), path);
        opts = opts || { recurse_count: 0 };
        if (opts.recurse_count > 8) {  // max recursive lookup of 8
          throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
        }
        // split the path
        var parts = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), false);
        // start at the root
        var current = FS.root;
        var current_path = '/';
        for (var i = 0; i < parts.length; i++) {
          var islast = (i === parts.length-1);
          if (islast && opts.parent) {
            // stop resolving
            break;
          }
          current = FS.lookupNode(current, parts[i]);
          current_path = PATH.join2(current_path, parts[i]);
          // jump to the mount's root node if this is a mountpoint
          if (FS.isMountpoint(current)) {
            current = current.mount.root;
          }
          // follow symlinks
          // by default, lookupPath will not follow a symlink if it is the final path component.
          // setting opts.follow = true will override this behavior.
          if (!islast || opts.follow) {
            var count = 0;
            while (FS.isLink(current.mode)) {
              var link = FS.readlink(current_path);
              current_path = PATH.resolve(PATH.dirname(current_path), link);
              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });
              current = lookup.node;
              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).
                throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
              }
            }
          }
        }
        return { path: current_path, node: current };
      },getPath:function (node) {
        var path;
        while (true) {
          if (FS.isRoot(node)) {
            var mount = node.mount.mountpoint;
            if (!path) return mount;
            return mount[mount.length-1] !== '/' ? mount + '/' + path : mount + path;
          }
          path = path ? node.name + '/' + path : node.name;
          node = node.parent;
        }
      },hashName:function (parentid, name) {
        var hash = 0;
        for (var i = 0; i < name.length; i++) {
          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;
        }
        return ((parentid + hash) >>> 0) % FS.nameTable.length;
      },hashAddNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        node.name_next = FS.nameTable[hash];
        FS.nameTable[hash] = node;
      },hashRemoveNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        if (FS.nameTable[hash] === node) {
          FS.nameTable[hash] = node.name_next;
        } else {
          var current = FS.nameTable[hash];
          while (current) {
            if (current.name_next === node) {
              current.name_next = node.name_next;
              break;
            }
            current = current.name_next;
          }
        }
      },lookupNode:function (parent, name) {
        var err = FS.mayLookup(parent);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        var hash = FS.hashName(parent.id, name);
        for (var node = FS.nameTable[hash]; node; node = node.name_next) {
          var nodeName = node.name;
          if (node.parent.id === parent.id && nodeName === name) {
            return node;
          }
        }
        // if we failed to find it in the cache, call into the VFS
        return FS.lookup(parent, name);
      },createNode:function (parent, name, mode, rdev) {
        if (!FS.FSNode) {
          FS.FSNode = function(parent, name, mode, rdev) {
            this.id = FS.nextInode++;
            this.name = name;
            this.mode = mode;
            this.node_ops = {};
            this.stream_ops = {};
            this.rdev = rdev;
            this.parent = null;
            this.mount = null;
            if (!parent) {
              parent = this;  // root node sets parent to itself
            }
            this.parent = parent;
            this.mount = parent.mount;
            FS.hashAddNode(this);
          };
          // compatibility
          var readMode = 292 | 73;
          var writeMode = 146;
          FS.FSNode.prototype = {};
          // NOTE we must use Object.defineProperties instead of individual calls to
          // Object.defineProperty in order to make closure compiler happy
          Object.defineProperties(FS.FSNode.prototype, {
            read: {
              get: function() { return (this.mode & readMode) === readMode; },
              set: function(val) { val ? this.mode |= readMode : this.mode &= ~readMode; }
            },
            write: {
              get: function() { return (this.mode & writeMode) === writeMode; },
              set: function(val) { val ? this.mode |= writeMode : this.mode &= ~writeMode; }
            },
            isFolder: {
              get: function() { return FS.isDir(this.mode); },
            },
            isDevice: {
              get: function() { return FS.isChrdev(this.mode); },
            },
          });
        }
        return new FS.FSNode(parent, name, mode, rdev);
      },destroyNode:function (node) {
        FS.hashRemoveNode(node);
      },isRoot:function (node) {
        return node === node.parent;
      },isMountpoint:function (node) {
        return node.mounted;
      },isFile:function (mode) {
        return (mode & 61440) === 32768;
      },isDir:function (mode) {
        return (mode & 61440) === 16384;
      },isLink:function (mode) {
        return (mode & 61440) === 40960;
      },isChrdev:function (mode) {
        return (mode & 61440) === 8192;
      },isBlkdev:function (mode) {
        return (mode & 61440) === 24576;
      },isFIFO:function (mode) {
        return (mode & 61440) === 4096;
      },isSocket:function (mode) {
        return (mode & 49152) === 49152;
      },flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function (str) {
        var flags = FS.flagModes[str];
        if (typeof flags === 'undefined') {
          throw new Error('Unknown file open mode: ' + str);
        }
        return flags;
      },flagsToPermissionString:function (flag) {
        var accmode = flag & 2097155;
        var perms = ['r', 'w', 'rw'][accmode];
        if ((flag & 512)) {
          perms += 'w';
        }
        return perms;
      },nodePermissions:function (node, perms) {
        if (FS.ignorePermissions) {
          return 0;
        }
        // return 0 if any user, group or owner bits are set.
        if (perms.indexOf('r') !== -1 && !(node.mode & 292)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('w') !== -1 && !(node.mode & 146)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('x') !== -1 && !(node.mode & 73)) {
          return ERRNO_CODES.EACCES;
        }
        return 0;
      },mayLookup:function (dir) {
        return FS.nodePermissions(dir, 'x');
      },mayCreate:function (dir, name) {
        try {
          var node = FS.lookupNode(dir, name);
          return ERRNO_CODES.EEXIST;
        } catch (e) {
        }
        return FS.nodePermissions(dir, 'wx');
      },mayDelete:function (dir, name, isdir) {
        var node;
        try {
          node = FS.lookupNode(dir, name);
        } catch (e) {
          return e.errno;
        }
        var err = FS.nodePermissions(dir, 'wx');
        if (err) {
          return err;
        }
        if (isdir) {
          if (!FS.isDir(node.mode)) {
            return ERRNO_CODES.ENOTDIR;
          }
          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
            return ERRNO_CODES.EBUSY;
          }
        } else {
          if (FS.isDir(node.mode)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return 0;
      },mayOpen:function (node, flags) {
        if (!node) {
          return ERRNO_CODES.ENOENT;
        }
        if (FS.isLink(node.mode)) {
          return ERRNO_CODES.ELOOP;
        } else if (FS.isDir(node.mode)) {
          if ((flags & 2097155) !== 0 ||  // opening for write
              (flags & 512)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
      },MAX_OPEN_FDS:4096,nextfd:function (fd_start, fd_end) {
        fd_start = fd_start || 1;
        fd_end = fd_end || FS.MAX_OPEN_FDS;
        for (var fd = fd_start; fd <= fd_end; fd++) {
          if (!FS.streams[fd]) {
            return fd;
          }
        }
        throw new FS.ErrnoError(ERRNO_CODES.EMFILE);
      },getStream:function (fd) {
        return FS.streams[fd];
      },createStream:function (stream, fd_start, fd_end) {
        if (!FS.FSStream) {
          FS.FSStream = function(){};
          FS.FSStream.prototype = {};
          // compatibility
          Object.defineProperties(FS.FSStream.prototype, {
            object: {
              get: function() { return this.node; },
              set: function(val) { this.node = val; }
            },
            isRead: {
              get: function() { return (this.flags & 2097155) !== 1; }
            },
            isWrite: {
              get: function() { return (this.flags & 2097155) !== 0; }
            },
            isAppend: {
              get: function() { return (this.flags & 1024); }
            }
          });
        }
        if (stream.__proto__) {
          // reuse the object
          stream.__proto__ = FS.FSStream.prototype;
        } else {
          var newStream = new FS.FSStream();
          for (var p in stream) {
            newStream[p] = stream[p];
          }
          stream = newStream;
        }
        var fd = FS.nextfd(fd_start, fd_end);
        stream.fd = fd;
        FS.streams[fd] = stream;
        return stream;
      },closeStream:function (fd) {
        FS.streams[fd] = null;
      },chrdev_stream_ops:{open:function (stream) {
          var device = FS.getDevice(stream.node.rdev);
          // override node's stream ops with the device's
          stream.stream_ops = device.stream_ops;
          // forward the open call
          if (stream.stream_ops.open) {
            stream.stream_ops.open(stream);
          }
        },llseek:function () {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }},major:function (dev) {
        return ((dev) >> 8);
      },minor:function (dev) {
        return ((dev) & 0xff);
      },makedev:function (ma, mi) {
        return ((ma) << 8 | (mi));
      },registerDevice:function (dev, ops) {
        FS.devices[dev] = { stream_ops: ops };
      },getDevice:function (dev) {
        return FS.devices[dev];
      },syncfs:function (populate, callback) {
        if (typeof(populate) === 'function') {
          callback = populate;
          populate = false;
        }
        var completed = 0;
        var total = FS.mounts.length;
        function done(err) {
          if (err) {
            return callback(err);
          }
          if (++completed >= total) {
            callback(null);
          }
        };
        // sync all mounts
        for (var i = 0; i < FS.mounts.length; i++) {
          var mount = FS.mounts[i];
          if (!mount.type.syncfs) {
            done(null);
            continue;
          }
          mount.type.syncfs(mount, populate, done);
        }
      },mount:function (type, opts, mountpoint) {
        var lookup;
        if (mountpoint) {
          lookup = FS.lookupPath(mountpoint, { follow: false });
          mountpoint = lookup.path;  // use the absolute path
        }
        var mount = {
          type: type,
          opts: opts,
          mountpoint: mountpoint,
          root: null
        };
        // create a root node for the fs
        var root = type.mount(mount);
        root.mount = mount;
        mount.root = root;
        // assign the mount info to the mountpoint's node
        if (lookup) {
          lookup.node.mount = mount;
          lookup.node.mounted = true;
          // compatibility update FS.root if we mount to /
          if (mountpoint === '/') {
            FS.root = mount.root;
          }
        }
        // add to our cached list of mounts
        FS.mounts.push(mount);
        return root;
      },lookup:function (parent, name) {
        return parent.node_ops.lookup(parent, name);
      },mknod:function (path, mode, dev) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var err = FS.mayCreate(parent, name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.mknod) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.mknod(parent, name, mode, dev);
      },create:function (path, mode) {
        mode = mode !== undefined ? mode : 0666;
        mode &= 4095;
        mode |= 32768;
        return FS.mknod(path, mode, 0);
      },mkdir:function (path, mode) {
        mode = mode !== undefined ? mode : 0777;
        mode &= 511 | 512;
        mode |= 16384;
        return FS.mknod(path, mode, 0);
      },mkdev:function (path, mode, dev) {
        if (typeof(dev) === 'undefined') {
          dev = mode;
          mode = 0666;
        }
        mode |= 8192;
        return FS.mknod(path, mode, dev);
      },symlink:function (oldpath, newpath) {
        var lookup = FS.lookupPath(newpath, { parent: true });
        var parent = lookup.node;
        var newname = PATH.basename(newpath);
        var err = FS.mayCreate(parent, newname);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.symlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.symlink(parent, newname, oldpath);
      },rename:function (old_path, new_path) {
        var old_dirname = PATH.dirname(old_path);
        var new_dirname = PATH.dirname(new_path);
        var old_name = PATH.basename(old_path);
        var new_name = PATH.basename(new_path);
        // parents must exist
        var lookup, old_dir, new_dir;
        try {
          lookup = FS.lookupPath(old_path, { parent: true });
          old_dir = lookup.node;
          lookup = FS.lookupPath(new_path, { parent: true });
          new_dir = lookup.node;
        } catch (e) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // need to be part of the same mount
        if (old_dir.mount !== new_dir.mount) {
          throw new FS.ErrnoError(ERRNO_CODES.EXDEV);
        }
        // source must exist
        var old_node = FS.lookupNode(old_dir, old_name);
        // old path should not be an ancestor of the new path
        var relative = PATH.relative(old_path, new_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        // new path should not be an ancestor of the old path
        relative = PATH.relative(new_path, old_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
        }
        // see if the new path already exists
        var new_node;
        try {
          new_node = FS.lookupNode(new_dir, new_name);
        } catch (e) {
          // not fatal
        }
        // early out if nothing needs to change
        if (old_node === new_node) {
          return;
        }
        // we'll need to delete the old entry
        var isdir = FS.isDir(old_node.mode);
        var err = FS.mayDelete(old_dir, old_name, isdir);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // need delete permissions if we'll be overwriting.
        // need create permissions if new doesn't already exist.
        err = new_node ?
          FS.mayDelete(new_dir, new_name, isdir) :
          FS.mayCreate(new_dir, new_name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!old_dir.node_ops.rename) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // if we are going to change the parent, check write permissions
        if (new_dir !== old_dir) {
          err = FS.nodePermissions(old_dir, 'w');
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        // remove the node from the lookup hash
        FS.hashRemoveNode(old_node);
        // do the underlying fs rename
        try {
          old_dir.node_ops.rename(old_node, new_dir, new_name);
        } catch (e) {
          throw e;
        } finally {
          // add the node back to the hash (in case node_ops.rename
          // changed its name)
          FS.hashAddNode(old_node);
        }
      },rmdir:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, true);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.rmdir) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        parent.node_ops.rmdir(parent, name);
        FS.destroyNode(node);
      },readdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        if (!node.node_ops.readdir) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        return node.node_ops.readdir(node);
      },unlink:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, false);
        if (err) {
          // POSIX says unlink should set EPERM, not EISDIR
          if (err === ERRNO_CODES.EISDIR) err = ERRNO_CODES.EPERM;
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.unlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        parent.node_ops.unlink(parent, name);
        FS.destroyNode(node);
      },readlink:function (path) {
        var lookup = FS.lookupPath(path, { follow: false });
        var link = lookup.node;
        if (!link.node_ops.readlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        return link.node_ops.readlink(link);
      },stat:function (path, dontFollow) {
        var lookup = FS.lookupPath(path, { follow: !dontFollow });
        var node = lookup.node;
        if (!node.node_ops.getattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return node.node_ops.getattr(node);
      },lstat:function (path) {
        return FS.stat(path, true);
      },chmod:function (path, mode, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          mode: (mode & 4095) | (node.mode & ~4095),
          timestamp: Date.now()
        });
      },lchmod:function (path, mode) {
        FS.chmod(path, mode, true);
      },fchmod:function (fd, mode) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chmod(stream.node, mode);
      },chown:function (path, uid, gid, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          timestamp: Date.now()
          // we ignore the uid / gid for now
        });
      },lchown:function (path, uid, gid) {
        FS.chown(path, uid, gid, true);
      },fchown:function (fd, uid, gid) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chown(stream.node, uid, gid);
      },truncate:function (path, len) {
        if (len < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: true });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!FS.isFile(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.nodePermissions(node, 'w');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        node.node_ops.setattr(node, {
          size: len,
          timestamp: Date.now()
        });
      },ftruncate:function (fd, len) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        FS.truncate(stream.node, len);
      },utime:function (path, atime, mtime) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        node.node_ops.setattr(node, {
          timestamp: Math.max(atime, mtime)
        });
      },open:function (path, flags, mode, fd_start, fd_end) {
        flags = typeof flags === 'string' ? FS.modeStringToFlags(flags) : flags;
        mode = typeof mode === 'undefined' ? 0666 : mode;
        if ((flags & 64)) {
          mode = (mode & 4095) | 32768;
        } else {
          mode = 0;
        }
        var node;
        if (typeof path === 'object') {
          node = path;
        } else {
          path = PATH.normalize(path);
          try {
            var lookup = FS.lookupPath(path, {
              follow: !(flags & 131072)
            });
            node = lookup.node;
          } catch (e) {
            // ignore
          }
        }
        // perhaps we need to create the node
        if ((flags & 64)) {
          if (node) {
            // if O_CREAT and O_EXCL are set, error out if the node already exists
            if ((flags & 128)) {
              throw new FS.ErrnoError(ERRNO_CODES.EEXIST);
            }
          } else {
            // node doesn't exist, try to create it
            node = FS.mknod(path, mode, 0);
          }
        }
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        // can't truncate a device
        if (FS.isChrdev(node.mode)) {
          flags &= ~512;
        }
        // check permissions
        var err = FS.mayOpen(node, flags);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // do truncation if necessary
        if ((flags & 512)) {
          FS.truncate(node, 0);
        }
        // we've already handled these, don't pass down to the underlying vfs
        flags &= ~(128 | 512);
        // register the stream with the filesystem
        var stream = FS.createStream({
          node: node,
          path: FS.getPath(node),  // we want the absolute path to the node
          flags: flags,
          seekable: true,
          position: 0,
          stream_ops: node.stream_ops,
          // used by the file family libc calls (fopen, fwrite, ferror, etc.)
          ungotten: [],
          error: false
        }, fd_start, fd_end);
        // call the new stream's open function
        if (stream.stream_ops.open) {
          stream.stream_ops.open(stream);
        }
        if (Module['logReadFiles'] && !(flags & 1)) {
          if (!FS.readFiles) FS.readFiles = {};
          if (!(path in FS.readFiles)) {
            FS.readFiles[path] = 1;
            Module['printErr']('read file: ' + path);
          }
        }
        return stream;
      },close:function (stream) {
        try {
          if (stream.stream_ops.close) {
            stream.stream_ops.close(stream);
          }
        } catch (e) {
          throw e;
        } finally {
          FS.closeStream(stream.fd);
        }
      },llseek:function (stream, offset, whence) {
        if (!stream.seekable || !stream.stream_ops.llseek) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        return stream.stream_ops.llseek(stream, offset, whence);
      },read:function (stream, buffer, offset, length, position) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.read) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
        if (!seeking) stream.position += bytesRead;
        return bytesRead;
      },write:function (stream, buffer, offset, length, position, canOwn) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.write) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        if (stream.flags & 1024) {
          // seek to the end before writing in append mode
          FS.llseek(stream, 0, 2);
        }
        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
        if (!seeking) stream.position += bytesWritten;
        return bytesWritten;
      },allocate:function (stream, offset, length) {
        if (offset < 0 || length <= 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (!FS.isFile(stream.node.mode) && !FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        if (!stream.stream_ops.allocate) {
          throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
        }
        stream.stream_ops.allocate(stream, offset, length);
      },mmap:function (stream, buffer, offset, length, position, prot, flags) {
        // TODO if PROT is PROT_WRITE, make sure we have write access
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EACCES);
        }
        if (!stream.stream_ops.mmap) {
          throw new FS.errnoError(ERRNO_CODES.ENODEV);
        }
        return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
      },ioctl:function (stream, cmd, arg) {
        if (!stream.stream_ops.ioctl) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);
        }
        return stream.stream_ops.ioctl(stream, cmd, arg);
      },readFile:function (path, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'r';
        opts.encoding = opts.encoding || 'binary';
        var ret;
        var stream = FS.open(path, opts.flags);
        var stat = FS.stat(path);
        var length = stat.size;
        var buf = new Uint8Array(length);
        FS.read(stream, buf, 0, length, 0);
        if (opts.encoding === 'utf8') {
          ret = '';
          var utf8 = new Runtime.UTF8Processor();
          for (var i = 0; i < length; i++) {
            ret += utf8.processCChar(buf[i]);
          }
        } else if (opts.encoding === 'binary') {
          ret = buf;
        } else {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        FS.close(stream);
        return ret;
      },writeFile:function (path, data, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'w';
        opts.encoding = opts.encoding || 'utf8';
        var stream = FS.open(path, opts.flags, opts.mode);
        if (opts.encoding === 'utf8') {
          var utf8 = new Runtime.UTF8Processor();
          var buf = new Uint8Array(utf8.processJSString(data));
          FS.write(stream, buf, 0, buf.length, 0);
        } else if (opts.encoding === 'binary') {
          FS.write(stream, data, 0, data.length, 0);
        } else {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        FS.close(stream);
      },cwd:function () {
        return FS.currentPath;
      },chdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        if (!FS.isDir(lookup.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        var err = FS.nodePermissions(lookup.node, 'x');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        FS.currentPath = lookup.path;
      },createDefaultDirectories:function () {
        FS.mkdir('/tmp');
      },createDefaultDevices:function () {
        // create /dev
        FS.mkdir('/dev');
        // setup /dev/null
        FS.registerDevice(FS.makedev(1, 3), {
          read: function() { return 0; },
          write: function() { return 0; }
        });
        FS.mkdev('/dev/null', FS.makedev(1, 3));
        // setup /dev/tty and /dev/tty1
        // stderr needs to print output using Module['printErr']
        // so we register a second tty just for it.
        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
        FS.mkdev('/dev/tty', FS.makedev(5, 0));
        FS.mkdev('/dev/tty1', FS.makedev(6, 0));
        // we're not going to emulate the actual shm device,
        // just create the tmp dirs that reside in it commonly
        FS.mkdir('/dev/shm');
        FS.mkdir('/dev/shm/tmp');
      },createStandardStreams:function () {
        // TODO deprecate the old functionality of a single
        // input / output callback and that utilizes FS.createDevice
        // and instead require a unique set of stream ops
        // by default, we symlink the standard streams to the
        // default tty devices. however, if the standard streams
        // have been overwritten we create a unique device for
        // them instead.
        if (Module['stdin']) {
          FS.createDevice('/dev', 'stdin', Module['stdin']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdin');
        }
        if (Module['stdout']) {
          FS.createDevice('/dev', 'stdout', null, Module['stdout']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdout');
        }
        if (Module['stderr']) {
          FS.createDevice('/dev', 'stderr', null, Module['stderr']);
        } else {
          FS.symlink('/dev/tty1', '/dev/stderr');
        }
        // open default streams for the stdin, stdout and stderr devices
        var stdin = FS.open('/dev/stdin', 'r');
        HEAP32[((_stdin)>>2)]=stdin.fd;
        assert(stdin.fd === 1, 'invalid handle for stdin (' + stdin.fd + ')');
        var stdout = FS.open('/dev/stdout', 'w');
        HEAP32[((_stdout)>>2)]=stdout.fd;
        assert(stdout.fd === 2, 'invalid handle for stdout (' + stdout.fd + ')');
        var stderr = FS.open('/dev/stderr', 'w');
        HEAP32[((_stderr)>>2)]=stderr.fd;
        assert(stderr.fd === 3, 'invalid handle for stderr (' + stderr.fd + ')');
      },ensureErrnoError:function () {
        if (FS.ErrnoError) return;
        FS.ErrnoError = function ErrnoError(errno) {
          this.errno = errno;
          for (var key in ERRNO_CODES) {
            if (ERRNO_CODES[key] === errno) {
              this.code = key;
              break;
            }
          }
          this.message = ERRNO_MESSAGES[errno];
          this.stack = stackTrace();
        };
        FS.ErrnoError.prototype = new Error();
        FS.ErrnoError.prototype.constructor = FS.ErrnoError;
        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)
        [ERRNO_CODES.ENOENT].forEach(function(code) {
          FS.genericErrors[code] = new FS.ErrnoError(code);
          FS.genericErrors[code].stack = '<generic error, no stack>';
        });
      },staticInit:function () {
        FS.ensureErrnoError();
        FS.nameTable = new Array(4096);
        FS.root = FS.createNode(null, '/', 16384 | 0777, 0);
        FS.mount(MEMFS, {}, '/');
        FS.createDefaultDirectories();
        FS.createDefaultDevices();
      },init:function (input, output, error) {
        assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');
        FS.init.initialized = true;
        FS.ensureErrnoError();
        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here
        Module['stdin'] = input || Module['stdin'];
        Module['stdout'] = output || Module['stdout'];
        Module['stderr'] = error || Module['stderr'];
        FS.createStandardStreams();
      },quit:function () {
        FS.init.initialized = false;
        for (var i = 0; i < FS.streams.length; i++) {
          var stream = FS.streams[i];
          if (!stream) {
            continue;
          }
          FS.close(stream);
        }
      },getMode:function (canRead, canWrite) {
        var mode = 0;
        if (canRead) mode |= 292 | 73;
        if (canWrite) mode |= 146;
        return mode;
      },joinPath:function (parts, forceRelative) {
        var path = PATH.join.apply(null, parts);
        if (forceRelative && path[0] == '/') path = path.substr(1);
        return path;
      },absolutePath:function (relative, base) {
        return PATH.resolve(base, relative);
      },standardizePath:function (path) {
        return PATH.normalize(path);
      },findObject:function (path, dontResolveLastLink) {
        var ret = FS.analyzePath(path, dontResolveLastLink);
        if (ret.exists) {
          return ret.object;
        } else {
          ___setErrNo(ret.error);
          return null;
        }
      },analyzePath:function (path, dontResolveLastLink) {
        // operate from within the context of the symlink's target
        try {
          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          path = lookup.path;
        } catch (e) {
        }
        var ret = {
          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,
          parentExists: false, parentPath: null, parentObject: null
        };
        try {
          var lookup = FS.lookupPath(path, { parent: true });
          ret.parentExists = true;
          ret.parentPath = lookup.path;
          ret.parentObject = lookup.node;
          ret.name = PATH.basename(path);
          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          ret.exists = true;
          ret.path = lookup.path;
          ret.object = lookup.node;
          ret.name = lookup.node.name;
          ret.isRoot = lookup.path === '/';
        } catch (e) {
          ret.error = e.errno;
        };
        return ret;
      },createFolder:function (parent, name, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.mkdir(path, mode);
      },createPath:function (parent, path, canRead, canWrite) {
        parent = typeof parent === 'string' ? parent : FS.getPath(parent);
        var parts = path.split('/').reverse();
        while (parts.length) {
          var part = parts.pop();
          if (!part) continue;
          var current = PATH.join2(parent, part);
          try {
            FS.mkdir(current);
          } catch (e) {
            // ignore EEXIST
          }
          parent = current;
        }
        return current;
      },createFile:function (parent, name, properties, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.create(path, mode);
      },createDataFile:function (parent, name, data, canRead, canWrite, canOwn) {
        var path = name ? PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name) : parent;
        var mode = FS.getMode(canRead, canWrite);
        var node = FS.create(path, mode);
        if (data) {
          if (typeof data === 'string') {
            var arr = new Array(data.length);
            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
            data = arr;
          }
          // make sure we can write to the file
          FS.chmod(node, mode | 146);
          var stream = FS.open(node, 'w');
          FS.write(stream, data, 0, data.length, 0, canOwn);
          FS.close(stream);
          FS.chmod(node, mode);
        }
        return node;
      },createDevice:function (parent, name, input, output) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(!!input, !!output);
        if (!FS.createDevice.major) FS.createDevice.major = 64;
        var dev = FS.makedev(FS.createDevice.major++, 0);
        // Create a fake device that a set of stream ops to emulate
        // the old behavior.
        FS.registerDevice(dev, {
          open: function(stream) {
            stream.seekable = false;
          },
          close: function(stream) {
            // flush any pending line data
            if (output && output.buffer && output.buffer.length) {
              output(10);
            }
          },
          read: function(stream, buffer, offset, length, pos /* ignored */) {
            var bytesRead = 0;
            for (var i = 0; i < length; i++) {
              var result;
              try {
                result = input();
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
              if (result === undefined && bytesRead === 0) {
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
              if (result === null || result === undefined) break;
              bytesRead++;
              buffer[offset+i] = result;
            }
            if (bytesRead) {
              stream.node.timestamp = Date.now();
            }
            return bytesRead;
          },
          write: function(stream, buffer, offset, length, pos) {
            for (var i = 0; i < length; i++) {
              try {
                output(buffer[offset+i]);
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
            }
            if (length) {
              stream.node.timestamp = Date.now();
            }
            return i;
          }
        });
        return FS.mkdev(path, mode, dev);
      },createLink:function (parent, name, target, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        return FS.symlink(target, path);
      },forceLoadFile:function (obj) {
        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
        var success = true;
        if (typeof XMLHttpRequest !== 'undefined') {
          throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
        } else if (Module['read']) {
          // Command-line.
          try {
            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
            //          read() will try to parse UTF8.
            obj.contents = intArrayFromString(Module['read'](obj.url), true);
          } catch (e) {
            success = false;
          }
        } else {
          throw new Error('Cannot load without read() or XMLHttpRequest.');
        }
        if (!success) ___setErrNo(ERRNO_CODES.EIO);
        return success;
      },createLazyFile:function (parent, name, url, canRead, canWrite) {
        if (typeof XMLHttpRequest !== 'undefined') {
          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';
          // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.
          function LazyUint8Array() {
            this.lengthKnown = false;
            this.chunks = []; // Loaded chunks. Index is the chunk number
          }
          LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
            if (idx > this.length-1 || idx < 0) {
              return undefined;
            }
            var chunkOffset = idx % this.chunkSize;
            var chunkNum = Math.floor(idx / this.chunkSize);
            return this.getter(chunkNum)[chunkOffset];
          }
          LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
            this.getter = getter;
          }
          LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
              // Find length
              var xhr = new XMLHttpRequest();
              xhr.open('HEAD', url, false);
              xhr.send(null);
              if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
              var datalength = Number(xhr.getResponseHeader("Content-length"));
              var header;
              var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
              var chunkSize = 1024*1024; // Chunk size in bytes
              if (!hasByteServing) chunkSize = datalength;
              // Function to get a range from the remote URL.
              var doXHR = (function(from, to) {
                if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
                if (to > datalength-1) throw new Error("only " + datalength + " bytes available! programmer error!");
                // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.
                var xhr = new XMLHttpRequest();
                xhr.open('GET', url, false);
                if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
                // Some hints to the browser that we want binary data.
                if (typeof Uint8Array != 'undefined') xhr.responseType = 'arraybuffer';
                if (xhr.overrideMimeType) {
                  xhr.overrideMimeType('text/plain; charset=x-user-defined');
                }
                xhr.send(null);
                if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
                if (xhr.response !== undefined) {
                  return new Uint8Array(xhr.response || []);
                } else {
                  return intArrayFromString(xhr.responseText || '', true);
                }
              });
              var lazyArray = this;
              lazyArray.setDataGetter(function(chunkNum) {
                var start = chunkNum * chunkSize;
                var end = (chunkNum+1) * chunkSize - 1; // including this byte
                end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block
                if (typeof(lazyArray.chunks[chunkNum]) === "undefined") {
                  lazyArray.chunks[chunkNum] = doXHR(start, end);
                }
                if (typeof(lazyArray.chunks[chunkNum]) === "undefined") throw new Error("doXHR failed!");
                return lazyArray.chunks[chunkNum];
              });
              this._length = datalength;
              this._chunkSize = chunkSize;
              this.lengthKnown = true;
          }
          var lazyArray = new LazyUint8Array();
          Object.defineProperty(lazyArray, "length", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._length;
              }
          });
          Object.defineProperty(lazyArray, "chunkSize", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._chunkSize;
              }
          });
          var properties = { isDevice: false, contents: lazyArray };
        } else {
          var properties = { isDevice: false, url: url };
        }
        var node = FS.createFile(parent, name, properties, canRead, canWrite);
        // This is a total hack, but I want to get this lazy file code out of the
        // core of MEMFS. If we want to keep this lazy file concept I feel it should
        // be its own thin LAZYFS proxying calls to MEMFS.
        if (properties.contents) {
          node.contents = properties.contents;
        } else if (properties.url) {
          node.contents = null;
          node.url = properties.url;
        }
        // override each stream op with one that tries to force load the lazy file first
        var stream_ops = {};
        var keys = Object.keys(node.stream_ops);
        keys.forEach(function(key) {
          var fn = node.stream_ops[key];
          stream_ops[key] = function forceLoadLazyFile() {
            if (!FS.forceLoadFile(node)) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            return fn.apply(null, arguments);
          };
        });
        // use a custom read function
        stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
          if (!FS.forceLoadFile(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EIO);
          }
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (contents.slice) { // normal array
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          } else {
            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR
              buffer[offset + i] = contents.get(position + i);
            }
          }
          return size;
        };
        node.stream_ops = stream_ops;
        return node;
      },createPreloadedFile:function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn) {
        Browser.init();
        // TODO we should allow people to just pass in a complete filename instead
        // of parent and name being that we just join them anyways
        var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;
        function processData(byteArray) {
          function finish(byteArray) {
            if (!dontCreateFile) {
              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
            }
            if (onload) onload();
            removeRunDependency('cp ' + fullname);
          }
          var handled = false;
          Module['preloadPlugins'].forEach(function(plugin) {
            if (handled) return;
            if (plugin['canHandle'](fullname)) {
              plugin['handle'](byteArray, fullname, finish, function() {
                if (onerror) onerror();
                removeRunDependency('cp ' + fullname);
              });
              handled = true;
            }
          });
          if (!handled) finish(byteArray);
        }
        addRunDependency('cp ' + fullname);
        if (typeof url == 'string') {
          Browser.asyncLoad(url, function(byteArray) {
            processData(byteArray);
          }, onerror);
        } else {
          processData(url);
        }
      },indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_NAME:function () {
        return 'EM_FS_' + window.location.pathname;
      },DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
          console.log('creating db');
          var db = openRequest.result;
          db.createObjectStore(FS.DB_STORE_NAME);
        };
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var putRequest = files.put(FS.analyzePath(path).object.contents, path);
            putRequest.onsuccess = function putRequest_onsuccess() { ok++; if (ok + fail == total) finish() };
            putRequest.onerror = function putRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      },loadFilesFromDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = onerror; // no database to load from
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          try {
            var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');
          } catch(e) {
            onerror(e);
            return;
          }
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var getRequest = files.get(path);
            getRequest.onsuccess = function getRequest_onsuccess() {
              if (FS.analyzePath(path).exists) {
                FS.unlink(path);
              }
              FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
              ok++;
              if (ok + fail == total) finish();
            };
            getRequest.onerror = function getRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      }};
  var _mkport=undefined;var SOCKFS={mount:function (mount) {
        return FS.createNode(null, '/', 16384 | 0777, 0);
      },createSocket:function (family, type, protocol) {
        var streaming = type == 1;
        if (protocol) {
          assert(streaming == (protocol == 6)); // if SOCK_STREAM, must be tcp
        }
        // create our internal socket structure
        var sock = {
          family: family,
          type: type,
          protocol: protocol,
          server: null,
          peers: {},
          pending: [],
          recv_queue: [],
          sock_ops: SOCKFS.websocket_sock_ops
        };
        // create the filesystem node to store the socket structure
        var name = SOCKFS.nextname();
        var node = FS.createNode(SOCKFS.root, name, 49152, 0);
        node.sock = sock;
        // and the wrapping stream that enables library functions such
        // as read and write to indirectly interact with the socket
        var stream = FS.createStream({
          path: name,
          node: node,
          flags: FS.modeStringToFlags('r+'),
          seekable: false,
          stream_ops: SOCKFS.stream_ops
        });
        // map the new stream to the socket structure (sockets have a 1:1
        // relationship with a stream)
        sock.stream = stream;
        return sock;
      },getSocket:function (fd) {
        var stream = FS.getStream(fd);
        if (!stream || !FS.isSocket(stream.node.mode)) {
          return null;
        }
        return stream.node.sock;
      },stream_ops:{poll:function (stream) {
          var sock = stream.node.sock;
          return sock.sock_ops.poll(sock);
        },ioctl:function (stream, request, varargs) {
          var sock = stream.node.sock;
          return sock.sock_ops.ioctl(sock, request, varargs);
        },read:function (stream, buffer, offset, length, position /* ignored */) {
          var sock = stream.node.sock;
          var msg = sock.sock_ops.recvmsg(sock, length);
          if (!msg) {
            // socket is closed
            return 0;
          }
          buffer.set(msg.buffer, offset);
          return msg.buffer.length;
        },write:function (stream, buffer, offset, length, position /* ignored */) {
          var sock = stream.node.sock;
          return sock.sock_ops.sendmsg(sock, buffer, offset, length);
        },close:function (stream) {
          var sock = stream.node.sock;
          sock.sock_ops.close(sock);
        }},nextname:function () {
        if (!SOCKFS.nextname.current) {
          SOCKFS.nextname.current = 0;
        }
        return 'socket[' + (SOCKFS.nextname.current++) + ']';
      },websocket_sock_ops:{createPeer:function (sock, addr, port) {
          var ws;
          if (typeof addr === 'object') {
            ws = addr;
            addr = null;
            port = null;
          }
          if (ws) {
            // for sockets that've already connected (e.g. we're the server)
            // we can inspect the _socket property for the address
            if (ws._socket) {
              addr = ws._socket.remoteAddress;
              port = ws._socket.remotePort;
            }
            // if we're just now initializing a connection to the remote,
            // inspect the url property
            else {
              var result = /ws[s]?:\/\/([^:]+):(\d+)/.exec(ws.url);
              if (!result) {
                throw new Error('WebSocket URL must be in the format ws(s)://address:port');
              }
              addr = result[1];
              port = parseInt(result[2], 10);
            }
          } else {
            // create the actual websocket object and connect
            try {
              var url = 'ws://' + addr + ':' + port;
              // the node ws library API is slightly different than the browser's
              var opts = ENVIRONMENT_IS_NODE ? {headers: {'websocket-protocol': ['binary']}} : ['binary'];
              // If node we use the ws library.
              var WebSocket = ENVIRONMENT_IS_NODE ? require('ws') : window['WebSocket'];
              ws = new WebSocket(url, opts);
              ws.binaryType = 'arraybuffer';
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EHOSTUNREACH);
            }
          }
          var peer = {
            addr: addr,
            port: port,
            socket: ws,
            dgram_send_queue: []
          };
          SOCKFS.websocket_sock_ops.addPeer(sock, peer);
          SOCKFS.websocket_sock_ops.handlePeerEvents(sock, peer);
          // if this is a bound dgram socket, send the port number first to allow
          // us to override the ephemeral port reported to us by remotePort on the
          // remote end.
          if (sock.type === 2 && typeof sock.sport !== 'undefined') {
            peer.dgram_send_queue.push(new Uint8Array([
                255, 255, 255, 255,
                'p'.charCodeAt(0), 'o'.charCodeAt(0), 'r'.charCodeAt(0), 't'.charCodeAt(0),
                ((sock.sport & 0xff00) >> 8) , (sock.sport & 0xff)
            ]));
          }
          return peer;
        },getPeer:function (sock, addr, port) {
          return sock.peers[addr + ':' + port];
        },addPeer:function (sock, peer) {
          sock.peers[peer.addr + ':' + peer.port] = peer;
        },removePeer:function (sock, peer) {
          delete sock.peers[peer.addr + ':' + peer.port];
        },handlePeerEvents:function (sock, peer) {
          var first = true;
          var handleOpen = function () {
            try {
              var queued = peer.dgram_send_queue.shift();
              while (queued) {
                peer.socket.send(queued);
                queued = peer.dgram_send_queue.shift();
              }
            } catch (e) {
              // not much we can do here in the way of proper error handling as we've already
              // lied and said this data was sent. shut it down.
              peer.socket.close();
            }
          };
          function handleMessage(data) {
            assert(typeof data !== 'string' && data.byteLength !== undefined);  // must receive an ArrayBuffer
            data = new Uint8Array(data);  // make a typed array view on the array buffer
            // if this is the port message, override the peer's port with it
            var wasfirst = first;
            first = false;
            if (wasfirst &&
                data.length === 10 &&
                data[0] === 255 && data[1] === 255 && data[2] === 255 && data[3] === 255 &&
                data[4] === 'p'.charCodeAt(0) && data[5] === 'o'.charCodeAt(0) && data[6] === 'r'.charCodeAt(0) && data[7] === 't'.charCodeAt(0)) {
              // update the peer's port and it's key in the peer map
              var newport = ((data[8] << 8) | data[9]);
              SOCKFS.websocket_sock_ops.removePeer(sock, peer);
              peer.port = newport;
              SOCKFS.websocket_sock_ops.addPeer(sock, peer);
              return;
            }
            sock.recv_queue.push({ addr: peer.addr, port: peer.port, data: data });
          };
          if (ENVIRONMENT_IS_NODE) {
            peer.socket.on('open', handleOpen);
            peer.socket.on('message', function(data, flags) {
              if (!flags.binary) {
                return;
              }
              handleMessage((new Uint8Array(data)).buffer);  // copy from node Buffer -> ArrayBuffer
            });
            peer.socket.on('error', function() {
              // don't throw
            });
          } else {
            peer.socket.onopen = handleOpen;
            peer.socket.onmessage = function peer_socket_onmessage(event) {
              handleMessage(event.data);
            };
          }
        },poll:function (sock) {
          if (sock.type === 1 && sock.server) {
            // listen sockets should only say they're available for reading
            // if there are pending clients.
            return sock.pending.length ? (64 | 1) : 0;
          }
          var mask = 0;
          var dest = sock.type === 1 ?  // we only care about the socket state for connection-based sockets
            SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport) :
            null;
          if (sock.recv_queue.length ||
              !dest ||  // connection-less sockets are always ready to read
              (dest && dest.socket.readyState === dest.socket.CLOSING) ||
              (dest && dest.socket.readyState === dest.socket.CLOSED)) {  // let recv return 0 once closed
            mask |= (64 | 1);
          }
          if (!dest ||  // connection-less sockets are always ready to write
              (dest && dest.socket.readyState === dest.socket.OPEN)) {
            mask |= 4;
          }
          if ((dest && dest.socket.readyState === dest.socket.CLOSING) ||
              (dest && dest.socket.readyState === dest.socket.CLOSED)) {
            mask |= 16;
          }
          return mask;
        },ioctl:function (sock, request, arg) {
          switch (request) {
            case 21531:
              var bytes = 0;
              if (sock.recv_queue.length) {
                bytes = sock.recv_queue[0].data.length;
              }
              HEAP32[((arg)>>2)]=bytes;
              return 0;
            default:
              return ERRNO_CODES.EINVAL;
          }
        },close:function (sock) {
          // if we've spawned a listen server, close it
          if (sock.server) {
            try {
              sock.server.close();
            } catch (e) {
            }
            sock.server = null;
          }
          // close any peer connections
          var peers = Object.keys(sock.peers);
          for (var i = 0; i < peers.length; i++) {
            var peer = sock.peers[peers[i]];
            try {
              peer.socket.close();
            } catch (e) {
            }
            SOCKFS.websocket_sock_ops.removePeer(sock, peer);
          }
          return 0;
        },bind:function (sock, addr, port) {
          if (typeof sock.saddr !== 'undefined' || typeof sock.sport !== 'undefined') {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);  // already bound
          }
          sock.saddr = addr;
          sock.sport = port || _mkport();
          // in order to emulate dgram sockets, we need to launch a listen server when
          // binding on a connection-less socket
          // note: this is only required on the server side
          if (sock.type === 2) {
            // close the existing server if it exists
            if (sock.server) {
              sock.server.close();
              sock.server = null;
            }
            // swallow error operation not supported error that occurs when binding in the
            // browser where this isn't supported
            try {
              sock.sock_ops.listen(sock, 0);
            } catch (e) {
              if (!(e instanceof FS.ErrnoError)) throw e;
              if (e.errno !== ERRNO_CODES.EOPNOTSUPP) throw e;
            }
          }
        },connect:function (sock, addr, port) {
          if (sock.server) {
            throw new FS.ErrnoError(ERRNO_CODS.EOPNOTSUPP);
          }
          // TODO autobind
          // if (!sock.addr && sock.type == 2) {
          // }
          // early out if we're already connected / in the middle of connecting
          if (typeof sock.daddr !== 'undefined' && typeof sock.dport !== 'undefined') {
            var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
            if (dest) {
              if (dest.socket.readyState === dest.socket.CONNECTING) {
                throw new FS.ErrnoError(ERRNO_CODES.EALREADY);
              } else {
                throw new FS.ErrnoError(ERRNO_CODES.EISCONN);
              }
            }
          }
          // add the socket to our peer list and set our
          // destination address / port to match
          var peer = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
          sock.daddr = peer.addr;
          sock.dport = peer.port;
          // always "fail" in non-blocking mode
          throw new FS.ErrnoError(ERRNO_CODES.EINPROGRESS);
        },listen:function (sock, backlog) {
          if (!ENVIRONMENT_IS_NODE) {
            throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
          }
          if (sock.server) {
             throw new FS.ErrnoError(ERRNO_CODES.EINVAL);  // already listening
          }
          var WebSocketServer = require('ws').Server;
          var host = sock.saddr;
          sock.server = new WebSocketServer({
            host: host,
            port: sock.sport
            // TODO support backlog
          });
          sock.server.on('connection', function(ws) {
            if (sock.type === 1) {
              var newsock = SOCKFS.createSocket(sock.family, sock.type, sock.protocol);
              // create a peer on the new socket
              var peer = SOCKFS.websocket_sock_ops.createPeer(newsock, ws);
              newsock.daddr = peer.addr;
              newsock.dport = peer.port;
              // push to queue for accept to pick up
              sock.pending.push(newsock);
            } else {
              // create a peer on the listen socket so calling sendto
              // with the listen socket and an address will resolve
              // to the correct client
              SOCKFS.websocket_sock_ops.createPeer(sock, ws);
            }
          });
          sock.server.on('closed', function() {
            sock.server = null;
          });
          sock.server.on('error', function() {
            // don't throw
          });
        },accept:function (listensock) {
          if (!listensock.server) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          var newsock = listensock.pending.shift();
          newsock.stream.flags = listensock.stream.flags;
          return newsock;
        },getname:function (sock, peer) {
          var addr, port;
          if (peer) {
            if (sock.daddr === undefined || sock.dport === undefined) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
            }
            addr = sock.daddr;
            port = sock.dport;
          } else {
            // TODO saddr and sport will be set for bind()'d UDP sockets, but what
            // should we be returning for TCP sockets that've been connect()'d?
            addr = sock.saddr || 0;
            port = sock.sport || 0;
          }
          return { addr: addr, port: port };
        },sendmsg:function (sock, buffer, offset, length, addr, port) {
          if (sock.type === 2) {
            // connection-less sockets will honor the message address,
            // and otherwise fall back to the bound destination address
            if (addr === undefined || port === undefined) {
              addr = sock.daddr;
              port = sock.dport;
            }
            // if there was no address to fall back to, error out
            if (addr === undefined || port === undefined) {
              throw new FS.ErrnoError(ERRNO_CODES.EDESTADDRREQ);
            }
          } else {
            // connection-based sockets will only use the bound
            addr = sock.daddr;
            port = sock.dport;
          }
          // find the peer for the destination address
          var dest = SOCKFS.websocket_sock_ops.getPeer(sock, addr, port);
          // early out if not connected with a connection-based socket
          if (sock.type === 1) {
            if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
            } else if (dest.socket.readyState === dest.socket.CONNECTING) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
          }
          // create a copy of the incoming data to send, as the WebSocket API
          // doesn't work entirely with an ArrayBufferView, it'll just send
          // the entire underlying buffer
          var data;
          if (buffer instanceof Array || buffer instanceof ArrayBuffer) {
            data = buffer.slice(offset, offset + length);
          } else {  // ArrayBufferView
            data = buffer.buffer.slice(buffer.byteOffset + offset, buffer.byteOffset + offset + length);
          }
          // if we're emulating a connection-less dgram socket and don't have
          // a cached connection, queue the buffer to send upon connect and
          // lie, saying the data was sent now.
          if (sock.type === 2) {
            if (!dest || dest.socket.readyState !== dest.socket.OPEN) {
              // if we're not connected, open a new connection
              if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
                dest = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
              }
              dest.dgram_send_queue.push(data);
              return length;
            }
          }
          try {
            // send the actual data
            dest.socket.send(data);
            return length;
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
        },recvmsg:function (sock, length) {
          // http://pubs.opengroup.org/onlinepubs/7908799/xns/recvmsg.html
          if (sock.type === 1 && sock.server) {
            // tcp servers should not be recv()'ing on the listen socket
            throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
          }
          var queued = sock.recv_queue.shift();
          if (!queued) {
            if (sock.type === 1) {
              var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
              if (!dest) {
                // if we have a destination address but are not connected, error out
                throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
              }
              else if (dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
                // return null if the socket has closed
                return null;
              }
              else {
                // else, our socket is in a valid state but truly has nothing available
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
            } else {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
          }
          // queued.data will be an ArrayBuffer if it's unadulterated, but if it's
          // requeued TCP data it'll be an ArrayBufferView
          var queuedLength = queued.data.byteLength || queued.data.length;
          var queuedOffset = queued.data.byteOffset || 0;
          var queuedBuffer = queued.data.buffer || queued.data;
          var bytesRead = Math.min(length, queuedLength);
          var res = {
            buffer: new Uint8Array(queuedBuffer, queuedOffset, bytesRead),
            addr: queued.addr,
            port: queued.port
          };
          // push back any unread data for TCP connections
          if (sock.type === 1 && bytesRead < queuedLength) {
            var bytesRemaining = queuedLength - bytesRead;
            queued.data = new Uint8Array(queuedBuffer, queuedOffset + bytesRead, bytesRemaining);
            sock.recv_queue.unshift(queued);
          }
          return res;
        }}};function _send(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _write(fd, buf, len);
    }
  function _pwrite(fildes, buf, nbyte, offset) {
      // ssize_t pwrite(int fildes, const void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _write(fildes, buf, nbyte) {
      // ssize_t write(int fildes, const void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fwrite(ptr, size, nitems, stream) {
      // size_t fwrite(const void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fwrite.html
      var bytesToWrite = nitems * size;
      if (bytesToWrite == 0) return 0;
      var bytesWritten = _write(stream, ptr, bytesToWrite);
      if (bytesWritten == -1) {
        var streamObj = FS.getStream(stream);
        if (streamObj) streamObj.error = true;
        return 0;
      } else {
        return Math.floor(bytesWritten / size);
      }
    }
  function _ungetc(c, stream) {
      // int ungetc(int c, FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/ungetc.html
      stream = FS.getStream(stream);
      if (!stream) {
        return -1;
      }
      if (c === -1) {
        // do nothing for EOF character
        return c;
      }
      c = unSign(c & 0xFF);
      stream.ungotten.push(c);
      stream.eof = false;
      return c;
    }
  function _recv(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _read(fd, buf, len);
    }
  function _pread(fildes, buf, nbyte, offset) {
      // ssize_t pread(int fildes, void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.read(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _read(fildes, buf, nbyte) {
      // ssize_t read(int fildes, void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.read(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fread(ptr, size, nitems, stream) {
      // size_t fread(void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fread.html
      var bytesToRead = nitems * size;
      if (bytesToRead == 0) {
        return 0;
      }
      var bytesRead = 0;
      var streamObj = FS.getStream(stream);
      if (!streamObj) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return 0;
      }
      while (streamObj.ungotten.length && bytesToRead > 0) {
        HEAP8[((ptr++)|0)]=streamObj.ungotten.pop()
        bytesToRead--;
        bytesRead++;
      }
      var err = _read(stream, ptr, bytesToRead);
      if (err == -1) {
        if (streamObj) streamObj.error = true;
        return 0;
      }
      bytesRead += err;
      if (bytesRead < bytesToRead) streamObj.eof = true;
      return Math.floor(bytesRead / size);
    }function _fgetc(stream) {
      // int fgetc(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fgetc.html
      var streamObj = FS.getStream(stream);
      if (!streamObj) return -1;
      if (streamObj.eof || streamObj.error) return -1;
      var ret = _fread(_fgetc.ret, 1, 1, stream);
      if (ret == 0) {
        return -1;
      } else if (ret == -1) {
        streamObj.error = true;
        return -1;
      } else {
        return HEAPU8[((_fgetc.ret)|0)];
      }
    }var _getc=_fgetc;
  function ___errno_location() {
      return ___errno_state;
    }
  function _strerror_r(errnum, strerrbuf, buflen) {
      if (errnum in ERRNO_MESSAGES) {
        if (ERRNO_MESSAGES[errnum].length > buflen - 1) {
          return ___setErrNo(ERRNO_CODES.ERANGE);
        } else {
          var msg = ERRNO_MESSAGES[errnum];
          writeAsciiToMemory(msg, strerrbuf);
          return 0;
        }
      } else {
        return ___setErrNo(ERRNO_CODES.EINVAL);
      }
    }function _strerror(errnum) {
      if (!_strerror.buffer) _strerror.buffer = _malloc(256);
      _strerror_r(errnum, _strerror.buffer, 256);
      return _strerror.buffer;
    }
  function _abort() {
      Module['abort']();
    }
  function _memmove(dest, src, num) {
      dest = dest|0; src = src|0; num = num|0;
      var ret = 0;
      if (((src|0) < (dest|0)) & ((dest|0) < ((src + num)|0))) {
        // Unlikely case: Copy backwards in a safe manner
        ret = dest;
        src = (src + num)|0;
        dest = (dest + num)|0;
        while ((num|0) > 0) {
          dest = (dest - 1)|0;
          src = (src - 1)|0;
          num = (num - 1)|0;
          HEAP8[(dest)]=HEAP8[(src)];
        }
        dest = ret;
      } else {
        _memcpy(dest, src, num) | 0;
      }
      return dest | 0;
    }var _llvm_memmove_p0i8_p0i8_i32=_memmove;
  function ___cxa_rethrow() {
      ___cxa_end_catch.rethrown = true;
      throw HEAP32[((_llvm_eh_exception.buf)>>2)];;
    }
  function __reallyNegative(x) {
      return x < 0 || (x === 0 && (1/x) === -Infinity);
    }function __formatString(format, varargs) {
      var textIndex = format;
      var argIndex = 0;
      function getNextArg(type) {
        // NOTE: Explicitly ignoring type safety. Otherwise this fails:
        //       int x = 4; printf("%c\n", (char)x);
        var ret;
        if (type === 'double') {
          ret = HEAPF64[(((varargs)+(argIndex))>>3)];
        } else if (type == 'i64') {
          ret = [HEAP32[(((varargs)+(argIndex))>>2)],
                 HEAP32[(((varargs)+(argIndex+8))>>2)]];
          argIndex += 8; // each 32-bit chunk is in a 64-bit block
        } else {
          type = 'i32'; // varargs are always i32, i64, or double
          ret = HEAP32[(((varargs)+(argIndex))>>2)];
        }
        argIndex += Math.max(Runtime.getNativeFieldSize(type), Runtime.getAlignSize(type, null, true));
        return ret;
      }
      var ret = [];
      var curr, next, currArg;
      while(1) {
        var startTextIndex = textIndex;
        curr = HEAP8[(textIndex)];
        if (curr === 0) break;
        next = HEAP8[((textIndex+1)|0)];
        if (curr == 37) {
          // Handle flags.
          var flagAlwaysSigned = false;
          var flagLeftAlign = false;
          var flagAlternative = false;
          var flagZeroPad = false;
          var flagPadSign = false;
          flagsLoop: while (1) {
            switch (next) {
              case 43:
                flagAlwaysSigned = true;
                break;
              case 45:
                flagLeftAlign = true;
                break;
              case 35:
                flagAlternative = true;
                break;
              case 48:
                if (flagZeroPad) {
                  break flagsLoop;
                } else {
                  flagZeroPad = true;
                  break;
                }
              case 32:
                flagPadSign = true;
                break;
              default:
                break flagsLoop;
            }
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
          }
          // Handle width.
          var width = 0;
          if (next == 42) {
            width = getNextArg('i32');
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
          } else {
            while (next >= 48 && next <= 57) {
              width = width * 10 + (next - 48);
              textIndex++;
              next = HEAP8[((textIndex+1)|0)];
            }
          }
          // Handle precision.
          var precisionSet = false;
          if (next == 46) {
            var precision = 0;
            precisionSet = true;
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
            if (next == 42) {
              precision = getNextArg('i32');
              textIndex++;
            } else {
              while(1) {
                var precisionChr = HEAP8[((textIndex+1)|0)];
                if (precisionChr < 48 ||
                    precisionChr > 57) break;
                precision = precision * 10 + (precisionChr - 48);
                textIndex++;
              }
            }
            next = HEAP8[((textIndex+1)|0)];
          } else {
            var precision = 6; // Standard default.
          }
          // Handle integer sizes. WARNING: These assume a 32-bit architecture!
          var argSize;
          switch (String.fromCharCode(next)) {
            case 'h':
              var nextNext = HEAP8[((textIndex+2)|0)];
              if (nextNext == 104) {
                textIndex++;
                argSize = 1; // char (actually i32 in varargs)
              } else {
                argSize = 2; // short (actually i32 in varargs)
              }
              break;
            case 'l':
              var nextNext = HEAP8[((textIndex+2)|0)];
              if (nextNext == 108) {
                textIndex++;
                argSize = 8; // long long
              } else {
                argSize = 4; // long
              }
              break;
            case 'L': // long long
            case 'q': // int64_t
            case 'j': // intmax_t
              argSize = 8;
              break;
            case 'z': // size_t
            case 't': // ptrdiff_t
            case 'I': // signed ptrdiff_t or unsigned size_t
              argSize = 4;
              break;
            default:
              argSize = null;
          }
          if (argSize) textIndex++;
          next = HEAP8[((textIndex+1)|0)];
          // Handle type specifier.
          switch (String.fromCharCode(next)) {
            case 'd': case 'i': case 'u': case 'o': case 'x': case 'X': case 'p': {
              // Integer.
              var signed = next == 100 || next == 105;
              argSize = argSize || 4;
              var currArg = getNextArg('i' + (argSize * 8));
              var origArg = currArg;
              var argText;
              // Flatten i64-1 [low, high] into a (slightly rounded) double
              if (argSize == 8) {
                currArg = Runtime.makeBigInt(currArg[0], currArg[1], next == 117);
              }
              // Truncate to requested size.
              if (argSize <= 4) {
                var limit = Math.pow(256, argSize) - 1;
                currArg = (signed ? reSign : unSign)(currArg & limit, argSize * 8);
              }
              // Format the number.
              var currAbsArg = Math.abs(currArg);
              var prefix = '';
              if (next == 100 || next == 105) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], null); else
                argText = reSign(currArg, 8 * argSize, 1).toString(10);
              } else if (next == 117) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], true); else
                argText = unSign(currArg, 8 * argSize, 1).toString(10);
                currArg = Math.abs(currArg);
              } else if (next == 111) {
                argText = (flagAlternative ? '0' : '') + currAbsArg.toString(8);
              } else if (next == 120 || next == 88) {
                prefix = (flagAlternative && currArg != 0) ? '0x' : '';
                if (argSize == 8 && i64Math) {
                  if (origArg[1]) {
                    argText = (origArg[1]>>>0).toString(16);
                    var lower = (origArg[0]>>>0).toString(16);
                    while (lower.length < 8) lower = '0' + lower;
                    argText += lower;
                  } else {
                    argText = (origArg[0]>>>0).toString(16);
                  }
                } else
                if (currArg < 0) {
                  // Represent negative numbers in hex as 2's complement.
                  currArg = -currArg;
                  argText = (currAbsArg - 1).toString(16);
                  var buffer = [];
                  for (var i = 0; i < argText.length; i++) {
                    buffer.push((0xF - parseInt(argText[i], 16)).toString(16));
                  }
                  argText = buffer.join('');
                  while (argText.length < argSize * 2) argText = 'f' + argText;
                } else {
                  argText = currAbsArg.toString(16);
                }
                if (next == 88) {
                  prefix = prefix.toUpperCase();
                  argText = argText.toUpperCase();
                }
              } else if (next == 112) {
                if (currAbsArg === 0) {
                  argText = '(nil)';
                } else {
                  prefix = '0x';
                  argText = currAbsArg.toString(16);
                }
              }
              if (precisionSet) {
                while (argText.length < precision) {
                  argText = '0' + argText;
                }
              }
              // Add sign if needed
              if (currArg >= 0) {
                if (flagAlwaysSigned) {
                  prefix = '+' + prefix;
                } else if (flagPadSign) {
                  prefix = ' ' + prefix;
                }
              }
              // Move sign to prefix so we zero-pad after the sign
              if (argText.charAt(0) == '-') {
                prefix = '-' + prefix;
                argText = argText.substr(1);
              }
              // Add padding.
              while (prefix.length + argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad) {
                    argText = '0' + argText;
                  } else {
                    prefix = ' ' + prefix;
                  }
                }
              }
              // Insert the result into the buffer.
              argText = prefix + argText;
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 'f': case 'F': case 'e': case 'E': case 'g': case 'G': {
              // Float.
              var currArg = getNextArg('double');
              var argText;
              if (isNaN(currArg)) {
                argText = 'nan';
                flagZeroPad = false;
              } else if (!isFinite(currArg)) {
                argText = (currArg < 0 ? '-' : '') + 'inf';
                flagZeroPad = false;
              } else {
                var isGeneral = false;
                var effectivePrecision = Math.min(precision, 20);
                // Convert g/G to f/F or e/E, as per:
                // http://pubs.opengroup.org/onlinepubs/9699919799/functions/printf.html
                if (next == 103 || next == 71) {
                  isGeneral = true;
                  precision = precision || 1;
                  var exponent = parseInt(currArg.toExponential(effectivePrecision).split('e')[1], 10);
                  if (precision > exponent && exponent >= -4) {
                    next = ((next == 103) ? 'f' : 'F').charCodeAt(0);
                    precision -= exponent + 1;
                  } else {
                    next = ((next == 103) ? 'e' : 'E').charCodeAt(0);
                    precision--;
                  }
                  effectivePrecision = Math.min(precision, 20);
                }
                if (next == 101 || next == 69) {
                  argText = currArg.toExponential(effectivePrecision);
                  // Make sure the exponent has at least 2 digits.
                  if (/[eE][-+]\d$/.test(argText)) {
                    argText = argText.slice(0, -1) + '0' + argText.slice(-1);
                  }
                } else if (next == 102 || next == 70) {
                  argText = currArg.toFixed(effectivePrecision);
                  if (currArg === 0 && __reallyNegative(currArg)) {
                    argText = '-' + argText;
                  }
                }
                var parts = argText.split('e');
                if (isGeneral && !flagAlternative) {
                  // Discard trailing zeros and periods.
                  while (parts[0].length > 1 && parts[0].indexOf('.') != -1 &&
                         (parts[0].slice(-1) == '0' || parts[0].slice(-1) == '.')) {
                    parts[0] = parts[0].slice(0, -1);
                  }
                } else {
                  // Make sure we have a period in alternative mode.
                  if (flagAlternative && argText.indexOf('.') == -1) parts[0] += '.';
                  // Zero pad until required precision.
                  while (precision > effectivePrecision++) parts[0] += '0';
                }
                argText = parts[0] + (parts.length > 1 ? 'e' + parts[1] : '');
                // Capitalize 'E' if needed.
                if (next == 69) argText = argText.toUpperCase();
                // Add sign.
                if (currArg >= 0) {
                  if (flagAlwaysSigned) {
                    argText = '+' + argText;
                  } else if (flagPadSign) {
                    argText = ' ' + argText;
                  }
                }
              }
              // Add padding.
              while (argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad && (argText[0] == '-' || argText[0] == '+')) {
                    argText = argText[0] + '0' + argText.slice(1);
                  } else {
                    argText = (flagZeroPad ? '0' : ' ') + argText;
                  }
                }
              }
              // Adjust case.
              if (next < 97) argText = argText.toUpperCase();
              // Insert the result into the buffer.
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 's': {
              // String.
              var arg = getNextArg('i8*');
              var argLength = arg ? _strlen(arg) : '(null)'.length;
              if (precisionSet) argLength = Math.min(argLength, precision);
              if (!flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              if (arg) {
                for (var i = 0; i < argLength; i++) {
                  ret.push(HEAPU8[((arg++)|0)]);
                }
              } else {
                ret = ret.concat(intArrayFromString('(null)'.substr(0, argLength), true));
              }
              if (flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              break;
            }
            case 'c': {
              // Character.
              if (flagLeftAlign) ret.push(getNextArg('i8'));
              while (--width > 0) {
                ret.push(32);
              }
              if (!flagLeftAlign) ret.push(getNextArg('i8'));
              break;
            }
            case 'n': {
              // Write the length written so far to the next parameter.
              var ptr = getNextArg('i32*');
              HEAP32[((ptr)>>2)]=ret.length
              break;
            }
            case '%': {
              // Literal percent sign.
              ret.push(curr);
              break;
            }
            default: {
              // Unknown specifiers remain untouched.
              for (var i = startTextIndex; i < textIndex + 2; i++) {
                ret.push(HEAP8[(i)]);
              }
            }
          }
          textIndex += 2;
          // TODO: Support a/A (hex float) and m (last error) specifiers.
          // TODO: Support %1${specifier} for arg selection.
        } else {
          ret.push(curr);
          textIndex += 1;
        }
      }
      return ret;
    }function _snprintf(s, n, format, varargs) {
      // int snprintf(char *restrict s, size_t n, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var limit = (n === undefined) ? result.length
                                    : Math.min(result.length, Math.max(n - 1, 0));
      if (s < 0) {
        s = -s;
        var buf = _malloc(limit+1);
        HEAP32[((s)>>2)]=buf;
        s = buf;
      }
      for (var i = 0; i < limit; i++) {
        HEAP8[(((s)+(i))|0)]=result[i];
      }
      if (limit < n || (n === undefined)) HEAP8[(((s)+(i))|0)]=0;
      return result.length;
    }
  function _sysconf(name) {
      // long sysconf(int name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html
      switch(name) {
        case 30: return PAGE_SIZE;
        case 132:
        case 133:
        case 12:
        case 137:
        case 138:
        case 15:
        case 235:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 149:
        case 13:
        case 10:
        case 236:
        case 153:
        case 9:
        case 21:
        case 22:
        case 159:
        case 154:
        case 14:
        case 77:
        case 78:
        case 139:
        case 80:
        case 81:
        case 79:
        case 82:
        case 68:
        case 67:
        case 164:
        case 11:
        case 29:
        case 47:
        case 48:
        case 95:
        case 52:
        case 51:
        case 46:
          return 200809;
        case 27:
        case 246:
        case 127:
        case 128:
        case 23:
        case 24:
        case 160:
        case 161:
        case 181:
        case 182:
        case 242:
        case 183:
        case 184:
        case 243:
        case 244:
        case 245:
        case 165:
        case 178:
        case 179:
        case 49:
        case 50:
        case 168:
        case 169:
        case 175:
        case 170:
        case 171:
        case 172:
        case 97:
        case 76:
        case 32:
        case 173:
        case 35:
          return -1;
        case 176:
        case 177:
        case 7:
        case 155:
        case 8:
        case 157:
        case 125:
        case 126:
        case 92:
        case 93:
        case 129:
        case 130:
        case 131:
        case 94:
        case 91:
          return 1;
        case 74:
        case 60:
        case 69:
        case 70:
        case 4:
          return 1024;
        case 31:
        case 42:
        case 72:
          return 32;
        case 87:
        case 26:
        case 33:
          return 2147483647;
        case 34:
        case 1:
          return 47839;
        case 38:
        case 36:
          return 99;
        case 43:
        case 37:
          return 2048;
        case 0: return 2097152;
        case 3: return 65536;
        case 28: return 32768;
        case 44: return 32767;
        case 75: return 16384;
        case 39: return 1000;
        case 89: return 700;
        case 71: return 256;
        case 40: return 255;
        case 2: return 100;
        case 180: return 64;
        case 25: return 20;
        case 5: return 16;
        case 6: return 6;
        case 73: return 4;
        case 84: return 1;
      }
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
    }
  function ___cxa_guard_abort() {}
  function _isxdigit(chr) {
      return (chr >= 48 && chr <= 57) ||
             (chr >= 97 && chr <= 102) ||
             (chr >= 65 && chr <= 70);
    }var _isxdigit_l=_isxdigit;
  function _isdigit(chr) {
      return chr >= 48 && chr <= 57;
    }var _isdigit_l=_isdigit;
  function __getFloat(text) {
      return /^[+-]?[0-9]*\.?[0-9]+([eE][+-]?[0-9]+)?/.exec(text);
    }function __scanString(format, get, unget, varargs) {
      if (!__scanString.whiteSpace) {
        __scanString.whiteSpace = {};
        __scanString.whiteSpace[32] = 1;
        __scanString.whiteSpace[9] = 1;
        __scanString.whiteSpace[10] = 1;
        __scanString.whiteSpace[11] = 1;
        __scanString.whiteSpace[12] = 1;
        __scanString.whiteSpace[13] = 1;
      }
      // Supports %x, %4x, %d.%d, %lld, %s, %f, %lf.
      // TODO: Support all format specifiers.
      format = Pointer_stringify(format);
      var soFar = 0;
      if (format.indexOf('%n') >= 0) {
        // need to track soFar
        var _get = get;
        get = function get() {
          soFar++;
          return _get();
        }
        var _unget = unget;
        unget = function unget() {
          soFar--;
          return _unget();
        }
      }
      var formatIndex = 0;
      var argsi = 0;
      var fields = 0;
      var argIndex = 0;
      var next;
      mainLoop:
      for (var formatIndex = 0; formatIndex < format.length;) {
        if (format[formatIndex] === '%' && format[formatIndex+1] == 'n') {
          var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
          argIndex += Runtime.getAlignSize('void*', null, true);
          HEAP32[((argPtr)>>2)]=soFar;
          formatIndex += 2;
          continue;
        }
        if (format[formatIndex] === '%') {
          var nextC = format.indexOf('c', formatIndex+1);
          if (nextC > 0) {
            var maxx = 1;
            if (nextC > formatIndex+1) {
              var sub = format.substring(formatIndex+1, nextC);
              maxx = parseInt(sub);
              if (maxx != sub) maxx = 0;
            }
            if (maxx) {
              var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
              argIndex += Runtime.getAlignSize('void*', null, true);
              fields++;
              for (var i = 0; i < maxx; i++) {
                next = get();
                HEAP8[((argPtr++)|0)]=next;
              }
              formatIndex += nextC - formatIndex + 1;
              continue;
            }
          }
        }
        // handle %[...]
        if (format[formatIndex] === '%' && format.indexOf('[', formatIndex+1) > 0) {
          var match = /\%([0-9]*)\[(\^)?(\]?[^\]]*)\]/.exec(format.substring(formatIndex));
          if (match) {
            var maxNumCharacters = parseInt(match[1]) || Infinity;
            var negateScanList = (match[2] === '^');
            var scanList = match[3];
            // expand "middle" dashs into character sets
            var middleDashMatch;
            while ((middleDashMatch = /([^\-])\-([^\-])/.exec(scanList))) {
              var rangeStartCharCode = middleDashMatch[1].charCodeAt(0);
              var rangeEndCharCode = middleDashMatch[2].charCodeAt(0);
              for (var expanded = ''; rangeStartCharCode <= rangeEndCharCode; expanded += String.fromCharCode(rangeStartCharCode++));
              scanList = scanList.replace(middleDashMatch[1] + '-' + middleDashMatch[2], expanded);
            }
            var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
            argIndex += Runtime.getAlignSize('void*', null, true);
            fields++;
            for (var i = 0; i < maxNumCharacters; i++) {
              next = get();
              if (negateScanList) {
                if (scanList.indexOf(String.fromCharCode(next)) < 0) {
                  HEAP8[((argPtr++)|0)]=next;
                } else {
                  unget();
                  break;
                }
              } else {
                if (scanList.indexOf(String.fromCharCode(next)) >= 0) {
                  HEAP8[((argPtr++)|0)]=next;
                } else {
                  unget();
                  break;
                }
              }
            }
            // write out null-terminating character
            HEAP8[((argPtr++)|0)]=0;
            formatIndex += match[0].length;
            continue;
          }
        }      
        // remove whitespace
        while (1) {
          next = get();
          if (next == 0) return fields;
          if (!(next in __scanString.whiteSpace)) break;
        }
        unget();
        if (format[formatIndex] === '%') {
          formatIndex++;
          var suppressAssignment = false;
          if (format[formatIndex] == '*') {
            suppressAssignment = true;
            formatIndex++;
          }
          var maxSpecifierStart = formatIndex;
          while (format[formatIndex].charCodeAt(0) >= 48 &&
                 format[formatIndex].charCodeAt(0) <= 57) {
            formatIndex++;
          }
          var max_;
          if (formatIndex != maxSpecifierStart) {
            max_ = parseInt(format.slice(maxSpecifierStart, formatIndex), 10);
          }
          var long_ = false;
          var half = false;
          var longLong = false;
          if (format[formatIndex] == 'l') {
            long_ = true;
            formatIndex++;
            if (format[formatIndex] == 'l') {
              longLong = true;
              formatIndex++;
            }
          } else if (format[formatIndex] == 'h') {
            half = true;
            formatIndex++;
          }
          var type = format[formatIndex];
          formatIndex++;
          var curr = 0;
          var buffer = [];
          // Read characters according to the format. floats are trickier, they may be in an unfloat state in the middle, then be a valid float later
          if (type == 'f' || type == 'e' || type == 'g' ||
              type == 'F' || type == 'E' || type == 'G') {
            next = get();
            while (next > 0 && (!(next in __scanString.whiteSpace)))  {
              buffer.push(String.fromCharCode(next));
              next = get();
            }
            var m = __getFloat(buffer.join(''));
            var last = m ? m[0].length : 0;
            for (var i = 0; i < buffer.length - last + 1; i++) {
              unget();
            }
            buffer.length = last;
          } else {
            next = get();
            var first = true;
            // Strip the optional 0x prefix for %x.
            if ((type == 'x' || type == 'X') && (next == 48)) {
              var peek = get();
              if (peek == 120 || peek == 88) {
                next = get();
              } else {
                unget();
              }
            }
            while ((curr < max_ || isNaN(max_)) && next > 0) {
              if (!(next in __scanString.whiteSpace) && // stop on whitespace
                  (type == 's' ||
                   ((type === 'd' || type == 'u' || type == 'i') && ((next >= 48 && next <= 57) ||
                                                                     (first && next == 45))) ||
                   ((type === 'x' || type === 'X') && (next >= 48 && next <= 57 ||
                                     next >= 97 && next <= 102 ||
                                     next >= 65 && next <= 70))) &&
                  (formatIndex >= format.length || next !== format[formatIndex].charCodeAt(0))) { // Stop when we read something that is coming up
                buffer.push(String.fromCharCode(next));
                next = get();
                curr++;
                first = false;
              } else {
                break;
              }
            }
            unget();
          }
          if (buffer.length === 0) return 0;  // Failure.
          if (suppressAssignment) continue;
          var text = buffer.join('');
          var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
          argIndex += Runtime.getAlignSize('void*', null, true);
          switch (type) {
            case 'd': case 'u': case 'i':
              if (half) {
                HEAP16[((argPtr)>>1)]=parseInt(text, 10);
              } else if (longLong) {
                (tempI64 = [parseInt(text, 10)>>>0,(tempDouble=parseInt(text, 10),Math_abs(tempDouble) >= 1 ? (tempDouble > 0 ? Math_min(Math_floor((tempDouble)/4294967296), 4294967295)>>>0 : (~~(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296)))>>>0) : 0)],HEAP32[((argPtr)>>2)]=tempI64[0],HEAP32[(((argPtr)+(4))>>2)]=tempI64[1]);
              } else {
                HEAP32[((argPtr)>>2)]=parseInt(text, 10);
              }
              break;
            case 'X':
            case 'x':
              HEAP32[((argPtr)>>2)]=parseInt(text, 16)
              break;
            case 'F':
            case 'f':
            case 'E':
            case 'e':
            case 'G':
            case 'g':
            case 'E':
              // fallthrough intended
              if (long_) {
                HEAPF64[((argPtr)>>3)]=parseFloat(text)
              } else {
                HEAPF32[((argPtr)>>2)]=parseFloat(text)
              }
              break;
            case 's':
              var array = intArrayFromString(text);
              for (var j = 0; j < array.length; j++) {
                HEAP8[(((argPtr)+(j))|0)]=array[j]
              }
              break;
          }
          fields++;
        } else if (format[formatIndex].charCodeAt(0) in __scanString.whiteSpace) {
          next = get();
          while (next in __scanString.whiteSpace) {
            if (next <= 0) break mainLoop;  // End of input.
            next = get();
          }
          unget(next);
          formatIndex++;
        } else {
          // Not a specifier.
          next = get();
          if (format[formatIndex].charCodeAt(0) !== next) {
            unget(next);
            break mainLoop;
          }
          formatIndex++;
        }
      }
      return fields;
    }function _sscanf(s, format, varargs) {
      // int sscanf(const char *restrict s, const char *restrict format, ... );
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/scanf.html
      var index = 0;
      function get() { return HEAP8[(((s)+(index++))|0)]; };
      function unget() { index--; };
      return __scanString(format, get, unget, varargs);
    }
  function _catopen() { throw 'TODO: ' + aborter }
  function _catgets() { throw 'TODO: ' + aborter }
  function _catclose() { throw 'TODO: ' + aborter }
  function _newlocale(mask, locale, base) {
      return _malloc(4);
    }
  function _freelocale(locale) {
      _free(locale);
    }
  function _isascii(chr) {
      return chr >= 0 && (chr & 0x80) == 0;
    }
  function ___ctype_b_loc() {
      // http://refspecs.freestandards.org/LSB_3.0.0/LSB-Core-generic/LSB-Core-generic/baselib---ctype-b-loc.html
      var me = ___ctype_b_loc;
      if (!me.ret) {
        var values = [
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,8195,8194,8194,8194,8194,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,24577,49156,49156,49156,
          49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,55304,55304,55304,55304,55304,55304,55304,55304,
          55304,55304,49156,49156,49156,49156,49156,49156,49156,54536,54536,54536,54536,54536,54536,50440,50440,50440,50440,50440,
          50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,49156,49156,49156,49156,49156,
          49156,54792,54792,54792,54792,54792,54792,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,
          50696,50696,50696,50696,50696,50696,50696,49156,49156,49156,49156,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
        ];
        var i16size = 2;
        var arr = _malloc(values.length * i16size);
        for (var i = 0; i < values.length; i++) {
          HEAP16[(((arr)+(i * i16size))>>1)]=values[i]
        }
        me.ret = allocate([arr + 128 * i16size], 'i16*', ALLOC_NORMAL);
      }
      return me.ret;
    }
  function ___ctype_tolower_loc() {
      // http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libutil---ctype-tolower-loc.html
      var me = ___ctype_tolower_loc;
      if (!me.ret) {
        var values = [
          128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,
          158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,
          188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,
          218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,
          248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
          33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,97,98,99,100,101,102,103,
          104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,91,92,93,94,95,96,97,98,99,100,101,102,103,
          104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,
          134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,
          164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,
          194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,
          224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,
          254,255
        ];
        var i32size = 4;
        var arr = _malloc(values.length * i32size);
        for (var i = 0; i < values.length; i++) {
          HEAP32[(((arr)+(i * i32size))>>2)]=values[i]
        }
        me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
      }
      return me.ret;
    }
  function ___ctype_toupper_loc() {
      // http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libutil---ctype-toupper-loc.html
      var me = ___ctype_toupper_loc;
      if (!me.ret) {
        var values = [
          128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,
          158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,
          188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,
          218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,
          248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
          33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,
          73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,
          81,82,83,84,85,86,87,88,89,90,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,
          145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,
          175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,
          205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,
          235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255
        ];
        var i32size = 4;
        var arr = _malloc(values.length * i32size);
        for (var i = 0; i < values.length; i++) {
          HEAP32[(((arr)+(i * i32size))>>2)]=values[i]
        }
        me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
      }
      return me.ret;
    }
  function __isLeapYear(year) {
        return year%4 === 0 && (year%100 !== 0 || year%400 === 0);
    }
  function __arraySum(array, index) {
      var sum = 0;
      for (var i = 0; i <= index; sum += array[i++]);
      return sum;
    }
  var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];
  var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date, days) {
      var newDate = new Date(date.getTime());
      while(days > 0) {
        var leap = __isLeapYear(newDate.getFullYear());
        var currentMonth = newDate.getMonth();
        var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];
        if (days > daysInCurrentMonth-newDate.getDate()) {
          // we spill over to next month
          days -= (daysInCurrentMonth-newDate.getDate()+1);
          newDate.setDate(1);
          if (currentMonth < 11) {
            newDate.setMonth(currentMonth+1)
          } else {
            newDate.setMonth(0);
            newDate.setFullYear(newDate.getFullYear()+1);
          }
        } else {
          // we stay in current month 
          newDate.setDate(newDate.getDate()+days);
          return newDate;
        }
      }
      return newDate;
    }function _strftime(s, maxsize, format, tm) {
      // size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html
      var date = {
        tm_sec: HEAP32[((tm)>>2)],
        tm_min: HEAP32[(((tm)+(4))>>2)],
        tm_hour: HEAP32[(((tm)+(8))>>2)],
        tm_mday: HEAP32[(((tm)+(12))>>2)],
        tm_mon: HEAP32[(((tm)+(16))>>2)],
        tm_year: HEAP32[(((tm)+(20))>>2)],
        tm_wday: HEAP32[(((tm)+(24))>>2)],
        tm_yday: HEAP32[(((tm)+(28))>>2)],
        tm_isdst: HEAP32[(((tm)+(32))>>2)]
      };
      var pattern = Pointer_stringify(format);
      // expand format
      var EXPANSION_RULES_1 = {
        '%c': '%a %b %d %H:%M:%S %Y',     // Replaced by the locale's appropriate date and time representation - e.g., Mon Aug  3 14:02:01 2013
        '%D': '%m/%d/%y',                 // Equivalent to %m / %d / %y
        '%F': '%Y-%m-%d',                 // Equivalent to %Y - %m - %d
        '%h': '%b',                       // Equivalent to %b
        '%r': '%I:%M:%S %p',              // Replaced by the time in a.m. and p.m. notation
        '%R': '%H:%M',                    // Replaced by the time in 24-hour notation
        '%T': '%H:%M:%S',                 // Replaced by the time
        '%x': '%m/%d/%y',                 // Replaced by the locale's appropriate date representation
        '%X': '%H:%M:%S',                 // Replaced by the locale's appropriate date representation
      };
      for (var rule in EXPANSION_RULES_1) {
        pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_1[rule]);
      }
      var WEEKDAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
      var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
      function leadingSomething(value, digits, character) {
        var str = typeof value === 'number' ? value.toString() : (value || '');
        while (str.length < digits) {
          str = character[0]+str;
        }
        return str;
      };
      function leadingNulls(value, digits) {
        return leadingSomething(value, digits, '0');
      };
      function compareByDay(date1, date2) {
        function sgn(value) {
          return value < 0 ? -1 : (value > 0 ? 1 : 0);
        };
        var compare;
        if ((compare = sgn(date1.getFullYear()-date2.getFullYear())) === 0) {
          if ((compare = sgn(date1.getMonth()-date2.getMonth())) === 0) {
            compare = sgn(date1.getDate()-date2.getDate());
          }
        }
        return compare;
      };
      function getFirstWeekStartDate(janFourth) {
          switch (janFourth.getDay()) {
            case 0: // Sunday
              return new Date(janFourth.getFullYear()-1, 11, 29);
            case 1: // Monday
              return janFourth;
            case 2: // Tuesday
              return new Date(janFourth.getFullYear(), 0, 3);
            case 3: // Wednesday
              return new Date(janFourth.getFullYear(), 0, 2);
            case 4: // Thursday
              return new Date(janFourth.getFullYear(), 0, 1);
            case 5: // Friday
              return new Date(janFourth.getFullYear()-1, 11, 31);
            case 6: // Saturday
              return new Date(janFourth.getFullYear()-1, 11, 30);
          }
      };
      function getWeekBasedYear(date) {
          var thisDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
          var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);
          var janFourthNextYear = new Date(thisDate.getFullYear()+1, 0, 4);
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
          if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {
            // this date is after the start of the first week of this year
            if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {
              return thisDate.getFullYear()+1;
            } else {
              return thisDate.getFullYear();
            }
          } else { 
            return thisDate.getFullYear()-1;
          }
      };
      var EXPANSION_RULES_2 = {
        '%a': function(date) {
          return WEEKDAYS[date.tm_wday].substring(0,3);
        },
        '%A': function(date) {
          return WEEKDAYS[date.tm_wday];
        },
        '%b': function(date) {
          return MONTHS[date.tm_mon].substring(0,3);
        },
        '%B': function(date) {
          return MONTHS[date.tm_mon];
        },
        '%C': function(date) {
          var year = date.tm_year+1900;
          return leadingNulls(Math.floor(year/100),2);
        },
        '%d': function(date) {
          return leadingNulls(date.tm_mday, 2);
        },
        '%e': function(date) {
          return leadingSomething(date.tm_mday, 2, ' ');
        },
        '%g': function(date) {
          // %g, %G, and %V give values according to the ISO 8601:2000 standard week-based year. 
          // In this system, weeks begin on a Monday and week 1 of the year is the week that includes 
          // January 4th, which is also the week that includes the first Thursday of the year, and 
          // is also the first week that contains at least four days in the year. 
          // If the first Monday of January is the 2nd, 3rd, or 4th, the preceding days are part of 
          // the last week of the preceding year; thus, for Saturday 2nd January 1999, 
          // %G is replaced by 1998 and %V is replaced by 53. If December 29th, 30th, 
          // or 31st is a Monday, it and any following days are part of week 1 of the following year. 
          // Thus, for Tuesday 30th December 1997, %G is replaced by 1998 and %V is replaced by 01.
          return getWeekBasedYear(date).toString().substring(2);
        },
        '%G': function(date) {
          return getWeekBasedYear(date);
        },
        '%H': function(date) {
          return leadingNulls(date.tm_hour, 2);
        },
        '%I': function(date) {
          return leadingNulls(date.tm_hour < 13 ? date.tm_hour : date.tm_hour-12, 2);
        },
        '%j': function(date) {
          // Day of the year (001-366)
          return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon-1), 3);
        },
        '%m': function(date) {
          return leadingNulls(date.tm_mon+1, 2);
        },
        '%M': function(date) {
          return leadingNulls(date.tm_min, 2);
        },
        '%n': function() {
          return '\n';
        },
        '%p': function(date) {
          if (date.tm_hour > 0 && date.tm_hour < 13) {
            return 'AM';
          } else {
            return 'PM';
          }
        },
        '%S': function(date) {
          return leadingNulls(date.tm_sec, 2);
        },
        '%t': function() {
          return '\t';
        },
        '%u': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay() || 7;
        },
        '%U': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Sunday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year+1900, 0, 1);
          var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7-janFirst.getDay());
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
          // is target date after the first Sunday?
          if (compareByDay(firstSunday, endDate) < 0) {
            // calculate difference in days between first Sunday and endDate
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstSundayUntilEndJanuary = 31-firstSunday.getDate();
            var days = firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
          return compareByDay(firstSunday, janFirst) === 0 ? '01': '00';
        },
        '%V': function(date) {
          // Replaced by the week number of the year (Monday as the first day of the week) 
          // as a decimal number [01,53]. If the week containing 1 January has four 
          // or more days in the new year, then it is considered week 1. 
          // Otherwise, it is the last week of the previous year, and the next week is week 1. 
          // Both January 4th and the first Thursday of January are always in week 1. [ tm_year, tm_wday, tm_yday]
          var janFourthThisYear = new Date(date.tm_year+1900, 0, 4);
          var janFourthNextYear = new Date(date.tm_year+1901, 0, 4);
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
          var endDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
          if (compareByDay(endDate, firstWeekStartThisYear) < 0) {
            // if given date is before this years first week, then it belongs to the 53rd week of last year
            return '53';
          } 
          if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {
            // if given date is after next years first week, then it belongs to the 01th week of next year
            return '01';
          }
          // given date is in between CW 01..53 of this calendar year
          var daysDifference;
          if (firstWeekStartThisYear.getFullYear() < date.tm_year+1900) {
            // first CW of this year starts last year
            daysDifference = date.tm_yday+32-firstWeekStartThisYear.getDate()
          } else {
            // first CW of this year starts this year
            daysDifference = date.tm_yday+1-firstWeekStartThisYear.getDate();
          }
          return leadingNulls(Math.ceil(daysDifference/7), 2);
        },
        '%w': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay();
        },
        '%W': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Monday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year, 0, 1);
          var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7-janFirst.getDay()+1);
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
          // is target date after the first Monday?
          if (compareByDay(firstMonday, endDate) < 0) {
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstMondayUntilEndJanuary = 31-firstMonday.getDate();
            var days = firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
          return compareByDay(firstMonday, janFirst) === 0 ? '01': '00';
        },
        '%y': function(date) {
          // Replaced by the last two digits of the year as a decimal number [00,99]. [ tm_year]
          return (date.tm_year+1900).toString().substring(2);
        },
        '%Y': function(date) {
          // Replaced by the year as a decimal number (for example, 1997). [ tm_year]
          return date.tm_year+1900;
        },
        '%z': function(date) {
          // Replaced by the offset from UTC in the ISO 8601:2000 standard format ( +hhmm or -hhmm ),
          // or by no characters if no timezone is determinable. 
          // For example, "-0430" means 4 hours 30 minutes behind UTC (west of Greenwich). 
          // If tm_isdst is zero, the standard time offset is used. 
          // If tm_isdst is greater than zero, the daylight savings time offset is used. 
          // If tm_isdst is negative, no characters are returned. 
          // FIXME: we cannot determine time zone (or can we?)
          return '';
        },
        '%Z': function(date) {
          // Replaced by the timezone name or abbreviation, or by no bytes if no timezone information exists. [ tm_isdst]
          // FIXME: we cannot determine time zone (or can we?)
          return '';
        },
        '%%': function() {
          return '%';
        }
      };
      for (var rule in EXPANSION_RULES_2) {
        if (pattern.indexOf(rule) >= 0) {
          pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_2[rule](date));
        }
      }
      var bytes = intArrayFromString(pattern, false);
      if (bytes.length > maxsize) {
        return 0;
      } 
      writeArrayToMemory(bytes, s);
      return bytes.length-1;
    }var _strftime_l=_strftime;
  function _isspace(chr) {
      return (chr == 32) || (chr >= 9 && chr <= 13);
    }
  function __parseInt64(str, endptr, base, min, max, unsign) {
      var isNegative = false;
      // Skip space.
      while (_isspace(HEAP8[(str)])) str++;
      // Check for a plus/minus sign.
      if (HEAP8[(str)] == 45) {
        str++;
        isNegative = true;
      } else if (HEAP8[(str)] == 43) {
        str++;
      }
      // Find base.
      var ok = false;
      var finalBase = base;
      if (!finalBase) {
        if (HEAP8[(str)] == 48) {
          if (HEAP8[((str+1)|0)] == 120 ||
              HEAP8[((str+1)|0)] == 88) {
            finalBase = 16;
            str += 2;
          } else {
            finalBase = 8;
            ok = true; // we saw an initial zero, perhaps the entire thing is just "0"
          }
        }
      } else if (finalBase==16) {
        if (HEAP8[(str)] == 48) {
          if (HEAP8[((str+1)|0)] == 120 ||
              HEAP8[((str+1)|0)] == 88) {
            str += 2;
          }
        }
      }
      if (!finalBase) finalBase = 10;
      var start = str;
      // Get digits.
      var chr;
      while ((chr = HEAP8[(str)]) != 0) {
        var digit = parseInt(String.fromCharCode(chr), finalBase);
        if (isNaN(digit)) {
          break;
        } else {
          str++;
          ok = true;
        }
      }
      if (!ok) {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return tempRet0 = 0,0;
      }
      // Set end pointer.
      if (endptr) {
        HEAP32[((endptr)>>2)]=str
      }
      try {
        var numberString = isNegative ? '-'+Pointer_stringify(start, str - start) : Pointer_stringify(start, str - start);
        i64Math.fromString(numberString, finalBase, min, max, unsign);
      } catch(e) {
        ___setErrNo(ERRNO_CODES.ERANGE); // not quite correct
      }
      return tempRet0 = HEAP32[(((tempDoublePtr)+(4))>>2)],HEAP32[((tempDoublePtr)>>2)];
    }function _strtoull(str, endptr, base) {
      return __parseInt64(str, endptr, base, 0, '18446744073709551615', true);  // ULONG_MAX.
    }var _strtoull_l=_strtoull;
  function _strtoll(str, endptr, base) {
      return __parseInt64(str, endptr, base, '-9223372036854775808', '9223372036854775807');  // LLONG_MIN, LLONG_MAX.
    }var _strtoll_l=_strtoll;
  function _uselocale(locale) {
      return 0;
    }
  var _llvm_va_start=undefined;
  function _sprintf(s, format, varargs) {
      // int sprintf(char *restrict s, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      return _snprintf(s, undefined, format, varargs);
    }function _asprintf(s, format, varargs) {
      return _sprintf(-s, format, varargs);
    }function _vasprintf(s, format, va_arg) {
      return _asprintf(s, format, HEAP32[((va_arg)>>2)]);
    }
  function _llvm_va_end() {}
  function _vsnprintf(s, n, format, va_arg) {
      return _snprintf(s, n, format, HEAP32[((va_arg)>>2)]);
    }
  function _vsscanf(s, format, va_arg) {
      return _sscanf(s, format, HEAP32[((va_arg)>>2)]);
    }
  function _sbrk(bytes) {
      // Implement a Linux-like 'memory area' for our 'process'.
      // Changes the size of the memory area by |bytes|; returns the
      // address of the previous top ('break') of the memory area
      // We control the "dynamic" memory - DYNAMIC_BASE to DYNAMICTOP
      var self = _sbrk;
      if (!self.called) {
        DYNAMICTOP = alignMemoryPage(DYNAMICTOP); // make sure we start out aligned
        self.called = true;
        assert(Runtime.dynamicAlloc);
        self.alloc = Runtime.dynamicAlloc;
        Runtime.dynamicAlloc = function() { abort('cannot dynamically allocate, sbrk now has control') };
      }
      var ret = DYNAMICTOP;
      if (bytes != 0) self.alloc(bytes);
      return ret;  // Previous break location.
    }
  function _time(ptr) {
      var ret = Math.floor(Date.now()/1000);
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret
      }
      return ret;
    }
  var Browser={mainLoop:{scheduler:null,shouldPause:false,paused:false,queue:[],pause:function () {
          Browser.mainLoop.shouldPause = true;
        },resume:function () {
          if (Browser.mainLoop.paused) {
            Browser.mainLoop.paused = false;
            Browser.mainLoop.scheduler();
          }
          Browser.mainLoop.shouldPause = false;
        },updateStatus:function () {
          if (Module['setStatus']) {
            var message = Module['statusMessage'] || 'Please wait...';
            var remaining = Browser.mainLoop.remainingBlockers;
            var expected = Browser.mainLoop.expectedBlockers;
            if (remaining) {
              if (remaining < expected) {
                Module['setStatus'](message + ' (' + (expected - remaining) + '/' + expected + ')');
              } else {
                Module['setStatus'](message);
              }
            } else {
              Module['setStatus']('');
            }
          }
        }},isFullScreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:function () {
        if (!Module["preloadPlugins"]) Module["preloadPlugins"] = []; // needs to exist even in workers
        if (Browser.initted || ENVIRONMENT_IS_WORKER) return;
        Browser.initted = true;
        try {
          new Blob();
          Browser.hasBlobConstructor = true;
        } catch(e) {
          Browser.hasBlobConstructor = false;
          console.log("warning: no blob constructor, cannot create blobs with mimetypes");
        }
        Browser.BlobBuilder = typeof MozBlobBuilder != "undefined" ? MozBlobBuilder : (typeof WebKitBlobBuilder != "undefined" ? WebKitBlobBuilder : (!Browser.hasBlobConstructor ? console.log("warning: no BlobBuilder") : null));
        Browser.URLObject = typeof window != "undefined" ? (window.URL ? window.URL : window.webkitURL) : undefined;
        if (!Module.noImageDecoding && typeof Browser.URLObject === 'undefined') {
          console.log("warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.");
          Module.noImageDecoding = true;
        }
        // Support for plugins that can process preloaded files. You can add more of these to
        // your app by creating and appending to Module.preloadPlugins.
        //
        // Each plugin is asked if it can handle a file based on the file's name. If it can,
        // it is given the file's raw data. When it is done, it calls a callback with the file's
        // (possibly modified) data. For example, a plugin might decompress a file, or it
        // might create some side data structure for use later (like an Image element, etc.).
        var imagePlugin = {};
        imagePlugin['canHandle'] = function imagePlugin_canHandle(name) {
          return !Module.noImageDecoding && /\.(jpg|jpeg|png|bmp)$/i.test(name);
        };
        imagePlugin['handle'] = function imagePlugin_handle(byteArray, name, onload, onerror) {
          var b = null;
          if (Browser.hasBlobConstructor) {
            try {
              b = new Blob([byteArray], { type: Browser.getMimetype(name) });
              if (b.size !== byteArray.length) { // Safari bug #118630
                // Safari's Blob can only take an ArrayBuffer
                b = new Blob([(new Uint8Array(byteArray)).buffer], { type: Browser.getMimetype(name) });
              }
            } catch(e) {
              Runtime.warnOnce('Blob constructor present but fails: ' + e + '; falling back to blob builder');
            }
          }
          if (!b) {
            var bb = new Browser.BlobBuilder();
            bb.append((new Uint8Array(byteArray)).buffer); // we need to pass a buffer, and must copy the array to get the right data range
            b = bb.getBlob();
          }
          var url = Browser.URLObject.createObjectURL(b);
          assert(typeof url == 'string', 'createObjectURL must return a url as a string');
          var img = new Image();
          img.onload = function img_onload() {
            assert(img.complete, 'Image ' + name + ' could not be decoded');
            var canvas = document.createElement('canvas');
            canvas.width = img.width;
            canvas.height = img.height;
            var ctx = canvas.getContext('2d');
            ctx.drawImage(img, 0, 0);
            Module["preloadedImages"][name] = canvas;
            Browser.URLObject.revokeObjectURL(url);
            if (onload) onload(byteArray);
          };
          img.onerror = function img_onerror(event) {
            console.log('Image ' + url + ' could not be decoded');
            if (onerror) onerror();
          };
          img.src = url;
        };
        Module['preloadPlugins'].push(imagePlugin);
        var audioPlugin = {};
        audioPlugin['canHandle'] = function audioPlugin_canHandle(name) {
          return !Module.noAudioDecoding && name.substr(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };
        };
        audioPlugin['handle'] = function audioPlugin_handle(byteArray, name, onload, onerror) {
          var done = false;
          function finish(audio) {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = audio;
            if (onload) onload(byteArray);
          }
          function fail() {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = new Audio(); // empty shim
            if (onerror) onerror();
          }
          if (Browser.hasBlobConstructor) {
            try {
              var b = new Blob([byteArray], { type: Browser.getMimetype(name) });
            } catch(e) {
              return fail();
            }
            var url = Browser.URLObject.createObjectURL(b); // XXX we never revoke this!
            assert(typeof url == 'string', 'createObjectURL must return a url as a string');
            var audio = new Audio();
            audio.addEventListener('canplaythrough', function() { finish(audio) }, false); // use addEventListener due to chromium bug 124926
            audio.onerror = function audio_onerror(event) {
              if (done) return;
              console.log('warning: browser could not fully decode audio ' + name + ', trying slower base64 approach');
              function encode64(data) {
                var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
                var PAD = '=';
                var ret = '';
                var leftchar = 0;
                var leftbits = 0;
                for (var i = 0; i < data.length; i++) {
                  leftchar = (leftchar << 8) | data[i];
                  leftbits += 8;
                  while (leftbits >= 6) {
                    var curr = (leftchar >> (leftbits-6)) & 0x3f;
                    leftbits -= 6;
                    ret += BASE[curr];
                  }
                }
                if (leftbits == 2) {
                  ret += BASE[(leftchar&3) << 4];
                  ret += PAD + PAD;
                } else if (leftbits == 4) {
                  ret += BASE[(leftchar&0xf) << 2];
                  ret += PAD;
                }
                return ret;
              }
              audio.src = 'data:audio/x-' + name.substr(-3) + ';base64,' + encode64(byteArray);
              finish(audio); // we don't wait for confirmation this worked - but it's worth trying
            };
            audio.src = url;
            // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror
            Browser.safeSetTimeout(function() {
              finish(audio); // try to use it even though it is not necessarily ready to play
            }, 10000);
          } else {
            return fail();
          }
        };
        Module['preloadPlugins'].push(audioPlugin);
        // Canvas event setup
        var canvas = Module['canvas'];
        canvas.requestPointerLock = canvas['requestPointerLock'] ||
                                    canvas['mozRequestPointerLock'] ||
                                    canvas['webkitRequestPointerLock'];
        canvas.exitPointerLock = document['exitPointerLock'] ||
                                 document['mozExitPointerLock'] ||
                                 document['webkitExitPointerLock'] ||
                                 function(){}; // no-op if function does not exist
        canvas.exitPointerLock = canvas.exitPointerLock.bind(document);
        function pointerLockChange() {
          Browser.pointerLock = document['pointerLockElement'] === canvas ||
                                document['mozPointerLockElement'] === canvas ||
                                document['webkitPointerLockElement'] === canvas;
        }
        document.addEventListener('pointerlockchange', pointerLockChange, false);
        document.addEventListener('mozpointerlockchange', pointerLockChange, false);
        document.addEventListener('webkitpointerlockchange', pointerLockChange, false);
        if (Module['elementPointerLock']) {
          canvas.addEventListener("click", function(ev) {
            if (!Browser.pointerLock && canvas.requestPointerLock) {
              canvas.requestPointerLock();
              ev.preventDefault();
            }
          }, false);
        }
      },createContext:function (canvas, useWebGL, setInModule, webGLContextAttributes) {
        var ctx;
        try {
          if (useWebGL) {
            var contextAttributes = {
              antialias: false,
              alpha: false
            };
            if (webGLContextAttributes) {
              for (var attribute in webGLContextAttributes) {
                contextAttributes[attribute] = webGLContextAttributes[attribute];
              }
            }
            var errorInfo = '?';
            function onContextCreationError(event) {
              errorInfo = event.statusMessage || errorInfo;
            }
            canvas.addEventListener('webglcontextcreationerror', onContextCreationError, false);
            try {
              ['experimental-webgl', 'webgl'].some(function(webglId) {
                return ctx = canvas.getContext(webglId, contextAttributes);
              });
            } finally {
              canvas.removeEventListener('webglcontextcreationerror', onContextCreationError, false);
            }
          } else {
            ctx = canvas.getContext('2d');
          }
          if (!ctx) throw ':(';
        } catch (e) {
          Module.print('Could not create canvas: ' + [errorInfo, e]);
          return null;
        }
        if (useWebGL) {
          // Set the background of the WebGL canvas to black
          canvas.style.backgroundColor = "black";
          // Warn on context loss
          canvas.addEventListener('webglcontextlost', function(event) {
            alert('WebGL context lost. You will need to reload the page.');
          }, false);
        }
        if (setInModule) {
          Module.ctx = ctx;
          Module.useWebGL = useWebGL;
          Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });
          Browser.init();
        }
        return ctx;
      },destroyContext:function (canvas, useWebGL, setInModule) {},fullScreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullScreen:function (lockPointer, resizeCanvas) {
        Browser.lockPointer = lockPointer;
        Browser.resizeCanvas = resizeCanvas;
        if (typeof Browser.lockPointer === 'undefined') Browser.lockPointer = true;
        if (typeof Browser.resizeCanvas === 'undefined') Browser.resizeCanvas = false;
        var canvas = Module['canvas'];
        function fullScreenChange() {
          Browser.isFullScreen = false;
          if ((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
               document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
               document['fullScreenElement'] || document['fullscreenElement']) === canvas) {
            canvas.cancelFullScreen = document['cancelFullScreen'] ||
                                      document['mozCancelFullScreen'] ||
                                      document['webkitCancelFullScreen'];
            canvas.cancelFullScreen = canvas.cancelFullScreen.bind(document);
            if (Browser.lockPointer) canvas.requestPointerLock();
            Browser.isFullScreen = true;
            if (Browser.resizeCanvas) Browser.setFullScreenCanvasSize();
          } else if (Browser.resizeCanvas){
            Browser.setWindowedCanvasSize();
          }
          if (Module['onFullScreen']) Module['onFullScreen'](Browser.isFullScreen);
        }
        if (!Browser.fullScreenHandlersInstalled) {
          Browser.fullScreenHandlersInstalled = true;
          document.addEventListener('fullscreenchange', fullScreenChange, false);
          document.addEventListener('mozfullscreenchange', fullScreenChange, false);
          document.addEventListener('webkitfullscreenchange', fullScreenChange, false);
        }
        canvas.requestFullScreen = canvas['requestFullScreen'] ||
                                   canvas['mozRequestFullScreen'] ||
                                   (canvas['webkitRequestFullScreen'] ? function() { canvas['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) } : null);
        canvas.requestFullScreen();
      },requestAnimationFrame:function requestAnimationFrame(func) {
        if (typeof window === 'undefined') { // Provide fallback to setTimeout if window is undefined (e.g. in Node.js)
          setTimeout(func, 1000/60);
        } else {
          if (!window.requestAnimationFrame) {
            window.requestAnimationFrame = window['requestAnimationFrame'] ||
                                           window['mozRequestAnimationFrame'] ||
                                           window['webkitRequestAnimationFrame'] ||
                                           window['msRequestAnimationFrame'] ||
                                           window['oRequestAnimationFrame'] ||
                                           window['setTimeout'];
          }
          window.requestAnimationFrame(func);
        }
      },safeCallback:function (func) {
        return function() {
          if (!ABORT) return func.apply(null, arguments);
        };
      },safeRequestAnimationFrame:function (func) {
        return Browser.requestAnimationFrame(function() {
          if (!ABORT) func();
        });
      },safeSetTimeout:function (func, timeout) {
        return setTimeout(function() {
          if (!ABORT) func();
        }, timeout);
      },safeSetInterval:function (func, timeout) {
        return setInterval(function() {
          if (!ABORT) func();
        }, timeout);
      },getMimetype:function (name) {
        return {
          'jpg': 'image/jpeg',
          'jpeg': 'image/jpeg',
          'png': 'image/png',
          'bmp': 'image/bmp',
          'ogg': 'audio/ogg',
          'wav': 'audio/wav',
          'mp3': 'audio/mpeg'
        }[name.substr(name.lastIndexOf('.')+1)];
      },getUserMedia:function (func) {
        if(!window.getUserMedia) {
          window.getUserMedia = navigator['getUserMedia'] ||
                                navigator['mozGetUserMedia'];
        }
        window.getUserMedia(func);
      },getMovementX:function (event) {
        return event['movementX'] ||
               event['mozMovementX'] ||
               event['webkitMovementX'] ||
               0;
      },getMovementY:function (event) {
        return event['movementY'] ||
               event['mozMovementY'] ||
               event['webkitMovementY'] ||
               0;
      },mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,calculateMouseEvent:function (event) { // event should be mousemove, mousedown or mouseup
        if (Browser.pointerLock) {
          // When the pointer is locked, calculate the coordinates
          // based on the movement of the mouse.
          // Workaround for Firefox bug 764498
          if (event.type != 'mousemove' &&
              ('mozMovementX' in event)) {
            Browser.mouseMovementX = Browser.mouseMovementY = 0;
          } else {
            Browser.mouseMovementX = Browser.getMovementX(event);
            Browser.mouseMovementY = Browser.getMovementY(event);
          }
          // check if SDL is available
          if (typeof SDL != "undefined") {
          	Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;
          	Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;
          } else {
          	// just add the mouse delta to the current absolut mouse position
          	// FIXME: ideally this should be clamped against the canvas size and zero
          	Browser.mouseX += Browser.mouseMovementX;
          	Browser.mouseY += Browser.mouseMovementY;
          }        
        } else {
          // Otherwise, calculate the movement based on the changes
          // in the coordinates.
          var rect = Module["canvas"].getBoundingClientRect();
          var x, y;
          if (event.type == 'touchstart' ||
              event.type == 'touchend' ||
              event.type == 'touchmove') {
            var t = event.touches.item(0);
            if (t) {
              x = t.pageX - (window.scrollX + rect.left);
              y = t.pageY - (window.scrollY + rect.top);
            } else {
              return;
            }
          } else {
            x = event.pageX - (window.scrollX + rect.left);
            y = event.pageY - (window.scrollY + rect.top);
          }
          // the canvas might be CSS-scaled compared to its backbuffer;
          // SDL-using content will want mouse coordinates in terms
          // of backbuffer units.
          var cw = Module["canvas"].width;
          var ch = Module["canvas"].height;
          x = x * (cw / rect.width);
          y = y * (ch / rect.height);
          Browser.mouseMovementX = x - Browser.mouseX;
          Browser.mouseMovementY = y - Browser.mouseY;
          Browser.mouseX = x;
          Browser.mouseY = y;
        }
      },xhrLoad:function (url, onload, onerror) {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, true);
        xhr.responseType = 'arraybuffer';
        xhr.onload = function xhr_onload() {
          if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
            onload(xhr.response);
          } else {
            onerror();
          }
        };
        xhr.onerror = onerror;
        xhr.send(null);
      },asyncLoad:function (url, onload, onerror, noRunDep) {
        Browser.xhrLoad(url, function(arrayBuffer) {
          assert(arrayBuffer, 'Loading data file "' + url + '" failed (no arrayBuffer).');
          onload(new Uint8Array(arrayBuffer));
          if (!noRunDep) removeRunDependency('al ' + url);
        }, function(event) {
          if (onerror) {
            onerror();
          } else {
            throw 'Loading data file "' + url + '" failed.';
          }
        });
        if (!noRunDep) addRunDependency('al ' + url);
      },resizeListeners:[],updateResizeListeners:function () {
        var canvas = Module['canvas'];
        Browser.resizeListeners.forEach(function(listener) {
          listener(canvas.width, canvas.height);
        });
      },setCanvasSize:function (width, height, noUpdates) {
        var canvas = Module['canvas'];
        canvas.width = width;
        canvas.height = height;
        if (!noUpdates) Browser.updateResizeListeners();
      },windowedWidth:0,windowedHeight:0,setFullScreenCanvasSize:function () {
        var canvas = Module['canvas'];
        this.windowedWidth = canvas.width;
        this.windowedHeight = canvas.height;
        canvas.width = screen.width;
        canvas.height = screen.height;
        // check if SDL is available   
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags | 0x00800000; // set SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },setWindowedCanvasSize:function () {
        var canvas = Module['canvas'];
        canvas.width = this.windowedWidth;
        canvas.height = this.windowedHeight;
        // check if SDL is available       
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags & ~0x00800000; // clear SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      }};
_llvm_eh_exception.buf = allocate(12, "void*", ALLOC_STATIC);
FS.staticInit();__ATINIT__.unshift({ func: function() { if (!Module["noFSInit"] && !FS.init.initialized) FS.init() } });__ATMAIN__.push({ func: function() { FS.ignorePermissions = false } });__ATEXIT__.push({ func: function() { FS.quit() } });Module["FS_createFolder"] = FS.createFolder;Module["FS_createPath"] = FS.createPath;Module["FS_createDataFile"] = FS.createDataFile;Module["FS_createPreloadedFile"] = FS.createPreloadedFile;Module["FS_createLazyFile"] = FS.createLazyFile;Module["FS_createLink"] = FS.createLink;Module["FS_createDevice"] = FS.createDevice;
___errno_state = Runtime.staticAlloc(4); HEAP32[((___errno_state)>>2)]=0;
__ATINIT__.unshift({ func: function() { TTY.init() } });__ATEXIT__.push({ func: function() { TTY.shutdown() } });TTY.utf8 = new Runtime.UTF8Processor();
if (ENVIRONMENT_IS_NODE) { var fs = require("fs"); NODEFS.staticInit(); }
__ATINIT__.push({ func: function() { SOCKFS.root = FS.mount(SOCKFS, {}, null); } });
_fgetc.ret = allocate([0], "i8", ALLOC_STATIC);
Module["requestFullScreen"] = function Module_requestFullScreen(lockPointer, resizeCanvas) { Browser.requestFullScreen(lockPointer, resizeCanvas) };
  Module["requestAnimationFrame"] = function Module_requestAnimationFrame(func) { Browser.requestAnimationFrame(func) };
  Module["setCanvasSize"] = function Module_setCanvasSize(width, height, noUpdates) { Browser.setCanvasSize(width, height, noUpdates) };
  Module["pauseMainLoop"] = function Module_pauseMainLoop() { Browser.mainLoop.pause() };
  Module["resumeMainLoop"] = function Module_resumeMainLoop() { Browser.mainLoop.resume() };
  Module["getUserMedia"] = function Module_getUserMedia() { Browser.getUserMedia() }
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);
staticSealed = true; // seal the static portion of memory
STACK_MAX = STACK_BASE + 5242880;
DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);
assert(DYNAMIC_BASE < TOTAL_MEMORY); // Stack must fit in TOTAL_MEMORY; allocations from here on may enlarge TOTAL_MEMORY
var FUNCTION_TABLE = [0,0,__ZNSt3__18messagesIwED0Ev,0,__ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,0,__ZNKSt3__18numpunctIcE12do_falsenameEv,0,__ZNKSt3__120__time_get_c_storageIwE3__rEv,0,__ZNKSt3__110moneypunctIwLb0EE16do_thousands_sepEv,0,__ZN14ReverbDesigner7computeEiPPfS1_,0,__ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev,0,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,0,__ZNSt12length_errorD0Ev,0,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED1Ev,0,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm,0,__ZNSt3__17codecvtIwc11__mbstate_tED2Ev,0,__ZN4JSUI8closeBoxEv,0,__ZNSt3__16locale2id6__initEv,0,__ZNSt3__110__stdinbufIcED1Ev,0,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,0,__ZNSt3__110__stdinbufIcE9pbackfailEi,0,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9underflowEv,0,__ZNSt3__110__stdinbufIwED0Ev,0,__ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,0,__ZNSt11logic_errorD0Ev,0,__ZNSt3__17codecvtIDsc11__mbstate_tED0Ev,0,__ZNSt13runtime_errorD2Ev,0,__ZNKSt3__17collateIcE7do_hashEPKcS3_,0,__ZNKSt3__17codecvtIcc11__mbstate_tE16do_always_noconvEv,0,__ZNKSt3__120__time_get_c_storageIwE8__monthsEv,0,__ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,0,__ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE,0,__ZNKSt3__15ctypeIcE10do_toupperEPcPKc,0,__ZNKSt3__110moneypunctIwLb1EE16do_positive_signEv,0,__ZNKSt3__15ctypeIwE10do_tolowerEPwPKw,0,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv,0,__ZN14ReverbDesignerD1Ev,0,__ZNSt3__17collateIcED1Ev,0,__ZNSt3__18ios_base7failureD2Ev,0,__ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,0,__ZNSt9bad_allocD2Ev,0,__ZNKSt3__110moneypunctIcLb1EE11do_groupingEv,0,__ZNSt11logic_errorD2Ev,0,__ZN4JSUI15openVerticalBoxEPKc,0,__ZNSt3__16locale5facetD0Ev,0,__ZNKSt3__17codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_,0,__ZN4JSUI17addVerticalSliderEPKcPfffff,0,__ZNKSt3__120__time_get_c_storageIwE3__cEv,0,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy,0,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx,0,__ZNSt3__15ctypeIcED0Ev,0,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm,0,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl,0,__ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev,0,__ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev,0,__ZNSt8bad_castC2Ev,0,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe,0,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd,0,__ZNKSt3__110moneypunctIcLb1EE16do_decimal_pointEv,0,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb,0,__ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,0,__ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE,0,__ZN4JSUI17openHorizontalBoxEPKc,0,__ZN2UI7declareEPfPKcS2_,0,__ZN4JSUI19addVerticalBargraphEPKcPfff,0,__ZNKSt3__17codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_,0,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv,0,__ZNSt3__18messagesIcED1Ev,0,__ZNKSt3__120__time_get_c_storageIwE7__weeksEv,0,__ZNKSt3__18numpunctIwE11do_groupingEv,0,__ZNSt3__16locale5facet16__on_zero_sharedEv,0,__ZNKSt3__15ctypeIwE8do_widenEc,0,__ZNKSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc,0,__ZNSt3__110__stdinbufIcE5uflowEv,0,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9pbackfailEj,0,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm,0,__ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev,0,__ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev,0,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5uflowEv,0,__ZNKSt3__110moneypunctIwLb0EE13do_neg_formatEv,0,__ZN4JSUI11addNumEntryEPKcPfffff,0,__ZNKSt3__15ctypeIcE8do_widenEc,0,__ZNSt3__110moneypunctIwLb0EED0Ev,0,__ZN4JSUI19addHorizontalSliderEPKcPfffff,0,__ZNSt3__16locale5__impD2Ev,0,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9underflowEv,0,__ZNKSt3__15ctypeIcE10do_toupperEc,0,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv,0,__ZNKSt3__17codecvtIDic11__mbstate_tE11do_encodingEv,0,__ZNSt3__18numpunctIcED2Ev,0,__ZNKSt3__18numpunctIcE11do_groupingEv,0,__ZNK10__cxxabiv116__shim_type_info5noop1Ev,0,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,0,__ZNKSt3__120__time_get_c_storageIwE3__xEv,0,__ZNKSt3__110moneypunctIcLb1EE13do_neg_formatEv,0,__ZNSt3__110__stdinbufIwE9pbackfailEj,0,__ZNKSt3__17codecvtIcc11__mbstate_tE11do_encodingEv,0,__ZNKSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc,0,__ZNSt3__18numpunctIcED0Ev,0,__ZNSt3__111__stdoutbufIcE8overflowEi,0,__ZNSt3__119__iostream_categoryD1Ev,0,__ZNKSt3__120__time_get_c_storageIwE7__am_pmEv,0,__ZNSt3__111__stdoutbufIwE5imbueERKNS_6localeE,0,__ZNKSt3__18messagesIcE8do_closeEi,0,__ZNKSt3__15ctypeIwE5do_isEPKwS3_Pt,0,__ZNSt13runtime_errorD2Ev,0,__ZNKSt3__15ctypeIwE10do_toupperEw,0,__ZNKSt3__15ctypeIwE9do_narrowEPKwS3_cPc,0,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5imbueERKNS_6localeE,0,__ZNKSt3__110moneypunctIcLb0EE16do_negative_signEv,0,__ZNSt3__17collateIwED1Ev,0,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,0,__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv,0,__ZNKSt8bad_cast4whatEv,0,__ZNSt3__110moneypunctIcLb0EED1Ev,0,__ZNKSt3__18messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE,0,__ZNSt3__18numpunctIwED2Ev,0,__ZNKSt3__110moneypunctIwLb1EE13do_pos_formatEv,0,__ZN14ReverbDesigner12getInputRateEi,0,__ZNSt3__15ctypeIwED0Ev,0,__ZNKSt13runtime_error4whatEv,0,_free,0,__ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,0,__ZNSt3__117__widen_from_utf8ILj32EED0Ev,0,__ZNKSt3__18numpunctIwE16do_thousands_sepEv,0,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,0,__ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev,0,__ZNKSt3__17codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,0,__ZNSt3__110__stdinbufIwED1Ev,0,__ZNKSt3__18numpunctIcE16do_decimal_pointEv,0,__ZN3dspD0Ev,0,__ZNKSt3__110moneypunctIwLb0EE16do_negative_signEv,0,__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,0,__ZNKSt3__120__time_get_c_storageIcE3__xEv,0,__ZNSt3__17collateIwED0Ev,0,__ZNKSt3__110moneypunctIcLb0EE16do_positive_signEv,0,__ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,0,__ZN14ReverbDesigner12instanceInitEi,0,__ZNKSt3__17codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_,0,__ZNSt11logic_errorD2Ev,0,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekoffExNS_8ios_base7seekdirEj,0,__ZNSt3__117__call_once_proxyINS_5tupleIJNS_12_GLOBAL__N_111__fake_bindEEEEEEvPv,0,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy,0,__ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev,0,__ZNKSt3__18numpunctIwE16do_decimal_pointEv,0,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv,0,__ZN4JSUID1Ev,0,__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,0,__ZN14ReverbDesigner4initEi,0,__ZNKSt3__110moneypunctIcLb0EE11do_groupingEv,0,__ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,0,__ZNKSt3__110moneypunctIwLb1EE14do_frac_digitsEv,0,__ZNSt3__17codecvtIDic11__mbstate_tED0Ev,0,__ZNKSt3__110moneypunctIwLb1EE16do_negative_signEv,0,__ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,0,__ZNKSt3__120__time_get_c_storageIcE3__XEv,0,__ZNSt3__16localeC2ERKS0_,0,__ZNKSt3__15ctypeIwE9do_narrowEwc,0,__ZNSt3__111__stdoutbufIwE4syncEv,0,__ZNSt3__110moneypunctIwLb0EED1Ev,0,__ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev,0,__ZN4JSUI9addButtonEPKcPf,0,__ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev,0,__ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,0,__ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,0,__ZNKSt3__17collateIwE7do_hashEPKwS3_,0,__ZNSt3__111__stdoutbufIcE5imbueERKNS_6localeE,0,__ZNKSt3__110moneypunctIcLb1EE16do_thousands_sepEv,0,__ZNSt3__18ios_baseD0Ev,0,__ZNKSt3__17codecvtIDsc11__mbstate_tE16do_always_noconvEv,0,__ZNSt3__110moneypunctIcLb1EED0Ev,0,__ZNSt9bad_allocD0Ev,0,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED0Ev,0,__ZNKSt3__114error_category10equivalentEiRKNS_15error_conditionE,0,___cxx_global_array_dtor53,0,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci,0,___cxx_global_array_dtor56,0,__ZNKSt3__15ctypeIwE10do_scan_isEtPKwS3_,0,__ZNKSt3__15ctypeIcE9do_narrowEPKcS3_cPc,0,__ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev,0,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED1Ev,0,__ZNSt3__110__stdinbufIwE5imbueERKNS_6localeE,0,__ZNKSt3__17collateIwE10do_compareEPKwS3_S3_S3_,0,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci,0,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,0,__ZNKSt3__15ctypeIcE10do_tolowerEc,0,__ZNKSt3__110moneypunctIwLb1EE13do_neg_formatEv,0,__ZNKSt3__15ctypeIcE8do_widenEPKcS3_Pc,0,__ZNSt3__17codecvtIcc11__mbstate_tED0Ev,0,__ZNKSt3__110moneypunctIwLb1EE16do_decimal_pointEv,0,__ZNKSt3__120__time_get_c_storageIcE7__weeksEv,0,__ZNSt8bad_castD2Ev,0,__ZNKSt3__18numpunctIwE11do_truenameEv,0,__ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev,0,__ZNSt3__110__stdinbufIwE9underflowEv,0,__ZNKSt3__17codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_j,0,__ZNSt3__18ios_base7failureD0Ev,0,__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,0,__ZNSt3__18ios_base4InitD2Ev,0,__ZNKSt3__15ctypeIwE5do_isEtw,0,__ZNSt3__110moneypunctIwLb1EED0Ev,0,__ZN14ReverbDesigner12getNumInputsEv,0,__ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev,0,__ZNKSt3__110moneypunctIwLb1EE11do_groupingEv,0,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,0,__ZN10__cxxabiv120__si_class_type_infoD0Ev,0,__ZNKSt3__17codecvtIDic11__mbstate_tE16do_always_noconvEv,0,___cxx_global_array_dtor105,0,__ZNK10__cxxabiv116__shim_type_info5noop2Ev,0,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6setbufEPwi,0,__ZNKSt3__18messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE,0,__ZNKSt9bad_alloc4whatEv,0,__ZNSt3__111__stdoutbufIcED1Ev,0,__ZNKSt3__110moneypunctIcLb1EE14do_curr_symbolEv,0,__ZNSt13runtime_errorC2EPKc,0,__ZNSt3__16locale5__impD0Ev,0,__ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,0,__ZNKSt3__119__iostream_category4nameEv,0,__ZNKSt3__110moneypunctIcLb0EE14do_frac_digitsEv,0,__ZNKSt3__17codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_j,0,__ZNSt3__16localeD2Ev,0,__ZN14ReverbDesigner13getNumOutputsEv,0,__ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev,0,__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev,0,__ZNSt8bad_castD0Ev,0,__ZNKSt3__15ctypeIcE9do_narrowEcc,0,__ZNSt3__116__narrow_to_utf8ILj32EED0Ev,0,__ZNSt3__112__do_nothingEPv,0,__ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev,0,___cxx_global_array_dtor81,0,__ZNSt3__110moneypunctIcLb0EED0Ev,0,__ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,0,__ZNKSt3__17codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_,0,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv,0,__ZNKSt3__18numpunctIwE12do_falsenameEv,0,__ZNSt3__17collateIcED0Ev,0,__ZNKSt3__110moneypunctIwLb0EE13do_pos_formatEv,0,__ZNKSt3__110moneypunctIcLb1EE16do_negative_signEv,0,__ZNSt3__111__stdoutbufIcED0Ev,0,__ZNSt3__16locale5facetD2Ev,0,__ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev,0,__ZNSt3__112system_errorD0Ev,0,__ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,0,__ZNSt3__111__stdoutbufIwED0Ev,0,__ZNKSt3__17codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,0,__ZNSt3__110__stdinbufIwE5uflowEv,0,__ZNKSt3__18numpunctIcE11do_truenameEv,0,__ZN14ReverbDesigner13getOutputRateEi,0,__ZNKSt3__17codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_,0,__ZNKSt3__110moneypunctIcLb1EE13do_pos_formatEv,0,__ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe,0,__ZN4JSUI7declareEPfPKcS2_,0,__ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,0,__ZNSt3__17codecvtIwc11__mbstate_tED0Ev,0,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_,0,__ZN4JSUI21addHorizontalBargraphEPKcPfff,0,__ZNKSt3__18numpunctIcE16do_thousands_sepEv,0,__ZN19ReverbDesigner_wrapD0Ev,0,__ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,0,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv,0,__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,0,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm,0,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE8overflowEj,0,__ZN4JSUID0Ev,0,___cxa_pure_virtual,0,__ZNSt3__18numpunctIwED0Ev,0,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE,0,__ZNKSt3__15ctypeIwE10do_tolowerEw,0,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE4syncEv,0,__ZNSt3__111__stdoutbufIcE4syncEv,0,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev,0,__ZNKSt3__17collateIcE10do_compareEPKcS3_S3_S3_,0,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj,0,__ZNSt3__110__stdinbufIcE5imbueERKNS_6localeE,0,__ZNKSt3__17collateIwE12do_transformEPKwS3_,0,__ZN19ReverbDesigner_wrapD1Ev,0,__ZNKSt3__17codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_,0,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx,0,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce,0,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd,0,__ZNKSt3__17codecvtIcc11__mbstate_tE13do_max_lengthEv,0,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb,0,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm,0,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl,0,__ZNSt8bad_castD2Ev,0,__ZN14ReverbDesignerD0Ev,0,__ZN10__cxxabiv121__vmi_class_type_infoD0Ev,0,__ZNKSt3__17codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,0,__ZNKSt3__110moneypunctIcLb1EE14do_frac_digitsEv,0,__ZNKSt3__17codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_j,0,__ZNKSt3__120__time_get_c_storageIcE3__rEv,0,__ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE,0,__ZNKSt3__15ctypeIwE10do_toupperEPwPKw,0,__ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev,0,__ZNSt3__110__stdinbufIcE9underflowEv,0,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekposENS_4fposI11__mbstate_tEEj,0,__ZNKSt3__114error_category23default_error_conditionEi,0,__ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,0,__ZNKSt3__17codecvtIDsc11__mbstate_tE11do_encodingEv,0,__ZNKSt3__18messagesIwE8do_closeEi,0,__ZNSt3__112system_errorD2Ev,0,__ZNKSt3__17codecvtIwc11__mbstate_tE16do_always_noconvEv,0,__ZNKSt3__110moneypunctIwLb0EE11do_groupingEv,0,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9showmanycEv,0,__ZNKSt3__110moneypunctIcLb0EE16do_decimal_pointEv,0,__ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev,0,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,0,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,0,__ZNKSt3__120__time_get_c_storageIcE8__monthsEv,0,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,0,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,0,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,0,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,0,__ZNSt3__111__stdoutbufIwE6xsputnEPKwi,0,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,0,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,0,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,0,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,0,__ZNKSt3__110moneypunctIcLb0EE16do_thousands_sepEv,0,__ZNKSt3__114error_category10equivalentERKNS_10error_codeEi,0,__ZNKSt3__110moneypunctIcLb0EE13do_neg_formatEv,0,__ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev,0,__ZNKSt3__119__iostream_category7messageEi,0,__ZNKSt3__110moneypunctIcLb0EE13do_pos_formatEv,0,__ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev,0,__ZNKSt3__110moneypunctIwLb0EE16do_decimal_pointEv,0,__ZNKSt3__17codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,0,__ZNKSt3__17collateIcE12do_transformEPKcS3_,0,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsgetnEPwi,0,__ZN14ReverbDesigner18buildUserInterfaceEP2UI,0,__ZNKSt3__17codecvtIwc11__mbstate_tE13do_max_lengthEv,0,__ZNKSt3__110moneypunctIwLb0EE14do_frac_digitsEv,0,__ZNSt3__18messagesIcED0Ev,0,__ZNKSt3__15ctypeIcE10do_tolowerEPcPKc,0,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,0,__ZNKSt3__120__time_get_c_storageIcE7__am_pmEv,0,__ZNKSt3__110moneypunctIcLb0EE14do_curr_symbolEv,0,__ZNKSt3__15ctypeIwE8do_widenEPKcS3_Pw,0,__ZNKSt3__110moneypunctIwLb1EE16do_thousands_sepEv,0,__ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,0,__ZNKSt3__17codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_j,0,__ZNKSt11logic_error4whatEv,0,__ZNSt3__18ios_baseD2Ev,0,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev,0,__ZN2UID0Ev,0,__ZNSt3__110__stdinbufIcED0Ev,0,__ZNSt3__16localeC2Ev,0,__ZNKSt3__17codecvtIwc11__mbstate_tE11do_encodingEv,0,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv,0,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,0,__ZNSt3__119__iostream_categoryD0Ev,0,__ZNSt3__110moneypunctIwLb1EED1Ev,0,__ZN3dspD1Ev,0,__ZNKSt3__110moneypunctIwLb0EE14do_curr_symbolEv,0,__ZNKSt3__18messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE,0,__ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,0,__ZNSt3__110moneypunctIcLb1EED1Ev,0,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8overflowEi,0,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj,0,__ZNKSt3__120__time_get_c_storageIcE3__cEv,0,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPci,0,__ZNKSt3__110moneypunctIwLb0EE16do_positive_signEv,0,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_,0,__ZNKSt3__120__time_get_c_storageIwE3__XEv,0,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm,0,__ZNKSt3__110moneypunctIcLb1EE16do_positive_signEv,0,__ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev,0,__ZNKSt3__17codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_,0,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED0Ev,0,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi,0,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev,0,__ZNSt3__111__stdoutbufIwE8overflowEj,0,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,0,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,0,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,0,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,0,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,0,__ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce,0,__ZN2UID1Ev,0,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,0,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,0,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,0,__ZNKSt3__17codecvtIDsc11__mbstate_tE13do_max_lengthEv,0,__ZNSt3__111__stdoutbufIcE6xsputnEPKci,0,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,0,___cxx_global_array_dtor,0,__ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev,0,__ZN4JSUI10openTabBoxEPKc,0,__ZN10__cxxabiv117__class_type_infoD0Ev,0,__ZNSt3__18messagesIwED1Ev,0,__ZNSt3__111__stdoutbufIwED1Ev,0,__ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE,0,__ZN10__cxxabiv116__shim_type_infoD2Ev,0,__ZNKSt3__15ctypeIwE11do_scan_notEtPKwS3_,0,__ZNKSt3__110moneypunctIwLb1EE14do_curr_symbolEv,0,__ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev,0,__ZNKSt3__18messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE,0,__ZNKSt3__17codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_,0,__ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev,0,__ZN4JSUI14addCheckButtonEPKcPf,0,__ZNKSt3__17codecvtIDic11__mbstate_tE13do_max_lengthEv,0,__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev,0,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsputnEPKwi,0,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,0,__ZNSt3__15ctypeIcED2Ev,0,__ZNSt13runtime_errorD0Ev,0,__ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev,0,___cxx_global_array_dtor120,0];
// EMSCRIPTEN_START_FUNCS
function __Z13faustpower2_ff($value){
 var label=0;
 var $value_addr;
 $value_addr=$value;
 var $0=$value_addr;
 var $1=$value_addr;
 var $mul=($0)*($1);
 return $mul;
}
function __ZN14ReverbDesignerD1Ev($this){
 var label=0;
 var $this_addr;
 $this_addr=$this;
 var $this1=$this_addr;
 __ZN14ReverbDesignerD2Ev($this1);
 return;
}
function _REVERBDESIGNER_constructor($samplingFreq){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+32)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $this_addr_i_i4_i;
 var $__i2_i_i=sp;
 var $this_addr_i5_i;
 var $agg_tmp2_i=(sp)+(8);
 var $this_addr_i_i_i_i;
 var $__p_addr_i_i_i_i;
 var $this_addr_i2_i_i;
 var $__p_addr_i_i_i;
 var $this_addr_i_i_i;
 var $this_addr_i_i;
 var $this_addr_i;
 var $agg_tmp_i=(sp)+(16);
 var $samplingFreq_addr;
 var $n;
 var $exn_slot;
 var $ehselector_slot;
 var $ref_tmp=(sp)+(24);
 $samplingFreq_addr=$samplingFreq;
 var $call=__Znwj(528728);
 var $0=$call;
 var $1=$0;
 _memset($1, 0, 528728)|0;
 (function() { try { __THREW__ = 0; return __ZN19ReverbDesigner_wrapC1Ev($0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=4;break; }
 case 2: 
 $n=$0;
 var $call1=__Znwj(20);
 var $2=$call1;
 (function() { try { __THREW__ = 0; return __ZN4JSUIC1Ev($2) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=3;break; } else { label=5;break; }
 case 3: 
 var $3=$n;
 var $ui=(($3+528724)|0);
 HEAP32[(($ui)>>2)]=$2;
 var $4=$n;
 var $5=$4;
 var $6=$5;
 var $vtable=HEAP32[(($6)>>2)];
 var $vfn=(($vtable+20)|0);
 var $7=HEAP32[(($vfn)>>2)];
 var $8=$samplingFreq_addr;
 FUNCTION_TABLE[$7]($5,$8);
 var $9=$n;
 var $10=$9;
 var $11=$10;
 var $vtable4=HEAP32[(($11)>>2)];
 var $vfn5=(($vtable4+16)|0);
 var $12=HEAP32[(($vfn5)>>2)];
 var $13=$n;
 var $ui6=(($13+528724)|0);
 var $14=HEAP32[(($ui6)>>2)];
 var $15=$14;
 FUNCTION_TABLE[$12]($10,$15);
 var $16=$n;
 var $ui7=(($16+528724)|0);
 var $17=HEAP32[(($ui7)>>2)];
 var $iter=(($17+16)|0);
 var $18=$n;
 var $ui8=(($18+528724)|0);
 var $19=HEAP32[(($ui8)>>2)];
 var $uiMap=(($19+4)|0);
 $this_addr_i=$uiMap;
 var $this1_i=$this_addr_i;
 var $__tree__i=(($this1_i)|0);
 $this_addr_i_i=$__tree__i;
 var $this1_i_i=$this_addr_i_i;
 $this_addr_i_i_i=$this1_i_i;
 var $this1_i_i_i=$this_addr_i_i_i;
 var $__begin_node__i_i_i=(($this1_i_i_i)|0);
 var $20=HEAP32[(($__begin_node__i_i_i)>>2)];
 $this_addr_i2_i_i=$agg_tmp_i;
 $__p_addr_i_i_i=$20;
 var $this1_i3_i_i=$this_addr_i2_i_i;
 var $21=$__p_addr_i_i_i;
 $this_addr_i_i_i_i=$this1_i3_i_i;
 $__p_addr_i_i_i_i=$21;
 var $this1_i_i_i_i=$this_addr_i_i_i_i;
 var $__ptr__i_i_i_i=(($this1_i_i_i_i)|0);
 var $22=$__p_addr_i_i_i_i;
 HEAP32[(($__ptr__i_i_i_i)>>2)]=$22;
 var $tmp_i=$agg_tmp2_i;
 var $tmp3_i=$agg_tmp_i;
 assert(4 % 1 === 0);HEAP8[($tmp_i)]=HEAP8[($tmp3_i)];HEAP8[((($tmp_i)+(1))|0)]=HEAP8[((($tmp3_i)+(1))|0)];HEAP8[((($tmp_i)+(2))|0)]=HEAP8[((($tmp3_i)+(2))|0)];HEAP8[((($tmp_i)+(3))|0)]=HEAP8[((($tmp3_i)+(3))|0)];
 $this_addr_i5_i=$ref_tmp;
 var $this1_i6_i=$this_addr_i5_i;
 var $tmp_i_i=$__i2_i_i;
 var $tmp3_i_i=$agg_tmp2_i;
 assert(4 % 1 === 0);HEAP8[($tmp_i_i)]=HEAP8[($tmp3_i_i)];HEAP8[((($tmp_i_i)+(1))|0)]=HEAP8[((($tmp3_i_i)+(1))|0)];HEAP8[((($tmp_i_i)+(2))|0)]=HEAP8[((($tmp3_i_i)+(2))|0)];HEAP8[((($tmp_i_i)+(3))|0)]=HEAP8[((($tmp3_i_i)+(3))|0)];
 $this_addr_i_i4_i=$this1_i6_i;
 var $this1_i_i7_i=$this_addr_i_i4_i;
 var $__i__i_i_i=(($this1_i_i7_i)|0);
 var $23=$__i__i_i_i;
 var $24=$__i2_i_i;
 assert(4 % 1 === 0);HEAP32[(($23)>>2)]=HEAP32[(($24)>>2)];
 var $25=$iter;
 var $26=$ref_tmp;
 assert(4 % 1 === 0);HEAP32[(($25)>>2)]=HEAP32[(($26)>>2)];
 var $27=$n;
 var $28=$27;
 STACKTOP=sp;return $28;
 case 4: 
 var $29$0 = ___cxa_find_matching_catch(-1, -1); var $29$1 = tempRet0;
 var $30=$29$0;
 $exn_slot=$30;
 var $31=$29$1;
 $ehselector_slot=$31;
 __ZdlPv($call);
 label=6;break;
 case 5: 
 var $32$0 = ___cxa_find_matching_catch(-1, -1); var $32$1 = tempRet0;
 var $33=$32$0;
 $exn_slot=$33;
 var $34=$32$1;
 $ehselector_slot=$34;
 __ZdlPv($call1);
 label=6;break;
 case 6: 
 var $exn=$exn_slot;
 var $sel=$ehselector_slot;
 var $lpad_val$0=$exn;
 var $lpad_val$1=0;
 var $lpad_val9$0=$lpad_val$0;
 var $lpad_val9$1=$sel;
 ___resumeException($lpad_val9$0)
  default: assert(0, "bad label: " + label);
 }
}
Module["_REVERBDESIGNER_constructor"] = _REVERBDESIGNER_constructor;
function __ZN19ReverbDesigner_wrapC1Ev($this){
 var label=0;
 var $this_addr;
 $this_addr=$this;
 var $this1=$this_addr;
 __ZN19ReverbDesigner_wrapC2Ev($this1);
 return;
}
function __ZN4JSUIC1Ev($this){
 var label=0;
 var $this_addr;
 $this_addr=$this;
 var $this1=$this_addr;
 __ZN4JSUIC2Ev($this1);
 return;
}
function _REVERBDESIGNER_getNumParams($n){
 var label=0;
 var $this_addr_i_i_i_i;
 var $this_addr_i_i_i;
 var $this_addr_i_i;
 var $this_addr_i;
 var $n_addr;
 $n_addr=$n;
 var $0=$n_addr;
 var $ui=(($0+528724)|0);
 var $1=HEAP32[(($ui)>>2)];
 var $uiMap=(($1+4)|0);
 $this_addr_i=$uiMap;
 var $this1_i=$this_addr_i;
 var $__tree__i=(($this1_i)|0);
 $this_addr_i_i=$__tree__i;
 var $this1_i_i=$this_addr_i_i;
 var $__pair3__i_i=(($this1_i_i+8)|0);
 $this_addr_i_i_i=$__pair3__i_i;
 var $this1_i_i_i=$this_addr_i_i_i;
 var $2=$this1_i_i_i;
 $this_addr_i_i_i_i=$2;
 var $this1_i_i_i_i=$this_addr_i_i_i_i;
 var $__first__i_i_i_i=(($this1_i_i_i_i)|0);
 var $3=HEAP32[(($__first__i_i_i_i)>>2)];
 return $3;
}
Module["_REVERBDESIGNER_getNumParams"] = _REVERBDESIGNER_getNumParams;
function _REVERBDESIGNER_getNextParam($n,$key){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+72)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__p_addr_i_i_i65;
 var $this_addr_i_i_i13_i_i_i;
 var $this_addr_i_i14_i_i_i;
 var $this_addr_i15_i_i_i;
 var $__x_addr_i_i_i_i_i_i;
 var $__r_addr_i_i_i_i_i;
 var $this_addr_i_i_i4_i_i_i;
 var $this_addr_i_i5_i_i_i;
 var $this_addr_i6_i_i_i;
 var $this_addr_i_i_i_i_i_i;
 var $this_addr_i_i_i_i_i66;
 var $this_addr_i_i_i_i67;
 var $this_addr_i_i_i68;
 var $this_addr_i_i69;
 var $this_addr_i70;
 var $__x_addr_i_i_i53;
 var $__r_addr_i_i54;
 var $__x_addr_i_i_i_i55;
 var $__r_addr_i_i_i56;
 var $this_addr_i_i57;
 var $this_addr_i58;
 var $this_addr_i_i_i47;
 var $this_addr_i_i48;
 var $this_addr_i49;
 var $_addr_i;
 var $this_addr_i_i4_i23;
 var $__i2_i_i24=sp;
 var $this_addr_i5_i25;
 var $agg_tmp2_i26=(sp)+(8);
 var $this_addr_i_i2_i_i;
 var $__p_addr_i_i_i_i27;
 var $this_addr_i3_i_i;
 var $__p_addr_i_i_i28;
 var $__x_addr_i_i_i_i_i;
 var $__r_addr_i_i_i_i;
 var $this_addr_i_i_i_i_i;
 var $this_addr_i_i_i_i29;
 var $this_addr_i_i_i30;
 var $this_addr_i_i31;
 var $this_addr_i32;
 var $agg_tmp_i33=(sp)+(16);
 var $__x_addr_i_i;
 var $__y_addr_i_i;
 var $__x_addr_i;
 var $__y_addr_i;
 var $this_addr_i_i4_i;
 var $__i2_i_i=(sp)+(24);
 var $this_addr_i5_i;
 var $agg_tmp2_i=(sp)+(32);
 var $this_addr_i_i_i_i;
 var $__p_addr_i_i_i_i;
 var $this_addr_i2_i_i;
 var $__p_addr_i_i_i;
 var $this_addr_i_i_i;
 var $this_addr_i_i17;
 var $this_addr_i18;
 var $agg_tmp_i=(sp)+(40);
 var $__x_addr_i_i_i;
 var $__r_addr_i_i;
 var $__x_addr_i_i_i_i;
 var $__r_addr_i_i_i;
 var $this_addr_i_i;
 var $this_addr_i;
 var $n_addr;
 var $key_addr;
 var $valPtr;
 var $tmp=(sp)+(48);
 var $ref_tmp=(sp)+(56);
 var $ref_tmp14=(sp)+(64);
 $n_addr=$n;
 $key_addr=$key;
 var $0=$n_addr;
 var $ui=(($0+528724)|0);
 var $1=HEAP32[(($ui)>>2)];
 var $iter=(($1+16)|0);
 $this_addr_i=$iter;
 var $this1_i=$this_addr_i;
 var $__i__i=(($this1_i)|0);
 $this_addr_i_i=$__i__i;
 var $this1_i_i=$this_addr_i_i;
 var $__ptr__i_i=(($this1_i_i)|0);
 var $2=HEAP32[(($__ptr__i_i)>>2)];
 var $__value__i_i=(($2+16)|0);
 $__r_addr_i_i_i=$__value__i_i;
 var $3=$__r_addr_i_i_i;
 $__x_addr_i_i_i_i=$3;
 var $4=$__x_addr_i_i_i_i;
 var $5=$4;
 var $6=$5;
 var $__cc_i=(($6)|0);
 $__r_addr_i_i=$__cc_i;
 var $7=$__r_addr_i_i;
 $__x_addr_i_i_i=$7;
 var $8=$__x_addr_i_i_i;
 var $9=$8;
 var $10=$9;
 var $second=(($10+12)|0);
 var $11=HEAP32[(($second)>>2)];
 $valPtr=$11;
 var $12=$key_addr;
 var $13=$n_addr;
 var $ui1=(($13+528724)|0);
 var $14=HEAP32[(($ui1)>>2)];
 var $iter2=(($14+16)|0);
 $this_addr_i58=$iter2;
 var $this1_i59=$this_addr_i58;
 var $__i__i60=(($this1_i59)|0);
 $this_addr_i_i57=$__i__i60;
 var $this1_i_i61=$this_addr_i_i57;
 var $__ptr__i_i62=(($this1_i_i61)|0);
 var $15=HEAP32[(($__ptr__i_i62)>>2)];
 var $__value__i_i63=(($15+16)|0);
 $__r_addr_i_i_i56=$__value__i_i63;
 var $16=$__r_addr_i_i_i56;
 $__x_addr_i_i_i_i55=$16;
 var $17=$__x_addr_i_i_i_i55;
 var $18=$17;
 var $19=$18;
 var $__cc_i64=(($19)|0);
 $__r_addr_i_i54=$__cc_i64;
 var $20=$__r_addr_i_i54;
 $__x_addr_i_i_i53=$20;
 var $21=$__x_addr_i_i_i53;
 var $22=$21;
 var $23=$22;
 var $first=(($23)|0);
 $this_addr_i70=$first;
 var $this1_i71=$this_addr_i70;
 $this_addr_i_i69=$this1_i71;
 var $this1_i_i72=$this_addr_i_i69;
 $this_addr_i_i_i68=$this1_i_i72;
 var $this1_i_i_i73=$this_addr_i_i_i68;
 $this_addr_i_i_i_i67=$this1_i_i_i73;
 var $this1_i_i_i_i74=$this_addr_i_i_i_i67;
 var $__r__i_i_i_i=(($this1_i_i_i_i74)|0);
 $this_addr_i_i_i_i_i66=$__r__i_i_i_i;
 var $this1_i_i_i_i_i75=$this_addr_i_i_i_i_i66;
 var $24=$this1_i_i_i_i_i75;
 $this_addr_i_i_i_i_i_i=$24;
 var $this1_i_i_i_i_i_i=$this_addr_i_i_i_i_i_i;
 var $__first__i_i_i_i_i_i=(($this1_i_i_i_i_i_i)|0);
 var $25=(($__first__i_i_i_i_i_i)|0);
 var $__s_i_i_i_i=$25;
 var $26=(($__s_i_i_i_i)|0);
 var $__size__i_i_i_i=$26;
 var $27=HEAP8[($__size__i_i_i_i)];
 var $conv_i_i_i_i=($27&255);
 var $and_i_i_i_i=$conv_i_i_i_i&1;
 var $tobool_i_i_i_i=($and_i_i_i_i|0)!=0;
 if($tobool_i_i_i_i){label=2;break;}else{label=3;break;}
 case 2: 
 $this_addr_i15_i_i_i=$this1_i_i_i73;
 var $this1_i16_i_i_i=$this_addr_i15_i_i_i;
 var $__r__i17_i_i_i=(($this1_i16_i_i_i)|0);
 $this_addr_i_i14_i_i_i=$__r__i17_i_i_i;
 var $this1_i_i18_i_i_i=$this_addr_i_i14_i_i_i;
 var $28=$this1_i_i18_i_i_i;
 $this_addr_i_i_i13_i_i_i=$28;
 var $this1_i_i_i19_i_i_i=$this_addr_i_i_i13_i_i_i;
 var $__first__i_i_i20_i_i_i=(($this1_i_i_i19_i_i_i)|0);
 var $29=(($__first__i_i_i20_i_i_i)|0);
 var $__l_i_i_i_i=$29;
 var $__data__i21_i_i_i=(($__l_i_i_i_i+8)|0);
 var $30=HEAP32[(($__data__i21_i_i_i)>>2)];
 var $cond_i_i_i=$30;label=4;break;
 case 3: 
 $this_addr_i6_i_i_i=$this1_i_i_i73;
 var $this1_i7_i_i_i=$this_addr_i6_i_i_i;
 var $__r__i8_i_i_i=(($this1_i7_i_i_i)|0);
 $this_addr_i_i5_i_i_i=$__r__i8_i_i_i;
 var $this1_i_i9_i_i_i=$this_addr_i_i5_i_i_i;
 var $31=$this1_i_i9_i_i_i;
 $this_addr_i_i_i4_i_i_i=$31;
 var $this1_i_i_i10_i_i_i=$this_addr_i_i_i4_i_i_i;
 var $__first__i_i_i11_i_i_i=(($this1_i_i_i10_i_i_i)|0);
 var $32=(($__first__i_i_i11_i_i_i)|0);
 var $__s_i12_i_i_i=$32;
 var $__data__i_i_i_i=(($__s_i12_i_i_i+1)|0);
 var $arrayidx_i_i_i_i=(($__data__i_i_i_i)|0);
 $__r_addr_i_i_i_i_i=$arrayidx_i_i_i_i;
 var $33=$__r_addr_i_i_i_i_i;
 $__x_addr_i_i_i_i_i_i=$33;
 var $34=$__x_addr_i_i_i_i_i_i;
 var $cond_i_i_i=$34;label=4;break;
 case 4: 
 var $cond_i_i_i;
 $__p_addr_i_i_i65=$cond_i_i_i;
 var $35=$__p_addr_i_i_i65;
 var $call5=_strcpy($12,$35);
 var $36=$n_addr;
 var $ui6=(($36+528724)|0);
 var $37=HEAP32[(($ui6)>>2)];
 var $iter7=(($37+16)|0);
 $this_addr_i49=$iter7;
 $_addr_i=0;
 var $this1_i50=$this_addr_i49;
 var $38=$tmp;
 var $39=$this1_i50;
 assert(4 % 1 === 0);HEAP32[(($38)>>2)]=HEAP32[(($39)>>2)];
 $this_addr_i_i48=$this1_i50;
 var $this1_i_i51=$this_addr_i_i48;
 var $__i__i_i=(($this1_i_i51)|0);
 $this_addr_i_i_i47=$__i__i_i;
 var $this1_i_i_i52=$this_addr_i_i_i47;
 var $__ptr__i_i_i=(($this1_i_i_i52)|0);
 var $40=HEAP32[(($__ptr__i_i_i)>>2)];
 var $41=$40;
 var $call_i_i_i=__ZNSt3__111__tree_nextIPNS_16__tree_node_baseIPvEEEET_S5_($41);
 var $42=$call_i_i_i;
 var $__ptr_2_i_i_i=(($this1_i_i_i52)|0);
 HEAP32[(($__ptr_2_i_i_i)>>2)]=$42;
 var $43=$n_addr;
 var $ui8=(($43+528724)|0);
 var $44=HEAP32[(($ui8)>>2)];
 var $iter9=(($44+16)|0);
 var $45=$n_addr;
 var $ui10=(($45+528724)|0);
 var $46=HEAP32[(($ui10)>>2)];
 var $uiMap=(($46+4)|0);
 $this_addr_i32=$uiMap;
 var $this1_i34=$this_addr_i32;
 var $__tree__i35=(($this1_i34)|0);
 $this_addr_i_i31=$__tree__i35;
 var $this1_i_i36=$this_addr_i_i31;
 $this_addr_i_i_i30=$this1_i_i36;
 var $this1_i_i_i37=$this_addr_i_i_i30;
 var $__pair1__i_i_i=(($this1_i_i_i37+4)|0);
 $this_addr_i_i_i_i29=$__pair1__i_i_i;
 var $this1_i_i_i_i38=$this_addr_i_i_i_i29;
 var $47=$this1_i_i_i_i38;
 $this_addr_i_i_i_i_i=$47;
 var $this1_i_i_i_i_i=$this_addr_i_i_i_i_i;
 var $__first__i_i_i_i_i=(($this1_i_i_i_i_i)|0);
 $__r_addr_i_i_i_i=$__first__i_i_i_i_i;
 var $48=$__r_addr_i_i_i_i;
 $__x_addr_i_i_i_i_i=$48;
 var $49=$__x_addr_i_i_i_i_i;
 var $50=$49;
 var $51=$50;
 var $52=$51;
 $this_addr_i3_i_i=$agg_tmp_i33;
 $__p_addr_i_i_i28=$52;
 var $this1_i4_i_i=$this_addr_i3_i_i;
 var $53=$__p_addr_i_i_i28;
 $this_addr_i_i2_i_i=$this1_i4_i_i;
 $__p_addr_i_i_i_i27=$53;
 var $this1_i_i5_i_i=$this_addr_i_i2_i_i;
 var $__ptr__i_i_i_i39=(($this1_i_i5_i_i)|0);
 var $54=$__p_addr_i_i_i_i27;
 HEAP32[(($__ptr__i_i_i_i39)>>2)]=$54;
 var $tmp_i40=$agg_tmp2_i26;
 var $tmp3_i41=$agg_tmp_i33;
 assert(4 % 1 === 0);HEAP8[($tmp_i40)]=HEAP8[($tmp3_i41)];HEAP8[((($tmp_i40)+(1))|0)]=HEAP8[((($tmp3_i41)+(1))|0)];HEAP8[((($tmp_i40)+(2))|0)]=HEAP8[((($tmp3_i41)+(2))|0)];HEAP8[((($tmp_i40)+(3))|0)]=HEAP8[((($tmp3_i41)+(3))|0)];
 $this_addr_i5_i25=$ref_tmp;
 var $this1_i6_i42=$this_addr_i5_i25;
 var $tmp_i_i43=$__i2_i_i24;
 var $tmp3_i_i44=$agg_tmp2_i26;
 assert(4 % 1 === 0);HEAP8[($tmp_i_i43)]=HEAP8[($tmp3_i_i44)];HEAP8[((($tmp_i_i43)+(1))|0)]=HEAP8[((($tmp3_i_i44)+(1))|0)];HEAP8[((($tmp_i_i43)+(2))|0)]=HEAP8[((($tmp3_i_i44)+(2))|0)];HEAP8[((($tmp_i_i43)+(3))|0)]=HEAP8[((($tmp3_i_i44)+(3))|0)];
 $this_addr_i_i4_i23=$this1_i6_i42;
 var $this1_i_i7_i45=$this_addr_i_i4_i23;
 var $__i__i_i_i46=(($this1_i_i7_i45)|0);
 var $55=$__i__i_i_i46;
 var $56=$__i2_i_i24;
 assert(4 % 1 === 0);HEAP32[(($55)>>2)]=HEAP32[(($56)>>2)];
 $__x_addr_i=$iter9;
 $__y_addr_i=$ref_tmp;
 var $57=$__x_addr_i;
 var $__i__i21=(($57)|0);
 var $58=$__y_addr_i;
 var $__i_1_i=(($58)|0);
 $__x_addr_i_i=$__i__i21;
 $__y_addr_i_i=$__i_1_i;
 var $59=$__x_addr_i_i;
 var $__ptr__i_i22=(($59)|0);
 var $60=HEAP32[(($__ptr__i_i22)>>2)];
 var $61=$__y_addr_i_i;
 var $__ptr_1_i_i=(($61)|0);
 var $62=HEAP32[(($__ptr_1_i_i)>>2)];
 var $cmp_i_i=($60|0)==($62|0);
 if($cmp_i_i){label=5;break;}else{label=6;break;}
 case 5: 
 var $63=$n_addr;
 var $ui12=(($63+528724)|0);
 var $64=HEAP32[(($ui12)>>2)];
 var $iter13=(($64+16)|0);
 var $65=$n_addr;
 var $ui15=(($65+528724)|0);
 var $66=HEAP32[(($ui15)>>2)];
 var $uiMap16=(($66+4)|0);
 $this_addr_i18=$uiMap16;
 var $this1_i19=$this_addr_i18;
 var $__tree__i=(($this1_i19)|0);
 $this_addr_i_i17=$__tree__i;
 var $this1_i_i20=$this_addr_i_i17;
 $this_addr_i_i_i=$this1_i_i20;
 var $this1_i_i_i=$this_addr_i_i_i;
 var $__begin_node__i_i_i=(($this1_i_i_i)|0);
 var $67=HEAP32[(($__begin_node__i_i_i)>>2)];
 $this_addr_i2_i_i=$agg_tmp_i;
 $__p_addr_i_i_i=$67;
 var $this1_i3_i_i=$this_addr_i2_i_i;
 var $68=$__p_addr_i_i_i;
 $this_addr_i_i_i_i=$this1_i3_i_i;
 $__p_addr_i_i_i_i=$68;
 var $this1_i_i_i_i=$this_addr_i_i_i_i;
 var $__ptr__i_i_i_i=(($this1_i_i_i_i)|0);
 var $69=$__p_addr_i_i_i_i;
 HEAP32[(($__ptr__i_i_i_i)>>2)]=$69;
 var $tmp_i=$agg_tmp2_i;
 var $tmp3_i=$agg_tmp_i;
 assert(4 % 1 === 0);HEAP8[($tmp_i)]=HEAP8[($tmp3_i)];HEAP8[((($tmp_i)+(1))|0)]=HEAP8[((($tmp3_i)+(1))|0)];HEAP8[((($tmp_i)+(2))|0)]=HEAP8[((($tmp3_i)+(2))|0)];HEAP8[((($tmp_i)+(3))|0)]=HEAP8[((($tmp3_i)+(3))|0)];
 $this_addr_i5_i=$ref_tmp14;
 var $this1_i6_i=$this_addr_i5_i;
 var $tmp_i_i=$__i2_i_i;
 var $tmp3_i_i=$agg_tmp2_i;
 assert(4 % 1 === 0);HEAP8[($tmp_i_i)]=HEAP8[($tmp3_i_i)];HEAP8[((($tmp_i_i)+(1))|0)]=HEAP8[((($tmp3_i_i)+(1))|0)];HEAP8[((($tmp_i_i)+(2))|0)]=HEAP8[((($tmp3_i_i)+(2))|0)];HEAP8[((($tmp_i_i)+(3))|0)]=HEAP8[((($tmp3_i_i)+(3))|0)];
 $this_addr_i_i4_i=$this1_i6_i;
 var $this1_i_i7_i=$this_addr_i_i4_i;
 var $__i__i_i_i=(($this1_i_i7_i)|0);
 var $70=$__i__i_i_i;
 var $71=$__i2_i_i;
 assert(4 % 1 === 0);HEAP32[(($70)>>2)]=HEAP32[(($71)>>2)];
 var $72=$iter13;
 var $73=$ref_tmp14;
 assert(4 % 1 === 0);HEAP32[(($72)>>2)]=HEAP32[(($73)>>2)];
 label=6;break;
 case 6: 
 var $74=$valPtr;
 STACKTOP=sp;return $74;
  default: assert(0, "bad label: " + label);
 }
}
Module["_REVERBDESIGNER_getNextParam"] = _REVERBDESIGNER_getNextParam;
function _REVERBDESIGNER_compute($n,$count,$inputs,$outputs){
 var label=0;
 var $n_addr;
 var $count_addr;
 var $inputs_addr;
 var $outputs_addr;
 $n_addr=$n;
 $count_addr=$count;
 $inputs_addr=$inputs;
 $outputs_addr=$outputs;
 var $0=$n_addr;
 var $1=$0;
 var $2=$1;
 var $vtable=HEAP32[(($2)>>2)];
 var $vfn=(($vtable+24)|0);
 var $3=HEAP32[(($vfn)>>2)];
 var $4=$count_addr;
 var $5=$inputs_addr;
 var $6=$outputs_addr;
 FUNCTION_TABLE[$3]($1,$4,$5,$6);
 return 1;
}
Module["_REVERBDESIGNER_compute"] = _REVERBDESIGNER_compute;
function _REVERBDESIGNER_getNumInputs($n){
 var label=0;
 var $n_addr;
 $n_addr=$n;
 var $0=$n_addr;
 var $1=$0;
 var $2=$1;
 var $vtable=HEAP32[(($2)>>2)];
 var $vfn=(($vtable+8)|0);
 var $3=HEAP32[(($vfn)>>2)];
 var $call=FUNCTION_TABLE[$3]($1);
 return $call;
}
Module["_REVERBDESIGNER_getNumInputs"] = _REVERBDESIGNER_getNumInputs;
function _REVERBDESIGNER_getNumOutputs($n){
 var label=0;
 var $n_addr;
 $n_addr=$n;
 var $0=$n_addr;
 var $1=$0;
 var $2=$1;
 var $vtable=HEAP32[(($2)>>2)];
 var $vfn=(($vtable+12)|0);
 var $3=HEAP32[(($vfn)>>2)];
 var $call=FUNCTION_TABLE[$3]($1);
 return $call;
}
Module["_REVERBDESIGNER_getNumOutputs"] = _REVERBDESIGNER_getNumOutputs;
function _REVERBDESIGNER_destructor($n){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $n_addr;
 $n_addr=$n;
 var $0=$n_addr;
 var $isnull=($0|0)==0;
 if($isnull){label=3;break;}else{label=2;break;}
 case 2: 
 var $1=$0;
 var $vtable=HEAP32[(($1)>>2)];
 var $vfn=(($vtable+4)|0);
 var $2=HEAP32[(($vfn)>>2)];
 FUNCTION_TABLE[$2]($0);
 label=3;break;
 case 3: 
 return;
  default: assert(0, "bad label: " + label);
 }
}
Module["_REVERBDESIGNER_destructor"] = _REVERBDESIGNER_destructor;
function __ZNSt3__111__tree_nextIPNS_16__tree_node_baseIPvEEEET_S5_($__x){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $this_addr_i;
 var $this_addr_i_i6;
 var $this_addr_i_i_i_i;
 var $_addr_i_i_i_i;
 var $this_addr_i_i_i7;
 var $_addr_i_i_i8;
 var $__x_addr_i9;
 var $tmp_i=sp;
 var $exn_slot_i;
 var $ehselector_slot_i;
 var $__x_addr_i;
 var $this_addr_i_i_i;
 var $_addr_i_i_i;
 var $this_addr_i_i;
 var $_addr_i_i;
 var $retval;
 var $__x_addr;
 var $tmp=(sp)+(8);
 var $exn_slot;
 var $ehselector_slot;
 $__x_addr=$__x;
 var $0=$__x_addr;
 var $__right_=(($0+4)|0);
 var $1=HEAP32[(($__right_)>>2)];
 $this_addr_i_i=$tmp;
 $_addr_i_i=-1;
 var $this1_i_i=$this_addr_i_i;
 var $2=$_addr_i_i;
 $this_addr_i_i_i=$this1_i_i;
 $_addr_i_i_i=$2;
 var $this1_i_i_i=$this_addr_i_i_i;
 var $__lx_i_i_i=(($this1_i_i_i)|0);
 HEAP32[(($__lx_i_i_i)>>2)]=0;
 label=2;break;
 case 2: 
 $this_addr_i=$tmp;
 var $this1_i=$this_addr_i;
 label=3;break;
 case 3: 
 var $cmp=($1|0)!=0;
 if($cmp){label=4;break;}else{label=10;break;}
 case 4: 
 var $3=$__x_addr;
 var $__right_2=(($3+4)|0);
 var $4=HEAP32[(($__right_2)>>2)];
 $__x_addr_i9=$4;
 label=5;break;
 case 5: 
 var $5=$__x_addr_i9;
 var $6=$5;
 var $__left__i10=(($6)|0);
 var $7=HEAP32[(($__left__i10)>>2)];
 $this_addr_i_i_i7=$tmp_i;
 $_addr_i_i_i8=-1;
 var $this1_i_i_i11=$this_addr_i_i_i7;
 var $8=$_addr_i_i_i8;
 $this_addr_i_i_i_i=$this1_i_i_i11;
 $_addr_i_i_i_i=$8;
 var $this1_i_i_i_i=$this_addr_i_i_i_i;
 var $__lx_i_i_i_i=(($this1_i_i_i_i)|0);
 HEAP32[(($__lx_i_i_i_i)>>2)]=0;
 $this_addr_i_i6=$tmp_i;
 var $this1_i_i12=$this_addr_i_i6;
 var $cmp_i13=($7|0)!=0;
 if($cmp_i13){label=6;break;}else{label=7;break;}
 case 6: 
 var $9=$__x_addr_i9;
 var $10=$9;
 var $__left_2_i=(($10)|0);
 var $11=HEAP32[(($__left_2_i)>>2)];
 $__x_addr_i9=$11;
 label=5;break;
 case 7: 
 var $12=$__x_addr_i9;
 $retval=$12;
 label=14;break;
 case 8: 
 var $13$0 = ___cxa_find_matching_catch(-1, -1); var $13$1 = tempRet0;
 var $14=$13$0;
 $exn_slot=$14;
 var $15=$13$1;
 $ehselector_slot=$15;
 label=9;break;
 case 9: 
 var $exn=$exn_slot;
 ___cxa_call_unexpected($exn);
 throw "Reached an unreachable!";
 case 10: 
 label=11;break;
 case 11: 
 var $16=$__x_addr;
 $__x_addr_i=$16;
 var $17=$__x_addr_i;
 var $18=$__x_addr_i;
 var $__parent__i=(($18+8)|0);
 var $19=HEAP32[(($__parent__i)>>2)];
 var $20=$19;
 var $__left__i=(($20)|0);
 var $21=HEAP32[(($__left__i)>>2)];
 var $cmp_i=($17|0)==($21|0);
 var $lnot=$cmp_i^1;
 if($lnot){label=12;break;}else{label=13;break;}
 case 12: 
 var $22=$__x_addr;
 var $__parent_=(($22+8)|0);
 var $23=HEAP32[(($__parent_)>>2)];
 $__x_addr=$23;
 label=11;break;
 case 13: 
 var $24=$__x_addr;
 var $__parent_5=(($24+8)|0);
 var $25=HEAP32[(($__parent_5)>>2)];
 $retval=$25;
 label=14;break;
 case 14: 
 var $26=$retval;
 STACKTOP=sp;return $26;
  default: assert(0, "bad label: " + label);
 }
}
function __ZN4JSUIC2Ev($this){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+40)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $this_addr_i_i_i_i4;
 var $this_addr_i_i_i5;
 var $this_addr_i_i6;
 var $this_addr_i7;
 var $this_addr_i_i_i_i;
 var $c2_i_i_i=sp;
 var $this_addr_i_i_i;
 var $agg_tmp2_i_i=(sp)+(8);
 var $this_addr_i_i;
 var $__comp_addr_i_i;
 var $ref_tmp_i_i=(sp)+(16);
 var $agg_tmp_i_i=(sp)+(24);
 var $this_addr_i;
 var $__comp_addr_i;
 var $this_addr;
 var $ref_tmp=(sp)+(32);
 var $exn_slot;
 var $ehselector_slot;
 $this_addr=$this;
 var $this1=$this_addr;
 var $0=$this1;
 __ZN2UIC2Ev($0);
 var $1=$this1;
 HEAP32[(($1)>>2)]=6880;
 var $uiMap=(($this1+4)|0);
 $this_addr_i=$uiMap;
 $__comp_addr_i=$ref_tmp;
 var $this1_i=$this_addr_i;
 var $2=$__comp_addr_i;
 $this_addr_i_i=$this1_i;
 $__comp_addr_i_i=$2;
 var $this1_i_i=$this_addr_i_i;
 var $__tree__i_i=(($this1_i_i)|0);
 var $3=$__comp_addr_i_i;
 var $tmp_i_i=$agg_tmp2_i_i;
 var $tmp3_i_i=$agg_tmp_i_i;
 assert(1 % 1 === 0);HEAP8[($tmp_i_i)]=HEAP8[($tmp3_i_i)];
 $this_addr_i_i_i=$ref_tmp_i_i;
 var $this1_i_i_i=$this_addr_i_i_i;
 var $tmp_i_i_i=$c2_i_i_i;
 var $tmp3_i_i_i=$agg_tmp2_i_i;
 assert(1 % 1 === 0);HEAP8[($tmp_i_i_i)]=HEAP8[($tmp3_i_i_i)];
 $this_addr_i_i_i_i=$this1_i_i_i;
 var $this1_i_i_i_i=$this_addr_i_i_i_i;
 var $4=$this1_i_i_i_i;
 (function() { try { __THREW__ = 0; return __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPfEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEEC1ERKSD_($__tree__i_i,$ref_tmp_i_i) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=4;break; }
 case 2: 
 label=3;break;
 case 3: 
 var $iter=(($this1+16)|0);
 $this_addr_i7=$iter;
 var $this1_i8=$this_addr_i7;
 $this_addr_i_i6=$this1_i8;
 var $this1_i_i9=$this_addr_i_i6;
 var $__i__i_i=(($this1_i_i9)|0);
 $this_addr_i_i_i5=$__i__i_i;
 var $this1_i_i_i10=$this_addr_i_i_i5;
 $this_addr_i_i_i_i4=$this1_i_i_i10;
 var $this1_i_i_i_i11=$this_addr_i_i_i_i4;
 STACKTOP=sp;return;
 case 4: 
 var $5$0 = ___cxa_find_matching_catch(-1, -1); var $5$1 = tempRet0;
 var $6=$5$0;
 $exn_slot=$6;
 var $7=$5$1;
 $ehselector_slot=$7;
 var $8=$this1;
 (function() { try { __THREW__ = 0; return __ZN2UID2Ev($8) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=5;break; } else { label=7;break; }
 case 5: 
 label=6;break;
 case 6: 
 var $exn=$exn_slot;
 var $sel=$ehselector_slot;
 var $lpad_val$0=$exn;
 var $lpad_val$1=0;
 var $lpad_val3$0=$lpad_val$0;
 var $lpad_val3$1=$sel;
 ___resumeException($lpad_val3$0)
 case 7: 
 var $9$0 = ___cxa_find_matching_catch(-1, -1,0); var $9$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
  default: assert(0, "bad label: " + label);
 }
}
function __ZN2UIC2Ev($this){
 var label=0;
 var $this_addr;
 $this_addr=$this;
 var $this1=$this_addr;
 var $0=$this1;
 HEAP32[(($0)>>2)]=7000;
 return;
}
function __ZN2UID2Ev($this){
 var label=0;
 var $this_addr;
 $this_addr=$this;
 var $this1=$this_addr;
 return;
}
function __ZN4JSUID1Ev($this){
 var label=0;
 var $this_addr;
 $this_addr=$this;
 var $this1=$this_addr;
 __ZN4JSUID2Ev($this1);
 return;
}
function __ZN4JSUID0Ev($this){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $this_addr;
 var $exn_slot;
 var $ehselector_slot;
 $this_addr=$this;
 var $this1=$this_addr;
 (function() { try { __THREW__ = 0; return __ZN4JSUID1Ev($this1) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=3;break; }
 case 2: 
 var $0=$this1;
 __ZdlPv($0);
 return;
 case 3: 
 var $1$0 = ___cxa_find_matching_catch(-1, -1); var $1$1 = tempRet0;
 var $2=$1$0;
 $exn_slot=$2;
 var $3=$1$1;
 $ehselector_slot=$3;
 var $4=$this1;
 __ZdlPv($4);
 label=4;break;
 case 4: 
 var $exn=$exn_slot;
 var $sel=$ehselector_slot;
 var $lpad_val$0=$exn;
 var $lpad_val$1=0;
 var $lpad_val2$0=$lpad_val$0;
 var $lpad_val2$1=$sel;
 ___resumeException($lpad_val2$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZN4JSUI10openTabBoxEPKc($this,$label){
 var label=0;
 var $this_addr;
 var $label_addr;
 $this_addr=$this;
 $label_addr=$label;
 var $this1=$this_addr;
 return;
}
function __ZN4JSUI17openHorizontalBoxEPKc($this,$label){
 var label=0;
 var $this_addr;
 var $label_addr;
 $this_addr=$this;
 $label_addr=$label;
 var $this1=$this_addr;
 return;
}
function __ZN4JSUI15openVerticalBoxEPKc($this,$label){
 var label=0;
 var $this_addr;
 var $label_addr;
 $this_addr=$this;
 $label_addr=$label;
 var $this1=$this_addr;
 return;
}
function __ZN4JSUI8closeBoxEv($this){
 var label=0;
 var $this_addr;
 $this_addr=$this;
 var $this1=$this_addr;
 return;
}
function __ZN4JSUI9addButtonEPKcPf($this,$label,$zone){
 var label=0;
 var $this_addr;
 var $label_addr;
 var $zone_addr;
 $this_addr=$this;
 $label_addr=$label;
 $zone_addr=$zone;
 var $this1=$this_addr;
 var $0=$label_addr;
 var $1=$zone_addr;
 __ZN4JSUI9insertMapEPKcPf($this1,$0,$1);
 return;
}
function __ZN4JSUI14addCheckButtonEPKcPf($this,$label,$zone){
 var label=0;
 var $this_addr;
 var $label_addr;
 var $zone_addr;
 $this_addr=$this;
 $label_addr=$label;
 $zone_addr=$zone;
 var $this1=$this_addr;
 var $0=$label_addr;
 var $1=$zone_addr;
 __ZN4JSUI9insertMapEPKcPf($this1,$0,$1);
 return;
}
function __ZN4JSUI17addVerticalSliderEPKcPfffff($this,$label,$zone,$init,$fmin,$fmax,$step){
 var label=0;
 var $this_addr;
 var $label_addr;
 var $zone_addr;
 var $init_addr;
 var $fmin_addr;
 var $fmax_addr;
 var $step_addr;
 $this_addr=$this;
 $label_addr=$label;
 $zone_addr=$zone;
 $init_addr=$init;
 $fmin_addr=$fmin;
 $fmax_addr=$fmax;
 $step_addr=$step;
 var $this1=$this_addr;
 var $0=$label_addr;
 var $1=$zone_addr;
 __ZN4JSUI9insertMapEPKcPf($this1,$0,$1);
 return;
}
function __ZN4JSUI19addHorizontalSliderEPKcPfffff($this,$label,$zone,$init,$fmin,$fmax,$step){
 var label=0;
 var $this_addr;
 var $label_addr;
 var $zone_addr;
 var $init_addr;
 var $fmin_addr;
 var $fmax_addr;
 var $step_addr;
 $this_addr=$this;
 $label_addr=$label;
 $zone_addr=$zone;
 $init_addr=$init;
 $fmin_addr=$fmin;
 $fmax_addr=$fmax;
 $step_addr=$step;
 var $this1=$this_addr;
 var $0=$label_addr;
 var $1=$zone_addr;
 __ZN4JSUI9insertMapEPKcPf($this1,$0,$1);
 return;
}
function __ZN4JSUI11addNumEntryEPKcPfffff($this,$label,$zone,$init,$fmin,$fmax,$step){
 var label=0;
 var $this_addr;
 var $label_addr;
 var $zone_addr;
 var $init_addr;
 var $fmin_addr;
 var $fmax_addr;
 var $step_addr;
 $this_addr=$this;
 $label_addr=$label;
 $zone_addr=$zone;
 $init_addr=$init;
 $fmin_addr=$fmin;
 $fmax_addr=$fmax;
 $step_addr=$step;
 var $this1=$this_addr;
 var $0=$label_addr;
 var $1=$zone_addr;
 __ZN4JSUI9insertMapEPKcPf($this1,$0,$1);
 return;
}
function __ZN4JSUI21addHorizontalBargraphEPKcPfff($this,$label,$zone,$fmin,$fmax){
 var label=0;
 var $this_addr;
 var $label_addr;
 var $zone_addr;
 var $fmin_addr;
 var $fmax_addr;
 $this_addr=$this;
 $label_addr=$label;
 $zone_addr=$zone;
 $fmin_addr=$fmin;
 $fmax_addr=$fmax;
 var $this1=$this_addr;
 return;
}
function __ZN4JSUI19addVerticalBargraphEPKcPfff($this,$label,$zone,$fmin,$fmax){
 var label=0;
 var $this_addr;
 var $label_addr;
 var $zone_addr;
 var $fmin_addr;
 var $fmax_addr;
 $this_addr=$this;
 $label_addr=$label;
 $zone_addr=$zone;
 $fmin_addr=$fmin;
 $fmax_addr=$fmax;
 var $this1=$this_addr;
 return;
}
function __ZN4JSUI7declareEPfPKcS2_($this,$zone,$key,$val){
 var label=0;
 var $this_addr;
 var $zone_addr;
 var $key_addr;
 var $val_addr;
 $this_addr=$this;
 $zone_addr=$zone;
 $key_addr=$key;
 $val_addr=$val;
 var $this1=$this_addr;
 return;
}
function __ZN4JSUI9insertMapEPKcPf($this,$label,$zone){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+112)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $this_addr_i_i_i_i6_i;
 var $__i2_i_i_i_i=sp;
 var $this_addr_i_i_i7_i;
 var $agg_tmp4_i_i_i=(sp)+(8);
 var $this_addr_i_i8_i;
 var $__p_addr_i_i_i;
 var $agg_tmp_i_i_i=(sp)+(16);
 var $this_addr_i9_i;
 var $__p_addr_i_i25;
 var $this_addr_i_i_i_i_i26;
 var $__p_addr_i_i_i_i_i;
 var $this_addr_i_i_i_i27;
 var $__p_addr_i_i_i_i;
 var $this_addr_i_i_i28;
 var $__a0_addr_i_i_i;
 var $this_addr_i_i29;
 var $__a0_addr_i_i;
 var $this_addr_i30;
 var $__v_addr_i;
 var $ref_tmp_i=(sp)+(24);
 var $ref_tmp2_i=(sp)+(32);
 var $exn_slot_i;
 var $ehselector_slot_i;
 var $this_addr_i_i19;
 var $__p_addr_i_i;
 var $this_addr_i20;
 var $__p_addr_i;
 var $this_addr_i_i15;
 var $__x_addr_i_i;
 var $__y_addr_i_i;
 var $this_addr_i16;
 var $__x_addr_i;
 var $__y_addr_i;
 var $__s_addr_i_i_i;
 var $this_addr_i_i_i_i_i_i;
 var $this_addr_i_i_i_i_i;
 var $this_addr_i_i_i_i;
 var $this_addr_i_i_i;
 var $this_addr_i_i;
 var $__s_addr_i_i;
 var $this_addr_i;
 var $__s_addr_i;
 var $this_addr;
 var $label_addr;
 var $zone_addr=(sp)+(48);
 var $ref_tmp=(sp)+(56);
 var $ref_tmp2=(sp)+(72);
 var $ref_tmp3=(sp)+(88);
 var $exn_slot;
 var $ehselector_slot;
 var $tmp=(sp)+(104);
 $this_addr=$this;
 $label_addr=$label;
 HEAP32[(($zone_addr)>>2)]=$zone;
 var $this1=$this_addr;
 var $uiMap=(($this1+4)|0);
 var $0=$label_addr;
 $this_addr_i=$ref_tmp3;
 $__s_addr_i=$0;
 var $this1_i=$this_addr_i;
 var $1=$__s_addr_i;
 $this_addr_i_i=$this1_i;
 $__s_addr_i_i=$1;
 var $this1_i_i=$this_addr_i_i;
 var $2=$this1_i_i;
 var $__r__i_i=(($this1_i_i)|0);
 $this_addr_i_i_i=$__r__i_i;
 var $this1_i_i_i=$this_addr_i_i_i;
 $this_addr_i_i_i_i=$this1_i_i_i;
 var $this1_i_i_i_i=$this_addr_i_i_i_i;
 var $3=$this1_i_i_i_i;
 $this_addr_i_i_i_i_i=$3;
 var $this1_i_i_i_i_i=$this_addr_i_i_i_i_i;
 var $4=$this1_i_i_i_i_i;
 $this_addr_i_i_i_i_i_i=$4;
 var $this1_i_i_i_i_i_i=$this_addr_i_i_i_i_i_i;
 var $__first__i_i_i_i_i=(($this1_i_i_i_i_i)|0);
 var $5=$__s_addr_i_i;
 var $6=$__s_addr_i_i;
 $__s_addr_i_i_i=$6;
 var $7=$__s_addr_i_i_i;
 var $call_i_i_i=_strlen($7);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($this1_i_i,$5,$call_i_i_i);
 $this_addr_i16=$ref_tmp2;
 $__x_addr_i=$ref_tmp3;
 $__y_addr_i=$zone_addr;
 var $this1_i17=$this_addr_i16;
 var $8=$__y_addr_i;
 var $9=$__x_addr_i;
 $this_addr_i_i15=$this1_i17;
 $__x_addr_i_i=$9;
 $__y_addr_i_i=$8;
 var $this1_i_i18=$this_addr_i_i15;
 var $first_i_i=(($this1_i_i18)|0);
 var $10=$__x_addr_i_i;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_($first_i_i,$10) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=15;break; }
 case 2: 
 var $second_i_i=(($this1_i_i18+12)|0);
 var $11=$__y_addr_i_i;
 var $12=HEAP32[(($11)>>2)];
 HEAP32[(($second_i_i)>>2)]=$12;
 label=3;break;
 case 3: 
 $this_addr_i20=$ref_tmp;
 $__p_addr_i=$ref_tmp2;
 var $this1_i21=$this_addr_i20;
 var $13=$__p_addr_i;
 $this_addr_i_i19=$this1_i21;
 $__p_addr_i_i=$13;
 var $this1_i_i22=$this_addr_i_i19;
 var $first_i_i23=(($this1_i_i22)|0);
 var $14=$__p_addr_i_i;
 var $first2_i_i=(($14)|0);
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_($first_i_i23,$first2_i_i) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=4;break; } else { label=16;break; }
 case 4: 
 var $second_i_i24=(($this1_i_i22+12)|0);
 var $15=$__p_addr_i_i;
 var $second3_i_i=(($15+12)|0);
 var $16=HEAP32[(($second3_i_i)>>2)];
 HEAP32[(($second_i_i24)>>2)]=$16;
 label=5;break;
 case 5: 
 $this_addr_i30=$uiMap;
 $__v_addr_i=$ref_tmp;
 var $this1_i31=$this_addr_i30;
 var $__tree__i=(($this1_i31)|0);
 var $17=$__v_addr_i;
 $this_addr_i_i29=$ref_tmp2_i;
 $__a0_addr_i_i=$17;
 var $this1_i_i32=$this_addr_i_i29;
 var $18=$__a0_addr_i_i;
 $this_addr_i_i_i28=$this1_i_i32;
 $__a0_addr_i_i_i=$18;
 var $this1_i_i_i33=$this_addr_i_i_i28;
 var $__cc_i_i_i=(($this1_i_i_i33)|0);
 var $19=$__a0_addr_i_i_i;
 $this_addr_i_i_i_i27=$__cc_i_i_i;
 $__p_addr_i_i_i_i=$19;
 var $this1_i_i_i_i34=$this_addr_i_i_i_i27;
 var $20=$__p_addr_i_i_i_i;
 $this_addr_i_i_i_i_i26=$this1_i_i_i_i34;
 $__p_addr_i_i_i_i_i=$20;
 var $this1_i_i_i_i_i35=$this_addr_i_i_i_i_i26;
 var $first_i_i_i_i_i=(($this1_i_i_i_i_i35)|0);
 var $21=$__p_addr_i_i_i_i_i;
 var $first2_i_i_i_i_i=(($21)|0);
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_($first_i_i_i_i_i,$first2_i_i_i_i_i) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=6;break; } else { label=17;break; }
 case 6: 
 var $second_i_i_i_i_i=(($this1_i_i_i_i_i35+12)|0);
 var $22=$__p_addr_i_i_i_i_i;
 var $second3_i_i_i_i_i=(($22+12)|0);
 var $23=HEAP32[(($second3_i_i_i_i_i)>>2)];
 HEAP32[(($second_i_i_i_i_i)>>2)]=$23;
 (function() { try { __THREW__ = 0; return __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPfEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE15__insert_uniqueERKS9_($ref_tmp_i,$__tree__i,$ref_tmp2_i) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=7;break; } else { label=8;break; }
 case 7: 
 $this_addr_i9_i=$tmp;
 $__p_addr_i_i25=$ref_tmp_i;
 var $this1_i10_i=$this_addr_i9_i;
 var $24=$__p_addr_i_i25;
 $this_addr_i_i8_i=$this1_i10_i;
 $__p_addr_i_i_i=$24;
 var $this1_i_i11_i=$this_addr_i_i8_i;
 var $first_i_i_i=(($this1_i_i11_i)|0);
 var $25=$__p_addr_i_i_i;
 var $first2_i_i_i=(($25)|0);
 var $26=$agg_tmp_i_i_i;
 var $27=$first2_i_i_i;
 assert(4 % 1 === 0);HEAP32[(($26)>>2)]=HEAP32[(($27)>>2)];
 var $tmp_i_i_i=$agg_tmp4_i_i_i;
 var $tmp5_i_i_i=$agg_tmp_i_i_i;
 assert(4 % 1 === 0);HEAP8[($tmp_i_i_i)]=HEAP8[($tmp5_i_i_i)];HEAP8[((($tmp_i_i_i)+(1))|0)]=HEAP8[((($tmp5_i_i_i)+(1))|0)];HEAP8[((($tmp_i_i_i)+(2))|0)]=HEAP8[((($tmp5_i_i_i)+(2))|0)];HEAP8[((($tmp_i_i_i)+(3))|0)]=HEAP8[((($tmp5_i_i_i)+(3))|0)];
 $this_addr_i_i_i7_i=$first_i_i_i;
 var $this1_i_i_i12_i=$this_addr_i_i_i7_i;
 var $tmp_i_i_i_i=$__i2_i_i_i_i;
 var $tmp3_i_i_i_i=$agg_tmp4_i_i_i;
 assert(4 % 1 === 0);HEAP8[($tmp_i_i_i_i)]=HEAP8[($tmp3_i_i_i_i)];HEAP8[((($tmp_i_i_i_i)+(1))|0)]=HEAP8[((($tmp3_i_i_i_i)+(1))|0)];HEAP8[((($tmp_i_i_i_i)+(2))|0)]=HEAP8[((($tmp3_i_i_i_i)+(2))|0)];HEAP8[((($tmp_i_i_i_i)+(3))|0)]=HEAP8[((($tmp3_i_i_i_i)+(3))|0)];
 $this_addr_i_i_i_i6_i=$this1_i_i_i12_i;
 var $this1_i_i_i_i13_i=$this_addr_i_i_i_i6_i;
 var $__i__i_i_i_i_i=(($this1_i_i_i_i13_i)|0);
 var $28=$__i__i_i_i_i_i;
 var $29=$__i2_i_i_i_i;
 assert(4 % 1 === 0);HEAP32[(($28)>>2)]=HEAP32[(($29)>>2)];
 var $second_i_i_i=(($this1_i_i11_i+4)|0);
 var $30=$__p_addr_i_i_i;
 var $second3_i_i_i=(($30+4)|0);
 var $31=HEAP8[($second3_i_i_i)];
 var $tobool_i_i_i=(($31)&1);
 var $frombool_i_i_i=($tobool_i_i_i&1);
 HEAP8[($second_i_i_i)]=$frombool_i_i_i;
 (function() { try { __THREW__ = 0; return __ZNSt3__112__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPfED1Ev($ref_tmp2_i) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=11;break; } else { label=17;break; }
 case 8: 
 var $32$0 = ___cxa_find_matching_catch(-1, -1); var $32$1 = tempRet0;
 var $33=$32$0;
 $exn_slot_i=$33;
 var $34=$32$1;
 $ehselector_slot_i=$34;
 (function() { try { __THREW__ = 0; return __ZNSt3__112__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPfED1Ev($ref_tmp2_i) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=9;break; } else { label=10;break; }
 case 9: 
 var $exn_i=$exn_slot_i;
 var $sel_i=$ehselector_slot_i;
 var $lpad_val_i$0=$exn_i;
 var $lpad_val_i$1=0;
 var $lpad_val5_i$0=$lpad_val_i$0;
 var $lpad_val5_i$1=$sel_i;
 var $eh_lpad_body$1=$lpad_val5_i$1;var $eh_lpad_body$0=$lpad_val5_i$0;label=18;break;
 case 10: 
 var $35$0 = ___cxa_find_matching_catch(-1, -1,0); var $35$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 11: 
 label=12;break;
 case 12: 
 (function() { try { __THREW__ = 0; return __ZNSt3__14pairIKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPfED1Ev($ref_tmp) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=13;break; } else { label=16;break; }
 case 13: 
 (function() { try { __THREW__ = 0; return __ZNSt3__14pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPfED1Ev($ref_tmp2) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=14;break; } else { label=15;break; }
 case 14: 
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($ref_tmp3);
 STACKTOP=sp;return;
 case 15: 
 var $36$0 = ___cxa_find_matching_catch(-1, -1); var $36$1 = tempRet0;
 var $37=$36$0;
 $exn_slot=$37;
 var $38=$36$1;
 $ehselector_slot=$38;
 label=22;break;
 case 16: 
 var $39$0 = ___cxa_find_matching_catch(-1, -1); var $39$1 = tempRet0;
 var $40=$39$0;
 $exn_slot=$40;
 var $41=$39$1;
 $ehselector_slot=$41;
 label=20;break;
 case 17: 
 var $42$0 = ___cxa_find_matching_catch(-1, -1); var $42$1 = tempRet0;
 var $eh_lpad_body$1=$42$1;var $eh_lpad_body$0=$42$0;label=18;break;
 case 18: 
 var $eh_lpad_body$0;
 var $eh_lpad_body$1;
 var $43=$eh_lpad_body$0;
 $exn_slot=$43;
 var $44=$eh_lpad_body$1;
 $ehselector_slot=$44;
 (function() { try { __THREW__ = 0; return __ZNSt3__14pairIKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPfED1Ev($ref_tmp) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=19;break; } else { label=25;break; }
 case 19: 
 label=20;break;
 case 20: 
 (function() { try { __THREW__ = 0; return __ZNSt3__14pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPfED1Ev($ref_tmp2) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=21;break; } else { label=25;break; }
 case 21: 
 label=22;break;
 case 22: 
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($ref_tmp3) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=23;break; } else { label=25;break; }
 case 23: 
 label=24;break;
 case 24: 
 var $exn=$exn_slot;
 var $sel=$ehselector_slot;
 var $lpad_val$0=$exn;
 var $lpad_val$1=0;
 var $lpad_val14$0=$lpad_val$0;
 var $lpad_val14$1=$sel;
 ___resumeException($lpad_val14$0)
 case 25: 
 var $45$0 = ___cxa_find_matching_catch(-1, -1,0); var $45$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__14pairIKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPfED1Ev($this){
 var label=0;
 var $this_addr;
 $this_addr=$this;
 var $this1=$this_addr;
 __ZNSt3__14pairIKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPfED2Ev($this1);
 return;
}
function __ZNSt3__14pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPfED1Ev($this){
 var label=0;
 var $this_addr;
 $this_addr=$this;
 var $this1=$this_addr;
 __ZNSt3__14pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPfED2Ev($this1);
 return;
}
function __ZNSt3__14pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPfED2Ev($this){
 var label=0;
 var $this_addr;
 $this_addr=$this;
 var $this1=$this_addr;
 var $first=(($this1)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($first);
 return;
}
function __ZNSt3__14pairIKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPfED2Ev($this){
 var label=0;
 var $this_addr;
 $this_addr=$this;
 var $this1=$this_addr;
 var $first=(($this1)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($first);
 return;
}
function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPfEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE15__insert_uniqueERKS9_($agg_result,$this,$__v){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+240)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $this_addr_i_i13_i_i_i197;
 var $this_addr_i14_i_i_i198;
 var $this_addr_i_i8_i_i_i199;
 var $this_addr_i9_i_i_i200;
 var $_addr_i_i7_i_i_i_i201;
 var $__p_addr_i_i8_i_i_i_i202;
 var $agg_tmp1_i_i_i_i_i203=sp;
 var $__a_addr_i9_i_i_i_i204;
 var $__p_addr_i10_i_i_i_i205;
 var $agg_tmp_i_i_i_i_i206=(sp)+(8);
 var $ref_tmp_i_i_i_i_i207=(sp)+(16);
 var $this_addr_i_i_i_i_i_i208;
 var $__p_addr_i_i_i_i_i_i209;
 var $_addr_i_i_i_i_i_i210;
 var $__a_addr_i_i_i_i_i211;
 var $__p_addr_i_i_i_i_i212;
 var $__n_addr_i_i_i_i_i213;
 var $__x_addr_i_i_i_i_i214;
 var $this_addr_i6_i_i_i215;
 var $__p_addr_i_i_i_i216;
 var $exn_slot_i_i_i_i217;
 var $ehselector_slot_i_i_i_i218;
 var $this_addr_i_i_i_i_i219;
 var $this_addr_i_i_i_i220;
 var $this_addr_i_i_i221;
 var $__p_addr_i_i_i222;
 var $__tmp_i_i_i223;
 var $this_addr_i_i224;
 var $this_addr_i225;
 var $this_addr_i_i4_i;
 var $this_addr_i5_i;
 var $this_addr_i_i_i189;
 var $this_addr_i_i190;
 var $this_addr_i191;
 var $__t_i;
 var $this_addr_i_i_i183;
 var $this_addr_i_i184;
 var $this_addr_i185;
 var $this_addr_i_i13_i_i_i117;
 var $this_addr_i14_i_i_i118;
 var $this_addr_i_i8_i_i_i119;
 var $this_addr_i9_i_i_i120;
 var $_addr_i_i7_i_i_i_i121;
 var $__p_addr_i_i8_i_i_i_i122;
 var $agg_tmp1_i_i_i_i_i123=(sp)+(24);
 var $__a_addr_i9_i_i_i_i124;
 var $__p_addr_i10_i_i_i_i125;
 var $agg_tmp_i_i_i_i_i126=(sp)+(32);
 var $ref_tmp_i_i_i_i_i127=(sp)+(40);
 var $this_addr_i_i_i_i_i_i128;
 var $__p_addr_i_i_i_i_i_i129;
 var $_addr_i_i_i_i_i_i130;
 var $__a_addr_i_i_i_i_i131;
 var $__p_addr_i_i_i_i_i132;
 var $__n_addr_i_i_i_i_i133;
 var $__x_addr_i_i_i_i_i134;
 var $this_addr_i6_i_i_i135;
 var $__p_addr_i_i_i_i136;
 var $exn_slot_i_i_i_i137;
 var $ehselector_slot_i_i_i_i138;
 var $this_addr_i_i_i_i_i139;
 var $this_addr_i_i_i_i140;
 var $this_addr_i_i_i141;
 var $__p_addr_i_i_i142;
 var $__tmp_i_i_i143;
 var $this_addr_i_i144;
 var $this_addr_i145;
 var $this_addr_i_i13_i_i_i51;
 var $this_addr_i14_i_i_i52;
 var $this_addr_i_i8_i_i_i53;
 var $this_addr_i9_i_i_i54;
 var $_addr_i_i7_i_i_i_i55;
 var $__p_addr_i_i8_i_i_i_i56;
 var $agg_tmp1_i_i_i_i_i57=(sp)+(48);
 var $__a_addr_i9_i_i_i_i58;
 var $__p_addr_i10_i_i_i_i59;
 var $agg_tmp_i_i_i_i_i60=(sp)+(56);
 var $ref_tmp_i_i_i_i_i61=(sp)+(64);
 var $this_addr_i_i_i_i_i_i62;
 var $__p_addr_i_i_i_i_i_i63;
 var $_addr_i_i_i_i_i_i64;
 var $__a_addr_i_i_i_i_i65;
 var $__p_addr_i_i_i_i_i66;
 var $__n_addr_i_i_i_i_i67;
 var $__x_addr_i_i_i_i_i68;
 var $this_addr_i6_i_i_i69;
 var $__p_addr_i_i_i_i70;
 var $exn_slot_i_i_i_i71;
 var $ehselector_slot_i_i_i_i72;
 var $this_addr_i_i_i_i_i73;
 var $this_addr_i_i_i_i74;
 var $this_addr_i_i_i75;
 var $__p_addr_i_i_i76;
 var $__tmp_i_i_i77;
 var $this_addr_i_i78;
 var $this_addr_i79;
 var $this_addr_i_i4_i_i_i;
 var $this_addr_i5_i_i_i;
 var $this_addr_i_i_i21_i_i;
 var $this_addr_i_i22_i_i;
 var $this_addr_i23_i_i;
 var $__t_i_i_i;
 var $this_addr_i17_i_i;
 var $this_addr_i_i_i10_i_i;
 var $this_addr_i_i11_i_i;
 var $this_addr_i12_i_i;
 var $__t_addr_i_i_i35;
 var $__t_addr_i5_i_i_i_i;
 var $__t_addr_i3_i_i_i_i_i;
 var $__t_addr_i_i_i_i_i_i;
 var $this_addr_i_i_i_i_i36;
 var $__t1_addr_i_i_i_i_i=(sp)+(72);
 var $agg_tmp3_i_i_i_i=(sp)+(80);
 var $__t_addr_i_i_i_i_i;
 var $this_addr_i_i_i_i37;
 var $__t1_addr_i_i_i_i=(sp)+(88);
 var $agg_tmp_i_i_i_i=(sp)+(96);
 var $__t22_i_i_i=(sp)+(104);
 var $this_addr_i8_i_i;
 var $__t1_addr_i_i_i;
 var $agg_tmp6_i_i=(sp)+(112);
 var $this_addr_i_i_i38;
 var $this_addr_i_i39;
 var $agg_tmp_i_i=(sp)+(120);
 var $__u2_i=(sp)+(128);
 var $this_addr_i40;
 var $agg_tmp32=(sp)+(136);
 var $this_addr_i_i_i26;
 var $__t_addr_i_i_i;
 var $this_addr_i_i27;
 var $__t_addr_i_i;
 var $this_addr_i28;
 var $this_addr_i24;
 var $this_addr_i_i13_i_i_i;
 var $this_addr_i14_i_i_i;
 var $this_addr_i_i8_i_i_i;
 var $this_addr_i9_i_i_i;
 var $_addr_i_i7_i_i_i_i;
 var $__p_addr_i_i8_i_i_i_i;
 var $agg_tmp1_i_i_i_i_i=(sp)+(144);
 var $__a_addr_i9_i_i_i_i;
 var $__p_addr_i10_i_i_i_i;
 var $agg_tmp_i_i_i_i_i=(sp)+(152);
 var $ref_tmp_i_i_i_i_i=(sp)+(160);
 var $this_addr_i_i_i_i_i_i;
 var $__p_addr_i_i_i_i_i_i;
 var $_addr_i_i_i_i_i_i;
 var $__a_addr_i_i_i_i_i;
 var $__p_addr_i_i_i_i_i;
 var $__n_addr_i_i_i_i_i;
 var $__x_addr_i_i_i_i_i;
 var $this_addr_i6_i_i_i;
 var $__p_addr_i_i_i_i;
 var $exn_slot_i_i_i_i;
 var $ehselector_slot_i_i_i_i;
 var $this_addr_i_i_i_i_i;
 var $this_addr_i_i_i_i;
 var $this_addr_i_i_i18;
 var $__p_addr_i_i_i;
 var $__tmp_i_i_i;
 var $this_addr_i_i19;
 var $this_addr_i20;
 var $this_addr_i_i14;
 var $__p_addr_i_i;
 var $this_addr_i15;
 var $__p_addr_i;
 var $this_addr_i_i12;
 var $__x_addr_i_i;
 var $__y_addr_i_i;
 var $this_addr_i;
 var $__x_addr_i;
 var $__y_addr_i;
 var $this_addr_i_i_i;
 var $_addr_i_i_i;
 var $this_addr_i_i;
 var $_addr_i_i;
 var $this_addr;
 var $__v_addr;
 var $__parent=(sp)+(168);
 var $__child;
 var $__r;
 var $__inserted=(sp)+(176);
 var $tmp=(sp)+(184);
 var $__h=(sp)+(192);
 var $agg_tmp=(sp)+(208);
 var $temp_lvalue=(sp)+(216);
 var $exn_slot;
 var $ehselector_slot;
 var $ref_tmp=(sp)+(232);
 $this_addr=$this;
 $__v_addr=$__v;
 var $this1=$this_addr;
 var $0=$__v_addr;
 var $call=__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPfEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE12__find_equalIS9_EERPNS_16__tree_node_baseIPvEESL_RKT_($this1,$__parent,$0);
 $__child=$call;
 var $1=$__child;
 var $2=HEAP32[(($1)>>2)];
 var $3=$2;
 $__r=$3;
 HEAP8[($__inserted)]=0;
 var $4=$__child;
 var $5=HEAP32[(($4)>>2)];
 $this_addr_i_i=$tmp;
 $_addr_i_i=-1;
 var $this1_i_i=$this_addr_i_i;
 var $6=$_addr_i_i;
 $this_addr_i_i_i=$this1_i_i;
 $_addr_i_i_i=$6;
 var $this1_i_i_i=$this_addr_i_i_i;
 var $__lx_i_i_i=(($this1_i_i_i)|0);
 HEAP32[(($__lx_i_i_i)>>2)]=0;
 $this_addr_i24=$tmp;
 var $this1_i25=$this_addr_i24;
 var $cmp=($5|0)==0;
 if($cmp){label=2;break;}else{label=42;break;}
 case 2: 
 var $7=$__v_addr;
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPfEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE16__construct_nodeERKS9_($temp_lvalue,$this1,$7);
 $this_addr_i28=$temp_lvalue;
 var $this1_i29=$this_addr_i28;
 $this_addr_i_i27=$agg_tmp;
 $__t_addr_i_i=$this1_i29;
 var $this1_i_i30=$this_addr_i_i27;
 var $8=$__t_addr_i_i;
 $this_addr_i_i_i26=$this1_i_i30;
 $__t_addr_i_i_i=$8;
 var $this1_i_i_i31=$this_addr_i_i_i26;
 var $9=(($this1_i_i_i31)|0);
 var $10=$__t_addr_i_i_i;
 HEAP32[(($9)>>2)]=$10;
 label=3;break;
 case 3: 
 var $tmp33=$agg_tmp32;
 var $tmp34=$agg_tmp;
 assert(4 % 1 === 0);HEAP8[($tmp33)]=HEAP8[($tmp34)];HEAP8[((($tmp33)+(1))|0)]=HEAP8[((($tmp34)+(1))|0)];HEAP8[((($tmp33)+(2))|0)]=HEAP8[((($tmp34)+(2))|0)];HEAP8[((($tmp33)+(3))|0)]=HEAP8[((($tmp34)+(3))|0)];
 $this_addr_i40=$__h;
 var $this1_i41=$this_addr_i40;
 var $tmp_i=$__u2_i;
 var $tmp3_i=$agg_tmp32;
 assert(4 % 1 === 0);HEAP8[($tmp_i)]=HEAP8[($tmp3_i)];HEAP8[((($tmp_i)+(1))|0)]=HEAP8[((($tmp3_i)+(1))|0)];HEAP8[((($tmp_i)+(2))|0)]=HEAP8[((($tmp3_i)+(2))|0)];HEAP8[((($tmp_i)+(3))|0)]=HEAP8[((($tmp3_i)+(3))|0)];
 $this_addr_i_i39=$this1_i41;
 var $this1_i_i42=$this_addr_i_i39;
 var $__ptr__i_i43=(($this1_i_i42)|0);
 $this_addr_i_i_i38=$__u2_i;
 var $this1_i_i_i44=$this_addr_i_i_i38;
 var $t__i_i_i=(($this1_i_i_i44)|0);
 var $ref_i_i_i=HEAP32[(($t__i_i_i)>>2)];
 $this_addr_i23_i_i=$ref_i_i_i;
 var $this1_i24_i_i=$this_addr_i23_i_i;
 var $__ptr__i25_i_i=(($this1_i24_i_i)|0);
 $this_addr_i_i22_i_i=$__ptr__i25_i_i;
 var $this1_i_i26_i_i=$this_addr_i_i22_i_i;
 var $11=$this1_i_i26_i_i;
 $this_addr_i_i_i21_i_i=$11;
 var $this1_i_i_i27_i_i=$this_addr_i_i_i21_i_i;
 var $__first__i_i_i28_i_i=(($this1_i_i_i27_i_i)|0);
 var $12=HEAP32[(($__first__i_i_i28_i_i)>>2)];
 $__t_i_i_i=$12;
 var $__ptr_2_i_i_i45=(($this1_i24_i_i)|0);
 $this_addr_i5_i_i_i=$__ptr_2_i_i_i45;
 var $this1_i6_i_i_i=$this_addr_i5_i_i_i;
 var $13=$this1_i6_i_i_i;
 $this_addr_i_i4_i_i_i=$13;
 var $this1_i_i7_i_i_i=$this_addr_i_i4_i_i_i;
 var $__first__i_i8_i_i_i=(($this1_i_i7_i_i_i)|0);
 HEAP32[(($__first__i_i8_i_i_i)>>2)]=0;
 var $14=$__t_i_i_i;
 $this_addr_i17_i_i=$__u2_i;
 var $this1_i18_i_i=$this_addr_i17_i_i;
 var $t__i19_i_i=(($this1_i18_i_i)|0);
 var $ref_i20_i_i=HEAP32[(($t__i19_i_i)>>2)];
 $this_addr_i12_i_i=$ref_i20_i_i;
 var $this1_i13_i_i=$this_addr_i12_i_i;
 var $__ptr__i_i_i46=(($this1_i13_i_i)|0);
 $this_addr_i_i11_i_i=$__ptr__i_i_i46;
 var $this1_i_i14_i_i=$this_addr_i_i11_i_i;
 var $15=$this1_i_i14_i_i;
 $this_addr_i_i_i10_i_i=$15;
 var $this1_i_i_i15_i_i=$this_addr_i_i_i10_i_i;
 var $__second__i_i_i16_i_i=(($this1_i_i_i15_i_i+4)|0);
 $__t_addr_i_i_i35=$__second__i_i_i16_i_i;
 var $16=$__t_addr_i_i_i35;
 var $17=$agg_tmp_i_i;
 var $18=$16;
 assert(8 % 1 === 0);HEAP32[(($17)>>2)]=HEAP32[(($18)>>2)];HEAP32[((($17)+(4))>>2)]=HEAP32[((($18)+(4))>>2)];
 var $tmp_i_i=$agg_tmp6_i_i;
 var $tmp7_i_i=$agg_tmp_i_i;
 assert(8 % 1 === 0);(_memcpy($tmp_i_i, $tmp7_i_i, 8)|0);
 $this_addr_i8_i_i=$__ptr__i_i43;
 $__t1_addr_i_i_i=$14;
 var $this1_i9_i_i=$this_addr_i8_i_i;
 var $19=$__t1_addr_i_i_i;
 var $tmp_i_i_i=$__t22_i_i_i;
 var $tmp3_i_i_i=$agg_tmp6_i_i;
 assert(8 % 1 === 0);(_memcpy($tmp_i_i_i, $tmp3_i_i_i, 8)|0);
 $this_addr_i_i_i_i37=$this1_i9_i_i;
 HEAP32[(($__t1_addr_i_i_i_i)>>2)]=$19;
 var $this1_i_i_i_i47=$this_addr_i_i_i_i37;
 var $20=$this1_i_i_i_i47;
 $__t_addr_i_i_i_i_i=$__t1_addr_i_i_i_i;
 var $21=$__t_addr_i_i_i_i_i;
 var $22=HEAP32[(($21)>>2)];
 $__t_addr_i5_i_i_i_i=$__t22_i_i_i;
 var $23=$__t_addr_i5_i_i_i_i;
 var $24=$agg_tmp_i_i_i_i;
 var $25=$23;
 assert(8 % 1 === 0);HEAP32[(($24)>>2)]=HEAP32[(($25)>>2)];HEAP32[((($24)+(4))>>2)]=HEAP32[((($25)+(4))>>2)];
 var $tmp_i_i_i_i=$agg_tmp3_i_i_i_i;
 var $tmp4_i_i_i_i=$agg_tmp_i_i_i_i;
 assert(8 % 1 === 0);(_memcpy($tmp_i_i_i_i, $tmp4_i_i_i_i, 8)|0);
 $this_addr_i_i_i_i_i36=$20;
 HEAP32[(($__t1_addr_i_i_i_i_i)>>2)]=$22;
 var $this1_i_i_i_i_i48=$this_addr_i_i_i_i_i36;
 var $__first__i_i_i_i_i49=(($this1_i_i_i_i_i48)|0);
 $__t_addr_i_i_i_i_i_i=$__t1_addr_i_i_i_i_i;
 var $26=$__t_addr_i_i_i_i_i_i;
 var $27=HEAP32[(($26)>>2)];
 HEAP32[(($__first__i_i_i_i_i49)>>2)]=$27;
 var $__second__i_i_i_i_i50=(($this1_i_i_i_i_i48+4)|0);
 $__t_addr_i3_i_i_i_i_i=$agg_tmp3_i_i_i_i;
 var $28=$__t_addr_i3_i_i_i_i_i;
 var $29=$__second__i_i_i_i_i50;
 var $30=$28;
 assert(8 % 1 === 0);HEAP32[(($29)>>2)]=HEAP32[(($30)>>2)];HEAP32[((($29)+(4))>>2)]=HEAP32[((($30)+(4))>>2)];
 label=4;break;
 case 4: 
 $this_addr_i145=$temp_lvalue;
 var $this1_i146=$this_addr_i145;
 $this_addr_i_i144=$this1_i146;
 var $this1_i_i147=$this_addr_i_i144;
 $this_addr_i_i_i141=$this1_i_i147;
 $__p_addr_i_i_i142=0;
 var $this1_i_i_i148=$this_addr_i_i_i141;
 var $__ptr__i_i_i149=(($this1_i_i_i148)|0);
 $this_addr_i_i_i_i140=$__ptr__i_i_i149;
 var $this1_i_i_i_i150=$this_addr_i_i_i_i140;
 var $31=$this1_i_i_i_i150;
 $this_addr_i_i_i_i_i139=$31;
 var $this1_i_i_i_i_i151=$this_addr_i_i_i_i_i139;
 var $__first__i_i_i_i_i152=(($this1_i_i_i_i_i151)|0);
 var $32=HEAP32[(($__first__i_i_i_i_i152)>>2)];
 $__tmp_i_i_i143=$32;
 var $33=$__p_addr_i_i_i142;
 var $__ptr_2_i_i_i153=(($this1_i_i_i148)|0);
 $this_addr_i9_i_i_i120=$__ptr_2_i_i_i153;
 var $this1_i10_i_i_i154=$this_addr_i9_i_i_i120;
 var $34=$this1_i10_i_i_i154;
 $this_addr_i_i8_i_i_i119=$34;
 var $this1_i_i11_i_i_i155=$this_addr_i_i8_i_i_i119;
 var $__first__i_i12_i_i_i156=(($this1_i_i11_i_i_i155)|0);
 HEAP32[(($__first__i_i12_i_i_i156)>>2)]=$33;
 var $35=$__tmp_i_i_i143;
 var $tobool_i_i_i157=($35|0)!=0;
 if($tobool_i_i_i157){label=5;break;}else{label=12;break;}
 case 5: 
 var $__ptr_4_i_i_i158=(($this1_i_i_i148)|0);
 $this_addr_i14_i_i_i118=$__ptr_4_i_i_i158;
 var $this1_i15_i_i_i159=$this_addr_i14_i_i_i118;
 var $36=$this1_i15_i_i_i159;
 $this_addr_i_i13_i_i_i117=$36;
 var $this1_i_i16_i_i_i160=$this_addr_i_i13_i_i_i117;
 var $__second__i_i_i_i_i161=(($this1_i_i16_i_i_i160+4)|0);
 var $37=$__tmp_i_i_i143;
 $this_addr_i6_i_i_i135=$__second__i_i_i_i_i161;
 $__p_addr_i_i_i_i136=$37;
 var $this1_i7_i_i_i162=$this_addr_i6_i_i_i135;
 var $__value_constructed_i_i_i_i163=(($this1_i7_i_i_i162+4)|0);
 var $38=HEAP8[($__value_constructed_i_i_i_i163)];
 var $tobool_i_i_i_i164=(($38)&1);
 if($tobool_i_i_i_i164){label=6;break;}else{label=9;break;}
 case 6: 
 var $__na__i_i_i_i166=(($this1_i7_i_i_i162)|0);
 var $ref_i_i_i_i167=HEAP32[(($__na__i_i_i_i166)>>2)];
 var $39=$__p_addr_i_i_i_i136;
 var $__value__i_i_i_i168=(($39+16)|0);
 $__x_addr_i_i_i_i_i134=$__value__i_i_i_i168;
 var $40=$__x_addr_i_i_i_i_i134;
 var $41=$40;
 var $42=$41;
 $__a_addr_i9_i_i_i_i124=$ref_i_i_i_i167;
 $__p_addr_i10_i_i_i_i125=$42;
 var $43=$ref_tmp_i_i_i_i_i127;
 var $44=$__a_addr_i9_i_i_i_i124;
 var $45=$__p_addr_i10_i_i_i_i125;
 var $tmp_i_i_i_i_i169=$agg_tmp1_i_i_i_i_i123;
 var $tmp2_i_i_i_i_i170=$agg_tmp_i_i_i_i_i126;
 assert(1 % 1 === 0);HEAP8[($tmp_i_i_i_i_i169)]=HEAP8[($tmp2_i_i_i_i_i170)];
 $_addr_i_i7_i_i_i_i121=$44;
 $__p_addr_i_i8_i_i_i_i122=$45;
 var $46=$__p_addr_i_i8_i_i_i_i122;
 (function() { try { __THREW__ = 0; return __ZNSt3__112__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPfED1Ev($46) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=7;break; } else { label=8;break; }
 case 7: 
 label=9;break;
 case 8: 
 var $47$0 = ___cxa_find_matching_catch(-1, -1); var $47$1 = tempRet0;
 var $48=$47$0;
 $exn_slot_i_i_i_i137=$48;
 var $49=$47$1;
 $ehselector_slot_i_i_i_i138=$49;
 var $exn_i_i_i_i173=$exn_slot_i_i_i_i137;
 ___cxa_call_unexpected($exn_i_i_i_i173);
 throw "Reached an unreachable!";
 case 9: 
 var $50=$__p_addr_i_i_i_i136;
 var $tobool2_i_i_i_i175=($50|0)!=0;
 if($tobool2_i_i_i_i175){label=10;break;}else{label=11;break;}
 case 10: 
 var $__na_4_i_i_i_i177=(($this1_i7_i_i_i162)|0);
 var $ref5_i_i_i_i178=HEAP32[(($__na_4_i_i_i_i177)>>2)];
 var $51=$__p_addr_i_i_i_i136;
 $__a_addr_i_i_i_i_i131=$ref5_i_i_i_i178;
 $__p_addr_i_i_i_i_i132=$51;
 $__n_addr_i_i_i_i_i133=1;
 var $52=$__a_addr_i_i_i_i_i131;
 var $53=$__p_addr_i_i_i_i_i132;
 var $54=$__n_addr_i_i_i_i_i133;
 $this_addr_i_i_i_i_i_i128=$52;
 $__p_addr_i_i_i_i_i_i129=$53;
 $_addr_i_i_i_i_i_i130=$54;
 var $this1_i_i_i_i_i_i179=$this_addr_i_i_i_i_i_i128;
 var $55=$__p_addr_i_i_i_i_i_i129;
 var $56=$55;
 __ZdlPv($56);
 label=11;break;
 case 11: 
 label=12;break;
 case 12: 
 var $57=HEAP32[(($__parent)>>2)];
 var $58=$__child;
 $this_addr_i185=$__h;
 var $this1_i186=$this_addr_i185;
 var $__ptr__i=(($this1_i186)|0);
 $this_addr_i_i184=$__ptr__i;
 var $this1_i_i187=$this_addr_i_i184;
 var $59=$this1_i_i187;
 $this_addr_i_i_i183=$59;
 var $this1_i_i_i188=$this_addr_i_i_i183;
 var $__first__i_i_i=(($this1_i_i_i188)|0);
 var $60=HEAP32[(($__first__i_i_i)>>2)];
 var $61=$60;
 (function() { try { __THREW__ = 0; return __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPfEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSJ_SJ_($this1,$57,$58,$61) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=13;break; } else { label=32;break; }
 case 13: 
 $this_addr_i191=$__h;
 var $this1_i192=$this_addr_i191;
 var $__ptr__i193=(($this1_i192)|0);
 $this_addr_i_i190=$__ptr__i193;
 var $this1_i_i194=$this_addr_i_i190;
 var $62=$this1_i_i194;
 $this_addr_i_i_i189=$62;
 var $this1_i_i_i195=$this_addr_i_i_i189;
 var $__first__i_i_i196=(($this1_i_i_i195)|0);
 var $63=HEAP32[(($__first__i_i_i196)>>2)];
 $__t_i=$63;
 var $__ptr_2_i=(($this1_i192)|0);
 $this_addr_i5_i=$__ptr_2_i;
 var $this1_i6_i=$this_addr_i5_i;
 var $64=$this1_i6_i;
 $this_addr_i_i4_i=$64;
 var $this1_i_i7_i=$this_addr_i_i4_i;
 var $__first__i_i8_i=(($this1_i_i7_i)|0);
 HEAP32[(($__first__i_i8_i)>>2)]=0;
 var $65=$__t_i;
 $__r=$65;
 HEAP8[($__inserted)]=1;
 $this_addr_i225=$__h;
 var $this1_i226=$this_addr_i225;
 $this_addr_i_i224=$this1_i226;
 var $this1_i_i227=$this_addr_i_i224;
 $this_addr_i_i_i221=$this1_i_i227;
 $__p_addr_i_i_i222=0;
 var $this1_i_i_i228=$this_addr_i_i_i221;
 var $__ptr__i_i_i229=(($this1_i_i_i228)|0);
 $this_addr_i_i_i_i220=$__ptr__i_i_i229;
 var $this1_i_i_i_i230=$this_addr_i_i_i_i220;
 var $66=$this1_i_i_i_i230;
 $this_addr_i_i_i_i_i219=$66;
 var $this1_i_i_i_i_i231=$this_addr_i_i_i_i_i219;
 var $__first__i_i_i_i_i232=(($this1_i_i_i_i_i231)|0);
 var $67=HEAP32[(($__first__i_i_i_i_i232)>>2)];
 $__tmp_i_i_i223=$67;
 var $68=$__p_addr_i_i_i222;
 var $__ptr_2_i_i_i233=(($this1_i_i_i228)|0);
 $this_addr_i9_i_i_i200=$__ptr_2_i_i_i233;
 var $this1_i10_i_i_i234=$this_addr_i9_i_i_i200;
 var $69=$this1_i10_i_i_i234;
 $this_addr_i_i8_i_i_i199=$69;
 var $this1_i_i11_i_i_i235=$this_addr_i_i8_i_i_i199;
 var $__first__i_i12_i_i_i236=(($this1_i_i11_i_i_i235)|0);
 HEAP32[(($__first__i_i12_i_i_i236)>>2)]=$68;
 var $70=$__tmp_i_i_i223;
 var $tobool_i_i_i237=($70|0)!=0;
 if($tobool_i_i_i237){label=14;break;}else{label=21;break;}
 case 14: 
 var $__ptr_4_i_i_i238=(($this1_i_i_i228)|0);
 $this_addr_i14_i_i_i198=$__ptr_4_i_i_i238;
 var $this1_i15_i_i_i239=$this_addr_i14_i_i_i198;
 var $71=$this1_i15_i_i_i239;
 $this_addr_i_i13_i_i_i197=$71;
 var $this1_i_i16_i_i_i240=$this_addr_i_i13_i_i_i197;
 var $__second__i_i_i_i_i241=(($this1_i_i16_i_i_i240+4)|0);
 var $72=$__tmp_i_i_i223;
 $this_addr_i6_i_i_i215=$__second__i_i_i_i_i241;
 $__p_addr_i_i_i_i216=$72;
 var $this1_i7_i_i_i242=$this_addr_i6_i_i_i215;
 var $__value_constructed_i_i_i_i243=(($this1_i7_i_i_i242+4)|0);
 var $73=HEAP8[($__value_constructed_i_i_i_i243)];
 var $tobool_i_i_i_i244=(($73)&1);
 if($tobool_i_i_i_i244){label=15;break;}else{label=18;break;}
 case 15: 
 var $__na__i_i_i_i246=(($this1_i7_i_i_i242)|0);
 var $ref_i_i_i_i247=HEAP32[(($__na__i_i_i_i246)>>2)];
 var $74=$__p_addr_i_i_i_i216;
 var $__value__i_i_i_i248=(($74+16)|0);
 $__x_addr_i_i_i_i_i214=$__value__i_i_i_i248;
 var $75=$__x_addr_i_i_i_i_i214;
 var $76=$75;
 var $77=$76;
 $__a_addr_i9_i_i_i_i204=$ref_i_i_i_i247;
 $__p_addr_i10_i_i_i_i205=$77;
 var $78=$ref_tmp_i_i_i_i_i207;
 var $79=$__a_addr_i9_i_i_i_i204;
 var $80=$__p_addr_i10_i_i_i_i205;
 var $tmp_i_i_i_i_i249=$agg_tmp1_i_i_i_i_i203;
 var $tmp2_i_i_i_i_i250=$agg_tmp_i_i_i_i_i206;
 assert(1 % 1 === 0);HEAP8[($tmp_i_i_i_i_i249)]=HEAP8[($tmp2_i_i_i_i_i250)];
 $_addr_i_i7_i_i_i_i201=$79;
 $__p_addr_i_i8_i_i_i_i202=$80;
 var $81=$__p_addr_i_i8_i_i_i_i202;
 (function() { try { __THREW__ = 0; return __ZNSt3__112__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPfED1Ev($81) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=16;break; } else { label=17;break; }
 case 16: 
 label=18;break;
 case 17: 
 var $82$0 = ___cxa_find_matching_catch(-1, -1); var $82$1 = tempRet0;
 var $83=$82$0;
 $exn_slot_i_i_i_i217=$83;
 var $84=$82$1;
 $ehselector_slot_i_i_i_i218=$84;
 var $exn_i_i_i_i253=$exn_slot_i_i_i_i217;
 ___cxa_call_unexpected($exn_i_i_i_i253);
 throw "Reached an unreachable!";
 case 18: 
 var $85=$__p_addr_i_i_i_i216;
 var $tobool2_i_i_i_i255=($85|0)!=0;
 if($tobool2_i_i_i_i255){label=19;break;}else{label=20;break;}
 case 19: 
 var $__na_4_i_i_i_i257=(($this1_i7_i_i_i242)|0);
 var $ref5_i_i_i_i258=HEAP32[(($__na_4_i_i_i_i257)>>2)];
 var $86=$__p_addr_i_i_i_i216;
 $__a_addr_i_i_i_i_i211=$ref5_i_i_i_i258;
 $__p_addr_i_i_i_i_i212=$86;
 $__n_addr_i_i_i_i_i213=1;
 var $87=$__a_addr_i_i_i_i_i211;
 var $88=$__p_addr_i_i_i_i_i212;
 var $89=$__n_addr_i_i_i_i_i213;
 $this_addr_i_i_i_i_i_i208=$87;
 $__p_addr_i_i_i_i_i_i209=$88;
 $_addr_i_i_i_i_i_i210=$89;
 var $this1_i_i_i_i_i_i259=$this_addr_i_i_i_i_i_i208;
 var $90=$__p_addr_i_i_i_i_i_i209;
 var $91=$90;
 __ZdlPv($91);
 label=20;break;
 case 20: 
 label=21;break;
 case 21: 
 label=42;break;
 case 22: 
 var $92$0 = ___cxa_find_matching_catch(-1, -1); var $92$1 = tempRet0;
 var $93=$92$0;
 $exn_slot=$93;
 var $94=$92$1;
 $ehselector_slot=$94;
 $this_addr_i79=$temp_lvalue;
 var $this1_i80=$this_addr_i79;
 $this_addr_i_i78=$this1_i80;
 var $this1_i_i81=$this_addr_i_i78;
 $this_addr_i_i_i75=$this1_i_i81;
 $__p_addr_i_i_i76=0;
 var $this1_i_i_i82=$this_addr_i_i_i75;
 var $__ptr__i_i_i83=(($this1_i_i_i82)|0);
 $this_addr_i_i_i_i74=$__ptr__i_i_i83;
 var $this1_i_i_i_i84=$this_addr_i_i_i_i74;
 var $95=$this1_i_i_i_i84;
 $this_addr_i_i_i_i_i73=$95;
 var $this1_i_i_i_i_i85=$this_addr_i_i_i_i_i73;
 var $__first__i_i_i_i_i86=(($this1_i_i_i_i_i85)|0);
 var $96=HEAP32[(($__first__i_i_i_i_i86)>>2)];
 $__tmp_i_i_i77=$96;
 var $97=$__p_addr_i_i_i76;
 var $__ptr_2_i_i_i87=(($this1_i_i_i82)|0);
 $this_addr_i9_i_i_i54=$__ptr_2_i_i_i87;
 var $this1_i10_i_i_i88=$this_addr_i9_i_i_i54;
 var $98=$this1_i10_i_i_i88;
 $this_addr_i_i8_i_i_i53=$98;
 var $this1_i_i11_i_i_i89=$this_addr_i_i8_i_i_i53;
 var $__first__i_i12_i_i_i90=(($this1_i_i11_i_i_i89)|0);
 HEAP32[(($__first__i_i12_i_i_i90)>>2)]=$97;
 var $99=$__tmp_i_i_i77;
 var $tobool_i_i_i91=($99|0)!=0;
 if($tobool_i_i_i91){label=23;break;}else{label=30;break;}
 case 23: 
 var $__ptr_4_i_i_i92=(($this1_i_i_i82)|0);
 $this_addr_i14_i_i_i52=$__ptr_4_i_i_i92;
 var $this1_i15_i_i_i93=$this_addr_i14_i_i_i52;
 var $100=$this1_i15_i_i_i93;
 $this_addr_i_i13_i_i_i51=$100;
 var $this1_i_i16_i_i_i94=$this_addr_i_i13_i_i_i51;
 var $__second__i_i_i_i_i95=(($this1_i_i16_i_i_i94+4)|0);
 var $101=$__tmp_i_i_i77;
 $this_addr_i6_i_i_i69=$__second__i_i_i_i_i95;
 $__p_addr_i_i_i_i70=$101;
 var $this1_i7_i_i_i96=$this_addr_i6_i_i_i69;
 var $__value_constructed_i_i_i_i97=(($this1_i7_i_i_i96+4)|0);
 var $102=HEAP8[($__value_constructed_i_i_i_i97)];
 var $tobool_i_i_i_i98=(($102)&1);
 if($tobool_i_i_i_i98){label=24;break;}else{label=27;break;}
 case 24: 
 var $__na__i_i_i_i100=(($this1_i7_i_i_i96)|0);
 var $ref_i_i_i_i101=HEAP32[(($__na__i_i_i_i100)>>2)];
 var $103=$__p_addr_i_i_i_i70;
 var $__value__i_i_i_i102=(($103+16)|0);
 $__x_addr_i_i_i_i_i68=$__value__i_i_i_i102;
 var $104=$__x_addr_i_i_i_i_i68;
 var $105=$104;
 var $106=$105;
 $__a_addr_i9_i_i_i_i58=$ref_i_i_i_i101;
 $__p_addr_i10_i_i_i_i59=$106;
 var $107=$ref_tmp_i_i_i_i_i61;
 var $108=$__a_addr_i9_i_i_i_i58;
 var $109=$__p_addr_i10_i_i_i_i59;
 var $tmp_i_i_i_i_i103=$agg_tmp1_i_i_i_i_i57;
 var $tmp2_i_i_i_i_i104=$agg_tmp_i_i_i_i_i60;
 assert(1 % 1 === 0);HEAP8[($tmp_i_i_i_i_i103)]=HEAP8[($tmp2_i_i_i_i_i104)];
 $_addr_i_i7_i_i_i_i55=$108;
 $__p_addr_i_i8_i_i_i_i56=$109;
 var $110=$__p_addr_i_i8_i_i_i_i56;
 (function() { try { __THREW__ = 0; return __ZNSt3__112__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPfED1Ev($110) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=25;break; } else { label=26;break; }
 case 25: 
 label=27;break;
 case 26: 
 var $111$0 = ___cxa_find_matching_catch(-1, -1,0); var $111$1 = tempRet0;
 var $112=$111$0;
 $exn_slot_i_i_i_i71=$112;
 var $113=$111$1;
 $ehselector_slot_i_i_i_i72=$113;
 var $exn_i_i_i_i107=$exn_slot_i_i_i_i71;
 ___cxa_call_unexpected($exn_i_i_i_i107);
 throw "Reached an unreachable!";
 case 27: 
 var $114=$__p_addr_i_i_i_i70;
 var $tobool2_i_i_i_i109=($114|0)!=0;
 if($tobool2_i_i_i_i109){label=28;break;}else{label=29;break;}
 case 28: 
 var $__na_4_i_i_i_i111=(($this1_i7_i_i_i96)|0);
 var $ref5_i_i_i_i112=HEAP32[(($__na_4_i_i_i_i111)>>2)];
 var $115=$__p_addr_i_i_i_i70;
 $__a_addr_i_i_i_i_i65=$ref5_i_i_i_i112;
 $__p_addr_i_i_i_i_i66=$115;
 $__n_addr_i_i_i_i_i67=1;
 var $116=$__a_addr_i_i_i_i_i65;
 var $117=$__p_addr_i_i_i_i_i66;
 var $118=$__n_addr_i_i_i_i_i67;
 $this_addr_i_i_i_i_i_i62=$116;
 $__p_addr_i_i_i_i_i_i63=$117;
 $_addr_i_i_i_i_i_i64=$118;
 var $this1_i_i_i_i_i_i113=$this_addr_i_i_i_i_i_i62;
 var $119=$__p_addr_i_i_i_i_i_i63;
 var $120=$119;
 __ZdlPv($120);
 label=29;break;
 case 29: 
 label=30;break;
 case 30: 
 label=31;break;
 case 31: 
 label=43;break;
 case 32: 
 var $121$0 = ___cxa_find_matching_catch(-1, -1); var $121$1 = tempRet0;
 var $122=$121$0;
 $exn_slot=$122;
 var $123=$121$1;
 $ehselector_slot=$123;
 $this_addr_i20=$__h;
 var $this1_i21=$this_addr_i20;
 $this_addr_i_i19=$this1_i21;
 var $this1_i_i22=$this_addr_i_i19;
 $this_addr_i_i_i18=$this1_i_i22;
 $__p_addr_i_i_i=0;
 var $this1_i_i_i23=$this_addr_i_i_i18;
 var $__ptr__i_i_i=(($this1_i_i_i23)|0);
 $this_addr_i_i_i_i=$__ptr__i_i_i;
 var $this1_i_i_i_i=$this_addr_i_i_i_i;
 var $124=$this1_i_i_i_i;
 $this_addr_i_i_i_i_i=$124;
 var $this1_i_i_i_i_i=$this_addr_i_i_i_i_i;
 var $__first__i_i_i_i_i=(($this1_i_i_i_i_i)|0);
 var $125=HEAP32[(($__first__i_i_i_i_i)>>2)];
 $__tmp_i_i_i=$125;
 var $126=$__p_addr_i_i_i;
 var $__ptr_2_i_i_i=(($this1_i_i_i23)|0);
 $this_addr_i9_i_i_i=$__ptr_2_i_i_i;
 var $this1_i10_i_i_i=$this_addr_i9_i_i_i;
 var $127=$this1_i10_i_i_i;
 $this_addr_i_i8_i_i_i=$127;
 var $this1_i_i11_i_i_i=$this_addr_i_i8_i_i_i;
 var $__first__i_i12_i_i_i=(($this1_i_i11_i_i_i)|0);
 HEAP32[(($__first__i_i12_i_i_i)>>2)]=$126;
 var $128=$__tmp_i_i_i;
 var $tobool_i_i_i=($128|0)!=0;
 if($tobool_i_i_i){label=33;break;}else{label=40;break;}
 case 33: 
 var $__ptr_4_i_i_i=(($this1_i_i_i23)|0);
 $this_addr_i14_i_i_i=$__ptr_4_i_i_i;
 var $this1_i15_i_i_i=$this_addr_i14_i_i_i;
 var $129=$this1_i15_i_i_i;
 $this_addr_i_i13_i_i_i=$129;
 var $this1_i_i16_i_i_i=$this_addr_i_i13_i_i_i;
 var $__second__i_i_i_i_i=(($this1_i_i16_i_i_i+4)|0);
 var $130=$__tmp_i_i_i;
 $this_addr_i6_i_i_i=$__second__i_i_i_i_i;
 $__p_addr_i_i_i_i=$130;
 var $this1_i7_i_i_i=$this_addr_i6_i_i_i;
 var $__value_constructed_i_i_i_i=(($this1_i7_i_i_i+4)|0);
 var $131=HEAP8[($__value_constructed_i_i_i_i)];
 var $tobool_i_i_i_i=(($131)&1);
 if($tobool_i_i_i_i){label=34;break;}else{label=37;break;}
 case 34: 
 var $__na__i_i_i_i=(($this1_i7_i_i_i)|0);
 var $ref_i_i_i_i=HEAP32[(($__na__i_i_i_i)>>2)];
 var $132=$__p_addr_i_i_i_i;
 var $__value__i_i_i_i=(($132+16)|0);
 $__x_addr_i_i_i_i_i=$__value__i_i_i_i;
 var $133=$__x_addr_i_i_i_i_i;
 var $134=$133;
 var $135=$134;
 $__a_addr_i9_i_i_i_i=$ref_i_i_i_i;
 $__p_addr_i10_i_i_i_i=$135;
 var $136=$ref_tmp_i_i_i_i_i;
 var $137=$__a_addr_i9_i_i_i_i;
 var $138=$__p_addr_i10_i_i_i_i;
 var $tmp_i_i_i_i_i=$agg_tmp1_i_i_i_i_i;
 var $tmp2_i_i_i_i_i=$agg_tmp_i_i_i_i_i;
 assert(1 % 1 === 0);HEAP8[($tmp_i_i_i_i_i)]=HEAP8[($tmp2_i_i_i_i_i)];
 $_addr_i_i7_i_i_i_i=$137;
 $__p_addr_i_i8_i_i_i_i=$138;
 var $139=$__p_addr_i_i8_i_i_i_i;
 (function() { try { __THREW__ = 0; return __ZNSt3__112__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPfED1Ev($139) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=35;break; } else { label=36;break; }
 case 35: 
 label=37;break;
 case 36: 
 var $140$0 = ___cxa_find_matching_catch(-1, -1,0); var $140$1 = tempRet0;
 var $141=$140$0;
 $exn_slot_i_i_i_i=$141;
 var $142=$140$1;
 $ehselector_slot_i_i_i_i=$142;
 var $exn_i_i_i_i=$exn_slot_i_i_i_i;
 ___cxa_call_unexpected($exn_i_i_i_i);
 throw "Reached an unreachable!";
 case 37: 
 var $143=$__p_addr_i_i_i_i;
 var $tobool2_i_i_i_i=($143|0)!=0;
 if($tobool2_i_i_i_i){label=38;break;}else{label=39;break;}
 case 38: 
 var $__na_4_i_i_i_i=(($this1_i7_i_i_i)|0);
 var $ref5_i_i_i_i=HEAP32[(($__na_4_i_i_i_i)>>2)];
 var $144=$__p_addr_i_i_i_i;
 $__a_addr_i_i_i_i_i=$ref5_i_i_i_i;
 $__p_addr_i_i_i_i_i=$144;
 $__n_addr_i_i_i_i_i=1;
 var $145=$__a_addr_i_i_i_i_i;
 var $146=$__p_addr_i_i_i_i_i;
 var $147=$__n_addr_i_i_i_i_i;
 $this_addr_i_i_i_i_i_i=$145;
 $__p_addr_i_i_i_i_i_i=$146;
 $_addr_i_i_i_i_i_i=$147;
 var $this1_i_i_i_i_i_i=$this_addr_i_i_i_i_i_i;
 var $148=$__p_addr_i_i_i_i_i_i;
 var $149=$148;
 __ZdlPv($149);
 label=39;break;
 case 39: 
 label=40;break;
 case 40: 
 label=41;break;
 case 41: 
 label=43;break;
 case 42: 
 var $150=$__r;
 $this_addr_i15=$ref_tmp;
 $__p_addr_i=$150;
 var $this1_i16=$this_addr_i15;
 var $151=$__p_addr_i;
 $this_addr_i_i14=$this1_i16;
 $__p_addr_i_i=$151;
 var $this1_i_i17=$this_addr_i_i14;
 var $__ptr__i_i=(($this1_i_i17)|0);
 var $152=$__p_addr_i_i;
 HEAP32[(($__ptr__i_i)>>2)]=$152;
 $this_addr_i=$agg_result;
 $__x_addr_i=$ref_tmp;
 $__y_addr_i=$__inserted;
 var $this1_i=$this_addr_i;
 var $153=$__y_addr_i;
 var $154=$__x_addr_i;
 $this_addr_i_i12=$this1_i;
 $__x_addr_i_i=$154;
 $__y_addr_i_i=$153;
 var $this1_i_i13=$this_addr_i_i12;
 var $first_i_i=(($this1_i_i13)|0);
 var $155=$__x_addr_i_i;
 var $156=$first_i_i;
 var $157=$155;
 assert(4 % 1 === 0);HEAP32[(($156)>>2)]=HEAP32[(($157)>>2)];
 var $second_i_i=(($this1_i_i13+4)|0);
 var $158=$__y_addr_i_i;
 var $159=HEAP8[($158)];
 var $tobool_i_i=(($159)&1);
 var $frombool_i_i=($tobool_i_i&1);
 HEAP8[($second_i_i)]=$frombool_i_i;
 STACKTOP=sp;return;
 case 43: 
 var $exn=$exn_slot;
 var $sel=$ehselector_slot;
 var $lpad_val$0=$exn;
 var $lpad_val$1=0;
 var $lpad_val11$0=$lpad_val$0;
 var $lpad_val11$1=$sel;
 ___resumeException($lpad_val11$0)
 case 44: 
 var $160$0 = ___cxa_find_matching_catch(-1, -1,0); var $160$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__112__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPfED1Ev($this){
 var label=0;
 var $this_addr;
 $this_addr=$this;
 var $this1=$this_addr;
 __ZNSt3__112__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPfED2Ev($this1);
 return;
}
function __ZNSt3__112__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPfED2Ev($this){
 var label=0;
 var $this_addr;
 $this_addr=$this;
 var $this1=$this_addr;
 var $__cc=(($this1)|0);
 __ZNSt3__14pairIKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPfED1Ev($__cc);
 return;
}
function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPfEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE12__find_equalIS9_EERPNS_16__tree_node_baseIPvEESL_RKT_($this,$__parent,$__v){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+88)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $this_addr_i_i_i303;
 var $this_addr_i_i304;
 var $this_addr_i305;
 var $__p_addr_i_i68_i_i_i_i73;
 var $this_addr_i_i_i13_i_i69_i_i_i_i74;
 var $this_addr_i_i14_i_i70_i_i_i_i75;
 var $this_addr_i15_i_i71_i_i_i_i76;
 var $__x_addr_i_i_i_i_i72_i_i_i_i77;
 var $__r_addr_i_i_i_i73_i_i_i_i78;
 var $this_addr_i_i_i4_i_i74_i_i_i_i79;
 var $this_addr_i_i5_i_i75_i_i_i_i80;
 var $this_addr_i6_i_i76_i_i_i_i81;
 var $this_addr_i_i_i_i_i77_i_i_i_i82;
 var $this_addr_i_i_i_i78_i_i_i_i83;
 var $this_addr_i_i_i79_i_i_i_i84;
 var $this_addr_i_i80_i_i_i_i85;
 var $this_addr_i81_i_i_i_i86;
 var $__p_addr_i_i_i_i_i_i87;
 var $this_addr_i_i_i13_i_i_i_i_i_i88;
 var $this_addr_i_i14_i_i_i_i_i_i89;
 var $this_addr_i15_i_i_i_i_i_i90;
 var $__x_addr_i_i_i_i_i_i_i_i_i91;
 var $__r_addr_i_i_i_i_i_i_i_i92;
 var $this_addr_i_i_i4_i_i_i_i_i_i93;
 var $this_addr_i_i5_i_i_i_i_i_i94;
 var $this_addr_i6_i_i_i_i_i_i95;
 var $this_addr_i_i_i_i_i_i_i_i_i96;
 var $this_addr_i_i_i_i58_i_i_i_i97;
 var $this_addr_i_i_i59_i_i_i_i98;
 var $this_addr_i_i60_i_i_i_i99;
 var $this_addr_i61_i_i_i_i100;
 var $this_addr_i_i_i56_i_i_i_i101;
 var $__x_addr_i_i_i_i_i_i_i102;
 var $__y_addr_i_i_i_i_i_i_i103;
 var $__a_addr_i_i_i_i_i_i104;
 var $__b_addr_i_i_i_i_i_i105;
 var $agg_tmp1_i_i_i_i_i106=sp;
 var $__a_addr_i_i_i_i_i107;
 var $__b_addr_i_i_i_i_i108;
 var $agg_tmp_i_i_i_i_i109=(sp)+(8);
 var $this_addr_i_i_i15_i15_i_i_i_i110;
 var $this_addr_i_i16_i16_i_i_i_i111;
 var $this_addr_i17_i17_i_i_i_i112;
 var $this_addr_i_i_i4_i18_i_i_i_i113;
 var $this_addr_i_i5_i19_i_i_i_i114;
 var $this_addr_i6_i20_i_i_i_i115;
 var $this_addr_i_i_i_i21_i_i_i_i116;
 var $this_addr_i_i_i22_i_i_i_i117;
 var $this_addr_i_i23_i_i_i_i118;
 var $this_addr_i24_i_i_i_i119;
 var $__s1_addr_i_i_i_i_i120;
 var $__s2_addr_i_i_i_i_i121;
 var $__n_addr_i_i_i_i_i122;
 var $this_addr_i_i_i15_i_i_i_i_i123;
 var $this_addr_i_i16_i_i_i_i_i124;
 var $this_addr_i17_i_i_i_i_i125;
 var $this_addr_i_i_i4_i_i_i_i_i126;
 var $this_addr_i_i5_i_i_i_i_i127;
 var $this_addr_i6_i_i_i_i_i128;
 var $this_addr_i_i_i_i_i_i_i_i129;
 var $this_addr_i_i_i_i_i_i_i130;
 var $this_addr_i_i_i_i_i_i131;
 var $this_addr_i_i_i_i_i132;
 var $retval_i_i_i_i133;
 var $this_addr_i_i_i_i134;
 var $__str_addr_i_i_i_i135;
 var $__lhs_sz_i_i_i_i136=(sp)+(16);
 var $__rhs_sz_i_i_i_i137=(sp)+(24);
 var $__result_i_i_i_i138;
 var $exn_slot_i_i_i_i139;
 var $ehselector_slot_i_i_i_i140;
 var $__lhs_addr_i_i_i141;
 var $__rhs_addr_i_i_i142;
 var $this_addr_i_i143;
 var $__x_addr_i_i144;
 var $__y_addr_i_i145;
 var $this_addr_i146;
 var $__x_addr_i147;
 var $__y_addr_i148;
 var $this_addr_i_i_i66;
 var $_addr_i_i_i67;
 var $this_addr_i_i68;
 var $_addr_i_i69;
 var $this_addr_i64;
 var $this_addr_i_i_i58;
 var $this_addr_i_i59;
 var $this_addr_i60;
 var $this_addr_i56;
 var $this_addr_i_i_i49;
 var $_addr_i_i_i50;
 var $this_addr_i_i51;
 var $_addr_i_i52;
 var $__p_addr_i_i68_i_i_i_i;
 var $this_addr_i_i_i13_i_i69_i_i_i_i;
 var $this_addr_i_i14_i_i70_i_i_i_i;
 var $this_addr_i15_i_i71_i_i_i_i;
 var $__x_addr_i_i_i_i_i72_i_i_i_i;
 var $__r_addr_i_i_i_i73_i_i_i_i;
 var $this_addr_i_i_i4_i_i74_i_i_i_i;
 var $this_addr_i_i5_i_i75_i_i_i_i;
 var $this_addr_i6_i_i76_i_i_i_i;
 var $this_addr_i_i_i_i_i77_i_i_i_i;
 var $this_addr_i_i_i_i78_i_i_i_i;
 var $this_addr_i_i_i79_i_i_i_i;
 var $this_addr_i_i80_i_i_i_i;
 var $this_addr_i81_i_i_i_i;
 var $__p_addr_i_i_i_i_i_i;
 var $this_addr_i_i_i13_i_i_i_i_i_i;
 var $this_addr_i_i14_i_i_i_i_i_i;
 var $this_addr_i15_i_i_i_i_i_i;
 var $__x_addr_i_i_i_i_i_i_i_i_i;
 var $__r_addr_i_i_i_i_i_i_i_i;
 var $this_addr_i_i_i4_i_i_i_i_i_i;
 var $this_addr_i_i5_i_i_i_i_i_i;
 var $this_addr_i6_i_i_i_i_i_i;
 var $this_addr_i_i_i_i_i_i_i_i_i;
 var $this_addr_i_i_i_i58_i_i_i_i;
 var $this_addr_i_i_i59_i_i_i_i;
 var $this_addr_i_i60_i_i_i_i;
 var $this_addr_i61_i_i_i_i;
 var $this_addr_i_i_i56_i_i_i_i;
 var $__x_addr_i_i_i_i_i_i_i;
 var $__y_addr_i_i_i_i_i_i_i;
 var $__a_addr_i_i_i_i_i_i;
 var $__b_addr_i_i_i_i_i_i;
 var $agg_tmp1_i_i_i_i_i=(sp)+(32);
 var $__a_addr_i_i_i_i_i;
 var $__b_addr_i_i_i_i_i;
 var $agg_tmp_i_i_i_i_i=(sp)+(40);
 var $this_addr_i_i_i15_i15_i_i_i_i;
 var $this_addr_i_i16_i16_i_i_i_i;
 var $this_addr_i17_i17_i_i_i_i;
 var $this_addr_i_i_i4_i18_i_i_i_i;
 var $this_addr_i_i5_i19_i_i_i_i;
 var $this_addr_i6_i20_i_i_i_i;
 var $this_addr_i_i_i_i21_i_i_i_i;
 var $this_addr_i_i_i22_i_i_i_i;
 var $this_addr_i_i23_i_i_i_i;
 var $this_addr_i24_i_i_i_i;
 var $__s1_addr_i_i_i_i_i;
 var $__s2_addr_i_i_i_i_i;
 var $__n_addr_i_i_i_i_i;
 var $this_addr_i_i_i15_i_i_i_i_i;
 var $this_addr_i_i16_i_i_i_i_i;
 var $this_addr_i17_i_i_i_i_i;
 var $this_addr_i_i_i4_i_i_i_i_i;
 var $this_addr_i_i5_i_i_i_i_i;
 var $this_addr_i6_i_i_i_i_i;
 var $this_addr_i_i_i_i_i_i_i_i;
 var $this_addr_i_i_i_i_i_i_i;
 var $this_addr_i_i_i_i_i_i;
 var $this_addr_i_i_i_i_i;
 var $retval_i_i_i_i;
 var $this_addr_i_i_i_i43;
 var $__str_addr_i_i_i_i;
 var $__lhs_sz_i_i_i_i=(sp)+(48);
 var $__rhs_sz_i_i_i_i=(sp)+(56);
 var $__result_i_i_i_i;
 var $exn_slot_i_i_i_i;
 var $ehselector_slot_i_i_i_i;
 var $__lhs_addr_i_i_i;
 var $__rhs_addr_i_i_i;
 var $this_addr_i_i44;
 var $__x_addr_i_i;
 var $__y_addr_i_i;
 var $this_addr_i45;
 var $__x_addr_i;
 var $__y_addr_i;
 var $this_addr_i_i_i39;
 var $_addr_i_i_i;
 var $this_addr_i_i40;
 var $_addr_i_i;
 var $this_addr_i37;
 var $__x_addr_i_i_i;
 var $__r_addr_i_i;
 var $this_addr_i_i_i31;
 var $this_addr_i_i32;
 var $this_addr_i33;
 var $__x_addr_i_i_i_i;
 var $__r_addr_i_i_i;
 var $this_addr_i_i_i_i;
 var $this_addr_i_i_i;
 var $this_addr_i_i;
 var $this_addr_i;
 var $retval;
 var $this_addr;
 var $__parent_addr;
 var $__v_addr;
 var $__nd;
 var $tmp=(sp)+(64);
 var $tmp6=(sp)+(72);
 var $tmp17=(sp)+(80);
 $this_addr=$this;
 $__parent_addr=$__parent;
 $__v_addr=$__v;
 var $this1=$this_addr;
 $this_addr_i=$this1;
 var $this1_i=$this_addr_i;
 $this_addr_i_i=$this1_i;
 var $this1_i_i=$this_addr_i_i;
 var $__pair1__i_i=(($this1_i_i+4)|0);
 $this_addr_i_i_i=$__pair1__i_i;
 var $this1_i_i_i=$this_addr_i_i_i;
 var $0=$this1_i_i_i;
 $this_addr_i_i_i_i=$0;
 var $this1_i_i_i_i=$this_addr_i_i_i_i;
 var $__first__i_i_i_i=(($this1_i_i_i_i)|0);
 $__r_addr_i_i_i=$__first__i_i_i_i;
 var $1=$__r_addr_i_i_i;
 $__x_addr_i_i_i_i=$1;
 var $2=$__x_addr_i_i_i_i;
 var $3=$2;
 var $4=$3;
 var $5=$4;
 var $6=$5;
 var $__left__i=(($6)|0);
 var $7=HEAP32[(($__left__i)>>2)];
 var $8=$7;
 $__nd=$8;
 var $9=$__nd;
 $this_addr_i_i51=$tmp;
 $_addr_i_i52=-1;
 var $this1_i_i53=$this_addr_i_i51;
 var $10=$_addr_i_i52;
 $this_addr_i_i_i49=$this1_i_i53;
 $_addr_i_i_i50=$10;
 var $this1_i_i_i54=$this_addr_i_i_i49;
 var $__lx_i_i_i55=(($this1_i_i_i54)|0);
 HEAP32[(($__lx_i_i_i55)>>2)]=0;
 $this_addr_i56=$tmp;
 var $this1_i57=$this_addr_i56;
 var $cmp=($9|0)!=0;
 if($cmp){label=2;break;}else{label=64;break;}
 case 2: 
 label=3;break;
 case 3: 
 $this_addr_i305=$this1;
 var $this1_i306=$this_addr_i305;
 var $__pair3__i307=(($this1_i306+8)|0);
 $this_addr_i_i304=$__pair3__i307;
 var $this1_i_i308=$this_addr_i_i304;
 var $11=$this1_i_i308;
 $this_addr_i_i_i303=$11;
 var $this1_i_i_i309=$this_addr_i_i_i303;
 var $12=$this1_i_i_i309;
 var $13=$__v_addr;
 var $14=$__nd;
 var $__value_=(($14+16)|0);
 $this_addr_i146=$12;
 $__x_addr_i147=$13;
 $__y_addr_i148=$__value_;
 var $this1_i149=$this_addr_i146;
 var $15=$this1_i149;
 var $16=$__x_addr_i147;
 var $__cc_i150=(($16)|0);
 var $first_i151=(($__cc_i150)|0);
 var $17=$__y_addr_i148;
 var $__cc2_i152=(($17)|0);
 var $first3_i153=(($__cc2_i152)|0);
 $this_addr_i_i143=$15;
 $__x_addr_i_i144=$first_i151;
 $__y_addr_i_i145=$first3_i153;
 var $this1_i_i154=$this_addr_i_i143;
 var $18=$__x_addr_i_i144;
 var $19=$__y_addr_i_i145;
 $__lhs_addr_i_i_i141=$18;
 $__rhs_addr_i_i_i142=$19;
 var $20=$__lhs_addr_i_i_i141;
 var $21=$__rhs_addr_i_i_i142;
 $this_addr_i_i_i_i134=$20;
 $__str_addr_i_i_i_i135=$21;
 var $this1_i_i_i_i155=$this_addr_i_i_i_i134;
 $this_addr_i_i_i_i_i132=$this1_i_i_i_i155;
 var $this1_i_i_i_i_i156=$this_addr_i_i_i_i_i132;
 $this_addr_i_i_i_i_i_i131=$this1_i_i_i_i_i156;
 var $this1_i_i_i_i_i_i157=$this_addr_i_i_i_i_i_i131;
 var $__r__i_i_i_i_i_i158=(($this1_i_i_i_i_i_i157)|0);
 $this_addr_i_i_i_i_i_i_i130=$__r__i_i_i_i_i_i158;
 var $this1_i_i_i_i_i_i_i159=$this_addr_i_i_i_i_i_i_i130;
 var $22=$this1_i_i_i_i_i_i_i159;
 $this_addr_i_i_i_i_i_i_i_i129=$22;
 var $this1_i_i_i_i_i_i_i_i160=$this_addr_i_i_i_i_i_i_i_i129;
 var $__first__i_i_i_i_i_i_i_i161=(($this1_i_i_i_i_i_i_i_i160)|0);
 var $23=(($__first__i_i_i_i_i_i_i_i161)|0);
 var $__s_i_i_i_i_i_i162=$23;
 var $24=(($__s_i_i_i_i_i_i162)|0);
 var $__size__i_i_i_i_i_i163=$24;
 var $25=HEAP8[($__size__i_i_i_i_i_i163)];
 var $conv_i_i_i_i_i_i164=($25&255);
 var $and_i_i_i_i_i_i165=$conv_i_i_i_i_i_i164&1;
 var $tobool_i_i_i_i_i_i166=($and_i_i_i_i_i_i165|0)!=0;
 if($tobool_i_i_i_i_i_i166){label=4;break;}else{label=5;break;}
 case 4: 
 $this_addr_i17_i_i_i_i_i125=$this1_i_i_i_i_i156;
 var $this1_i18_i_i_i_i_i167=$this_addr_i17_i_i_i_i_i125;
 var $__r__i19_i_i_i_i_i168=(($this1_i18_i_i_i_i_i167)|0);
 $this_addr_i_i16_i_i_i_i_i124=$__r__i19_i_i_i_i_i168;
 var $this1_i_i20_i_i_i_i_i169=$this_addr_i_i16_i_i_i_i_i124;
 var $26=$this1_i_i20_i_i_i_i_i169;
 $this_addr_i_i_i15_i_i_i_i_i123=$26;
 var $this1_i_i_i21_i_i_i_i_i170=$this_addr_i_i_i15_i_i_i_i_i123;
 var $__first__i_i_i22_i_i_i_i_i171=(($this1_i_i_i21_i_i_i_i_i170)|0);
 var $27=(($__first__i_i_i22_i_i_i_i_i171)|0);
 var $__l_i_i_i_i_i_i172=$27;
 var $__size__i23_i_i_i_i_i173=(($__l_i_i_i_i_i_i172+4)|0);
 var $28=HEAP32[(($__size__i23_i_i_i_i_i173)>>2)];
 var $cond_i_i_i_i_i185=$28;label=6;break;
 case 5: 
 $this_addr_i6_i_i_i_i_i128=$this1_i_i_i_i_i156;
 var $this1_i7_i_i_i_i_i175=$this_addr_i6_i_i_i_i_i128;
 var $__r__i8_i_i_i_i_i176=(($this1_i7_i_i_i_i_i175)|0);
 $this_addr_i_i5_i_i_i_i_i127=$__r__i8_i_i_i_i_i176;
 var $this1_i_i9_i_i_i_i_i177=$this_addr_i_i5_i_i_i_i_i127;
 var $29=$this1_i_i9_i_i_i_i_i177;
 $this_addr_i_i_i4_i_i_i_i_i126=$29;
 var $this1_i_i_i10_i_i_i_i_i178=$this_addr_i_i_i4_i_i_i_i_i126;
 var $__first__i_i_i11_i_i_i_i_i179=(($this1_i_i_i10_i_i_i_i_i178)|0);
 var $30=(($__first__i_i_i11_i_i_i_i_i179)|0);
 var $__s_i12_i_i_i_i_i180=$30;
 var $31=(($__s_i12_i_i_i_i_i180)|0);
 var $__size__i13_i_i_i_i_i181=$31;
 var $32=HEAP8[($__size__i13_i_i_i_i_i181)];
 var $conv_i14_i_i_i_i_i182=($32&255);
 var $shr_i_i_i_i_i_i183=$conv_i14_i_i_i_i_i182>>1;
 var $cond_i_i_i_i_i185=$shr_i_i_i_i_i_i183;label=6;break;
 case 6: 
 var $cond_i_i_i_i_i185;
 HEAP32[(($__lhs_sz_i_i_i_i136)>>2)]=$cond_i_i_i_i_i185;
 var $33=$__str_addr_i_i_i_i135;
 $this_addr_i24_i_i_i_i119=$33;
 var $this1_i25_i_i_i_i186=$this_addr_i24_i_i_i_i119;
 $this_addr_i_i23_i_i_i_i118=$this1_i25_i_i_i_i186;
 var $this1_i_i26_i_i_i_i187=$this_addr_i_i23_i_i_i_i118;
 var $__r__i_i27_i_i_i_i188=(($this1_i_i26_i_i_i_i187)|0);
 $this_addr_i_i_i22_i_i_i_i117=$__r__i_i27_i_i_i_i188;
 var $this1_i_i_i28_i_i_i_i189=$this_addr_i_i_i22_i_i_i_i117;
 var $34=$this1_i_i_i28_i_i_i_i189;
 $this_addr_i_i_i_i21_i_i_i_i116=$34;
 var $this1_i_i_i_i29_i_i_i_i190=$this_addr_i_i_i_i21_i_i_i_i116;
 var $__first__i_i_i_i30_i_i_i_i191=(($this1_i_i_i_i29_i_i_i_i190)|0);
 var $35=(($__first__i_i_i_i30_i_i_i_i191)|0);
 var $__s_i_i31_i_i_i_i192=$35;
 var $36=(($__s_i_i31_i_i_i_i192)|0);
 var $__size__i_i32_i_i_i_i193=$36;
 var $37=HEAP8[($__size__i_i32_i_i_i_i193)];
 var $conv_i_i33_i_i_i_i194=($37&255);
 var $and_i_i34_i_i_i_i195=$conv_i_i33_i_i_i_i194&1;
 var $tobool_i_i35_i_i_i_i196=($and_i_i34_i_i_i_i195|0)!=0;
 if($tobool_i_i35_i_i_i_i196){label=7;break;}else{label=8;break;}
 case 7: 
 $this_addr_i17_i17_i_i_i_i112=$this1_i25_i_i_i_i186;
 var $this1_i18_i36_i_i_i_i198=$this_addr_i17_i17_i_i_i_i112;
 var $__r__i19_i37_i_i_i_i199=(($this1_i18_i36_i_i_i_i198)|0);
 $this_addr_i_i16_i16_i_i_i_i111=$__r__i19_i37_i_i_i_i199;
 var $this1_i_i20_i38_i_i_i_i200=$this_addr_i_i16_i16_i_i_i_i111;
 var $38=$this1_i_i20_i38_i_i_i_i200;
 $this_addr_i_i_i15_i15_i_i_i_i110=$38;
 var $this1_i_i_i21_i39_i_i_i_i201=$this_addr_i_i_i15_i15_i_i_i_i110;
 var $__first__i_i_i22_i40_i_i_i_i202=(($this1_i_i_i21_i39_i_i_i_i201)|0);
 var $39=(($__first__i_i_i22_i40_i_i_i_i202)|0);
 var $__l_i_i41_i_i_i_i203=$39;
 var $__size__i23_i42_i_i_i_i204=(($__l_i_i41_i_i_i_i203+4)|0);
 var $40=HEAP32[(($__size__i23_i42_i_i_i_i204)>>2)];
 var $cond_i54_i_i_i_i216=$40;label=9;break;
 case 8: 
 $this_addr_i6_i20_i_i_i_i115=$this1_i25_i_i_i_i186;
 var $this1_i7_i44_i_i_i_i206=$this_addr_i6_i20_i_i_i_i115;
 var $__r__i8_i45_i_i_i_i207=(($this1_i7_i44_i_i_i_i206)|0);
 $this_addr_i_i5_i19_i_i_i_i114=$__r__i8_i45_i_i_i_i207;
 var $this1_i_i9_i46_i_i_i_i208=$this_addr_i_i5_i19_i_i_i_i114;
 var $41=$this1_i_i9_i46_i_i_i_i208;
 $this_addr_i_i_i4_i18_i_i_i_i113=$41;
 var $this1_i_i_i10_i47_i_i_i_i209=$this_addr_i_i_i4_i18_i_i_i_i113;
 var $__first__i_i_i11_i48_i_i_i_i210=(($this1_i_i_i10_i47_i_i_i_i209)|0);
 var $42=(($__first__i_i_i11_i48_i_i_i_i210)|0);
 var $__s_i12_i49_i_i_i_i211=$42;
 var $43=(($__s_i12_i49_i_i_i_i211)|0);
 var $__size__i13_i50_i_i_i_i212=$43;
 var $44=HEAP8[($__size__i13_i50_i_i_i_i212)];
 var $conv_i14_i51_i_i_i_i213=($44&255);
 var $shr_i_i52_i_i_i_i214=$conv_i14_i51_i_i_i_i213>>1;
 var $cond_i54_i_i_i_i216=$shr_i_i52_i_i_i_i214;label=9;break;
 case 9: 
 var $cond_i54_i_i_i_i216;
 HEAP32[(($__rhs_sz_i_i_i_i137)>>2)]=$cond_i54_i_i_i_i216;
 $this_addr_i81_i_i_i_i86=$this1_i_i_i_i155;
 var $this1_i82_i_i_i_i217=$this_addr_i81_i_i_i_i86;
 $this_addr_i_i80_i_i_i_i85=$this1_i82_i_i_i_i217;
 var $this1_i_i83_i_i_i_i218=$this_addr_i_i80_i_i_i_i85;
 $this_addr_i_i_i79_i_i_i_i84=$this1_i_i83_i_i_i_i218;
 var $this1_i_i_i84_i_i_i_i219=$this_addr_i_i_i79_i_i_i_i84;
 var $__r__i_i_i85_i_i_i_i220=(($this1_i_i_i84_i_i_i_i219)|0);
 $this_addr_i_i_i_i78_i_i_i_i83=$__r__i_i_i85_i_i_i_i220;
 var $this1_i_i_i_i86_i_i_i_i221=$this_addr_i_i_i_i78_i_i_i_i83;
 var $45=$this1_i_i_i_i86_i_i_i_i221;
 $this_addr_i_i_i_i_i77_i_i_i_i82=$45;
 var $this1_i_i_i_i_i87_i_i_i_i222=$this_addr_i_i_i_i_i77_i_i_i_i82;
 var $__first__i_i_i_i_i88_i_i_i_i223=(($this1_i_i_i_i_i87_i_i_i_i222)|0);
 var $46=(($__first__i_i_i_i_i88_i_i_i_i223)|0);
 var $__s_i_i_i89_i_i_i_i224=$46;
 var $47=(($__s_i_i_i89_i_i_i_i224)|0);
 var $__size__i_i_i90_i_i_i_i225=$47;
 var $48=HEAP8[($__size__i_i_i90_i_i_i_i225)];
 var $conv_i_i_i91_i_i_i_i226=($48&255);
 var $and_i_i_i92_i_i_i_i227=$conv_i_i_i91_i_i_i_i226&1;
 var $tobool_i_i_i93_i_i_i_i228=($and_i_i_i92_i_i_i_i227|0)!=0;
 if($tobool_i_i_i93_i_i_i_i228){label=10;break;}else{label=11;break;}
 case 10: 
 $this_addr_i15_i_i71_i_i_i_i76=$this1_i_i83_i_i_i_i218;
 var $this1_i16_i_i94_i_i_i_i230=$this_addr_i15_i_i71_i_i_i_i76;
 var $__r__i17_i_i95_i_i_i_i231=(($this1_i16_i_i94_i_i_i_i230)|0);
 $this_addr_i_i14_i_i70_i_i_i_i75=$__r__i17_i_i95_i_i_i_i231;
 var $this1_i_i18_i_i96_i_i_i_i232=$this_addr_i_i14_i_i70_i_i_i_i75;
 var $49=$this1_i_i18_i_i96_i_i_i_i232;
 $this_addr_i_i_i13_i_i69_i_i_i_i74=$49;
 var $this1_i_i_i19_i_i97_i_i_i_i233=$this_addr_i_i_i13_i_i69_i_i_i_i74;
 var $__first__i_i_i20_i_i98_i_i_i_i234=(($this1_i_i_i19_i_i97_i_i_i_i233)|0);
 var $50=(($__first__i_i_i20_i_i98_i_i_i_i234)|0);
 var $__l_i_i_i99_i_i_i_i235=$50;
 var $__data__i21_i_i100_i_i_i_i236=(($__l_i_i_i99_i_i_i_i235+8)|0);
 var $51=HEAP32[(($__data__i21_i_i100_i_i_i_i236)>>2)];
 var $cond_i_i111_i_i_i_i247=$51;label=12;break;
 case 11: 
 $this_addr_i6_i_i76_i_i_i_i81=$this1_i_i83_i_i_i_i218;
 var $this1_i7_i_i102_i_i_i_i238=$this_addr_i6_i_i76_i_i_i_i81;
 var $__r__i8_i_i103_i_i_i_i239=(($this1_i7_i_i102_i_i_i_i238)|0);
 $this_addr_i_i5_i_i75_i_i_i_i80=$__r__i8_i_i103_i_i_i_i239;
 var $this1_i_i9_i_i104_i_i_i_i240=$this_addr_i_i5_i_i75_i_i_i_i80;
 var $52=$this1_i_i9_i_i104_i_i_i_i240;
 $this_addr_i_i_i4_i_i74_i_i_i_i79=$52;
 var $this1_i_i_i10_i_i105_i_i_i_i241=$this_addr_i_i_i4_i_i74_i_i_i_i79;
 var $__first__i_i_i11_i_i106_i_i_i_i242=(($this1_i_i_i10_i_i105_i_i_i_i241)|0);
 var $53=(($__first__i_i_i11_i_i106_i_i_i_i242)|0);
 var $__s_i12_i_i107_i_i_i_i243=$53;
 var $__data__i_i_i108_i_i_i_i244=(($__s_i12_i_i107_i_i_i_i243+1)|0);
 var $arrayidx_i_i_i109_i_i_i_i245=(($__data__i_i_i108_i_i_i_i244)|0);
 $__r_addr_i_i_i_i73_i_i_i_i78=$arrayidx_i_i_i109_i_i_i_i245;
 var $54=$__r_addr_i_i_i_i73_i_i_i_i78;
 $__x_addr_i_i_i_i_i72_i_i_i_i77=$54;
 var $55=$__x_addr_i_i_i_i_i72_i_i_i_i77;
 var $cond_i_i111_i_i_i_i247=$55;label=12;break;
 case 12: 
 var $cond_i_i111_i_i_i_i247;
 $__p_addr_i_i68_i_i_i_i73=$cond_i_i111_i_i_i_i247;
 var $56=$__p_addr_i_i68_i_i_i_i73;
 var $57=$__str_addr_i_i_i_i135;
 $this_addr_i61_i_i_i_i100=$57;
 var $this1_i62_i_i_i_i248=$this_addr_i61_i_i_i_i100;
 $this_addr_i_i60_i_i_i_i99=$this1_i62_i_i_i_i248;
 var $this1_i_i63_i_i_i_i249=$this_addr_i_i60_i_i_i_i99;
 $this_addr_i_i_i59_i_i_i_i98=$this1_i_i63_i_i_i_i249;
 var $this1_i_i_i64_i_i_i_i250=$this_addr_i_i_i59_i_i_i_i98;
 var $__r__i_i_i_i_i_i_i251=(($this1_i_i_i64_i_i_i_i250)|0);
 $this_addr_i_i_i_i58_i_i_i_i97=$__r__i_i_i_i_i_i_i251;
 var $this1_i_i_i_i65_i_i_i_i252=$this_addr_i_i_i_i58_i_i_i_i97;
 var $58=$this1_i_i_i_i65_i_i_i_i252;
 $this_addr_i_i_i_i_i_i_i_i_i96=$58;
 var $this1_i_i_i_i_i_i_i_i_i253=$this_addr_i_i_i_i_i_i_i_i_i96;
 var $__first__i_i_i_i_i_i_i_i_i254=(($this1_i_i_i_i_i_i_i_i_i253)|0);
 var $59=(($__first__i_i_i_i_i_i_i_i_i254)|0);
 var $__s_i_i_i_i_i_i_i255=$59;
 var $60=(($__s_i_i_i_i_i_i_i255)|0);
 var $__size__i_i_i_i_i_i_i256=$60;
 var $61=HEAP8[($__size__i_i_i_i_i_i_i256)];
 var $conv_i_i_i_i_i_i_i257=($61&255);
 var $and_i_i_i_i_i_i_i258=$conv_i_i_i_i_i_i_i257&1;
 var $tobool_i_i_i_i_i_i_i259=($and_i_i_i_i_i_i_i258|0)!=0;
 if($tobool_i_i_i_i_i_i_i259){label=13;break;}else{label=14;break;}
 case 13: 
 $this_addr_i15_i_i_i_i_i_i90=$this1_i_i63_i_i_i_i249;
 var $this1_i16_i_i_i_i_i_i261=$this_addr_i15_i_i_i_i_i_i90;
 var $__r__i17_i_i_i_i_i_i262=(($this1_i16_i_i_i_i_i_i261)|0);
 $this_addr_i_i14_i_i_i_i_i_i89=$__r__i17_i_i_i_i_i_i262;
 var $this1_i_i18_i_i_i_i_i_i263=$this_addr_i_i14_i_i_i_i_i_i89;
 var $62=$this1_i_i18_i_i_i_i_i_i263;
 $this_addr_i_i_i13_i_i_i_i_i_i88=$62;
 var $this1_i_i_i19_i_i_i_i_i_i264=$this_addr_i_i_i13_i_i_i_i_i_i88;
 var $__first__i_i_i20_i_i_i_i_i_i265=(($this1_i_i_i19_i_i_i_i_i_i264)|0);
 var $63=(($__first__i_i_i20_i_i_i_i_i_i265)|0);
 var $__l_i_i_i_i_i_i_i266=$63;
 var $__data__i21_i_i_i_i_i_i267=(($__l_i_i_i_i_i_i_i266+8)|0);
 var $64=HEAP32[(($__data__i21_i_i_i_i_i_i267)>>2)];
 var $cond_i_i_i_i_i_i278=$64;label=15;break;
 case 14: 
 $this_addr_i6_i_i_i_i_i_i95=$this1_i_i63_i_i_i_i249;
 var $this1_i7_i_i_i_i_i_i269=$this_addr_i6_i_i_i_i_i_i95;
 var $__r__i8_i_i_i_i_i_i270=(($this1_i7_i_i_i_i_i_i269)|0);
 $this_addr_i_i5_i_i_i_i_i_i94=$__r__i8_i_i_i_i_i_i270;
 var $this1_i_i9_i_i_i_i_i_i271=$this_addr_i_i5_i_i_i_i_i_i94;
 var $65=$this1_i_i9_i_i_i_i_i_i271;
 $this_addr_i_i_i4_i_i_i_i_i_i93=$65;
 var $this1_i_i_i10_i_i_i_i_i_i272=$this_addr_i_i_i4_i_i_i_i_i_i93;
 var $__first__i_i_i11_i_i_i_i_i_i273=(($this1_i_i_i10_i_i_i_i_i_i272)|0);
 var $66=(($__first__i_i_i11_i_i_i_i_i_i273)|0);
 var $__s_i12_i_i_i_i_i_i274=$66;
 var $__data__i_i_i_i_i_i_i275=(($__s_i12_i_i_i_i_i_i274+1)|0);
 var $arrayidx_i_i_i_i_i_i_i276=(($__data__i_i_i_i_i_i_i275)|0);
 $__r_addr_i_i_i_i_i_i_i_i92=$arrayidx_i_i_i_i_i_i_i276;
 var $67=$__r_addr_i_i_i_i_i_i_i_i92;
 $__x_addr_i_i_i_i_i_i_i_i_i91=$67;
 var $68=$__x_addr_i_i_i_i_i_i_i_i_i91;
 var $cond_i_i_i_i_i_i278=$68;label=15;break;
 case 15: 
 var $cond_i_i_i_i_i_i278;
 $__p_addr_i_i_i_i_i_i87=$cond_i_i_i_i_i_i278;
 var $69=$__p_addr_i_i_i_i_i_i87;
 $__a_addr_i_i_i_i_i107=$__lhs_sz_i_i_i_i136;
 $__b_addr_i_i_i_i_i108=$__rhs_sz_i_i_i_i137;
 var $70=$__a_addr_i_i_i_i_i107;
 var $71=$__b_addr_i_i_i_i_i108;
 var $tmp_i_i_i_i_i279=$agg_tmp1_i_i_i_i_i106;
 var $tmp2_i_i_i_i_i280=$agg_tmp_i_i_i_i_i109;
 assert(1 % 1 === 0);HEAP8[($tmp_i_i_i_i_i279)]=HEAP8[($tmp2_i_i_i_i_i280)];
 $__a_addr_i_i_i_i_i_i104=$70;
 $__b_addr_i_i_i_i_i_i105=$71;
 var $72=$__b_addr_i_i_i_i_i_i105;
 var $73=$__a_addr_i_i_i_i_i_i104;
 $this_addr_i_i_i56_i_i_i_i101=$agg_tmp1_i_i_i_i_i106;
 $__x_addr_i_i_i_i_i_i_i102=$72;
 $__y_addr_i_i_i_i_i_i_i103=$73;
 var $this1_i_i_i57_i_i_i_i281=$this_addr_i_i_i56_i_i_i_i101;
 var $74=$__x_addr_i_i_i_i_i_i_i102;
 var $75=HEAP32[(($74)>>2)];
 var $76=$__y_addr_i_i_i_i_i_i_i103;
 var $77=HEAP32[(($76)>>2)];
 var $cmp_i_i_i_i_i_i_i282=($75>>>0)<($77>>>0);
 if($cmp_i_i_i_i_i_i_i282){label=16;break;}else{label=17;break;}
 case 16: 
 var $78=$__b_addr_i_i_i_i_i_i105;
 var $cond_lvalue_i_i_i_i_i_i286=$78;label=18;break;
 case 17: 
 var $79=$__a_addr_i_i_i_i_i_i104;
 var $cond_lvalue_i_i_i_i_i_i286=$79;label=18;break;
 case 18: 
 var $cond_lvalue_i_i_i_i_i_i286;
 var $80=HEAP32[(($cond_lvalue_i_i_i_i_i_i286)>>2)];
 $__s1_addr_i_i_i_i_i120=$56;
 $__s2_addr_i_i_i_i_i121=$69;
 $__n_addr_i_i_i_i_i122=$80;
 var $81=$__s1_addr_i_i_i_i_i120;
 var $82=$__s2_addr_i_i_i_i_i121;
 var $83=$__n_addr_i_i_i_i_i122;
 var $call_i14_i_i_i_i287=(function() { try { __THREW__ = 0; return _memcmp($81,$82,$83) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=19;break; } else { label=21;break; }
 case 19: 
 $__result_i_i_i_i138=$call_i14_i_i_i_i287;
 var $84=$__result_i_i_i_i138;
 var $cmp_i_i_i_i289=($84|0)!=0;
 if($cmp_i_i_i_i289){label=20;break;}else{label=22;break;}
 case 20: 
 var $85=$__result_i_i_i_i138;
 $retval_i_i_i_i133=$85;
 label=27;break;
 case 21: 
 var $86$0 = ___cxa_find_matching_catch(-1, -1); var $86$1 = tempRet0;
 var $87=$86$0;
 $exn_slot_i_i_i_i139=$87;
 var $88=$86$1;
 $ehselector_slot_i_i_i_i140=$88;
 var $exn_i_i_i_i292=$exn_slot_i_i_i_i139;
 ___cxa_call_unexpected($exn_i_i_i_i292);
 throw "Reached an unreachable!";
 case 22: 
 var $89=HEAP32[(($__lhs_sz_i_i_i_i136)>>2)];
 var $90=HEAP32[(($__rhs_sz_i_i_i_i137)>>2)];
 var $cmp8_i_i_i_i294=($89>>>0)<($90>>>0);
 if($cmp8_i_i_i_i294){label=23;break;}else{label=24;break;}
 case 23: 
 $retval_i_i_i_i133=-1;
 label=27;break;
 case 24: 
 var $91=HEAP32[(($__lhs_sz_i_i_i_i136)>>2)];
 var $92=HEAP32[(($__rhs_sz_i_i_i_i137)>>2)];
 var $cmp11_i_i_i_i297=($91>>>0)>($92>>>0);
 if($cmp11_i_i_i_i297){label=25;break;}else{label=26;break;}
 case 25: 
 $retval_i_i_i_i133=1;
 label=27;break;
 case 26: 
 $retval_i_i_i_i133=0;
 label=27;break;
 case 27: 
 var $93=$retval_i_i_i_i133;
 var $cmp_i_i_i301=($93|0)<0;
 if($cmp_i_i_i301){label=28;break;}else{label=32;break;}
 case 28: 
 var $94=$__nd;
 var $95=$94;
 var $__left_=(($95)|0);
 var $96=HEAP32[(($__left_)>>2)];
 $this_addr_i_i68=$tmp6;
 $_addr_i_i69=-1;
 var $this1_i_i70=$this_addr_i_i68;
 var $97=$_addr_i_i69;
 $this_addr_i_i_i66=$this1_i_i70;
 $_addr_i_i_i67=$97;
 var $this1_i_i_i71=$this_addr_i_i_i66;
 var $__lx_i_i_i72=(($this1_i_i_i71)|0);
 HEAP32[(($__lx_i_i_i72)>>2)]=0;
 $this_addr_i64=$tmp6;
 var $this1_i65=$this_addr_i64;
 var $cmp8=($96|0)!=0;
 if($cmp8){label=29;break;}else{label=30;break;}
 case 29: 
 var $98=$__nd;
 var $99=$98;
 var $__left_10=(($99)|0);
 var $100=HEAP32[(($__left_10)>>2)];
 var $101=$100;
 $__nd=$101;
 label=31;break;
 case 30: 
 var $102=$__nd;
 var $103=$102;
 var $104=$__parent_addr;
 HEAP32[(($104)>>2)]=$103;
 var $105=$__parent_addr;
 var $106=HEAP32[(($105)>>2)];
 var $107=$106;
 var $__left_11=(($107)|0);
 $retval=$__left_11;
 label=65;break;
 case 31: 
 label=63;break;
 case 32: 
 $this_addr_i60=$this1;
 var $this1_i61=$this_addr_i60;
 var $__pair3__i=(($this1_i61+8)|0);
 $this_addr_i_i59=$__pair3__i;
 var $this1_i_i62=$this_addr_i_i59;
 var $108=$this1_i_i62;
 $this_addr_i_i_i58=$108;
 var $this1_i_i_i63=$this_addr_i_i_i58;
 var $109=$this1_i_i_i63;
 var $110=$__nd;
 var $__value_14=(($110+16)|0);
 var $111=$__v_addr;
 $this_addr_i45=$109;
 $__x_addr_i=$__value_14;
 $__y_addr_i=$111;
 var $this1_i46=$this_addr_i45;
 var $112=$this1_i46;
 var $113=$__x_addr_i;
 var $__cc_i=(($113)|0);
 var $first_i=(($__cc_i)|0);
 var $114=$__y_addr_i;
 var $__cc2_i=(($114)|0);
 var $first3_i=(($__cc2_i)|0);
 $this_addr_i_i44=$112;
 $__x_addr_i_i=$first_i;
 $__y_addr_i_i=$first3_i;
 var $this1_i_i47=$this_addr_i_i44;
 var $115=$__x_addr_i_i;
 var $116=$__y_addr_i_i;
 $__lhs_addr_i_i_i=$115;
 $__rhs_addr_i_i_i=$116;
 var $117=$__lhs_addr_i_i_i;
 var $118=$__rhs_addr_i_i_i;
 $this_addr_i_i_i_i43=$117;
 $__str_addr_i_i_i_i=$118;
 var $this1_i_i_i_i48=$this_addr_i_i_i_i43;
 $this_addr_i_i_i_i_i=$this1_i_i_i_i48;
 var $this1_i_i_i_i_i=$this_addr_i_i_i_i_i;
 $this_addr_i_i_i_i_i_i=$this1_i_i_i_i_i;
 var $this1_i_i_i_i_i_i=$this_addr_i_i_i_i_i_i;
 var $__r__i_i_i_i_i_i=(($this1_i_i_i_i_i_i)|0);
 $this_addr_i_i_i_i_i_i_i=$__r__i_i_i_i_i_i;
 var $this1_i_i_i_i_i_i_i=$this_addr_i_i_i_i_i_i_i;
 var $119=$this1_i_i_i_i_i_i_i;
 $this_addr_i_i_i_i_i_i_i_i=$119;
 var $this1_i_i_i_i_i_i_i_i=$this_addr_i_i_i_i_i_i_i_i;
 var $__first__i_i_i_i_i_i_i_i=(($this1_i_i_i_i_i_i_i_i)|0);
 var $120=(($__first__i_i_i_i_i_i_i_i)|0);
 var $__s_i_i_i_i_i_i=$120;
 var $121=(($__s_i_i_i_i_i_i)|0);
 var $__size__i_i_i_i_i_i=$121;
 var $122=HEAP8[($__size__i_i_i_i_i_i)];
 var $conv_i_i_i_i_i_i=($122&255);
 var $and_i_i_i_i_i_i=$conv_i_i_i_i_i_i&1;
 var $tobool_i_i_i_i_i_i=($and_i_i_i_i_i_i|0)!=0;
 if($tobool_i_i_i_i_i_i){label=33;break;}else{label=34;break;}
 case 33: 
 $this_addr_i17_i_i_i_i_i=$this1_i_i_i_i_i;
 var $this1_i18_i_i_i_i_i=$this_addr_i17_i_i_i_i_i;
 var $__r__i19_i_i_i_i_i=(($this1_i18_i_i_i_i_i)|0);
 $this_addr_i_i16_i_i_i_i_i=$__r__i19_i_i_i_i_i;
 var $this1_i_i20_i_i_i_i_i=$this_addr_i_i16_i_i_i_i_i;
 var $123=$this1_i_i20_i_i_i_i_i;
 $this_addr_i_i_i15_i_i_i_i_i=$123;
 var $this1_i_i_i21_i_i_i_i_i=$this_addr_i_i_i15_i_i_i_i_i;
 var $__first__i_i_i22_i_i_i_i_i=(($this1_i_i_i21_i_i_i_i_i)|0);
 var $124=(($__first__i_i_i22_i_i_i_i_i)|0);
 var $__l_i_i_i_i_i_i=$124;
 var $__size__i23_i_i_i_i_i=(($__l_i_i_i_i_i_i+4)|0);
 var $125=HEAP32[(($__size__i23_i_i_i_i_i)>>2)];
 var $cond_i_i_i_i_i=$125;label=35;break;
 case 34: 
 $this_addr_i6_i_i_i_i_i=$this1_i_i_i_i_i;
 var $this1_i7_i_i_i_i_i=$this_addr_i6_i_i_i_i_i;
 var $__r__i8_i_i_i_i_i=(($this1_i7_i_i_i_i_i)|0);
 $this_addr_i_i5_i_i_i_i_i=$__r__i8_i_i_i_i_i;
 var $this1_i_i9_i_i_i_i_i=$this_addr_i_i5_i_i_i_i_i;
 var $126=$this1_i_i9_i_i_i_i_i;
 $this_addr_i_i_i4_i_i_i_i_i=$126;
 var $this1_i_i_i10_i_i_i_i_i=$this_addr_i_i_i4_i_i_i_i_i;
 var $__first__i_i_i11_i_i_i_i_i=(($this1_i_i_i10_i_i_i_i_i)|0);
 var $127=(($__first__i_i_i11_i_i_i_i_i)|0);
 var $__s_i12_i_i_i_i_i=$127;
 var $128=(($__s_i12_i_i_i_i_i)|0);
 var $__size__i13_i_i_i_i_i=$128;
 var $129=HEAP8[($__size__i13_i_i_i_i_i)];
 var $conv_i14_i_i_i_i_i=($129&255);
 var $shr_i_i_i_i_i_i=$conv_i14_i_i_i_i_i>>1;
 var $cond_i_i_i_i_i=$shr_i_i_i_i_i_i;label=35;break;
 case 35: 
 var $cond_i_i_i_i_i;
 HEAP32[(($__lhs_sz_i_i_i_i)>>2)]=$cond_i_i_i_i_i;
 var $130=$__str_addr_i_i_i_i;
 $this_addr_i24_i_i_i_i=$130;
 var $this1_i25_i_i_i_i=$this_addr_i24_i_i_i_i;
 $this_addr_i_i23_i_i_i_i=$this1_i25_i_i_i_i;
 var $this1_i_i26_i_i_i_i=$this_addr_i_i23_i_i_i_i;
 var $__r__i_i27_i_i_i_i=(($this1_i_i26_i_i_i_i)|0);
 $this_addr_i_i_i22_i_i_i_i=$__r__i_i27_i_i_i_i;
 var $this1_i_i_i28_i_i_i_i=$this_addr_i_i_i22_i_i_i_i;
 var $131=$this1_i_i_i28_i_i_i_i;
 $this_addr_i_i_i_i21_i_i_i_i=$131;
 var $this1_i_i_i_i29_i_i_i_i=$this_addr_i_i_i_i21_i_i_i_i;
 var $__first__i_i_i_i30_i_i_i_i=(($this1_i_i_i_i29_i_i_i_i)|0);
 var $132=(($__first__i_i_i_i30_i_i_i_i)|0);
 var $__s_i_i31_i_i_i_i=$132;
 var $133=(($__s_i_i31_i_i_i_i)|0);
 var $__size__i_i32_i_i_i_i=$133;
 var $134=HEAP8[($__size__i_i32_i_i_i_i)];
 var $conv_i_i33_i_i_i_i=($134&255);
 var $and_i_i34_i_i_i_i=$conv_i_i33_i_i_i_i&1;
 var $tobool_i_i35_i_i_i_i=($and_i_i34_i_i_i_i|0)!=0;
 if($tobool_i_i35_i_i_i_i){label=36;break;}else{label=37;break;}
 case 36: 
 $this_addr_i17_i17_i_i_i_i=$this1_i25_i_i_i_i;
 var $this1_i18_i36_i_i_i_i=$this_addr_i17_i17_i_i_i_i;
 var $__r__i19_i37_i_i_i_i=(($this1_i18_i36_i_i_i_i)|0);
 $this_addr_i_i16_i16_i_i_i_i=$__r__i19_i37_i_i_i_i;
 var $this1_i_i20_i38_i_i_i_i=$this_addr_i_i16_i16_i_i_i_i;
 var $135=$this1_i_i20_i38_i_i_i_i;
 $this_addr_i_i_i15_i15_i_i_i_i=$135;
 var $this1_i_i_i21_i39_i_i_i_i=$this_addr_i_i_i15_i15_i_i_i_i;
 var $__first__i_i_i22_i40_i_i_i_i=(($this1_i_i_i21_i39_i_i_i_i)|0);
 var $136=(($__first__i_i_i22_i40_i_i_i_i)|0);
 var $__l_i_i41_i_i_i_i=$136;
 var $__size__i23_i42_i_i_i_i=(($__l_i_i41_i_i_i_i+4)|0);
 var $137=HEAP32[(($__size__i23_i42_i_i_i_i)>>2)];
 var $cond_i54_i_i_i_i=$137;label=38;break;
 case 37: 
 $this_addr_i6_i20_i_i_i_i=$this1_i25_i_i_i_i;
 var $this1_i7_i44_i_i_i_i=$this_addr_i6_i20_i_i_i_i;
 var $__r__i8_i45_i_i_i_i=(($this1_i7_i44_i_i_i_i)|0);
 $this_addr_i_i5_i19_i_i_i_i=$__r__i8_i45_i_i_i_i;
 var $this1_i_i9_i46_i_i_i_i=$this_addr_i_i5_i19_i_i_i_i;
 var $138=$this1_i_i9_i46_i_i_i_i;
 $this_addr_i_i_i4_i18_i_i_i_i=$138;
 var $this1_i_i_i10_i47_i_i_i_i=$this_addr_i_i_i4_i18_i_i_i_i;
 var $__first__i_i_i11_i48_i_i_i_i=(($this1_i_i_i10_i47_i_i_i_i)|0);
 var $139=(($__first__i_i_i11_i48_i_i_i_i)|0);
 var $__s_i12_i49_i_i_i_i=$139;
 var $140=(($__s_i12_i49_i_i_i_i)|0);
 var $__size__i13_i50_i_i_i_i=$140;
 var $141=HEAP8[($__size__i13_i50_i_i_i_i)];
 var $conv_i14_i51_i_i_i_i=($141&255);
 var $shr_i_i52_i_i_i_i=$conv_i14_i51_i_i_i_i>>1;
 var $cond_i54_i_i_i_i=$shr_i_i52_i_i_i_i;label=38;break;
 case 38: 
 var $cond_i54_i_i_i_i;
 HEAP32[(($__rhs_sz_i_i_i_i)>>2)]=$cond_i54_i_i_i_i;
 $this_addr_i81_i_i_i_i=$this1_i_i_i_i48;
 var $this1_i82_i_i_i_i=$this_addr_i81_i_i_i_i;
 $this_addr_i_i80_i_i_i_i=$this1_i82_i_i_i_i;
 var $this1_i_i83_i_i_i_i=$this_addr_i_i80_i_i_i_i;
 $this_addr_i_i_i79_i_i_i_i=$this1_i_i83_i_i_i_i;
 var $this1_i_i_i84_i_i_i_i=$this_addr_i_i_i79_i_i_i_i;
 var $__r__i_i_i85_i_i_i_i=(($this1_i_i_i84_i_i_i_i)|0);
 $this_addr_i_i_i_i78_i_i_i_i=$__r__i_i_i85_i_i_i_i;
 var $this1_i_i_i_i86_i_i_i_i=$this_addr_i_i_i_i78_i_i_i_i;
 var $142=$this1_i_i_i_i86_i_i_i_i;
 $this_addr_i_i_i_i_i77_i_i_i_i=$142;
 var $this1_i_i_i_i_i87_i_i_i_i=$this_addr_i_i_i_i_i77_i_i_i_i;
 var $__first__i_i_i_i_i88_i_i_i_i=(($this1_i_i_i_i_i87_i_i_i_i)|0);
 var $143=(($__first__i_i_i_i_i88_i_i_i_i)|0);
 var $__s_i_i_i89_i_i_i_i=$143;
 var $144=(($__s_i_i_i89_i_i_i_i)|0);
 var $__size__i_i_i90_i_i_i_i=$144;
 var $145=HEAP8[($__size__i_i_i90_i_i_i_i)];
 var $conv_i_i_i91_i_i_i_i=($145&255);
 var $and_i_i_i92_i_i_i_i=$conv_i_i_i91_i_i_i_i&1;
 var $tobool_i_i_i93_i_i_i_i=($and_i_i_i92_i_i_i_i|0)!=0;
 if($tobool_i_i_i93_i_i_i_i){label=39;break;}else{label=40;break;}
 case 39: 
 $this_addr_i15_i_i71_i_i_i_i=$this1_i_i83_i_i_i_i;
 var $this1_i16_i_i94_i_i_i_i=$this_addr_i15_i_i71_i_i_i_i;
 var $__r__i17_i_i95_i_i_i_i=(($this1_i16_i_i94_i_i_i_i)|0);
 $this_addr_i_i14_i_i70_i_i_i_i=$__r__i17_i_i95_i_i_i_i;
 var $this1_i_i18_i_i96_i_i_i_i=$this_addr_i_i14_i_i70_i_i_i_i;
 var $146=$this1_i_i18_i_i96_i_i_i_i;
 $this_addr_i_i_i13_i_i69_i_i_i_i=$146;
 var $this1_i_i_i19_i_i97_i_i_i_i=$this_addr_i_i_i13_i_i69_i_i_i_i;
 var $__first__i_i_i20_i_i98_i_i_i_i=(($this1_i_i_i19_i_i97_i_i_i_i)|0);
 var $147=(($__first__i_i_i20_i_i98_i_i_i_i)|0);
 var $__l_i_i_i99_i_i_i_i=$147;
 var $__data__i21_i_i100_i_i_i_i=(($__l_i_i_i99_i_i_i_i+8)|0);
 var $148=HEAP32[(($__data__i21_i_i100_i_i_i_i)>>2)];
 var $cond_i_i111_i_i_i_i=$148;label=41;break;
 case 40: 
 $this_addr_i6_i_i76_i_i_i_i=$this1_i_i83_i_i_i_i;
 var $this1_i7_i_i102_i_i_i_i=$this_addr_i6_i_i76_i_i_i_i;
 var $__r__i8_i_i103_i_i_i_i=(($this1_i7_i_i102_i_i_i_i)|0);
 $this_addr_i_i5_i_i75_i_i_i_i=$__r__i8_i_i103_i_i_i_i;
 var $this1_i_i9_i_i104_i_i_i_i=$this_addr_i_i5_i_i75_i_i_i_i;
 var $149=$this1_i_i9_i_i104_i_i_i_i;
 $this_addr_i_i_i4_i_i74_i_i_i_i=$149;
 var $this1_i_i_i10_i_i105_i_i_i_i=$this_addr_i_i_i4_i_i74_i_i_i_i;
 var $__first__i_i_i11_i_i106_i_i_i_i=(($this1_i_i_i10_i_i105_i_i_i_i)|0);
 var $150=(($__first__i_i_i11_i_i106_i_i_i_i)|0);
 var $__s_i12_i_i107_i_i_i_i=$150;
 var $__data__i_i_i108_i_i_i_i=(($__s_i12_i_i107_i_i_i_i+1)|0);
 var $arrayidx_i_i_i109_i_i_i_i=(($__data__i_i_i108_i_i_i_i)|0);
 $__r_addr_i_i_i_i73_i_i_i_i=$arrayidx_i_i_i109_i_i_i_i;
 var $151=$__r_addr_i_i_i_i73_i_i_i_i;
 $__x_addr_i_i_i_i_i72_i_i_i_i=$151;
 var $152=$__x_addr_i_i_i_i_i72_i_i_i_i;
 var $cond_i_i111_i_i_i_i=$152;label=41;break;
 case 41: 
 var $cond_i_i111_i_i_i_i;
 $__p_addr_i_i68_i_i_i_i=$cond_i_i111_i_i_i_i;
 var $153=$__p_addr_i_i68_i_i_i_i;
 var $154=$__str_addr_i_i_i_i;
 $this_addr_i61_i_i_i_i=$154;
 var $this1_i62_i_i_i_i=$this_addr_i61_i_i_i_i;
 $this_addr_i_i60_i_i_i_i=$this1_i62_i_i_i_i;
 var $this1_i_i63_i_i_i_i=$this_addr_i_i60_i_i_i_i;
 $this_addr_i_i_i59_i_i_i_i=$this1_i_i63_i_i_i_i;
 var $this1_i_i_i64_i_i_i_i=$this_addr_i_i_i59_i_i_i_i;
 var $__r__i_i_i_i_i_i_i=(($this1_i_i_i64_i_i_i_i)|0);
 $this_addr_i_i_i_i58_i_i_i_i=$__r__i_i_i_i_i_i_i;
 var $this1_i_i_i_i65_i_i_i_i=$this_addr_i_i_i_i58_i_i_i_i;
 var $155=$this1_i_i_i_i65_i_i_i_i;
 $this_addr_i_i_i_i_i_i_i_i_i=$155;
 var $this1_i_i_i_i_i_i_i_i_i=$this_addr_i_i_i_i_i_i_i_i_i;
 var $__first__i_i_i_i_i_i_i_i_i=(($this1_i_i_i_i_i_i_i_i_i)|0);
 var $156=(($__first__i_i_i_i_i_i_i_i_i)|0);
 var $__s_i_i_i_i_i_i_i=$156;
 var $157=(($__s_i_i_i_i_i_i_i)|0);
 var $__size__i_i_i_i_i_i_i=$157;
 var $158=HEAP8[($__size__i_i_i_i_i_i_i)];
 var $conv_i_i_i_i_i_i_i=($158&255);
 var $and_i_i_i_i_i_i_i=$conv_i_i_i_i_i_i_i&1;
 var $tobool_i_i_i_i_i_i_i=($and_i_i_i_i_i_i_i|0)!=0;
 if($tobool_i_i_i_i_i_i_i){label=42;break;}else{label=43;break;}
 case 42: 
 $this_addr_i15_i_i_i_i_i_i=$this1_i_i63_i_i_i_i;
 var $this1_i16_i_i_i_i_i_i=$this_addr_i15_i_i_i_i_i_i;
 var $__r__i17_i_i_i_i_i_i=(($this1_i16_i_i_i_i_i_i)|0);
 $this_addr_i_i14_i_i_i_i_i_i=$__r__i17_i_i_i_i_i_i;
 var $this1_i_i18_i_i_i_i_i_i=$this_addr_i_i14_i_i_i_i_i_i;
 var $159=$this1_i_i18_i_i_i_i_i_i;
 $this_addr_i_i_i13_i_i_i_i_i_i=$159;
 var $this1_i_i_i19_i_i_i_i_i_i=$this_addr_i_i_i13_i_i_i_i_i_i;
 var $__first__i_i_i20_i_i_i_i_i_i=(($this1_i_i_i19_i_i_i_i_i_i)|0);
 var $160=(($__first__i_i_i20_i_i_i_i_i_i)|0);
 var $__l_i_i_i_i_i_i_i=$160;
 var $__data__i21_i_i_i_i_i_i=(($__l_i_i_i_i_i_i_i+8)|0);
 var $161=HEAP32[(($__data__i21_i_i_i_i_i_i)>>2)];
 var $cond_i_i_i_i_i_i=$161;label=44;break;
 case 43: 
 $this_addr_i6_i_i_i_i_i_i=$this1_i_i63_i_i_i_i;
 var $this1_i7_i_i_i_i_i_i=$this_addr_i6_i_i_i_i_i_i;
 var $__r__i8_i_i_i_i_i_i=(($this1_i7_i_i_i_i_i_i)|0);
 $this_addr_i_i5_i_i_i_i_i_i=$__r__i8_i_i_i_i_i_i;
 var $this1_i_i9_i_i_i_i_i_i=$this_addr_i_i5_i_i_i_i_i_i;
 var $162=$this1_i_i9_i_i_i_i_i_i;
 $this_addr_i_i_i4_i_i_i_i_i_i=$162;
 var $this1_i_i_i10_i_i_i_i_i_i=$this_addr_i_i_i4_i_i_i_i_i_i;
 var $__first__i_i_i11_i_i_i_i_i_i=(($this1_i_i_i10_i_i_i_i_i_i)|0);
 var $163=(($__first__i_i_i11_i_i_i_i_i_i)|0);
 var $__s_i12_i_i_i_i_i_i=$163;
 var $__data__i_i_i_i_i_i_i=(($__s_i12_i_i_i_i_i_i+1)|0);
 var $arrayidx_i_i_i_i_i_i_i=(($__data__i_i_i_i_i_i_i)|0);
 $__r_addr_i_i_i_i_i_i_i_i=$arrayidx_i_i_i_i_i_i_i;
 var $164=$__r_addr_i_i_i_i_i_i_i_i;
 $__x_addr_i_i_i_i_i_i_i_i_i=$164;
 var $165=$__x_addr_i_i_i_i_i_i_i_i_i;
 var $cond_i_i_i_i_i_i=$165;label=44;break;
 case 44: 
 var $cond_i_i_i_i_i_i;
 $__p_addr_i_i_i_i_i_i=$cond_i_i_i_i_i_i;
 var $166=$__p_addr_i_i_i_i_i_i;
 $__a_addr_i_i_i_i_i=$__lhs_sz_i_i_i_i;
 $__b_addr_i_i_i_i_i=$__rhs_sz_i_i_i_i;
 var $167=$__a_addr_i_i_i_i_i;
 var $168=$__b_addr_i_i_i_i_i;
 var $tmp_i_i_i_i_i=$agg_tmp1_i_i_i_i_i;
 var $tmp2_i_i_i_i_i=$agg_tmp_i_i_i_i_i;
 assert(1 % 1 === 0);HEAP8[($tmp_i_i_i_i_i)]=HEAP8[($tmp2_i_i_i_i_i)];
 $__a_addr_i_i_i_i_i_i=$167;
 $__b_addr_i_i_i_i_i_i=$168;
 var $169=$__b_addr_i_i_i_i_i_i;
 var $170=$__a_addr_i_i_i_i_i_i;
 $this_addr_i_i_i56_i_i_i_i=$agg_tmp1_i_i_i_i_i;
 $__x_addr_i_i_i_i_i_i_i=$169;
 $__y_addr_i_i_i_i_i_i_i=$170;
 var $this1_i_i_i57_i_i_i_i=$this_addr_i_i_i56_i_i_i_i;
 var $171=$__x_addr_i_i_i_i_i_i_i;
 var $172=HEAP32[(($171)>>2)];
 var $173=$__y_addr_i_i_i_i_i_i_i;
 var $174=HEAP32[(($173)>>2)];
 var $cmp_i_i_i_i_i_i_i=($172>>>0)<($174>>>0);
 if($cmp_i_i_i_i_i_i_i){label=45;break;}else{label=46;break;}
 case 45: 
 var $175=$__b_addr_i_i_i_i_i_i;
 var $cond_lvalue_i_i_i_i_i_i=$175;label=47;break;
 case 46: 
 var $176=$__a_addr_i_i_i_i_i_i;
 var $cond_lvalue_i_i_i_i_i_i=$176;label=47;break;
 case 47: 
 var $cond_lvalue_i_i_i_i_i_i;
 var $177=HEAP32[(($cond_lvalue_i_i_i_i_i_i)>>2)];
 $__s1_addr_i_i_i_i_i=$153;
 $__s2_addr_i_i_i_i_i=$166;
 $__n_addr_i_i_i_i_i=$177;
 var $178=$__s1_addr_i_i_i_i_i;
 var $179=$__s2_addr_i_i_i_i_i;
 var $180=$__n_addr_i_i_i_i_i;
 var $call_i14_i_i_i_i=(function() { try { __THREW__ = 0; return _memcmp($178,$179,$180) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=48;break; } else { label=50;break; }
 case 48: 
 $__result_i_i_i_i=$call_i14_i_i_i_i;
 var $181=$__result_i_i_i_i;
 var $cmp_i_i_i_i=($181|0)!=0;
 if($cmp_i_i_i_i){label=49;break;}else{label=51;break;}
 case 49: 
 var $182=$__result_i_i_i_i;
 $retval_i_i_i_i=$182;
 label=56;break;
 case 50: 
 var $183$0 = ___cxa_find_matching_catch(-1, -1); var $183$1 = tempRet0;
 var $184=$183$0;
 $exn_slot_i_i_i_i=$184;
 var $185=$183$1;
 $ehselector_slot_i_i_i_i=$185;
 var $exn_i_i_i_i=$exn_slot_i_i_i_i;
 ___cxa_call_unexpected($exn_i_i_i_i);
 throw "Reached an unreachable!";
 case 51: 
 var $186=HEAP32[(($__lhs_sz_i_i_i_i)>>2)];
 var $187=HEAP32[(($__rhs_sz_i_i_i_i)>>2)];
 var $cmp8_i_i_i_i=($186>>>0)<($187>>>0);
 if($cmp8_i_i_i_i){label=52;break;}else{label=53;break;}
 case 52: 
 $retval_i_i_i_i=-1;
 label=56;break;
 case 53: 
 var $188=HEAP32[(($__lhs_sz_i_i_i_i)>>2)];
 var $189=HEAP32[(($__rhs_sz_i_i_i_i)>>2)];
 var $cmp11_i_i_i_i=($188>>>0)>($189>>>0);
 if($cmp11_i_i_i_i){label=54;break;}else{label=55;break;}
 case 54: 
 $retval_i_i_i_i=1;
 label=56;break;
 case 55: 
 $retval_i_i_i_i=0;
 label=56;break;
 case 56: 
 var $190=$retval_i_i_i_i;
 var $cmp_i_i_i=($190|0)<0;
 if($cmp_i_i_i){label=57;break;}else{label=61;break;}
 case 57: 
 var $191=$__nd;
 var $192=$191;
 var $__right_=(($192+4)|0);
 var $193=HEAP32[(($__right_)>>2)];
 $this_addr_i_i40=$tmp17;
 $_addr_i_i=-1;
 var $this1_i_i41=$this_addr_i_i40;
 var $194=$_addr_i_i;
 $this_addr_i_i_i39=$this1_i_i41;
 $_addr_i_i_i=$194;
 var $this1_i_i_i42=$this_addr_i_i_i39;
 var $__lx_i_i_i=(($this1_i_i_i42)|0);
 HEAP32[(($__lx_i_i_i)>>2)]=0;
 $this_addr_i37=$tmp17;
 var $this1_i38=$this_addr_i37;
 var $cmp19=($193|0)!=0;
 if($cmp19){label=58;break;}else{label=59;break;}
 case 58: 
 var $195=$__nd;
 var $196=$195;
 var $__right_21=(($196+4)|0);
 var $197=HEAP32[(($__right_21)>>2)];
 var $198=$197;
 $__nd=$198;
 label=60;break;
 case 59: 
 var $199=$__nd;
 var $200=$199;
 var $201=$__parent_addr;
 HEAP32[(($201)>>2)]=$200;
 var $202=$__parent_addr;
 var $203=HEAP32[(($202)>>2)];
 var $__right_23=(($203+4)|0);
 $retval=$__right_23;
 label=65;break;
 case 60: 
 label=62;break;
 case 61: 
 var $204=$__nd;
 var $205=$204;
 var $206=$__parent_addr;
 HEAP32[(($206)>>2)]=$205;
 var $207=$__parent_addr;
 $retval=$207;
 label=65;break;
 case 62: 
 label=63;break;
 case 63: 
 label=3;break;
 case 64: 
 $this_addr_i33=$this1;
 var $this1_i34=$this_addr_i33;
 var $__pair1__i=(($this1_i34+4)|0);
 $this_addr_i_i32=$__pair1__i;
 var $this1_i_i35=$this_addr_i_i32;
 var $208=$this1_i_i35;
 $this_addr_i_i_i31=$208;
 var $this1_i_i_i36=$this_addr_i_i_i31;
 var $__first__i_i_i=(($this1_i_i_i36)|0);
 $__r_addr_i_i=$__first__i_i_i;
 var $209=$__r_addr_i_i;
 $__x_addr_i_i_i=$209;
 var $210=$__x_addr_i_i_i;
 var $211=$210;
 var $212=$211;
 var $213=$212;
 var $214=$213;
 var $215=$__parent_addr;
 HEAP32[(($215)>>2)]=$214;
 var $216=$__parent_addr;
 var $217=HEAP32[(($216)>>2)];
 var $218=$217;
 var $__left_30=(($218)|0);
 $retval=$__left_30;
 label=65;break;
 case 65: 
 var $219=$retval;
 STACKTOP=sp;return $219;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPfEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE16__construct_nodeERKS9_($agg_result,$this,$__v){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+520)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $this_addr_i_i13_i_i_i255;
 var $this_addr_i14_i_i_i256;
 var $this_addr_i_i8_i_i_i257;
 var $this_addr_i9_i_i_i258;
 var $_addr_i_i7_i_i_i_i259;
 var $__p_addr_i_i8_i_i_i_i260;
 var $agg_tmp1_i_i_i_i_i261=sp;
 var $__a_addr_i9_i_i_i_i262;
 var $__p_addr_i10_i_i_i_i263;
 var $agg_tmp_i_i_i_i_i264=(sp)+(8);
 var $ref_tmp_i_i_i_i_i265=(sp)+(16);
 var $this_addr_i_i_i_i_i_i266;
 var $__p_addr_i_i_i_i_i_i267;
 var $_addr_i_i_i_i_i_i268;
 var $__a_addr_i_i_i_i_i269;
 var $__p_addr_i_i_i_i_i270;
 var $__n_addr_i_i_i_i_i271;
 var $__x_addr_i_i_i_i_i272;
 var $this_addr_i6_i_i_i273;
 var $__p_addr_i_i_i_i274;
 var $exn_slot_i_i_i_i275;
 var $ehselector_slot_i_i_i_i276;
 var $this_addr_i_i_i_i_i277;
 var $this_addr_i_i_i_i278;
 var $this_addr_i_i_i279;
 var $__p_addr_i_i_i280;
 var $__tmp_i_i_i281;
 var $this_addr_i_i282;
 var $this_addr_i283;
 var $this_addr_i_i13_i_i_i189;
 var $this_addr_i14_i_i_i190;
 var $this_addr_i_i8_i_i_i191;
 var $this_addr_i9_i_i_i192;
 var $_addr_i_i7_i_i_i_i193;
 var $__p_addr_i_i8_i_i_i_i194;
 var $agg_tmp1_i_i_i_i_i195=(sp)+(24);
 var $__a_addr_i9_i_i_i_i196;
 var $__p_addr_i10_i_i_i_i197;
 var $agg_tmp_i_i_i_i_i198=(sp)+(32);
 var $ref_tmp_i_i_i_i_i199=(sp)+(40);
 var $this_addr_i_i_i_i_i_i200;
 var $__p_addr_i_i_i_i_i_i201;
 var $_addr_i_i_i_i_i_i202;
 var $__a_addr_i_i_i_i_i203;
 var $__p_addr_i_i_i_i_i204;
 var $__n_addr_i_i_i_i_i205;
 var $__x_addr_i_i_i_i_i206;
 var $this_addr_i6_i_i_i207;
 var $__p_addr_i_i_i_i208;
 var $exn_slot_i_i_i_i209;
 var $ehselector_slot_i_i_i_i210;
 var $this_addr_i_i_i_i_i211;
 var $this_addr_i_i_i_i212;
 var $this_addr_i_i_i213;
 var $__p_addr_i_i_i214;
 var $__tmp_i_i_i215;
 var $this_addr_i_i216;
 var $this_addr_i217;
 var $this_addr_i_i4_i_i_i;
 var $this_addr_i5_i_i_i;
 var $this_addr_i_i_i21_i_i;
 var $this_addr_i_i22_i_i;
 var $this_addr_i23_i_i;
 var $__t_i_i_i;
 var $this_addr_i17_i_i;
 var $this_addr_i_i_i10_i_i;
 var $this_addr_i_i11_i_i;
 var $this_addr_i12_i_i;
 var $__t_addr_i_i_i155;
 var $__t_addr_i5_i_i_i_i156;
 var $__t_addr_i3_i_i_i_i_i157;
 var $__t_addr_i_i_i_i_i_i158;
 var $this_addr_i_i_i_i_i159;
 var $__t1_addr_i_i_i_i_i160=(sp)+(48);
 var $agg_tmp3_i_i_i_i161=(sp)+(56);
 var $__t_addr_i_i_i_i_i162;
 var $this_addr_i_i_i_i163;
 var $__t1_addr_i_i_i_i164=(sp)+(64);
 var $agg_tmp_i_i_i_i165=(sp)+(72);
 var $__t22_i_i_i166=(sp)+(80);
 var $this_addr_i8_i_i;
 var $__t1_addr_i_i_i167;
 var $agg_tmp6_i_i=(sp)+(88);
 var $this_addr_i_i_i168;
 var $this_addr_i_i169;
 var $agg_tmp_i_i170=(sp)+(96);
 var $__u2_i=(sp)+(104);
 var $this_addr_i171;
 var $agg_tmp6152=(sp)+(112);
 var $this_addr_i_i_i144;
 var $__t_addr_i_i_i145;
 var $this_addr_i_i146;
 var $__t_addr_i_i147;
 var $this_addr_i148;
 var $this_addr_i_i13_i_i_i102_i;
 var $this_addr_i14_i_i_i103_i;
 var $this_addr_i_i8_i_i_i104_i;
 var $this_addr_i9_i_i_i105_i;
 var $_addr_i_i7_i_i_i_i106_i;
 var $__p_addr_i_i8_i_i_i_i107_i;
 var $agg_tmp1_i_i_i_i_i108_i=(sp)+(120);
 var $__a_addr_i9_i_i_i_i109_i;
 var $__p_addr_i10_i_i_i_i110_i;
 var $agg_tmp_i_i_i_i_i111_i=(sp)+(128);
 var $ref_tmp_i_i_i_i_i112_i=(sp)+(136);
 var $this_addr_i_i_i_i_i_i113_i;
 var $__p_addr_i_i_i_i_i_i114_i;
 var $_addr_i_i_i_i_i_i115_i;
 var $__a_addr_i_i_i_i_i116_i;
 var $__p_addr_i_i_i_i_i117_i;
 var $__n_addr_i_i_i_i_i118_i;
 var $__x_addr_i_i_i_i_i119_i;
 var $this_addr_i6_i_i_i120_i;
 var $__p_addr_i_i_i_i121_i;
 var $exn_slot_i_i_i_i122_i;
 var $ehselector_slot_i_i_i_i123_i;
 var $this_addr_i_i_i_i_i124_i;
 var $this_addr_i_i_i_i125_i;
 var $this_addr_i_i_i126_i;
 var $__p_addr_i_i_i127_i;
 var $__tmp_i_i_i128_i;
 var $this_addr_i_i129_i;
 var $this_addr_i130_i;
 var $this_addr_i_i4_i_i_i36_i;
 var $this_addr_i5_i_i_i37_i;
 var $this_addr_i_i_i21_i_i38_i;
 var $this_addr_i_i22_i_i39_i;
 var $this_addr_i23_i_i40_i;
 var $__t_i_i_i41_i;
 var $this_addr_i17_i_i42_i;
 var $this_addr_i_i_i10_i_i43_i;
 var $this_addr_i_i11_i_i44_i;
 var $this_addr_i12_i_i45_i;
 var $__t_addr_i_i_i46_i;
 var $__t_addr_i5_i_i_i_i47_i;
 var $__t_addr_i3_i_i_i_i_i48_i;
 var $__t_addr_i_i_i_i_i_i49_i;
 var $this_addr_i_i_i_i_i50_i;
 var $__t1_addr_i_i_i_i_i51_i=(sp)+(144);
 var $agg_tmp3_i_i_i_i52_i=(sp)+(152);
 var $__t_addr_i_i_i_i_i53_i;
 var $this_addr_i_i_i_i54_i;
 var $__t1_addr_i_i_i_i55_i=(sp)+(160);
 var $agg_tmp_i_i_i_i56_i=(sp)+(168);
 var $__t22_i_i_i57_i=(sp)+(176);
 var $this_addr_i8_i_i58_i;
 var $__t1_addr_i_i_i59_i;
 var $agg_tmp6_i_i60_i=(sp)+(184);
 var $this_addr_i_i_i61_i;
 var $this_addr_i_i62_i;
 var $agg_tmp_i_i63_i=(sp)+(192);
 var $__u2_i64_i=(sp)+(200);
 var $this_addr_i65_i;
 var $agg_tmp33_i=(sp)+(208);
 var $this_addr_i_i_i25_i;
 var $__t_addr_i_i_i26_i;
 var $this_addr_i_i27_i;
 var $__t_addr_i_i28_i;
 var $this_addr_i29_i;
 var $this_addr_i_i4_i_i_i_i;
 var $this_addr_i5_i_i_i_i;
 var $this_addr_i_i_i21_i_i_i;
 var $this_addr_i_i22_i_i_i;
 var $this_addr_i23_i_i_i;
 var $__t_i_i_i_i;
 var $this_addr_i17_i_i_i;
 var $this_addr_i_i_i10_i_i_i;
 var $this_addr_i_i11_i_i_i;
 var $this_addr_i12_i_i_i;
 var $__t_addr_i_i_i_i;
 var $__t_addr_i5_i_i_i_i_i;
 var $__t_addr_i3_i_i_i_i_i_i;
 var $__t_addr_i_i_i_i_i_i_i;
 var $this_addr_i_i_i_i_i11_i;
 var $__t1_addr_i_i_i_i_i_i=(sp)+(216);
 var $agg_tmp3_i_i_i_i_i=(sp)+(224);
 var $__t_addr_i_i_i_i_i_i122;
 var $this_addr_i_i_i_i12_i;
 var $__t1_addr_i_i_i_i_i123=(sp)+(232);
 var $agg_tmp_i_i_i_i_i124=(sp)+(240);
 var $__t22_i_i_i_i=(sp)+(248);
 var $this_addr_i8_i_i_i;
 var $__t1_addr_i_i_i_i125;
 var $agg_tmp6_i_i_i=(sp)+(256);
 var $this_addr_i_i_i13_i;
 var $this_addr_i_i14_i;
 var $agg_tmp_i_i_i=(sp)+(264);
 var $__u2_i_i=(sp)+(272);
 var $this_addr_i15_i;
 var $agg_tmp19_i=(sp)+(280);
 var $this_addr_i_i13_i_i_i_i;
 var $this_addr_i14_i_i_i_i;
 var $this_addr_i_i8_i_i_i_i;
 var $this_addr_i9_i_i_i_i;
 var $_addr_i_i7_i_i_i_i_i;
 var $__p_addr_i_i8_i_i_i_i_i;
 var $agg_tmp1_i_i_i_i_i_i=(sp)+(288);
 var $__a_addr_i9_i_i_i_i_i;
 var $__p_addr_i10_i_i_i_i_i;
 var $agg_tmp_i_i_i_i_i_i=(sp)+(296);
 var $ref_tmp_i_i_i_i_i_i=(sp)+(304);
 var $this_addr_i_i_i_i_i_i_i;
 var $__p_addr_i_i_i_i_i_i_i;
 var $_addr_i_i_i_i_i_i_i;
 var $__a_addr_i_i_i_i_i_i;
 var $__p_addr_i_i_i_i_i_i126;
 var $__n_addr_i_i_i_i_i_i;
 var $__x_addr_i_i_i_i_i_i;
 var $this_addr_i6_i_i_i_i;
 var $__p_addr_i_i_i_i_i127;
 var $exn_slot_i_i_i_i_i;
 var $ehselector_slot_i_i_i_i_i;
 var $this_addr_i_i_i_i_i_i128;
 var $this_addr_i_i_i_i_i129;
 var $this_addr_i_i_i_i130;
 var $__p_addr_i_i_i_i131;
 var $__tmp_i_i_i_i;
 var $this_addr_i_i5_i;
 var $this_addr_i6_i;
 var $this_addr_i_i_i132;
 var $__t_addr_i_i_i133;
 var $this_addr_i_i134;
 var $__t_addr_i_i;
 var $__t_addr_i;
 var $agg_tmp_i=(sp)+(312);
 var $temp_lvalue_i=(sp)+(320);
 var $agg_tmp1_i=(sp)+(336);
 var $exn_slot_i;
 var $ehselector_slot_i;
 var $this_addr_i_i_i115;
 var $this_addr_i_i116;
 var $this_addr_i117;
 var $__a_addr_i113;
 var $__p_addr_i114;
 var $__a0_addr_i;
 var $__x_addr_i;
 var $this_addr_i_i13_i_i_i47;
 var $this_addr_i14_i_i_i48;
 var $this_addr_i_i8_i_i_i49;
 var $this_addr_i9_i_i_i50;
 var $_addr_i_i7_i_i_i_i51;
 var $__p_addr_i_i8_i_i_i_i52;
 var $agg_tmp1_i_i_i_i_i53=(sp)+(344);
 var $__a_addr_i9_i_i_i_i54;
 var $__p_addr_i10_i_i_i_i55;
 var $agg_tmp_i_i_i_i_i56=(sp)+(352);
 var $ref_tmp_i_i_i_i_i57=(sp)+(360);
 var $this_addr_i_i_i_i_i_i58;
 var $__p_addr_i_i_i_i_i_i59;
 var $_addr_i_i_i_i_i_i60;
 var $__a_addr_i_i_i_i_i61;
 var $__p_addr_i_i_i_i_i62;
 var $__n_addr_i_i_i_i_i63;
 var $__x_addr_i_i_i_i_i64;
 var $this_addr_i6_i_i_i65;
 var $__p_addr_i_i_i_i66;
 var $exn_slot_i_i_i_i67;
 var $ehselector_slot_i_i_i_i68;
 var $this_addr_i_i_i_i_i69;
 var $this_addr_i_i_i_i70;
 var $this_addr_i_i_i71;
 var $__p_addr_i_i_i72;
 var $__tmp_i_i_i73;
 var $this_addr_i_i74;
 var $this_addr_i75;
 var $this_addr_i_i_i41;
 var $this_addr_i_i42;
 var $this_addr_i43;
 var $__t_addr_i5_i_i;
 var $__t_addr_i5_i_i_i_i;
 var $__t_addr_i3_i_i_i_i_i;
 var $__t_addr_i_i_i_i_i_i;
 var $this_addr_i_i_i_i_i29;
 var $__t1_addr_i_i_i_i_i=(sp)+(368);
 var $agg_tmp3_i_i_i_i=(sp)+(376);
 var $__t_addr_i_i_i_i_i;
 var $this_addr_i_i_i_i30;
 var $__t1_addr_i_i_i_i=(sp)+(384);
 var $agg_tmp_i_i_i_i=(sp)+(392);
 var $__t22_i_i_i=(sp)+(400);
 var $this_addr_i_i_i31;
 var $__t1_addr_i_i_i;
 var $agg_tmp3_i_i=(sp)+(408);
 var $__t_addr_i_i_i;
 var $this_addr_i_i32;
 var $__p_addr_i_i=(sp)+(416);
 var $agg_tmp_i_i=(sp)+(424);
 var $__d2_i=(sp)+(432);
 var $this_addr_i33;
 var $__p_addr_i;
 var $agg_tmp27=(sp)+(440);
 var $this_addr_i_i23;
 var $__na_addr_i_i;
 var $this_addr_i24;
 var $__na_addr_i;
 var $this_addr_i_i21;
 var $__n_addr_i_i;
 var $_addr_i_i;
 var $__a_addr_i;
 var $__n_addr_i;
 var $this_addr_i_i13_i_i_i;
 var $this_addr_i14_i_i_i;
 var $this_addr_i_i8_i_i_i;
 var $this_addr_i9_i_i_i;
 var $_addr_i_i7_i_i_i_i;
 var $__p_addr_i_i8_i_i_i_i;
 var $agg_tmp1_i_i_i_i_i=(sp)+(448);
 var $__a_addr_i9_i_i_i_i;
 var $__p_addr_i10_i_i_i_i;
 var $agg_tmp_i_i_i_i_i=(sp)+(456);
 var $ref_tmp_i_i_i_i_i=(sp)+(464);
 var $this_addr_i_i_i_i_i_i;
 var $__p_addr_i_i_i_i_i_i;
 var $_addr_i_i_i_i_i_i;
 var $__a_addr_i_i_i_i_i;
 var $__p_addr_i_i_i_i_i;
 var $__n_addr_i_i_i_i_i;
 var $__x_addr_i_i_i_i_i;
 var $this_addr_i6_i_i_i;
 var $__p_addr_i_i_i_i;
 var $exn_slot_i_i_i_i;
 var $ehselector_slot_i_i_i_i;
 var $this_addr_i_i_i_i_i;
 var $this_addr_i_i_i_i;
 var $this_addr_i_i_i15;
 var $__p_addr_i_i_i;
 var $__tmp_i_i_i;
 var $this_addr_i_i16;
 var $this_addr_i17;
 var $this_addr_i_i_i;
 var $this_addr_i_i;
 var $this_addr_i;
 var $this_addr;
 var $__v_addr;
 var $__na;
 var $__h=(sp)+(472);
 var $agg_tmp=(sp)+(488);
 var $exn_slot;
 var $ehselector_slot;
 var $agg_tmp6=(sp)+(496);
 var $temp_lvalue=(sp)+(504);
 var $cleanup_dest_slot;
 $this_addr=$this;
 $__v_addr=$__v;
 var $this1=$this_addr;
 $this_addr_i=$this1;
 var $this1_i=$this_addr_i;
 var $__pair1__i=(($this1_i+4)|0);
 $this_addr_i_i=$__pair1__i;
 var $this1_i_i=$this_addr_i_i;
 var $0=$this1_i_i;
 $this_addr_i_i_i=$0;
 var $this1_i_i_i=$this_addr_i_i_i;
 var $1=$this1_i_i_i;
 $__na=$1;
 var $2=$__na;
 $__a_addr_i=$2;
 $__n_addr_i=1;
 var $3=$__a_addr_i;
 var $4=$__n_addr_i;
 $this_addr_i_i21=$3;
 $__n_addr_i_i=$4;
 $_addr_i_i=0;
 var $this1_i_i22=$this_addr_i_i21;
 var $5=$__n_addr_i_i;
 var $mul_i_i=($5<<5);
 var $call_i_i=__Znwj($mul_i_i);
 var $6=$call_i_i;
 var $7=$__na;
 $this_addr_i24=$agg_tmp;
 $__na_addr_i=$7;
 var $this1_i25=$this_addr_i24;
 var $8=$__na_addr_i;
 $this_addr_i_i23=$this1_i25;
 $__na_addr_i_i=$8;
 var $this1_i_i26=$this_addr_i_i23;
 var $9=(($this1_i_i26)|0);
 var $10=$__na_addr_i_i;
 HEAP32[(($9)>>2)]=$10;
 var $__value_constructed_i_i=(($this1_i_i26+4)|0);
 HEAP8[($__value_constructed_i_i)]=0;
 var $tmp=$agg_tmp27;
 var $tmp28=$agg_tmp;
 assert(8 % 1 === 0);(_memcpy($tmp, $tmp28, 8)|0);
 $this_addr_i33=$__h;
 $__p_addr_i=$6;
 var $this1_i34=$this_addr_i33;
 var $11=$__p_addr_i;
 var $tmp_i=$__d2_i;
 var $tmp3_i=$agg_tmp27;
 assert(8 % 1 === 0);(_memcpy($tmp_i, $tmp3_i, 8)|0);
 $this_addr_i_i32=$this1_i34;
 HEAP32[(($__p_addr_i_i)>>2)]=$11;
 var $this1_i_i35=$this_addr_i_i32;
 var $__ptr__i_i=(($this1_i_i35)|0);
 $__t_addr_i_i_i=$__p_addr_i_i;
 var $12=$__t_addr_i_i_i;
 var $13=HEAP32[(($12)>>2)];
 $__t_addr_i5_i_i=$__d2_i;
 var $14=$__t_addr_i5_i_i;
 var $15=$agg_tmp_i_i;
 var $16=$14;
 assert(8 % 1 === 0);HEAP32[(($15)>>2)]=HEAP32[(($16)>>2)];HEAP32[((($15)+(4))>>2)]=HEAP32[((($16)+(4))>>2)];
 var $tmp_i_i=$agg_tmp3_i_i;
 var $tmp4_i_i=$agg_tmp_i_i;
 assert(8 % 1 === 0);(_memcpy($tmp_i_i, $tmp4_i_i, 8)|0);
 $this_addr_i_i_i31=$__ptr__i_i;
 $__t1_addr_i_i_i=$13;
 var $this1_i_i_i36=$this_addr_i_i_i31;
 var $17=$__t1_addr_i_i_i;
 var $tmp_i_i_i=$__t22_i_i_i;
 var $tmp3_i_i_i=$agg_tmp3_i_i;
 assert(8 % 1 === 0);(_memcpy($tmp_i_i_i, $tmp3_i_i_i, 8)|0);
 $this_addr_i_i_i_i30=$this1_i_i_i36;
 HEAP32[(($__t1_addr_i_i_i_i)>>2)]=$17;
 var $this1_i_i_i_i37=$this_addr_i_i_i_i30;
 var $18=$this1_i_i_i_i37;
 $__t_addr_i_i_i_i_i=$__t1_addr_i_i_i_i;
 var $19=$__t_addr_i_i_i_i_i;
 var $20=HEAP32[(($19)>>2)];
 $__t_addr_i5_i_i_i_i=$__t22_i_i_i;
 var $21=$__t_addr_i5_i_i_i_i;
 var $22=$agg_tmp_i_i_i_i;
 var $23=$21;
 assert(8 % 1 === 0);HEAP32[(($22)>>2)]=HEAP32[(($23)>>2)];HEAP32[((($22)+(4))>>2)]=HEAP32[((($23)+(4))>>2)];
 var $tmp_i_i_i_i=$agg_tmp3_i_i_i_i;
 var $tmp4_i_i_i_i=$agg_tmp_i_i_i_i;
 assert(8 % 1 === 0);(_memcpy($tmp_i_i_i_i, $tmp4_i_i_i_i, 8)|0);
 $this_addr_i_i_i_i_i29=$18;
 HEAP32[(($__t1_addr_i_i_i_i_i)>>2)]=$20;
 var $this1_i_i_i_i_i38=$this_addr_i_i_i_i_i29;
 var $__first__i_i_i_i_i39=(($this1_i_i_i_i_i38)|0);
 $__t_addr_i_i_i_i_i_i=$__t1_addr_i_i_i_i_i;
 var $24=$__t_addr_i_i_i_i_i_i;
 var $25=HEAP32[(($24)>>2)];
 HEAP32[(($__first__i_i_i_i_i39)>>2)]=$25;
 var $__second__i_i_i_i_i40=(($this1_i_i_i_i_i38+4)|0);
 $__t_addr_i3_i_i_i_i_i=$agg_tmp3_i_i_i_i;
 var $26=$__t_addr_i3_i_i_i_i_i;
 var $27=$__second__i_i_i_i_i40;
 var $28=$26;
 assert(8 % 1 === 0);HEAP32[(($27)>>2)]=HEAP32[(($28)>>2)];HEAP32[((($27)+(4))>>2)]=HEAP32[((($28)+(4))>>2)];
 var $29=$__na;
 $this_addr_i43=$__h;
 var $this1_i44=$this_addr_i43;
 var $__ptr__i=(($this1_i44)|0);
 $this_addr_i_i42=$__ptr__i;
 var $this1_i_i45=$this_addr_i_i42;
 var $30=$this1_i_i45;
 $this_addr_i_i_i41=$30;
 var $this1_i_i_i46=$this_addr_i_i_i41;
 var $__first__i_i_i=(($this1_i_i_i46)|0);
 var $31=HEAP32[(($__first__i_i_i)>>2)];
 var $__value_=(($31+16)|0);
 $__x_addr_i=$__value_;
 var $32=$__x_addr_i;
 var $33=$32;
 var $34=$33;
 var $35=$__v_addr;
 $__a_addr_i113=$29;
 $__p_addr_i114=$34;
 $__a0_addr_i=$35;
 var $36=$__p_addr_i114;
 var $37=$36;
 var $new_isnull_i=($37|0)==0;
 if($new_isnull_i){var $40=0;label=4;break;}else{label=2;break;}
 case 2: 
 var $38=$37;
 var $39=$__a0_addr_i;
 (function() { try { __THREW__ = 0; return __ZNSt3__112__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPfEC1ERKS8_($38,$39) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=3;break; } else { label=34;break; }
 case 3: 
 var $40=$38;label=4;break;
 case 4: 
 var $40;
 label=5;break;
 case 5: 
 $this_addr_i117=$__h;
 var $this1_i118=$this_addr_i117;
 var $__ptr__i119=(($this1_i118)|0);
 $this_addr_i_i116=$__ptr__i119;
 var $this1_i_i120=$this_addr_i_i116;
 var $41=$this1_i_i120;
 $this_addr_i_i_i115=$41;
 var $this1_i_i_i121=$this_addr_i_i_i115;
 var $__second__i_i_i=(($this1_i_i_i121+4)|0);
 var $__value_constructed=(($__second__i_i_i+4)|0);
 HEAP8[($__value_constructed)]=1;
 $__t_addr_i=$__h;
 var $42=$__t_addr_i;
 $this_addr_i_i134=$agg_tmp1_i;
 $__t_addr_i_i=$42;
 var $this1_i_i135=$this_addr_i_i134;
 var $43=$__t_addr_i_i;
 $this_addr_i_i_i132=$this1_i_i135;
 $__t_addr_i_i_i133=$43;
 var $this1_i_i_i136=$this_addr_i_i_i132;
 var $44=(($this1_i_i_i136)|0);
 var $45=$__t_addr_i_i_i133;
 HEAP32[(($44)>>2)]=$45;
 var $tmp_i137=$agg_tmp19_i;
 var $tmp10_i=$agg_tmp1_i;
 assert(4 % 1 === 0);HEAP8[($tmp_i137)]=HEAP8[($tmp10_i)];HEAP8[((($tmp_i137)+(1))|0)]=HEAP8[((($tmp10_i)+(1))|0)];HEAP8[((($tmp_i137)+(2))|0)]=HEAP8[((($tmp10_i)+(2))|0)];HEAP8[((($tmp_i137)+(3))|0)]=HEAP8[((($tmp10_i)+(3))|0)];
 $this_addr_i15_i=$temp_lvalue_i;
 var $this1_i16_i=$this_addr_i15_i;
 var $tmp_i_i138=$__u2_i_i;
 var $tmp3_i_i=$agg_tmp19_i;
 assert(4 % 1 === 0);HEAP8[($tmp_i_i138)]=HEAP8[($tmp3_i_i)];HEAP8[((($tmp_i_i138)+(1))|0)]=HEAP8[((($tmp3_i_i)+(1))|0)];HEAP8[((($tmp_i_i138)+(2))|0)]=HEAP8[((($tmp3_i_i)+(2))|0)];HEAP8[((($tmp_i_i138)+(3))|0)]=HEAP8[((($tmp3_i_i)+(3))|0)];
 $this_addr_i_i14_i=$this1_i16_i;
 var $this1_i_i17_i=$this_addr_i_i14_i;
 var $__ptr__i_i_i139=(($this1_i_i17_i)|0);
 $this_addr_i_i_i13_i=$__u2_i_i;
 var $this1_i_i_i18_i=$this_addr_i_i_i13_i;
 var $t__i_i_i_i=(($this1_i_i_i18_i)|0);
 var $ref_i_i_i_i140=HEAP32[(($t__i_i_i_i)>>2)];
 $this_addr_i23_i_i_i=$ref_i_i_i_i140;
 var $this1_i24_i_i_i=$this_addr_i23_i_i_i;
 var $__ptr__i25_i_i_i=(($this1_i24_i_i_i)|0);
 $this_addr_i_i22_i_i_i=$__ptr__i25_i_i_i;
 var $this1_i_i26_i_i_i=$this_addr_i_i22_i_i_i;
 var $46=$this1_i_i26_i_i_i;
 $this_addr_i_i_i21_i_i_i=$46;
 var $this1_i_i_i27_i_i_i=$this_addr_i_i_i21_i_i_i;
 var $__first__i_i_i28_i_i_i=(($this1_i_i_i27_i_i_i)|0);
 var $47=HEAP32[(($__first__i_i_i28_i_i_i)>>2)];
 $__t_i_i_i_i=$47;
 var $__ptr_2_i_i_i19_i=(($this1_i24_i_i_i)|0);
 $this_addr_i5_i_i_i_i=$__ptr_2_i_i_i19_i;
 var $this1_i6_i_i_i_i=$this_addr_i5_i_i_i_i;
 var $48=$this1_i6_i_i_i_i;
 $this_addr_i_i4_i_i_i_i=$48;
 var $this1_i_i7_i_i_i_i=$this_addr_i_i4_i_i_i_i;
 var $__first__i_i8_i_i_i_i=(($this1_i_i7_i_i_i_i)|0);
 HEAP32[(($__first__i_i8_i_i_i_i)>>2)]=0;
 var $49=$__t_i_i_i_i;
 $this_addr_i17_i_i_i=$__u2_i_i;
 var $this1_i18_i_i_i=$this_addr_i17_i_i_i;
 var $t__i19_i_i_i=(($this1_i18_i_i_i)|0);
 var $ref_i20_i_i_i=HEAP32[(($t__i19_i_i_i)>>2)];
 $this_addr_i12_i_i_i=$ref_i20_i_i_i;
 var $this1_i13_i_i_i=$this_addr_i12_i_i_i;
 var $__ptr__i_i_i20_i=(($this1_i13_i_i_i)|0);
 $this_addr_i_i11_i_i_i=$__ptr__i_i_i20_i;
 var $this1_i_i14_i_i_i=$this_addr_i_i11_i_i_i;
 var $50=$this1_i_i14_i_i_i;
 $this_addr_i_i_i10_i_i_i=$50;
 var $this1_i_i_i15_i_i_i=$this_addr_i_i_i10_i_i_i;
 var $__second__i_i_i16_i_i_i=(($this1_i_i_i15_i_i_i+4)|0);
 $__t_addr_i_i_i_i=$__second__i_i_i16_i_i_i;
 var $51=$__t_addr_i_i_i_i;
 var $52=$agg_tmp_i_i_i;
 var $53=$51;
 assert(8 % 1 === 0);HEAP32[(($52)>>2)]=HEAP32[(($53)>>2)];HEAP32[((($52)+(4))>>2)]=HEAP32[((($53)+(4))>>2)];
 var $tmp_i_i_i141=$agg_tmp6_i_i_i;
 var $tmp7_i_i_i=$agg_tmp_i_i_i;
 assert(8 % 1 === 0);(_memcpy($tmp_i_i_i141, $tmp7_i_i_i, 8)|0);
 $this_addr_i8_i_i_i=$__ptr__i_i_i139;
 $__t1_addr_i_i_i_i125=$49;
 var $this1_i9_i_i_i=$this_addr_i8_i_i_i;
 var $54=$__t1_addr_i_i_i_i125;
 var $tmp_i_i_i_i142=$__t22_i_i_i_i;
 var $tmp3_i_i_i_i=$agg_tmp6_i_i_i;
 assert(8 % 1 === 0);(_memcpy($tmp_i_i_i_i142, $tmp3_i_i_i_i, 8)|0);
 $this_addr_i_i_i_i12_i=$this1_i9_i_i_i;
 HEAP32[(($__t1_addr_i_i_i_i_i123)>>2)]=$54;
 var $this1_i_i_i_i21_i=$this_addr_i_i_i_i12_i;
 var $55=$this1_i_i_i_i21_i;
 $__t_addr_i_i_i_i_i_i122=$__t1_addr_i_i_i_i_i123;
 var $56=$__t_addr_i_i_i_i_i_i122;
 var $57=HEAP32[(($56)>>2)];
 $__t_addr_i5_i_i_i_i_i=$__t22_i_i_i_i;
 var $58=$__t_addr_i5_i_i_i_i_i;
 var $59=$agg_tmp_i_i_i_i_i124;
 var $60=$58;
 assert(8 % 1 === 0);HEAP32[(($59)>>2)]=HEAP32[(($60)>>2)];HEAP32[((($59)+(4))>>2)]=HEAP32[((($60)+(4))>>2)];
 var $tmp_i_i_i_i_i143=$agg_tmp3_i_i_i_i_i;
 var $tmp4_i_i_i_i_i=$agg_tmp_i_i_i_i_i124;
 assert(8 % 1 === 0);(_memcpy($tmp_i_i_i_i_i143, $tmp4_i_i_i_i_i, 8)|0);
 $this_addr_i_i_i_i_i11_i=$55;
 HEAP32[(($__t1_addr_i_i_i_i_i_i)>>2)]=$57;
 var $this1_i_i_i_i_i22_i=$this_addr_i_i_i_i_i11_i;
 var $__first__i_i_i_i_i23_i=(($this1_i_i_i_i_i22_i)|0);
 $__t_addr_i_i_i_i_i_i_i=$__t1_addr_i_i_i_i_i_i;
 var $61=$__t_addr_i_i_i_i_i_i_i;
 var $62=HEAP32[(($61)>>2)];
 HEAP32[(($__first__i_i_i_i_i23_i)>>2)]=$62;
 var $__second__i_i_i_i_i24_i=(($this1_i_i_i_i_i22_i+4)|0);
 $__t_addr_i3_i_i_i_i_i_i=$agg_tmp3_i_i_i_i_i;
 var $63=$__t_addr_i3_i_i_i_i_i_i;
 var $64=$__second__i_i_i_i_i24_i;
 var $65=$63;
 assert(8 % 1 === 0);HEAP32[(($64)>>2)]=HEAP32[(($65)>>2)];HEAP32[((($64)+(4))>>2)]=HEAP32[((($65)+(4))>>2)];
 $this_addr_i29_i=$temp_lvalue_i;
 var $this1_i30_i=$this_addr_i29_i;
 $this_addr_i_i27_i=$agg_tmp_i;
 $__t_addr_i_i28_i=$this1_i30_i;
 var $this1_i_i31_i=$this_addr_i_i27_i;
 var $66=$__t_addr_i_i28_i;
 $this_addr_i_i_i25_i=$this1_i_i31_i;
 $__t_addr_i_i_i26_i=$66;
 var $this1_i_i_i32_i=$this_addr_i_i_i25_i;
 var $67=(($this1_i_i_i32_i)|0);
 var $68=$__t_addr_i_i_i26_i;
 HEAP32[(($67)>>2)]=$68;
 var $tmp34_i=$agg_tmp33_i;
 var $tmp35_i=$agg_tmp_i;
 assert(4 % 1 === 0);HEAP8[($tmp34_i)]=HEAP8[($tmp35_i)];HEAP8[((($tmp34_i)+(1))|0)]=HEAP8[((($tmp35_i)+(1))|0)];HEAP8[((($tmp34_i)+(2))|0)]=HEAP8[((($tmp35_i)+(2))|0)];HEAP8[((($tmp34_i)+(3))|0)]=HEAP8[((($tmp35_i)+(3))|0)];
 $this_addr_i65_i=$temp_lvalue;
 var $this1_i66_i=$this_addr_i65_i;
 var $tmp_i67_i=$__u2_i64_i;
 var $tmp3_i68_i=$agg_tmp33_i;
 assert(4 % 1 === 0);HEAP8[($tmp_i67_i)]=HEAP8[($tmp3_i68_i)];HEAP8[((($tmp_i67_i)+(1))|0)]=HEAP8[((($tmp3_i68_i)+(1))|0)];HEAP8[((($tmp_i67_i)+(2))|0)]=HEAP8[((($tmp3_i68_i)+(2))|0)];HEAP8[((($tmp_i67_i)+(3))|0)]=HEAP8[((($tmp3_i68_i)+(3))|0)];
 $this_addr_i_i62_i=$this1_i66_i;
 var $this1_i_i69_i=$this_addr_i_i62_i;
 var $__ptr__i_i70_i=(($this1_i_i69_i)|0);
 $this_addr_i_i_i61_i=$__u2_i64_i;
 var $this1_i_i_i71_i=$this_addr_i_i_i61_i;
 var $t__i_i_i72_i=(($this1_i_i_i71_i)|0);
 var $ref_i_i_i73_i=HEAP32[(($t__i_i_i72_i)>>2)];
 $this_addr_i23_i_i40_i=$ref_i_i_i73_i;
 var $this1_i24_i_i74_i=$this_addr_i23_i_i40_i;
 var $__ptr__i25_i_i75_i=(($this1_i24_i_i74_i)|0);
 $this_addr_i_i22_i_i39_i=$__ptr__i25_i_i75_i;
 var $this1_i_i26_i_i76_i=$this_addr_i_i22_i_i39_i;
 var $69=$this1_i_i26_i_i76_i;
 $this_addr_i_i_i21_i_i38_i=$69;
 var $this1_i_i_i27_i_i77_i=$this_addr_i_i_i21_i_i38_i;
 var $__first__i_i_i28_i_i78_i=(($this1_i_i_i27_i_i77_i)|0);
 var $70=HEAP32[(($__first__i_i_i28_i_i78_i)>>2)];
 $__t_i_i_i41_i=$70;
 var $__ptr_2_i_i_i79_i=(($this1_i24_i_i74_i)|0);
 $this_addr_i5_i_i_i37_i=$__ptr_2_i_i_i79_i;
 var $this1_i6_i_i_i80_i=$this_addr_i5_i_i_i37_i;
 var $71=$this1_i6_i_i_i80_i;
 $this_addr_i_i4_i_i_i36_i=$71;
 var $this1_i_i7_i_i_i81_i=$this_addr_i_i4_i_i_i36_i;
 var $__first__i_i8_i_i_i82_i=(($this1_i_i7_i_i_i81_i)|0);
 HEAP32[(($__first__i_i8_i_i_i82_i)>>2)]=0;
 var $72=$__t_i_i_i41_i;
 $this_addr_i17_i_i42_i=$__u2_i64_i;
 var $this1_i18_i_i83_i=$this_addr_i17_i_i42_i;
 var $t__i19_i_i84_i=(($this1_i18_i_i83_i)|0);
 var $ref_i20_i_i85_i=HEAP32[(($t__i19_i_i84_i)>>2)];
 $this_addr_i12_i_i45_i=$ref_i20_i_i85_i;
 var $this1_i13_i_i86_i=$this_addr_i12_i_i45_i;
 var $__ptr__i_i_i87_i=(($this1_i13_i_i86_i)|0);
 $this_addr_i_i11_i_i44_i=$__ptr__i_i_i87_i;
 var $this1_i_i14_i_i88_i=$this_addr_i_i11_i_i44_i;
 var $73=$this1_i_i14_i_i88_i;
 $this_addr_i_i_i10_i_i43_i=$73;
 var $this1_i_i_i15_i_i89_i=$this_addr_i_i_i10_i_i43_i;
 var $__second__i_i_i16_i_i90_i=(($this1_i_i_i15_i_i89_i+4)|0);
 $__t_addr_i_i_i46_i=$__second__i_i_i16_i_i90_i;
 var $74=$__t_addr_i_i_i46_i;
 var $75=$agg_tmp_i_i63_i;
 var $76=$74;
 assert(8 % 1 === 0);HEAP32[(($75)>>2)]=HEAP32[(($76)>>2)];HEAP32[((($75)+(4))>>2)]=HEAP32[((($76)+(4))>>2)];
 var $tmp_i_i91_i=$agg_tmp6_i_i60_i;
 var $tmp7_i_i92_i=$agg_tmp_i_i63_i;
 assert(8 % 1 === 0);(_memcpy($tmp_i_i91_i, $tmp7_i_i92_i, 8)|0);
 $this_addr_i8_i_i58_i=$__ptr__i_i70_i;
 $__t1_addr_i_i_i59_i=$72;
 var $this1_i9_i_i93_i=$this_addr_i8_i_i58_i;
 var $77=$__t1_addr_i_i_i59_i;
 var $tmp_i_i_i94_i=$__t22_i_i_i57_i;
 var $tmp3_i_i_i95_i=$agg_tmp6_i_i60_i;
 assert(8 % 1 === 0);(_memcpy($tmp_i_i_i94_i, $tmp3_i_i_i95_i, 8)|0);
 $this_addr_i_i_i_i54_i=$this1_i9_i_i93_i;
 HEAP32[(($__t1_addr_i_i_i_i55_i)>>2)]=$77;
 var $this1_i_i_i_i96_i=$this_addr_i_i_i_i54_i;
 var $78=$this1_i_i_i_i96_i;
 $__t_addr_i_i_i_i_i53_i=$__t1_addr_i_i_i_i55_i;
 var $79=$__t_addr_i_i_i_i_i53_i;
 var $80=HEAP32[(($79)>>2)];
 $__t_addr_i5_i_i_i_i47_i=$__t22_i_i_i57_i;
 var $81=$__t_addr_i5_i_i_i_i47_i;
 var $82=$agg_tmp_i_i_i_i56_i;
 var $83=$81;
 assert(8 % 1 === 0);HEAP32[(($82)>>2)]=HEAP32[(($83)>>2)];HEAP32[((($82)+(4))>>2)]=HEAP32[((($83)+(4))>>2)];
 var $tmp_i_i_i_i97_i=$agg_tmp3_i_i_i_i52_i;
 var $tmp4_i_i_i_i98_i=$agg_tmp_i_i_i_i56_i;
 assert(8 % 1 === 0);(_memcpy($tmp_i_i_i_i97_i, $tmp4_i_i_i_i98_i, 8)|0);
 $this_addr_i_i_i_i_i50_i=$78;
 HEAP32[(($__t1_addr_i_i_i_i_i51_i)>>2)]=$80;
 var $this1_i_i_i_i_i99_i=$this_addr_i_i_i_i_i50_i;
 var $__first__i_i_i_i_i100_i=(($this1_i_i_i_i_i99_i)|0);
 $__t_addr_i_i_i_i_i_i49_i=$__t1_addr_i_i_i_i_i51_i;
 var $84=$__t_addr_i_i_i_i_i_i49_i;
 var $85=HEAP32[(($84)>>2)];
 HEAP32[(($__first__i_i_i_i_i100_i)>>2)]=$85;
 var $__second__i_i_i_i_i101_i=(($this1_i_i_i_i_i99_i+4)|0);
 $__t_addr_i3_i_i_i_i_i48_i=$agg_tmp3_i_i_i_i52_i;
 var $86=$__t_addr_i3_i_i_i_i_i48_i;
 var $87=$__second__i_i_i_i_i101_i;
 var $88=$86;
 assert(8 % 1 === 0);HEAP32[(($87)>>2)]=HEAP32[(($88)>>2)];HEAP32[((($87)+(4))>>2)]=HEAP32[((($88)+(4))>>2)];
 $this_addr_i130_i=$temp_lvalue_i;
 var $this1_i131_i=$this_addr_i130_i;
 $this_addr_i_i129_i=$this1_i131_i;
 var $this1_i_i132_i=$this_addr_i_i129_i;
 $this_addr_i_i_i126_i=$this1_i_i132_i;
 $__p_addr_i_i_i127_i=0;
 var $this1_i_i_i133_i=$this_addr_i_i_i126_i;
 var $__ptr__i_i_i134_i=(($this1_i_i_i133_i)|0);
 $this_addr_i_i_i_i125_i=$__ptr__i_i_i134_i;
 var $this1_i_i_i_i135_i=$this_addr_i_i_i_i125_i;
 var $89=$this1_i_i_i_i135_i;
 $this_addr_i_i_i_i_i124_i=$89;
 var $this1_i_i_i_i_i136_i=$this_addr_i_i_i_i_i124_i;
 var $__first__i_i_i_i_i137_i=(($this1_i_i_i_i_i136_i)|0);
 var $90=HEAP32[(($__first__i_i_i_i_i137_i)>>2)];
 $__tmp_i_i_i128_i=$90;
 var $91=$__p_addr_i_i_i127_i;
 var $__ptr_2_i_i_i138_i=(($this1_i_i_i133_i)|0);
 $this_addr_i9_i_i_i105_i=$__ptr_2_i_i_i138_i;
 var $this1_i10_i_i_i139_i=$this_addr_i9_i_i_i105_i;
 var $92=$this1_i10_i_i_i139_i;
 $this_addr_i_i8_i_i_i104_i=$92;
 var $this1_i_i11_i_i_i140_i=$this_addr_i_i8_i_i_i104_i;
 var $__first__i_i12_i_i_i141_i=(($this1_i_i11_i_i_i140_i)|0);
 HEAP32[(($__first__i_i12_i_i_i141_i)>>2)]=$91;
 var $93=$__tmp_i_i_i128_i;
 var $tobool_i_i_i142_i=($93|0)!=0;
 if($tobool_i_i_i142_i){label=6;break;}else{label=13;break;}
 case 6: 
 var $__ptr_4_i_i_i143_i=(($this1_i_i_i133_i)|0);
 $this_addr_i14_i_i_i103_i=$__ptr_4_i_i_i143_i;
 var $this1_i15_i_i_i144_i=$this_addr_i14_i_i_i103_i;
 var $94=$this1_i15_i_i_i144_i;
 $this_addr_i_i13_i_i_i102_i=$94;
 var $this1_i_i16_i_i_i145_i=$this_addr_i_i13_i_i_i102_i;
 var $__second__i_i_i_i_i146_i=(($this1_i_i16_i_i_i145_i+4)|0);
 var $95=$__tmp_i_i_i128_i;
 $this_addr_i6_i_i_i120_i=$__second__i_i_i_i_i146_i;
 $__p_addr_i_i_i_i121_i=$95;
 var $this1_i7_i_i_i147_i=$this_addr_i6_i_i_i120_i;
 var $__value_constructed_i_i_i_i148_i=(($this1_i7_i_i_i147_i+4)|0);
 var $96=HEAP8[($__value_constructed_i_i_i_i148_i)];
 var $tobool_i_i_i_i149_i=(($96)&1);
 if($tobool_i_i_i_i149_i){label=7;break;}else{label=10;break;}
 case 7: 
 var $__na__i_i_i_i151_i=(($this1_i7_i_i_i147_i)|0);
 var $ref_i_i_i_i152_i=HEAP32[(($__na__i_i_i_i151_i)>>2)];
 var $97=$__p_addr_i_i_i_i121_i;
 var $__value__i_i_i_i153_i=(($97+16)|0);
 $__x_addr_i_i_i_i_i119_i=$__value__i_i_i_i153_i;
 var $98=$__x_addr_i_i_i_i_i119_i;
 var $99=$98;
 var $100=$99;
 $__a_addr_i9_i_i_i_i109_i=$ref_i_i_i_i152_i;
 $__p_addr_i10_i_i_i_i110_i=$100;
 var $101=$ref_tmp_i_i_i_i_i112_i;
 var $102=$__a_addr_i9_i_i_i_i109_i;
 var $103=$__p_addr_i10_i_i_i_i110_i;
 var $tmp_i_i_i_i_i154_i=$agg_tmp1_i_i_i_i_i108_i;
 var $tmp2_i_i_i_i_i155_i=$agg_tmp_i_i_i_i_i111_i;
 assert(1 % 1 === 0);HEAP8[($tmp_i_i_i_i_i154_i)]=HEAP8[($tmp2_i_i_i_i_i155_i)];
 $_addr_i_i7_i_i_i_i106_i=$102;
 $__p_addr_i_i8_i_i_i_i107_i=$103;
 var $104=$__p_addr_i_i8_i_i_i_i107_i;
 (function() { try { __THREW__ = 0; return __ZNSt3__112__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPfED1Ev($104) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=8;break; } else { label=9;break; }
 case 8: 
 label=10;break;
 case 9: 
 var $105$0 = ___cxa_find_matching_catch(-1, -1); var $105$1 = tempRet0;
 var $106=$105$0;
 $exn_slot_i_i_i_i122_i=$106;
 var $107=$105$1;
 $ehselector_slot_i_i_i_i123_i=$107;
 var $exn_i_i_i_i158_i=$exn_slot_i_i_i_i122_i;
 ___cxa_call_unexpected($exn_i_i_i_i158_i);
 throw "Reached an unreachable!";
 case 10: 
 var $108=$__p_addr_i_i_i_i121_i;
 var $tobool2_i_i_i_i160_i=($108|0)!=0;
 if($tobool2_i_i_i_i160_i){label=11;break;}else{label=12;break;}
 case 11: 
 var $__na_4_i_i_i_i162_i=(($this1_i7_i_i_i147_i)|0);
 var $ref5_i_i_i_i163_i=HEAP32[(($__na_4_i_i_i_i162_i)>>2)];
 var $109=$__p_addr_i_i_i_i121_i;
 $__a_addr_i_i_i_i_i116_i=$ref5_i_i_i_i163_i;
 $__p_addr_i_i_i_i_i117_i=$109;
 $__n_addr_i_i_i_i_i118_i=1;
 var $110=$__a_addr_i_i_i_i_i116_i;
 var $111=$__p_addr_i_i_i_i_i117_i;
 var $112=$__n_addr_i_i_i_i_i118_i;
 $this_addr_i_i_i_i_i_i113_i=$110;
 $__p_addr_i_i_i_i_i_i114_i=$111;
 $_addr_i_i_i_i_i_i115_i=$112;
 var $this1_i_i_i_i_i_i164_i=$this_addr_i_i_i_i_i_i113_i;
 var $113=$__p_addr_i_i_i_i_i_i114_i;
 var $114=$113;
 __ZdlPv($114);
 label=12;break;
 case 12: 
 label=13;break;
 case 13: 
 label=14;break;
 case 14: 
 $this_addr_i148=$temp_lvalue;
 var $this1_i149=$this_addr_i148;
 $this_addr_i_i146=$agg_tmp6;
 $__t_addr_i_i147=$this1_i149;
 var $this1_i_i150=$this_addr_i_i146;
 var $115=$__t_addr_i_i147;
 $this_addr_i_i_i144=$this1_i_i150;
 $__t_addr_i_i_i145=$115;
 var $this1_i_i_i151=$this_addr_i_i_i144;
 var $116=(($this1_i_i_i151)|0);
 var $117=$__t_addr_i_i_i145;
 HEAP32[(($116)>>2)]=$117;
 label=15;break;
 case 15: 
 var $tmp153=$agg_tmp6152;
 var $tmp154=$agg_tmp6;
 assert(4 % 1 === 0);HEAP8[($tmp153)]=HEAP8[($tmp154)];HEAP8[((($tmp153)+(1))|0)]=HEAP8[((($tmp154)+(1))|0)];HEAP8[((($tmp153)+(2))|0)]=HEAP8[((($tmp154)+(2))|0)];HEAP8[((($tmp153)+(3))|0)]=HEAP8[((($tmp154)+(3))|0)];
 $this_addr_i171=$agg_result;
 var $this1_i172=$this_addr_i171;
 var $tmp_i173=$__u2_i;
 var $tmp3_i174=$agg_tmp6152;
 assert(4 % 1 === 0);HEAP8[($tmp_i173)]=HEAP8[($tmp3_i174)];HEAP8[((($tmp_i173)+(1))|0)]=HEAP8[((($tmp3_i174)+(1))|0)];HEAP8[((($tmp_i173)+(2))|0)]=HEAP8[((($tmp3_i174)+(2))|0)];HEAP8[((($tmp_i173)+(3))|0)]=HEAP8[((($tmp3_i174)+(3))|0)];
 $this_addr_i_i169=$this1_i172;
 var $this1_i_i175=$this_addr_i_i169;
 var $__ptr__i_i176=(($this1_i_i175)|0);
 $this_addr_i_i_i168=$__u2_i;
 var $this1_i_i_i177=$this_addr_i_i_i168;
 var $t__i_i_i=(($this1_i_i_i177)|0);
 var $ref_i_i_i=HEAP32[(($t__i_i_i)>>2)];
 $this_addr_i23_i_i=$ref_i_i_i;
 var $this1_i24_i_i=$this_addr_i23_i_i;
 var $__ptr__i25_i_i=(($this1_i24_i_i)|0);
 $this_addr_i_i22_i_i=$__ptr__i25_i_i;
 var $this1_i_i26_i_i=$this_addr_i_i22_i_i;
 var $118=$this1_i_i26_i_i;
 $this_addr_i_i_i21_i_i=$118;
 var $this1_i_i_i27_i_i=$this_addr_i_i_i21_i_i;
 var $__first__i_i_i28_i_i=(($this1_i_i_i27_i_i)|0);
 var $119=HEAP32[(($__first__i_i_i28_i_i)>>2)];
 $__t_i_i_i=$119;
 var $__ptr_2_i_i_i178=(($this1_i24_i_i)|0);
 $this_addr_i5_i_i_i=$__ptr_2_i_i_i178;
 var $this1_i6_i_i_i=$this_addr_i5_i_i_i;
 var $120=$this1_i6_i_i_i;
 $this_addr_i_i4_i_i_i=$120;
 var $this1_i_i7_i_i_i=$this_addr_i_i4_i_i_i;
 var $__first__i_i8_i_i_i=(($this1_i_i7_i_i_i)|0);
 HEAP32[(($__first__i_i8_i_i_i)>>2)]=0;
 var $121=$__t_i_i_i;
 $this_addr_i17_i_i=$__u2_i;
 var $this1_i18_i_i=$this_addr_i17_i_i;
 var $t__i19_i_i=(($this1_i18_i_i)|0);
 var $ref_i20_i_i=HEAP32[(($t__i19_i_i)>>2)];
 $this_addr_i12_i_i=$ref_i20_i_i;
 var $this1_i13_i_i=$this_addr_i12_i_i;
 var $__ptr__i_i_i179=(($this1_i13_i_i)|0);
 $this_addr_i_i11_i_i=$__ptr__i_i_i179;
 var $this1_i_i14_i_i=$this_addr_i_i11_i_i;
 var $122=$this1_i_i14_i_i;
 $this_addr_i_i_i10_i_i=$122;
 var $this1_i_i_i15_i_i=$this_addr_i_i_i10_i_i;
 var $__second__i_i_i16_i_i=(($this1_i_i_i15_i_i+4)|0);
 $__t_addr_i_i_i155=$__second__i_i_i16_i_i;
 var $123=$__t_addr_i_i_i155;
 var $124=$agg_tmp_i_i170;
 var $125=$123;
 assert(8 % 1 === 0);HEAP32[(($124)>>2)]=HEAP32[(($125)>>2)];HEAP32[((($124)+(4))>>2)]=HEAP32[((($125)+(4))>>2)];
 var $tmp_i_i180=$agg_tmp6_i_i;
 var $tmp7_i_i=$agg_tmp_i_i170;
 assert(8 % 1 === 0);(_memcpy($tmp_i_i180, $tmp7_i_i, 8)|0);
 $this_addr_i8_i_i=$__ptr__i_i176;
 $__t1_addr_i_i_i167=$121;
 var $this1_i9_i_i=$this_addr_i8_i_i;
 var $126=$__t1_addr_i_i_i167;
 var $tmp_i_i_i181=$__t22_i_i_i166;
 var $tmp3_i_i_i182=$agg_tmp6_i_i;
 assert(8 % 1 === 0);(_memcpy($tmp_i_i_i181, $tmp3_i_i_i182, 8)|0);
 $this_addr_i_i_i_i163=$this1_i9_i_i;
 HEAP32[(($__t1_addr_i_i_i_i164)>>2)]=$126;
 var $this1_i_i_i_i183=$this_addr_i_i_i_i163;
 var $127=$this1_i_i_i_i183;
 $__t_addr_i_i_i_i_i162=$__t1_addr_i_i_i_i164;
 var $128=$__t_addr_i_i_i_i_i162;
 var $129=HEAP32[(($128)>>2)];
 $__t_addr_i5_i_i_i_i156=$__t22_i_i_i166;
 var $130=$__t_addr_i5_i_i_i_i156;
 var $131=$agg_tmp_i_i_i_i165;
 var $132=$130;
 assert(8 % 1 === 0);HEAP32[(($131)>>2)]=HEAP32[(($132)>>2)];HEAP32[((($131)+(4))>>2)]=HEAP32[((($132)+(4))>>2)];
 var $tmp_i_i_i_i184=$agg_tmp3_i_i_i_i161;
 var $tmp4_i_i_i_i185=$agg_tmp_i_i_i_i165;
 assert(8 % 1 === 0);(_memcpy($tmp_i_i_i_i184, $tmp4_i_i_i_i185, 8)|0);
 $this_addr_i_i_i_i_i159=$127;
 HEAP32[(($__t1_addr_i_i_i_i_i160)>>2)]=$129;
 var $this1_i_i_i_i_i186=$this_addr_i_i_i_i_i159;
 var $__first__i_i_i_i_i187=(($this1_i_i_i_i_i186)|0);
 $__t_addr_i_i_i_i_i_i158=$__t1_addr_i_i_i_i_i160;
 var $133=$__t_addr_i_i_i_i_i_i158;
 var $134=HEAP32[(($133)>>2)];
 HEAP32[(($__first__i_i_i_i_i187)>>2)]=$134;
 var $__second__i_i_i_i_i188=(($this1_i_i_i_i_i186+4)|0);
 $__t_addr_i3_i_i_i_i_i157=$agg_tmp3_i_i_i_i161;
 var $135=$__t_addr_i3_i_i_i_i_i157;
 var $136=$__second__i_i_i_i_i188;
 var $137=$135;
 assert(8 % 1 === 0);HEAP32[(($136)>>2)]=HEAP32[(($137)>>2)];HEAP32[((($136)+(4))>>2)]=HEAP32[((($137)+(4))>>2)];
 label=16;break;
 case 16: 
 $this_addr_i217=$temp_lvalue;
 var $this1_i218=$this_addr_i217;
 $this_addr_i_i216=$this1_i218;
 var $this1_i_i219=$this_addr_i_i216;
 $this_addr_i_i_i213=$this1_i_i219;
 $__p_addr_i_i_i214=0;
 var $this1_i_i_i220=$this_addr_i_i_i213;
 var $__ptr__i_i_i221=(($this1_i_i_i220)|0);
 $this_addr_i_i_i_i212=$__ptr__i_i_i221;
 var $this1_i_i_i_i222=$this_addr_i_i_i_i212;
 var $138=$this1_i_i_i_i222;
 $this_addr_i_i_i_i_i211=$138;
 var $this1_i_i_i_i_i223=$this_addr_i_i_i_i_i211;
 var $__first__i_i_i_i_i224=(($this1_i_i_i_i_i223)|0);
 var $139=HEAP32[(($__first__i_i_i_i_i224)>>2)];
 $__tmp_i_i_i215=$139;
 var $140=$__p_addr_i_i_i214;
 var $__ptr_2_i_i_i225=(($this1_i_i_i220)|0);
 $this_addr_i9_i_i_i192=$__ptr_2_i_i_i225;
 var $this1_i10_i_i_i226=$this_addr_i9_i_i_i192;
 var $141=$this1_i10_i_i_i226;
 $this_addr_i_i8_i_i_i191=$141;
 var $this1_i_i11_i_i_i227=$this_addr_i_i8_i_i_i191;
 var $__first__i_i12_i_i_i228=(($this1_i_i11_i_i_i227)|0);
 HEAP32[(($__first__i_i12_i_i_i228)>>2)]=$140;
 var $142=$__tmp_i_i_i215;
 var $tobool_i_i_i229=($142|0)!=0;
 if($tobool_i_i_i229){label=17;break;}else{label=24;break;}
 case 17: 
 var $__ptr_4_i_i_i230=(($this1_i_i_i220)|0);
 $this_addr_i14_i_i_i190=$__ptr_4_i_i_i230;
 var $this1_i15_i_i_i231=$this_addr_i14_i_i_i190;
 var $143=$this1_i15_i_i_i231;
 $this_addr_i_i13_i_i_i189=$143;
 var $this1_i_i16_i_i_i232=$this_addr_i_i13_i_i_i189;
 var $__second__i_i_i_i_i233=(($this1_i_i16_i_i_i232+4)|0);
 var $144=$__tmp_i_i_i215;
 $this_addr_i6_i_i_i207=$__second__i_i_i_i_i233;
 $__p_addr_i_i_i_i208=$144;
 var $this1_i7_i_i_i234=$this_addr_i6_i_i_i207;
 var $__value_constructed_i_i_i_i235=(($this1_i7_i_i_i234+4)|0);
 var $145=HEAP8[($__value_constructed_i_i_i_i235)];
 var $tobool_i_i_i_i236=(($145)&1);
 if($tobool_i_i_i_i236){label=18;break;}else{label=21;break;}
 case 18: 
 var $__na__i_i_i_i238=(($this1_i7_i_i_i234)|0);
 var $ref_i_i_i_i239=HEAP32[(($__na__i_i_i_i238)>>2)];
 var $146=$__p_addr_i_i_i_i208;
 var $__value__i_i_i_i240=(($146+16)|0);
 $__x_addr_i_i_i_i_i206=$__value__i_i_i_i240;
 var $147=$__x_addr_i_i_i_i_i206;
 var $148=$147;
 var $149=$148;
 $__a_addr_i9_i_i_i_i196=$ref_i_i_i_i239;
 $__p_addr_i10_i_i_i_i197=$149;
 var $150=$ref_tmp_i_i_i_i_i199;
 var $151=$__a_addr_i9_i_i_i_i196;
 var $152=$__p_addr_i10_i_i_i_i197;
 var $tmp_i_i_i_i_i241=$agg_tmp1_i_i_i_i_i195;
 var $tmp2_i_i_i_i_i242=$agg_tmp_i_i_i_i_i198;
 assert(1 % 1 === 0);HEAP8[($tmp_i_i_i_i_i241)]=HEAP8[($tmp2_i_i_i_i_i242)];
 $_addr_i_i7_i_i_i_i193=$151;
 $__p_addr_i_i8_i_i_i_i194=$152;
 var $153=$__p_addr_i_i8_i_i_i_i194;
 (function() { try { __THREW__ = 0; return __ZNSt3__112__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPfED1Ev($153) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=19;break; } else { label=20;break; }
 case 19: 
 label=21;break;
 case 20: 
 var $154$0 = ___cxa_find_matching_catch(-1, -1); var $154$1 = tempRet0;
 var $155=$154$0;
 $exn_slot_i_i_i_i209=$155;
 var $156=$154$1;
 $ehselector_slot_i_i_i_i210=$156;
 var $exn_i_i_i_i245=$exn_slot_i_i_i_i209;
 ___cxa_call_unexpected($exn_i_i_i_i245);
 throw "Reached an unreachable!";
 case 21: 
 var $157=$__p_addr_i_i_i_i208;
 var $tobool2_i_i_i_i247=($157|0)!=0;
 if($tobool2_i_i_i_i247){label=22;break;}else{label=23;break;}
 case 22: 
 var $__na_4_i_i_i_i249=(($this1_i7_i_i_i234)|0);
 var $ref5_i_i_i_i250=HEAP32[(($__na_4_i_i_i_i249)>>2)];
 var $158=$__p_addr_i_i_i_i208;
 $__a_addr_i_i_i_i_i203=$ref5_i_i_i_i250;
 $__p_addr_i_i_i_i_i204=$158;
 $__n_addr_i_i_i_i_i205=1;
 var $159=$__a_addr_i_i_i_i_i203;
 var $160=$__p_addr_i_i_i_i_i204;
 var $161=$__n_addr_i_i_i_i_i205;
 $this_addr_i_i_i_i_i_i200=$159;
 $__p_addr_i_i_i_i_i_i201=$160;
 $_addr_i_i_i_i_i_i202=$161;
 var $this1_i_i_i_i_i_i251=$this_addr_i_i_i_i_i_i200;
 var $162=$__p_addr_i_i_i_i_i_i201;
 var $163=$162;
 __ZdlPv($163);
 label=23;break;
 case 23: 
 label=24;break;
 case 24: 
 label=25;break;
 case 25: 
 $cleanup_dest_slot=1;
 $this_addr_i283=$__h;
 var $this1_i284=$this_addr_i283;
 $this_addr_i_i282=$this1_i284;
 var $this1_i_i285=$this_addr_i_i282;
 $this_addr_i_i_i279=$this1_i_i285;
 $__p_addr_i_i_i280=0;
 var $this1_i_i_i286=$this_addr_i_i_i279;
 var $__ptr__i_i_i287=(($this1_i_i_i286)|0);
 $this_addr_i_i_i_i278=$__ptr__i_i_i287;
 var $this1_i_i_i_i288=$this_addr_i_i_i_i278;
 var $164=$this1_i_i_i_i288;
 $this_addr_i_i_i_i_i277=$164;
 var $this1_i_i_i_i_i289=$this_addr_i_i_i_i_i277;
 var $__first__i_i_i_i_i290=(($this1_i_i_i_i_i289)|0);
 var $165=HEAP32[(($__first__i_i_i_i_i290)>>2)];
 $__tmp_i_i_i281=$165;
 var $166=$__p_addr_i_i_i280;
 var $__ptr_2_i_i_i291=(($this1_i_i_i286)|0);
 $this_addr_i9_i_i_i258=$__ptr_2_i_i_i291;
 var $this1_i10_i_i_i292=$this_addr_i9_i_i_i258;
 var $167=$this1_i10_i_i_i292;
 $this_addr_i_i8_i_i_i257=$167;
 var $this1_i_i11_i_i_i293=$this_addr_i_i8_i_i_i257;
 var $__first__i_i12_i_i_i294=(($this1_i_i11_i_i_i293)|0);
 HEAP32[(($__first__i_i12_i_i_i294)>>2)]=$166;
 var $168=$__tmp_i_i_i281;
 var $tobool_i_i_i295=($168|0)!=0;
 if($tobool_i_i_i295){label=26;break;}else{label=33;break;}
 case 26: 
 var $__ptr_4_i_i_i296=(($this1_i_i_i286)|0);
 $this_addr_i14_i_i_i256=$__ptr_4_i_i_i296;
 var $this1_i15_i_i_i297=$this_addr_i14_i_i_i256;
 var $169=$this1_i15_i_i_i297;
 $this_addr_i_i13_i_i_i255=$169;
 var $this1_i_i16_i_i_i298=$this_addr_i_i13_i_i_i255;
 var $__second__i_i_i_i_i299=(($this1_i_i16_i_i_i298+4)|0);
 var $170=$__tmp_i_i_i281;
 $this_addr_i6_i_i_i273=$__second__i_i_i_i_i299;
 $__p_addr_i_i_i_i274=$170;
 var $this1_i7_i_i_i300=$this_addr_i6_i_i_i273;
 var $__value_constructed_i_i_i_i301=(($this1_i7_i_i_i300+4)|0);
 var $171=HEAP8[($__value_constructed_i_i_i_i301)];
 var $tobool_i_i_i_i302=(($171)&1);
 if($tobool_i_i_i_i302){label=27;break;}else{label=30;break;}
 case 27: 
 var $__na__i_i_i_i304=(($this1_i7_i_i_i300)|0);
 var $ref_i_i_i_i305=HEAP32[(($__na__i_i_i_i304)>>2)];
 var $172=$__p_addr_i_i_i_i274;
 var $__value__i_i_i_i306=(($172+16)|0);
 $__x_addr_i_i_i_i_i272=$__value__i_i_i_i306;
 var $173=$__x_addr_i_i_i_i_i272;
 var $174=$173;
 var $175=$174;
 $__a_addr_i9_i_i_i_i262=$ref_i_i_i_i305;
 $__p_addr_i10_i_i_i_i263=$175;
 var $176=$ref_tmp_i_i_i_i_i265;
 var $177=$__a_addr_i9_i_i_i_i262;
 var $178=$__p_addr_i10_i_i_i_i263;
 var $tmp_i_i_i_i_i307=$agg_tmp1_i_i_i_i_i261;
 var $tmp2_i_i_i_i_i308=$agg_tmp_i_i_i_i_i264;
 assert(1 % 1 === 0);HEAP8[($tmp_i_i_i_i_i307)]=HEAP8[($tmp2_i_i_i_i_i308)];
 $_addr_i_i7_i_i_i_i259=$177;
 $__p_addr_i_i8_i_i_i_i260=$178;
 var $179=$__p_addr_i_i8_i_i_i_i260;
 (function() { try { __THREW__ = 0; return __ZNSt3__112__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPfED1Ev($179) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=28;break; } else { label=29;break; }
 case 28: 
 label=30;break;
 case 29: 
 var $180$0 = ___cxa_find_matching_catch(-1, -1); var $180$1 = tempRet0;
 var $181=$180$0;
 $exn_slot_i_i_i_i275=$181;
 var $182=$180$1;
 $ehselector_slot_i_i_i_i276=$182;
 var $exn_i_i_i_i311=$exn_slot_i_i_i_i275;
 ___cxa_call_unexpected($exn_i_i_i_i311);
 throw "Reached an unreachable!";
 case 30: 
 var $183=$__p_addr_i_i_i_i274;
 var $tobool2_i_i_i_i313=($183|0)!=0;
 if($tobool2_i_i_i_i313){label=31;break;}else{label=32;break;}
 case 31: 
 var $__na_4_i_i_i_i315=(($this1_i7_i_i_i300)|0);
 var $ref5_i_i_i_i316=HEAP32[(($__na_4_i_i_i_i315)>>2)];
 var $184=$__p_addr_i_i_i_i274;
 $__a_addr_i_i_i_i_i269=$ref5_i_i_i_i316;
 $__p_addr_i_i_i_i_i270=$184;
 $__n_addr_i_i_i_i_i271=1;
 var $185=$__a_addr_i_i_i_i_i269;
 var $186=$__p_addr_i_i_i_i_i270;
 var $187=$__n_addr_i_i_i_i_i271;
 $this_addr_i_i_i_i_i_i266=$185;
 $__p_addr_i_i_i_i_i_i267=$186;
 $_addr_i_i_i_i_i_i268=$187;
 var $this1_i_i_i_i_i_i317=$this_addr_i_i_i_i_i_i266;
 var $188=$__p_addr_i_i_i_i_i_i267;
 var $189=$188;
 __ZdlPv($189);
 label=32;break;
 case 32: 
 label=33;break;
 case 33: 
 STACKTOP=sp;return;
 case 34: 
 var $190$0 = ___cxa_find_matching_catch(-1, -1); var $190$1 = tempRet0;
 var $191=$190$0;
 $exn_slot=$191;
 var $192=$190$1;
 $ehselector_slot=$192;
 label=45;break;
 case 35: 
 var $193$0 = ___cxa_find_matching_catch(-1, -1); var $193$1 = tempRet0;
 var $194=$193$0;
 $exn_slot=$194;
 var $195=$193$1;
 $ehselector_slot=$195;
 $this_addr_i75=$temp_lvalue;
 var $this1_i76=$this_addr_i75;
 $this_addr_i_i74=$this1_i76;
 var $this1_i_i77=$this_addr_i_i74;
 $this_addr_i_i_i71=$this1_i_i77;
 $__p_addr_i_i_i72=0;
 var $this1_i_i_i78=$this_addr_i_i_i71;
 var $__ptr__i_i_i79=(($this1_i_i_i78)|0);
 $this_addr_i_i_i_i70=$__ptr__i_i_i79;
 var $this1_i_i_i_i80=$this_addr_i_i_i_i70;
 var $196=$this1_i_i_i_i80;
 $this_addr_i_i_i_i_i69=$196;
 var $this1_i_i_i_i_i81=$this_addr_i_i_i_i_i69;
 var $__first__i_i_i_i_i82=(($this1_i_i_i_i_i81)|0);
 var $197=HEAP32[(($__first__i_i_i_i_i82)>>2)];
 $__tmp_i_i_i73=$197;
 var $198=$__p_addr_i_i_i72;
 var $__ptr_2_i_i_i83=(($this1_i_i_i78)|0);
 $this_addr_i9_i_i_i50=$__ptr_2_i_i_i83;
 var $this1_i10_i_i_i84=$this_addr_i9_i_i_i50;
 var $199=$this1_i10_i_i_i84;
 $this_addr_i_i8_i_i_i49=$199;
 var $this1_i_i11_i_i_i85=$this_addr_i_i8_i_i_i49;
 var $__first__i_i12_i_i_i86=(($this1_i_i11_i_i_i85)|0);
 HEAP32[(($__first__i_i12_i_i_i86)>>2)]=$198;
 var $200=$__tmp_i_i_i73;
 var $tobool_i_i_i87=($200|0)!=0;
 if($tobool_i_i_i87){label=36;break;}else{label=43;break;}
 case 36: 
 var $__ptr_4_i_i_i88=(($this1_i_i_i78)|0);
 $this_addr_i14_i_i_i48=$__ptr_4_i_i_i88;
 var $this1_i15_i_i_i89=$this_addr_i14_i_i_i48;
 var $201=$this1_i15_i_i_i89;
 $this_addr_i_i13_i_i_i47=$201;
 var $this1_i_i16_i_i_i90=$this_addr_i_i13_i_i_i47;
 var $__second__i_i_i_i_i91=(($this1_i_i16_i_i_i90+4)|0);
 var $202=$__tmp_i_i_i73;
 $this_addr_i6_i_i_i65=$__second__i_i_i_i_i91;
 $__p_addr_i_i_i_i66=$202;
 var $this1_i7_i_i_i92=$this_addr_i6_i_i_i65;
 var $__value_constructed_i_i_i_i93=(($this1_i7_i_i_i92+4)|0);
 var $203=HEAP8[($__value_constructed_i_i_i_i93)];
 var $tobool_i_i_i_i94=(($203)&1);
 if($tobool_i_i_i_i94){label=37;break;}else{label=40;break;}
 case 37: 
 var $__na__i_i_i_i96=(($this1_i7_i_i_i92)|0);
 var $ref_i_i_i_i97=HEAP32[(($__na__i_i_i_i96)>>2)];
 var $204=$__p_addr_i_i_i_i66;
 var $__value__i_i_i_i98=(($204+16)|0);
 $__x_addr_i_i_i_i_i64=$__value__i_i_i_i98;
 var $205=$__x_addr_i_i_i_i_i64;
 var $206=$205;
 var $207=$206;
 $__a_addr_i9_i_i_i_i54=$ref_i_i_i_i97;
 $__p_addr_i10_i_i_i_i55=$207;
 var $208=$ref_tmp_i_i_i_i_i57;
 var $209=$__a_addr_i9_i_i_i_i54;
 var $210=$__p_addr_i10_i_i_i_i55;
 var $tmp_i_i_i_i_i99=$agg_tmp1_i_i_i_i_i53;
 var $tmp2_i_i_i_i_i100=$agg_tmp_i_i_i_i_i56;
 assert(1 % 1 === 0);HEAP8[($tmp_i_i_i_i_i99)]=HEAP8[($tmp2_i_i_i_i_i100)];
 $_addr_i_i7_i_i_i_i51=$209;
 $__p_addr_i_i8_i_i_i_i52=$210;
 var $211=$__p_addr_i_i8_i_i_i_i52;
 (function() { try { __THREW__ = 0; return __ZNSt3__112__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPfED1Ev($211) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=38;break; } else { label=39;break; }
 case 38: 
 label=40;break;
 case 39: 
 var $212$0 = ___cxa_find_matching_catch(-1, -1,0); var $212$1 = tempRet0;
 var $213=$212$0;
 $exn_slot_i_i_i_i67=$213;
 var $214=$212$1;
 $ehselector_slot_i_i_i_i68=$214;
 var $exn_i_i_i_i103=$exn_slot_i_i_i_i67;
 ___cxa_call_unexpected($exn_i_i_i_i103);
 throw "Reached an unreachable!";
 case 40: 
 var $215=$__p_addr_i_i_i_i66;
 var $tobool2_i_i_i_i105=($215|0)!=0;
 if($tobool2_i_i_i_i105){label=41;break;}else{label=42;break;}
 case 41: 
 var $__na_4_i_i_i_i107=(($this1_i7_i_i_i92)|0);
 var $ref5_i_i_i_i108=HEAP32[(($__na_4_i_i_i_i107)>>2)];
 var $216=$__p_addr_i_i_i_i66;
 $__a_addr_i_i_i_i_i61=$ref5_i_i_i_i108;
 $__p_addr_i_i_i_i_i62=$216;
 $__n_addr_i_i_i_i_i63=1;
 var $217=$__a_addr_i_i_i_i_i61;
 var $218=$__p_addr_i_i_i_i_i62;
 var $219=$__n_addr_i_i_i_i_i63;
 $this_addr_i_i_i_i_i_i58=$217;
 $__p_addr_i_i_i_i_i_i59=$218;
 $_addr_i_i_i_i_i_i60=$219;
 var $this1_i_i_i_i_i_i109=$this_addr_i_i_i_i_i_i58;
 var $220=$__p_addr_i_i_i_i_i_i59;
 var $221=$220;
 __ZdlPv($221);
 label=42;break;
 case 42: 
 label=43;break;
 case 43: 
 label=44;break;
 case 44: 
 label=45;break;
 case 45: 
 $this_addr_i17=$__h;
 var $this1_i18=$this_addr_i17;
 $this_addr_i_i16=$this1_i18;
 var $this1_i_i19=$this_addr_i_i16;
 $this_addr_i_i_i15=$this1_i_i19;
 $__p_addr_i_i_i=0;
 var $this1_i_i_i20=$this_addr_i_i_i15;
 var $__ptr__i_i_i=(($this1_i_i_i20)|0);
 $this_addr_i_i_i_i=$__ptr__i_i_i;
 var $this1_i_i_i_i=$this_addr_i_i_i_i;
 var $222=$this1_i_i_i_i;
 $this_addr_i_i_i_i_i=$222;
 var $this1_i_i_i_i_i=$this_addr_i_i_i_i_i;
 var $__first__i_i_i_i_i=(($this1_i_i_i_i_i)|0);
 var $223=HEAP32[(($__first__i_i_i_i_i)>>2)];
 $__tmp_i_i_i=$223;
 var $224=$__p_addr_i_i_i;
 var $__ptr_2_i_i_i=(($this1_i_i_i20)|0);
 $this_addr_i9_i_i_i=$__ptr_2_i_i_i;
 var $this1_i10_i_i_i=$this_addr_i9_i_i_i;
 var $225=$this1_i10_i_i_i;
 $this_addr_i_i8_i_i_i=$225;
 var $this1_i_i11_i_i_i=$this_addr_i_i8_i_i_i;
 var $__first__i_i12_i_i_i=(($this1_i_i11_i_i_i)|0);
 HEAP32[(($__first__i_i12_i_i_i)>>2)]=$224;
 var $226=$__tmp_i_i_i;
 var $tobool_i_i_i=($226|0)!=0;
 if($tobool_i_i_i){label=46;break;}else{label=53;break;}
 case 46: 
 var $__ptr_4_i_i_i=(($this1_i_i_i20)|0);
 $this_addr_i14_i_i_i=$__ptr_4_i_i_i;
 var $this1_i15_i_i_i=$this_addr_i14_i_i_i;
 var $227=$this1_i15_i_i_i;
 $this_addr_i_i13_i_i_i=$227;
 var $this1_i_i16_i_i_i=$this_addr_i_i13_i_i_i;
 var $__second__i_i_i_i_i=(($this1_i_i16_i_i_i+4)|0);
 var $228=$__tmp_i_i_i;
 $this_addr_i6_i_i_i=$__second__i_i_i_i_i;
 $__p_addr_i_i_i_i=$228;
 var $this1_i7_i_i_i=$this_addr_i6_i_i_i;
 var $__value_constructed_i_i_i_i=(($this1_i7_i_i_i+4)|0);
 var $229=HEAP8[($__value_constructed_i_i_i_i)];
 var $tobool_i_i_i_i=(($229)&1);
 if($tobool_i_i_i_i){label=47;break;}else{label=50;break;}
 case 47: 
 var $__na__i_i_i_i=(($this1_i7_i_i_i)|0);
 var $ref_i_i_i_i=HEAP32[(($__na__i_i_i_i)>>2)];
 var $230=$__p_addr_i_i_i_i;
 var $__value__i_i_i_i=(($230+16)|0);
 $__x_addr_i_i_i_i_i=$__value__i_i_i_i;
 var $231=$__x_addr_i_i_i_i_i;
 var $232=$231;
 var $233=$232;
 $__a_addr_i9_i_i_i_i=$ref_i_i_i_i;
 $__p_addr_i10_i_i_i_i=$233;
 var $234=$ref_tmp_i_i_i_i_i;
 var $235=$__a_addr_i9_i_i_i_i;
 var $236=$__p_addr_i10_i_i_i_i;
 var $tmp_i_i_i_i_i=$agg_tmp1_i_i_i_i_i;
 var $tmp2_i_i_i_i_i=$agg_tmp_i_i_i_i_i;
 assert(1 % 1 === 0);HEAP8[($tmp_i_i_i_i_i)]=HEAP8[($tmp2_i_i_i_i_i)];
 $_addr_i_i7_i_i_i_i=$235;
 $__p_addr_i_i8_i_i_i_i=$236;
 var $237=$__p_addr_i_i8_i_i_i_i;
 (function() { try { __THREW__ = 0; return __ZNSt3__112__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPfED1Ev($237) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=48;break; } else { label=49;break; }
 case 48: 
 label=50;break;
 case 49: 
 var $238$0 = ___cxa_find_matching_catch(-1, -1,0); var $238$1 = tempRet0;
 var $239=$238$0;
 $exn_slot_i_i_i_i=$239;
 var $240=$238$1;
 $ehselector_slot_i_i_i_i=$240;
 var $exn_i_i_i_i=$exn_slot_i_i_i_i;
 ___cxa_call_unexpected($exn_i_i_i_i);
 throw "Reached an unreachable!";
 case 50: 
 var $241=$__p_addr_i_i_i_i;
 var $tobool2_i_i_i_i=($241|0)!=0;
 if($tobool2_i_i_i_i){label=51;break;}else{label=52;break;}
 case 51: 
 var $__na_4_i_i_i_i=(($this1_i7_i_i_i)|0);
 var $ref5_i_i_i_i=HEAP32[(($__na_4_i_i_i_i)>>2)];
 var $242=$__p_addr_i_i_i_i;
 $__a_addr_i_i_i_i_i=$ref5_i_i_i_i;
 $__p_addr_i_i_i_i_i=$242;
 $__n_addr_i_i_i_i_i=1;
 var $243=$__a_addr_i_i_i_i_i;
 var $244=$__p_addr_i_i_i_i_i;
 var $245=$__n_addr_i_i_i_i_i;
 $this_addr_i_i_i_i_i_i=$243;
 $__p_addr_i_i_i_i_i_i=$244;
 $_addr_i_i_i_i_i_i=$245;
 var $this1_i_i_i_i_i_i=$this_addr_i_i_i_i_i_i;
 var $246=$__p_addr_i_i_i_i_i_i;
 var $247=$246;
 __ZdlPv($247);
 label=52;break;
 case 52: 
 label=53;break;
 case 53: 
 label=54;break;
 case 54: 
 label=55;break;
 case 55: 
 var $exn=$exn_slot;
 var $sel=$ehselector_slot;
 var $lpad_val$0=$exn;
 var $lpad_val$1=0;
 var $lpad_val14$0=$lpad_val$0;
 var $lpad_val14$1=$sel;
 ___resumeException($lpad_val14$0)
 case 56: 
 var $248$0 = ___cxa_find_matching_catch(-1, -1,0); var $248$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPfEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSJ_SJ_($this,$__parent,$__child,$__new_node){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+24)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $this_addr_i_i_i46;
 var $_addr_i_i_i47;
 var $this_addr_i_i48;
 var $_addr_i_i49;
 var $this_addr_i44;
 var $this_addr_i41;
 var $this_addr_i_i_i34;
 var $_addr_i_i_i35;
 var $this_addr_i_i36;
 var $_addr_i_i37;
 var $this_addr_i32;
 var $this_addr_i29;
 var $this_addr_i27;
 var $__x_addr_i_i_i;
 var $__r_addr_i_i;
 var $this_addr_i_i_i20;
 var $this_addr_i_i21;
 var $this_addr_i22;
 var $this_addr_i18;
 var $this_addr_i_i_i14;
 var $this_addr_i_i15;
 var $this_addr_i;
 var $this_addr_i_i_i;
 var $_addr_i_i_i;
 var $this_addr_i_i;
 var $_addr_i_i;
 var $this_addr;
 var $__parent_addr;
 var $__child_addr;
 var $__new_node_addr;
 var $tmp=sp;
 var $tmp2=(sp)+(8);
 var $tmp6=(sp)+(16);
 $this_addr=$this;
 $__parent_addr=$__parent;
 $__child_addr=$__child;
 $__new_node_addr=$__new_node;
 var $this1=$this_addr;
 $this_addr_i_i=$tmp;
 $_addr_i_i=-1;
 var $this1_i_i=$this_addr_i_i;
 var $0=$_addr_i_i;
 $this_addr_i_i_i=$this1_i_i;
 $_addr_i_i_i=$0;
 var $this1_i_i_i=$this_addr_i_i_i;
 var $__lx_i_i_i=(($this1_i_i_i)|0);
 HEAP32[(($__lx_i_i_i)>>2)]=0;
 $this_addr_i18=$tmp;
 var $this1_i19=$this_addr_i18;
 var $1=$__new_node_addr;
 var $2=$1;
 var $__left_=(($2)|0);
 HEAP32[(($__left_)>>2)]=0;
 $this_addr_i_i48=$tmp2;
 $_addr_i_i49=-1;
 var $this1_i_i50=$this_addr_i_i48;
 var $3=$_addr_i_i49;
 $this_addr_i_i_i46=$this1_i_i50;
 $_addr_i_i_i47=$3;
 var $this1_i_i_i51=$this_addr_i_i_i46;
 var $__lx_i_i_i52=(($this1_i_i_i51)|0);
 HEAP32[(($__lx_i_i_i52)>>2)]=0;
 $this_addr_i44=$tmp2;
 var $this1_i45=$this_addr_i44;
 var $4=$__new_node_addr;
 var $__right_=(($4+4)|0);
 HEAP32[(($__right_)>>2)]=0;
 var $5=$__parent_addr;
 var $6=$__new_node_addr;
 var $__parent_=(($6+8)|0);
 HEAP32[(($__parent_)>>2)]=$5;
 var $7=$__new_node_addr;
 var $8=$__child_addr;
 HEAP32[(($8)>>2)]=$7;
 $this_addr_i41=$this1;
 var $this1_i42=$this_addr_i41;
 var $__begin_node__i43=(($this1_i42)|0);
 var $9=HEAP32[(($__begin_node__i43)>>2)];
 var $10=$9;
 var $__left_5=(($10)|0);
 var $11=HEAP32[(($__left_5)>>2)];
 $this_addr_i_i36=$tmp6;
 $_addr_i_i37=-1;
 var $this1_i_i38=$this_addr_i_i36;
 var $12=$_addr_i_i37;
 $this_addr_i_i_i34=$this1_i_i38;
 $_addr_i_i_i35=$12;
 var $this1_i_i_i39=$this_addr_i_i_i34;
 var $__lx_i_i_i40=(($this1_i_i_i39)|0);
 HEAP32[(($__lx_i_i_i40)>>2)]=0;
 $this_addr_i32=$tmp6;
 var $this1_i33=$this_addr_i32;
 var $cmp=($11|0)!=0;
 if($cmp){label=2;break;}else{label=3;break;}
 case 2: 
 $this_addr_i29=$this1;
 var $this1_i30=$this_addr_i29;
 var $__begin_node__i31=(($this1_i30)|0);
 var $13=HEAP32[(($__begin_node__i31)>>2)];
 var $14=$13;
 var $__left_9=(($14)|0);
 var $15=HEAP32[(($__left_9)>>2)];
 var $16=$15;
 $this_addr_i27=$this1;
 var $this1_i28=$this_addr_i27;
 var $__begin_node__i=(($this1_i28)|0);
 HEAP32[(($__begin_node__i)>>2)]=$16;
 label=3;break;
 case 3: 
 $this_addr_i22=$this1;
 var $this1_i23=$this_addr_i22;
 var $__pair1__i=(($this1_i23+4)|0);
 $this_addr_i_i21=$__pair1__i;
 var $this1_i_i24=$this_addr_i_i21;
 var $17=$this1_i_i24;
 $this_addr_i_i_i20=$17;
 var $this1_i_i_i25=$this_addr_i_i_i20;
 var $__first__i_i_i26=(($this1_i_i_i25)|0);
 $__r_addr_i_i=$__first__i_i_i26;
 var $18=$__r_addr_i_i;
 $__x_addr_i_i_i=$18;
 var $19=$__x_addr_i_i_i;
 var $20=$19;
 var $21=$20;
 var $22=$21;
 var $23=$22;
 var $__left_12=(($23)|0);
 var $24=HEAP32[(($__left_12)>>2)];
 var $25=$__child_addr;
 var $26=HEAP32[(($25)>>2)];
 __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_($24,$26);
 $this_addr_i=$this1;
 var $this1_i=$this_addr_i;
 var $__pair3__i=(($this1_i+8)|0);
 $this_addr_i_i15=$__pair3__i;
 var $this1_i_i16=$this_addr_i_i15;
 var $27=$this1_i_i16;
 $this_addr_i_i_i14=$27;
 var $this1_i_i_i17=$this_addr_i_i_i14;
 var $__first__i_i_i=(($this1_i_i_i17)|0);
 var $28=HEAP32[(($__first__i_i_i)>>2)];
 var $inc=((($28)+(1))|0);
 HEAP32[(($__first__i_i_i)>>2)]=$inc;
 STACKTOP=sp;return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_($__root,$__x){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__x_addr_i72;
 var $this_addr_i_i_i65;
 var $_addr_i_i_i66;
 var $this_addr_i_i67;
 var $_addr_i_i68;
 var $this_addr_i63;
 var $__x_addr_i59;
 var $this_addr_i;
 var $this_addr_i_i_i;
 var $_addr_i_i_i;
 var $this_addr_i_i;
 var $_addr_i_i;
 var $__x_addr_i;
 var $__root_addr;
 var $__x_addr;
 var $__y;
 var $tmp=sp;
 var $exn_slot;
 var $ehselector_slot;
 var $__y29;
 var $tmp32=(sp)+(8);
 $__root_addr=$__root;
 $__x_addr=$__x;
 var $0=$__x_addr;
 var $1=$__root_addr;
 var $cmp=($0|0)==($1|0);
 var $2=$__x_addr;
 var $__is_black_=(($2+12)|0);
 var $frombool=($cmp&1);
 HEAP8[($__is_black_)]=$frombool;
 label=2;break;
 case 2: 
 var $3=$__x_addr;
 var $4=$__root_addr;
 var $cmp1=($3|0)!=($4|0);
 if($cmp1){label=3;break;}else{var $8=0;label=4;break;}
 case 3: 
 var $5=$__x_addr;
 var $__parent_=(($5+8)|0);
 var $6=HEAP32[(($__parent_)>>2)];
 var $__is_black_2=(($6+12)|0);
 var $7=HEAP8[($__is_black_2)];
 var $tobool=(($7)&1);
 var $lnot=$tobool^1;
 var $8=$lnot;label=4;break;
 case 4: 
 var $8;
 if($8){label=5;break;}else{label=27;break;}
 case 5: 
 var $9=$__x_addr;
 var $__parent_3=(($9+8)|0);
 var $10=HEAP32[(($__parent_3)>>2)];
 $__x_addr_i=$10;
 var $11=$__x_addr_i;
 var $12=$__x_addr_i;
 var $__parent__i=(($12+8)|0);
 var $13=HEAP32[(($__parent__i)>>2)];
 var $14=$13;
 var $__left__i=(($14)|0);
 var $15=HEAP32[(($__left__i)>>2)];
 var $cmp_i=($11|0)==($15|0);
 if($cmp_i){label=6;break;}else{label=17;break;}
 case 6: 
 var $16=$__x_addr;
 var $__parent_4=(($16+8)|0);
 var $17=HEAP32[(($__parent_4)>>2)];
 var $__parent_5=(($17+8)|0);
 var $18=HEAP32[(($__parent_5)>>2)];
 var $__right_=(($18+4)|0);
 var $19=HEAP32[(($__right_)>>2)];
 $__y=$19;
 var $20=$__y;
 $this_addr_i_i=$tmp;
 $_addr_i_i=-1;
 var $this1_i_i=$this_addr_i_i;
 var $21=$_addr_i_i;
 $this_addr_i_i_i=$this1_i_i;
 $_addr_i_i_i=$21;
 var $this1_i_i_i=$this_addr_i_i_i;
 var $__lx_i_i_i=(($this1_i_i_i)|0);
 HEAP32[(($__lx_i_i_i)>>2)]=0;
 label=7;break;
 case 7: 
 $this_addr_i=$tmp;
 var $this1_i=$this_addr_i;
 label=8;break;
 case 8: 
 var $cmp8=($20|0)!=0;
 if($cmp8){label=9;break;}else{label=13;break;}
 case 9: 
 var $22=$__y;
 var $__is_black_9=(($22+12)|0);
 var $23=HEAP8[($__is_black_9)];
 var $tobool10=(($23)&1);
 if($tobool10){label=13;break;}else{label=10;break;}
 case 10: 
 var $24=$__x_addr;
 var $__parent_12=(($24+8)|0);
 var $25=HEAP32[(($__parent_12)>>2)];
 $__x_addr=$25;
 var $26=$__x_addr;
 var $__is_black_13=(($26+12)|0);
 HEAP8[($__is_black_13)]=1;
 var $27=$__x_addr;
 var $__parent_14=(($27+8)|0);
 var $28=HEAP32[(($__parent_14)>>2)];
 $__x_addr=$28;
 var $29=$__x_addr;
 var $30=$__root_addr;
 var $cmp15=($29|0)==($30|0);
 var $31=$__x_addr;
 var $__is_black_16=(($31+12)|0);
 var $frombool17=($cmp15&1);
 HEAP8[($__is_black_16)]=$frombool17;
 var $32=$__y;
 var $__is_black_18=(($32+12)|0);
 HEAP8[($__is_black_18)]=1;
 label=16;break;
 case 11: 
 var $33$0 = ___cxa_find_matching_catch(-1, -1); var $33$1 = tempRet0;
 var $34=$33$0;
 $exn_slot=$34;
 var $35=$33$1;
 $ehselector_slot=$35;
 label=12;break;
 case 12: 
 var $exn=$exn_slot;
 ___cxa_call_unexpected($exn);
 throw "Reached an unreachable!";
 case 13: 
 var $36=$__x_addr;
 $__x_addr_i72=$36;
 var $37=$__x_addr_i72;
 var $38=$__x_addr_i72;
 var $__parent__i73=(($38+8)|0);
 var $39=HEAP32[(($__parent__i73)>>2)];
 var $40=$39;
 var $__left__i74=(($40)|0);
 var $41=HEAP32[(($__left__i74)>>2)];
 var $cmp_i75=($37|0)==($41|0);
 if($cmp_i75){label=15;break;}else{label=14;break;}
 case 14: 
 var $42=$__x_addr;
 var $__parent_21=(($42+8)|0);
 var $43=HEAP32[(($__parent_21)>>2)];
 $__x_addr=$43;
 var $44=$__x_addr;
 __ZNSt3__118__tree_left_rotateIPNS_16__tree_node_baseIPvEEEEvT_($44);
 label=15;break;
 case 15: 
 var $45=$__x_addr;
 var $__parent_22=(($45+8)|0);
 var $46=HEAP32[(($__parent_22)>>2)];
 $__x_addr=$46;
 var $47=$__x_addr;
 var $__is_black_23=(($47+12)|0);
 HEAP8[($__is_black_23)]=1;
 var $48=$__x_addr;
 var $__parent_24=(($48+8)|0);
 var $49=HEAP32[(($__parent_24)>>2)];
 $__x_addr=$49;
 var $50=$__x_addr;
 var $__is_black_25=(($50+12)|0);
 HEAP8[($__is_black_25)]=0;
 var $51=$__x_addr;
 __ZNSt3__119__tree_right_rotateIPNS_16__tree_node_baseIPvEEEEvT_($51);
 label=27;break;
 case 16: 
 label=26;break;
 case 17: 
 var $52=$__x_addr;
 var $__parent_30=(($52+8)|0);
 var $53=HEAP32[(($__parent_30)>>2)];
 var $__parent_31=(($53+8)|0);
 var $54=HEAP32[(($__parent_31)>>2)];
 var $55=$54;
 var $__left_=(($55)|0);
 var $56=HEAP32[(($__left_)>>2)];
 $__y29=$56;
 var $57=$__y29;
 $this_addr_i_i67=$tmp32;
 $_addr_i_i68=-1;
 var $this1_i_i69=$this_addr_i_i67;
 var $58=$_addr_i_i68;
 $this_addr_i_i_i65=$this1_i_i69;
 $_addr_i_i_i66=$58;
 var $this1_i_i_i70=$this_addr_i_i_i65;
 var $__lx_i_i_i71=(($this1_i_i_i70)|0);
 HEAP32[(($__lx_i_i_i71)>>2)]=0;
 label=18;break;
 case 18: 
 $this_addr_i63=$tmp32;
 var $this1_i64=$this_addr_i63;
 label=19;break;
 case 19: 
 var $cmp36=($57|0)!=0;
 if($cmp36){label=20;break;}else{label=22;break;}
 case 20: 
 var $59=$__y29;
 var $__is_black_38=(($59+12)|0);
 var $60=HEAP8[($__is_black_38)];
 var $tobool39=(($60)&1);
 if($tobool39){label=22;break;}else{label=21;break;}
 case 21: 
 var $61=$__x_addr;
 var $__parent_41=(($61+8)|0);
 var $62=HEAP32[(($__parent_41)>>2)];
 $__x_addr=$62;
 var $63=$__x_addr;
 var $__is_black_42=(($63+12)|0);
 HEAP8[($__is_black_42)]=1;
 var $64=$__x_addr;
 var $__parent_43=(($64+8)|0);
 var $65=HEAP32[(($__parent_43)>>2)];
 $__x_addr=$65;
 var $66=$__x_addr;
 var $67=$__root_addr;
 var $cmp44=($66|0)==($67|0);
 var $68=$__x_addr;
 var $__is_black_45=(($68+12)|0);
 var $frombool46=($cmp44&1);
 HEAP8[($__is_black_45)]=$frombool46;
 var $69=$__y29;
 var $__is_black_47=(($69+12)|0);
 HEAP8[($__is_black_47)]=1;
 label=25;break;
 case 22: 
 var $70=$__x_addr;
 $__x_addr_i59=$70;
 var $71=$__x_addr_i59;
 var $72=$__x_addr_i59;
 var $__parent__i60=(($72+8)|0);
 var $73=HEAP32[(($__parent__i60)>>2)];
 var $74=$73;
 var $__left__i61=(($74)|0);
 var $75=HEAP32[(($__left__i61)>>2)];
 var $cmp_i62=($71|0)==($75|0);
 if($cmp_i62){label=23;break;}else{label=24;break;}
 case 23: 
 var $76=$__x_addr;
 var $__parent_51=(($76+8)|0);
 var $77=HEAP32[(($__parent_51)>>2)];
 $__x_addr=$77;
 var $78=$__x_addr;
 __ZNSt3__119__tree_right_rotateIPNS_16__tree_node_baseIPvEEEEvT_($78);
 label=24;break;
 case 24: 
 var $79=$__x_addr;
 var $__parent_53=(($79+8)|0);
 var $80=HEAP32[(($__parent_53)>>2)];
 $__x_addr=$80;
 var $81=$__x_addr;
 var $__is_black_54=(($81+12)|0);
 HEAP8[($__is_black_54)]=1;
 var $82=$__x_addr;
 var $__parent_55=(($82+8)|0);
 var $83=HEAP32[(($__parent_55)>>2)];
 $__x_addr=$83;
 var $84=$__x_addr;
 var $__is_black_56=(($84+12)|0);
 HEAP8[($__is_black_56)]=0;
 var $85=$__x_addr;
 __ZNSt3__118__tree_left_rotateIPNS_16__tree_node_baseIPvEEEEvT_($85);
 label=27;break;
 case 25: 
 label=26;break;
 case 26: 
 label=2;break;
 case 27: 
 STACKTOP=sp;return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__118__tree_left_rotateIPNS_16__tree_node_baseIPvEEEEvT_($__x){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $this_addr_i;
 var $__x_addr_i;
 var $this_addr_i_i_i;
 var $_addr_i_i_i;
 var $this_addr_i_i;
 var $_addr_i_i;
 var $__x_addr;
 var $__y;
 var $tmp=sp;
 var $exn_slot;
 var $ehselector_slot;
 $__x_addr=$__x;
 var $0=$__x_addr;
 var $__right_=(($0+4)|0);
 var $1=HEAP32[(($__right_)>>2)];
 $__y=$1;
 var $2=$__y;
 var $3=$2;
 var $__left_=(($3)|0);
 var $4=HEAP32[(($__left_)>>2)];
 var $5=$__x_addr;
 var $__right_1=(($5+4)|0);
 HEAP32[(($__right_1)>>2)]=$4;
 var $6=$__x_addr;
 var $__right_2=(($6+4)|0);
 var $7=HEAP32[(($__right_2)>>2)];
 $this_addr_i_i=$tmp;
 $_addr_i_i=-1;
 var $this1_i_i=$this_addr_i_i;
 var $8=$_addr_i_i;
 $this_addr_i_i_i=$this1_i_i;
 $_addr_i_i_i=$8;
 var $this1_i_i_i=$this_addr_i_i_i;
 var $__lx_i_i_i=(($this1_i_i_i)|0);
 HEAP32[(($__lx_i_i_i)>>2)]=0;
 label=2;break;
 case 2: 
 $this_addr_i=$tmp;
 var $this1_i=$this_addr_i;
 label=3;break;
 case 3: 
 var $cmp=($7|0)!=0;
 if($cmp){label=4;break;}else{label=7;break;}
 case 4: 
 var $9=$__x_addr;
 var $10=$__x_addr;
 var $__right_4=(($10+4)|0);
 var $11=HEAP32[(($__right_4)>>2)];
 var $__parent_=(($11+8)|0);
 HEAP32[(($__parent_)>>2)]=$9;
 label=7;break;
 case 5: 
 var $12$0 = ___cxa_find_matching_catch(-1, -1); var $12$1 = tempRet0;
 var $13=$12$0;
 $exn_slot=$13;
 var $14=$12$1;
 $ehselector_slot=$14;
 label=6;break;
 case 6: 
 var $exn=$exn_slot;
 ___cxa_call_unexpected($exn);
 throw "Reached an unreachable!";
 case 7: 
 var $15=$__x_addr;
 var $__parent_5=(($15+8)|0);
 var $16=HEAP32[(($__parent_5)>>2)];
 var $17=$__y;
 var $__parent_6=(($17+8)|0);
 HEAP32[(($__parent_6)>>2)]=$16;
 var $18=$__x_addr;
 $__x_addr_i=$18;
 var $19=$__x_addr_i;
 var $20=$__x_addr_i;
 var $__parent__i=(($20+8)|0);
 var $21=HEAP32[(($__parent__i)>>2)];
 var $22=$21;
 var $__left__i=(($22)|0);
 var $23=HEAP32[(($__left__i)>>2)];
 var $cmp_i=($19|0)==($23|0);
 if($cmp_i){label=8;break;}else{label=9;break;}
 case 8: 
 var $24=$__y;
 var $25=$__x_addr;
 var $__parent_9=(($25+8)|0);
 var $26=HEAP32[(($__parent_9)>>2)];
 var $27=$26;
 var $__left_10=(($27)|0);
 HEAP32[(($__left_10)>>2)]=$24;
 label=10;break;
 case 9: 
 var $28=$__y;
 var $29=$__x_addr;
 var $__parent_11=(($29+8)|0);
 var $30=HEAP32[(($__parent_11)>>2)];
 var $__right_12=(($30+4)|0);
 HEAP32[(($__right_12)>>2)]=$28;
 label=10;break;
 case 10: 
 var $31=$__x_addr;
 var $32=$__y;
 var $33=$32;
 var $__left_14=(($33)|0);
 HEAP32[(($__left_14)>>2)]=$31;
 var $34=$__y;
 var $35=$__x_addr;
 var $__parent_15=(($35+8)|0);
 HEAP32[(($__parent_15)>>2)]=$34;
 STACKTOP=sp;return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__119__tree_right_rotateIPNS_16__tree_node_baseIPvEEEEvT_($__x){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $this_addr_i;
 var $__x_addr_i;
 var $this_addr_i_i_i;
 var $_addr_i_i_i;
 var $this_addr_i_i;
 var $_addr_i_i;
 var $__x_addr;
 var $__y;
 var $tmp=sp;
 var $exn_slot;
 var $ehselector_slot;
 $__x_addr=$__x;
 var $0=$__x_addr;
 var $1=$0;
 var $__left_=(($1)|0);
 var $2=HEAP32[(($__left_)>>2)];
 $__y=$2;
 var $3=$__y;
 var $__right_=(($3+4)|0);
 var $4=HEAP32[(($__right_)>>2)];
 var $5=$__x_addr;
 var $6=$5;
 var $__left_1=(($6)|0);
 HEAP32[(($__left_1)>>2)]=$4;
 var $7=$__x_addr;
 var $8=$7;
 var $__left_2=(($8)|0);
 var $9=HEAP32[(($__left_2)>>2)];
 $this_addr_i_i=$tmp;
 $_addr_i_i=-1;
 var $this1_i_i=$this_addr_i_i;
 var $10=$_addr_i_i;
 $this_addr_i_i_i=$this1_i_i;
 $_addr_i_i_i=$10;
 var $this1_i_i_i=$this_addr_i_i_i;
 var $__lx_i_i_i=(($this1_i_i_i)|0);
 HEAP32[(($__lx_i_i_i)>>2)]=0;
 label=2;break;
 case 2: 
 $this_addr_i=$tmp;
 var $this1_i=$this_addr_i;
 label=3;break;
 case 3: 
 var $cmp=($9|0)!=0;
 if($cmp){label=4;break;}else{label=7;break;}
 case 4: 
 var $11=$__x_addr;
 var $12=$__x_addr;
 var $13=$12;
 var $__left_4=(($13)|0);
 var $14=HEAP32[(($__left_4)>>2)];
 var $__parent_=(($14+8)|0);
 HEAP32[(($__parent_)>>2)]=$11;
 label=7;break;
 case 5: 
 var $15$0 = ___cxa_find_matching_catch(-1, -1); var $15$1 = tempRet0;
 var $16=$15$0;
 $exn_slot=$16;
 var $17=$15$1;
 $ehselector_slot=$17;
 label=6;break;
 case 6: 
 var $exn=$exn_slot;
 ___cxa_call_unexpected($exn);
 throw "Reached an unreachable!";
 case 7: 
 var $18=$__x_addr;
 var $__parent_5=(($18+8)|0);
 var $19=HEAP32[(($__parent_5)>>2)];
 var $20=$__y;
 var $__parent_6=(($20+8)|0);
 HEAP32[(($__parent_6)>>2)]=$19;
 var $21=$__x_addr;
 $__x_addr_i=$21;
 var $22=$__x_addr_i;
 var $23=$__x_addr_i;
 var $__parent__i=(($23+8)|0);
 var $24=HEAP32[(($__parent__i)>>2)];
 var $25=$24;
 var $__left__i=(($25)|0);
 var $26=HEAP32[(($__left__i)>>2)];
 var $cmp_i=($22|0)==($26|0);
 if($cmp_i){label=8;break;}else{label=9;break;}
 case 8: 
 var $27=$__y;
 var $28=$__x_addr;
 var $__parent_9=(($28+8)|0);
 var $29=HEAP32[(($__parent_9)>>2)];
 var $30=$29;
 var $__left_10=(($30)|0);
 HEAP32[(($__left_10)>>2)]=$27;
 label=10;break;
 case 9: 
 var $31=$__y;
 var $32=$__x_addr;
 var $__parent_11=(($32+8)|0);
 var $33=HEAP32[(($__parent_11)>>2)];
 var $__right_12=(($33+4)|0);
 HEAP32[(($__right_12)>>2)]=$31;
 label=10;break;
 case 10: 
 var $34=$__x_addr;
 var $35=$__y;
 var $__right_14=(($35+4)|0);
 HEAP32[(($__right_14)>>2)]=$34;
 var $36=$__y;
 var $37=$__x_addr;
 var $__parent_15=(($37+8)|0);
 HEAP32[(($__parent_15)>>2)]=$36;
 STACKTOP=sp;return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__112__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPfEC1ERKS8_($this,$0){
 var label=0;
 var $this_addr;
 var $_addr;
 $this_addr=$this;
 $_addr=$0;
 var $this1=$this_addr;
 var $1=$_addr;
 __ZNSt3__112__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPfEC2ERKS8_($this1,$1);
 return;
}
function __ZNSt3__112__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPfEC2ERKS8_($this,$0){
 var label=0;
 var $this_addr_i_i;
 var $__p_addr_i_i;
 var $this_addr_i;
 var $__p_addr_i;
 var $this_addr;
 var $_addr;
 $this_addr=$this;
 $_addr=$0;
 var $this1=$this_addr;
 var $__cc=(($this1)|0);
 var $1=$_addr;
 var $__cc2=(($1)|0);
 $this_addr_i=$__cc;
 $__p_addr_i=$__cc2;
 var $this1_i=$this_addr_i;
 var $2=$__p_addr_i;
 $this_addr_i_i=$this1_i;
 $__p_addr_i_i=$2;
 var $this1_i_i=$this_addr_i_i;
 var $first_i_i=(($this1_i_i)|0);
 var $3=$__p_addr_i_i;
 var $first2_i_i=(($3)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_($first_i_i,$first2_i_i);
 var $second_i_i=(($this1_i_i+12)|0);
 var $4=$__p_addr_i_i;
 var $second3_i_i=(($4+12)|0);
 var $5=HEAP32[(($second3_i_i)>>2)];
 HEAP32[(($second_i_i)>>2)]=$5;
 return;
}
function __ZN4JSUID2Ev($this){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $this_addr;
 var $exn_slot;
 var $ehselector_slot;
 $this_addr=$this;
 var $this1=$this_addr;
 var $0=$this1;
 HEAP32[(($0)>>2)]=6880;
 var $uiMap=(($this1+4)|0);
 (function() { try { __THREW__ = 0; return __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPfNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEED1Ev($uiMap) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=3;break; }
 case 2: 
 var $1=$this1;
 __ZN2UID2Ev($1);
 return;
 case 3: 
 var $2$0 = ___cxa_find_matching_catch(-1, -1); var $2$1 = tempRet0;
 var $3=$2$0;
 $exn_slot=$3;
 var $4=$2$1;
 $ehselector_slot=$4;
 var $5=$this1;
 (function() { try { __THREW__ = 0; return __ZN2UID2Ev($5) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=4;break; } else { label=6;break; }
 case 4: 
 label=5;break;
 case 5: 
 var $exn=$exn_slot;
 var $sel=$ehselector_slot;
 var $lpad_val$0=$exn;
 var $lpad_val$1=0;
 var $lpad_val3$0=$lpad_val$0;
 var $lpad_val3$1=$sel;
 ___resumeException($lpad_val3$0)
 case 6: 
 var $6$0 = ___cxa_find_matching_catch(-1, -1,0); var $6$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPfNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEED1Ev($this){
 var label=0;
 var $this_addr;
 $this_addr=$this;
 var $this1=$this_addr;
 __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPfNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEED2Ev($this1);
 return;
}
function __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPfNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEED2Ev($this){
 var label=0;
 var $this_addr;
 $this_addr=$this;
 var $this1=$this_addr;
 var $__tree_=(($this1)|0);
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPfEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEED1Ev($__tree_);
 return;
}
function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPfEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEED1Ev($this){
 var label=0;
 var $this_addr;
 $this_addr=$this;
 var $this1=$this_addr;
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPfEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEED2Ev($this1);
 return;
}
function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPfEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEED2Ev($this){
 var label=0;
 var $__x_addr_i_i_i_i;
 var $__r_addr_i_i_i;
 var $this_addr_i_i_i_i;
 var $this_addr_i_i_i;
 var $this_addr_i_i;
 var $this_addr_i;
 var $this_addr;
 $this_addr=$this;
 var $this1=$this_addr;
 $this_addr_i=$this1;
 var $this1_i=$this_addr_i;
 $this_addr_i_i=$this1_i;
 var $this1_i_i=$this_addr_i_i;
 var $__pair1__i_i=(($this1_i_i+4)|0);
 $this_addr_i_i_i=$__pair1__i_i;
 var $this1_i_i_i=$this_addr_i_i_i;
 var $0=$this1_i_i_i;
 $this_addr_i_i_i_i=$0;
 var $this1_i_i_i_i=$this_addr_i_i_i_i;
 var $__first__i_i_i_i=(($this1_i_i_i_i)|0);
 $__r_addr_i_i_i=$__first__i_i_i_i;
 var $1=$__r_addr_i_i_i;
 $__x_addr_i_i_i_i=$1;
 var $2=$__x_addr_i_i_i_i;
 var $3=$2;
 var $4=$3;
 var $5=$4;
 var $6=$5;
 var $__left__i=(($6)|0);
 var $7=HEAP32[(($__left__i)>>2)];
 var $8=$7;
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPfEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE($this1,$8);
 return;
}
function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPfEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE($this,$__nd){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+32)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__x_addr_i;
 var $this_addr_i_i_i14;
 var $this_addr_i_i15;
 var $this_addr_i16;
 var $_addr_i_i10;
 var $__p_addr_i_i11;
 var $agg_tmp1_i=sp;
 var $__a_addr_i12;
 var $__p_addr_i13;
 var $agg_tmp_i=(sp)+(8);
 var $ref_tmp_i=(sp)+(16);
 var $this_addr_i_i7;
 var $__p_addr_i_i;
 var $_addr_i_i8;
 var $__a_addr_i;
 var $__p_addr_i;
 var $__n_addr_i;
 var $this_addr_i;
 var $this_addr_i_i_i;
 var $_addr_i_i_i;
 var $this_addr_i_i;
 var $_addr_i_i;
 var $this_addr;
 var $__nd_addr;
 var $tmp=(sp)+(24);
 var $exn_slot;
 var $ehselector_slot;
 var $__na;
 $this_addr=$this;
 $__nd_addr=$__nd;
 var $this1=$this_addr;
 var $0=$__nd_addr;
 $this_addr_i_i=$tmp;
 $_addr_i_i=-1;
 var $this1_i_i=$this_addr_i_i;
 var $1=$_addr_i_i;
 $this_addr_i_i_i=$this1_i_i;
 $_addr_i_i_i=$1;
 var $this1_i_i_i=$this_addr_i_i_i;
 var $__lx_i_i_i=(($this1_i_i_i)|0);
 HEAP32[(($__lx_i_i_i)>>2)]=0;
 label=2;break;
 case 2: 
 $this_addr_i=$tmp;
 var $this1_i=$this_addr_i;
 label=3;break;
 case 3: 
 var $cmp=($0|0)!=0;
 if($cmp){label=4;break;}else{label=9;break;}
 case 4: 
 var $2=$__nd_addr;
 var $3=$2;
 var $__left_=(($3)|0);
 var $4=HEAP32[(($__left_)>>2)];
 var $5=$4;
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPfEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE($this1,$5);
 var $6=$__nd_addr;
 var $7=$6;
 var $__right_=(($7+4)|0);
 var $8=HEAP32[(($__right_)>>2)];
 var $9=$8;
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPfEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE($this1,$9);
 $this_addr_i16=$this1;
 var $this1_i17=$this_addr_i16;
 var $__pair1__i=(($this1_i17+4)|0);
 $this_addr_i_i15=$__pair1__i;
 var $this1_i_i18=$this_addr_i_i15;
 var $10=$this1_i_i18;
 $this_addr_i_i_i14=$10;
 var $this1_i_i_i19=$this_addr_i_i_i14;
 var $11=$this1_i_i_i19;
 $__na=$11;
 var $12=$__na;
 var $13=$__nd_addr;
 var $__value_=(($13+16)|0);
 $__x_addr_i=$__value_;
 var $14=$__x_addr_i;
 var $15=$14;
 var $16=$15;
 $__a_addr_i12=$12;
 $__p_addr_i13=$16;
 var $17=$ref_tmp_i;
 var $18=$__a_addr_i12;
 var $19=$__p_addr_i13;
 var $tmp_i=$agg_tmp1_i;
 var $tmp2_i=$agg_tmp_i;
 assert(1 % 1 === 0);HEAP8[($tmp_i)]=HEAP8[($tmp2_i)];
 $_addr_i_i10=$18;
 $__p_addr_i_i11=$19;
 var $20=$__p_addr_i_i11;
 (function() { try { __THREW__ = 0; return __ZNSt3__112__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPfED1Ev($20) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=5;break; } else { label=7;break; }
 case 5: 
 label=6;break;
 case 6: 
 var $21=$__na;
 var $22=$__nd_addr;
 $__a_addr_i=$21;
 $__p_addr_i=$22;
 $__n_addr_i=1;
 var $23=$__a_addr_i;
 var $24=$__p_addr_i;
 var $25=$__n_addr_i;
 $this_addr_i_i7=$23;
 $__p_addr_i_i=$24;
 $_addr_i_i8=$25;
 var $this1_i_i9=$this_addr_i_i7;
 var $26=$__p_addr_i_i;
 var $27=$26;
 __ZdlPv($27);
 label=9;break;
 case 7: 
 var $28$0 = ___cxa_find_matching_catch(-1, -1); var $28$1 = tempRet0;
 var $29=$28$0;
 $exn_slot=$29;
 var $30=$28$1;
 $ehselector_slot=$30;
 label=8;break;
 case 8: 
 var $exn=$exn_slot;
 ___cxa_call_unexpected($exn);
 throw "Reached an unreachable!";
 case 9: 
 STACKTOP=sp;return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPfEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEEC1ERKSD_($this,$__comp){
 var label=0;
 var $this_addr;
 var $__comp_addr;
 $this_addr=$this;
 $__comp_addr=$__comp;
 var $this1=$this_addr;
 var $0=$__comp_addr;
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPfEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEEC2ERKSD_($this1,$0);
 return;
}
function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPfEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEEC2ERKSD_($this,$__comp){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+56)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__t_addr_i5_i_i;
 var $__t_addr_i3_i_i_i;
 var $__t_addr_i_i_i_i;
 var $this_addr_i_i_i14;
 var $__t1_addr_i_i_i=sp;
 var $agg_tmp3_i_i=(sp)+(8);
 var $__t_addr_i_i_i;
 var $this_addr_i_i15;
 var $__t1_addr_i_i=(sp)+(16);
 var $agg_tmp_i_i=(sp)+(24);
 var $__t22_i=(sp)+(32);
 var $this_addr_i16;
 var $__t1_addr_i;
 var $agg_tmp12=(sp)+(40);
 var $__x_addr_i_i_i;
 var $__r_addr_i_i;
 var $this_addr_i_i_i5;
 var $this_addr_i_i6;
 var $this_addr_i7;
 var $this_addr_i3;
 var $this_addr_i_i_i_i_i;
 var $this_addr_i2_i_i_i;
 var $this_addr_i_i_i_i;
 var $this_addr_i_i_i;
 var $this_addr_i_i;
 var $this_addr_i;
 var $this_addr;
 var $__comp_addr;
 var $agg_tmp=(sp)+(48);
 $this_addr=$this;
 $__comp_addr=$__comp;
 var $this1=$this_addr;
 var $__pair1_=(($this1+4)|0);
 $this_addr_i=$__pair1_;
 var $this1_i=$this_addr_i;
 $this_addr_i_i=$this1_i;
 var $this1_i_i=$this_addr_i_i;
 var $0=$this1_i_i;
 $this_addr_i_i_i=$0;
 var $this1_i_i_i=$this_addr_i_i_i;
 var $1=$this1_i_i_i;
 $this_addr_i_i_i_i=$1;
 var $this1_i_i_i_i=$this_addr_i_i_i_i;
 var $__first__i_i_i=(($this1_i_i_i)|0);
 $this_addr_i2_i_i_i=$__first__i_i_i;
 var $this1_i3_i_i_i=$this_addr_i2_i_i_i;
 $this_addr_i_i_i_i_i=$this1_i3_i_i_i;
 var $this1_i_i_i_i_i=$this_addr_i_i_i_i_i;
 var $__left__i_i_i_i_i=(($this1_i_i_i_i_i)|0);
 HEAP32[(($__left__i_i_i_i_i)>>2)]=0;
 var $__pair3_=(($this1+8)|0);
 var $2=$__comp_addr;
 var $tmp=$agg_tmp12;
 var $tmp13=$agg_tmp;
 assert(1 % 1 === 0);HEAP8[($tmp)]=HEAP8[($tmp13)];
 $this_addr_i16=$__pair3_;
 $__t1_addr_i=0;
 var $this1_i17=$this_addr_i16;
 var $3=$__t1_addr_i;
 var $tmp_i=$__t22_i;
 var $tmp3_i=$agg_tmp12;
 assert(1 % 1 === 0);HEAP8[($tmp_i)]=HEAP8[($tmp3_i)];
 $this_addr_i_i15=$this1_i17;
 HEAP32[(($__t1_addr_i_i)>>2)]=$3;
 var $this1_i_i18=$this_addr_i_i15;
 var $4=$this1_i_i18;
 $__t_addr_i_i_i=$__t1_addr_i_i;
 var $5=$__t_addr_i_i_i;
 var $6=HEAP32[(($5)>>2)];
 $__t_addr_i5_i_i=$__t22_i;
 var $7=$__t_addr_i5_i_i;
 var $tmp_i_i=$agg_tmp3_i_i;
 var $tmp4_i_i=$agg_tmp_i_i;
 assert(1 % 1 === 0);HEAP8[($tmp_i_i)]=HEAP8[($tmp4_i_i)];
 $this_addr_i_i_i14=$4;
 HEAP32[(($__t1_addr_i_i_i)>>2)]=$6;
 var $this1_i_i_i19=$this_addr_i_i_i14;
 var $8=$this1_i_i_i19;
 $__t_addr_i_i_i_i=$agg_tmp3_i_i;
 var $9=$__t_addr_i_i_i_i;
 var $__first__i_i_i20=(($this1_i_i_i19)|0);
 $__t_addr_i3_i_i_i=$__t1_addr_i_i_i;
 var $10=$__t_addr_i3_i_i_i;
 var $11=HEAP32[(($10)>>2)];
 HEAP32[(($__first__i_i_i20)>>2)]=$11;
 $this_addr_i7=$this1;
 var $this1_i8=$this_addr_i7;
 var $__pair1__i=(($this1_i8+4)|0);
 $this_addr_i_i6=$__pair1__i;
 var $this1_i_i9=$this_addr_i_i6;
 var $12=$this1_i_i9;
 $this_addr_i_i_i5=$12;
 var $this1_i_i_i10=$this_addr_i_i_i5;
 var $__first__i_i_i11=(($this1_i_i_i10)|0);
 $__r_addr_i_i=$__first__i_i_i11;
 var $13=$__r_addr_i_i;
 $__x_addr_i_i_i=$13;
 var $14=$__x_addr_i_i_i;
 var $15=$14;
 var $16=$15;
 var $17=$16;
 $this_addr_i3=$this1;
 var $this1_i4=$this_addr_i3;
 var $__begin_node__i=(($this1_i4)|0);
 HEAP32[(($__begin_node__i)>>2)]=$17;
 STACKTOP=sp;return;
}
function __ZN2UID1Ev($this){
 var label=0;
 var $this_addr;
 $this_addr=$this;
 var $this1=$this_addr;
 __ZN2UID2Ev($this1);
 return;
}
function __ZN2UID0Ev($this){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $this_addr;
 var $exn_slot;
 var $ehselector_slot;
 $this_addr=$this;
 var $this1=$this_addr;
 (function() { try { __THREW__ = 0; return __ZN2UID1Ev($this1) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=3;break; }
 case 2: 
 var $0=$this1;
 __ZdlPv($0);
 return;
 case 3: 
 var $1$0 = ___cxa_find_matching_catch(-1, -1); var $1$1 = tempRet0;
 var $2=$1$0;
 $exn_slot=$2;
 var $3=$1$1;
 $ehselector_slot=$3;
 var $4=$this1;
 __ZdlPv($4);
 label=4;break;
 case 4: 
 var $exn=$exn_slot;
 var $sel=$ehselector_slot;
 var $lpad_val$0=$exn;
 var $lpad_val$1=0;
 var $lpad_val2$0=$lpad_val$0;
 var $lpad_val2$1=$sel;
 ___resumeException($lpad_val2$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZN2UI7declareEPfPKcS2_($this,$zone,$key,$val){
 var label=0;
 var $this_addr;
 var $zone_addr;
 var $key_addr;
 var $val_addr;
 $this_addr=$this;
 $zone_addr=$zone;
 $key_addr=$key;
 $val_addr=$val;
 var $this1=$this_addr;
 return;
}
function __ZN19ReverbDesigner_wrapC2Ev($this){
 var label=0;
 var $this_addr;
 $this_addr=$this;
 var $this1=$this_addr;
 var $0=$this1;
 __ZN14ReverbDesignerC2Ev($0);
 var $1=$this1;
 HEAP32[(($1)>>2)]=7072;
 return;
}
function __ZN14ReverbDesignerC2Ev($this){
 var label=0;
 var $this_addr;
 $this_addr=$this;
 var $this1=$this_addr;
 var $0=$this1;
 __ZN3dspC2Ev($0);
 var $1=$this1;
 HEAP32[(($1)>>2)]=7128;
 return;
}
function __ZN19ReverbDesigner_wrapD1Ev($this){
 var label=0;
 var $this_addr;
 $this_addr=$this;
 var $this1=$this_addr;
 __ZN19ReverbDesigner_wrapD2Ev($this1);
 return;
}
function __ZN19ReverbDesigner_wrapD0Ev($this){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $this_addr;
 var $exn_slot;
 var $ehselector_slot;
 $this_addr=$this;
 var $this1=$this_addr;
 (function() { try { __THREW__ = 0; return __ZN19ReverbDesigner_wrapD1Ev($this1) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=3;break; }
 case 2: 
 var $0=$this1;
 __ZdlPv($0);
 return;
 case 3: 
 var $1$0 = ___cxa_find_matching_catch(-1, -1); var $1$1 = tempRet0;
 var $2=$1$0;
 $exn_slot=$2;
 var $3=$1$1;
 $ehselector_slot=$3;
 var $4=$this1;
 __ZdlPv($4);
 label=4;break;
 case 4: 
 var $exn=$exn_slot;
 var $sel=$ehselector_slot;
 var $lpad_val$0=$exn;
 var $lpad_val$1=0;
 var $lpad_val2$0=$lpad_val$0;
 var $lpad_val2$1=$sel;
 ___resumeException($lpad_val2$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZN14ReverbDesigner12getNumInputsEv($this){
 var label=0;
 var $this_addr;
 $this_addr=$this;
 var $this1=$this_addr;
 return 2;
}
function __ZN14ReverbDesigner13getNumOutputsEv($this){
 var label=0;
 var $this_addr;
 $this_addr=$this;
 var $this1=$this_addr;
 return 2;
}
function __ZN14ReverbDesigner18buildUserInterfaceEP2UI($this,$interface){
 var label=0;
 var $this_addr;
 var $interface_addr;
 $this_addr=$this;
 $interface_addr=$interface;
 var $this1=$this_addr;
 var $0=$interface_addr;
 var $1=$0;
 var $vtable=HEAP32[(($1)>>2)];
 var $vfn=(($vtable+16)|0);
 var $2=HEAP32[(($vfn)>>2)];
 FUNCTION_TABLE[$2]($0,3728);
 var $3=$interface_addr;
 var $4=$3;
 var $vtable2=HEAP32[(($4)>>2)];
 var $vfn3=(($vtable2+52)|0);
 var $5=HEAP32[(($vfn3)>>2)];
 FUNCTION_TABLE[$5]($3,0,2632,1992);
 var $6=$interface_addr;
 var $7=$6;
 var $vtable4=HEAP32[(($7)>>2)];
 var $vfn5=(($vtable4+16)|0);
 var $8=HEAP32[(($vfn5)>>2)];
 FUNCTION_TABLE[$8]($6,1192);
 var $9=$interface_addr;
 var $10=$9;
 var $vtable6=HEAP32[(($10)>>2)];
 var $vfn7=(($vtable6+52)|0);
 var $11=HEAP32[(($vfn7)>>2)];
 FUNCTION_TABLE[$11]($9,0,1048,11952);
 var $12=$interface_addr;
 var $13=$12;
 var $vtable8=HEAP32[(($13)>>2)];
 var $vfn9=(($vtable8+16)|0);
 var $14=HEAP32[(($vfn9)>>2)];
 FUNCTION_TABLE[$14]($12,600);
 var $15=$interface_addr;
 var $16=$15;
 var $vtable10=HEAP32[(($16)>>2)];
 var $vfn11=(($vtable10+52)|0);
 var $17=HEAP32[(($vfn11)>>2)];
 var $fhslider6=(($this1+528696)|0);
 FUNCTION_TABLE[$17]($15,$fhslider6,432,11952);
 var $18=$interface_addr;
 var $19=$18;
 var $vtable12=HEAP32[(($19)>>2)];
 var $vfn13=(($vtable12+52)|0);
 var $20=HEAP32[(($vfn13)>>2)];
 var $fhslider614=(($this1+528696)|0);
 FUNCTION_TABLE[$20]($18,$fhslider614,2632,224);
 var $21=$interface_addr;
 var $22=$21;
 var $vtable15=HEAP32[(($22)>>2)];
 var $vfn16=(($vtable15+52)|0);
 var $23=HEAP32[(($vfn16)>>2)];
 var $fhslider617=(($this1+528696)|0);
 FUNCTION_TABLE[$23]($21,$fhslider617,3720,3536);
 var $24=$interface_addr;
 var $25=$24;
 var $vtable18=HEAP32[(($25)>>2)];
 var $vfn19=(($vtable18+36)|0);
 var $26=HEAP32[(($vfn19)>>2)];
 var $fhslider620=(($this1+528696)|0);
 FUNCTION_TABLE[$26]($24,3248,$fhslider620,500,100,10000,1);
 var $27=$interface_addr;
 var $28=$27;
 var $vtable21=HEAP32[(($28)>>2)];
 var $vfn22=(($vtable21+52)|0);
 var $29=HEAP32[(($vfn22)>>2)];
 var $fhslider5=(($this1+528692)|0);
 FUNCTION_TABLE[$29]($27,$fhslider5,1048,11952);
 var $30=$interface_addr;
 var $31=$30;
 var $vtable23=HEAP32[(($31)>>2)];
 var $vfn24=(($vtable23+52)|0);
 var $32=HEAP32[(($vfn24)>>2)];
 var $fhslider525=(($this1+528692)|0);
 FUNCTION_TABLE[$32]($30,$fhslider525,2632,224);
 var $33=$interface_addr;
 var $34=$33;
 var $vtable26=HEAP32[(($34)>>2)];
 var $vfn27=(($vtable26+52)|0);
 var $35=HEAP32[(($vfn27)>>2)];
 var $fhslider528=(($this1+528692)|0);
 FUNCTION_TABLE[$35]($33,$fhslider528,3720,3536);
 var $36=$interface_addr;
 var $37=$36;
 var $vtable29=HEAP32[(($37)>>2)];
 var $vfn30=(($vtable29+36)|0);
 var $38=HEAP32[(($vfn30)>>2)];
 var $fhslider531=(($this1+528692)|0);
 FUNCTION_TABLE[$38]($36,3128,$fhslider531,1000,100,10000,1);
 var $39=$interface_addr;
 var $40=$39;
 var $vtable32=HEAP32[(($40)>>2)];
 var $vfn33=(($vtable32+52)|0);
 var $41=HEAP32[(($vfn33)>>2)];
 var $fhslider4=(($this1+528688)|0);
 FUNCTION_TABLE[$41]($39,$fhslider4,3056,11952);
 var $42=$interface_addr;
 var $43=$42;
 var $vtable34=HEAP32[(($43)>>2)];
 var $vfn35=(($vtable34+52)|0);
 var $44=HEAP32[(($vfn35)>>2)];
 var $fhslider436=(($this1+528688)|0);
 FUNCTION_TABLE[$44]($42,$fhslider436,2632,224);
 var $45=$interface_addr;
 var $46=$45;
 var $vtable37=HEAP32[(($46)>>2)];
 var $vfn38=(($vtable37+52)|0);
 var $47=HEAP32[(($vfn38)>>2)];
 var $fhslider439=(($this1+528688)|0);
 FUNCTION_TABLE[$47]($45,$fhslider439,3720,3536);
 var $48=$interface_addr;
 var $49=$48;
 var $vtable40=HEAP32[(($49)>>2)];
 var $vfn41=(($vtable40+36)|0);
 var $50=HEAP32[(($vfn41)>>2)];
 var $fhslider442=(($this1+528688)|0);
 FUNCTION_TABLE[$50]($48,3016,$fhslider442,2000,100,10000,1);
 var $51=$interface_addr;
 var $52=$51;
 var $vtable43=HEAP32[(($52)>>2)];
 var $vfn44=(($vtable43+52)|0);
 var $53=HEAP32[(($vfn44)>>2)];
 var $fhslider3=(($this1+528684)|0);
 FUNCTION_TABLE[$53]($51,$fhslider3,3000,11952);
 var $54=$interface_addr;
 var $55=$54;
 var $vtable45=HEAP32[(($55)>>2)];
 var $vfn46=(($vtable45+52)|0);
 var $56=HEAP32[(($vfn46)>>2)];
 var $fhslider347=(($this1+528684)|0);
 FUNCTION_TABLE[$56]($54,$fhslider347,2632,224);
 var $57=$interface_addr;
 var $58=$57;
 var $vtable48=HEAP32[(($58)>>2)];
 var $vfn49=(($vtable48+52)|0);
 var $59=HEAP32[(($vfn49)>>2)];
 var $fhslider350=(($this1+528684)|0);
 FUNCTION_TABLE[$59]($57,$fhslider350,3720,3536);
 var $60=$interface_addr;
 var $61=$60;
 var $vtable51=HEAP32[(($61)>>2)];
 var $vfn52=(($vtable51+36)|0);
 var $62=HEAP32[(($vfn52)>>2)];
 var $fhslider353=(($this1+528684)|0);
 FUNCTION_TABLE[$62]($60,2968,$fhslider353,4000,100,10000,1);
 var $63=$interface_addr;
 var $64=$63;
 var $vtable54=HEAP32[(($64)>>2)];
 var $vfn55=(($vtable54+20)|0);
 var $65=HEAP32[(($vfn55)>>2)];
 FUNCTION_TABLE[$65]($63);
 var $66=$interface_addr;
 var $67=$66;
 var $vtable56=HEAP32[(($67)>>2)];
 var $vfn57=(($vtable56+52)|0);
 var $68=HEAP32[(($vfn57)>>2)];
 FUNCTION_TABLE[$68]($66,0,3056,11952);
 var $69=$interface_addr;
 var $70=$69;
 var $vtable58=HEAP32[(($70)>>2)];
 var $vfn59=(($vtable58+12)|0);
 var $71=HEAP32[(($vfn59)>>2)];
 FUNCTION_TABLE[$71]($69,2936);
 var $72=$interface_addr;
 var $73=$72;
 var $vtable60=HEAP32[(($73)>>2)];
 var $vfn61=(($vtable60+52)|0);
 var $74=HEAP32[(($vfn61)>>2)];
 var $fvslider3=(($this1+528708)|0);
 FUNCTION_TABLE[$74]($72,$fvslider3,432,11952);
 var $75=$interface_addr;
 var $76=$75;
 var $vtable62=HEAP32[(($76)>>2)];
 var $vfn63=(($vtable62+52)|0);
 var $77=HEAP32[(($vfn63)>>2)];
 var $fvslider364=(($this1+528708)|0);
 FUNCTION_TABLE[$77]($75,$fvslider364,2632,2640);
 var $78=$interface_addr;
 var $79=$78;
 var $vtable65=HEAP32[(($79)>>2)];
 var $vfn66=(($vtable65+52)|0);
 var $80=HEAP32[(($vfn66)>>2)];
 var $fvslider367=(($this1+528708)|0);
 FUNCTION_TABLE[$80]($78,$fvslider367,3720,2624);
 var $81=$interface_addr;
 var $82=$81;
 var $vtable68=HEAP32[(($82)>>2)];
 var $vfn69=(($vtable68+32)|0);
 var $83=HEAP32[(($vfn69)>>2)];
 var $fvslider370=(($this1+528708)|0);
 FUNCTION_TABLE[$83]($81,432,$fvslider370,8.399999618530273,0.10000000149011612,10,0.10000000149011612);
 var $84=$interface_addr;
 var $85=$84;
 var $vtable71=HEAP32[(($85)>>2)];
 var $vfn72=(($vtable71+52)|0);
 var $86=HEAP32[(($vfn72)>>2)];
 var $fvslider4=(($this1+528712)|0);
 FUNCTION_TABLE[$86]($84,$fvslider4,1048,11952);
 var $87=$interface_addr;
 var $88=$87;
 var $vtable73=HEAP32[(($88)>>2)];
 var $vfn74=(($vtable73+52)|0);
 var $89=HEAP32[(($vfn74)>>2)];
 var $fvslider475=(($this1+528712)|0);
 FUNCTION_TABLE[$89]($87,$fvslider475,2632,2640);
 var $90=$interface_addr;
 var $91=$90;
 var $vtable76=HEAP32[(($91)>>2)];
 var $vfn77=(($vtable76+52)|0);
 var $92=HEAP32[(($vfn77)>>2)];
 var $fvslider478=(($this1+528712)|0);
 FUNCTION_TABLE[$92]($90,$fvslider478,3720,2624);
 var $93=$interface_addr;
 var $94=$93;
 var $vtable79=HEAP32[(($94)>>2)];
 var $vfn80=(($vtable79+32)|0);
 var $95=HEAP32[(($vfn80)>>2)];
 var $fvslider481=(($this1+528712)|0);
 FUNCTION_TABLE[$95]($93,1048,$fvslider481,6.5,0.10000000149011612,10,0.10000000149011612);
 var $96=$interface_addr;
 var $97=$96;
 var $vtable82=HEAP32[(($97)>>2)];
 var $vfn83=(($vtable82+52)|0);
 var $98=HEAP32[(($vfn83)>>2)];
 var $fvslider2=(($this1+528704)|0);
 FUNCTION_TABLE[$98]($96,$fvslider2,3056,11952);
 var $99=$interface_addr;
 var $100=$99;
 var $vtable84=HEAP32[(($100)>>2)];
 var $vfn85=(($vtable84+52)|0);
 var $101=HEAP32[(($vfn85)>>2)];
 var $fvslider286=(($this1+528704)|0);
 FUNCTION_TABLE[$101]($99,$fvslider286,2632,2640);
 var $102=$interface_addr;
 var $103=$102;
 var $vtable87=HEAP32[(($103)>>2)];
 var $vfn88=(($vtable87+52)|0);
 var $104=HEAP32[(($vfn88)>>2)];
 var $fvslider289=(($this1+528704)|0);
 FUNCTION_TABLE[$104]($102,$fvslider289,3720,2624);
 var $105=$interface_addr;
 var $106=$105;
 var $vtable90=HEAP32[(($106)>>2)];
 var $vfn91=(($vtable90+32)|0);
 var $107=HEAP32[(($vfn91)>>2)];
 var $fvslider292=(($this1+528704)|0);
 FUNCTION_TABLE[$107]($105,3056,$fvslider292,5,0.10000000149011612,10,0.10000000149011612);
 var $108=$interface_addr;
 var $109=$108;
 var $vtable93=HEAP32[(($109)>>2)];
 var $vfn94=(($vtable93+52)|0);
 var $110=HEAP32[(($vfn94)>>2)];
 var $fvslider1=(($this1+528700)|0);
 FUNCTION_TABLE[$110]($108,$fvslider1,3000,11952);
 var $111=$interface_addr;
 var $112=$111;
 var $vtable95=HEAP32[(($112)>>2)];
 var $vfn96=(($vtable95+52)|0);
 var $113=HEAP32[(($vfn96)>>2)];
 var $fvslider197=(($this1+528700)|0);
 FUNCTION_TABLE[$113]($111,$fvslider197,2632,2640);
 var $114=$interface_addr;
 var $115=$114;
 var $vtable98=HEAP32[(($115)>>2)];
 var $vfn99=(($vtable98+52)|0);
 var $116=HEAP32[(($vfn99)>>2)];
 var $fvslider1100=(($this1+528700)|0);
 FUNCTION_TABLE[$116]($114,$fvslider1100,3720,2624);
 var $117=$interface_addr;
 var $118=$117;
 var $vtable101=HEAP32[(($118)>>2)];
 var $vfn102=(($vtable101+32)|0);
 var $119=HEAP32[(($vfn102)>>2)];
 var $fvslider1103=(($this1+528700)|0);
 FUNCTION_TABLE[$119]($117,3000,$fvslider1103,3.799999952316284,0.10000000149011612,10,0.10000000149011612);
 var $120=$interface_addr;
 var $121=$120;
 var $vtable104=HEAP32[(($121)>>2)];
 var $vfn105=(($vtable104+52)|0);
 var $122=HEAP32[(($vfn105)>>2)];
 var $fvslider0=(($this1+528676)|0);
 FUNCTION_TABLE[$122]($120,$fvslider0,2616,11952);
 var $123=$interface_addr;
 var $124=$123;
 var $vtable106=HEAP32[(($124)>>2)];
 var $vfn107=(($vtable106+52)|0);
 var $125=HEAP32[(($vfn107)>>2)];
 var $fvslider0108=(($this1+528676)|0);
 FUNCTION_TABLE[$125]($123,$fvslider0108,2632,2640);
 var $126=$interface_addr;
 var $127=$126;
 var $vtable109=HEAP32[(($127)>>2)];
 var $vfn110=(($vtable109+52)|0);
 var $128=HEAP32[(($vfn110)>>2)];
 var $fvslider0111=(($this1+528676)|0);
 FUNCTION_TABLE[$128]($126,$fvslider0111,3720,2624);
 var $129=$interface_addr;
 var $130=$129;
 var $vtable112=HEAP32[(($130)>>2)];
 var $vfn113=(($vtable112+32)|0);
 var $131=HEAP32[(($vfn113)>>2)];
 var $fvslider0114=(($this1+528676)|0);
 FUNCTION_TABLE[$131]($129,2616,$fvslider0114,2.700000047683716,0.10000000149011612,10,0.10000000149011612);
 var $132=$interface_addr;
 var $133=$132;
 var $vtable115=HEAP32[(($133)>>2)];
 var $vfn116=(($vtable115+20)|0);
 var $134=HEAP32[(($vfn116)>>2)];
 FUNCTION_TABLE[$134]($132);
 var $135=$interface_addr;
 var $136=$135;
 var $vtable117=HEAP32[(($136)>>2)];
 var $vfn118=(($vtable117+52)|0);
 var $137=HEAP32[(($vfn118)>>2)];
 FUNCTION_TABLE[$137]($135,0,3000,11952);
 var $138=$interface_addr;
 var $139=$138;
 var $vtable119=HEAP32[(($139)>>2)];
 var $vfn120=(($vtable119+16)|0);
 var $140=HEAP32[(($vfn120)>>2)];
 FUNCTION_TABLE[$140]($138,2584);
 var $141=$interface_addr;
 var $142=$141;
 var $vtable121=HEAP32[(($142)>>2)];
 var $vfn122=(($vtable121+52)|0);
 var $143=HEAP32[(($vfn122)>>2)];
 var $fhslider1=(($this1+528668)|0);
 FUNCTION_TABLE[$143]($141,$fhslider1,1048,11952);
 var $144=$interface_addr;
 var $145=$144;
 var $vtable123=HEAP32[(($145)>>2)];
 var $vfn124=(($vtable123+52)|0);
 var $146=HEAP32[(($vfn124)>>2)];
 var $fhslider1125=(($this1+528668)|0);
 FUNCTION_TABLE[$146]($144,$fhslider1125,2632,2400);
 var $147=$interface_addr;
 var $148=$147;
 var $vtable126=HEAP32[(($148)>>2)];
 var $vfn127=(($vtable126+52)|0);
 var $149=HEAP32[(($vfn127)>>2)];
 var $fhslider1128=(($this1+528668)|0);
 FUNCTION_TABLE[$149]($147,$fhslider1128,3720,2392);
 var $150=$interface_addr;
 var $151=$150;
 var $vtable129=HEAP32[(($151)>>2)];
 var $vfn130=(($vtable129+36)|0);
 var $152=HEAP32[(($vfn130)>>2)];
 var $fhslider1131=(($this1+528668)|0);
 FUNCTION_TABLE[$152]($150,2352,$fhslider1131,46,0.10000000149011612,63,0.10000000149011612);
 var $153=$interface_addr;
 var $154=$153;
 var $vtable132=HEAP32[(($154)>>2)];
 var $vfn133=(($vtable132+52)|0);
 var $155=HEAP32[(($vfn133)>>2)];
 var $fhslider2=(($this1+528672)|0);
 FUNCTION_TABLE[$155]($153,$fhslider2,3056,11952);
 var $156=$interface_addr;
 var $157=$156;
 var $vtable134=HEAP32[(($157)>>2)];
 var $vfn135=(($vtable134+52)|0);
 var $158=HEAP32[(($vfn135)>>2)];
 var $fhslider2136=(($this1+528672)|0);
 FUNCTION_TABLE[$158]($156,$fhslider2136,2632,2176);
 var $159=$interface_addr;
 var $160=$159;
 var $vtable137=HEAP32[(($160)>>2)];
 var $vfn138=(($vtable137+52)|0);
 var $161=HEAP32[(($vfn138)>>2)];
 var $fhslider2139=(($this1+528672)|0);
 FUNCTION_TABLE[$161]($159,$fhslider2139,3720,2392);
 var $162=$interface_addr;
 var $163=$162;
 var $vtable140=HEAP32[(($163)>>2)];
 var $vfn141=(($vtable140+36)|0);
 var $164=HEAP32[(($vfn141)>>2)];
 var $fhslider2142=(($this1+528672)|0);
 FUNCTION_TABLE[$164]($162,2120,$fhslider2142,63,0.10000000149011612,63,0.10000000149011612);
 var $165=$interface_addr;
 var $166=$165;
 var $vtable143=HEAP32[(($166)>>2)];
 var $vfn144=(($vtable143+20)|0);
 var $167=HEAP32[(($vfn144)>>2)];
 FUNCTION_TABLE[$167]($165);
 var $168=$interface_addr;
 var $169=$168;
 var $vtable145=HEAP32[(($169)>>2)];
 var $vfn146=(($vtable145+52)|0);
 var $170=HEAP32[(($vfn146)>>2)];
 FUNCTION_TABLE[$170]($168,0,2616,11952);
 var $171=$interface_addr;
 var $172=$171;
 var $vtable147=HEAP32[(($172)>>2)];
 var $vfn148=(($vtable147+12)|0);
 var $173=HEAP32[(($vfn148)>>2)];
 FUNCTION_TABLE[$173]($171,2088);
 var $174=$interface_addr;
 var $175=$174;
 var $vtable149=HEAP32[(($175)>>2)];
 var $vfn150=(($vtable149+52)|0);
 var $176=HEAP32[(($vfn150)>>2)];
 FUNCTION_TABLE[$176]($174,0,1048,11952);
 var $177=$interface_addr;
 var $178=$177;
 var $vtable151=HEAP32[(($178)>>2)];
 var $vfn152=(($vtable151+16)|0);
 var $179=HEAP32[(($vfn152)>>2)];
 FUNCTION_TABLE[$179]($177,2048);
 var $180=$interface_addr;
 var $181=$180;
 var $vtable153=HEAP32[(($181)>>2)];
 var $vfn154=(($vtable153+52)|0);
 var $182=HEAP32[(($vfn154)>>2)];
 var $fcheckbox1=(($this1+528644)|0);
 FUNCTION_TABLE[$182]($180,$fcheckbox1,1048,11952);
 var $183=$interface_addr;
 var $184=$183;
 var $vtable155=HEAP32[(($184)>>2)];
 var $vfn156=(($vtable155+52)|0);
 var $185=HEAP32[(($vfn156)>>2)];
 var $fcheckbox1157=(($this1+528644)|0);
 FUNCTION_TABLE[$185]($183,$fcheckbox1157,2632,1848);
 var $186=$interface_addr;
 var $187=$186;
 var $vtable158=HEAP32[(($187)>>2)];
 var $vfn159=(($vtable158+28)|0);
 var $188=HEAP32[(($vfn159)>>2)];
 var $fcheckbox1160=(($this1+528644)|0);
 FUNCTION_TABLE[$188]($186,1816,$fcheckbox1160);
 var $189=$interface_addr;
 var $190=$189;
 var $vtable161=HEAP32[(($190)>>2)];
 var $vfn162=(($vtable161+52)|0);
 var $191=HEAP32[(($vfn162)>>2)];
 var $fcheckbox0=(($this1+528632)|0);
 FUNCTION_TABLE[$191]($189,$fcheckbox0,3056,11952);
 var $192=$interface_addr;
 var $193=$192;
 var $vtable163=HEAP32[(($193)>>2)];
 var $vfn164=(($vtable163+52)|0);
 var $194=HEAP32[(($vfn164)>>2)];
 var $fcheckbox0165=(($this1+528632)|0);
 FUNCTION_TABLE[$194]($192,$fcheckbox0165,2632,1688);
 var $195=$interface_addr;
 var $196=$195;
 var $vtable166=HEAP32[(($196)>>2)];
 var $vfn167=(($vtable166+28)|0);
 var $197=HEAP32[(($vfn167)>>2)];
 var $fcheckbox0168=(($this1+528632)|0);
 FUNCTION_TABLE[$197]($195,1640,$fcheckbox0168);
 var $198=$interface_addr;
 var $199=$198;
 var $vtable169=HEAP32[(($199)>>2)];
 var $vfn170=(($vtable169+20)|0);
 var $200=HEAP32[(($vfn170)>>2)];
 FUNCTION_TABLE[$200]($198);
 var $201=$interface_addr;
 var $202=$201;
 var $vtable171=HEAP32[(($202)>>2)];
 var $vfn172=(($vtable171+52)|0);
 var $203=HEAP32[(($vfn172)>>2)];
 FUNCTION_TABLE[$203]($201,0,3056,11952);
 var $204=$interface_addr;
 var $205=$204;
 var $vtable173=HEAP32[(($205)>>2)];
 var $vfn174=(($vtable173+12)|0);
 var $206=HEAP32[(($vfn174)>>2)];
 FUNCTION_TABLE[$206]($204,1576);
 var $207=$interface_addr;
 var $208=$207;
 var $vtable175=HEAP32[(($208)>>2)];
 var $vfn176=(($vtable175+52)|0);
 var $209=HEAP32[(($vfn176)>>2)];
 var $fbutton1=(($this1+528640)|0);
 FUNCTION_TABLE[$209]($207,$fbutton1,1048,11952);
 var $210=$interface_addr;
 var $211=$210;
 var $vtable177=HEAP32[(($211)>>2)];
 var $vfn178=(($vtable177+52)|0);
 var $212=HEAP32[(($vfn178)>>2)];
 var $fbutton1179=(($this1+528640)|0);
 FUNCTION_TABLE[$212]($210,$fbutton1179,2632,1520);
 var $213=$interface_addr;
 var $214=$213;
 var $vtable180=HEAP32[(($214)>>2)];
 var $vfn181=(($vtable180+24)|0);
 var $215=HEAP32[(($vfn181)>>2)];
 var $fbutton1182=(($this1+528640)|0);
 FUNCTION_TABLE[$215]($213,1424,$fbutton1182);
 var $216=$interface_addr;
 var $217=$216;
 var $vtable183=HEAP32[(($217)>>2)];
 var $vfn184=(($vtable183+52)|0);
 var $218=HEAP32[(($vfn184)>>2)];
 var $fbutton0=(($this1+528636)|0);
 FUNCTION_TABLE[$218]($216,$fbutton0,3056,11952);
 var $219=$interface_addr;
 var $220=$219;
 var $vtable185=HEAP32[(($220)>>2)];
 var $vfn186=(($vtable185+52)|0);
 var $221=HEAP32[(($vfn186)>>2)];
 var $fbutton0187=(($this1+528636)|0);
 FUNCTION_TABLE[$221]($219,$fbutton0187,2632,1360);
 var $222=$interface_addr;
 var $223=$222;
 var $vtable188=HEAP32[(($223)>>2)];
 var $vfn189=(($vtable188+24)|0);
 var $224=HEAP32[(($vfn189)>>2)];
 var $fbutton0190=(($this1+528636)|0);
 FUNCTION_TABLE[$224]($222,1304,$fbutton0190);
 var $225=$interface_addr;
 var $226=$225;
 var $vtable191=HEAP32[(($226)>>2)];
 var $vfn192=(($vtable191+52)|0);
 var $227=HEAP32[(($vfn192)>>2)];
 var $fbutton3=(($this1+528720)|0);
 FUNCTION_TABLE[$227]($225,$fbutton3,3000,11952);
 var $228=$interface_addr;
 var $229=$228;
 var $vtable193=HEAP32[(($229)>>2)];
 var $vfn194=(($vtable193+52)|0);
 var $230=HEAP32[(($vfn194)>>2)];
 var $fbutton3195=(($this1+528720)|0);
 FUNCTION_TABLE[$230]($228,$fbutton3195,2632,1272);
 var $231=$interface_addr;
 var $232=$231;
 var $vtable196=HEAP32[(($232)>>2)];
 var $vfn197=(($vtable196+24)|0);
 var $233=HEAP32[(($vfn197)>>2)];
 var $fbutton3198=(($this1+528720)|0);
 FUNCTION_TABLE[$233]($231,1184,$fbutton3198);
 var $234=$interface_addr;
 var $235=$234;
 var $vtable199=HEAP32[(($235)>>2)];
 var $vfn200=(($vtable199+20)|0);
 var $236=HEAP32[(($vfn200)>>2)];
 FUNCTION_TABLE[$236]($234);
 var $237=$interface_addr;
 var $238=$237;
 var $vtable201=HEAP32[(($238)>>2)];
 var $vfn202=(($vtable201+52)|0);
 var $239=HEAP32[(($vfn202)>>2)];
 FUNCTION_TABLE[$239]($237,0,3000,11952);
 var $240=$interface_addr;
 var $241=$240;
 var $vtable203=HEAP32[(($241)>>2)];
 var $vfn204=(($vtable203+16)|0);
 var $242=HEAP32[(($vfn204)>>2)];
 FUNCTION_TABLE[$242]($240,1168);
 var $243=$interface_addr;
 var $244=$243;
 var $vtable205=HEAP32[(($244)>>2)];
 var $vfn206=(($vtable205+52)|0);
 var $245=HEAP32[(($vfn206)>>2)];
 var $fbutton2=(($this1+528648)|0);
 FUNCTION_TABLE[$245]($243,$fbutton2,1048,11952);
 var $246=$interface_addr;
 var $247=$246;
 var $vtable207=HEAP32[(($247)>>2)];
 var $vfn208=(($vtable207+52)|0);
 var $248=HEAP32[(($vfn208)>>2)];
 var $fbutton2209=(($this1+528648)|0);
 FUNCTION_TABLE[$248]($246,$fbutton2209,2632,1120);
 var $249=$interface_addr;
 var $250=$249;
 var $vtable210=HEAP32[(($250)>>2)];
 var $vfn211=(($vtable210+24)|0);
 var $251=HEAP32[(($vfn211)>>2)];
 var $fbutton2212=(($this1+528648)|0);
 FUNCTION_TABLE[$251]($249,1112,$fbutton2212);
 var $252=$interface_addr;
 var $253=$252;
 var $vtable213=HEAP32[(($253)>>2)];
 var $vfn214=(($vtable213+20)|0);
 var $254=HEAP32[(($vfn214)>>2)];
 FUNCTION_TABLE[$254]($252);
 var $255=$interface_addr;
 var $256=$255;
 var $vtable215=HEAP32[(($256)>>2)];
 var $vfn216=(($vtable215+20)|0);
 var $257=HEAP32[(($vfn216)>>2)];
 FUNCTION_TABLE[$257]($255);
 var $258=$interface_addr;
 var $259=$258;
 var $vtable217=HEAP32[(($259)>>2)];
 var $vfn218=(($vtable217+20)|0);
 var $260=HEAP32[(($vfn218)>>2)];
 FUNCTION_TABLE[$260]($258);
 var $261=$interface_addr;
 var $262=$261;
 var $vtable219=HEAP32[(($262)>>2)];
 var $vfn220=(($vtable219+52)|0);
 var $263=HEAP32[(($vfn220)>>2)];
 var $fhslider0=(($this1+528628)|0);
 FUNCTION_TABLE[$263]($261,$fhslider0,3000,11952);
 var $264=$interface_addr;
 var $265=$264;
 var $vtable221=HEAP32[(($265)>>2)];
 var $vfn222=(($vtable221+52)|0);
 var $266=HEAP32[(($vfn222)>>2)];
 var $fhslider0223=(($this1+528628)|0);
 FUNCTION_TABLE[$266]($264,$fhslider0223,2632,1088);
 var $267=$interface_addr;
 var $268=$267;
 var $vtable224=HEAP32[(($268)>>2)];
 var $vfn225=(($vtable224+52)|0);
 var $269=HEAP32[(($vfn225)>>2)];
 var $fhslider0226=(($this1+528628)|0);
 FUNCTION_TABLE[$269]($267,$fhslider0226,3720,1080);
 var $270=$interface_addr;
 var $271=$270;
 var $vtable227=HEAP32[(($271)>>2)];
 var $vfn228=(($vtable227+36)|0);
 var $272=HEAP32[(($vfn228)>>2)];
 var $fhslider0229=(($this1+528628)|0);
 FUNCTION_TABLE[$272]($270,1056,$fhslider0229,-40,-70,20,0.10000000149011612);
 var $273=$interface_addr;
 var $274=$273;
 var $vtable230=HEAP32[(($274)>>2)];
 var $vfn231=(($vtable230+20)|0);
 var $275=HEAP32[(($vfn231)>>2)];
 FUNCTION_TABLE[$275]($273);
 return;
}
function __ZN14ReverbDesigner4initEi($this,$samplingFreq){
 var label=0;
 var $this_addr;
 var $samplingFreq_addr;
 $this_addr=$this;
 $samplingFreq_addr=$samplingFreq;
 var $this1=$this_addr;
 var $0=$samplingFreq_addr;
 __ZN14ReverbDesigner9classInitEi($0);
 var $1=$this1;
 var $vtable=HEAP32[(($1)>>2)];
 var $vfn=(($vtable+36)|0);
 var $2=HEAP32[(($vfn)>>2)];
 var $3=$samplingFreq_addr;
 FUNCTION_TABLE[$2]($this1,$3);
 return;
}
function __ZN14ReverbDesigner7computeEiPPfS1_($this,$count,$inputs,$outputs){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $this_addr;
 var $count_addr;
 var $inputs_addr;
 var $outputs_addr;
 var $input0;
 var $input1;
 var $output0;
 var $output1;
 var $fSlow0;
 var $fSlow1;
 var $fSlow2;
 var $fSlow3;
 var $fSlow4;
 var $fSlow5;
 var $fSlow6;
 var $fSlow7;
 var $fSlow8;
 var $fSlow9;
 var $fSlow10;
 var $fSlow11;
 var $fSlow12;
 var $fSlow13;
 var $fSlow14;
 var $fSlow15;
 var $fSlow16;
 var $fSlow17;
 var $fSlow18;
 var $fSlow19;
 var $fSlow20;
 var $fSlow21;
 var $fSlow22;
 var $fSlow23;
 var $fSlow24;
 var $fSlow25;
 var $fSlow26;
 var $fSlow27;
 var $fSlow28;
 var $fSlow29;
 var $fSlow30;
 var $fSlow31;
 var $fSlow32;
 var $fSlow33;
 var $fSlow34;
 var $fSlow35;
 var $fSlow36;
 var $fSlow37;
 var $fSlow38;
 var $fSlow39;
 var $fSlow40;
 var $fSlow41;
 var $fSlow42;
 var $fSlow43;
 var $fSlow44;
 var $fSlow45;
 var $fSlow46;
 var $fSlow47;
 var $fSlow48;
 var $fSlow49;
 var $fSlow50;
 var $fSlow51;
 var $fSlow52;
 var $fSlow53;
 var $fSlow54;
 var $fSlow55;
 var $fSlow56;
 var $fSlow57;
 var $fSlow58;
 var $fSlow59;
 var $fSlow60;
 var $fSlow61;
 var $fSlow62;
 var $fSlow63;
 var $fSlow64;
 var $fSlow65;
 var $fSlow66;
 var $fSlow67;
 var $fSlow68;
 var $fSlow69;
 var $fSlow70;
 var $fSlow71;
 var $fSlow72;
 var $fSlow73;
 var $fSlow74;
 var $fSlow75;
 var $fSlow76;
 var $fSlow77;
 var $fSlow78;
 var $fSlow79;
 var $fSlow80;
 var $fSlow81;
 var $fSlow82;
 var $fSlow83;
 var $fSlow84;
 var $fSlow85;
 var $fSlow86;
 var $fSlow87;
 var $fSlow88;
 var $fSlow89;
 var $fSlow90;
 var $fSlow91;
 var $fSlow92;
 var $fSlow93;
 var $fSlow94;
 var $fSlow95;
 var $fSlow96;
 var $fSlow97;
 var $fSlow98;
 var $fSlow99;
 var $fSlow100;
 var $fSlow101;
 var $fSlow102;
 var $fSlow103;
 var $fSlow104;
 var $fSlow105;
 var $fSlow106;
 var $fSlow107;
 var $fSlow108;
 var $fSlow109;
 var $fSlow110;
 var $fSlow111;
 var $fSlow112;
 var $fSlow113;
 var $fSlow114;
 var $fSlow115;
 var $fSlow116;
 var $fSlow117;
 var $fSlow118;
 var $fSlow119;
 var $fSlow120;
 var $fSlow121;
 var $fSlow122;
 var $fSlow123;
 var $fSlow124;
 var $fSlow125;
 var $fSlow126;
 var $fSlow127;
 var $fSlow128;
 var $fSlow129;
 var $fSlow130;
 var $fSlow131;
 var $fSlow132;
 var $fSlow133;
 var $fSlow134;
 var $fSlow135;
 var $fSlow136;
 var $fSlow137;
 var $fSlow138;
 var $fSlow139;
 var $fSlow140;
 var $fSlow141;
 var $fSlow142;
 var $fSlow143;
 var $fSlow144;
 var $fSlow145;
 var $fSlow146;
 var $fSlow147;
 var $fSlow148;
 var $fSlow149;
 var $fSlow150;
 var $fSlow151;
 var $fSlow152;
 var $fSlow153;
 var $fSlow154;
 var $fSlow155;
 var $fSlow156;
 var $fSlow157;
 var $fSlow158;
 var $fSlow159;
 var $fSlow160;
 var $fSlow161;
 var $fSlow162;
 var $fSlow163;
 var $fSlow164;
 var $fSlow165;
 var $fSlow166;
 var $fSlow167;
 var $fSlow168;
 var $fSlow169;
 var $fSlow170;
 var $fSlow171;
 var $fSlow172;
 var $fSlow173;
 var $fSlow174;
 var $fSlow175;
 var $fSlow176;
 var $fSlow177;
 var $fSlow178;
 var $fSlow179;
 var $fSlow180;
 var $fSlow181;
 var $iSlow182;
 var $fSlow183;
 var $iSlow184;
 var $iSlow185;
 var $iSlow186;
 var $iSlow187;
 var $iSlow188;
 var $iSlow189;
 var $iSlow190;
 var $iSlow191;
 var $iSlow192;
 var $iSlow193;
 var $iSlow194;
 var $iSlow195;
 var $iSlow196;
 var $iSlow197;
 var $iSlow198;
 var $i;
 var $fTemp0;
 var $iTemp1;
 var $iTemp2;
 var $fTemp3;
 var $fTemp4;
 var $fTemp5;
 var $fTemp6;
 var $fTemp7;
 var $fTemp8;
 var $fTemp9;
 var $fTemp10;
 var $fTemp11;
 var $fTemp12;
 var $fTemp13;
 var $fTemp14;
 var $fTemp15;
 var $fTemp16;
 var $fTemp17;
 var $fTemp18;
 var $fTemp19;
 var $fTemp20;
 var $fTemp21;
 var $fTemp22;
 var $fTemp23;
 var $fTemp24;
 var $fTemp25;
 var $fTemp26;
 var $fTemp27;
 var $fTemp28;
 var $fTemp29;
 var $fTemp30;
 var $fTemp31;
 var $fTemp32;
 var $fTemp33;
 var $fTemp34;
 var $fTemp35;
 var $fTemp36;
 var $fTemp37;
 var $fTemp38;
 var $fTemp39;
 var $fTemp40;
 var $fTemp41;
 var $fTemp42;
 var $fTemp43;
 var $fTemp44;
 var $fTemp45;
 var $fTemp46;
 var $fTemp47;
 var $fTemp48;
 var $fTemp49;
 var $fTemp50;
 var $fTemp51;
 var $fTemp52;
 var $fTemp53;
 var $fTemp54;
 var $fTemp55;
 var $fTemp56;
 var $fTemp57;
 var $fTemp58;
 var $fTemp59;
 var $fTemp60;
 var $fTemp61;
 var $fTemp62;
 var $fTemp63;
 var $fTemp64;
 var $fTemp65;
 var $fTemp66;
 var $fTemp67;
 var $fTemp68;
 var $fTemp69;
 var $fTemp70;
 var $fTemp71;
 var $fTemp72;
 var $fTemp73;
 var $fTemp74;
 var $fTemp75;
 var $fTemp76;
 var $fTemp77;
 var $fTemp78;
 var $fTemp79;
 var $fTemp80;
 var $fTemp81;
 var $fTemp82;
 var $fTemp83;
 var $fTemp84;
 var $fTemp85;
 var $fTemp86;
 var $fTemp87;
 var $fTemp88;
 var $fTemp89;
 var $fTemp90;
 var $fTemp91;
 var $fTemp92;
 var $fTemp93;
 var $fTemp94;
 var $fTemp95;
 var $fTemp96;
 var $fTemp97;
 var $fTemp98;
 var $fTemp99;
 var $fTemp100;
 var $fTemp101;
 var $fTemp102;
 var $fTemp103;
 var $fTemp104;
 var $fTemp105;
 var $fTemp106;
 var $fTemp107;
 var $fTemp108;
 var $fTemp109;
 var $fTemp110;
 var $fTemp111;
 var $fTemp112;
 var $fTemp113;
 var $fTemp114;
 var $fTemp115;
 var $fTemp116;
 var $fTemp117;
 var $fTemp118;
 var $fTemp119;
 var $fTemp120;
 var $fTemp121;
 var $fTemp122;
 var $fTemp123;
 var $fTemp124;
 var $fTemp125;
 var $fTemp126;
 var $fTemp127;
 var $fTemp128;
 var $fTemp129;
 var $fTemp130;
 var $fTemp131;
 var $fTemp132;
 var $fTemp133;
 var $fTemp134;
 var $fTemp135;
 var $fTemp136;
 var $fTemp137;
 var $fTemp138;
 var $fTemp139;
 var $fTemp140;
 var $fTemp141;
 var $fTemp142;
 var $fTemp143;
 var $fTemp144;
 var $fTemp145;
 var $fTemp146;
 var $fTemp147;
 var $fTemp148;
 var $fTemp149;
 var $fTemp150;
 var $fTemp151;
 var $fTemp152;
 var $fTemp153;
 var $fTemp154;
 var $fTemp155;
 var $fTemp156;
 var $fTemp157;
 var $fTemp158;
 var $fTemp159;
 var $fTemp160;
 var $fTemp161;
 var $fTemp162;
 var $fTemp163;
 var $fTemp164;
 var $fTemp165;
 var $fTemp166;
 var $fTemp167;
 var $fTemp168;
 var $fTemp169;
 var $fTemp170;
 var $fTemp171;
 var $fTemp172;
 var $fTemp173;
 var $fTemp174;
 var $fTemp175;
 var $fTemp176;
 var $fTemp177;
 var $fTemp178;
 var $fTemp179;
 var $fTemp180;
 var $fTemp181;
 var $fTemp182;
 var $fTemp183;
 var $fTemp184;
 var $fTemp185;
 var $fTemp186;
 var $fTemp187;
 var $fTemp188;
 var $fTemp189;
 var $fTemp190;
 var $fTemp191;
 var $fTemp192;
 var $fTemp193;
 var $fTemp194;
 var $fTemp195;
 var $fTemp196;
 var $fTemp197;
 var $fTemp198;
 var $fTemp199;
 var $fTemp200;
 var $fTemp201;
 var $fTemp202;
 var $fTemp203;
 var $fTemp204;
 var $fTemp205;
 var $fTemp206;
 var $fTemp207;
 var $fTemp208;
 var $fTemp209;
 var $fTemp210;
 var $fTemp211;
 var $fTemp212;
 var $fTemp213;
 var $fTemp214;
 var $fTemp215;
 var $fTemp216;
 var $fTemp217;
 var $fTemp218;
 var $fTemp219;
 var $fTemp220;
 var $fTemp221;
 var $fTemp222;
 var $fTemp223;
 var $fTemp224;
 var $fTemp225;
 var $iTemp226;
 var $fTemp227;
 var $fTemp228;
 var $fTemp229;
 var $fTemp230;
 var $fTemp231;
 var $fTemp232;
 var $fTemp233;
 var $fTemp234;
 var $fTemp235;
 var $fTemp236;
 var $fTemp237;
 var $fTemp238;
 var $fTemp239;
 var $fTemp240;
 var $fTemp241;
 var $fTemp242;
 var $fTemp243;
 var $fTemp244;
 var $fTemp245;
 var $fTemp246;
 var $fTemp247;
 var $fTemp248;
 var $fTemp249;
 var $fTemp250;
 var $fTemp251;
 var $fTemp252;
 var $fTemp253;
 var $fTemp254;
 var $fTemp255;
 var $fTemp256;
 var $fTemp257;
 var $fTemp258;
 var $fTemp259;
 var $fTemp260;
 var $fTemp261;
 var $fTemp262;
 var $fTemp263;
 var $fTemp264;
 var $j;
 $this_addr=$this;
 $count_addr=$count;
 $inputs_addr=$inputs;
 $outputs_addr=$outputs;
 var $this1=$this_addr;
 var $0=$inputs_addr;
 var $arrayidx=(($0)|0);
 var $1=HEAP32[(($arrayidx)>>2)];
 $input0=$1;
 var $2=$inputs_addr;
 var $arrayidx2=(($2+4)|0);
 var $3=HEAP32[(($arrayidx2)>>2)];
 $input1=$3;
 var $4=$outputs_addr;
 var $arrayidx3=(($4)|0);
 var $5=HEAP32[(($arrayidx3)>>2)];
 $output0=$5;
 var $6=$outputs_addr;
 var $arrayidx4=(($6+4)|0);
 var $7=HEAP32[(($arrayidx4)>>2)];
 $output1=$7;
 var $fhslider0=(($this1+528628)|0);
 var $8=HEAPF32[(($fhslider0)>>2)];
 var $mul=((0.05000000074505806))*($8);
 var $call=Math_pow(10,$mul);
 $fSlow0=$call;
 var $fcheckbox0=(($this1+528632)|0);
 var $9=HEAPF32[(($fcheckbox0)>>2)];
 var $mul5=((0.10000000149011612))*($9);
 $fSlow1=$mul5;
 var $fbutton0=(($this1+528636)|0);
 var $10=HEAPF32[(($fbutton0)>>2)];
 $fSlow2=$10;
 var $fbutton1=(($this1+528640)|0);
 var $11=HEAPF32[(($fbutton1)>>2)];
 $fSlow3=$11;
 var $fcheckbox1=(($this1+528644)|0);
 var $12=HEAPF32[(($fcheckbox1)>>2)];
 var $sub=(1)-($12);
 $fSlow4=$sub;
 var $fbutton2=(($this1+528648)|0);
 var $13=HEAPF32[(($fbutton2)>>2)];
 var $mul6=((0.5))*($13);
 var $sub7=(1)-($mul6);
 $fSlow5=$sub7;
 var $14=$fSlow5;
 var $mul8=((0.25))*($14);
 $fSlow6=$mul8;
 var $fhslider1=(($this1+528668)|0);
 var $15=HEAPF32[(($fhslider1)>>2)];
 $fSlow7=$15;
 var $fhslider2=(($this1+528672)|0);
 var $16=HEAPF32[(($fhslider2)>>2)];
 var $17=$fSlow7;
 var $div=($16)/($17);
 $fSlow8=$div;
 var $fConst2=(($this1+528664)|0);
 var $18=HEAPF32[(($fConst2)>>2)];
 var $19=$fSlow7;
 var $20=$fSlow8;
 var $call9=Math_pow($20,0);
 var $mul10=($19)*($call9);
 var $mul11=($18)*($mul10);
 var $call12=Math_log($mul11);
 var $mul13=((1.4427000284194946))*($call12);
 var $add=((0.5))+($mul13);
 var $call14=Math_floor($add);
 var $call15=Math_pow(2,$call14);
 $fSlow9=$call15;
 var $21=$fSlow9;
 var $mul16=((6.907760143280029))*($21);
 var $sub17=(-$mul16);
 $fSlow10=$sub17;
 var $fvslider0=(($this1+528676)|0);
 var $22=HEAPF32[(($fvslider0)>>2)];
 $fSlow11=$22;
 var $fConst1=(($this1+528660)|0);
 var $23=HEAPF32[(($fConst1)>>2)];
 var $24=$fSlow10;
 var $25=$fSlow11;
 var $div18=($24)/($25);
 var $mul19=($23)*($div18);
 var $call20=Math_exp($mul19);
 $fSlow12=$call20;
 var $fConst3=(($this1+528680)|0);
 var $26=HEAPF32[(($fConst3)>>2)];
 var $fhslider3=(($this1+528684)|0);
 var $27=HEAPF32[(($fhslider3)>>2)];
 var $mul21=($26)*($27);
 var $call22=Math_tan($mul21);
 $fSlow13=$call22;
 var $28=$fSlow13;
 var $div23=(1)/($28);
 $fSlow14=$div23;
 var $29=$fSlow14;
 var $add24=($29)+(1);
 var $30=$fSlow13;
 var $div25=($add24)/($30);
 var $add26=($div25)+(1);
 $fSlow15=$add26;
 var $31=$fSlow15;
 var $div27=(1)/($31);
 $fSlow16=$div27;
 var $32=$fSlow13;
 var $call28=__Z13faustpower2_ff($32);
 var $div29=(1)/($call28);
 $fSlow17=$div29;
 var $33=$fSlow14;
 var $add30=($33)+(1);
 $fSlow18=$add30;
 var $34=$fSlow14;
 var $sub31=(1)-($34);
 var $35=$fSlow18;
 var $div32=($sub31)/($35);
 var $sub33=(-$div32);
 $fSlow19=$sub33;
 var $36=$fSlow18;
 var $div34=(1)/($36);
 $fSlow20=$div34;
 var $37=$fSlow14;
 var $sub35=(-$37);
 $fSlow21=$sub35;
 var $38=$fSlow14;
 var $sub36=($38)-(1);
 var $39=$fSlow13;
 var $div37=($sub36)/($39);
 var $add38=($div37)+(1);
 $fSlow22=$add38;
 var $40=$fSlow17;
 var $sub39=(1)-($40);
 var $mul40=($sub39)*(2);
 $fSlow23=$mul40;
 var $41=$fSlow17;
 var $sub41=(-$41);
 var $mul42=($sub41)*(2);
 $fSlow24=$mul42;
 var $fConst343=(($this1+528680)|0);
 var $42=HEAPF32[(($fConst343)>>2)];
 var $fhslider4=(($this1+528688)|0);
 var $43=HEAPF32[(($fhslider4)>>2)];
 var $mul44=($42)*($43);
 var $call45=Math_tan($mul44);
 $fSlow25=$call45;
 var $44=$fSlow25;
 var $div46=(1)/($44);
 $fSlow26=$div46;
 var $45=$fSlow26;
 var $add47=($45)+(1);
 var $46=$fSlow25;
 var $div48=($add47)/($46);
 var $add49=($div48)+(1);
 var $div50=(1)/($add49);
 $fSlow27=$div50;
 var $47=$fSlow26;
 var $sub51=($47)-(1);
 var $48=$fSlow25;
 var $div52=($sub51)/($48);
 var $add53=($div52)+(1);
 $fSlow28=$add53;
 var $49=$fSlow25;
 var $call54=__Z13faustpower2_ff($49);
 var $div55=(1)/($call54);
 $fSlow29=$div55;
 var $50=$fSlow29;
 var $sub56=(1)-($50);
 var $mul57=($sub56)*(2);
 $fSlow30=$mul57;
 var $fConst358=(($this1+528680)|0);
 var $51=HEAPF32[(($fConst358)>>2)];
 var $fhslider5=(($this1+528692)|0);
 var $52=HEAPF32[(($fhslider5)>>2)];
 var $mul59=($51)*($52);
 var $call60=Math_tan($mul59);
 $fSlow31=$call60;
 var $53=$fSlow31;
 var $div61=(1)/($53);
 $fSlow32=$div61;
 var $54=$fSlow32;
 var $add62=($54)+(1);
 var $55=$fSlow31;
 var $div63=($add62)/($55);
 var $add64=($div63)+(1);
 var $div65=(1)/($add64);
 $fSlow33=$div65;
 var $56=$fSlow32;
 var $sub66=($56)-(1);
 var $57=$fSlow31;
 var $div67=($sub66)/($57);
 var $add68=($div67)+(1);
 $fSlow34=$add68;
 var $58=$fSlow31;
 var $call69=__Z13faustpower2_ff($58);
 var $div70=(1)/($call69);
 $fSlow35=$div70;
 var $59=$fSlow35;
 var $sub71=(1)-($59);
 var $mul72=($sub71)*(2);
 $fSlow36=$mul72;
 var $fConst373=(($this1+528680)|0);
 var $60=HEAPF32[(($fConst373)>>2)];
 var $fhslider6=(($this1+528696)|0);
 var $61=HEAPF32[(($fhslider6)>>2)];
 var $mul74=($60)*($61);
 var $call75=Math_tan($mul74);
 $fSlow37=$call75;
 var $62=$fSlow37;
 var $div76=(1)/($62);
 $fSlow38=$div76;
 var $63=$fSlow38;
 var $add77=($63)+(1);
 var $64=$fSlow37;
 var $div78=($add77)/($64);
 var $add79=($div78)+(1);
 var $div80=(1)/($add79);
 $fSlow39=$div80;
 var $65=$fSlow38;
 var $sub81=($65)-(1);
 var $66=$fSlow37;
 var $div82=($sub81)/($66);
 var $add83=($div82)+(1);
 $fSlow40=$add83;
 var $67=$fSlow37;
 var $call84=__Z13faustpower2_ff($67);
 var $div85=(1)/($call84);
 $fSlow41=$div85;
 var $68=$fSlow41;
 var $sub86=(1)-($68);
 var $mul87=($sub86)*(2);
 $fSlow42=$mul87;
 var $fvslider1=(($this1+528700)|0);
 var $69=HEAPF32[(($fvslider1)>>2)];
 $fSlow43=$69;
 var $fConst188=(($this1+528660)|0);
 var $70=HEAPF32[(($fConst188)>>2)];
 var $71=$fSlow10;
 var $72=$fSlow43;
 var $div89=($71)/($72);
 var $mul90=($70)*($div89);
 var $call91=Math_exp($mul90);
 $fSlow44=$call91;
 var $73=$fSlow26;
 var $add92=($73)+(1);
 var $74=$fSlow25;
 var $div93=($add92)/($74);
 var $add94=($div93)+(1);
 $fSlow45=$add94;
 var $75=$fSlow45;
 var $div95=(1)/($75);
 $fSlow46=$div95;
 var $76=$fSlow26;
 var $add96=($76)+(1);
 $fSlow47=$add96;
 var $77=$fSlow26;
 var $sub97=(1)-($77);
 var $78=$fSlow47;
 var $div98=($sub97)/($78);
 var $sub99=(-$div98);
 $fSlow48=$sub99;
 var $79=$fSlow47;
 var $div100=(1)/($79);
 $fSlow49=$div100;
 var $80=$fSlow15;
 var $81=$fSlow25;
 var $mul101=($80)*($81);
 var $div102=(1)/($mul101);
 $fSlow50=$div102;
 var $82=$fSlow26;
 var $sub103=(-$82);
 $fSlow51=$sub103;
 var $83=$fSlow26;
 var $sub104=($83)-(1);
 var $84=$fSlow25;
 var $div105=($sub104)/($84);
 var $add106=($div105)+(1);
 $fSlow52=$add106;
 var $85=$fSlow29;
 var $sub107=(-$85);
 var $mul108=($sub107)*(2);
 $fSlow53=$mul108;
 var $fvslider2=(($this1+528704)|0);
 var $86=HEAPF32[(($fvslider2)>>2)];
 $fSlow54=$86;
 var $fConst1109=(($this1+528660)|0);
 var $87=HEAPF32[(($fConst1109)>>2)];
 var $88=$fSlow10;
 var $89=$fSlow54;
 var $div110=($88)/($89);
 var $mul111=($87)*($div110);
 var $call112=Math_exp($mul111);
 $fSlow55=$call112;
 var $90=$fSlow32;
 var $add113=($90)+(1);
 var $91=$fSlow31;
 var $div114=($add113)/($91);
 var $add115=($div114)+(1);
 $fSlow56=$add115;
 var $92=$fSlow56;
 var $div116=(1)/($92);
 $fSlow57=$div116;
 var $93=$fSlow32;
 var $add117=($93)+(1);
 $fSlow58=$add117;
 var $94=$fSlow32;
 var $sub118=(1)-($94);
 var $95=$fSlow58;
 var $div119=($sub118)/($95);
 var $sub120=(-$div119);
 $fSlow59=$sub120;
 var $96=$fSlow58;
 var $div121=(1)/($96);
 $fSlow60=$div121;
 var $97=$fSlow45;
 var $98=$fSlow31;
 var $mul122=($97)*($98);
 var $div123=(1)/($mul122);
 $fSlow61=$div123;
 var $99=$fSlow32;
 var $sub124=(-$99);
 $fSlow62=$sub124;
 var $100=$fSlow32;
 var $sub125=($100)-(1);
 var $101=$fSlow31;
 var $div126=($sub125)/($101);
 var $add127=($div126)+(1);
 $fSlow63=$add127;
 var $102=$fSlow35;
 var $sub128=(-$102);
 var $mul129=($sub128)*(2);
 $fSlow64=$mul129;
 var $103=$fSlow38;
 var $add130=($103)+(1);
 var $104=$fSlow37;
 var $div131=($add130)/($104);
 var $add132=($div131)+(1);
 var $div133=(1)/($add132);
 $fSlow65=$div133;
 var $fvslider3=(($this1+528708)|0);
 var $105=HEAPF32[(($fvslider3)>>2)];
 $fSlow66=$105;
 var $fConst1134=(($this1+528660)|0);
 var $106=HEAPF32[(($fConst1134)>>2)];
 var $107=$fSlow10;
 var $108=$fSlow66;
 var $div135=($107)/($108);
 var $mul136=($106)*($div135);
 var $call137=Math_exp($mul136);
 $fSlow67=$call137;
 var $109=$fSlow38;
 var $add138=($109)+(1);
 $fSlow68=$add138;
 var $110=$fSlow38;
 var $sub139=(1)-($110);
 var $111=$fSlow68;
 var $div140=($sub139)/($111);
 var $sub141=(-$div140);
 $fSlow69=$sub141;
 var $112=$fSlow68;
 var $div142=(1)/($112);
 $fSlow70=$div142;
 var $113=$fSlow38;
 var $sub143=($113)-(1);
 var $114=$fSlow37;
 var $div144=($sub143)/($114);
 var $add145=($div144)+(1);
 $fSlow71=$add145;
 var $fvslider4=(($this1+528712)|0);
 var $115=HEAPF32[(($fvslider4)>>2)];
 $fSlow72=$115;
 var $fConst1146=(($this1+528660)|0);
 var $116=HEAPF32[(($fConst1146)>>2)];
 var $117=$fSlow10;
 var $118=$fSlow72;
 var $div147=($117)/($118);
 var $mul148=($116)*($div147);
 var $call149=Math_exp($mul148);
 $fSlow73=$call149;
 var $119=$fSlow56;
 var $120=$fSlow37;
 var $mul150=($119)*($120);
 var $div151=(1)/($mul150);
 $fSlow74=$div151;
 var $121=$fSlow38;
 var $sub152=(-$121);
 $fSlow75=$sub152;
 var $122=$fSlow41;
 var $sub153=(-$122);
 var $mul154=($sub153)*(2);
 $fSlow76=$mul154;
 var $fConst2155=(($this1+528664)|0);
 var $123=HEAPF32[(($fConst2155)>>2)];
 var $124=$fSlow7;
 var $125=$fSlow8;
 var $call156=Math_pow($125,0.5333330035209656);
 var $mul157=($124)*($call156);
 var $mul158=($123)*($mul157);
 var $call159=Math_log($mul158);
 var $mul160=((0.318928986787796))*($call159);
 var $add161=((0.5))+($mul160);
 var $call162=Math_floor($add161);
 var $call163=Math_pow(23,$call162);
 $fSlow77=$call163;
 var $126=$fSlow77;
 var $mul164=((6.907760143280029))*($126);
 var $sub165=(-$mul164);
 $fSlow78=$sub165;
 var $fConst1166=(($this1+528660)|0);
 var $127=HEAPF32[(($fConst1166)>>2)];
 var $128=$fSlow78;
 var $129=$fSlow11;
 var $div167=($128)/($129);
 var $mul168=($127)*($div167);
 var $call169=Math_exp($mul168);
 $fSlow79=$call169;
 var $fConst1170=(($this1+528660)|0);
 var $130=HEAPF32[(($fConst1170)>>2)];
 var $131=$fSlow78;
 var $132=$fSlow43;
 var $div171=($131)/($132);
 var $mul172=($130)*($div171);
 var $call173=Math_exp($mul172);
 $fSlow80=$call173;
 var $fConst1174=(($this1+528660)|0);
 var $133=HEAPF32[(($fConst1174)>>2)];
 var $134=$fSlow78;
 var $135=$fSlow54;
 var $div175=($134)/($135);
 var $mul176=($133)*($div175);
 var $call177=Math_exp($mul176);
 $fSlow81=$call177;
 var $fConst1178=(($this1+528660)|0);
 var $136=HEAPF32[(($fConst1178)>>2)];
 var $137=$fSlow78;
 var $138=$fSlow66;
 var $div179=($137)/($138);
 var $mul180=($136)*($div179);
 var $call181=Math_exp($mul180);
 $fSlow82=$call181;
 var $fConst1182=(($this1+528660)|0);
 var $139=HEAPF32[(($fConst1182)>>2)];
 var $140=$fSlow78;
 var $141=$fSlow72;
 var $div183=($140)/($141);
 var $mul184=($139)*($div183);
 var $call185=Math_exp($mul184);
 $fSlow83=$call185;
 var $fConst2186=(($this1+528664)|0);
 var $142=HEAPF32[(($fConst2186)>>2)];
 var $143=$fSlow7;
 var $144=$fSlow8;
 var $call187=Math_pow($144,0.2666670083999634);
 var $mul188=($143)*($call187);
 var $mul189=($142)*($mul188);
 var $call190=Math_log($mul189);
 var $mul191=((0.41703200340270996))*($call190);
 var $add192=((0.5))+($mul191);
 var $call193=Math_floor($add192);
 var $call194=Math_pow(11,$call193);
 $fSlow84=$call194;
 var $145=$fSlow84;
 var $mul195=((6.907760143280029))*($145);
 var $sub196=(-$mul195);
 $fSlow85=$sub196;
 var $fConst1197=(($this1+528660)|0);
 var $146=HEAPF32[(($fConst1197)>>2)];
 var $147=$fSlow85;
 var $148=$fSlow11;
 var $div198=($147)/($148);
 var $mul199=($146)*($div198);
 var $call200=Math_exp($mul199);
 $fSlow86=$call200;
 var $fConst1201=(($this1+528660)|0);
 var $149=HEAPF32[(($fConst1201)>>2)];
 var $150=$fSlow85;
 var $151=$fSlow43;
 var $div202=($150)/($151);
 var $mul203=($149)*($div202);
 var $call204=Math_exp($mul203);
 $fSlow87=$call204;
 var $fConst1205=(($this1+528660)|0);
 var $152=HEAPF32[(($fConst1205)>>2)];
 var $153=$fSlow85;
 var $154=$fSlow54;
 var $div206=($153)/($154);
 var $mul207=($152)*($div206);
 var $call208=Math_exp($mul207);
 $fSlow88=$call208;
 var $fConst1209=(($this1+528660)|0);
 var $155=HEAPF32[(($fConst1209)>>2)];
 var $156=$fSlow85;
 var $157=$fSlow66;
 var $div210=($156)/($157);
 var $mul211=($155)*($div210);
 var $call212=Math_exp($mul211);
 $fSlow89=$call212;
 var $fConst1213=(($this1+528660)|0);
 var $158=HEAPF32[(($fConst1213)>>2)];
 var $159=$fSlow85;
 var $160=$fSlow72;
 var $div214=($159)/($160);
 var $mul215=($158)*($div214);
 var $call216=Math_exp($mul215);
 $fSlow90=$call216;
 var $fConst2217=(($this1+528664)|0);
 var $161=HEAPF32[(($fConst2217)>>2)];
 var $162=$fSlow7;
 var $163=$fSlow8;
 var $call218=Math_pow($163,0.800000011920929);
 var $mul219=($162)*($call218);
 var $mul220=($161)*($mul219);
 var $call221=Math_log($mul220);
 var $mul222=((0.2692829966545105))*($call221);
 var $add223=((0.5))+($mul222);
 var $call224=Math_floor($add223);
 var $call225=Math_pow(41,$call224);
 $fSlow91=$call225;
 var $164=$fSlow91;
 var $mul226=((6.907760143280029))*($164);
 var $sub227=(-$mul226);
 $fSlow92=$sub227;
 var $fConst1228=(($this1+528660)|0);
 var $165=HEAPF32[(($fConst1228)>>2)];
 var $166=$fSlow92;
 var $167=$fSlow11;
 var $div229=($166)/($167);
 var $mul230=($165)*($div229);
 var $call231=Math_exp($mul230);
 $fSlow93=$call231;
 var $fConst1232=(($this1+528660)|0);
 var $168=HEAPF32[(($fConst1232)>>2)];
 var $169=$fSlow92;
 var $170=$fSlow43;
 var $div233=($169)/($170);
 var $mul234=($168)*($div233);
 var $call235=Math_exp($mul234);
 $fSlow94=$call235;
 var $fConst1236=(($this1+528660)|0);
 var $171=HEAPF32[(($fConst1236)>>2)];
 var $172=$fSlow92;
 var $173=$fSlow54;
 var $div237=($172)/($173);
 var $mul238=($171)*($div237);
 var $call239=Math_exp($mul238);
 $fSlow95=$call239;
 var $fConst1240=(($this1+528660)|0);
 var $174=HEAPF32[(($fConst1240)>>2)];
 var $175=$fSlow92;
 var $176=$fSlow66;
 var $div241=($175)/($176);
 var $mul242=($174)*($div241);
 var $call243=Math_exp($mul242);
 $fSlow96=$call243;
 var $fConst1244=(($this1+528660)|0);
 var $177=HEAPF32[(($fConst1244)>>2)];
 var $178=$fSlow92;
 var $179=$fSlow72;
 var $div245=($178)/($179);
 var $mul246=($177)*($div245);
 var $call247=Math_exp($mul246);
 $fSlow97=$call247;
 var $fConst2248=(($this1+528664)|0);
 var $180=HEAPF32[(($fConst2248)>>2)];
 var $181=$fSlow7;
 var $182=$fSlow8;
 var $call249=Math_pow($182,0.1333329975605011);
 var $mul250=($181)*($call249);
 var $mul251=($180)*($mul250);
 var $call252=Math_log($mul251);
 var $mul253=((0.6213350296020508))*($call252);
 var $add254=((0.5))+($mul253);
 var $call255=Math_floor($add254);
 var $call256=Math_pow(5,$call255);
 $fSlow98=$call256;
 var $183=$fSlow98;
 var $mul257=((6.907760143280029))*($183);
 var $sub258=(-$mul257);
 $fSlow99=$sub258;
 var $fConst1259=(($this1+528660)|0);
 var $184=HEAPF32[(($fConst1259)>>2)];
 var $185=$fSlow99;
 var $186=$fSlow11;
 var $div260=($185)/($186);
 var $mul261=($184)*($div260);
 var $call262=Math_exp($mul261);
 $fSlow100=$call262;
 var $fConst1263=(($this1+528660)|0);
 var $187=HEAPF32[(($fConst1263)>>2)];
 var $188=$fSlow99;
 var $189=$fSlow43;
 var $div264=($188)/($189);
 var $mul265=($187)*($div264);
 var $call266=Math_exp($mul265);
 $fSlow101=$call266;
 var $fConst1267=(($this1+528660)|0);
 var $190=HEAPF32[(($fConst1267)>>2)];
 var $191=$fSlow99;
 var $192=$fSlow54;
 var $div268=($191)/($192);
 var $mul269=($190)*($div268);
 var $call270=Math_exp($mul269);
 $fSlow102=$call270;
 var $fConst1271=(($this1+528660)|0);
 var $193=HEAPF32[(($fConst1271)>>2)];
 var $194=$fSlow99;
 var $195=$fSlow66;
 var $div272=($194)/($195);
 var $mul273=($193)*($div272);
 var $call274=Math_exp($mul273);
 $fSlow103=$call274;
 var $fConst1275=(($this1+528660)|0);
 var $196=HEAPF32[(($fConst1275)>>2)];
 var $197=$fSlow99;
 var $198=$fSlow72;
 var $div276=($197)/($198);
 var $mul277=($196)*($div276);
 var $call278=Math_exp($mul277);
 $fSlow104=$call278;
 var $fConst2279=(($this1+528664)|0);
 var $199=HEAPF32[(($fConst2279)>>2)];
 var $200=$fSlow7;
 var $201=$fSlow8;
 var $call280=Math_pow($201,0.6666669845581055);
 var $mul281=($200)*($call280);
 var $mul282=($199)*($mul281);
 var $call283=Math_log($mul282);
 var $mul284=((0.2912069857120514))*($call283);
 var $add285=((0.5))+($mul284);
 var $call286=Math_floor($add285);
 var $call287=Math_pow(31,$call286);
 $fSlow105=$call287;
 var $202=$fSlow105;
 var $mul288=((6.907760143280029))*($202);
 var $sub289=(-$mul288);
 $fSlow106=$sub289;
 var $fConst1290=(($this1+528660)|0);
 var $203=HEAPF32[(($fConst1290)>>2)];
 var $204=$fSlow106;
 var $205=$fSlow11;
 var $div291=($204)/($205);
 var $mul292=($203)*($div291);
 var $call293=Math_exp($mul292);
 $fSlow107=$call293;
 var $fConst1294=(($this1+528660)|0);
 var $206=HEAPF32[(($fConst1294)>>2)];
 var $207=$fSlow106;
 var $208=$fSlow43;
 var $div295=($207)/($208);
 var $mul296=($206)*($div295);
 var $call297=Math_exp($mul296);
 $fSlow108=$call297;
 var $fConst1298=(($this1+528660)|0);
 var $209=HEAPF32[(($fConst1298)>>2)];
 var $210=$fSlow106;
 var $211=$fSlow54;
 var $div299=($210)/($211);
 var $mul300=($209)*($div299);
 var $call301=Math_exp($mul300);
 $fSlow109=$call301;
 var $fConst1302=(($this1+528660)|0);
 var $212=HEAPF32[(($fConst1302)>>2)];
 var $213=$fSlow106;
 var $214=$fSlow66;
 var $div303=($213)/($214);
 var $mul304=($212)*($div303);
 var $call305=Math_exp($mul304);
 $fSlow110=$call305;
 var $fConst1306=(($this1+528660)|0);
 var $215=HEAPF32[(($fConst1306)>>2)];
 var $216=$fSlow106;
 var $217=$fSlow72;
 var $div307=($216)/($217);
 var $mul308=($215)*($div307);
 var $call309=Math_exp($mul308);
 $fSlow111=$call309;
 var $fConst2310=(($this1+528664)|0);
 var $218=HEAPF32[(($fConst2310)>>2)];
 var $219=$fSlow7;
 var $220=$fSlow8;
 var $call311=Math_pow($220,0.4000000059604645);
 var $mul312=($219)*($call311);
 var $mul313=($218)*($mul312);
 var $call314=Math_log($mul313);
 var $mul315=((0.35295599699020386))*($call314);
 var $add316=((0.5))+($mul315);
 var $call317=Math_floor($add316);
 var $call318=Math_pow(17,$call317);
 $fSlow112=$call318;
 var $221=$fSlow112;
 var $mul319=((6.907760143280029))*($221);
 var $sub320=(-$mul319);
 $fSlow113=$sub320;
 var $fConst1321=(($this1+528660)|0);
 var $222=HEAPF32[(($fConst1321)>>2)];
 var $223=$fSlow113;
 var $224=$fSlow11;
 var $div322=($223)/($224);
 var $mul323=($222)*($div322);
 var $call324=Math_exp($mul323);
 $fSlow114=$call324;
 var $fConst1325=(($this1+528660)|0);
 var $225=HEAPF32[(($fConst1325)>>2)];
 var $226=$fSlow113;
 var $227=$fSlow43;
 var $div326=($226)/($227);
 var $mul327=($225)*($div326);
 var $call328=Math_exp($mul327);
 $fSlow115=$call328;
 var $fConst1329=(($this1+528660)|0);
 var $228=HEAPF32[(($fConst1329)>>2)];
 var $229=$fSlow113;
 var $230=$fSlow54;
 var $div330=($229)/($230);
 var $mul331=($228)*($div330);
 var $call332=Math_exp($mul331);
 $fSlow116=$call332;
 var $fConst1333=(($this1+528660)|0);
 var $231=HEAPF32[(($fConst1333)>>2)];
 var $232=$fSlow113;
 var $233=$fSlow66;
 var $div334=($232)/($233);
 var $mul335=($231)*($div334);
 var $call336=Math_exp($mul335);
 $fSlow117=$call336;
 var $fConst1337=(($this1+528660)|0);
 var $234=HEAPF32[(($fConst1337)>>2)];
 var $235=$fSlow113;
 var $236=$fSlow72;
 var $div338=($235)/($236);
 var $mul339=($234)*($div338);
 var $call340=Math_exp($mul339);
 $fSlow118=$call340;
 var $fConst2341=(($this1+528664)|0);
 var $237=HEAPF32[(($fConst2341)>>2)];
 var $238=$fSlow7;
 var $239=$fSlow8;
 var $call342=Math_pow($239,0.9333329796791077);
 var $mul343=($238)*($call342);
 var $mul344=($237)*($mul343);
 var $call345=Math_log($mul344);
 var $mul346=((0.2597300112247467))*($call345);
 var $add347=((0.5))+($mul346);
 var $call348=Math_floor($add347);
 var $call349=Math_pow(47,$call348);
 $fSlow119=$call349;
 var $240=$fSlow119;
 var $mul350=((6.907760143280029))*($240);
 var $sub351=(-$mul350);
 $fSlow120=$sub351;
 var $fConst1352=(($this1+528660)|0);
 var $241=HEAPF32[(($fConst1352)>>2)];
 var $242=$fSlow120;
 var $243=$fSlow11;
 var $div353=($242)/($243);
 var $mul354=($241)*($div353);
 var $call355=Math_exp($mul354);
 $fSlow121=$call355;
 var $fConst1356=(($this1+528660)|0);
 var $244=HEAPF32[(($fConst1356)>>2)];
 var $245=$fSlow120;
 var $246=$fSlow43;
 var $div357=($245)/($246);
 var $mul358=($244)*($div357);
 var $call359=Math_exp($mul358);
 $fSlow122=$call359;
 var $fConst1360=(($this1+528660)|0);
 var $247=HEAPF32[(($fConst1360)>>2)];
 var $248=$fSlow120;
 var $249=$fSlow54;
 var $div361=($248)/($249);
 var $mul362=($247)*($div361);
 var $call363=Math_exp($mul362);
 $fSlow123=$call363;
 var $fConst1364=(($this1+528660)|0);
 var $250=HEAPF32[(($fConst1364)>>2)];
 var $251=$fSlow120;
 var $252=$fSlow66;
 var $div365=($251)/($252);
 var $mul366=($250)*($div365);
 var $call367=Math_exp($mul366);
 $fSlow124=$call367;
 var $fConst1368=(($this1+528660)|0);
 var $253=HEAPF32[(($fConst1368)>>2)];
 var $254=$fSlow120;
 var $255=$fSlow72;
 var $div369=($254)/($255);
 var $mul370=($253)*($div369);
 var $call371=Math_exp($mul370);
 $fSlow125=$call371;
 var $fConst2372=(($this1+528664)|0);
 var $256=HEAPF32[(($fConst2372)>>2)];
 var $257=$fSlow7;
 var $258=$fSlow8;
 var $call373=Math_pow($258,0.06666669994592667);
 var $mul374=($257)*($call373);
 var $mul375=($256)*($mul374);
 var $call376=Math_log($mul375);
 var $mul377=((0.9102389812469482))*($call376);
 var $add378=((0.5))+($mul377);
 var $call379=Math_floor($add378);
 var $call380=Math_pow(3,$call379);
 $fSlow126=$call380;
 var $259=$fSlow126;
 var $mul381=((6.907760143280029))*($259);
 var $sub382=(-$mul381);
 $fSlow127=$sub382;
 var $fConst1383=(($this1+528660)|0);
 var $260=HEAPF32[(($fConst1383)>>2)];
 var $261=$fSlow127;
 var $262=$fSlow11;
 var $div384=($261)/($262);
 var $mul385=($260)*($div384);
 var $call386=Math_exp($mul385);
 $fSlow128=$call386;
 var $fConst1387=(($this1+528660)|0);
 var $263=HEAPF32[(($fConst1387)>>2)];
 var $264=$fSlow127;
 var $265=$fSlow43;
 var $div388=($264)/($265);
 var $mul389=($263)*($div388);
 var $call390=Math_exp($mul389);
 $fSlow129=$call390;
 var $fConst1391=(($this1+528660)|0);
 var $266=HEAPF32[(($fConst1391)>>2)];
 var $267=$fSlow127;
 var $268=$fSlow54;
 var $div392=($267)/($268);
 var $mul393=($266)*($div392);
 var $call394=Math_exp($mul393);
 $fSlow130=$call394;
 var $fConst1395=(($this1+528660)|0);
 var $269=HEAPF32[(($fConst1395)>>2)];
 var $270=$fSlow127;
 var $271=$fSlow66;
 var $div396=($270)/($271);
 var $mul397=($269)*($div396);
 var $call398=Math_exp($mul397);
 $fSlow131=$call398;
 var $fConst1399=(($this1+528660)|0);
 var $272=HEAPF32[(($fConst1399)>>2)];
 var $273=$fSlow127;
 var $274=$fSlow72;
 var $div400=($273)/($274);
 var $mul401=($272)*($div400);
 var $call402=Math_exp($mul401);
 $fSlow132=$call402;
 var $fConst2403=(($this1+528664)|0);
 var $275=HEAPF32[(($fConst2403)>>2)];
 var $276=$fSlow7;
 var $277=$fSlow8;
 var $call404=Math_pow($277,0.6000000238418579);
 var $mul405=($276)*($call404);
 var $mul406=($275)*($mul405);
 var $call407=Math_log($mul406);
 var $mul408=((0.2969740033149719))*($call407);
 var $add409=((0.5))+($mul408);
 var $call410=Math_floor($add409);
 var $call411=Math_pow(29,$call410);
 $fSlow133=$call411;
 var $278=$fSlow133;
 var $mul412=((6.907760143280029))*($278);
 var $sub413=(-$mul412);
 $fSlow134=$sub413;
 var $fConst1414=(($this1+528660)|0);
 var $279=HEAPF32[(($fConst1414)>>2)];
 var $280=$fSlow134;
 var $281=$fSlow11;
 var $div415=($280)/($281);
 var $mul416=($279)*($div415);
 var $call417=Math_exp($mul416);
 $fSlow135=$call417;
 var $fConst1418=(($this1+528660)|0);
 var $282=HEAPF32[(($fConst1418)>>2)];
 var $283=$fSlow134;
 var $284=$fSlow43;
 var $div419=($283)/($284);
 var $mul420=($282)*($div419);
 var $call421=Math_exp($mul420);
 $fSlow136=$call421;
 var $fConst1422=(($this1+528660)|0);
 var $285=HEAPF32[(($fConst1422)>>2)];
 var $286=$fSlow134;
 var $287=$fSlow54;
 var $div423=($286)/($287);
 var $mul424=($285)*($div423);
 var $call425=Math_exp($mul424);
 $fSlow137=$call425;
 var $fConst1426=(($this1+528660)|0);
 var $288=HEAPF32[(($fConst1426)>>2)];
 var $289=$fSlow134;
 var $290=$fSlow66;
 var $div427=($289)/($290);
 var $mul428=($288)*($div427);
 var $call429=Math_exp($mul428);
 $fSlow138=$call429;
 var $fConst1430=(($this1+528660)|0);
 var $291=HEAPF32[(($fConst1430)>>2)];
 var $292=$fSlow134;
 var $293=$fSlow72;
 var $div431=($292)/($293);
 var $mul432=($291)*($div431);
 var $call433=Math_exp($mul432);
 $fSlow139=$call433;
 var $fConst2434=(($this1+528664)|0);
 var $294=HEAPF32[(($fConst2434)>>2)];
 var $295=$fSlow7;
 var $296=$fSlow8;
 var $call435=Math_pow($296,0.33333298563957214);
 var $mul436=($295)*($call435);
 var $mul437=($294)*($mul436);
 var $call438=Math_log($mul437);
 var $mul439=((0.3898710012435913))*($call438);
 var $add440=((0.5))+($mul439);
 var $call441=Math_floor($add440);
 var $call442=Math_pow(13,$call441);
 $fSlow140=$call442;
 var $297=$fSlow140;
 var $mul443=((6.907760143280029))*($297);
 var $sub444=(-$mul443);
 $fSlow141=$sub444;
 var $fConst1445=(($this1+528660)|0);
 var $298=HEAPF32[(($fConst1445)>>2)];
 var $299=$fSlow141;
 var $300=$fSlow11;
 var $div446=($299)/($300);
 var $mul447=($298)*($div446);
 var $call448=Math_exp($mul447);
 $fSlow142=$call448;
 var $fConst1449=(($this1+528660)|0);
 var $301=HEAPF32[(($fConst1449)>>2)];
 var $302=$fSlow141;
 var $303=$fSlow43;
 var $div450=($302)/($303);
 var $mul451=($301)*($div450);
 var $call452=Math_exp($mul451);
 $fSlow143=$call452;
 var $fConst1453=(($this1+528660)|0);
 var $304=HEAPF32[(($fConst1453)>>2)];
 var $305=$fSlow141;
 var $306=$fSlow54;
 var $div454=($305)/($306);
 var $mul455=($304)*($div454);
 var $call456=Math_exp($mul455);
 $fSlow144=$call456;
 var $fConst1457=(($this1+528660)|0);
 var $307=HEAPF32[(($fConst1457)>>2)];
 var $308=$fSlow141;
 var $309=$fSlow66;
 var $div458=($308)/($309);
 var $mul459=($307)*($div458);
 var $call460=Math_exp($mul459);
 $fSlow145=$call460;
 var $fConst1461=(($this1+528660)|0);
 var $310=HEAPF32[(($fConst1461)>>2)];
 var $311=$fSlow141;
 var $312=$fSlow72;
 var $div462=($311)/($312);
 var $mul463=($310)*($div462);
 var $call464=Math_exp($mul463);
 $fSlow146=$call464;
 var $fConst2465=(($this1+528664)|0);
 var $313=HEAPF32[(($fConst2465)>>2)];
 var $314=$fSlow7;
 var $315=$fSlow8;
 var $call466=Math_pow($315,0.8666669726371765);
 var $mul467=($314)*($call466);
 var $mul468=($313)*($mul467);
 var $call469=Math_log($mul468);
 var $mul470=((0.265872985124588))*($call469);
 var $add471=((0.5))+($mul470);
 var $call472=Math_floor($add471);
 var $call473=Math_pow(43,$call472);
 $fSlow147=$call473;
 var $316=$fSlow147;
 var $mul474=((6.907760143280029))*($316);
 var $sub475=(-$mul474);
 $fSlow148=$sub475;
 var $fConst1476=(($this1+528660)|0);
 var $317=HEAPF32[(($fConst1476)>>2)];
 var $318=$fSlow148;
 var $319=$fSlow11;
 var $div477=($318)/($319);
 var $mul478=($317)*($div477);
 var $call479=Math_exp($mul478);
 $fSlow149=$call479;
 var $fConst1480=(($this1+528660)|0);
 var $320=HEAPF32[(($fConst1480)>>2)];
 var $321=$fSlow148;
 var $322=$fSlow43;
 var $div481=($321)/($322);
 var $mul482=($320)*($div481);
 var $call483=Math_exp($mul482);
 $fSlow150=$call483;
 var $fConst1484=(($this1+528660)|0);
 var $323=HEAPF32[(($fConst1484)>>2)];
 var $324=$fSlow148;
 var $325=$fSlow54;
 var $div485=($324)/($325);
 var $mul486=($323)*($div485);
 var $call487=Math_exp($mul486);
 $fSlow151=$call487;
 var $fConst1488=(($this1+528660)|0);
 var $326=HEAPF32[(($fConst1488)>>2)];
 var $327=$fSlow148;
 var $328=$fSlow66;
 var $div489=($327)/($328);
 var $mul490=($326)*($div489);
 var $call491=Math_exp($mul490);
 $fSlow152=$call491;
 var $fConst1492=(($this1+528660)|0);
 var $329=HEAPF32[(($fConst1492)>>2)];
 var $330=$fSlow148;
 var $331=$fSlow72;
 var $div493=($330)/($331);
 var $mul494=($329)*($div493);
 var $call495=Math_exp($mul494);
 $fSlow153=$call495;
 var $fConst2496=(($this1+528664)|0);
 var $332=HEAPF32[(($fConst2496)>>2)];
 var $333=$fSlow7;
 var $334=$fSlow8;
 var $call497=Math_pow($334,0.20000000298023224);
 var $mul498=($333)*($call497);
 var $mul499=($332)*($mul498);
 var $call500=Math_log($mul499);
 var $mul501=((0.5138980150222778))*($call500);
 var $add502=((0.5))+($mul501);
 var $call503=Math_floor($add502);
 var $call504=Math_pow(7,$call503);
 $fSlow154=$call504;
 var $335=$fSlow154;
 var $mul505=((6.907760143280029))*($335);
 var $sub506=(-$mul505);
 $fSlow155=$sub506;
 var $fConst1507=(($this1+528660)|0);
 var $336=HEAPF32[(($fConst1507)>>2)];
 var $337=$fSlow155;
 var $338=$fSlow11;
 var $div508=($337)/($338);
 var $mul509=($336)*($div508);
 var $call510=Math_exp($mul509);
 $fSlow156=$call510;
 var $fConst1511=(($this1+528660)|0);
 var $339=HEAPF32[(($fConst1511)>>2)];
 var $340=$fSlow155;
 var $341=$fSlow43;
 var $div512=($340)/($341);
 var $mul513=($339)*($div512);
 var $call514=Math_exp($mul513);
 $fSlow157=$call514;
 var $fConst1515=(($this1+528660)|0);
 var $342=HEAPF32[(($fConst1515)>>2)];
 var $343=$fSlow155;
 var $344=$fSlow54;
 var $div516=($343)/($344);
 var $mul517=($342)*($div516);
 var $call518=Math_exp($mul517);
 $fSlow158=$call518;
 var $fConst1519=(($this1+528660)|0);
 var $345=HEAPF32[(($fConst1519)>>2)];
 var $346=$fSlow155;
 var $347=$fSlow66;
 var $div520=($346)/($347);
 var $mul521=($345)*($div520);
 var $call522=Math_exp($mul521);
 $fSlow159=$call522;
 var $fConst1523=(($this1+528660)|0);
 var $348=HEAPF32[(($fConst1523)>>2)];
 var $349=$fSlow155;
 var $350=$fSlow72;
 var $div524=($349)/($350);
 var $mul525=($348)*($div524);
 var $call526=Math_exp($mul525);
 $fSlow160=$call526;
 var $fConst2527=(($this1+528664)|0);
 var $351=HEAPF32[(($fConst2527)>>2)];
 var $352=$fSlow7;
 var $353=$fSlow8;
 var $call528=Math_pow($353,0.7333329916000366);
 var $mul529=($352)*($call528);
 var $mul530=($351)*($mul529);
 var $call531=Math_log($mul530);
 var $mul532=((0.27693799138069153))*($call531);
 var $add533=((0.5))+($mul532);
 var $call534=Math_floor($add533);
 var $call535=Math_pow(37,$call534);
 $fSlow161=$call535;
 var $354=$fSlow161;
 var $mul536=((6.907760143280029))*($354);
 var $sub537=(-$mul536);
 $fSlow162=$sub537;
 var $fConst1538=(($this1+528660)|0);
 var $355=HEAPF32[(($fConst1538)>>2)];
 var $356=$fSlow162;
 var $357=$fSlow11;
 var $div539=($356)/($357);
 var $mul540=($355)*($div539);
 var $call541=Math_exp($mul540);
 $fSlow163=$call541;
 var $fConst1542=(($this1+528660)|0);
 var $358=HEAPF32[(($fConst1542)>>2)];
 var $359=$fSlow162;
 var $360=$fSlow43;
 var $div543=($359)/($360);
 var $mul544=($358)*($div543);
 var $call545=Math_exp($mul544);
 $fSlow164=$call545;
 var $fConst1546=(($this1+528660)|0);
 var $361=HEAPF32[(($fConst1546)>>2)];
 var $362=$fSlow162;
 var $363=$fSlow54;
 var $div547=($362)/($363);
 var $mul548=($361)*($div547);
 var $call549=Math_exp($mul548);
 $fSlow165=$call549;
 var $fConst1550=(($this1+528660)|0);
 var $364=HEAPF32[(($fConst1550)>>2)];
 var $365=$fSlow162;
 var $366=$fSlow66;
 var $div551=($365)/($366);
 var $mul552=($364)*($div551);
 var $call553=Math_exp($mul552);
 $fSlow166=$call553;
 var $fConst1554=(($this1+528660)|0);
 var $367=HEAPF32[(($fConst1554)>>2)];
 var $368=$fSlow162;
 var $369=$fSlow72;
 var $div555=($368)/($369);
 var $mul556=($367)*($div555);
 var $call557=Math_exp($mul556);
 $fSlow167=$call557;
 var $fConst2558=(($this1+528664)|0);
 var $370=HEAPF32[(($fConst2558)>>2)];
 var $371=$fSlow7;
 var $372=$fSlow8;
 var $call559=Math_pow($372,0.4666669964790344);
 var $mul560=($371)*($call559);
 var $mul561=($370)*($mul560);
 var $call562=Math_log($mul561);
 var $mul563=((0.33962300419807434))*($call562);
 var $add564=((0.5))+($mul563);
 var $call565=Math_floor($add564);
 var $call566=Math_pow(19,$call565);
 $fSlow168=$call566;
 var $373=$fSlow168;
 var $mul567=((6.907760143280029))*($373);
 var $sub568=(-$mul567);
 $fSlow169=$sub568;
 var $fConst1569=(($this1+528660)|0);
 var $374=HEAPF32[(($fConst1569)>>2)];
 var $375=$fSlow169;
 var $376=$fSlow11;
 var $div570=($375)/($376);
 var $mul571=($374)*($div570);
 var $call572=Math_exp($mul571);
 $fSlow170=$call572;
 var $fConst1573=(($this1+528660)|0);
 var $377=HEAPF32[(($fConst1573)>>2)];
 var $378=$fSlow169;
 var $379=$fSlow43;
 var $div574=($378)/($379);
 var $mul575=($377)*($div574);
 var $call576=Math_exp($mul575);
 $fSlow171=$call576;
 var $fConst1577=(($this1+528660)|0);
 var $380=HEAPF32[(($fConst1577)>>2)];
 var $381=$fSlow169;
 var $382=$fSlow54;
 var $div578=($381)/($382);
 var $mul579=($380)*($div578);
 var $call580=Math_exp($mul579);
 $fSlow172=$call580;
 var $fConst1581=(($this1+528660)|0);
 var $383=HEAPF32[(($fConst1581)>>2)];
 var $384=$fSlow169;
 var $385=$fSlow66;
 var $div582=($384)/($385);
 var $mul583=($383)*($div582);
 var $call584=Math_exp($mul583);
 $fSlow173=$call584;
 var $fConst1585=(($this1+528660)|0);
 var $386=HEAPF32[(($fConst1585)>>2)];
 var $387=$fSlow169;
 var $388=$fSlow72;
 var $div586=($387)/($388);
 var $mul587=($386)*($div586);
 var $call588=Math_exp($mul587);
 $fSlow174=$call588;
 var $fConst2589=(($this1+528664)|0);
 var $389=HEAPF32[(($fConst2589)>>2)];
 var $390=$fSlow7;
 var $391=$fSlow8;
 var $call590=Math_pow($391,1);
 var $mul591=($390)*($call590);
 var $mul592=($389)*($mul591);
 var $call593=Math_log($mul592);
 var $mul594=((0.2518709897994995))*($call593);
 var $add595=((0.5))+($mul594);
 var $call596=Math_floor($add595);
 var $call597=Math_pow(53,$call596);
 $fSlow175=$call597;
 var $392=$fSlow175;
 var $mul598=((6.907760143280029))*($392);
 var $sub599=(-$mul598);
 $fSlow176=$sub599;
 var $fConst1600=(($this1+528660)|0);
 var $393=HEAPF32[(($fConst1600)>>2)];
 var $394=$fSlow176;
 var $395=$fSlow11;
 var $div601=($394)/($395);
 var $mul602=($393)*($div601);
 var $call603=Math_exp($mul602);
 $fSlow177=$call603;
 var $fConst1604=(($this1+528660)|0);
 var $396=HEAPF32[(($fConst1604)>>2)];
 var $397=$fSlow176;
 var $398=$fSlow43;
 var $div605=($397)/($398);
 var $mul606=($396)*($div605);
 var $call607=Math_exp($mul606);
 $fSlow178=$call607;
 var $fConst1608=(($this1+528660)|0);
 var $399=HEAPF32[(($fConst1608)>>2)];
 var $400=$fSlow176;
 var $401=$fSlow54;
 var $div609=($400)/($401);
 var $mul610=($399)*($div609);
 var $call611=Math_exp($mul610);
 $fSlow179=$call611;
 var $fConst1612=(($this1+528660)|0);
 var $402=HEAPF32[(($fConst1612)>>2)];
 var $403=$fSlow176;
 var $404=$fSlow66;
 var $div613=($403)/($404);
 var $mul614=($402)*($div613);
 var $call615=Math_exp($mul614);
 $fSlow180=$call615;
 var $fConst1616=(($this1+528660)|0);
 var $405=HEAPF32[(($fConst1616)>>2)];
 var $406=$fSlow176;
 var $407=$fSlow72;
 var $div617=($406)/($407);
 var $mul618=($405)*($div617);
 var $call619=Math_exp($mul618);
 $fSlow181=$call619;
 var $408=$fSlow9;
 var $sub620=($408)-(1);
 var $conv=(($sub620)&-1);
 var $and=$conv&8191;
 $iSlow182=$and;
 var $fbutton3=(($this1+528720)|0);
 var $409=HEAPF32[(($fbutton3)>>2)];
 $fSlow183=$409;
 var $410=$fSlow126;
 var $sub621=($410)-(1);
 var $conv622=(($sub621)&-1);
 var $and623=$conv622&8191;
 $iSlow184=$and623;
 var $411=$fSlow98;
 var $sub624=($411)-(1);
 var $conv625=(($sub624)&-1);
 var $and626=$conv625&8191;
 $iSlow185=$and626;
 var $412=$fSlow154;
 var $sub627=($412)-(1);
 var $conv628=(($sub627)&-1);
 var $and629=$conv628&8191;
 $iSlow186=$and629;
 var $413=$fSlow84;
 var $sub630=($413)-(1);
 var $conv631=(($sub630)&-1);
 var $and632=$conv631&8191;
 $iSlow187=$and632;
 var $414=$fSlow140;
 var $sub633=($414)-(1);
 var $conv634=(($sub633)&-1);
 var $and635=$conv634&8191;
 $iSlow188=$and635;
 var $415=$fSlow112;
 var $sub636=($415)-(1);
 var $conv637=(($sub636)&-1);
 var $and638=$conv637&8191;
 $iSlow189=$and638;
 var $416=$fSlow168;
 var $sub639=($416)-(1);
 var $conv640=(($sub639)&-1);
 var $and641=$conv640&8191;
 $iSlow190=$and641;
 var $417=$fSlow77;
 var $sub642=($417)-(1);
 var $conv643=(($sub642)&-1);
 var $and644=$conv643&8191;
 $iSlow191=$and644;
 var $418=$fSlow133;
 var $sub645=($418)-(1);
 var $conv646=(($sub645)&-1);
 var $and647=$conv646&8191;
 $iSlow192=$and647;
 var $419=$fSlow105;
 var $sub648=($419)-(1);
 var $conv649=(($sub648)&-1);
 var $and650=$conv649&8191;
 $iSlow193=$and650;
 var $420=$fSlow161;
 var $sub651=($420)-(1);
 var $conv652=(($sub651)&-1);
 var $and653=$conv652&8191;
 $iSlow194=$and653;
 var $421=$fSlow91;
 var $sub654=($421)-(1);
 var $conv655=(($sub654)&-1);
 var $and656=$conv655&8191;
 $iSlow195=$and656;
 var $422=$fSlow147;
 var $sub657=($422)-(1);
 var $conv658=(($sub657)&-1);
 var $and659=$conv658&8191;
 $iSlow196=$and659;
 var $423=$fSlow119;
 var $sub660=($423)-(1);
 var $conv661=(($sub660)&-1);
 var $and662=$conv661&8191;
 $iSlow197=$and662;
 var $424=$fSlow175;
 var $sub663=($424)-(1);
 var $conv664=(($sub663)&-1);
 var $and665=$conv664&8191;
 $iSlow198=$and665;
 $i=0;
 label=2;break;
 case 2: 
 var $425=$i;
 var $426=$count_addr;
 var $cmp=($425|0)<($426|0);
 if($cmp){label=3;break;}else{label=9;break;}
 case 3: 
 var $iRec17=(($this1+528620)|0);
 var $arrayidx666=(($iRec17+4)|0);
 var $427=HEAP32[(($arrayidx666)>>2)];
 var $mul667=(Math_imul($427,1103515245)|0);
 var $add668=((($mul667)+(12345))|0);
 var $iRec17669=(($this1+528620)|0);
 var $arrayidx670=(($iRec17669)|0);
 HEAP32[(($arrayidx670)>>2)]=$add668;
 var $fRec16=(($this1+528604)|0);
 var $arrayidx671=(($fRec16+12)|0);
 var $428=HEAPF32[(($arrayidx671)>>2)];
 var $mul672=((0.5221890211105347))*($428);
 var $iRec17673=(($this1+528620)|0);
 var $arrayidx674=(($iRec17673)|0);
 var $429=HEAP32[(($arrayidx674)>>2)];
 var $conv675=($429|0);
 var $mul676=((4.656610097519831e-10))*($conv675);
 var $fRec16677=(($this1+528604)|0);
 var $arrayidx678=(($fRec16677+4)|0);
 var $430=HEAPF32[(($arrayidx678)>>2)];
 var $mul679=((2.494960069656372))*($430);
 var $add680=($mul676)+($mul679);
 var $add681=($mul672)+($add680);
 var $fRec16682=(($this1+528604)|0);
 var $arrayidx683=(($fRec16682+8)|0);
 var $431=HEAPF32[(($arrayidx683)>>2)];
 var $mul684=((2.017270088195801))*($431);
 var $sub685=($add681)-($mul684);
 var $fRec16686=(($this1+528604)|0);
 var $arrayidx687=(($fRec16686)|0);
 HEAPF32[(($arrayidx687)>>2)]=$sub685;
 var $432=$fSlow1;
 var $fRec16688=(($this1+528604)|0);
 var $arrayidx689=(($fRec16688)|0);
 var $433=HEAPF32[(($arrayidx689)>>2)];
 var $mul690=((0.049922000616788864))*($433);
 var $fRec16691=(($this1+528604)|0);
 var $arrayidx692=(($fRec16691+8)|0);
 var $434=HEAPF32[(($arrayidx692)>>2)];
 var $mul693=((0.05061269924044609))*($434);
 var $add694=($mul690)+($mul693);
 var $fRec16695=(($this1+528604)|0);
 var $arrayidx696=(($fRec16695+4)|0);
 var $435=HEAPF32[(($arrayidx696)>>2)];
 var $mul697=((0.09599349647760391))*($435);
 var $fRec16698=(($this1+528604)|0);
 var $arrayidx699=(($fRec16698+12)|0);
 var $436=HEAPF32[(($arrayidx699)>>2)];
 var $mul700=((0.004408789798617363))*($436);
 var $add701=($mul697)+($mul700);
 var $sub702=($add694)-($add701);
 var $mul703=($432)*($sub702);
 $fTemp0=$mul703;
 var $437=$fSlow2;
 var $fVec0=(($this1+528596)|0);
 var $arrayidx704=(($fVec0)|0);
 HEAPF32[(($arrayidx704)>>2)]=$437;
 var $438=$fSlow2;
 var $fVec0705=(($this1+528596)|0);
 var $arrayidx706=(($fVec0705+4)|0);
 var $439=HEAPF32[(($arrayidx706)>>2)];
 var $sub707=($438)-($439);
 var $cmp708=$sub707>0;
 var $conv709=($cmp708&1);
 $iTemp1=$conv709;
 var $440=$fSlow3;
 var $fVec1=(($this1+528588)|0);
 var $arrayidx710=(($fVec1)|0);
 HEAPF32[(($arrayidx710)>>2)]=$440;
 var $441=$fSlow3;
 var $fVec1711=(($this1+528588)|0);
 var $arrayidx712=(($fVec1711+4)|0);
 var $442=HEAPF32[(($arrayidx712)>>2)];
 var $sub713=($441)-($442);
 var $cmp714=$sub713>0;
 var $conv715=($cmp714&1);
 $iTemp2=$conv715;
 var $443=$fSlow4;
 var $444=$i;
 var $445=$input0;
 var $arrayidx716=(($445+($444<<2))|0);
 var $446=HEAPF32[(($arrayidx716)>>2)];
 var $mul717=($443)*($446);
 $fTemp3=$mul717;
 var $447=$fSlow19;
 var $fRec22=(($this1+528580)|0);
 var $arrayidx718=(($fRec22+4)|0);
 var $448=HEAPF32[(($arrayidx718)>>2)];
 var $mul719=($447)*($448);
 var $449=$fSlow20;
 var $450=$fSlow14;
 var $fRec0=(($this1+491712)|0);
 var $arrayidx720=(($fRec0+4)|0);
 var $451=HEAPF32[(($arrayidx720)>>2)];
 var $mul721=($450)*($451);
 var $452=$fSlow21;
 var $fRec0722=(($this1+491712)|0);
 var $arrayidx723=(($fRec0722+8)|0);
 var $453=HEAPF32[(($arrayidx723)>>2)];
 var $mul724=($452)*($453);
 var $add725=($mul721)+($mul724);
 var $mul726=($449)*($add725);
 var $add727=($mul719)+($mul726);
 var $fRec22728=(($this1+528580)|0);
 var $arrayidx729=(($fRec22728)|0);
 HEAPF32[(($arrayidx729)>>2)]=$add727;
 var $fRec22730=(($this1+528580)|0);
 var $arrayidx731=(($fRec22730)|0);
 var $454=HEAPF32[(($arrayidx731)>>2)];
 var $455=$fSlow16;
 var $456=$fSlow22;
 var $fRec21=(($this1+528568)|0);
 var $arrayidx732=(($fRec21+8)|0);
 var $457=HEAPF32[(($arrayidx732)>>2)];
 var $mul733=($456)*($457);
 var $458=$fSlow23;
 var $fRec21734=(($this1+528568)|0);
 var $arrayidx735=(($fRec21734+4)|0);
 var $459=HEAPF32[(($arrayidx735)>>2)];
 var $mul736=($458)*($459);
 var $add737=($mul733)+($mul736);
 var $mul738=($455)*($add737);
 var $sub739=($454)-($mul738);
 var $fRec21740=(($this1+528568)|0);
 var $arrayidx741=(($fRec21740)|0);
 HEAPF32[(($arrayidx741)>>2)]=$sub739;
 var $460=$fSlow30;
 var $fRec20=(($this1+528556)|0);
 var $arrayidx742=(($fRec20+4)|0);
 var $461=HEAPF32[(($arrayidx742)>>2)];
 var $mul743=($460)*($461);
 $fTemp4=$mul743;
 var $462=$fSlow16;
 var $463=$fSlow17;
 var $fRec21744=(($this1+528568)|0);
 var $arrayidx745=(($fRec21744)|0);
 var $464=HEAPF32[(($arrayidx745)>>2)];
 var $mul746=($463)*($464);
 var $465=$fSlow24;
 var $fRec21747=(($this1+528568)|0);
 var $arrayidx748=(($fRec21747+4)|0);
 var $466=HEAPF32[(($arrayidx748)>>2)];
 var $mul749=($465)*($466);
 var $add750=($mul746)+($mul749);
 var $467=$fSlow17;
 var $fRec21751=(($this1+528568)|0);
 var $arrayidx752=(($fRec21751+8)|0);
 var $468=HEAPF32[(($arrayidx752)>>2)];
 var $mul753=($467)*($468);
 var $add754=($add750)+($mul753);
 var $mul755=($462)*($add754);
 var $469=$fSlow27;
 var $470=$fSlow28;
 var $fRec20756=(($this1+528556)|0);
 var $arrayidx757=(($fRec20756+8)|0);
 var $471=HEAPF32[(($arrayidx757)>>2)];
 var $mul758=($470)*($471);
 var $472=$fTemp4;
 var $add759=($mul758)+($472);
 var $mul760=($469)*($add759);
 var $sub761=($mul755)-($mul760);
 var $fRec20762=(($this1+528556)|0);
 var $arrayidx763=(($fRec20762)|0);
 HEAPF32[(($arrayidx763)>>2)]=$sub761;
 var $473=$fSlow36;
 var $fRec19=(($this1+528544)|0);
 var $arrayidx764=(($fRec19+4)|0);
 var $474=HEAPF32[(($arrayidx764)>>2)];
 var $mul765=($473)*($474);
 $fTemp5=$mul765;
 var $fRec20766=(($this1+528556)|0);
 var $arrayidx767=(($fRec20766+8)|0);
 var $475=HEAPF32[(($arrayidx767)>>2)];
 var $476=$fSlow27;
 var $477=$fTemp4;
 var $478=$fSlow28;
 var $fRec20768=(($this1+528556)|0);
 var $arrayidx769=(($fRec20768)|0);
 var $479=HEAPF32[(($arrayidx769)>>2)];
 var $mul770=($478)*($479);
 var $add771=($477)+($mul770);
 var $mul772=($476)*($add771);
 var $add773=($475)+($mul772);
 var $480=$fSlow33;
 var $481=$fSlow34;
 var $fRec19774=(($this1+528544)|0);
 var $arrayidx775=(($fRec19774+8)|0);
 var $482=HEAPF32[(($arrayidx775)>>2)];
 var $mul776=($481)*($482);
 var $483=$fTemp5;
 var $add777=($mul776)+($483);
 var $mul778=($480)*($add777);
 var $sub779=($add773)-($mul778);
 var $fRec19780=(($this1+528544)|0);
 var $arrayidx781=(($fRec19780)|0);
 HEAPF32[(($arrayidx781)>>2)]=$sub779;
 var $484=$fSlow42;
 var $fRec18=(($this1+528532)|0);
 var $arrayidx782=(($fRec18+4)|0);
 var $485=HEAPF32[(($arrayidx782)>>2)];
 var $mul783=($484)*($485);
 $fTemp6=$mul783;
 var $fRec19784=(($this1+528544)|0);
 var $arrayidx785=(($fRec19784+8)|0);
 var $486=HEAPF32[(($arrayidx785)>>2)];
 var $487=$fSlow33;
 var $488=$fTemp5;
 var $489=$fSlow34;
 var $fRec19786=(($this1+528544)|0);
 var $arrayidx787=(($fRec19786)|0);
 var $490=HEAPF32[(($arrayidx787)>>2)];
 var $mul788=($489)*($490);
 var $add789=($488)+($mul788);
 var $mul790=($487)*($add789);
 var $add791=($486)+($mul790);
 var $491=$fSlow39;
 var $492=$fSlow40;
 var $fRec18792=(($this1+528532)|0);
 var $arrayidx793=(($fRec18792+8)|0);
 var $493=HEAPF32[(($arrayidx793)>>2)];
 var $mul794=($492)*($493);
 var $494=$fTemp6;
 var $add795=($mul794)+($494);
 var $mul796=($491)*($add795);
 var $sub797=($add791)-($mul796);
 var $fRec18798=(($this1+528532)|0);
 var $arrayidx799=(($fRec18798)|0);
 HEAPF32[(($arrayidx799)>>2)]=$sub797;
 var $495=$fSlow19;
 var $fRec28=(($this1+528524)|0);
 var $arrayidx800=(($fRec28+4)|0);
 var $496=HEAPF32[(($arrayidx800)>>2)];
 var $mul801=($495)*($496);
 var $497=$fSlow20;
 var $fRec0802=(($this1+491712)|0);
 var $arrayidx803=(($fRec0802+4)|0);
 var $498=HEAPF32[(($arrayidx803)>>2)];
 var $fRec0804=(($this1+491712)|0);
 var $arrayidx805=(($fRec0804+8)|0);
 var $499=HEAPF32[(($arrayidx805)>>2)];
 var $add806=($498)+($499);
 var $mul807=($497)*($add806);
 var $add808=($mul801)+($mul807);
 var $fRec28809=(($this1+528524)|0);
 var $arrayidx810=(($fRec28809)|0);
 HEAPF32[(($arrayidx810)>>2)]=$add808;
 var $fRec28811=(($this1+528524)|0);
 var $arrayidx812=(($fRec28811)|0);
 var $500=HEAPF32[(($arrayidx812)>>2)];
 var $501=$fSlow16;
 var $502=$fSlow22;
 var $fRec27=(($this1+528512)|0);
 var $arrayidx813=(($fRec27+8)|0);
 var $503=HEAPF32[(($arrayidx813)>>2)];
 var $mul814=($502)*($503);
 var $504=$fSlow23;
 var $fRec27815=(($this1+528512)|0);
 var $arrayidx816=(($fRec27815+4)|0);
 var $505=HEAPF32[(($arrayidx816)>>2)];
 var $mul817=($504)*($505);
 var $add818=($mul814)+($mul817);
 var $mul819=($501)*($add818);
 var $sub820=($500)-($mul819);
 var $fRec27821=(($this1+528512)|0);
 var $arrayidx822=(($fRec27821)|0);
 HEAPF32[(($arrayidx822)>>2)]=$sub820;
 var $fRec27823=(($this1+528512)|0);
 var $arrayidx824=(($fRec27823+8)|0);
 var $506=HEAPF32[(($arrayidx824)>>2)];
 var $fRec27825=(($this1+528512)|0);
 var $arrayidx826=(($fRec27825)|0);
 var $507=HEAPF32[(($arrayidx826)>>2)];
 var $fRec27827=(($this1+528512)|0);
 var $arrayidx828=(($fRec27827+4)|0);
 var $508=HEAPF32[(($arrayidx828)>>2)];
 var $mul829=($508)*(2);
 var $add830=($507)+($mul829);
 var $add831=($506)+($add830);
 $fTemp7=$add831;
 var $509=$fSlow16;
 var $510=$fTemp7;
 var $mul832=($509)*($510);
 $fTemp8=$mul832;
 var $511=$fTemp8;
 var $fVec2=(($this1+528504)|0);
 var $arrayidx833=(($fVec2)|0);
 HEAPF32[(($arrayidx833)>>2)]=$511;
 var $512=$fSlow48;
 var $fRec26=(($this1+528496)|0);
 var $arrayidx834=(($fRec26+4)|0);
 var $513=HEAPF32[(($arrayidx834)>>2)];
 var $mul835=($512)*($513);
 var $514=$fSlow49;
 var $515=$fSlow50;
 var $516=$fTemp7;
 var $mul836=($515)*($516);
 var $517=$fSlow51;
 var $fVec2837=(($this1+528504)|0);
 var $arrayidx838=(($fVec2837+4)|0);
 var $518=HEAPF32[(($arrayidx838)>>2)];
 var $mul839=($517)*($518);
 var $add840=($mul836)+($mul839);
 var $mul841=($514)*($add840);
 var $add842=($mul835)+($mul841);
 var $fRec26843=(($this1+528496)|0);
 var $arrayidx844=(($fRec26843)|0);
 HEAPF32[(($arrayidx844)>>2)]=$add842;
 var $fRec26845=(($this1+528496)|0);
 var $arrayidx846=(($fRec26845)|0);
 var $519=HEAPF32[(($arrayidx846)>>2)];
 var $520=$fSlow46;
 var $521=$fSlow30;
 var $fRec25=(($this1+528484)|0);
 var $arrayidx847=(($fRec25+4)|0);
 var $522=HEAPF32[(($arrayidx847)>>2)];
 var $mul848=($521)*($522);
 var $523=$fSlow52;
 var $fRec25849=(($this1+528484)|0);
 var $arrayidx850=(($fRec25849+8)|0);
 var $524=HEAPF32[(($arrayidx850)>>2)];
 var $mul851=($523)*($524);
 var $add852=($mul848)+($mul851);
 var $mul853=($520)*($add852);
 var $sub854=($519)-($mul853);
 var $fRec25855=(($this1+528484)|0);
 var $arrayidx856=(($fRec25855)|0);
 HEAPF32[(($arrayidx856)>>2)]=$sub854;
 var $525=$fSlow36;
 var $fRec24=(($this1+528472)|0);
 var $arrayidx857=(($fRec24+4)|0);
 var $526=HEAPF32[(($arrayidx857)>>2)];
 var $mul858=($525)*($526);
 $fTemp9=$mul858;
 var $527=$fSlow46;
 var $528=$fSlow29;
 var $fRec25859=(($this1+528484)|0);
 var $arrayidx860=(($fRec25859)|0);
 var $529=HEAPF32[(($arrayidx860)>>2)];
 var $mul861=($528)*($529);
 var $530=$fSlow53;
 var $fRec25862=(($this1+528484)|0);
 var $arrayidx863=(($fRec25862+4)|0);
 var $531=HEAPF32[(($arrayidx863)>>2)];
 var $mul864=($530)*($531);
 var $add865=($mul861)+($mul864);
 var $532=$fSlow29;
 var $fRec25866=(($this1+528484)|0);
 var $arrayidx867=(($fRec25866+8)|0);
 var $533=HEAPF32[(($arrayidx867)>>2)];
 var $mul868=($532)*($533);
 var $add869=($add865)+($mul868);
 var $mul870=($527)*($add869);
 var $534=$fSlow33;
 var $535=$fSlow34;
 var $fRec24871=(($this1+528472)|0);
 var $arrayidx872=(($fRec24871+8)|0);
 var $536=HEAPF32[(($arrayidx872)>>2)];
 var $mul873=($535)*($536);
 var $537=$fTemp9;
 var $add874=($mul873)+($537);
 var $mul875=($534)*($add874);
 var $sub876=($mul870)-($mul875);
 var $fRec24877=(($this1+528472)|0);
 var $arrayidx878=(($fRec24877)|0);
 HEAPF32[(($arrayidx878)>>2)]=$sub876;
 var $538=$fSlow42;
 var $fRec23=(($this1+528460)|0);
 var $arrayidx879=(($fRec23+4)|0);
 var $539=HEAPF32[(($arrayidx879)>>2)];
 var $mul880=($538)*($539);
 $fTemp10=$mul880;
 var $fRec24881=(($this1+528472)|0);
 var $arrayidx882=(($fRec24881+8)|0);
 var $540=HEAPF32[(($arrayidx882)>>2)];
 var $541=$fSlow33;
 var $542=$fTemp9;
 var $543=$fSlow34;
 var $fRec24883=(($this1+528472)|0);
 var $arrayidx884=(($fRec24883)|0);
 var $544=HEAPF32[(($arrayidx884)>>2)];
 var $mul885=($543)*($544);
 var $add886=($542)+($mul885);
 var $mul887=($541)*($add886);
 var $add888=($540)+($mul887);
 var $545=$fSlow39;
 var $546=$fSlow40;
 var $fRec23889=(($this1+528460)|0);
 var $arrayidx890=(($fRec23889+8)|0);
 var $547=HEAPF32[(($arrayidx890)>>2)];
 var $mul891=($546)*($547);
 var $548=$fTemp10;
 var $add892=($mul891)+($548);
 var $mul893=($545)*($add892);
 var $sub894=($add888)-($mul893);
 var $fRec23895=(($this1+528460)|0);
 var $arrayidx896=(($fRec23895)|0);
 HEAPF32[(($arrayidx896)>>2)]=$sub894;
 var $549=$fSlow48;
 var $fRec33=(($this1+528452)|0);
 var $arrayidx897=(($fRec33+4)|0);
 var $550=HEAPF32[(($arrayidx897)>>2)];
 var $mul898=($549)*($550);
 var $551=$fSlow49;
 var $552=$fTemp8;
 var $fVec2899=(($this1+528504)|0);
 var $arrayidx900=(($fVec2899+4)|0);
 var $553=HEAPF32[(($arrayidx900)>>2)];
 var $add901=($552)+($553);
 var $mul902=($551)*($add901);
 var $add903=($mul898)+($mul902);
 var $fRec33904=(($this1+528452)|0);
 var $arrayidx905=(($fRec33904)|0);
 HEAPF32[(($arrayidx905)>>2)]=$add903;
 var $fRec33906=(($this1+528452)|0);
 var $arrayidx907=(($fRec33906)|0);
 var $554=HEAPF32[(($arrayidx907)>>2)];
 var $555=$fSlow46;
 var $556=$fSlow52;
 var $fRec32=(($this1+528440)|0);
 var $arrayidx908=(($fRec32+8)|0);
 var $557=HEAPF32[(($arrayidx908)>>2)];
 var $mul909=($556)*($557);
 var $558=$fSlow30;
 var $fRec32910=(($this1+528440)|0);
 var $arrayidx911=(($fRec32910+4)|0);
 var $559=HEAPF32[(($arrayidx911)>>2)];
 var $mul912=($558)*($559);
 var $add913=($mul909)+($mul912);
 var $mul914=($555)*($add913);
 var $sub915=($554)-($mul914);
 var $fRec32916=(($this1+528440)|0);
 var $arrayidx917=(($fRec32916)|0);
 HEAPF32[(($arrayidx917)>>2)]=$sub915;
 var $fRec32918=(($this1+528440)|0);
 var $arrayidx919=(($fRec32918+8)|0);
 var $560=HEAPF32[(($arrayidx919)>>2)];
 var $fRec32920=(($this1+528440)|0);
 var $arrayidx921=(($fRec32920)|0);
 var $561=HEAPF32[(($arrayidx921)>>2)];
 var $fRec32922=(($this1+528440)|0);
 var $arrayidx923=(($fRec32922+4)|0);
 var $562=HEAPF32[(($arrayidx923)>>2)];
 var $mul924=($562)*(2);
 var $add925=($561)+($mul924);
 var $add926=($560)+($add925);
 $fTemp11=$add926;
 var $563=$fSlow46;
 var $564=$fTemp11;
 var $mul927=($563)*($564);
 $fTemp12=$mul927;
 var $565=$fTemp12;
 var $fVec3=(($this1+528432)|0);
 var $arrayidx928=(($fVec3)|0);
 HEAPF32[(($arrayidx928)>>2)]=$565;
 var $566=$fSlow59;
 var $fRec31=(($this1+528424)|0);
 var $arrayidx929=(($fRec31+4)|0);
 var $567=HEAPF32[(($arrayidx929)>>2)];
 var $mul930=($566)*($567);
 var $568=$fSlow60;
 var $569=$fSlow61;
 var $570=$fTemp11;
 var $mul931=($569)*($570);
 var $571=$fSlow62;
 var $fVec3932=(($this1+528432)|0);
 var $arrayidx933=(($fVec3932+4)|0);
 var $572=HEAPF32[(($arrayidx933)>>2)];
 var $mul934=($571)*($572);
 var $add935=($mul931)+($mul934);
 var $mul936=($568)*($add935);
 var $add937=($mul930)+($mul936);
 var $fRec31938=(($this1+528424)|0);
 var $arrayidx939=(($fRec31938)|0);
 HEAPF32[(($arrayidx939)>>2)]=$add937;
 var $fRec31940=(($this1+528424)|0);
 var $arrayidx941=(($fRec31940)|0);
 var $573=HEAPF32[(($arrayidx941)>>2)];
 var $574=$fSlow57;
 var $575=$fSlow36;
 var $fRec30=(($this1+528412)|0);
 var $arrayidx942=(($fRec30+4)|0);
 var $576=HEAPF32[(($arrayidx942)>>2)];
 var $mul943=($575)*($576);
 var $577=$fSlow63;
 var $fRec30944=(($this1+528412)|0);
 var $arrayidx945=(($fRec30944+8)|0);
 var $578=HEAPF32[(($arrayidx945)>>2)];
 var $mul946=($577)*($578);
 var $add947=($mul943)+($mul946);
 var $mul948=($574)*($add947);
 var $sub949=($573)-($mul948);
 var $fRec30950=(($this1+528412)|0);
 var $arrayidx951=(($fRec30950)|0);
 HEAPF32[(($arrayidx951)>>2)]=$sub949;
 var $579=$fSlow42;
 var $fRec29=(($this1+528400)|0);
 var $arrayidx952=(($fRec29+4)|0);
 var $580=HEAPF32[(($arrayidx952)>>2)];
 var $mul953=($579)*($580);
 $fTemp13=$mul953;
 var $581=$fSlow57;
 var $582=$fSlow35;
 var $fRec30954=(($this1+528412)|0);
 var $arrayidx955=(($fRec30954)|0);
 var $583=HEAPF32[(($arrayidx955)>>2)];
 var $mul956=($582)*($583);
 var $584=$fSlow64;
 var $fRec30957=(($this1+528412)|0);
 var $arrayidx958=(($fRec30957+4)|0);
 var $585=HEAPF32[(($arrayidx958)>>2)];
 var $mul959=($584)*($585);
 var $add960=($mul956)+($mul959);
 var $586=$fSlow35;
 var $fRec30961=(($this1+528412)|0);
 var $arrayidx962=(($fRec30961+8)|0);
 var $587=HEAPF32[(($arrayidx962)>>2)];
 var $mul963=($586)*($587);
 var $add964=($add960)+($mul963);
 var $mul965=($581)*($add964);
 var $588=$fSlow39;
 var $589=$fSlow40;
 var $fRec29966=(($this1+528400)|0);
 var $arrayidx967=(($fRec29966+8)|0);
 var $590=HEAPF32[(($arrayidx967)>>2)];
 var $mul968=($589)*($590);
 var $591=$fTemp13;
 var $add969=($mul968)+($591);
 var $mul970=($588)*($add969);
 var $sub971=($mul965)-($mul970);
 var $fRec29972=(($this1+528400)|0);
 var $arrayidx973=(($fRec29972)|0);
 HEAPF32[(($arrayidx973)>>2)]=$sub971;
 var $592=$fSlow59;
 var $fRec37=(($this1+528392)|0);
 var $arrayidx974=(($fRec37+4)|0);
 var $593=HEAPF32[(($arrayidx974)>>2)];
 var $mul975=($592)*($593);
 var $594=$fSlow60;
 var $595=$fTemp12;
 var $fVec3976=(($this1+528432)|0);
 var $arrayidx977=(($fVec3976+4)|0);
 var $596=HEAPF32[(($arrayidx977)>>2)];
 var $add978=($595)+($596);
 var $mul979=($594)*($add978);
 var $add980=($mul975)+($mul979);
 var $fRec37981=(($this1+528392)|0);
 var $arrayidx982=(($fRec37981)|0);
 HEAPF32[(($arrayidx982)>>2)]=$add980;
 var $fRec37983=(($this1+528392)|0);
 var $arrayidx984=(($fRec37983)|0);
 var $597=HEAPF32[(($arrayidx984)>>2)];
 var $598=$fSlow57;
 var $599=$fSlow63;
 var $fRec36=(($this1+528380)|0);
 var $arrayidx985=(($fRec36+8)|0);
 var $600=HEAPF32[(($arrayidx985)>>2)];
 var $mul986=($599)*($600);
 var $601=$fSlow36;
 var $fRec36987=(($this1+528380)|0);
 var $arrayidx988=(($fRec36987+4)|0);
 var $602=HEAPF32[(($arrayidx988)>>2)];
 var $mul989=($601)*($602);
 var $add990=($mul986)+($mul989);
 var $mul991=($598)*($add990);
 var $sub992=($597)-($mul991);
 var $fRec36993=(($this1+528380)|0);
 var $arrayidx994=(($fRec36993)|0);
 HEAPF32[(($arrayidx994)>>2)]=$sub992;
 var $fRec36995=(($this1+528380)|0);
 var $arrayidx996=(($fRec36995+8)|0);
 var $603=HEAPF32[(($arrayidx996)>>2)];
 var $fRec36997=(($this1+528380)|0);
 var $arrayidx998=(($fRec36997)|0);
 var $604=HEAPF32[(($arrayidx998)>>2)];
 var $fRec36999=(($this1+528380)|0);
 var $arrayidx1000=(($fRec36999+4)|0);
 var $605=HEAPF32[(($arrayidx1000)>>2)];
 var $mul1001=($605)*(2);
 var $add1002=($604)+($mul1001);
 var $add1003=($603)+($add1002);
 $fTemp14=$add1003;
 var $606=$fSlow57;
 var $607=$fTemp14;
 var $mul1004=($606)*($607);
 $fTemp15=$mul1004;
 var $608=$fTemp15;
 var $fVec4=(($this1+528372)|0);
 var $arrayidx1005=(($fVec4)|0);
 HEAPF32[(($arrayidx1005)>>2)]=$608;
 var $609=$fSlow69;
 var $fRec35=(($this1+528364)|0);
 var $arrayidx1006=(($fRec35+4)|0);
 var $610=HEAPF32[(($arrayidx1006)>>2)];
 var $mul1007=($609)*($610);
 var $611=$fSlow70;
 var $612=$fTemp15;
 var $fVec41008=(($this1+528372)|0);
 var $arrayidx1009=(($fVec41008+4)|0);
 var $613=HEAPF32[(($arrayidx1009)>>2)];
 var $add1010=($612)+($613);
 var $mul1011=($611)*($add1010);
 var $add1012=($mul1007)+($mul1011);
 var $fRec351013=(($this1+528364)|0);
 var $arrayidx1014=(($fRec351013)|0);
 HEAPF32[(($arrayidx1014)>>2)]=$add1012;
 var $fRec351015=(($this1+528364)|0);
 var $arrayidx1016=(($fRec351015)|0);
 var $614=HEAPF32[(($arrayidx1016)>>2)];
 var $615=$fSlow65;
 var $616=$fSlow71;
 var $fRec34=(($this1+528352)|0);
 var $arrayidx1017=(($fRec34+8)|0);
 var $617=HEAPF32[(($arrayidx1017)>>2)];
 var $mul1018=($616)*($617);
 var $618=$fSlow42;
 var $fRec341019=(($this1+528352)|0);
 var $arrayidx1020=(($fRec341019+4)|0);
 var $619=HEAPF32[(($arrayidx1020)>>2)];
 var $mul1021=($618)*($619);
 var $add1022=($mul1018)+($mul1021);
 var $mul1023=($615)*($add1022);
 var $sub1024=($614)-($mul1023);
 var $fRec341025=(($this1+528352)|0);
 var $arrayidx1026=(($fRec341025)|0);
 HEAPF32[(($arrayidx1026)>>2)]=$sub1024;
 var $620=$fSlow69;
 var $fRec39=(($this1+528344)|0);
 var $arrayidx1027=(($fRec39+4)|0);
 var $621=HEAPF32[(($arrayidx1027)>>2)];
 var $mul1028=($620)*($621);
 var $622=$fSlow70;
 var $623=$fSlow74;
 var $624=$fTemp14;
 var $mul1029=($623)*($624);
 var $625=$fSlow75;
 var $fVec41030=(($this1+528372)|0);
 var $arrayidx1031=(($fVec41030+4)|0);
 var $626=HEAPF32[(($arrayidx1031)>>2)];
 var $mul1032=($625)*($626);
 var $add1033=($mul1029)+($mul1032);
 var $mul1034=($622)*($add1033);
 var $add1035=($mul1028)+($mul1034);
 var $fRec391036=(($this1+528344)|0);
 var $arrayidx1037=(($fRec391036)|0);
 HEAPF32[(($arrayidx1037)>>2)]=$add1035;
 var $fRec391038=(($this1+528344)|0);
 var $arrayidx1039=(($fRec391038)|0);
 var $627=HEAPF32[(($arrayidx1039)>>2)];
 var $628=$fSlow65;
 var $629=$fSlow42;
 var $fRec38=(($this1+528332)|0);
 var $arrayidx1040=(($fRec38+4)|0);
 var $630=HEAPF32[(($arrayidx1040)>>2)];
 var $mul1041=($629)*($630);
 var $631=$fSlow71;
 var $fRec381042=(($this1+528332)|0);
 var $arrayidx1043=(($fRec381042+8)|0);
 var $632=HEAPF32[(($arrayidx1043)>>2)];
 var $mul1044=($631)*($632);
 var $add1045=($mul1041)+($mul1044);
 var $mul1046=($628)*($add1045);
 var $sub1047=($627)-($mul1046);
 var $fRec381048=(($this1+528332)|0);
 var $arrayidx1049=(($fRec381048)|0);
 HEAPF32[(($arrayidx1049)>>2)]=$sub1047;
 var $633=$fSlow12;
 var $fRec181050=(($this1+528532)|0);
 var $arrayidx1051=(($fRec181050+8)|0);
 var $634=HEAPF32[(($arrayidx1051)>>2)];
 var $635=$fSlow39;
 var $636=$fTemp6;
 var $637=$fSlow40;
 var $fRec181052=(($this1+528532)|0);
 var $arrayidx1053=(($fRec181052)|0);
 var $638=HEAPF32[(($arrayidx1053)>>2)];
 var $mul1054=($637)*($638);
 var $add1055=($636)+($mul1054);
 var $mul1056=($635)*($add1055);
 var $add1057=($634)+($mul1056);
 var $mul1058=($633)*($add1057);
 var $639=$fSlow44;
 var $fRec231059=(($this1+528460)|0);
 var $arrayidx1060=(($fRec231059+8)|0);
 var $640=HEAPF32[(($arrayidx1060)>>2)];
 var $641=$fSlow39;
 var $642=$fTemp10;
 var $643=$fSlow40;
 var $fRec231061=(($this1+528460)|0);
 var $arrayidx1062=(($fRec231061)|0);
 var $644=HEAPF32[(($arrayidx1062)>>2)];
 var $mul1063=($643)*($644);
 var $add1064=($642)+($mul1063);
 var $mul1065=($641)*($add1064);
 var $add1066=($640)+($mul1065);
 var $mul1067=($639)*($add1066);
 var $add1068=($mul1058)+($mul1067);
 var $645=$fSlow55;
 var $fRec291069=(($this1+528400)|0);
 var $arrayidx1070=(($fRec291069+8)|0);
 var $646=HEAPF32[(($arrayidx1070)>>2)];
 var $647=$fSlow39;
 var $648=$fTemp13;
 var $649=$fSlow40;
 var $fRec291071=(($this1+528400)|0);
 var $arrayidx1072=(($fRec291071)|0);
 var $650=HEAPF32[(($arrayidx1072)>>2)];
 var $mul1073=($649)*($650);
 var $add1074=($648)+($mul1073);
 var $mul1075=($647)*($add1074);
 var $add1076=($646)+($mul1075);
 var $mul1077=($645)*($add1076);
 var $add1078=($add1068)+($mul1077);
 var $651=$fSlow65;
 var $652=$fSlow67;
 var $fRec341079=(($this1+528352)|0);
 var $arrayidx1080=(($fRec341079+8)|0);
 var $653=HEAPF32[(($arrayidx1080)>>2)];
 var $fRec341081=(($this1+528352)|0);
 var $arrayidx1082=(($fRec341081)|0);
 var $654=HEAPF32[(($arrayidx1082)>>2)];
 var $fRec341083=(($this1+528352)|0);
 var $arrayidx1084=(($fRec341083+4)|0);
 var $655=HEAPF32[(($arrayidx1084)>>2)];
 var $mul1085=($655)*(2);
 var $add1086=($654)+($mul1085);
 var $add1087=($653)+($add1086);
 var $mul1088=($652)*($add1087);
 var $656=$fSlow73;
 var $657=$fSlow41;
 var $fRec381089=(($this1+528332)|0);
 var $arrayidx1090=(($fRec381089)|0);
 var $658=HEAPF32[(($arrayidx1090)>>2)];
 var $mul1091=($657)*($658);
 var $659=$fSlow76;
 var $fRec381092=(($this1+528332)|0);
 var $arrayidx1093=(($fRec381092+4)|0);
 var $660=HEAPF32[(($arrayidx1093)>>2)];
 var $mul1094=($659)*($660);
 var $add1095=($mul1091)+($mul1094);
 var $661=$fSlow41;
 var $fRec381096=(($this1+528332)|0);
 var $arrayidx1097=(($fRec381096+8)|0);
 var $662=HEAPF32[(($arrayidx1097)>>2)];
 var $mul1098=($661)*($662);
 var $add1099=($add1095)+($mul1098);
 var $mul1100=($656)*($add1099);
 var $add1101=($mul1088)+($mul1100);
 var $mul1102=($651)*($add1101);
 var $add1103=($add1078)+($mul1102);
 $fTemp16=$add1103;
 var $663=$fSlow19;
 var $fRec44=(($this1+528324)|0);
 var $arrayidx1104=(($fRec44+4)|0);
 var $664=HEAPF32[(($arrayidx1104)>>2)];
 var $mul1105=($663)*($664);
 var $665=$fSlow20;
 var $666=$fSlow14;
 var $fRec8=(($this1+229464)|0);
 var $arrayidx1106=(($fRec8+4)|0);
 var $667=HEAPF32[(($arrayidx1106)>>2)];
 var $mul1107=($666)*($667);
 var $668=$fSlow21;
 var $fRec81108=(($this1+229464)|0);
 var $arrayidx1109=(($fRec81108+8)|0);
 var $669=HEAPF32[(($arrayidx1109)>>2)];
 var $mul1110=($668)*($669);
 var $add1111=($mul1107)+($mul1110);
 var $mul1112=($665)*($add1111);
 var $add1113=($mul1105)+($mul1112);
 var $fRec441114=(($this1+528324)|0);
 var $arrayidx1115=(($fRec441114)|0);
 HEAPF32[(($arrayidx1115)>>2)]=$add1113;
 var $fRec441116=(($this1+528324)|0);
 var $arrayidx1117=(($fRec441116)|0);
 var $670=HEAPF32[(($arrayidx1117)>>2)];
 var $671=$fSlow16;
 var $672=$fSlow22;
 var $fRec43=(($this1+528312)|0);
 var $arrayidx1118=(($fRec43+8)|0);
 var $673=HEAPF32[(($arrayidx1118)>>2)];
 var $mul1119=($672)*($673);
 var $674=$fSlow23;
 var $fRec431120=(($this1+528312)|0);
 var $arrayidx1121=(($fRec431120+4)|0);
 var $675=HEAPF32[(($arrayidx1121)>>2)];
 var $mul1122=($674)*($675);
 var $add1123=($mul1119)+($mul1122);
 var $mul1124=($671)*($add1123);
 var $sub1125=($670)-($mul1124);
 var $fRec431126=(($this1+528312)|0);
 var $arrayidx1127=(($fRec431126)|0);
 HEAPF32[(($arrayidx1127)>>2)]=$sub1125;
 var $676=$fSlow30;
 var $fRec42=(($this1+528300)|0);
 var $arrayidx1128=(($fRec42+4)|0);
 var $677=HEAPF32[(($arrayidx1128)>>2)];
 var $mul1129=($676)*($677);
 $fTemp17=$mul1129;
 var $678=$fSlow16;
 var $679=$fSlow17;
 var $fRec431130=(($this1+528312)|0);
 var $arrayidx1131=(($fRec431130)|0);
 var $680=HEAPF32[(($arrayidx1131)>>2)];
 var $mul1132=($679)*($680);
 var $681=$fSlow24;
 var $fRec431133=(($this1+528312)|0);
 var $arrayidx1134=(($fRec431133+4)|0);
 var $682=HEAPF32[(($arrayidx1134)>>2)];
 var $mul1135=($681)*($682);
 var $add1136=($mul1132)+($mul1135);
 var $683=$fSlow17;
 var $fRec431137=(($this1+528312)|0);
 var $arrayidx1138=(($fRec431137+8)|0);
 var $684=HEAPF32[(($arrayidx1138)>>2)];
 var $mul1139=($683)*($684);
 var $add1140=($add1136)+($mul1139);
 var $mul1141=($678)*($add1140);
 var $685=$fSlow27;
 var $686=$fSlow28;
 var $fRec421142=(($this1+528300)|0);
 var $arrayidx1143=(($fRec421142+8)|0);
 var $687=HEAPF32[(($arrayidx1143)>>2)];
 var $mul1144=($686)*($687);
 var $688=$fTemp17;
 var $add1145=($mul1144)+($688);
 var $mul1146=($685)*($add1145);
 var $sub1147=($mul1141)-($mul1146);
 var $fRec421148=(($this1+528300)|0);
 var $arrayidx1149=(($fRec421148)|0);
 HEAPF32[(($arrayidx1149)>>2)]=$sub1147;
 var $689=$fSlow36;
 var $fRec41=(($this1+528288)|0);
 var $arrayidx1150=(($fRec41+4)|0);
 var $690=HEAPF32[(($arrayidx1150)>>2)];
 var $mul1151=($689)*($690);
 $fTemp18=$mul1151;
 var $fRec421152=(($this1+528300)|0);
 var $arrayidx1153=(($fRec421152+8)|0);
 var $691=HEAPF32[(($arrayidx1153)>>2)];
 var $692=$fSlow27;
 var $693=$fTemp17;
 var $694=$fSlow28;
 var $fRec421154=(($this1+528300)|0);
 var $arrayidx1155=(($fRec421154)|0);
 var $695=HEAPF32[(($arrayidx1155)>>2)];
 var $mul1156=($694)*($695);
 var $add1157=($693)+($mul1156);
 var $mul1158=($692)*($add1157);
 var $add1159=($691)+($mul1158);
 var $696=$fSlow33;
 var $697=$fSlow34;
 var $fRec411160=(($this1+528288)|0);
 var $arrayidx1161=(($fRec411160+8)|0);
 var $698=HEAPF32[(($arrayidx1161)>>2)];
 var $mul1162=($697)*($698);
 var $699=$fTemp18;
 var $add1163=($mul1162)+($699);
 var $mul1164=($696)*($add1163);
 var $sub1165=($add1159)-($mul1164);
 var $fRec411166=(($this1+528288)|0);
 var $arrayidx1167=(($fRec411166)|0);
 HEAPF32[(($arrayidx1167)>>2)]=$sub1165;
 var $700=$fSlow42;
 var $fRec40=(($this1+528276)|0);
 var $arrayidx1168=(($fRec40+4)|0);
 var $701=HEAPF32[(($arrayidx1168)>>2)];
 var $mul1169=($700)*($701);
 $fTemp19=$mul1169;
 var $fRec411170=(($this1+528288)|0);
 var $arrayidx1171=(($fRec411170+8)|0);
 var $702=HEAPF32[(($arrayidx1171)>>2)];
 var $703=$fSlow33;
 var $704=$fTemp18;
 var $705=$fSlow34;
 var $fRec411172=(($this1+528288)|0);
 var $arrayidx1173=(($fRec411172)|0);
 var $706=HEAPF32[(($arrayidx1173)>>2)];
 var $mul1174=($705)*($706);
 var $add1175=($704)+($mul1174);
 var $mul1176=($703)*($add1175);
 var $add1177=($702)+($mul1176);
 var $707=$fSlow39;
 var $708=$fSlow40;
 var $fRec401178=(($this1+528276)|0);
 var $arrayidx1179=(($fRec401178+8)|0);
 var $709=HEAPF32[(($arrayidx1179)>>2)];
 var $mul1180=($708)*($709);
 var $710=$fTemp19;
 var $add1181=($mul1180)+($710);
 var $mul1182=($707)*($add1181);
 var $sub1183=($add1177)-($mul1182);
 var $fRec401184=(($this1+528276)|0);
 var $arrayidx1185=(($fRec401184)|0);
 HEAPF32[(($arrayidx1185)>>2)]=$sub1183;
 var $711=$fSlow19;
 var $fRec50=(($this1+528268)|0);
 var $arrayidx1186=(($fRec50+4)|0);
 var $712=HEAPF32[(($arrayidx1186)>>2)];
 var $mul1187=($711)*($712);
 var $713=$fSlow20;
 var $fRec81188=(($this1+229464)|0);
 var $arrayidx1189=(($fRec81188+4)|0);
 var $714=HEAPF32[(($arrayidx1189)>>2)];
 var $fRec81190=(($this1+229464)|0);
 var $arrayidx1191=(($fRec81190+8)|0);
 var $715=HEAPF32[(($arrayidx1191)>>2)];
 var $add1192=($714)+($715);
 var $mul1193=($713)*($add1192);
 var $add1194=($mul1187)+($mul1193);
 var $fRec501195=(($this1+528268)|0);
 var $arrayidx1196=(($fRec501195)|0);
 HEAPF32[(($arrayidx1196)>>2)]=$add1194;
 var $fRec501197=(($this1+528268)|0);
 var $arrayidx1198=(($fRec501197)|0);
 var $716=HEAPF32[(($arrayidx1198)>>2)];
 var $717=$fSlow16;
 var $718=$fSlow22;
 var $fRec49=(($this1+528256)|0);
 var $arrayidx1199=(($fRec49+8)|0);
 var $719=HEAPF32[(($arrayidx1199)>>2)];
 var $mul1200=($718)*($719);
 var $720=$fSlow23;
 var $fRec491201=(($this1+528256)|0);
 var $arrayidx1202=(($fRec491201+4)|0);
 var $721=HEAPF32[(($arrayidx1202)>>2)];
 var $mul1203=($720)*($721);
 var $add1204=($mul1200)+($mul1203);
 var $mul1205=($717)*($add1204);
 var $sub1206=($716)-($mul1205);
 var $fRec491207=(($this1+528256)|0);
 var $arrayidx1208=(($fRec491207)|0);
 HEAPF32[(($arrayidx1208)>>2)]=$sub1206;
 var $fRec491209=(($this1+528256)|0);
 var $arrayidx1210=(($fRec491209+8)|0);
 var $722=HEAPF32[(($arrayidx1210)>>2)];
 var $fRec491211=(($this1+528256)|0);
 var $arrayidx1212=(($fRec491211)|0);
 var $723=HEAPF32[(($arrayidx1212)>>2)];
 var $fRec491213=(($this1+528256)|0);
 var $arrayidx1214=(($fRec491213+4)|0);
 var $724=HEAPF32[(($arrayidx1214)>>2)];
 var $mul1215=($724)*(2);
 var $add1216=($723)+($mul1215);
 var $add1217=($722)+($add1216);
 $fTemp20=$add1217;
 var $725=$fSlow16;
 var $726=$fTemp20;
 var $mul1218=($725)*($726);
 $fTemp21=$mul1218;
 var $727=$fTemp21;
 var $fVec5=(($this1+528248)|0);
 var $arrayidx1219=(($fVec5)|0);
 HEAPF32[(($arrayidx1219)>>2)]=$727;
 var $728=$fSlow48;
 var $fRec48=(($this1+528240)|0);
 var $arrayidx1220=(($fRec48+4)|0);
 var $729=HEAPF32[(($arrayidx1220)>>2)];
 var $mul1221=($728)*($729);
 var $730=$fSlow49;
 var $731=$fSlow51;
 var $fVec51222=(($this1+528248)|0);
 var $arrayidx1223=(($fVec51222+4)|0);
 var $732=HEAPF32[(($arrayidx1223)>>2)];
 var $mul1224=($731)*($732);
 var $733=$fSlow50;
 var $734=$fTemp20;
 var $mul1225=($733)*($734);
 var $add1226=($mul1224)+($mul1225);
 var $mul1227=($730)*($add1226);
 var $add1228=($mul1221)+($mul1227);
 var $fRec481229=(($this1+528240)|0);
 var $arrayidx1230=(($fRec481229)|0);
 HEAPF32[(($arrayidx1230)>>2)]=$add1228;
 var $fRec481231=(($this1+528240)|0);
 var $arrayidx1232=(($fRec481231)|0);
 var $735=HEAPF32[(($arrayidx1232)>>2)];
 var $736=$fSlow46;
 var $737=$fSlow52;
 var $fRec47=(($this1+528228)|0);
 var $arrayidx1233=(($fRec47+8)|0);
 var $738=HEAPF32[(($arrayidx1233)>>2)];
 var $mul1234=($737)*($738);
 var $739=$fSlow30;
 var $fRec471235=(($this1+528228)|0);
 var $arrayidx1236=(($fRec471235+4)|0);
 var $740=HEAPF32[(($arrayidx1236)>>2)];
 var $mul1237=($739)*($740);
 var $add1238=($mul1234)+($mul1237);
 var $mul1239=($736)*($add1238);
 var $sub1240=($735)-($mul1239);
 var $fRec471241=(($this1+528228)|0);
 var $arrayidx1242=(($fRec471241)|0);
 HEAPF32[(($arrayidx1242)>>2)]=$sub1240;
 var $741=$fSlow36;
 var $fRec46=(($this1+528216)|0);
 var $arrayidx1243=(($fRec46+4)|0);
 var $742=HEAPF32[(($arrayidx1243)>>2)];
 var $mul1244=($741)*($742);
 $fTemp22=$mul1244;
 var $743=$fSlow46;
 var $744=$fSlow29;
 var $fRec471245=(($this1+528228)|0);
 var $arrayidx1246=(($fRec471245)|0);
 var $745=HEAPF32[(($arrayidx1246)>>2)];
 var $mul1247=($744)*($745);
 var $746=$fSlow53;
 var $fRec471248=(($this1+528228)|0);
 var $arrayidx1249=(($fRec471248+4)|0);
 var $747=HEAPF32[(($arrayidx1249)>>2)];
 var $mul1250=($746)*($747);
 var $add1251=($mul1247)+($mul1250);
 var $748=$fSlow29;
 var $fRec471252=(($this1+528228)|0);
 var $arrayidx1253=(($fRec471252+8)|0);
 var $749=HEAPF32[(($arrayidx1253)>>2)];
 var $mul1254=($748)*($749);
 var $add1255=($add1251)+($mul1254);
 var $mul1256=($743)*($add1255);
 var $750=$fSlow33;
 var $751=$fSlow34;
 var $fRec461257=(($this1+528216)|0);
 var $arrayidx1258=(($fRec461257+8)|0);
 var $752=HEAPF32[(($arrayidx1258)>>2)];
 var $mul1259=($751)*($752);
 var $753=$fTemp22;
 var $add1260=($mul1259)+($753);
 var $mul1261=($750)*($add1260);
 var $sub1262=($mul1256)-($mul1261);
 var $fRec461263=(($this1+528216)|0);
 var $arrayidx1264=(($fRec461263)|0);
 HEAPF32[(($arrayidx1264)>>2)]=$sub1262;
 var $754=$fSlow42;
 var $fRec45=(($this1+528204)|0);
 var $arrayidx1265=(($fRec45+4)|0);
 var $755=HEAPF32[(($arrayidx1265)>>2)];
 var $mul1266=($754)*($755);
 $fTemp23=$mul1266;
 var $fRec461267=(($this1+528216)|0);
 var $arrayidx1268=(($fRec461267+8)|0);
 var $756=HEAPF32[(($arrayidx1268)>>2)];
 var $757=$fSlow33;
 var $758=$fTemp22;
 var $759=$fSlow34;
 var $fRec461269=(($this1+528216)|0);
 var $arrayidx1270=(($fRec461269)|0);
 var $760=HEAPF32[(($arrayidx1270)>>2)];
 var $mul1271=($759)*($760);
 var $add1272=($758)+($mul1271);
 var $mul1273=($757)*($add1272);
 var $add1274=($756)+($mul1273);
 var $761=$fSlow39;
 var $762=$fSlow40;
 var $fRec451275=(($this1+528204)|0);
 var $arrayidx1276=(($fRec451275+8)|0);
 var $763=HEAPF32[(($arrayidx1276)>>2)];
 var $mul1277=($762)*($763);
 var $764=$fTemp23;
 var $add1278=($mul1277)+($764);
 var $mul1279=($761)*($add1278);
 var $sub1280=($add1274)-($mul1279);
 var $fRec451281=(($this1+528204)|0);
 var $arrayidx1282=(($fRec451281)|0);
 HEAPF32[(($arrayidx1282)>>2)]=$sub1280;
 var $765=$fSlow48;
 var $fRec55=(($this1+528196)|0);
 var $arrayidx1283=(($fRec55+4)|0);
 var $766=HEAPF32[(($arrayidx1283)>>2)];
 var $mul1284=($765)*($766);
 var $767=$fSlow49;
 var $fVec51285=(($this1+528248)|0);
 var $arrayidx1286=(($fVec51285+4)|0);
 var $768=HEAPF32[(($arrayidx1286)>>2)];
 var $769=$fTemp21;
 var $add1287=($768)+($769);
 var $mul1288=($767)*($add1287);
 var $add1289=($mul1284)+($mul1288);
 var $fRec551290=(($this1+528196)|0);
 var $arrayidx1291=(($fRec551290)|0);
 HEAPF32[(($arrayidx1291)>>2)]=$add1289;
 var $fRec551292=(($this1+528196)|0);
 var $arrayidx1293=(($fRec551292)|0);
 var $770=HEAPF32[(($arrayidx1293)>>2)];
 var $771=$fSlow46;
 var $772=$fSlow52;
 var $fRec54=(($this1+528184)|0);
 var $arrayidx1294=(($fRec54+8)|0);
 var $773=HEAPF32[(($arrayidx1294)>>2)];
 var $mul1295=($772)*($773);
 var $774=$fSlow30;
 var $fRec541296=(($this1+528184)|0);
 var $arrayidx1297=(($fRec541296+4)|0);
 var $775=HEAPF32[(($arrayidx1297)>>2)];
 var $mul1298=($774)*($775);
 var $add1299=($mul1295)+($mul1298);
 var $mul1300=($771)*($add1299);
 var $sub1301=($770)-($mul1300);
 var $fRec541302=(($this1+528184)|0);
 var $arrayidx1303=(($fRec541302)|0);
 HEAPF32[(($arrayidx1303)>>2)]=$sub1301;
 var $fRec541304=(($this1+528184)|0);
 var $arrayidx1305=(($fRec541304+8)|0);
 var $776=HEAPF32[(($arrayidx1305)>>2)];
 var $fRec541306=(($this1+528184)|0);
 var $arrayidx1307=(($fRec541306)|0);
 var $777=HEAPF32[(($arrayidx1307)>>2)];
 var $fRec541308=(($this1+528184)|0);
 var $arrayidx1309=(($fRec541308+4)|0);
 var $778=HEAPF32[(($arrayidx1309)>>2)];
 var $mul1310=($778)*(2);
 var $add1311=($777)+($mul1310);
 var $add1312=($776)+($add1311);
 $fTemp24=$add1312;
 var $779=$fSlow46;
 var $780=$fTemp24;
 var $mul1313=($779)*($780);
 $fTemp25=$mul1313;
 var $781=$fTemp25;
 var $fVec6=(($this1+528176)|0);
 var $arrayidx1314=(($fVec6)|0);
 HEAPF32[(($arrayidx1314)>>2)]=$781;
 var $782=$fSlow59;
 var $fRec53=(($this1+528168)|0);
 var $arrayidx1315=(($fRec53+4)|0);
 var $783=HEAPF32[(($arrayidx1315)>>2)];
 var $mul1316=($782)*($783);
 var $784=$fSlow60;
 var $785=$fSlow62;
 var $fVec61317=(($this1+528176)|0);
 var $arrayidx1318=(($fVec61317+4)|0);
 var $786=HEAPF32[(($arrayidx1318)>>2)];
 var $mul1319=($785)*($786);
 var $787=$fSlow61;
 var $788=$fTemp24;
 var $mul1320=($787)*($788);
 var $add1321=($mul1319)+($mul1320);
 var $mul1322=($784)*($add1321);
 var $add1323=($mul1316)+($mul1322);
 var $fRec531324=(($this1+528168)|0);
 var $arrayidx1325=(($fRec531324)|0);
 HEAPF32[(($arrayidx1325)>>2)]=$add1323;
 var $fRec531326=(($this1+528168)|0);
 var $arrayidx1327=(($fRec531326)|0);
 var $789=HEAPF32[(($arrayidx1327)>>2)];
 var $790=$fSlow57;
 var $791=$fSlow63;
 var $fRec52=(($this1+528156)|0);
 var $arrayidx1328=(($fRec52+8)|0);
 var $792=HEAPF32[(($arrayidx1328)>>2)];
 var $mul1329=($791)*($792);
 var $793=$fSlow36;
 var $fRec521330=(($this1+528156)|0);
 var $arrayidx1331=(($fRec521330+4)|0);
 var $794=HEAPF32[(($arrayidx1331)>>2)];
 var $mul1332=($793)*($794);
 var $add1333=($mul1329)+($mul1332);
 var $mul1334=($790)*($add1333);
 var $sub1335=($789)-($mul1334);
 var $fRec521336=(($this1+528156)|0);
 var $arrayidx1337=(($fRec521336)|0);
 HEAPF32[(($arrayidx1337)>>2)]=$sub1335;
 var $795=$fSlow42;
 var $fRec51=(($this1+528144)|0);
 var $arrayidx1338=(($fRec51+4)|0);
 var $796=HEAPF32[(($arrayidx1338)>>2)];
 var $mul1339=($795)*($796);
 $fTemp26=$mul1339;
 var $797=$fSlow57;
 var $798=$fSlow35;
 var $fRec521340=(($this1+528156)|0);
 var $arrayidx1341=(($fRec521340)|0);
 var $799=HEAPF32[(($arrayidx1341)>>2)];
 var $mul1342=($798)*($799);
 var $800=$fSlow64;
 var $fRec521343=(($this1+528156)|0);
 var $arrayidx1344=(($fRec521343+4)|0);
 var $801=HEAPF32[(($arrayidx1344)>>2)];
 var $mul1345=($800)*($801);
 var $add1346=($mul1342)+($mul1345);
 var $802=$fSlow35;
 var $fRec521347=(($this1+528156)|0);
 var $arrayidx1348=(($fRec521347+8)|0);
 var $803=HEAPF32[(($arrayidx1348)>>2)];
 var $mul1349=($802)*($803);
 var $add1350=($add1346)+($mul1349);
 var $mul1351=($797)*($add1350);
 var $804=$fSlow39;
 var $805=$fSlow40;
 var $fRec511352=(($this1+528144)|0);
 var $arrayidx1353=(($fRec511352+8)|0);
 var $806=HEAPF32[(($arrayidx1353)>>2)];
 var $mul1354=($805)*($806);
 var $807=$fTemp26;
 var $add1355=($mul1354)+($807);
 var $mul1356=($804)*($add1355);
 var $sub1357=($mul1351)-($mul1356);
 var $fRec511358=(($this1+528144)|0);
 var $arrayidx1359=(($fRec511358)|0);
 HEAPF32[(($arrayidx1359)>>2)]=$sub1357;
 var $808=$fSlow59;
 var $fRec59=(($this1+528136)|0);
 var $arrayidx1360=(($fRec59+4)|0);
 var $809=HEAPF32[(($arrayidx1360)>>2)];
 var $mul1361=($808)*($809);
 var $810=$fSlow60;
 var $fVec61362=(($this1+528176)|0);
 var $arrayidx1363=(($fVec61362+4)|0);
 var $811=HEAPF32[(($arrayidx1363)>>2)];
 var $812=$fTemp25;
 var $add1364=($811)+($812);
 var $mul1365=($810)*($add1364);
 var $add1366=($mul1361)+($mul1365);
 var $fRec591367=(($this1+528136)|0);
 var $arrayidx1368=(($fRec591367)|0);
 HEAPF32[(($arrayidx1368)>>2)]=$add1366;
 var $fRec591369=(($this1+528136)|0);
 var $arrayidx1370=(($fRec591369)|0);
 var $813=HEAPF32[(($arrayidx1370)>>2)];
 var $814=$fSlow57;
 var $815=$fSlow63;
 var $fRec58=(($this1+528124)|0);
 var $arrayidx1371=(($fRec58+8)|0);
 var $816=HEAPF32[(($arrayidx1371)>>2)];
 var $mul1372=($815)*($816);
 var $817=$fSlow36;
 var $fRec581373=(($this1+528124)|0);
 var $arrayidx1374=(($fRec581373+4)|0);
 var $818=HEAPF32[(($arrayidx1374)>>2)];
 var $mul1375=($817)*($818);
 var $add1376=($mul1372)+($mul1375);
 var $mul1377=($814)*($add1376);
 var $sub1378=($813)-($mul1377);
 var $fRec581379=(($this1+528124)|0);
 var $arrayidx1380=(($fRec581379)|0);
 HEAPF32[(($arrayidx1380)>>2)]=$sub1378;
 var $fRec581381=(($this1+528124)|0);
 var $arrayidx1382=(($fRec581381+8)|0);
 var $819=HEAPF32[(($arrayidx1382)>>2)];
 var $fRec581383=(($this1+528124)|0);
 var $arrayidx1384=(($fRec581383)|0);
 var $820=HEAPF32[(($arrayidx1384)>>2)];
 var $fRec581385=(($this1+528124)|0);
 var $arrayidx1386=(($fRec581385+4)|0);
 var $821=HEAPF32[(($arrayidx1386)>>2)];
 var $mul1387=($821)*(2);
 var $add1388=($820)+($mul1387);
 var $add1389=($819)+($add1388);
 $fTemp27=$add1389;
 var $822=$fSlow57;
 var $823=$fTemp27;
 var $mul1390=($822)*($823);
 $fTemp28=$mul1390;
 var $824=$fTemp28;
 var $fVec7=(($this1+528116)|0);
 var $arrayidx1391=(($fVec7)|0);
 HEAPF32[(($arrayidx1391)>>2)]=$824;
 var $825=$fSlow69;
 var $fRec57=(($this1+528108)|0);
 var $arrayidx1392=(($fRec57+4)|0);
 var $826=HEAPF32[(($arrayidx1392)>>2)];
 var $mul1393=($825)*($826);
 var $827=$fSlow70;
 var $fVec71394=(($this1+528116)|0);
 var $arrayidx1395=(($fVec71394+4)|0);
 var $828=HEAPF32[(($arrayidx1395)>>2)];
 var $829=$fTemp28;
 var $add1396=($828)+($829);
 var $mul1397=($827)*($add1396);
 var $add1398=($mul1393)+($mul1397);
 var $fRec571399=(($this1+528108)|0);
 var $arrayidx1400=(($fRec571399)|0);
 HEAPF32[(($arrayidx1400)>>2)]=$add1398;
 var $fRec571401=(($this1+528108)|0);
 var $arrayidx1402=(($fRec571401)|0);
 var $830=HEAPF32[(($arrayidx1402)>>2)];
 var $831=$fSlow65;
 var $832=$fSlow71;
 var $fRec56=(($this1+528096)|0);
 var $arrayidx1403=(($fRec56+8)|0);
 var $833=HEAPF32[(($arrayidx1403)>>2)];
 var $mul1404=($832)*($833);
 var $834=$fSlow42;
 var $fRec561405=(($this1+528096)|0);
 var $arrayidx1406=(($fRec561405+4)|0);
 var $835=HEAPF32[(($arrayidx1406)>>2)];
 var $mul1407=($834)*($835);
 var $add1408=($mul1404)+($mul1407);
 var $mul1409=($831)*($add1408);
 var $sub1410=($830)-($mul1409);
 var $fRec561411=(($this1+528096)|0);
 var $arrayidx1412=(($fRec561411)|0);
 HEAPF32[(($arrayidx1412)>>2)]=$sub1410;
 var $836=$fSlow69;
 var $fRec61=(($this1+528088)|0);
 var $arrayidx1413=(($fRec61+4)|0);
 var $837=HEAPF32[(($arrayidx1413)>>2)];
 var $mul1414=($836)*($837);
 var $838=$fSlow70;
 var $839=$fSlow75;
 var $fVec71415=(($this1+528116)|0);
 var $arrayidx1416=(($fVec71415+4)|0);
 var $840=HEAPF32[(($arrayidx1416)>>2)];
 var $mul1417=($839)*($840);
 var $841=$fSlow74;
 var $842=$fTemp27;
 var $mul1418=($841)*($842);
 var $add1419=($mul1417)+($mul1418);
 var $mul1420=($838)*($add1419);
 var $add1421=($mul1414)+($mul1420);
 var $fRec611422=(($this1+528088)|0);
 var $arrayidx1423=(($fRec611422)|0);
 HEAPF32[(($arrayidx1423)>>2)]=$add1421;
 var $fRec611424=(($this1+528088)|0);
 var $arrayidx1425=(($fRec611424)|0);
 var $843=HEAPF32[(($arrayidx1425)>>2)];
 var $844=$fSlow65;
 var $845=$fSlow71;
 var $fRec60=(($this1+528076)|0);
 var $arrayidx1426=(($fRec60+8)|0);
 var $846=HEAPF32[(($arrayidx1426)>>2)];
 var $mul1427=($845)*($846);
 var $847=$fSlow42;
 var $fRec601428=(($this1+528076)|0);
 var $arrayidx1429=(($fRec601428+4)|0);
 var $848=HEAPF32[(($arrayidx1429)>>2)];
 var $mul1430=($847)*($848);
 var $add1431=($mul1427)+($mul1430);
 var $mul1432=($844)*($add1431);
 var $sub1433=($843)-($mul1432);
 var $fRec601434=(($this1+528076)|0);
 var $arrayidx1435=(($fRec601434)|0);
 HEAPF32[(($arrayidx1435)>>2)]=$sub1433;
 var $849=$fSlow79;
 var $fRec401436=(($this1+528276)|0);
 var $arrayidx1437=(($fRec401436+8)|0);
 var $850=HEAPF32[(($arrayidx1437)>>2)];
 var $851=$fSlow39;
 var $852=$fTemp19;
 var $853=$fSlow40;
 var $fRec401438=(($this1+528276)|0);
 var $arrayidx1439=(($fRec401438)|0);
 var $854=HEAPF32[(($arrayidx1439)>>2)];
 var $mul1440=($853)*($854);
 var $add1441=($852)+($mul1440);
 var $mul1442=($851)*($add1441);
 var $add1443=($850)+($mul1442);
 var $mul1444=($849)*($add1443);
 var $855=$fSlow80;
 var $fRec451445=(($this1+528204)|0);
 var $arrayidx1446=(($fRec451445+8)|0);
 var $856=HEAPF32[(($arrayidx1446)>>2)];
 var $857=$fSlow39;
 var $858=$fTemp23;
 var $859=$fSlow40;
 var $fRec451447=(($this1+528204)|0);
 var $arrayidx1448=(($fRec451447)|0);
 var $860=HEAPF32[(($arrayidx1448)>>2)];
 var $mul1449=($859)*($860);
 var $add1450=($858)+($mul1449);
 var $mul1451=($857)*($add1450);
 var $add1452=($856)+($mul1451);
 var $mul1453=($855)*($add1452);
 var $add1454=($mul1444)+($mul1453);
 var $861=$fSlow81;
 var $fRec511455=(($this1+528144)|0);
 var $arrayidx1456=(($fRec511455+8)|0);
 var $862=HEAPF32[(($arrayidx1456)>>2)];
 var $863=$fSlow39;
 var $864=$fTemp26;
 var $865=$fSlow40;
 var $fRec511457=(($this1+528144)|0);
 var $arrayidx1458=(($fRec511457)|0);
 var $866=HEAPF32[(($arrayidx1458)>>2)];
 var $mul1459=($865)*($866);
 var $add1460=($864)+($mul1459);
 var $mul1461=($863)*($add1460);
 var $add1462=($862)+($mul1461);
 var $mul1463=($861)*($add1462);
 var $add1464=($add1454)+($mul1463);
 var $867=$fSlow65;
 var $868=$fSlow82;
 var $fRec561465=(($this1+528096)|0);
 var $arrayidx1466=(($fRec561465+8)|0);
 var $869=HEAPF32[(($arrayidx1466)>>2)];
 var $fRec561467=(($this1+528096)|0);
 var $arrayidx1468=(($fRec561467)|0);
 var $870=HEAPF32[(($arrayidx1468)>>2)];
 var $fRec561469=(($this1+528096)|0);
 var $arrayidx1470=(($fRec561469+4)|0);
 var $871=HEAPF32[(($arrayidx1470)>>2)];
 var $mul1471=($871)*(2);
 var $add1472=($870)+($mul1471);
 var $add1473=($869)+($add1472);
 var $mul1474=($868)*($add1473);
 var $872=$fSlow83;
 var $873=$fSlow41;
 var $fRec601475=(($this1+528076)|0);
 var $arrayidx1476=(($fRec601475)|0);
 var $874=HEAPF32[(($arrayidx1476)>>2)];
 var $mul1477=($873)*($874);
 var $875=$fSlow76;
 var $fRec601478=(($this1+528076)|0);
 var $arrayidx1479=(($fRec601478+4)|0);
 var $876=HEAPF32[(($arrayidx1479)>>2)];
 var $mul1480=($875)*($876);
 var $add1481=($mul1477)+($mul1480);
 var $877=$fSlow41;
 var $fRec601482=(($this1+528076)|0);
 var $arrayidx1483=(($fRec601482+8)|0);
 var $878=HEAPF32[(($arrayidx1483)>>2)];
 var $mul1484=($877)*($878);
 var $add1485=($add1481)+($mul1484);
 var $mul1486=($872)*($add1485);
 var $add1487=($mul1474)+($mul1486);
 var $mul1488=($867)*($add1487);
 var $add1489=($add1464)+($mul1488);
 $fTemp29=$add1489;
 var $879=$fTemp16;
 var $880=$fTemp29;
 var $add1490=($879)+($880);
 $fTemp30=$add1490;
 var $881=$fSlow19;
 var $fRec66=(($this1+528068)|0);
 var $arrayidx1491=(($fRec66+4)|0);
 var $882=HEAPF32[(($arrayidx1491)>>2)];
 var $mul1492=($881)*($882);
 var $883=$fSlow20;
 var $884=$fSlow14;
 var $fRec4=(($this1+360584)|0);
 var $arrayidx1493=(($fRec4+4)|0);
 var $885=HEAPF32[(($arrayidx1493)>>2)];
 var $mul1494=($884)*($885);
 var $886=$fSlow21;
 var $fRec41495=(($this1+360584)|0);
 var $arrayidx1496=(($fRec41495+8)|0);
 var $887=HEAPF32[(($arrayidx1496)>>2)];
 var $mul1497=($886)*($887);
 var $add1498=($mul1494)+($mul1497);
 var $mul1499=($883)*($add1498);
 var $add1500=($mul1492)+($mul1499);
 var $fRec661501=(($this1+528068)|0);
 var $arrayidx1502=(($fRec661501)|0);
 HEAPF32[(($arrayidx1502)>>2)]=$add1500;
 var $fRec661503=(($this1+528068)|0);
 var $arrayidx1504=(($fRec661503)|0);
 var $888=HEAPF32[(($arrayidx1504)>>2)];
 var $889=$fSlow16;
 var $890=$fSlow22;
 var $fRec65=(($this1+528056)|0);
 var $arrayidx1505=(($fRec65+8)|0);
 var $891=HEAPF32[(($arrayidx1505)>>2)];
 var $mul1506=($890)*($891);
 var $892=$fSlow23;
 var $fRec651507=(($this1+528056)|0);
 var $arrayidx1508=(($fRec651507+4)|0);
 var $893=HEAPF32[(($arrayidx1508)>>2)];
 var $mul1509=($892)*($893);
 var $add1510=($mul1506)+($mul1509);
 var $mul1511=($889)*($add1510);
 var $sub1512=($888)-($mul1511);
 var $fRec651513=(($this1+528056)|0);
 var $arrayidx1514=(($fRec651513)|0);
 HEAPF32[(($arrayidx1514)>>2)]=$sub1512;
 var $894=$fSlow30;
 var $fRec64=(($this1+528044)|0);
 var $arrayidx1515=(($fRec64+4)|0);
 var $895=HEAPF32[(($arrayidx1515)>>2)];
 var $mul1516=($894)*($895);
 $fTemp31=$mul1516;
 var $896=$fSlow16;
 var $897=$fSlow17;
 var $fRec651517=(($this1+528056)|0);
 var $arrayidx1518=(($fRec651517)|0);
 var $898=HEAPF32[(($arrayidx1518)>>2)];
 var $mul1519=($897)*($898);
 var $899=$fSlow24;
 var $fRec651520=(($this1+528056)|0);
 var $arrayidx1521=(($fRec651520+4)|0);
 var $900=HEAPF32[(($arrayidx1521)>>2)];
 var $mul1522=($899)*($900);
 var $add1523=($mul1519)+($mul1522);
 var $901=$fSlow17;
 var $fRec651524=(($this1+528056)|0);
 var $arrayidx1525=(($fRec651524+8)|0);
 var $902=HEAPF32[(($arrayidx1525)>>2)];
 var $mul1526=($901)*($902);
 var $add1527=($add1523)+($mul1526);
 var $mul1528=($896)*($add1527);
 var $903=$fSlow27;
 var $904=$fSlow28;
 var $fRec641529=(($this1+528044)|0);
 var $arrayidx1530=(($fRec641529+8)|0);
 var $905=HEAPF32[(($arrayidx1530)>>2)];
 var $mul1531=($904)*($905);
 var $906=$fTemp31;
 var $add1532=($mul1531)+($906);
 var $mul1533=($903)*($add1532);
 var $sub1534=($mul1528)-($mul1533);
 var $fRec641535=(($this1+528044)|0);
 var $arrayidx1536=(($fRec641535)|0);
 HEAPF32[(($arrayidx1536)>>2)]=$sub1534;
 var $907=$fSlow36;
 var $fRec63=(($this1+528032)|0);
 var $arrayidx1537=(($fRec63+4)|0);
 var $908=HEAPF32[(($arrayidx1537)>>2)];
 var $mul1538=($907)*($908);
 $fTemp32=$mul1538;
 var $fRec641539=(($this1+528044)|0);
 var $arrayidx1540=(($fRec641539+8)|0);
 var $909=HEAPF32[(($arrayidx1540)>>2)];
 var $910=$fSlow27;
 var $911=$fTemp31;
 var $912=$fSlow28;
 var $fRec641541=(($this1+528044)|0);
 var $arrayidx1542=(($fRec641541)|0);
 var $913=HEAPF32[(($arrayidx1542)>>2)];
 var $mul1543=($912)*($913);
 var $add1544=($911)+($mul1543);
 var $mul1545=($910)*($add1544);
 var $add1546=($909)+($mul1545);
 var $914=$fSlow33;
 var $915=$fSlow34;
 var $fRec631547=(($this1+528032)|0);
 var $arrayidx1548=(($fRec631547+8)|0);
 var $916=HEAPF32[(($arrayidx1548)>>2)];
 var $mul1549=($915)*($916);
 var $917=$fTemp32;
 var $add1550=($mul1549)+($917);
 var $mul1551=($914)*($add1550);
 var $sub1552=($add1546)-($mul1551);
 var $fRec631553=(($this1+528032)|0);
 var $arrayidx1554=(($fRec631553)|0);
 HEAPF32[(($arrayidx1554)>>2)]=$sub1552;
 var $918=$fSlow42;
 var $fRec62=(($this1+528020)|0);
 var $arrayidx1555=(($fRec62+4)|0);
 var $919=HEAPF32[(($arrayidx1555)>>2)];
 var $mul1556=($918)*($919);
 $fTemp33=$mul1556;
 var $fRec631557=(($this1+528032)|0);
 var $arrayidx1558=(($fRec631557+8)|0);
 var $920=HEAPF32[(($arrayidx1558)>>2)];
 var $921=$fSlow33;
 var $922=$fTemp32;
 var $923=$fSlow34;
 var $fRec631559=(($this1+528032)|0);
 var $arrayidx1560=(($fRec631559)|0);
 var $924=HEAPF32[(($arrayidx1560)>>2)];
 var $mul1561=($923)*($924);
 var $add1562=($922)+($mul1561);
 var $mul1563=($921)*($add1562);
 var $add1564=($920)+($mul1563);
 var $925=$fSlow39;
 var $926=$fSlow40;
 var $fRec621565=(($this1+528020)|0);
 var $arrayidx1566=(($fRec621565+8)|0);
 var $927=HEAPF32[(($arrayidx1566)>>2)];
 var $mul1567=($926)*($927);
 var $928=$fTemp33;
 var $add1568=($mul1567)+($928);
 var $mul1569=($925)*($add1568);
 var $sub1570=($add1564)-($mul1569);
 var $fRec621571=(($this1+528020)|0);
 var $arrayidx1572=(($fRec621571)|0);
 HEAPF32[(($arrayidx1572)>>2)]=$sub1570;
 var $929=$fSlow19;
 var $fRec72=(($this1+528012)|0);
 var $arrayidx1573=(($fRec72+4)|0);
 var $930=HEAPF32[(($arrayidx1573)>>2)];
 var $mul1574=($929)*($930);
 var $931=$fSlow20;
 var $fRec41575=(($this1+360584)|0);
 var $arrayidx1576=(($fRec41575+4)|0);
 var $932=HEAPF32[(($arrayidx1576)>>2)];
 var $fRec41577=(($this1+360584)|0);
 var $arrayidx1578=(($fRec41577+8)|0);
 var $933=HEAPF32[(($arrayidx1578)>>2)];
 var $add1579=($932)+($933);
 var $mul1580=($931)*($add1579);
 var $add1581=($mul1574)+($mul1580);
 var $fRec721582=(($this1+528012)|0);
 var $arrayidx1583=(($fRec721582)|0);
 HEAPF32[(($arrayidx1583)>>2)]=$add1581;
 var $fRec721584=(($this1+528012)|0);
 var $arrayidx1585=(($fRec721584)|0);
 var $934=HEAPF32[(($arrayidx1585)>>2)];
 var $935=$fSlow16;
 var $936=$fSlow22;
 var $fRec71=(($this1+528000)|0);
 var $arrayidx1586=(($fRec71+8)|0);
 var $937=HEAPF32[(($arrayidx1586)>>2)];
 var $mul1587=($936)*($937);
 var $938=$fSlow23;
 var $fRec711588=(($this1+528000)|0);
 var $arrayidx1589=(($fRec711588+4)|0);
 var $939=HEAPF32[(($arrayidx1589)>>2)];
 var $mul1590=($938)*($939);
 var $add1591=($mul1587)+($mul1590);
 var $mul1592=($935)*($add1591);
 var $sub1593=($934)-($mul1592);
 var $fRec711594=(($this1+528000)|0);
 var $arrayidx1595=(($fRec711594)|0);
 HEAPF32[(($arrayidx1595)>>2)]=$sub1593;
 var $fRec711596=(($this1+528000)|0);
 var $arrayidx1597=(($fRec711596+8)|0);
 var $940=HEAPF32[(($arrayidx1597)>>2)];
 var $fRec711598=(($this1+528000)|0);
 var $arrayidx1599=(($fRec711598)|0);
 var $941=HEAPF32[(($arrayidx1599)>>2)];
 var $fRec711600=(($this1+528000)|0);
 var $arrayidx1601=(($fRec711600+4)|0);
 var $942=HEAPF32[(($arrayidx1601)>>2)];
 var $mul1602=($942)*(2);
 var $add1603=($941)+($mul1602);
 var $add1604=($940)+($add1603);
 $fTemp34=$add1604;
 var $943=$fSlow16;
 var $944=$fTemp34;
 var $mul1605=($943)*($944);
 $fTemp35=$mul1605;
 var $945=$fTemp35;
 var $fVec8=(($this1+527992)|0);
 var $arrayidx1606=(($fVec8)|0);
 HEAPF32[(($arrayidx1606)>>2)]=$945;
 var $946=$fSlow48;
 var $fRec70=(($this1+527984)|0);
 var $arrayidx1607=(($fRec70+4)|0);
 var $947=HEAPF32[(($arrayidx1607)>>2)];
 var $mul1608=($946)*($947);
 var $948=$fSlow49;
 var $949=$fSlow51;
 var $fVec81609=(($this1+527992)|0);
 var $arrayidx1610=(($fVec81609+4)|0);
 var $950=HEAPF32[(($arrayidx1610)>>2)];
 var $mul1611=($949)*($950);
 var $951=$fSlow50;
 var $952=$fTemp34;
 var $mul1612=($951)*($952);
 var $add1613=($mul1611)+($mul1612);
 var $mul1614=($948)*($add1613);
 var $add1615=($mul1608)+($mul1614);
 var $fRec701616=(($this1+527984)|0);
 var $arrayidx1617=(($fRec701616)|0);
 HEAPF32[(($arrayidx1617)>>2)]=$add1615;
 var $fRec701618=(($this1+527984)|0);
 var $arrayidx1619=(($fRec701618)|0);
 var $953=HEAPF32[(($arrayidx1619)>>2)];
 var $954=$fSlow46;
 var $955=$fSlow52;
 var $fRec69=(($this1+527972)|0);
 var $arrayidx1620=(($fRec69+8)|0);
 var $956=HEAPF32[(($arrayidx1620)>>2)];
 var $mul1621=($955)*($956);
 var $957=$fSlow30;
 var $fRec691622=(($this1+527972)|0);
 var $arrayidx1623=(($fRec691622+4)|0);
 var $958=HEAPF32[(($arrayidx1623)>>2)];
 var $mul1624=($957)*($958);
 var $add1625=($mul1621)+($mul1624);
 var $mul1626=($954)*($add1625);
 var $sub1627=($953)-($mul1626);
 var $fRec691628=(($this1+527972)|0);
 var $arrayidx1629=(($fRec691628)|0);
 HEAPF32[(($arrayidx1629)>>2)]=$sub1627;
 var $959=$fSlow36;
 var $fRec68=(($this1+527960)|0);
 var $arrayidx1630=(($fRec68+4)|0);
 var $960=HEAPF32[(($arrayidx1630)>>2)];
 var $mul1631=($959)*($960);
 $fTemp36=$mul1631;
 var $961=$fSlow46;
 var $962=$fSlow29;
 var $fRec691632=(($this1+527972)|0);
 var $arrayidx1633=(($fRec691632)|0);
 var $963=HEAPF32[(($arrayidx1633)>>2)];
 var $mul1634=($962)*($963);
 var $964=$fSlow53;
 var $fRec691635=(($this1+527972)|0);
 var $arrayidx1636=(($fRec691635+4)|0);
 var $965=HEAPF32[(($arrayidx1636)>>2)];
 var $mul1637=($964)*($965);
 var $add1638=($mul1634)+($mul1637);
 var $966=$fSlow29;
 var $fRec691639=(($this1+527972)|0);
 var $arrayidx1640=(($fRec691639+8)|0);
 var $967=HEAPF32[(($arrayidx1640)>>2)];
 var $mul1641=($966)*($967);
 var $add1642=($add1638)+($mul1641);
 var $mul1643=($961)*($add1642);
 var $968=$fSlow33;
 var $969=$fSlow34;
 var $fRec681644=(($this1+527960)|0);
 var $arrayidx1645=(($fRec681644+8)|0);
 var $970=HEAPF32[(($arrayidx1645)>>2)];
 var $mul1646=($969)*($970);
 var $971=$fTemp36;
 var $add1647=($mul1646)+($971);
 var $mul1648=($968)*($add1647);
 var $sub1649=($mul1643)-($mul1648);
 var $fRec681650=(($this1+527960)|0);
 var $arrayidx1651=(($fRec681650)|0);
 HEAPF32[(($arrayidx1651)>>2)]=$sub1649;
 var $972=$fSlow42;
 var $fRec67=(($this1+527948)|0);
 var $arrayidx1652=(($fRec67+4)|0);
 var $973=HEAPF32[(($arrayidx1652)>>2)];
 var $mul1653=($972)*($973);
 $fTemp37=$mul1653;
 var $fRec681654=(($this1+527960)|0);
 var $arrayidx1655=(($fRec681654+8)|0);
 var $974=HEAPF32[(($arrayidx1655)>>2)];
 var $975=$fSlow33;
 var $976=$fTemp36;
 var $977=$fSlow34;
 var $fRec681656=(($this1+527960)|0);
 var $arrayidx1657=(($fRec681656)|0);
 var $978=HEAPF32[(($arrayidx1657)>>2)];
 var $mul1658=($977)*($978);
 var $add1659=($976)+($mul1658);
 var $mul1660=($975)*($add1659);
 var $add1661=($974)+($mul1660);
 var $979=$fSlow39;
 var $980=$fSlow40;
 var $fRec671662=(($this1+527948)|0);
 var $arrayidx1663=(($fRec671662+8)|0);
 var $981=HEAPF32[(($arrayidx1663)>>2)];
 var $mul1664=($980)*($981);
 var $982=$fTemp37;
 var $add1665=($mul1664)+($982);
 var $mul1666=($979)*($add1665);
 var $sub1667=($add1661)-($mul1666);
 var $fRec671668=(($this1+527948)|0);
 var $arrayidx1669=(($fRec671668)|0);
 HEAPF32[(($arrayidx1669)>>2)]=$sub1667;
 var $983=$fSlow48;
 var $fRec77=(($this1+527940)|0);
 var $arrayidx1670=(($fRec77+4)|0);
 var $984=HEAPF32[(($arrayidx1670)>>2)];
 var $mul1671=($983)*($984);
 var $985=$fSlow49;
 var $fVec81672=(($this1+527992)|0);
 var $arrayidx1673=(($fVec81672+4)|0);
 var $986=HEAPF32[(($arrayidx1673)>>2)];
 var $987=$fTemp35;
 var $add1674=($986)+($987);
 var $mul1675=($985)*($add1674);
 var $add1676=($mul1671)+($mul1675);
 var $fRec771677=(($this1+527940)|0);
 var $arrayidx1678=(($fRec771677)|0);
 HEAPF32[(($arrayidx1678)>>2)]=$add1676;
 var $fRec771679=(($this1+527940)|0);
 var $arrayidx1680=(($fRec771679)|0);
 var $988=HEAPF32[(($arrayidx1680)>>2)];
 var $989=$fSlow46;
 var $990=$fSlow52;
 var $fRec76=(($this1+527928)|0);
 var $arrayidx1681=(($fRec76+8)|0);
 var $991=HEAPF32[(($arrayidx1681)>>2)];
 var $mul1682=($990)*($991);
 var $992=$fSlow30;
 var $fRec761683=(($this1+527928)|0);
 var $arrayidx1684=(($fRec761683+4)|0);
 var $993=HEAPF32[(($arrayidx1684)>>2)];
 var $mul1685=($992)*($993);
 var $add1686=($mul1682)+($mul1685);
 var $mul1687=($989)*($add1686);
 var $sub1688=($988)-($mul1687);
 var $fRec761689=(($this1+527928)|0);
 var $arrayidx1690=(($fRec761689)|0);
 HEAPF32[(($arrayidx1690)>>2)]=$sub1688;
 var $fRec761691=(($this1+527928)|0);
 var $arrayidx1692=(($fRec761691+8)|0);
 var $994=HEAPF32[(($arrayidx1692)>>2)];
 var $fRec761693=(($this1+527928)|0);
 var $arrayidx1694=(($fRec761693)|0);
 var $995=HEAPF32[(($arrayidx1694)>>2)];
 var $fRec761695=(($this1+527928)|0);
 var $arrayidx1696=(($fRec761695+4)|0);
 var $996=HEAPF32[(($arrayidx1696)>>2)];
 var $mul1697=($996)*(2);
 var $add1698=($995)+($mul1697);
 var $add1699=($994)+($add1698);
 $fTemp38=$add1699;
 var $997=$fSlow46;
 var $998=$fTemp38;
 var $mul1700=($997)*($998);
 $fTemp39=$mul1700;
 var $999=$fTemp39;
 var $fVec9=(($this1+527920)|0);
 var $arrayidx1701=(($fVec9)|0);
 HEAPF32[(($arrayidx1701)>>2)]=$999;
 var $1000=$fSlow59;
 var $fRec75=(($this1+527912)|0);
 var $arrayidx1702=(($fRec75+4)|0);
 var $1001=HEAPF32[(($arrayidx1702)>>2)];
 var $mul1703=($1000)*($1001);
 var $1002=$fSlow60;
 var $1003=$fSlow62;
 var $fVec91704=(($this1+527920)|0);
 var $arrayidx1705=(($fVec91704+4)|0);
 var $1004=HEAPF32[(($arrayidx1705)>>2)];
 var $mul1706=($1003)*($1004);
 var $1005=$fSlow61;
 var $1006=$fTemp38;
 var $mul1707=($1005)*($1006);
 var $add1708=($mul1706)+($mul1707);
 var $mul1709=($1002)*($add1708);
 var $add1710=($mul1703)+($mul1709);
 var $fRec751711=(($this1+527912)|0);
 var $arrayidx1712=(($fRec751711)|0);
 HEAPF32[(($arrayidx1712)>>2)]=$add1710;
 var $fRec751713=(($this1+527912)|0);
 var $arrayidx1714=(($fRec751713)|0);
 var $1007=HEAPF32[(($arrayidx1714)>>2)];
 var $1008=$fSlow57;
 var $1009=$fSlow63;
 var $fRec74=(($this1+527900)|0);
 var $arrayidx1715=(($fRec74+8)|0);
 var $1010=HEAPF32[(($arrayidx1715)>>2)];
 var $mul1716=($1009)*($1010);
 var $1011=$fSlow36;
 var $fRec741717=(($this1+527900)|0);
 var $arrayidx1718=(($fRec741717+4)|0);
 var $1012=HEAPF32[(($arrayidx1718)>>2)];
 var $mul1719=($1011)*($1012);
 var $add1720=($mul1716)+($mul1719);
 var $mul1721=($1008)*($add1720);
 var $sub1722=($1007)-($mul1721);
 var $fRec741723=(($this1+527900)|0);
 var $arrayidx1724=(($fRec741723)|0);
 HEAPF32[(($arrayidx1724)>>2)]=$sub1722;
 var $1013=$fSlow42;
 var $fRec73=(($this1+527888)|0);
 var $arrayidx1725=(($fRec73+4)|0);
 var $1014=HEAPF32[(($arrayidx1725)>>2)];
 var $mul1726=($1013)*($1014);
 $fTemp40=$mul1726;
 var $1015=$fSlow57;
 var $1016=$fSlow35;
 var $fRec741727=(($this1+527900)|0);
 var $arrayidx1728=(($fRec741727)|0);
 var $1017=HEAPF32[(($arrayidx1728)>>2)];
 var $mul1729=($1016)*($1017);
 var $1018=$fSlow64;
 var $fRec741730=(($this1+527900)|0);
 var $arrayidx1731=(($fRec741730+4)|0);
 var $1019=HEAPF32[(($arrayidx1731)>>2)];
 var $mul1732=($1018)*($1019);
 var $add1733=($mul1729)+($mul1732);
 var $1020=$fSlow35;
 var $fRec741734=(($this1+527900)|0);
 var $arrayidx1735=(($fRec741734+8)|0);
 var $1021=HEAPF32[(($arrayidx1735)>>2)];
 var $mul1736=($1020)*($1021);
 var $add1737=($add1733)+($mul1736);
 var $mul1738=($1015)*($add1737);
 var $1022=$fSlow39;
 var $1023=$fSlow40;
 var $fRec731739=(($this1+527888)|0);
 var $arrayidx1740=(($fRec731739+8)|0);
 var $1024=HEAPF32[(($arrayidx1740)>>2)];
 var $mul1741=($1023)*($1024);
 var $1025=$fTemp40;
 var $add1742=($mul1741)+($1025);
 var $mul1743=($1022)*($add1742);
 var $sub1744=($mul1738)-($mul1743);
 var $fRec731745=(($this1+527888)|0);
 var $arrayidx1746=(($fRec731745)|0);
 HEAPF32[(($arrayidx1746)>>2)]=$sub1744;
 var $1026=$fSlow59;
 var $fRec81=(($this1+527880)|0);
 var $arrayidx1747=(($fRec81+4)|0);
 var $1027=HEAPF32[(($arrayidx1747)>>2)];
 var $mul1748=($1026)*($1027);
 var $1028=$fSlow60;
 var $fVec91749=(($this1+527920)|0);
 var $arrayidx1750=(($fVec91749+4)|0);
 var $1029=HEAPF32[(($arrayidx1750)>>2)];
 var $1030=$fTemp39;
 var $add1751=($1029)+($1030);
 var $mul1752=($1028)*($add1751);
 var $add1753=($mul1748)+($mul1752);
 var $fRec811754=(($this1+527880)|0);
 var $arrayidx1755=(($fRec811754)|0);
 HEAPF32[(($arrayidx1755)>>2)]=$add1753;
 var $fRec811756=(($this1+527880)|0);
 var $arrayidx1757=(($fRec811756)|0);
 var $1031=HEAPF32[(($arrayidx1757)>>2)];
 var $1032=$fSlow57;
 var $1033=$fSlow63;
 var $fRec80=(($this1+527868)|0);
 var $arrayidx1758=(($fRec80+8)|0);
 var $1034=HEAPF32[(($arrayidx1758)>>2)];
 var $mul1759=($1033)*($1034);
 var $1035=$fSlow36;
 var $fRec801760=(($this1+527868)|0);
 var $arrayidx1761=(($fRec801760+4)|0);
 var $1036=HEAPF32[(($arrayidx1761)>>2)];
 var $mul1762=($1035)*($1036);
 var $add1763=($mul1759)+($mul1762);
 var $mul1764=($1032)*($add1763);
 var $sub1765=($1031)-($mul1764);
 var $fRec801766=(($this1+527868)|0);
 var $arrayidx1767=(($fRec801766)|0);
 HEAPF32[(($arrayidx1767)>>2)]=$sub1765;
 var $fRec801768=(($this1+527868)|0);
 var $arrayidx1769=(($fRec801768+8)|0);
 var $1037=HEAPF32[(($arrayidx1769)>>2)];
 var $fRec801770=(($this1+527868)|0);
 var $arrayidx1771=(($fRec801770)|0);
 var $1038=HEAPF32[(($arrayidx1771)>>2)];
 var $fRec801772=(($this1+527868)|0);
 var $arrayidx1773=(($fRec801772+4)|0);
 var $1039=HEAPF32[(($arrayidx1773)>>2)];
 var $mul1774=($1039)*(2);
 var $add1775=($1038)+($mul1774);
 var $add1776=($1037)+($add1775);
 $fTemp41=$add1776;
 var $1040=$fSlow57;
 var $1041=$fTemp41;
 var $mul1777=($1040)*($1041);
 $fTemp42=$mul1777;
 var $1042=$fTemp42;
 var $fVec10=(($this1+527860)|0);
 var $arrayidx1778=(($fVec10)|0);
 HEAPF32[(($arrayidx1778)>>2)]=$1042;
 var $1043=$fSlow69;
 var $fRec79=(($this1+527852)|0);
 var $arrayidx1779=(($fRec79+4)|0);
 var $1044=HEAPF32[(($arrayidx1779)>>2)];
 var $mul1780=($1043)*($1044);
 var $1045=$fSlow70;
 var $fVec101781=(($this1+527860)|0);
 var $arrayidx1782=(($fVec101781+4)|0);
 var $1046=HEAPF32[(($arrayidx1782)>>2)];
 var $1047=$fTemp42;
 var $add1783=($1046)+($1047);
 var $mul1784=($1045)*($add1783);
 var $add1785=($mul1780)+($mul1784);
 var $fRec791786=(($this1+527852)|0);
 var $arrayidx1787=(($fRec791786)|0);
 HEAPF32[(($arrayidx1787)>>2)]=$add1785;
 var $fRec791788=(($this1+527852)|0);
 var $arrayidx1789=(($fRec791788)|0);
 var $1048=HEAPF32[(($arrayidx1789)>>2)];
 var $1049=$fSlow65;
 var $1050=$fSlow71;
 var $fRec78=(($this1+527840)|0);
 var $arrayidx1790=(($fRec78+8)|0);
 var $1051=HEAPF32[(($arrayidx1790)>>2)];
 var $mul1791=($1050)*($1051);
 var $1052=$fSlow42;
 var $fRec781792=(($this1+527840)|0);
 var $arrayidx1793=(($fRec781792+4)|0);
 var $1053=HEAPF32[(($arrayidx1793)>>2)];
 var $mul1794=($1052)*($1053);
 var $add1795=($mul1791)+($mul1794);
 var $mul1796=($1049)*($add1795);
 var $sub1797=($1048)-($mul1796);
 var $fRec781798=(($this1+527840)|0);
 var $arrayidx1799=(($fRec781798)|0);
 HEAPF32[(($arrayidx1799)>>2)]=$sub1797;
 var $1054=$fSlow69;
 var $fRec83=(($this1+527832)|0);
 var $arrayidx1800=(($fRec83+4)|0);
 var $1055=HEAPF32[(($arrayidx1800)>>2)];
 var $mul1801=($1054)*($1055);
 var $1056=$fSlow70;
 var $1057=$fSlow75;
 var $fVec101802=(($this1+527860)|0);
 var $arrayidx1803=(($fVec101802+4)|0);
 var $1058=HEAPF32[(($arrayidx1803)>>2)];
 var $mul1804=($1057)*($1058);
 var $1059=$fSlow74;
 var $1060=$fTemp41;
 var $mul1805=($1059)*($1060);
 var $add1806=($mul1804)+($mul1805);
 var $mul1807=($1056)*($add1806);
 var $add1808=($mul1801)+($mul1807);
 var $fRec831809=(($this1+527832)|0);
 var $arrayidx1810=(($fRec831809)|0);
 HEAPF32[(($arrayidx1810)>>2)]=$add1808;
 var $fRec831811=(($this1+527832)|0);
 var $arrayidx1812=(($fRec831811)|0);
 var $1061=HEAPF32[(($arrayidx1812)>>2)];
 var $1062=$fSlow65;
 var $1063=$fSlow71;
 var $fRec82=(($this1+527820)|0);
 var $arrayidx1813=(($fRec82+8)|0);
 var $1064=HEAPF32[(($arrayidx1813)>>2)];
 var $mul1814=($1063)*($1064);
 var $1065=$fSlow42;
 var $fRec821815=(($this1+527820)|0);
 var $arrayidx1816=(($fRec821815+4)|0);
 var $1066=HEAPF32[(($arrayidx1816)>>2)];
 var $mul1817=($1065)*($1066);
 var $add1818=($mul1814)+($mul1817);
 var $mul1819=($1062)*($add1818);
 var $sub1820=($1061)-($mul1819);
 var $fRec821821=(($this1+527820)|0);
 var $arrayidx1822=(($fRec821821)|0);
 HEAPF32[(($arrayidx1822)>>2)]=$sub1820;
 var $1067=$fSlow86;
 var $fRec621823=(($this1+528020)|0);
 var $arrayidx1824=(($fRec621823+8)|0);
 var $1068=HEAPF32[(($arrayidx1824)>>2)];
 var $1069=$fSlow39;
 var $1070=$fTemp33;
 var $1071=$fSlow40;
 var $fRec621825=(($this1+528020)|0);
 var $arrayidx1826=(($fRec621825)|0);
 var $1072=HEAPF32[(($arrayidx1826)>>2)];
 var $mul1827=($1071)*($1072);
 var $add1828=($1070)+($mul1827);
 var $mul1829=($1069)*($add1828);
 var $add1830=($1068)+($mul1829);
 var $mul1831=($1067)*($add1830);
 var $1073=$fSlow87;
 var $fRec671832=(($this1+527948)|0);
 var $arrayidx1833=(($fRec671832+8)|0);
 var $1074=HEAPF32[(($arrayidx1833)>>2)];
 var $1075=$fSlow39;
 var $1076=$fTemp37;
 var $1077=$fSlow40;
 var $fRec671834=(($this1+527948)|0);
 var $arrayidx1835=(($fRec671834)|0);
 var $1078=HEAPF32[(($arrayidx1835)>>2)];
 var $mul1836=($1077)*($1078);
 var $add1837=($1076)+($mul1836);
 var $mul1838=($1075)*($add1837);
 var $add1839=($1074)+($mul1838);
 var $mul1840=($1073)*($add1839);
 var $add1841=($mul1831)+($mul1840);
 var $1079=$fSlow88;
 var $fRec731842=(($this1+527888)|0);
 var $arrayidx1843=(($fRec731842+8)|0);
 var $1080=HEAPF32[(($arrayidx1843)>>2)];
 var $1081=$fSlow39;
 var $1082=$fTemp40;
 var $1083=$fSlow40;
 var $fRec731844=(($this1+527888)|0);
 var $arrayidx1845=(($fRec731844)|0);
 var $1084=HEAPF32[(($arrayidx1845)>>2)];
 var $mul1846=($1083)*($1084);
 var $add1847=($1082)+($mul1846);
 var $mul1848=($1081)*($add1847);
 var $add1849=($1080)+($mul1848);
 var $mul1850=($1079)*($add1849);
 var $add1851=($add1841)+($mul1850);
 var $1085=$fSlow65;
 var $1086=$fSlow89;
 var $fRec781852=(($this1+527840)|0);
 var $arrayidx1853=(($fRec781852+8)|0);
 var $1087=HEAPF32[(($arrayidx1853)>>2)];
 var $fRec781854=(($this1+527840)|0);
 var $arrayidx1855=(($fRec781854)|0);
 var $1088=HEAPF32[(($arrayidx1855)>>2)];
 var $fRec781856=(($this1+527840)|0);
 var $arrayidx1857=(($fRec781856+4)|0);
 var $1089=HEAPF32[(($arrayidx1857)>>2)];
 var $mul1858=($1089)*(2);
 var $add1859=($1088)+($mul1858);
 var $add1860=($1087)+($add1859);
 var $mul1861=($1086)*($add1860);
 var $1090=$fSlow90;
 var $1091=$fSlow41;
 var $fRec821862=(($this1+527820)|0);
 var $arrayidx1863=(($fRec821862)|0);
 var $1092=HEAPF32[(($arrayidx1863)>>2)];
 var $mul1864=($1091)*($1092);
 var $1093=$fSlow76;
 var $fRec821865=(($this1+527820)|0);
 var $arrayidx1866=(($fRec821865+4)|0);
 var $1094=HEAPF32[(($arrayidx1866)>>2)];
 var $mul1867=($1093)*($1094);
 var $add1868=($mul1864)+($mul1867);
 var $1095=$fSlow41;
 var $fRec821869=(($this1+527820)|0);
 var $arrayidx1870=(($fRec821869+8)|0);
 var $1096=HEAPF32[(($arrayidx1870)>>2)];
 var $mul1871=($1095)*($1096);
 var $add1872=($add1868)+($mul1871);
 var $mul1873=($1090)*($add1872);
 var $add1874=($mul1861)+($mul1873);
 var $mul1875=($1085)*($add1874);
 var $add1876=($add1851)+($mul1875);
 $fTemp43=$add1876;
 var $1097=$fSlow19;
 var $fRec88=(($this1+527812)|0);
 var $arrayidx1877=(($fRec88+4)|0);
 var $1098=HEAPF32[(($arrayidx1877)>>2)];
 var $mul1878=($1097)*($1098);
 var $1099=$fSlow20;
 var $1100=$fSlow14;
 var $fRec12=(($this1+98344)|0);
 var $arrayidx1879=(($fRec12+4)|0);
 var $1101=HEAPF32[(($arrayidx1879)>>2)];
 var $mul1880=($1100)*($1101);
 var $1102=$fSlow21;
 var $fRec121881=(($this1+98344)|0);
 var $arrayidx1882=(($fRec121881+8)|0);
 var $1103=HEAPF32[(($arrayidx1882)>>2)];
 var $mul1883=($1102)*($1103);
 var $add1884=($mul1880)+($mul1883);
 var $mul1885=($1099)*($add1884);
 var $add1886=($mul1878)+($mul1885);
 var $fRec881887=(($this1+527812)|0);
 var $arrayidx1888=(($fRec881887)|0);
 HEAPF32[(($arrayidx1888)>>2)]=$add1886;
 var $fRec881889=(($this1+527812)|0);
 var $arrayidx1890=(($fRec881889)|0);
 var $1104=HEAPF32[(($arrayidx1890)>>2)];
 var $1105=$fSlow16;
 var $1106=$fSlow22;
 var $fRec87=(($this1+527800)|0);
 var $arrayidx1891=(($fRec87+8)|0);
 var $1107=HEAPF32[(($arrayidx1891)>>2)];
 var $mul1892=($1106)*($1107);
 var $1108=$fSlow23;
 var $fRec871893=(($this1+527800)|0);
 var $arrayidx1894=(($fRec871893+4)|0);
 var $1109=HEAPF32[(($arrayidx1894)>>2)];
 var $mul1895=($1108)*($1109);
 var $add1896=($mul1892)+($mul1895);
 var $mul1897=($1105)*($add1896);
 var $sub1898=($1104)-($mul1897);
 var $fRec871899=(($this1+527800)|0);
 var $arrayidx1900=(($fRec871899)|0);
 HEAPF32[(($arrayidx1900)>>2)]=$sub1898;
 var $1110=$fSlow30;
 var $fRec86=(($this1+527788)|0);
 var $arrayidx1901=(($fRec86+4)|0);
 var $1111=HEAPF32[(($arrayidx1901)>>2)];
 var $mul1902=($1110)*($1111);
 $fTemp44=$mul1902;
 var $1112=$fSlow16;
 var $1113=$fSlow17;
 var $fRec871903=(($this1+527800)|0);
 var $arrayidx1904=(($fRec871903)|0);
 var $1114=HEAPF32[(($arrayidx1904)>>2)];
 var $mul1905=($1113)*($1114);
 var $1115=$fSlow24;
 var $fRec871906=(($this1+527800)|0);
 var $arrayidx1907=(($fRec871906+4)|0);
 var $1116=HEAPF32[(($arrayidx1907)>>2)];
 var $mul1908=($1115)*($1116);
 var $add1909=($mul1905)+($mul1908);
 var $1117=$fSlow17;
 var $fRec871910=(($this1+527800)|0);
 var $arrayidx1911=(($fRec871910+8)|0);
 var $1118=HEAPF32[(($arrayidx1911)>>2)];
 var $mul1912=($1117)*($1118);
 var $add1913=($add1909)+($mul1912);
 var $mul1914=($1112)*($add1913);
 var $1119=$fSlow27;
 var $1120=$fSlow28;
 var $fRec861915=(($this1+527788)|0);
 var $arrayidx1916=(($fRec861915+8)|0);
 var $1121=HEAPF32[(($arrayidx1916)>>2)];
 var $mul1917=($1120)*($1121);
 var $1122=$fTemp44;
 var $add1918=($mul1917)+($1122);
 var $mul1919=($1119)*($add1918);
 var $sub1920=($mul1914)-($mul1919);
 var $fRec861921=(($this1+527788)|0);
 var $arrayidx1922=(($fRec861921)|0);
 HEAPF32[(($arrayidx1922)>>2)]=$sub1920;
 var $1123=$fSlow36;
 var $fRec85=(($this1+527776)|0);
 var $arrayidx1923=(($fRec85+4)|0);
 var $1124=HEAPF32[(($arrayidx1923)>>2)];
 var $mul1924=($1123)*($1124);
 $fTemp45=$mul1924;
 var $fRec861925=(($this1+527788)|0);
 var $arrayidx1926=(($fRec861925+8)|0);
 var $1125=HEAPF32[(($arrayidx1926)>>2)];
 var $1126=$fSlow27;
 var $1127=$fTemp44;
 var $1128=$fSlow28;
 var $fRec861927=(($this1+527788)|0);
 var $arrayidx1928=(($fRec861927)|0);
 var $1129=HEAPF32[(($arrayidx1928)>>2)];
 var $mul1929=($1128)*($1129);
 var $add1930=($1127)+($mul1929);
 var $mul1931=($1126)*($add1930);
 var $add1932=($1125)+($mul1931);
 var $1130=$fSlow33;
 var $1131=$fSlow34;
 var $fRec851933=(($this1+527776)|0);
 var $arrayidx1934=(($fRec851933+8)|0);
 var $1132=HEAPF32[(($arrayidx1934)>>2)];
 var $mul1935=($1131)*($1132);
 var $1133=$fTemp45;
 var $add1936=($mul1935)+($1133);
 var $mul1937=($1130)*($add1936);
 var $sub1938=($add1932)-($mul1937);
 var $fRec851939=(($this1+527776)|0);
 var $arrayidx1940=(($fRec851939)|0);
 HEAPF32[(($arrayidx1940)>>2)]=$sub1938;
 var $1134=$fSlow42;
 var $fRec84=(($this1+527764)|0);
 var $arrayidx1941=(($fRec84+4)|0);
 var $1135=HEAPF32[(($arrayidx1941)>>2)];
 var $mul1942=($1134)*($1135);
 $fTemp46=$mul1942;
 var $fRec851943=(($this1+527776)|0);
 var $arrayidx1944=(($fRec851943+8)|0);
 var $1136=HEAPF32[(($arrayidx1944)>>2)];
 var $1137=$fSlow33;
 var $1138=$fTemp45;
 var $1139=$fSlow34;
 var $fRec851945=(($this1+527776)|0);
 var $arrayidx1946=(($fRec851945)|0);
 var $1140=HEAPF32[(($arrayidx1946)>>2)];
 var $mul1947=($1139)*($1140);
 var $add1948=($1138)+($mul1947);
 var $mul1949=($1137)*($add1948);
 var $add1950=($1136)+($mul1949);
 var $1141=$fSlow39;
 var $1142=$fSlow40;
 var $fRec841951=(($this1+527764)|0);
 var $arrayidx1952=(($fRec841951+8)|0);
 var $1143=HEAPF32[(($arrayidx1952)>>2)];
 var $mul1953=($1142)*($1143);
 var $1144=$fTemp46;
 var $add1954=($mul1953)+($1144);
 var $mul1955=($1141)*($add1954);
 var $sub1956=($add1950)-($mul1955);
 var $fRec841957=(($this1+527764)|0);
 var $arrayidx1958=(($fRec841957)|0);
 HEAPF32[(($arrayidx1958)>>2)]=$sub1956;
 var $1145=$fSlow19;
 var $fRec94=(($this1+527756)|0);
 var $arrayidx1959=(($fRec94+4)|0);
 var $1146=HEAPF32[(($arrayidx1959)>>2)];
 var $mul1960=($1145)*($1146);
 var $1147=$fSlow20;
 var $fRec121961=(($this1+98344)|0);
 var $arrayidx1962=(($fRec121961+4)|0);
 var $1148=HEAPF32[(($arrayidx1962)>>2)];
 var $fRec121963=(($this1+98344)|0);
 var $arrayidx1964=(($fRec121963+8)|0);
 var $1149=HEAPF32[(($arrayidx1964)>>2)];
 var $add1965=($1148)+($1149);
 var $mul1966=($1147)*($add1965);
 var $add1967=($mul1960)+($mul1966);
 var $fRec941968=(($this1+527756)|0);
 var $arrayidx1969=(($fRec941968)|0);
 HEAPF32[(($arrayidx1969)>>2)]=$add1967;
 var $fRec941970=(($this1+527756)|0);
 var $arrayidx1971=(($fRec941970)|0);
 var $1150=HEAPF32[(($arrayidx1971)>>2)];
 var $1151=$fSlow16;
 var $1152=$fSlow22;
 var $fRec93=(($this1+527744)|0);
 var $arrayidx1972=(($fRec93+8)|0);
 var $1153=HEAPF32[(($arrayidx1972)>>2)];
 var $mul1973=($1152)*($1153);
 var $1154=$fSlow23;
 var $fRec931974=(($this1+527744)|0);
 var $arrayidx1975=(($fRec931974+4)|0);
 var $1155=HEAPF32[(($arrayidx1975)>>2)];
 var $mul1976=($1154)*($1155);
 var $add1977=($mul1973)+($mul1976);
 var $mul1978=($1151)*($add1977);
 var $sub1979=($1150)-($mul1978);
 var $fRec931980=(($this1+527744)|0);
 var $arrayidx1981=(($fRec931980)|0);
 HEAPF32[(($arrayidx1981)>>2)]=$sub1979;
 var $fRec931982=(($this1+527744)|0);
 var $arrayidx1983=(($fRec931982+8)|0);
 var $1156=HEAPF32[(($arrayidx1983)>>2)];
 var $fRec931984=(($this1+527744)|0);
 var $arrayidx1985=(($fRec931984)|0);
 var $1157=HEAPF32[(($arrayidx1985)>>2)];
 var $fRec931986=(($this1+527744)|0);
 var $arrayidx1987=(($fRec931986+4)|0);
 var $1158=HEAPF32[(($arrayidx1987)>>2)];
 var $mul1988=($1158)*(2);
 var $add1989=($1157)+($mul1988);
 var $add1990=($1156)+($add1989);
 $fTemp47=$add1990;
 var $1159=$fSlow16;
 var $1160=$fTemp47;
 var $mul1991=($1159)*($1160);
 $fTemp48=$mul1991;
 var $1161=$fTemp48;
 var $fVec11=(($this1+527736)|0);
 var $arrayidx1992=(($fVec11)|0);
 HEAPF32[(($arrayidx1992)>>2)]=$1161;
 var $1162=$fSlow48;
 var $fRec92=(($this1+527728)|0);
 var $arrayidx1993=(($fRec92+4)|0);
 var $1163=HEAPF32[(($arrayidx1993)>>2)];
 var $mul1994=($1162)*($1163);
 var $1164=$fSlow49;
 var $1165=$fSlow51;
 var $fVec111995=(($this1+527736)|0);
 var $arrayidx1996=(($fVec111995+4)|0);
 var $1166=HEAPF32[(($arrayidx1996)>>2)];
 var $mul1997=($1165)*($1166);
 var $1167=$fSlow50;
 var $1168=$fTemp47;
 var $mul1998=($1167)*($1168);
 var $add1999=($mul1997)+($mul1998);
 var $mul2000=($1164)*($add1999);
 var $add2001=($mul1994)+($mul2000);
 var $fRec922002=(($this1+527728)|0);
 var $arrayidx2003=(($fRec922002)|0);
 HEAPF32[(($arrayidx2003)>>2)]=$add2001;
 var $fRec922004=(($this1+527728)|0);
 var $arrayidx2005=(($fRec922004)|0);
 var $1169=HEAPF32[(($arrayidx2005)>>2)];
 var $1170=$fSlow46;
 var $1171=$fSlow52;
 var $fRec91=(($this1+527716)|0);
 var $arrayidx2006=(($fRec91+8)|0);
 var $1172=HEAPF32[(($arrayidx2006)>>2)];
 var $mul2007=($1171)*($1172);
 var $1173=$fSlow30;
 var $fRec912008=(($this1+527716)|0);
 var $arrayidx2009=(($fRec912008+4)|0);
 var $1174=HEAPF32[(($arrayidx2009)>>2)];
 var $mul2010=($1173)*($1174);
 var $add2011=($mul2007)+($mul2010);
 var $mul2012=($1170)*($add2011);
 var $sub2013=($1169)-($mul2012);
 var $fRec912014=(($this1+527716)|0);
 var $arrayidx2015=(($fRec912014)|0);
 HEAPF32[(($arrayidx2015)>>2)]=$sub2013;
 var $1175=$fSlow36;
 var $fRec90=(($this1+527704)|0);
 var $arrayidx2016=(($fRec90+4)|0);
 var $1176=HEAPF32[(($arrayidx2016)>>2)];
 var $mul2017=($1175)*($1176);
 $fTemp49=$mul2017;
 var $1177=$fSlow46;
 var $1178=$fSlow29;
 var $fRec912018=(($this1+527716)|0);
 var $arrayidx2019=(($fRec912018)|0);
 var $1179=HEAPF32[(($arrayidx2019)>>2)];
 var $mul2020=($1178)*($1179);
 var $1180=$fSlow53;
 var $fRec912021=(($this1+527716)|0);
 var $arrayidx2022=(($fRec912021+4)|0);
 var $1181=HEAPF32[(($arrayidx2022)>>2)];
 var $mul2023=($1180)*($1181);
 var $add2024=($mul2020)+($mul2023);
 var $1182=$fSlow29;
 var $fRec912025=(($this1+527716)|0);
 var $arrayidx2026=(($fRec912025+8)|0);
 var $1183=HEAPF32[(($arrayidx2026)>>2)];
 var $mul2027=($1182)*($1183);
 var $add2028=($add2024)+($mul2027);
 var $mul2029=($1177)*($add2028);
 var $1184=$fSlow33;
 var $1185=$fSlow34;
 var $fRec902030=(($this1+527704)|0);
 var $arrayidx2031=(($fRec902030+8)|0);
 var $1186=HEAPF32[(($arrayidx2031)>>2)];
 var $mul2032=($1185)*($1186);
 var $1187=$fTemp49;
 var $add2033=($mul2032)+($1187);
 var $mul2034=($1184)*($add2033);
 var $sub2035=($mul2029)-($mul2034);
 var $fRec902036=(($this1+527704)|0);
 var $arrayidx2037=(($fRec902036)|0);
 HEAPF32[(($arrayidx2037)>>2)]=$sub2035;
 var $1188=$fSlow42;
 var $fRec89=(($this1+527692)|0);
 var $arrayidx2038=(($fRec89+4)|0);
 var $1189=HEAPF32[(($arrayidx2038)>>2)];
 var $mul2039=($1188)*($1189);
 $fTemp50=$mul2039;
 var $fRec902040=(($this1+527704)|0);
 var $arrayidx2041=(($fRec902040+8)|0);
 var $1190=HEAPF32[(($arrayidx2041)>>2)];
 var $1191=$fSlow33;
 var $1192=$fTemp49;
 var $1193=$fSlow34;
 var $fRec902042=(($this1+527704)|0);
 var $arrayidx2043=(($fRec902042)|0);
 var $1194=HEAPF32[(($arrayidx2043)>>2)];
 var $mul2044=($1193)*($1194);
 var $add2045=($1192)+($mul2044);
 var $mul2046=($1191)*($add2045);
 var $add2047=($1190)+($mul2046);
 var $1195=$fSlow39;
 var $1196=$fSlow40;
 var $fRec892048=(($this1+527692)|0);
 var $arrayidx2049=(($fRec892048+8)|0);
 var $1197=HEAPF32[(($arrayidx2049)>>2)];
 var $mul2050=($1196)*($1197);
 var $1198=$fTemp50;
 var $add2051=($mul2050)+($1198);
 var $mul2052=($1195)*($add2051);
 var $sub2053=($add2047)-($mul2052);
 var $fRec892054=(($this1+527692)|0);
 var $arrayidx2055=(($fRec892054)|0);
 HEAPF32[(($arrayidx2055)>>2)]=$sub2053;
 var $1199=$fSlow48;
 var $fRec99=(($this1+527684)|0);
 var $arrayidx2056=(($fRec99+4)|0);
 var $1200=HEAPF32[(($arrayidx2056)>>2)];
 var $mul2057=($1199)*($1200);
 var $1201=$fSlow49;
 var $fVec112058=(($this1+527736)|0);
 var $arrayidx2059=(($fVec112058+4)|0);
 var $1202=HEAPF32[(($arrayidx2059)>>2)];
 var $1203=$fTemp48;
 var $add2060=($1202)+($1203);
 var $mul2061=($1201)*($add2060);
 var $add2062=($mul2057)+($mul2061);
 var $fRec992063=(($this1+527684)|0);
 var $arrayidx2064=(($fRec992063)|0);
 HEAPF32[(($arrayidx2064)>>2)]=$add2062;
 var $fRec992065=(($this1+527684)|0);
 var $arrayidx2066=(($fRec992065)|0);
 var $1204=HEAPF32[(($arrayidx2066)>>2)];
 var $1205=$fSlow46;
 var $1206=$fSlow52;
 var $fRec98=(($this1+527672)|0);
 var $arrayidx2067=(($fRec98+8)|0);
 var $1207=HEAPF32[(($arrayidx2067)>>2)];
 var $mul2068=($1206)*($1207);
 var $1208=$fSlow30;
 var $fRec982069=(($this1+527672)|0);
 var $arrayidx2070=(($fRec982069+4)|0);
 var $1209=HEAPF32[(($arrayidx2070)>>2)];
 var $mul2071=($1208)*($1209);
 var $add2072=($mul2068)+($mul2071);
 var $mul2073=($1205)*($add2072);
 var $sub2074=($1204)-($mul2073);
 var $fRec982075=(($this1+527672)|0);
 var $arrayidx2076=(($fRec982075)|0);
 HEAPF32[(($arrayidx2076)>>2)]=$sub2074;
 var $fRec982077=(($this1+527672)|0);
 var $arrayidx2078=(($fRec982077+8)|0);
 var $1210=HEAPF32[(($arrayidx2078)>>2)];
 var $fRec982079=(($this1+527672)|0);
 var $arrayidx2080=(($fRec982079)|0);
 var $1211=HEAPF32[(($arrayidx2080)>>2)];
 var $fRec982081=(($this1+527672)|0);
 var $arrayidx2082=(($fRec982081+4)|0);
 var $1212=HEAPF32[(($arrayidx2082)>>2)];
 var $mul2083=($1212)*(2);
 var $add2084=($1211)+($mul2083);
 var $add2085=($1210)+($add2084);
 $fTemp51=$add2085;
 var $1213=$fSlow46;
 var $1214=$fTemp51;
 var $mul2086=($1213)*($1214);
 $fTemp52=$mul2086;
 var $1215=$fTemp52;
 var $fVec12=(($this1+527664)|0);
 var $arrayidx2087=(($fVec12)|0);
 HEAPF32[(($arrayidx2087)>>2)]=$1215;
 var $1216=$fSlow59;
 var $fRec97=(($this1+527656)|0);
 var $arrayidx2088=(($fRec97+4)|0);
 var $1217=HEAPF32[(($arrayidx2088)>>2)];
 var $mul2089=($1216)*($1217);
 var $1218=$fSlow60;
 var $1219=$fSlow62;
 var $fVec122090=(($this1+527664)|0);
 var $arrayidx2091=(($fVec122090+4)|0);
 var $1220=HEAPF32[(($arrayidx2091)>>2)];
 var $mul2092=($1219)*($1220);
 var $1221=$fSlow61;
 var $1222=$fTemp51;
 var $mul2093=($1221)*($1222);
 var $add2094=($mul2092)+($mul2093);
 var $mul2095=($1218)*($add2094);
 var $add2096=($mul2089)+($mul2095);
 var $fRec972097=(($this1+527656)|0);
 var $arrayidx2098=(($fRec972097)|0);
 HEAPF32[(($arrayidx2098)>>2)]=$add2096;
 var $fRec972099=(($this1+527656)|0);
 var $arrayidx2100=(($fRec972099)|0);
 var $1223=HEAPF32[(($arrayidx2100)>>2)];
 var $1224=$fSlow57;
 var $1225=$fSlow63;
 var $fRec96=(($this1+527644)|0);
 var $arrayidx2101=(($fRec96+8)|0);
 var $1226=HEAPF32[(($arrayidx2101)>>2)];
 var $mul2102=($1225)*($1226);
 var $1227=$fSlow36;
 var $fRec962103=(($this1+527644)|0);
 var $arrayidx2104=(($fRec962103+4)|0);
 var $1228=HEAPF32[(($arrayidx2104)>>2)];
 var $mul2105=($1227)*($1228);
 var $add2106=($mul2102)+($mul2105);
 var $mul2107=($1224)*($add2106);
 var $sub2108=($1223)-($mul2107);
 var $fRec962109=(($this1+527644)|0);
 var $arrayidx2110=(($fRec962109)|0);
 HEAPF32[(($arrayidx2110)>>2)]=$sub2108;
 var $1229=$fSlow42;
 var $fRec95=(($this1+527632)|0);
 var $arrayidx2111=(($fRec95+4)|0);
 var $1230=HEAPF32[(($arrayidx2111)>>2)];
 var $mul2112=($1229)*($1230);
 $fTemp53=$mul2112;
 var $1231=$fSlow57;
 var $1232=$fSlow35;
 var $fRec962113=(($this1+527644)|0);
 var $arrayidx2114=(($fRec962113)|0);
 var $1233=HEAPF32[(($arrayidx2114)>>2)];
 var $mul2115=($1232)*($1233);
 var $1234=$fSlow64;
 var $fRec962116=(($this1+527644)|0);
 var $arrayidx2117=(($fRec962116+4)|0);
 var $1235=HEAPF32[(($arrayidx2117)>>2)];
 var $mul2118=($1234)*($1235);
 var $add2119=($mul2115)+($mul2118);
 var $1236=$fSlow35;
 var $fRec962120=(($this1+527644)|0);
 var $arrayidx2121=(($fRec962120+8)|0);
 var $1237=HEAPF32[(($arrayidx2121)>>2)];
 var $mul2122=($1236)*($1237);
 var $add2123=($add2119)+($mul2122);
 var $mul2124=($1231)*($add2123);
 var $1238=$fSlow39;
 var $1239=$fSlow40;
 var $fRec952125=(($this1+527632)|0);
 var $arrayidx2126=(($fRec952125+8)|0);
 var $1240=HEAPF32[(($arrayidx2126)>>2)];
 var $mul2127=($1239)*($1240);
 var $1241=$fTemp53;
 var $add2128=($mul2127)+($1241);
 var $mul2129=($1238)*($add2128);
 var $sub2130=($mul2124)-($mul2129);
 var $fRec952131=(($this1+527632)|0);
 var $arrayidx2132=(($fRec952131)|0);
 HEAPF32[(($arrayidx2132)>>2)]=$sub2130;
 var $1242=$fSlow59;
 var $fRec103=(($this1+527624)|0);
 var $arrayidx2133=(($fRec103+4)|0);
 var $1243=HEAPF32[(($arrayidx2133)>>2)];
 var $mul2134=($1242)*($1243);
 var $1244=$fSlow60;
 var $fVec122135=(($this1+527664)|0);
 var $arrayidx2136=(($fVec122135+4)|0);
 var $1245=HEAPF32[(($arrayidx2136)>>2)];
 var $1246=$fTemp52;
 var $add2137=($1245)+($1246);
 var $mul2138=($1244)*($add2137);
 var $add2139=($mul2134)+($mul2138);
 var $fRec1032140=(($this1+527624)|0);
 var $arrayidx2141=(($fRec1032140)|0);
 HEAPF32[(($arrayidx2141)>>2)]=$add2139;
 var $fRec1032142=(($this1+527624)|0);
 var $arrayidx2143=(($fRec1032142)|0);
 var $1247=HEAPF32[(($arrayidx2143)>>2)];
 var $1248=$fSlow57;
 var $1249=$fSlow63;
 var $fRec102=(($this1+527612)|0);
 var $arrayidx2144=(($fRec102+8)|0);
 var $1250=HEAPF32[(($arrayidx2144)>>2)];
 var $mul2145=($1249)*($1250);
 var $1251=$fSlow36;
 var $fRec1022146=(($this1+527612)|0);
 var $arrayidx2147=(($fRec1022146+4)|0);
 var $1252=HEAPF32[(($arrayidx2147)>>2)];
 var $mul2148=($1251)*($1252);
 var $add2149=($mul2145)+($mul2148);
 var $mul2150=($1248)*($add2149);
 var $sub2151=($1247)-($mul2150);
 var $fRec1022152=(($this1+527612)|0);
 var $arrayidx2153=(($fRec1022152)|0);
 HEAPF32[(($arrayidx2153)>>2)]=$sub2151;
 var $fRec1022154=(($this1+527612)|0);
 var $arrayidx2155=(($fRec1022154+8)|0);
 var $1253=HEAPF32[(($arrayidx2155)>>2)];
 var $fRec1022156=(($this1+527612)|0);
 var $arrayidx2157=(($fRec1022156)|0);
 var $1254=HEAPF32[(($arrayidx2157)>>2)];
 var $fRec1022158=(($this1+527612)|0);
 var $arrayidx2159=(($fRec1022158+4)|0);
 var $1255=HEAPF32[(($arrayidx2159)>>2)];
 var $mul2160=($1255)*(2);
 var $add2161=($1254)+($mul2160);
 var $add2162=($1253)+($add2161);
 $fTemp54=$add2162;
 var $1256=$fSlow57;
 var $1257=$fTemp54;
 var $mul2163=($1256)*($1257);
 $fTemp55=$mul2163;
 var $1258=$fTemp55;
 var $fVec13=(($this1+527604)|0);
 var $arrayidx2164=(($fVec13)|0);
 HEAPF32[(($arrayidx2164)>>2)]=$1258;
 var $1259=$fSlow69;
 var $fRec101=(($this1+527596)|0);
 var $arrayidx2165=(($fRec101+4)|0);
 var $1260=HEAPF32[(($arrayidx2165)>>2)];
 var $mul2166=($1259)*($1260);
 var $1261=$fSlow70;
 var $fVec132167=(($this1+527604)|0);
 var $arrayidx2168=(($fVec132167+4)|0);
 var $1262=HEAPF32[(($arrayidx2168)>>2)];
 var $1263=$fTemp55;
 var $add2169=($1262)+($1263);
 var $mul2170=($1261)*($add2169);
 var $add2171=($mul2166)+($mul2170);
 var $fRec1012172=(($this1+527596)|0);
 var $arrayidx2173=(($fRec1012172)|0);
 HEAPF32[(($arrayidx2173)>>2)]=$add2171;
 var $fRec1012174=(($this1+527596)|0);
 var $arrayidx2175=(($fRec1012174)|0);
 var $1264=HEAPF32[(($arrayidx2175)>>2)];
 var $1265=$fSlow65;
 var $1266=$fSlow71;
 var $fRec100=(($this1+527584)|0);
 var $arrayidx2176=(($fRec100+8)|0);
 var $1267=HEAPF32[(($arrayidx2176)>>2)];
 var $mul2177=($1266)*($1267);
 var $1268=$fSlow42;
 var $fRec1002178=(($this1+527584)|0);
 var $arrayidx2179=(($fRec1002178+4)|0);
 var $1269=HEAPF32[(($arrayidx2179)>>2)];
 var $mul2180=($1268)*($1269);
 var $add2181=($mul2177)+($mul2180);
 var $mul2182=($1265)*($add2181);
 var $sub2183=($1264)-($mul2182);
 var $fRec1002184=(($this1+527584)|0);
 var $arrayidx2185=(($fRec1002184)|0);
 HEAPF32[(($arrayidx2185)>>2)]=$sub2183;
 var $1270=$fSlow69;
 var $fRec105=(($this1+527576)|0);
 var $arrayidx2186=(($fRec105+4)|0);
 var $1271=HEAPF32[(($arrayidx2186)>>2)];
 var $mul2187=($1270)*($1271);
 var $1272=$fSlow70;
 var $1273=$fSlow75;
 var $fVec132188=(($this1+527604)|0);
 var $arrayidx2189=(($fVec132188+4)|0);
 var $1274=HEAPF32[(($arrayidx2189)>>2)];
 var $mul2190=($1273)*($1274);
 var $1275=$fSlow74;
 var $1276=$fTemp54;
 var $mul2191=($1275)*($1276);
 var $add2192=($mul2190)+($mul2191);
 var $mul2193=($1272)*($add2192);
 var $add2194=($mul2187)+($mul2193);
 var $fRec1052195=(($this1+527576)|0);
 var $arrayidx2196=(($fRec1052195)|0);
 HEAPF32[(($arrayidx2196)>>2)]=$add2194;
 var $fRec1052197=(($this1+527576)|0);
 var $arrayidx2198=(($fRec1052197)|0);
 var $1277=HEAPF32[(($arrayidx2198)>>2)];
 var $1278=$fSlow65;
 var $1279=$fSlow71;
 var $fRec104=(($this1+527564)|0);
 var $arrayidx2199=(($fRec104+8)|0);
 var $1280=HEAPF32[(($arrayidx2199)>>2)];
 var $mul2200=($1279)*($1280);
 var $1281=$fSlow42;
 var $fRec1042201=(($this1+527564)|0);
 var $arrayidx2202=(($fRec1042201+4)|0);
 var $1282=HEAPF32[(($arrayidx2202)>>2)];
 var $mul2203=($1281)*($1282);
 var $add2204=($mul2200)+($mul2203);
 var $mul2205=($1278)*($add2204);
 var $sub2206=($1277)-($mul2205);
 var $fRec1042207=(($this1+527564)|0);
 var $arrayidx2208=(($fRec1042207)|0);
 HEAPF32[(($arrayidx2208)>>2)]=$sub2206;
 var $1283=$fSlow93;
 var $fRec842209=(($this1+527764)|0);
 var $arrayidx2210=(($fRec842209+8)|0);
 var $1284=HEAPF32[(($arrayidx2210)>>2)];
 var $1285=$fSlow39;
 var $1286=$fTemp46;
 var $1287=$fSlow40;
 var $fRec842211=(($this1+527764)|0);
 var $arrayidx2212=(($fRec842211)|0);
 var $1288=HEAPF32[(($arrayidx2212)>>2)];
 var $mul2213=($1287)*($1288);
 var $add2214=($1286)+($mul2213);
 var $mul2215=($1285)*($add2214);
 var $add2216=($1284)+($mul2215);
 var $mul2217=($1283)*($add2216);
 var $1289=$fSlow94;
 var $fRec892218=(($this1+527692)|0);
 var $arrayidx2219=(($fRec892218+8)|0);
 var $1290=HEAPF32[(($arrayidx2219)>>2)];
 var $1291=$fSlow39;
 var $1292=$fTemp50;
 var $1293=$fSlow40;
 var $fRec892220=(($this1+527692)|0);
 var $arrayidx2221=(($fRec892220)|0);
 var $1294=HEAPF32[(($arrayidx2221)>>2)];
 var $mul2222=($1293)*($1294);
 var $add2223=($1292)+($mul2222);
 var $mul2224=($1291)*($add2223);
 var $add2225=($1290)+($mul2224);
 var $mul2226=($1289)*($add2225);
 var $add2227=($mul2217)+($mul2226);
 var $1295=$fSlow95;
 var $fRec952228=(($this1+527632)|0);
 var $arrayidx2229=(($fRec952228+8)|0);
 var $1296=HEAPF32[(($arrayidx2229)>>2)];
 var $1297=$fSlow39;
 var $1298=$fTemp53;
 var $1299=$fSlow40;
 var $fRec952230=(($this1+527632)|0);
 var $arrayidx2231=(($fRec952230)|0);
 var $1300=HEAPF32[(($arrayidx2231)>>2)];
 var $mul2232=($1299)*($1300);
 var $add2233=($1298)+($mul2232);
 var $mul2234=($1297)*($add2233);
 var $add2235=($1296)+($mul2234);
 var $mul2236=($1295)*($add2235);
 var $add2237=($add2227)+($mul2236);
 var $1301=$fSlow65;
 var $1302=$fSlow96;
 var $fRec1002238=(($this1+527584)|0);
 var $arrayidx2239=(($fRec1002238+8)|0);
 var $1303=HEAPF32[(($arrayidx2239)>>2)];
 var $fRec1002240=(($this1+527584)|0);
 var $arrayidx2241=(($fRec1002240)|0);
 var $1304=HEAPF32[(($arrayidx2241)>>2)];
 var $fRec1002242=(($this1+527584)|0);
 var $arrayidx2243=(($fRec1002242+4)|0);
 var $1305=HEAPF32[(($arrayidx2243)>>2)];
 var $mul2244=($1305)*(2);
 var $add2245=($1304)+($mul2244);
 var $add2246=($1303)+($add2245);
 var $mul2247=($1302)*($add2246);
 var $1306=$fSlow97;
 var $1307=$fSlow41;
 var $fRec1042248=(($this1+527564)|0);
 var $arrayidx2249=(($fRec1042248)|0);
 var $1308=HEAPF32[(($arrayidx2249)>>2)];
 var $mul2250=($1307)*($1308);
 var $1309=$fSlow76;
 var $fRec1042251=(($this1+527564)|0);
 var $arrayidx2252=(($fRec1042251+4)|0);
 var $1310=HEAPF32[(($arrayidx2252)>>2)];
 var $mul2253=($1309)*($1310);
 var $add2254=($mul2250)+($mul2253);
 var $1311=$fSlow41;
 var $fRec1042255=(($this1+527564)|0);
 var $arrayidx2256=(($fRec1042255+8)|0);
 var $1312=HEAPF32[(($arrayidx2256)>>2)];
 var $mul2257=($1311)*($1312);
 var $add2258=($add2254)+($mul2257);
 var $mul2259=($1306)*($add2258);
 var $add2260=($mul2247)+($mul2259);
 var $mul2261=($1301)*($add2260);
 var $add2262=($add2237)+($mul2261);
 $fTemp56=$add2262;
 var $1313=$fTemp43;
 var $1314=$fTemp56;
 var $add2263=($1313)+($1314);
 $fTemp57=$add2263;
 var $1315=$fTemp30;
 var $1316=$fTemp57;
 var $add2264=($1315)+($1316);
 $fTemp58=$add2264;
 var $1317=$fSlow19;
 var $fRec110=(($this1+527556)|0);
 var $arrayidx2265=(($fRec110+4)|0);
 var $1318=HEAPF32[(($arrayidx2265)>>2)];
 var $mul2266=($1317)*($1318);
 var $1319=$fSlow20;
 var $1320=$fSlow14;
 var $fRec2=(($this1+426144)|0);
 var $arrayidx2267=(($fRec2+4)|0);
 var $1321=HEAPF32[(($arrayidx2267)>>2)];
 var $mul2268=($1320)*($1321);
 var $1322=$fSlow21;
 var $fRec22269=(($this1+426144)|0);
 var $arrayidx2270=(($fRec22269+8)|0);
 var $1323=HEAPF32[(($arrayidx2270)>>2)];
 var $mul2271=($1322)*($1323);
 var $add2272=($mul2268)+($mul2271);
 var $mul2273=($1319)*($add2272);
 var $add2274=($mul2266)+($mul2273);
 var $fRec1102275=(($this1+527556)|0);
 var $arrayidx2276=(($fRec1102275)|0);
 HEAPF32[(($arrayidx2276)>>2)]=$add2274;
 var $fRec1102277=(($this1+527556)|0);
 var $arrayidx2278=(($fRec1102277)|0);
 var $1324=HEAPF32[(($arrayidx2278)>>2)];
 var $1325=$fSlow16;
 var $1326=$fSlow22;
 var $fRec109=(($this1+527544)|0);
 var $arrayidx2279=(($fRec109+8)|0);
 var $1327=HEAPF32[(($arrayidx2279)>>2)];
 var $mul2280=($1326)*($1327);
 var $1328=$fSlow23;
 var $fRec1092281=(($this1+527544)|0);
 var $arrayidx2282=(($fRec1092281+4)|0);
 var $1329=HEAPF32[(($arrayidx2282)>>2)];
 var $mul2283=($1328)*($1329);
 var $add2284=($mul2280)+($mul2283);
 var $mul2285=($1325)*($add2284);
 var $sub2286=($1324)-($mul2285);
 var $fRec1092287=(($this1+527544)|0);
 var $arrayidx2288=(($fRec1092287)|0);
 HEAPF32[(($arrayidx2288)>>2)]=$sub2286;
 var $1330=$fSlow30;
 var $fRec108=(($this1+527532)|0);
 var $arrayidx2289=(($fRec108+4)|0);
 var $1331=HEAPF32[(($arrayidx2289)>>2)];
 var $mul2290=($1330)*($1331);
 $fTemp59=$mul2290;
 var $1332=$fSlow16;
 var $1333=$fSlow17;
 var $fRec1092291=(($this1+527544)|0);
 var $arrayidx2292=(($fRec1092291)|0);
 var $1334=HEAPF32[(($arrayidx2292)>>2)];
 var $mul2293=($1333)*($1334);
 var $1335=$fSlow24;
 var $fRec1092294=(($this1+527544)|0);
 var $arrayidx2295=(($fRec1092294+4)|0);
 var $1336=HEAPF32[(($arrayidx2295)>>2)];
 var $mul2296=($1335)*($1336);
 var $add2297=($mul2293)+($mul2296);
 var $1337=$fSlow17;
 var $fRec1092298=(($this1+527544)|0);
 var $arrayidx2299=(($fRec1092298+8)|0);
 var $1338=HEAPF32[(($arrayidx2299)>>2)];
 var $mul2300=($1337)*($1338);
 var $add2301=($add2297)+($mul2300);
 var $mul2302=($1332)*($add2301);
 var $1339=$fSlow27;
 var $1340=$fSlow28;
 var $fRec1082303=(($this1+527532)|0);
 var $arrayidx2304=(($fRec1082303+8)|0);
 var $1341=HEAPF32[(($arrayidx2304)>>2)];
 var $mul2305=($1340)*($1341);
 var $1342=$fTemp59;
 var $add2306=($mul2305)+($1342);
 var $mul2307=($1339)*($add2306);
 var $sub2308=($mul2302)-($mul2307);
 var $fRec1082309=(($this1+527532)|0);
 var $arrayidx2310=(($fRec1082309)|0);
 HEAPF32[(($arrayidx2310)>>2)]=$sub2308;
 var $1343=$fSlow36;
 var $fRec107=(($this1+527520)|0);
 var $arrayidx2311=(($fRec107+4)|0);
 var $1344=HEAPF32[(($arrayidx2311)>>2)];
 var $mul2312=($1343)*($1344);
 $fTemp60=$mul2312;
 var $fRec1082313=(($this1+527532)|0);
 var $arrayidx2314=(($fRec1082313+8)|0);
 var $1345=HEAPF32[(($arrayidx2314)>>2)];
 var $1346=$fSlow27;
 var $1347=$fTemp59;
 var $1348=$fSlow28;
 var $fRec1082315=(($this1+527532)|0);
 var $arrayidx2316=(($fRec1082315)|0);
 var $1349=HEAPF32[(($arrayidx2316)>>2)];
 var $mul2317=($1348)*($1349);
 var $add2318=($1347)+($mul2317);
 var $mul2319=($1346)*($add2318);
 var $add2320=($1345)+($mul2319);
 var $1350=$fSlow33;
 var $1351=$fSlow34;
 var $fRec1072321=(($this1+527520)|0);
 var $arrayidx2322=(($fRec1072321+8)|0);
 var $1352=HEAPF32[(($arrayidx2322)>>2)];
 var $mul2323=($1351)*($1352);
 var $1353=$fTemp60;
 var $add2324=($mul2323)+($1353);
 var $mul2325=($1350)*($add2324);
 var $sub2326=($add2320)-($mul2325);
 var $fRec1072327=(($this1+527520)|0);
 var $arrayidx2328=(($fRec1072327)|0);
 HEAPF32[(($arrayidx2328)>>2)]=$sub2326;
 var $1354=$fSlow42;
 var $fRec106=(($this1+527508)|0);
 var $arrayidx2329=(($fRec106+4)|0);
 var $1355=HEAPF32[(($arrayidx2329)>>2)];
 var $mul2330=($1354)*($1355);
 $fTemp61=$mul2330;
 var $fRec1072331=(($this1+527520)|0);
 var $arrayidx2332=(($fRec1072331+8)|0);
 var $1356=HEAPF32[(($arrayidx2332)>>2)];
 var $1357=$fSlow33;
 var $1358=$fTemp60;
 var $1359=$fSlow34;
 var $fRec1072333=(($this1+527520)|0);
 var $arrayidx2334=(($fRec1072333)|0);
 var $1360=HEAPF32[(($arrayidx2334)>>2)];
 var $mul2335=($1359)*($1360);
 var $add2336=($1358)+($mul2335);
 var $mul2337=($1357)*($add2336);
 var $add2338=($1356)+($mul2337);
 var $1361=$fSlow39;
 var $1362=$fSlow40;
 var $fRec1062339=(($this1+527508)|0);
 var $arrayidx2340=(($fRec1062339+8)|0);
 var $1363=HEAPF32[(($arrayidx2340)>>2)];
 var $mul2341=($1362)*($1363);
 var $1364=$fTemp61;
 var $add2342=($mul2341)+($1364);
 var $mul2343=($1361)*($add2342);
 var $sub2344=($add2338)-($mul2343);
 var $fRec1062345=(($this1+527508)|0);
 var $arrayidx2346=(($fRec1062345)|0);
 HEAPF32[(($arrayidx2346)>>2)]=$sub2344;
 var $1365=$fSlow19;
 var $fRec116=(($this1+527500)|0);
 var $arrayidx2347=(($fRec116+4)|0);
 var $1366=HEAPF32[(($arrayidx2347)>>2)];
 var $mul2348=($1365)*($1366);
 var $1367=$fSlow20;
 var $fRec22349=(($this1+426144)|0);
 var $arrayidx2350=(($fRec22349+4)|0);
 var $1368=HEAPF32[(($arrayidx2350)>>2)];
 var $fRec22351=(($this1+426144)|0);
 var $arrayidx2352=(($fRec22351+8)|0);
 var $1369=HEAPF32[(($arrayidx2352)>>2)];
 var $add2353=($1368)+($1369);
 var $mul2354=($1367)*($add2353);
 var $add2355=($mul2348)+($mul2354);
 var $fRec1162356=(($this1+527500)|0);
 var $arrayidx2357=(($fRec1162356)|0);
 HEAPF32[(($arrayidx2357)>>2)]=$add2355;
 var $fRec1162358=(($this1+527500)|0);
 var $arrayidx2359=(($fRec1162358)|0);
 var $1370=HEAPF32[(($arrayidx2359)>>2)];
 var $1371=$fSlow16;
 var $1372=$fSlow22;
 var $fRec115=(($this1+527488)|0);
 var $arrayidx2360=(($fRec115+8)|0);
 var $1373=HEAPF32[(($arrayidx2360)>>2)];
 var $mul2361=($1372)*($1373);
 var $1374=$fSlow23;
 var $fRec1152362=(($this1+527488)|0);
 var $arrayidx2363=(($fRec1152362+4)|0);
 var $1375=HEAPF32[(($arrayidx2363)>>2)];
 var $mul2364=($1374)*($1375);
 var $add2365=($mul2361)+($mul2364);
 var $mul2366=($1371)*($add2365);
 var $sub2367=($1370)-($mul2366);
 var $fRec1152368=(($this1+527488)|0);
 var $arrayidx2369=(($fRec1152368)|0);
 HEAPF32[(($arrayidx2369)>>2)]=$sub2367;
 var $fRec1152370=(($this1+527488)|0);
 var $arrayidx2371=(($fRec1152370+8)|0);
 var $1376=HEAPF32[(($arrayidx2371)>>2)];
 var $fRec1152372=(($this1+527488)|0);
 var $arrayidx2373=(($fRec1152372)|0);
 var $1377=HEAPF32[(($arrayidx2373)>>2)];
 var $fRec1152374=(($this1+527488)|0);
 var $arrayidx2375=(($fRec1152374+4)|0);
 var $1378=HEAPF32[(($arrayidx2375)>>2)];
 var $mul2376=($1378)*(2);
 var $add2377=($1377)+($mul2376);
 var $add2378=($1376)+($add2377);
 $fTemp62=$add2378;
 var $1379=$fSlow16;
 var $1380=$fTemp62;
 var $mul2379=($1379)*($1380);
 $fTemp63=$mul2379;
 var $1381=$fTemp63;
 var $fVec14=(($this1+527480)|0);
 var $arrayidx2380=(($fVec14)|0);
 HEAPF32[(($arrayidx2380)>>2)]=$1381;
 var $1382=$fSlow48;
 var $fRec114=(($this1+527472)|0);
 var $arrayidx2381=(($fRec114+4)|0);
 var $1383=HEAPF32[(($arrayidx2381)>>2)];
 var $mul2382=($1382)*($1383);
 var $1384=$fSlow49;
 var $1385=$fSlow51;
 var $fVec142383=(($this1+527480)|0);
 var $arrayidx2384=(($fVec142383+4)|0);
 var $1386=HEAPF32[(($arrayidx2384)>>2)];
 var $mul2385=($1385)*($1386);
 var $1387=$fSlow50;
 var $1388=$fTemp62;
 var $mul2386=($1387)*($1388);
 var $add2387=($mul2385)+($mul2386);
 var $mul2388=($1384)*($add2387);
 var $add2389=($mul2382)+($mul2388);
 var $fRec1142390=(($this1+527472)|0);
 var $arrayidx2391=(($fRec1142390)|0);
 HEAPF32[(($arrayidx2391)>>2)]=$add2389;
 var $fRec1142392=(($this1+527472)|0);
 var $arrayidx2393=(($fRec1142392)|0);
 var $1389=HEAPF32[(($arrayidx2393)>>2)];
 var $1390=$fSlow46;
 var $1391=$fSlow52;
 var $fRec113=(($this1+527460)|0);
 var $arrayidx2394=(($fRec113+8)|0);
 var $1392=HEAPF32[(($arrayidx2394)>>2)];
 var $mul2395=($1391)*($1392);
 var $1393=$fSlow30;
 var $fRec1132396=(($this1+527460)|0);
 var $arrayidx2397=(($fRec1132396+4)|0);
 var $1394=HEAPF32[(($arrayidx2397)>>2)];
 var $mul2398=($1393)*($1394);
 var $add2399=($mul2395)+($mul2398);
 var $mul2400=($1390)*($add2399);
 var $sub2401=($1389)-($mul2400);
 var $fRec1132402=(($this1+527460)|0);
 var $arrayidx2403=(($fRec1132402)|0);
 HEAPF32[(($arrayidx2403)>>2)]=$sub2401;
 var $1395=$fSlow36;
 var $fRec112=(($this1+527448)|0);
 var $arrayidx2404=(($fRec112+4)|0);
 var $1396=HEAPF32[(($arrayidx2404)>>2)];
 var $mul2405=($1395)*($1396);
 $fTemp64=$mul2405;
 var $1397=$fSlow46;
 var $1398=$fSlow29;
 var $fRec1132406=(($this1+527460)|0);
 var $arrayidx2407=(($fRec1132406)|0);
 var $1399=HEAPF32[(($arrayidx2407)>>2)];
 var $mul2408=($1398)*($1399);
 var $1400=$fSlow53;
 var $fRec1132409=(($this1+527460)|0);
 var $arrayidx2410=(($fRec1132409+4)|0);
 var $1401=HEAPF32[(($arrayidx2410)>>2)];
 var $mul2411=($1400)*($1401);
 var $add2412=($mul2408)+($mul2411);
 var $1402=$fSlow29;
 var $fRec1132413=(($this1+527460)|0);
 var $arrayidx2414=(($fRec1132413+8)|0);
 var $1403=HEAPF32[(($arrayidx2414)>>2)];
 var $mul2415=($1402)*($1403);
 var $add2416=($add2412)+($mul2415);
 var $mul2417=($1397)*($add2416);
 var $1404=$fSlow33;
 var $1405=$fSlow34;
 var $fRec1122418=(($this1+527448)|0);
 var $arrayidx2419=(($fRec1122418+8)|0);
 var $1406=HEAPF32[(($arrayidx2419)>>2)];
 var $mul2420=($1405)*($1406);
 var $1407=$fTemp64;
 var $add2421=($mul2420)+($1407);
 var $mul2422=($1404)*($add2421);
 var $sub2423=($mul2417)-($mul2422);
 var $fRec1122424=(($this1+527448)|0);
 var $arrayidx2425=(($fRec1122424)|0);
 HEAPF32[(($arrayidx2425)>>2)]=$sub2423;
 var $1408=$fSlow42;
 var $fRec111=(($this1+527436)|0);
 var $arrayidx2426=(($fRec111+4)|0);
 var $1409=HEAPF32[(($arrayidx2426)>>2)];
 var $mul2427=($1408)*($1409);
 $fTemp65=$mul2427;
 var $fRec1122428=(($this1+527448)|0);
 var $arrayidx2429=(($fRec1122428+8)|0);
 var $1410=HEAPF32[(($arrayidx2429)>>2)];
 var $1411=$fSlow33;
 var $1412=$fTemp64;
 var $1413=$fSlow34;
 var $fRec1122430=(($this1+527448)|0);
 var $arrayidx2431=(($fRec1122430)|0);
 var $1414=HEAPF32[(($arrayidx2431)>>2)];
 var $mul2432=($1413)*($1414);
 var $add2433=($1412)+($mul2432);
 var $mul2434=($1411)*($add2433);
 var $add2435=($1410)+($mul2434);
 var $1415=$fSlow39;
 var $1416=$fSlow40;
 var $fRec1112436=(($this1+527436)|0);
 var $arrayidx2437=(($fRec1112436+8)|0);
 var $1417=HEAPF32[(($arrayidx2437)>>2)];
 var $mul2438=($1416)*($1417);
 var $1418=$fTemp65;
 var $add2439=($mul2438)+($1418);
 var $mul2440=($1415)*($add2439);
 var $sub2441=($add2435)-($mul2440);
 var $fRec1112442=(($this1+527436)|0);
 var $arrayidx2443=(($fRec1112442)|0);
 HEAPF32[(($arrayidx2443)>>2)]=$sub2441;
 var $1419=$fSlow48;
 var $fRec121=(($this1+527428)|0);
 var $arrayidx2444=(($fRec121+4)|0);
 var $1420=HEAPF32[(($arrayidx2444)>>2)];
 var $mul2445=($1419)*($1420);
 var $1421=$fSlow49;
 var $fVec142446=(($this1+527480)|0);
 var $arrayidx2447=(($fVec142446+4)|0);
 var $1422=HEAPF32[(($arrayidx2447)>>2)];
 var $1423=$fTemp63;
 var $add2448=($1422)+($1423);
 var $mul2449=($1421)*($add2448);
 var $add2450=($mul2445)+($mul2449);
 var $fRec1212451=(($this1+527428)|0);
 var $arrayidx2452=(($fRec1212451)|0);
 HEAPF32[(($arrayidx2452)>>2)]=$add2450;
 var $fRec1212453=(($this1+527428)|0);
 var $arrayidx2454=(($fRec1212453)|0);
 var $1424=HEAPF32[(($arrayidx2454)>>2)];
 var $1425=$fSlow46;
 var $1426=$fSlow52;
 var $fRec120=(($this1+527416)|0);
 var $arrayidx2455=(($fRec120+8)|0);
 var $1427=HEAPF32[(($arrayidx2455)>>2)];
 var $mul2456=($1426)*($1427);
 var $1428=$fSlow30;
 var $fRec1202457=(($this1+527416)|0);
 var $arrayidx2458=(($fRec1202457+4)|0);
 var $1429=HEAPF32[(($arrayidx2458)>>2)];
 var $mul2459=($1428)*($1429);
 var $add2460=($mul2456)+($mul2459);
 var $mul2461=($1425)*($add2460);
 var $sub2462=($1424)-($mul2461);
 var $fRec1202463=(($this1+527416)|0);
 var $arrayidx2464=(($fRec1202463)|0);
 HEAPF32[(($arrayidx2464)>>2)]=$sub2462;
 var $fRec1202465=(($this1+527416)|0);
 var $arrayidx2466=(($fRec1202465+8)|0);
 var $1430=HEAPF32[(($arrayidx2466)>>2)];
 var $fRec1202467=(($this1+527416)|0);
 var $arrayidx2468=(($fRec1202467)|0);
 var $1431=HEAPF32[(($arrayidx2468)>>2)];
 var $fRec1202469=(($this1+527416)|0);
 var $arrayidx2470=(($fRec1202469+4)|0);
 var $1432=HEAPF32[(($arrayidx2470)>>2)];
 var $mul2471=($1432)*(2);
 var $add2472=($1431)+($mul2471);
 var $add2473=($1430)+($add2472);
 $fTemp66=$add2473;
 var $1433=$fSlow46;
 var $1434=$fTemp66;
 var $mul2474=($1433)*($1434);
 $fTemp67=$mul2474;
 var $1435=$fTemp67;
 var $fVec15=(($this1+527408)|0);
 var $arrayidx2475=(($fVec15)|0);
 HEAPF32[(($arrayidx2475)>>2)]=$1435;
 var $1436=$fSlow59;
 var $fRec119=(($this1+527400)|0);
 var $arrayidx2476=(($fRec119+4)|0);
 var $1437=HEAPF32[(($arrayidx2476)>>2)];
 var $mul2477=($1436)*($1437);
 var $1438=$fSlow60;
 var $1439=$fSlow62;
 var $fVec152478=(($this1+527408)|0);
 var $arrayidx2479=(($fVec152478+4)|0);
 var $1440=HEAPF32[(($arrayidx2479)>>2)];
 var $mul2480=($1439)*($1440);
 var $1441=$fSlow61;
 var $1442=$fTemp66;
 var $mul2481=($1441)*($1442);
 var $add2482=($mul2480)+($mul2481);
 var $mul2483=($1438)*($add2482);
 var $add2484=($mul2477)+($mul2483);
 var $fRec1192485=(($this1+527400)|0);
 var $arrayidx2486=(($fRec1192485)|0);
 HEAPF32[(($arrayidx2486)>>2)]=$add2484;
 var $fRec1192487=(($this1+527400)|0);
 var $arrayidx2488=(($fRec1192487)|0);
 var $1443=HEAPF32[(($arrayidx2488)>>2)];
 var $1444=$fSlow57;
 var $1445=$fSlow63;
 var $fRec118=(($this1+527388)|0);
 var $arrayidx2489=(($fRec118+8)|0);
 var $1446=HEAPF32[(($arrayidx2489)>>2)];
 var $mul2490=($1445)*($1446);
 var $1447=$fSlow36;
 var $fRec1182491=(($this1+527388)|0);
 var $arrayidx2492=(($fRec1182491+4)|0);
 var $1448=HEAPF32[(($arrayidx2492)>>2)];
 var $mul2493=($1447)*($1448);
 var $add2494=($mul2490)+($mul2493);
 var $mul2495=($1444)*($add2494);
 var $sub2496=($1443)-($mul2495);
 var $fRec1182497=(($this1+527388)|0);
 var $arrayidx2498=(($fRec1182497)|0);
 HEAPF32[(($arrayidx2498)>>2)]=$sub2496;
 var $1449=$fSlow42;
 var $fRec117=(($this1+527376)|0);
 var $arrayidx2499=(($fRec117+4)|0);
 var $1450=HEAPF32[(($arrayidx2499)>>2)];
 var $mul2500=($1449)*($1450);
 $fTemp68=$mul2500;
 var $1451=$fSlow57;
 var $1452=$fSlow35;
 var $fRec1182501=(($this1+527388)|0);
 var $arrayidx2502=(($fRec1182501)|0);
 var $1453=HEAPF32[(($arrayidx2502)>>2)];
 var $mul2503=($1452)*($1453);
 var $1454=$fSlow64;
 var $fRec1182504=(($this1+527388)|0);
 var $arrayidx2505=(($fRec1182504+4)|0);
 var $1455=HEAPF32[(($arrayidx2505)>>2)];
 var $mul2506=($1454)*($1455);
 var $add2507=($mul2503)+($mul2506);
 var $1456=$fSlow35;
 var $fRec1182508=(($this1+527388)|0);
 var $arrayidx2509=(($fRec1182508+8)|0);
 var $1457=HEAPF32[(($arrayidx2509)>>2)];
 var $mul2510=($1456)*($1457);
 var $add2511=($add2507)+($mul2510);
 var $mul2512=($1451)*($add2511);
 var $1458=$fSlow39;
 var $1459=$fSlow40;
 var $fRec1172513=(($this1+527376)|0);
 var $arrayidx2514=(($fRec1172513+8)|0);
 var $1460=HEAPF32[(($arrayidx2514)>>2)];
 var $mul2515=($1459)*($1460);
 var $1461=$fTemp68;
 var $add2516=($mul2515)+($1461);
 var $mul2517=($1458)*($add2516);
 var $sub2518=($mul2512)-($mul2517);
 var $fRec1172519=(($this1+527376)|0);
 var $arrayidx2520=(($fRec1172519)|0);
 HEAPF32[(($arrayidx2520)>>2)]=$sub2518;
 var $1462=$fSlow59;
 var $fRec125=(($this1+527368)|0);
 var $arrayidx2521=(($fRec125+4)|0);
 var $1463=HEAPF32[(($arrayidx2521)>>2)];
 var $mul2522=($1462)*($1463);
 var $1464=$fSlow60;
 var $fVec152523=(($this1+527408)|0);
 var $arrayidx2524=(($fVec152523+4)|0);
 var $1465=HEAPF32[(($arrayidx2524)>>2)];
 var $1466=$fTemp67;
 var $add2525=($1465)+($1466);
 var $mul2526=($1464)*($add2525);
 var $add2527=($mul2522)+($mul2526);
 var $fRec1252528=(($this1+527368)|0);
 var $arrayidx2529=(($fRec1252528)|0);
 HEAPF32[(($arrayidx2529)>>2)]=$add2527;
 var $fRec1252530=(($this1+527368)|0);
 var $arrayidx2531=(($fRec1252530)|0);
 var $1467=HEAPF32[(($arrayidx2531)>>2)];
 var $1468=$fSlow57;
 var $1469=$fSlow63;
 var $fRec124=(($this1+527356)|0);
 var $arrayidx2532=(($fRec124+8)|0);
 var $1470=HEAPF32[(($arrayidx2532)>>2)];
 var $mul2533=($1469)*($1470);
 var $1471=$fSlow36;
 var $fRec1242534=(($this1+527356)|0);
 var $arrayidx2535=(($fRec1242534+4)|0);
 var $1472=HEAPF32[(($arrayidx2535)>>2)];
 var $mul2536=($1471)*($1472);
 var $add2537=($mul2533)+($mul2536);
 var $mul2538=($1468)*($add2537);
 var $sub2539=($1467)-($mul2538);
 var $fRec1242540=(($this1+527356)|0);
 var $arrayidx2541=(($fRec1242540)|0);
 HEAPF32[(($arrayidx2541)>>2)]=$sub2539;
 var $fRec1242542=(($this1+527356)|0);
 var $arrayidx2543=(($fRec1242542+8)|0);
 var $1473=HEAPF32[(($arrayidx2543)>>2)];
 var $fRec1242544=(($this1+527356)|0);
 var $arrayidx2545=(($fRec1242544)|0);
 var $1474=HEAPF32[(($arrayidx2545)>>2)];
 var $fRec1242546=(($this1+527356)|0);
 var $arrayidx2547=(($fRec1242546+4)|0);
 var $1475=HEAPF32[(($arrayidx2547)>>2)];
 var $mul2548=($1475)*(2);
 var $add2549=($1474)+($mul2548);
 var $add2550=($1473)+($add2549);
 $fTemp69=$add2550;
 var $1476=$fSlow57;
 var $1477=$fTemp69;
 var $mul2551=($1476)*($1477);
 $fTemp70=$mul2551;
 var $1478=$fTemp70;
 var $fVec16=(($this1+527348)|0);
 var $arrayidx2552=(($fVec16)|0);
 HEAPF32[(($arrayidx2552)>>2)]=$1478;
 var $1479=$fSlow69;
 var $fRec123=(($this1+527340)|0);
 var $arrayidx2553=(($fRec123+4)|0);
 var $1480=HEAPF32[(($arrayidx2553)>>2)];
 var $mul2554=($1479)*($1480);
 var $1481=$fSlow70;
 var $fVec162555=(($this1+527348)|0);
 var $arrayidx2556=(($fVec162555+4)|0);
 var $1482=HEAPF32[(($arrayidx2556)>>2)];
 var $1483=$fTemp70;
 var $add2557=($1482)+($1483);
 var $mul2558=($1481)*($add2557);
 var $add2559=($mul2554)+($mul2558);
 var $fRec1232560=(($this1+527340)|0);
 var $arrayidx2561=(($fRec1232560)|0);
 HEAPF32[(($arrayidx2561)>>2)]=$add2559;
 var $fRec1232562=(($this1+527340)|0);
 var $arrayidx2563=(($fRec1232562)|0);
 var $1484=HEAPF32[(($arrayidx2563)>>2)];
 var $1485=$fSlow65;
 var $1486=$fSlow71;
 var $fRec122=(($this1+527328)|0);
 var $arrayidx2564=(($fRec122+8)|0);
 var $1487=HEAPF32[(($arrayidx2564)>>2)];
 var $mul2565=($1486)*($1487);
 var $1488=$fSlow42;
 var $fRec1222566=(($this1+527328)|0);
 var $arrayidx2567=(($fRec1222566+4)|0);
 var $1489=HEAPF32[(($arrayidx2567)>>2)];
 var $mul2568=($1488)*($1489);
 var $add2569=($mul2565)+($mul2568);
 var $mul2570=($1485)*($add2569);
 var $sub2571=($1484)-($mul2570);
 var $fRec1222572=(($this1+527328)|0);
 var $arrayidx2573=(($fRec1222572)|0);
 HEAPF32[(($arrayidx2573)>>2)]=$sub2571;
 var $1490=$fSlow69;
 var $fRec127=(($this1+527320)|0);
 var $arrayidx2574=(($fRec127+4)|0);
 var $1491=HEAPF32[(($arrayidx2574)>>2)];
 var $mul2575=($1490)*($1491);
 var $1492=$fSlow70;
 var $1493=$fSlow75;
 var $fVec162576=(($this1+527348)|0);
 var $arrayidx2577=(($fVec162576+4)|0);
 var $1494=HEAPF32[(($arrayidx2577)>>2)];
 var $mul2578=($1493)*($1494);
 var $1495=$fSlow74;
 var $1496=$fTemp69;
 var $mul2579=($1495)*($1496);
 var $add2580=($mul2578)+($mul2579);
 var $mul2581=($1492)*($add2580);
 var $add2582=($mul2575)+($mul2581);
 var $fRec1272583=(($this1+527320)|0);
 var $arrayidx2584=(($fRec1272583)|0);
 HEAPF32[(($arrayidx2584)>>2)]=$add2582;
 var $fRec1272585=(($this1+527320)|0);
 var $arrayidx2586=(($fRec1272585)|0);
 var $1497=HEAPF32[(($arrayidx2586)>>2)];
 var $1498=$fSlow65;
 var $1499=$fSlow71;
 var $fRec126=(($this1+527308)|0);
 var $arrayidx2587=(($fRec126+8)|0);
 var $1500=HEAPF32[(($arrayidx2587)>>2)];
 var $mul2588=($1499)*($1500);
 var $1501=$fSlow42;
 var $fRec1262589=(($this1+527308)|0);
 var $arrayidx2590=(($fRec1262589+4)|0);
 var $1502=HEAPF32[(($arrayidx2590)>>2)];
 var $mul2591=($1501)*($1502);
 var $add2592=($mul2588)+($mul2591);
 var $mul2593=($1498)*($add2592);
 var $sub2594=($1497)-($mul2593);
 var $fRec1262595=(($this1+527308)|0);
 var $arrayidx2596=(($fRec1262595)|0);
 HEAPF32[(($arrayidx2596)>>2)]=$sub2594;
 var $1503=$fSlow100;
 var $fRec1062597=(($this1+527508)|0);
 var $arrayidx2598=(($fRec1062597+8)|0);
 var $1504=HEAPF32[(($arrayidx2598)>>2)];
 var $1505=$fSlow39;
 var $1506=$fTemp61;
 var $1507=$fSlow40;
 var $fRec1062599=(($this1+527508)|0);
 var $arrayidx2600=(($fRec1062599)|0);
 var $1508=HEAPF32[(($arrayidx2600)>>2)];
 var $mul2601=($1507)*($1508);
 var $add2602=($1506)+($mul2601);
 var $mul2603=($1505)*($add2602);
 var $add2604=($1504)+($mul2603);
 var $mul2605=($1503)*($add2604);
 var $1509=$fSlow101;
 var $fRec1112606=(($this1+527436)|0);
 var $arrayidx2607=(($fRec1112606+8)|0);
 var $1510=HEAPF32[(($arrayidx2607)>>2)];
 var $1511=$fSlow39;
 var $1512=$fTemp65;
 var $1513=$fSlow40;
 var $fRec1112608=(($this1+527436)|0);
 var $arrayidx2609=(($fRec1112608)|0);
 var $1514=HEAPF32[(($arrayidx2609)>>2)];
 var $mul2610=($1513)*($1514);
 var $add2611=($1512)+($mul2610);
 var $mul2612=($1511)*($add2611);
 var $add2613=($1510)+($mul2612);
 var $mul2614=($1509)*($add2613);
 var $add2615=($mul2605)+($mul2614);
 var $1515=$fSlow102;
 var $fRec1172616=(($this1+527376)|0);
 var $arrayidx2617=(($fRec1172616+8)|0);
 var $1516=HEAPF32[(($arrayidx2617)>>2)];
 var $1517=$fSlow39;
 var $1518=$fTemp68;
 var $1519=$fSlow40;
 var $fRec1172618=(($this1+527376)|0);
 var $arrayidx2619=(($fRec1172618)|0);
 var $1520=HEAPF32[(($arrayidx2619)>>2)];
 var $mul2620=($1519)*($1520);
 var $add2621=($1518)+($mul2620);
 var $mul2622=($1517)*($add2621);
 var $add2623=($1516)+($mul2622);
 var $mul2624=($1515)*($add2623);
 var $add2625=($add2615)+($mul2624);
 var $1521=$fSlow65;
 var $1522=$fSlow103;
 var $fRec1222626=(($this1+527328)|0);
 var $arrayidx2627=(($fRec1222626+8)|0);
 var $1523=HEAPF32[(($arrayidx2627)>>2)];
 var $fRec1222628=(($this1+527328)|0);
 var $arrayidx2629=(($fRec1222628)|0);
 var $1524=HEAPF32[(($arrayidx2629)>>2)];
 var $fRec1222630=(($this1+527328)|0);
 var $arrayidx2631=(($fRec1222630+4)|0);
 var $1525=HEAPF32[(($arrayidx2631)>>2)];
 var $mul2632=($1525)*(2);
 var $add2633=($1524)+($mul2632);
 var $add2634=($1523)+($add2633);
 var $mul2635=($1522)*($add2634);
 var $1526=$fSlow104;
 var $1527=$fSlow41;
 var $fRec1262636=(($this1+527308)|0);
 var $arrayidx2637=(($fRec1262636)|0);
 var $1528=HEAPF32[(($arrayidx2637)>>2)];
 var $mul2638=($1527)*($1528);
 var $1529=$fSlow76;
 var $fRec1262639=(($this1+527308)|0);
 var $arrayidx2640=(($fRec1262639+4)|0);
 var $1530=HEAPF32[(($arrayidx2640)>>2)];
 var $mul2641=($1529)*($1530);
 var $add2642=($mul2638)+($mul2641);
 var $1531=$fSlow41;
 var $fRec1262643=(($this1+527308)|0);
 var $arrayidx2644=(($fRec1262643+8)|0);
 var $1532=HEAPF32[(($arrayidx2644)>>2)];
 var $mul2645=($1531)*($1532);
 var $add2646=($add2642)+($mul2645);
 var $mul2647=($1526)*($add2646);
 var $add2648=($mul2635)+($mul2647);
 var $mul2649=($1521)*($add2648);
 var $add2650=($add2625)+($mul2649);
 $fTemp71=$add2650;
 var $1533=$fSlow19;
 var $fRec132=(($this1+527300)|0);
 var $arrayidx2651=(($fRec132+4)|0);
 var $1534=HEAPF32[(($arrayidx2651)>>2)];
 var $mul2652=($1533)*($1534);
 var $1535=$fSlow20;
 var $1536=$fSlow14;
 var $fRec10=(($this1+163904)|0);
 var $arrayidx2653=(($fRec10+4)|0);
 var $1537=HEAPF32[(($arrayidx2653)>>2)];
 var $mul2654=($1536)*($1537);
 var $1538=$fSlow21;
 var $fRec102655=(($this1+163904)|0);
 var $arrayidx2656=(($fRec102655+8)|0);
 var $1539=HEAPF32[(($arrayidx2656)>>2)];
 var $mul2657=($1538)*($1539);
 var $add2658=($mul2654)+($mul2657);
 var $mul2659=($1535)*($add2658);
 var $add2660=($mul2652)+($mul2659);
 var $fRec1322661=(($this1+527300)|0);
 var $arrayidx2662=(($fRec1322661)|0);
 HEAPF32[(($arrayidx2662)>>2)]=$add2660;
 var $fRec1322663=(($this1+527300)|0);
 var $arrayidx2664=(($fRec1322663)|0);
 var $1540=HEAPF32[(($arrayidx2664)>>2)];
 var $1541=$fSlow16;
 var $1542=$fSlow22;
 var $fRec131=(($this1+527288)|0);
 var $arrayidx2665=(($fRec131+8)|0);
 var $1543=HEAPF32[(($arrayidx2665)>>2)];
 var $mul2666=($1542)*($1543);
 var $1544=$fSlow23;
 var $fRec1312667=(($this1+527288)|0);
 var $arrayidx2668=(($fRec1312667+4)|0);
 var $1545=HEAPF32[(($arrayidx2668)>>2)];
 var $mul2669=($1544)*($1545);
 var $add2670=($mul2666)+($mul2669);
 var $mul2671=($1541)*($add2670);
 var $sub2672=($1540)-($mul2671);
 var $fRec1312673=(($this1+527288)|0);
 var $arrayidx2674=(($fRec1312673)|0);
 HEAPF32[(($arrayidx2674)>>2)]=$sub2672;
 var $1546=$fSlow30;
 var $fRec130=(($this1+527276)|0);
 var $arrayidx2675=(($fRec130+4)|0);
 var $1547=HEAPF32[(($arrayidx2675)>>2)];
 var $mul2676=($1546)*($1547);
 $fTemp72=$mul2676;
 var $1548=$fSlow16;
 var $1549=$fSlow17;
 var $fRec1312677=(($this1+527288)|0);
 var $arrayidx2678=(($fRec1312677)|0);
 var $1550=HEAPF32[(($arrayidx2678)>>2)];
 var $mul2679=($1549)*($1550);
 var $1551=$fSlow24;
 var $fRec1312680=(($this1+527288)|0);
 var $arrayidx2681=(($fRec1312680+4)|0);
 var $1552=HEAPF32[(($arrayidx2681)>>2)];
 var $mul2682=($1551)*($1552);
 var $add2683=($mul2679)+($mul2682);
 var $1553=$fSlow17;
 var $fRec1312684=(($this1+527288)|0);
 var $arrayidx2685=(($fRec1312684+8)|0);
 var $1554=HEAPF32[(($arrayidx2685)>>2)];
 var $mul2686=($1553)*($1554);
 var $add2687=($add2683)+($mul2686);
 var $mul2688=($1548)*($add2687);
 var $1555=$fSlow27;
 var $1556=$fSlow28;
 var $fRec1302689=(($this1+527276)|0);
 var $arrayidx2690=(($fRec1302689+8)|0);
 var $1557=HEAPF32[(($arrayidx2690)>>2)];
 var $mul2691=($1556)*($1557);
 var $1558=$fTemp72;
 var $add2692=($mul2691)+($1558);
 var $mul2693=($1555)*($add2692);
 var $sub2694=($mul2688)-($mul2693);
 var $fRec1302695=(($this1+527276)|0);
 var $arrayidx2696=(($fRec1302695)|0);
 HEAPF32[(($arrayidx2696)>>2)]=$sub2694;
 var $1559=$fSlow36;
 var $fRec129=(($this1+527264)|0);
 var $arrayidx2697=(($fRec129+4)|0);
 var $1560=HEAPF32[(($arrayidx2697)>>2)];
 var $mul2698=($1559)*($1560);
 $fTemp73=$mul2698;
 var $fRec1302699=(($this1+527276)|0);
 var $arrayidx2700=(($fRec1302699+8)|0);
 var $1561=HEAPF32[(($arrayidx2700)>>2)];
 var $1562=$fSlow27;
 var $1563=$fTemp72;
 var $1564=$fSlow28;
 var $fRec1302701=(($this1+527276)|0);
 var $arrayidx2702=(($fRec1302701)|0);
 var $1565=HEAPF32[(($arrayidx2702)>>2)];
 var $mul2703=($1564)*($1565);
 var $add2704=($1563)+($mul2703);
 var $mul2705=($1562)*($add2704);
 var $add2706=($1561)+($mul2705);
 var $1566=$fSlow33;
 var $1567=$fSlow34;
 var $fRec1292707=(($this1+527264)|0);
 var $arrayidx2708=(($fRec1292707+8)|0);
 var $1568=HEAPF32[(($arrayidx2708)>>2)];
 var $mul2709=($1567)*($1568);
 var $1569=$fTemp73;
 var $add2710=($mul2709)+($1569);
 var $mul2711=($1566)*($add2710);
 var $sub2712=($add2706)-($mul2711);
 var $fRec1292713=(($this1+527264)|0);
 var $arrayidx2714=(($fRec1292713)|0);
 HEAPF32[(($arrayidx2714)>>2)]=$sub2712;
 var $1570=$fSlow42;
 var $fRec128=(($this1+527252)|0);
 var $arrayidx2715=(($fRec128+4)|0);
 var $1571=HEAPF32[(($arrayidx2715)>>2)];
 var $mul2716=($1570)*($1571);
 $fTemp74=$mul2716;
 var $fRec1292717=(($this1+527264)|0);
 var $arrayidx2718=(($fRec1292717+8)|0);
 var $1572=HEAPF32[(($arrayidx2718)>>2)];
 var $1573=$fSlow33;
 var $1574=$fTemp73;
 var $1575=$fSlow34;
 var $fRec1292719=(($this1+527264)|0);
 var $arrayidx2720=(($fRec1292719)|0);
 var $1576=HEAPF32[(($arrayidx2720)>>2)];
 var $mul2721=($1575)*($1576);
 var $add2722=($1574)+($mul2721);
 var $mul2723=($1573)*($add2722);
 var $add2724=($1572)+($mul2723);
 var $1577=$fSlow39;
 var $1578=$fSlow40;
 var $fRec1282725=(($this1+527252)|0);
 var $arrayidx2726=(($fRec1282725+8)|0);
 var $1579=HEAPF32[(($arrayidx2726)>>2)];
 var $mul2727=($1578)*($1579);
 var $1580=$fTemp74;
 var $add2728=($mul2727)+($1580);
 var $mul2729=($1577)*($add2728);
 var $sub2730=($add2724)-($mul2729);
 var $fRec1282731=(($this1+527252)|0);
 var $arrayidx2732=(($fRec1282731)|0);
 HEAPF32[(($arrayidx2732)>>2)]=$sub2730;
 var $1581=$fSlow19;
 var $fRec138=(($this1+527244)|0);
 var $arrayidx2733=(($fRec138+4)|0);
 var $1582=HEAPF32[(($arrayidx2733)>>2)];
 var $mul2734=($1581)*($1582);
 var $1583=$fSlow20;
 var $fRec102735=(($this1+163904)|0);
 var $arrayidx2736=(($fRec102735+4)|0);
 var $1584=HEAPF32[(($arrayidx2736)>>2)];
 var $fRec102737=(($this1+163904)|0);
 var $arrayidx2738=(($fRec102737+8)|0);
 var $1585=HEAPF32[(($arrayidx2738)>>2)];
 var $add2739=($1584)+($1585);
 var $mul2740=($1583)*($add2739);
 var $add2741=($mul2734)+($mul2740);
 var $fRec1382742=(($this1+527244)|0);
 var $arrayidx2743=(($fRec1382742)|0);
 HEAPF32[(($arrayidx2743)>>2)]=$add2741;
 var $fRec1382744=(($this1+527244)|0);
 var $arrayidx2745=(($fRec1382744)|0);
 var $1586=HEAPF32[(($arrayidx2745)>>2)];
 var $1587=$fSlow16;
 var $1588=$fSlow22;
 var $fRec137=(($this1+527232)|0);
 var $arrayidx2746=(($fRec137+8)|0);
 var $1589=HEAPF32[(($arrayidx2746)>>2)];
 var $mul2747=($1588)*($1589);
 var $1590=$fSlow23;
 var $fRec1372748=(($this1+527232)|0);
 var $arrayidx2749=(($fRec1372748+4)|0);
 var $1591=HEAPF32[(($arrayidx2749)>>2)];
 var $mul2750=($1590)*($1591);
 var $add2751=($mul2747)+($mul2750);
 var $mul2752=($1587)*($add2751);
 var $sub2753=($1586)-($mul2752);
 var $fRec1372754=(($this1+527232)|0);
 var $arrayidx2755=(($fRec1372754)|0);
 HEAPF32[(($arrayidx2755)>>2)]=$sub2753;
 var $fRec1372756=(($this1+527232)|0);
 var $arrayidx2757=(($fRec1372756+8)|0);
 var $1592=HEAPF32[(($arrayidx2757)>>2)];
 var $fRec1372758=(($this1+527232)|0);
 var $arrayidx2759=(($fRec1372758)|0);
 var $1593=HEAPF32[(($arrayidx2759)>>2)];
 var $fRec1372760=(($this1+527232)|0);
 var $arrayidx2761=(($fRec1372760+4)|0);
 var $1594=HEAPF32[(($arrayidx2761)>>2)];
 var $mul2762=($1594)*(2);
 var $add2763=($1593)+($mul2762);
 var $add2764=($1592)+($add2763);
 $fTemp75=$add2764;
 var $1595=$fSlow16;
 var $1596=$fTemp75;
 var $mul2765=($1595)*($1596);
 $fTemp76=$mul2765;
 var $1597=$fTemp76;
 var $fVec17=(($this1+527224)|0);
 var $arrayidx2766=(($fVec17)|0);
 HEAPF32[(($arrayidx2766)>>2)]=$1597;
 var $1598=$fSlow48;
 var $fRec136=(($this1+527216)|0);
 var $arrayidx2767=(($fRec136+4)|0);
 var $1599=HEAPF32[(($arrayidx2767)>>2)];
 var $mul2768=($1598)*($1599);
 var $1600=$fSlow49;
 var $1601=$fSlow51;
 var $fVec172769=(($this1+527224)|0);
 var $arrayidx2770=(($fVec172769+4)|0);
 var $1602=HEAPF32[(($arrayidx2770)>>2)];
 var $mul2771=($1601)*($1602);
 var $1603=$fSlow50;
 var $1604=$fTemp75;
 var $mul2772=($1603)*($1604);
 var $add2773=($mul2771)+($mul2772);
 var $mul2774=($1600)*($add2773);
 var $add2775=($mul2768)+($mul2774);
 var $fRec1362776=(($this1+527216)|0);
 var $arrayidx2777=(($fRec1362776)|0);
 HEAPF32[(($arrayidx2777)>>2)]=$add2775;
 var $fRec1362778=(($this1+527216)|0);
 var $arrayidx2779=(($fRec1362778)|0);
 var $1605=HEAPF32[(($arrayidx2779)>>2)];
 var $1606=$fSlow46;
 var $1607=$fSlow52;
 var $fRec135=(($this1+527204)|0);
 var $arrayidx2780=(($fRec135+8)|0);
 var $1608=HEAPF32[(($arrayidx2780)>>2)];
 var $mul2781=($1607)*($1608);
 var $1609=$fSlow30;
 var $fRec1352782=(($this1+527204)|0);
 var $arrayidx2783=(($fRec1352782+4)|0);
 var $1610=HEAPF32[(($arrayidx2783)>>2)];
 var $mul2784=($1609)*($1610);
 var $add2785=($mul2781)+($mul2784);
 var $mul2786=($1606)*($add2785);
 var $sub2787=($1605)-($mul2786);
 var $fRec1352788=(($this1+527204)|0);
 var $arrayidx2789=(($fRec1352788)|0);
 HEAPF32[(($arrayidx2789)>>2)]=$sub2787;
 var $1611=$fSlow36;
 var $fRec134=(($this1+527192)|0);
 var $arrayidx2790=(($fRec134+4)|0);
 var $1612=HEAPF32[(($arrayidx2790)>>2)];
 var $mul2791=($1611)*($1612);
 $fTemp77=$mul2791;
 var $1613=$fSlow46;
 var $1614=$fSlow29;
 var $fRec1352792=(($this1+527204)|0);
 var $arrayidx2793=(($fRec1352792)|0);
 var $1615=HEAPF32[(($arrayidx2793)>>2)];
 var $mul2794=($1614)*($1615);
 var $1616=$fSlow53;
 var $fRec1352795=(($this1+527204)|0);
 var $arrayidx2796=(($fRec1352795+4)|0);
 var $1617=HEAPF32[(($arrayidx2796)>>2)];
 var $mul2797=($1616)*($1617);
 var $add2798=($mul2794)+($mul2797);
 var $1618=$fSlow29;
 var $fRec1352799=(($this1+527204)|0);
 var $arrayidx2800=(($fRec1352799+8)|0);
 var $1619=HEAPF32[(($arrayidx2800)>>2)];
 var $mul2801=($1618)*($1619);
 var $add2802=($add2798)+($mul2801);
 var $mul2803=($1613)*($add2802);
 var $1620=$fSlow33;
 var $1621=$fSlow34;
 var $fRec1342804=(($this1+527192)|0);
 var $arrayidx2805=(($fRec1342804+8)|0);
 var $1622=HEAPF32[(($arrayidx2805)>>2)];
 var $mul2806=($1621)*($1622);
 var $1623=$fTemp77;
 var $add2807=($mul2806)+($1623);
 var $mul2808=($1620)*($add2807);
 var $sub2809=($mul2803)-($mul2808);
 var $fRec1342810=(($this1+527192)|0);
 var $arrayidx2811=(($fRec1342810)|0);
 HEAPF32[(($arrayidx2811)>>2)]=$sub2809;
 var $1624=$fSlow42;
 var $fRec133=(($this1+527180)|0);
 var $arrayidx2812=(($fRec133+4)|0);
 var $1625=HEAPF32[(($arrayidx2812)>>2)];
 var $mul2813=($1624)*($1625);
 $fTemp78=$mul2813;
 var $fRec1342814=(($this1+527192)|0);
 var $arrayidx2815=(($fRec1342814+8)|0);
 var $1626=HEAPF32[(($arrayidx2815)>>2)];
 var $1627=$fSlow33;
 var $1628=$fTemp77;
 var $1629=$fSlow34;
 var $fRec1342816=(($this1+527192)|0);
 var $arrayidx2817=(($fRec1342816)|0);
 var $1630=HEAPF32[(($arrayidx2817)>>2)];
 var $mul2818=($1629)*($1630);
 var $add2819=($1628)+($mul2818);
 var $mul2820=($1627)*($add2819);
 var $add2821=($1626)+($mul2820);
 var $1631=$fSlow39;
 var $1632=$fSlow40;
 var $fRec1332822=(($this1+527180)|0);
 var $arrayidx2823=(($fRec1332822+8)|0);
 var $1633=HEAPF32[(($arrayidx2823)>>2)];
 var $mul2824=($1632)*($1633);
 var $1634=$fTemp78;
 var $add2825=($mul2824)+($1634);
 var $mul2826=($1631)*($add2825);
 var $sub2827=($add2821)-($mul2826);
 var $fRec1332828=(($this1+527180)|0);
 var $arrayidx2829=(($fRec1332828)|0);
 HEAPF32[(($arrayidx2829)>>2)]=$sub2827;
 var $1635=$fSlow48;
 var $fRec143=(($this1+527172)|0);
 var $arrayidx2830=(($fRec143+4)|0);
 var $1636=HEAPF32[(($arrayidx2830)>>2)];
 var $mul2831=($1635)*($1636);
 var $1637=$fSlow49;
 var $fVec172832=(($this1+527224)|0);
 var $arrayidx2833=(($fVec172832+4)|0);
 var $1638=HEAPF32[(($arrayidx2833)>>2)];
 var $1639=$fTemp76;
 var $add2834=($1638)+($1639);
 var $mul2835=($1637)*($add2834);
 var $add2836=($mul2831)+($mul2835);
 var $fRec1432837=(($this1+527172)|0);
 var $arrayidx2838=(($fRec1432837)|0);
 HEAPF32[(($arrayidx2838)>>2)]=$add2836;
 var $fRec1432839=(($this1+527172)|0);
 var $arrayidx2840=(($fRec1432839)|0);
 var $1640=HEAPF32[(($arrayidx2840)>>2)];
 var $1641=$fSlow46;
 var $1642=$fSlow52;
 var $fRec142=(($this1+527160)|0);
 var $arrayidx2841=(($fRec142+8)|0);
 var $1643=HEAPF32[(($arrayidx2841)>>2)];
 var $mul2842=($1642)*($1643);
 var $1644=$fSlow30;
 var $fRec1422843=(($this1+527160)|0);
 var $arrayidx2844=(($fRec1422843+4)|0);
 var $1645=HEAPF32[(($arrayidx2844)>>2)];
 var $mul2845=($1644)*($1645);
 var $add2846=($mul2842)+($mul2845);
 var $mul2847=($1641)*($add2846);
 var $sub2848=($1640)-($mul2847);
 var $fRec1422849=(($this1+527160)|0);
 var $arrayidx2850=(($fRec1422849)|0);
 HEAPF32[(($arrayidx2850)>>2)]=$sub2848;
 var $fRec1422851=(($this1+527160)|0);
 var $arrayidx2852=(($fRec1422851+8)|0);
 var $1646=HEAPF32[(($arrayidx2852)>>2)];
 var $fRec1422853=(($this1+527160)|0);
 var $arrayidx2854=(($fRec1422853)|0);
 var $1647=HEAPF32[(($arrayidx2854)>>2)];
 var $fRec1422855=(($this1+527160)|0);
 var $arrayidx2856=(($fRec1422855+4)|0);
 var $1648=HEAPF32[(($arrayidx2856)>>2)];
 var $mul2857=($1648)*(2);
 var $add2858=($1647)+($mul2857);
 var $add2859=($1646)+($add2858);
 $fTemp79=$add2859;
 var $1649=$fSlow46;
 var $1650=$fTemp79;
 var $mul2860=($1649)*($1650);
 $fTemp80=$mul2860;
 var $1651=$fTemp80;
 var $fVec18=(($this1+527152)|0);
 var $arrayidx2861=(($fVec18)|0);
 HEAPF32[(($arrayidx2861)>>2)]=$1651;
 var $1652=$fSlow59;
 var $fRec141=(($this1+527144)|0);
 var $arrayidx2862=(($fRec141+4)|0);
 var $1653=HEAPF32[(($arrayidx2862)>>2)];
 var $mul2863=($1652)*($1653);
 var $1654=$fSlow60;
 var $1655=$fSlow62;
 var $fVec182864=(($this1+527152)|0);
 var $arrayidx2865=(($fVec182864+4)|0);
 var $1656=HEAPF32[(($arrayidx2865)>>2)];
 var $mul2866=($1655)*($1656);
 var $1657=$fSlow61;
 var $1658=$fTemp79;
 var $mul2867=($1657)*($1658);
 var $add2868=($mul2866)+($mul2867);
 var $mul2869=($1654)*($add2868);
 var $add2870=($mul2863)+($mul2869);
 var $fRec1412871=(($this1+527144)|0);
 var $arrayidx2872=(($fRec1412871)|0);
 HEAPF32[(($arrayidx2872)>>2)]=$add2870;
 var $fRec1412873=(($this1+527144)|0);
 var $arrayidx2874=(($fRec1412873)|0);
 var $1659=HEAPF32[(($arrayidx2874)>>2)];
 var $1660=$fSlow57;
 var $1661=$fSlow63;
 var $fRec140=(($this1+527132)|0);
 var $arrayidx2875=(($fRec140+8)|0);
 var $1662=HEAPF32[(($arrayidx2875)>>2)];
 var $mul2876=($1661)*($1662);
 var $1663=$fSlow36;
 var $fRec1402877=(($this1+527132)|0);
 var $arrayidx2878=(($fRec1402877+4)|0);
 var $1664=HEAPF32[(($arrayidx2878)>>2)];
 var $mul2879=($1663)*($1664);
 var $add2880=($mul2876)+($mul2879);
 var $mul2881=($1660)*($add2880);
 var $sub2882=($1659)-($mul2881);
 var $fRec1402883=(($this1+527132)|0);
 var $arrayidx2884=(($fRec1402883)|0);
 HEAPF32[(($arrayidx2884)>>2)]=$sub2882;
 var $1665=$fSlow42;
 var $fRec139=(($this1+527120)|0);
 var $arrayidx2885=(($fRec139+4)|0);
 var $1666=HEAPF32[(($arrayidx2885)>>2)];
 var $mul2886=($1665)*($1666);
 $fTemp81=$mul2886;
 var $1667=$fSlow57;
 var $1668=$fSlow35;
 var $fRec1402887=(($this1+527132)|0);
 var $arrayidx2888=(($fRec1402887)|0);
 var $1669=HEAPF32[(($arrayidx2888)>>2)];
 var $mul2889=($1668)*($1669);
 var $1670=$fSlow64;
 var $fRec1402890=(($this1+527132)|0);
 var $arrayidx2891=(($fRec1402890+4)|0);
 var $1671=HEAPF32[(($arrayidx2891)>>2)];
 var $mul2892=($1670)*($1671);
 var $add2893=($mul2889)+($mul2892);
 var $1672=$fSlow35;
 var $fRec1402894=(($this1+527132)|0);
 var $arrayidx2895=(($fRec1402894+8)|0);
 var $1673=HEAPF32[(($arrayidx2895)>>2)];
 var $mul2896=($1672)*($1673);
 var $add2897=($add2893)+($mul2896);
 var $mul2898=($1667)*($add2897);
 var $1674=$fSlow39;
 var $1675=$fSlow40;
 var $fRec1392899=(($this1+527120)|0);
 var $arrayidx2900=(($fRec1392899+8)|0);
 var $1676=HEAPF32[(($arrayidx2900)>>2)];
 var $mul2901=($1675)*($1676);
 var $1677=$fTemp81;
 var $add2902=($mul2901)+($1677);
 var $mul2903=($1674)*($add2902);
 var $sub2904=($mul2898)-($mul2903);
 var $fRec1392905=(($this1+527120)|0);
 var $arrayidx2906=(($fRec1392905)|0);
 HEAPF32[(($arrayidx2906)>>2)]=$sub2904;
 var $1678=$fSlow59;
 var $fRec147=(($this1+527112)|0);
 var $arrayidx2907=(($fRec147+4)|0);
 var $1679=HEAPF32[(($arrayidx2907)>>2)];
 var $mul2908=($1678)*($1679);
 var $1680=$fSlow60;
 var $fVec182909=(($this1+527152)|0);
 var $arrayidx2910=(($fVec182909+4)|0);
 var $1681=HEAPF32[(($arrayidx2910)>>2)];
 var $1682=$fTemp80;
 var $add2911=($1681)+($1682);
 var $mul2912=($1680)*($add2911);
 var $add2913=($mul2908)+($mul2912);
 var $fRec1472914=(($this1+527112)|0);
 var $arrayidx2915=(($fRec1472914)|0);
 HEAPF32[(($arrayidx2915)>>2)]=$add2913;
 var $fRec1472916=(($this1+527112)|0);
 var $arrayidx2917=(($fRec1472916)|0);
 var $1683=HEAPF32[(($arrayidx2917)>>2)];
 var $1684=$fSlow57;
 var $1685=$fSlow63;
 var $fRec146=(($this1+527100)|0);
 var $arrayidx2918=(($fRec146+8)|0);
 var $1686=HEAPF32[(($arrayidx2918)>>2)];
 var $mul2919=($1685)*($1686);
 var $1687=$fSlow36;
 var $fRec1462920=(($this1+527100)|0);
 var $arrayidx2921=(($fRec1462920+4)|0);
 var $1688=HEAPF32[(($arrayidx2921)>>2)];
 var $mul2922=($1687)*($1688);
 var $add2923=($mul2919)+($mul2922);
 var $mul2924=($1684)*($add2923);
 var $sub2925=($1683)-($mul2924);
 var $fRec1462926=(($this1+527100)|0);
 var $arrayidx2927=(($fRec1462926)|0);
 HEAPF32[(($arrayidx2927)>>2)]=$sub2925;
 var $fRec1462928=(($this1+527100)|0);
 var $arrayidx2929=(($fRec1462928+8)|0);
 var $1689=HEAPF32[(($arrayidx2929)>>2)];
 var $fRec1462930=(($this1+527100)|0);
 var $arrayidx2931=(($fRec1462930)|0);
 var $1690=HEAPF32[(($arrayidx2931)>>2)];
 var $fRec1462932=(($this1+527100)|0);
 var $arrayidx2933=(($fRec1462932+4)|0);
 var $1691=HEAPF32[(($arrayidx2933)>>2)];
 var $mul2934=($1691)*(2);
 var $add2935=($1690)+($mul2934);
 var $add2936=($1689)+($add2935);
 $fTemp82=$add2936;
 var $1692=$fSlow57;
 var $1693=$fTemp82;
 var $mul2937=($1692)*($1693);
 $fTemp83=$mul2937;
 var $1694=$fTemp83;
 var $fVec19=(($this1+527092)|0);
 var $arrayidx2938=(($fVec19)|0);
 HEAPF32[(($arrayidx2938)>>2)]=$1694;
 var $1695=$fSlow69;
 var $fRec145=(($this1+527084)|0);
 var $arrayidx2939=(($fRec145+4)|0);
 var $1696=HEAPF32[(($arrayidx2939)>>2)];
 var $mul2940=($1695)*($1696);
 var $1697=$fSlow70;
 var $fVec192941=(($this1+527092)|0);
 var $arrayidx2942=(($fVec192941+4)|0);
 var $1698=HEAPF32[(($arrayidx2942)>>2)];
 var $1699=$fTemp83;
 var $add2943=($1698)+($1699);
 var $mul2944=($1697)*($add2943);
 var $add2945=($mul2940)+($mul2944);
 var $fRec1452946=(($this1+527084)|0);
 var $arrayidx2947=(($fRec1452946)|0);
 HEAPF32[(($arrayidx2947)>>2)]=$add2945;
 var $fRec1452948=(($this1+527084)|0);
 var $arrayidx2949=(($fRec1452948)|0);
 var $1700=HEAPF32[(($arrayidx2949)>>2)];
 var $1701=$fSlow65;
 var $1702=$fSlow71;
 var $fRec144=(($this1+527072)|0);
 var $arrayidx2950=(($fRec144+8)|0);
 var $1703=HEAPF32[(($arrayidx2950)>>2)];
 var $mul2951=($1702)*($1703);
 var $1704=$fSlow42;
 var $fRec1442952=(($this1+527072)|0);
 var $arrayidx2953=(($fRec1442952+4)|0);
 var $1705=HEAPF32[(($arrayidx2953)>>2)];
 var $mul2954=($1704)*($1705);
 var $add2955=($mul2951)+($mul2954);
 var $mul2956=($1701)*($add2955);
 var $sub2957=($1700)-($mul2956);
 var $fRec1442958=(($this1+527072)|0);
 var $arrayidx2959=(($fRec1442958)|0);
 HEAPF32[(($arrayidx2959)>>2)]=$sub2957;
 var $1706=$fSlow69;
 var $fRec149=(($this1+527064)|0);
 var $arrayidx2960=(($fRec149+4)|0);
 var $1707=HEAPF32[(($arrayidx2960)>>2)];
 var $mul2961=($1706)*($1707);
 var $1708=$fSlow70;
 var $1709=$fSlow75;
 var $fVec192962=(($this1+527092)|0);
 var $arrayidx2963=(($fVec192962+4)|0);
 var $1710=HEAPF32[(($arrayidx2963)>>2)];
 var $mul2964=($1709)*($1710);
 var $1711=$fSlow74;
 var $1712=$fTemp82;
 var $mul2965=($1711)*($1712);
 var $add2966=($mul2964)+($mul2965);
 var $mul2967=($1708)*($add2966);
 var $add2968=($mul2961)+($mul2967);
 var $fRec1492969=(($this1+527064)|0);
 var $arrayidx2970=(($fRec1492969)|0);
 HEAPF32[(($arrayidx2970)>>2)]=$add2968;
 var $fRec1492971=(($this1+527064)|0);
 var $arrayidx2972=(($fRec1492971)|0);
 var $1713=HEAPF32[(($arrayidx2972)>>2)];
 var $1714=$fSlow65;
 var $1715=$fSlow71;
 var $fRec148=(($this1+527052)|0);
 var $arrayidx2973=(($fRec148+8)|0);
 var $1716=HEAPF32[(($arrayidx2973)>>2)];
 var $mul2974=($1715)*($1716);
 var $1717=$fSlow42;
 var $fRec1482975=(($this1+527052)|0);
 var $arrayidx2976=(($fRec1482975+4)|0);
 var $1718=HEAPF32[(($arrayidx2976)>>2)];
 var $mul2977=($1717)*($1718);
 var $add2978=($mul2974)+($mul2977);
 var $mul2979=($1714)*($add2978);
 var $sub2980=($1713)-($mul2979);
 var $fRec1482981=(($this1+527052)|0);
 var $arrayidx2982=(($fRec1482981)|0);
 HEAPF32[(($arrayidx2982)>>2)]=$sub2980;
 var $1719=$fSlow107;
 var $fRec1282983=(($this1+527252)|0);
 var $arrayidx2984=(($fRec1282983+8)|0);
 var $1720=HEAPF32[(($arrayidx2984)>>2)];
 var $1721=$fSlow39;
 var $1722=$fTemp74;
 var $1723=$fSlow40;
 var $fRec1282985=(($this1+527252)|0);
 var $arrayidx2986=(($fRec1282985)|0);
 var $1724=HEAPF32[(($arrayidx2986)>>2)];
 var $mul2987=($1723)*($1724);
 var $add2988=($1722)+($mul2987);
 var $mul2989=($1721)*($add2988);
 var $add2990=($1720)+($mul2989);
 var $mul2991=($1719)*($add2990);
 var $1725=$fSlow108;
 var $fRec1332992=(($this1+527180)|0);
 var $arrayidx2993=(($fRec1332992+8)|0);
 var $1726=HEAPF32[(($arrayidx2993)>>2)];
 var $1727=$fSlow39;
 var $1728=$fTemp78;
 var $1729=$fSlow40;
 var $fRec1332994=(($this1+527180)|0);
 var $arrayidx2995=(($fRec1332994)|0);
 var $1730=HEAPF32[(($arrayidx2995)>>2)];
 var $mul2996=($1729)*($1730);
 var $add2997=($1728)+($mul2996);
 var $mul2998=($1727)*($add2997);
 var $add2999=($1726)+($mul2998);
 var $mul3000=($1725)*($add2999);
 var $add3001=($mul2991)+($mul3000);
 var $1731=$fSlow109;
 var $fRec1393002=(($this1+527120)|0);
 var $arrayidx3003=(($fRec1393002+8)|0);
 var $1732=HEAPF32[(($arrayidx3003)>>2)];
 var $1733=$fSlow39;
 var $1734=$fTemp81;
 var $1735=$fSlow40;
 var $fRec1393004=(($this1+527120)|0);
 var $arrayidx3005=(($fRec1393004)|0);
 var $1736=HEAPF32[(($arrayidx3005)>>2)];
 var $mul3006=($1735)*($1736);
 var $add3007=($1734)+($mul3006);
 var $mul3008=($1733)*($add3007);
 var $add3009=($1732)+($mul3008);
 var $mul3010=($1731)*($add3009);
 var $add3011=($add3001)+($mul3010);
 var $1737=$fSlow65;
 var $1738=$fSlow110;
 var $fRec1443012=(($this1+527072)|0);
 var $arrayidx3013=(($fRec1443012+8)|0);
 var $1739=HEAPF32[(($arrayidx3013)>>2)];
 var $fRec1443014=(($this1+527072)|0);
 var $arrayidx3015=(($fRec1443014)|0);
 var $1740=HEAPF32[(($arrayidx3015)>>2)];
 var $fRec1443016=(($this1+527072)|0);
 var $arrayidx3017=(($fRec1443016+4)|0);
 var $1741=HEAPF32[(($arrayidx3017)>>2)];
 var $mul3018=($1741)*(2);
 var $add3019=($1740)+($mul3018);
 var $add3020=($1739)+($add3019);
 var $mul3021=($1738)*($add3020);
 var $1742=$fSlow111;
 var $1743=$fSlow41;
 var $fRec1483022=(($this1+527052)|0);
 var $arrayidx3023=(($fRec1483022)|0);
 var $1744=HEAPF32[(($arrayidx3023)>>2)];
 var $mul3024=($1743)*($1744);
 var $1745=$fSlow76;
 var $fRec1483025=(($this1+527052)|0);
 var $arrayidx3026=(($fRec1483025+4)|0);
 var $1746=HEAPF32[(($arrayidx3026)>>2)];
 var $mul3027=($1745)*($1746);
 var $add3028=($mul3024)+($mul3027);
 var $1747=$fSlow41;
 var $fRec1483029=(($this1+527052)|0);
 var $arrayidx3030=(($fRec1483029+8)|0);
 var $1748=HEAPF32[(($arrayidx3030)>>2)];
 var $mul3031=($1747)*($1748);
 var $add3032=($add3028)+($mul3031);
 var $mul3033=($1742)*($add3032);
 var $add3034=($mul3021)+($mul3033);
 var $mul3035=($1737)*($add3034);
 var $add3036=($add3011)+($mul3035);
 $fTemp84=$add3036;
 var $1749=$fTemp71;
 var $1750=$fTemp84;
 var $add3037=($1749)+($1750);
 $fTemp85=$add3037;
 var $1751=$fSlow19;
 var $fRec154=(($this1+527044)|0);
 var $arrayidx3038=(($fRec154+4)|0);
 var $1752=HEAPF32[(($arrayidx3038)>>2)];
 var $mul3039=($1751)*($1752);
 var $1753=$fSlow20;
 var $1754=$fSlow14;
 var $fRec6=(($this1+295024)|0);
 var $arrayidx3040=(($fRec6+4)|0);
 var $1755=HEAPF32[(($arrayidx3040)>>2)];
 var $mul3041=($1754)*($1755);
 var $1756=$fSlow21;
 var $fRec63042=(($this1+295024)|0);
 var $arrayidx3043=(($fRec63042+8)|0);
 var $1757=HEAPF32[(($arrayidx3043)>>2)];
 var $mul3044=($1756)*($1757);
 var $add3045=($mul3041)+($mul3044);
 var $mul3046=($1753)*($add3045);
 var $add3047=($mul3039)+($mul3046);
 var $fRec1543048=(($this1+527044)|0);
 var $arrayidx3049=(($fRec1543048)|0);
 HEAPF32[(($arrayidx3049)>>2)]=$add3047;
 var $fRec1543050=(($this1+527044)|0);
 var $arrayidx3051=(($fRec1543050)|0);
 var $1758=HEAPF32[(($arrayidx3051)>>2)];
 var $1759=$fSlow16;
 var $1760=$fSlow22;
 var $fRec153=(($this1+527032)|0);
 var $arrayidx3052=(($fRec153+8)|0);
 var $1761=HEAPF32[(($arrayidx3052)>>2)];
 var $mul3053=($1760)*($1761);
 var $1762=$fSlow23;
 var $fRec1533054=(($this1+527032)|0);
 var $arrayidx3055=(($fRec1533054+4)|0);
 var $1763=HEAPF32[(($arrayidx3055)>>2)];
 var $mul3056=($1762)*($1763);
 var $add3057=($mul3053)+($mul3056);
 var $mul3058=($1759)*($add3057);
 var $sub3059=($1758)-($mul3058);
 var $fRec1533060=(($this1+527032)|0);
 var $arrayidx3061=(($fRec1533060)|0);
 HEAPF32[(($arrayidx3061)>>2)]=$sub3059;
 var $1764=$fSlow30;
 var $fRec152=(($this1+527020)|0);
 var $arrayidx3062=(($fRec152+4)|0);
 var $1765=HEAPF32[(($arrayidx3062)>>2)];
 var $mul3063=($1764)*($1765);
 $fTemp86=$mul3063;
 var $1766=$fSlow16;
 var $1767=$fSlow17;
 var $fRec1533064=(($this1+527032)|0);
 var $arrayidx3065=(($fRec1533064)|0);
 var $1768=HEAPF32[(($arrayidx3065)>>2)];
 var $mul3066=($1767)*($1768);
 var $1769=$fSlow24;
 var $fRec1533067=(($this1+527032)|0);
 var $arrayidx3068=(($fRec1533067+4)|0);
 var $1770=HEAPF32[(($arrayidx3068)>>2)];
 var $mul3069=($1769)*($1770);
 var $add3070=($mul3066)+($mul3069);
 var $1771=$fSlow17;
 var $fRec1533071=(($this1+527032)|0);
 var $arrayidx3072=(($fRec1533071+8)|0);
 var $1772=HEAPF32[(($arrayidx3072)>>2)];
 var $mul3073=($1771)*($1772);
 var $add3074=($add3070)+($mul3073);
 var $mul3075=($1766)*($add3074);
 var $1773=$fSlow27;
 var $1774=$fSlow28;
 var $fRec1523076=(($this1+527020)|0);
 var $arrayidx3077=(($fRec1523076+8)|0);
 var $1775=HEAPF32[(($arrayidx3077)>>2)];
 var $mul3078=($1774)*($1775);
 var $1776=$fTemp86;
 var $add3079=($mul3078)+($1776);
 var $mul3080=($1773)*($add3079);
 var $sub3081=($mul3075)-($mul3080);
 var $fRec1523082=(($this1+527020)|0);
 var $arrayidx3083=(($fRec1523082)|0);
 HEAPF32[(($arrayidx3083)>>2)]=$sub3081;
 var $1777=$fSlow36;
 var $fRec151=(($this1+527008)|0);
 var $arrayidx3084=(($fRec151+4)|0);
 var $1778=HEAPF32[(($arrayidx3084)>>2)];
 var $mul3085=($1777)*($1778);
 $fTemp87=$mul3085;
 var $fRec1523086=(($this1+527020)|0);
 var $arrayidx3087=(($fRec1523086+8)|0);
 var $1779=HEAPF32[(($arrayidx3087)>>2)];
 var $1780=$fSlow27;
 var $1781=$fTemp86;
 var $1782=$fSlow28;
 var $fRec1523088=(($this1+527020)|0);
 var $arrayidx3089=(($fRec1523088)|0);
 var $1783=HEAPF32[(($arrayidx3089)>>2)];
 var $mul3090=($1782)*($1783);
 var $add3091=($1781)+($mul3090);
 var $mul3092=($1780)*($add3091);
 var $add3093=($1779)+($mul3092);
 var $1784=$fSlow33;
 var $1785=$fSlow34;
 var $fRec1513094=(($this1+527008)|0);
 var $arrayidx3095=(($fRec1513094+8)|0);
 var $1786=HEAPF32[(($arrayidx3095)>>2)];
 var $mul3096=($1785)*($1786);
 var $1787=$fTemp87;
 var $add3097=($mul3096)+($1787);
 var $mul3098=($1784)*($add3097);
 var $sub3099=($add3093)-($mul3098);
 var $fRec1513100=(($this1+527008)|0);
 var $arrayidx3101=(($fRec1513100)|0);
 HEAPF32[(($arrayidx3101)>>2)]=$sub3099;
 var $1788=$fSlow42;
 var $fRec150=(($this1+526996)|0);
 var $arrayidx3102=(($fRec150+4)|0);
 var $1789=HEAPF32[(($arrayidx3102)>>2)];
 var $mul3103=($1788)*($1789);
 $fTemp88=$mul3103;
 var $fRec1513104=(($this1+527008)|0);
 var $arrayidx3105=(($fRec1513104+8)|0);
 var $1790=HEAPF32[(($arrayidx3105)>>2)];
 var $1791=$fSlow33;
 var $1792=$fTemp87;
 var $1793=$fSlow34;
 var $fRec1513106=(($this1+527008)|0);
 var $arrayidx3107=(($fRec1513106)|0);
 var $1794=HEAPF32[(($arrayidx3107)>>2)];
 var $mul3108=($1793)*($1794);
 var $add3109=($1792)+($mul3108);
 var $mul3110=($1791)*($add3109);
 var $add3111=($1790)+($mul3110);
 var $1795=$fSlow39;
 var $1796=$fSlow40;
 var $fRec1503112=(($this1+526996)|0);
 var $arrayidx3113=(($fRec1503112+8)|0);
 var $1797=HEAPF32[(($arrayidx3113)>>2)];
 var $mul3114=($1796)*($1797);
 var $1798=$fTemp88;
 var $add3115=($mul3114)+($1798);
 var $mul3116=($1795)*($add3115);
 var $sub3117=($add3111)-($mul3116);
 var $fRec1503118=(($this1+526996)|0);
 var $arrayidx3119=(($fRec1503118)|0);
 HEAPF32[(($arrayidx3119)>>2)]=$sub3117;
 var $1799=$fSlow19;
 var $fRec160=(($this1+526988)|0);
 var $arrayidx3120=(($fRec160+4)|0);
 var $1800=HEAPF32[(($arrayidx3120)>>2)];
 var $mul3121=($1799)*($1800);
 var $1801=$fSlow20;
 var $fRec63122=(($this1+295024)|0);
 var $arrayidx3123=(($fRec63122+4)|0);
 var $1802=HEAPF32[(($arrayidx3123)>>2)];
 var $fRec63124=(($this1+295024)|0);
 var $arrayidx3125=(($fRec63124+8)|0);
 var $1803=HEAPF32[(($arrayidx3125)>>2)];
 var $add3126=($1802)+($1803);
 var $mul3127=($1801)*($add3126);
 var $add3128=($mul3121)+($mul3127);
 var $fRec1603129=(($this1+526988)|0);
 var $arrayidx3130=(($fRec1603129)|0);
 HEAPF32[(($arrayidx3130)>>2)]=$add3128;
 var $fRec1603131=(($this1+526988)|0);
 var $arrayidx3132=(($fRec1603131)|0);
 var $1804=HEAPF32[(($arrayidx3132)>>2)];
 var $1805=$fSlow16;
 var $1806=$fSlow22;
 var $fRec159=(($this1+526976)|0);
 var $arrayidx3133=(($fRec159+8)|0);
 var $1807=HEAPF32[(($arrayidx3133)>>2)];
 var $mul3134=($1806)*($1807);
 var $1808=$fSlow23;
 var $fRec1593135=(($this1+526976)|0);
 var $arrayidx3136=(($fRec1593135+4)|0);
 var $1809=HEAPF32[(($arrayidx3136)>>2)];
 var $mul3137=($1808)*($1809);
 var $add3138=($mul3134)+($mul3137);
 var $mul3139=($1805)*($add3138);
 var $sub3140=($1804)-($mul3139);
 var $fRec1593141=(($this1+526976)|0);
 var $arrayidx3142=(($fRec1593141)|0);
 HEAPF32[(($arrayidx3142)>>2)]=$sub3140;
 var $fRec1593143=(($this1+526976)|0);
 var $arrayidx3144=(($fRec1593143+8)|0);
 var $1810=HEAPF32[(($arrayidx3144)>>2)];
 var $fRec1593145=(($this1+526976)|0);
 var $arrayidx3146=(($fRec1593145)|0);
 var $1811=HEAPF32[(($arrayidx3146)>>2)];
 var $fRec1593147=(($this1+526976)|0);
 var $arrayidx3148=(($fRec1593147+4)|0);
 var $1812=HEAPF32[(($arrayidx3148)>>2)];
 var $mul3149=($1812)*(2);
 var $add3150=($1811)+($mul3149);
 var $add3151=($1810)+($add3150);
 $fTemp89=$add3151;
 var $1813=$fSlow16;
 var $1814=$fTemp89;
 var $mul3152=($1813)*($1814);
 $fTemp90=$mul3152;
 var $1815=$fTemp90;
 var $fVec20=(($this1+526968)|0);
 var $arrayidx3153=(($fVec20)|0);
 HEAPF32[(($arrayidx3153)>>2)]=$1815;
 var $1816=$fSlow48;
 var $fRec158=(($this1+526960)|0);
 var $arrayidx3154=(($fRec158+4)|0);
 var $1817=HEAPF32[(($arrayidx3154)>>2)];
 var $mul3155=($1816)*($1817);
 var $1818=$fSlow49;
 var $1819=$fSlow51;
 var $fVec203156=(($this1+526968)|0);
 var $arrayidx3157=(($fVec203156+4)|0);
 var $1820=HEAPF32[(($arrayidx3157)>>2)];
 var $mul3158=($1819)*($1820);
 var $1821=$fSlow50;
 var $1822=$fTemp89;
 var $mul3159=($1821)*($1822);
 var $add3160=($mul3158)+($mul3159);
 var $mul3161=($1818)*($add3160);
 var $add3162=($mul3155)+($mul3161);
 var $fRec1583163=(($this1+526960)|0);
 var $arrayidx3164=(($fRec1583163)|0);
 HEAPF32[(($arrayidx3164)>>2)]=$add3162;
 var $fRec1583165=(($this1+526960)|0);
 var $arrayidx3166=(($fRec1583165)|0);
 var $1823=HEAPF32[(($arrayidx3166)>>2)];
 var $1824=$fSlow46;
 var $1825=$fSlow52;
 var $fRec157=(($this1+526948)|0);
 var $arrayidx3167=(($fRec157+8)|0);
 var $1826=HEAPF32[(($arrayidx3167)>>2)];
 var $mul3168=($1825)*($1826);
 var $1827=$fSlow30;
 var $fRec1573169=(($this1+526948)|0);
 var $arrayidx3170=(($fRec1573169+4)|0);
 var $1828=HEAPF32[(($arrayidx3170)>>2)];
 var $mul3171=($1827)*($1828);
 var $add3172=($mul3168)+($mul3171);
 var $mul3173=($1824)*($add3172);
 var $sub3174=($1823)-($mul3173);
 var $fRec1573175=(($this1+526948)|0);
 var $arrayidx3176=(($fRec1573175)|0);
 HEAPF32[(($arrayidx3176)>>2)]=$sub3174;
 var $1829=$fSlow36;
 var $fRec156=(($this1+526936)|0);
 var $arrayidx3177=(($fRec156+4)|0);
 var $1830=HEAPF32[(($arrayidx3177)>>2)];
 var $mul3178=($1829)*($1830);
 $fTemp91=$mul3178;
 var $1831=$fSlow46;
 var $1832=$fSlow29;
 var $fRec1573179=(($this1+526948)|0);
 var $arrayidx3180=(($fRec1573179)|0);
 var $1833=HEAPF32[(($arrayidx3180)>>2)];
 var $mul3181=($1832)*($1833);
 var $1834=$fSlow53;
 var $fRec1573182=(($this1+526948)|0);
 var $arrayidx3183=(($fRec1573182+4)|0);
 var $1835=HEAPF32[(($arrayidx3183)>>2)];
 var $mul3184=($1834)*($1835);
 var $add3185=($mul3181)+($mul3184);
 var $1836=$fSlow29;
 var $fRec1573186=(($this1+526948)|0);
 var $arrayidx3187=(($fRec1573186+8)|0);
 var $1837=HEAPF32[(($arrayidx3187)>>2)];
 var $mul3188=($1836)*($1837);
 var $add3189=($add3185)+($mul3188);
 var $mul3190=($1831)*($add3189);
 var $1838=$fSlow33;
 var $1839=$fSlow34;
 var $fRec1563191=(($this1+526936)|0);
 var $arrayidx3192=(($fRec1563191+8)|0);
 var $1840=HEAPF32[(($arrayidx3192)>>2)];
 var $mul3193=($1839)*($1840);
 var $1841=$fTemp91;
 var $add3194=($mul3193)+($1841);
 var $mul3195=($1838)*($add3194);
 var $sub3196=($mul3190)-($mul3195);
 var $fRec1563197=(($this1+526936)|0);
 var $arrayidx3198=(($fRec1563197)|0);
 HEAPF32[(($arrayidx3198)>>2)]=$sub3196;
 var $1842=$fSlow42;
 var $fRec155=(($this1+526924)|0);
 var $arrayidx3199=(($fRec155+4)|0);
 var $1843=HEAPF32[(($arrayidx3199)>>2)];
 var $mul3200=($1842)*($1843);
 $fTemp92=$mul3200;
 var $fRec1563201=(($this1+526936)|0);
 var $arrayidx3202=(($fRec1563201+8)|0);
 var $1844=HEAPF32[(($arrayidx3202)>>2)];
 var $1845=$fSlow33;
 var $1846=$fTemp91;
 var $1847=$fSlow34;
 var $fRec1563203=(($this1+526936)|0);
 var $arrayidx3204=(($fRec1563203)|0);
 var $1848=HEAPF32[(($arrayidx3204)>>2)];
 var $mul3205=($1847)*($1848);
 var $add3206=($1846)+($mul3205);
 var $mul3207=($1845)*($add3206);
 var $add3208=($1844)+($mul3207);
 var $1849=$fSlow39;
 var $1850=$fSlow40;
 var $fRec1553209=(($this1+526924)|0);
 var $arrayidx3210=(($fRec1553209+8)|0);
 var $1851=HEAPF32[(($arrayidx3210)>>2)];
 var $mul3211=($1850)*($1851);
 var $1852=$fTemp92;
 var $add3212=($mul3211)+($1852);
 var $mul3213=($1849)*($add3212);
 var $sub3214=($add3208)-($mul3213);
 var $fRec1553215=(($this1+526924)|0);
 var $arrayidx3216=(($fRec1553215)|0);
 HEAPF32[(($arrayidx3216)>>2)]=$sub3214;
 var $1853=$fSlow48;
 var $fRec165=(($this1+526916)|0);
 var $arrayidx3217=(($fRec165+4)|0);
 var $1854=HEAPF32[(($arrayidx3217)>>2)];
 var $mul3218=($1853)*($1854);
 var $1855=$fSlow49;
 var $fVec203219=(($this1+526968)|0);
 var $arrayidx3220=(($fVec203219+4)|0);
 var $1856=HEAPF32[(($arrayidx3220)>>2)];
 var $1857=$fTemp90;
 var $add3221=($1856)+($1857);
 var $mul3222=($1855)*($add3221);
 var $add3223=($mul3218)+($mul3222);
 var $fRec1653224=(($this1+526916)|0);
 var $arrayidx3225=(($fRec1653224)|0);
 HEAPF32[(($arrayidx3225)>>2)]=$add3223;
 var $fRec1653226=(($this1+526916)|0);
 var $arrayidx3227=(($fRec1653226)|0);
 var $1858=HEAPF32[(($arrayidx3227)>>2)];
 var $1859=$fSlow46;
 var $1860=$fSlow52;
 var $fRec164=(($this1+526904)|0);
 var $arrayidx3228=(($fRec164+8)|0);
 var $1861=HEAPF32[(($arrayidx3228)>>2)];
 var $mul3229=($1860)*($1861);
 var $1862=$fSlow30;
 var $fRec1643230=(($this1+526904)|0);
 var $arrayidx3231=(($fRec1643230+4)|0);
 var $1863=HEAPF32[(($arrayidx3231)>>2)];
 var $mul3232=($1862)*($1863);
 var $add3233=($mul3229)+($mul3232);
 var $mul3234=($1859)*($add3233);
 var $sub3235=($1858)-($mul3234);
 var $fRec1643236=(($this1+526904)|0);
 var $arrayidx3237=(($fRec1643236)|0);
 HEAPF32[(($arrayidx3237)>>2)]=$sub3235;
 var $fRec1643238=(($this1+526904)|0);
 var $arrayidx3239=(($fRec1643238+8)|0);
 var $1864=HEAPF32[(($arrayidx3239)>>2)];
 var $fRec1643240=(($this1+526904)|0);
 var $arrayidx3241=(($fRec1643240)|0);
 var $1865=HEAPF32[(($arrayidx3241)>>2)];
 var $fRec1643242=(($this1+526904)|0);
 var $arrayidx3243=(($fRec1643242+4)|0);
 var $1866=HEAPF32[(($arrayidx3243)>>2)];
 var $mul3244=($1866)*(2);
 var $add3245=($1865)+($mul3244);
 var $add3246=($1864)+($add3245);
 $fTemp93=$add3246;
 var $1867=$fSlow46;
 var $1868=$fTemp93;
 var $mul3247=($1867)*($1868);
 $fTemp94=$mul3247;
 var $1869=$fTemp94;
 var $fVec21=(($this1+526896)|0);
 var $arrayidx3248=(($fVec21)|0);
 HEAPF32[(($arrayidx3248)>>2)]=$1869;
 var $1870=$fSlow59;
 var $fRec163=(($this1+526888)|0);
 var $arrayidx3249=(($fRec163+4)|0);
 var $1871=HEAPF32[(($arrayidx3249)>>2)];
 var $mul3250=($1870)*($1871);
 var $1872=$fSlow60;
 var $1873=$fSlow62;
 var $fVec213251=(($this1+526896)|0);
 var $arrayidx3252=(($fVec213251+4)|0);
 var $1874=HEAPF32[(($arrayidx3252)>>2)];
 var $mul3253=($1873)*($1874);
 var $1875=$fSlow61;
 var $1876=$fTemp93;
 var $mul3254=($1875)*($1876);
 var $add3255=($mul3253)+($mul3254);
 var $mul3256=($1872)*($add3255);
 var $add3257=($mul3250)+($mul3256);
 var $fRec1633258=(($this1+526888)|0);
 var $arrayidx3259=(($fRec1633258)|0);
 HEAPF32[(($arrayidx3259)>>2)]=$add3257;
 var $fRec1633260=(($this1+526888)|0);
 var $arrayidx3261=(($fRec1633260)|0);
 var $1877=HEAPF32[(($arrayidx3261)>>2)];
 var $1878=$fSlow57;
 var $1879=$fSlow63;
 var $fRec162=(($this1+526876)|0);
 var $arrayidx3262=(($fRec162+8)|0);
 var $1880=HEAPF32[(($arrayidx3262)>>2)];
 var $mul3263=($1879)*($1880);
 var $1881=$fSlow36;
 var $fRec1623264=(($this1+526876)|0);
 var $arrayidx3265=(($fRec1623264+4)|0);
 var $1882=HEAPF32[(($arrayidx3265)>>2)];
 var $mul3266=($1881)*($1882);
 var $add3267=($mul3263)+($mul3266);
 var $mul3268=($1878)*($add3267);
 var $sub3269=($1877)-($mul3268);
 var $fRec1623270=(($this1+526876)|0);
 var $arrayidx3271=(($fRec1623270)|0);
 HEAPF32[(($arrayidx3271)>>2)]=$sub3269;
 var $1883=$fSlow42;
 var $fRec161=(($this1+526864)|0);
 var $arrayidx3272=(($fRec161+4)|0);
 var $1884=HEAPF32[(($arrayidx3272)>>2)];
 var $mul3273=($1883)*($1884);
 $fTemp95=$mul3273;
 var $1885=$fSlow57;
 var $1886=$fSlow35;
 var $fRec1623274=(($this1+526876)|0);
 var $arrayidx3275=(($fRec1623274)|0);
 var $1887=HEAPF32[(($arrayidx3275)>>2)];
 var $mul3276=($1886)*($1887);
 var $1888=$fSlow64;
 var $fRec1623277=(($this1+526876)|0);
 var $arrayidx3278=(($fRec1623277+4)|0);
 var $1889=HEAPF32[(($arrayidx3278)>>2)];
 var $mul3279=($1888)*($1889);
 var $add3280=($mul3276)+($mul3279);
 var $1890=$fSlow35;
 var $fRec1623281=(($this1+526876)|0);
 var $arrayidx3282=(($fRec1623281+8)|0);
 var $1891=HEAPF32[(($arrayidx3282)>>2)];
 var $mul3283=($1890)*($1891);
 var $add3284=($add3280)+($mul3283);
 var $mul3285=($1885)*($add3284);
 var $1892=$fSlow39;
 var $1893=$fSlow40;
 var $fRec1613286=(($this1+526864)|0);
 var $arrayidx3287=(($fRec1613286+8)|0);
 var $1894=HEAPF32[(($arrayidx3287)>>2)];
 var $mul3288=($1893)*($1894);
 var $1895=$fTemp95;
 var $add3289=($mul3288)+($1895);
 var $mul3290=($1892)*($add3289);
 var $sub3291=($mul3285)-($mul3290);
 var $fRec1613292=(($this1+526864)|0);
 var $arrayidx3293=(($fRec1613292)|0);
 HEAPF32[(($arrayidx3293)>>2)]=$sub3291;
 var $1896=$fSlow59;
 var $fRec169=(($this1+526856)|0);
 var $arrayidx3294=(($fRec169+4)|0);
 var $1897=HEAPF32[(($arrayidx3294)>>2)];
 var $mul3295=($1896)*($1897);
 var $1898=$fSlow60;
 var $fVec213296=(($this1+526896)|0);
 var $arrayidx3297=(($fVec213296+4)|0);
 var $1899=HEAPF32[(($arrayidx3297)>>2)];
 var $1900=$fTemp94;
 var $add3298=($1899)+($1900);
 var $mul3299=($1898)*($add3298);
 var $add3300=($mul3295)+($mul3299);
 var $fRec1693301=(($this1+526856)|0);
 var $arrayidx3302=(($fRec1693301)|0);
 HEAPF32[(($arrayidx3302)>>2)]=$add3300;
 var $fRec1693303=(($this1+526856)|0);
 var $arrayidx3304=(($fRec1693303)|0);
 var $1901=HEAPF32[(($arrayidx3304)>>2)];
 var $1902=$fSlow57;
 var $1903=$fSlow63;
 var $fRec168=(($this1+526844)|0);
 var $arrayidx3305=(($fRec168+8)|0);
 var $1904=HEAPF32[(($arrayidx3305)>>2)];
 var $mul3306=($1903)*($1904);
 var $1905=$fSlow36;
 var $fRec1683307=(($this1+526844)|0);
 var $arrayidx3308=(($fRec1683307+4)|0);
 var $1906=HEAPF32[(($arrayidx3308)>>2)];
 var $mul3309=($1905)*($1906);
 var $add3310=($mul3306)+($mul3309);
 var $mul3311=($1902)*($add3310);
 var $sub3312=($1901)-($mul3311);
 var $fRec1683313=(($this1+526844)|0);
 var $arrayidx3314=(($fRec1683313)|0);
 HEAPF32[(($arrayidx3314)>>2)]=$sub3312;
 var $fRec1683315=(($this1+526844)|0);
 var $arrayidx3316=(($fRec1683315+8)|0);
 var $1907=HEAPF32[(($arrayidx3316)>>2)];
 var $fRec1683317=(($this1+526844)|0);
 var $arrayidx3318=(($fRec1683317)|0);
 var $1908=HEAPF32[(($arrayidx3318)>>2)];
 var $fRec1683319=(($this1+526844)|0);
 var $arrayidx3320=(($fRec1683319+4)|0);
 var $1909=HEAPF32[(($arrayidx3320)>>2)];
 var $mul3321=($1909)*(2);
 var $add3322=($1908)+($mul3321);
 var $add3323=($1907)+($add3322);
 $fTemp96=$add3323;
 var $1910=$fSlow57;
 var $1911=$fTemp96;
 var $mul3324=($1910)*($1911);
 $fTemp97=$mul3324;
 var $1912=$fTemp97;
 var $fVec22=(($this1+526836)|0);
 var $arrayidx3325=(($fVec22)|0);
 HEAPF32[(($arrayidx3325)>>2)]=$1912;
 var $1913=$fSlow69;
 var $fRec167=(($this1+526828)|0);
 var $arrayidx3326=(($fRec167+4)|0);
 var $1914=HEAPF32[(($arrayidx3326)>>2)];
 var $mul3327=($1913)*($1914);
 var $1915=$fSlow70;
 var $fVec223328=(($this1+526836)|0);
 var $arrayidx3329=(($fVec223328+4)|0);
 var $1916=HEAPF32[(($arrayidx3329)>>2)];
 var $1917=$fTemp97;
 var $add3330=($1916)+($1917);
 var $mul3331=($1915)*($add3330);
 var $add3332=($mul3327)+($mul3331);
 var $fRec1673333=(($this1+526828)|0);
 var $arrayidx3334=(($fRec1673333)|0);
 HEAPF32[(($arrayidx3334)>>2)]=$add3332;
 var $fRec1673335=(($this1+526828)|0);
 var $arrayidx3336=(($fRec1673335)|0);
 var $1918=HEAPF32[(($arrayidx3336)>>2)];
 var $1919=$fSlow65;
 var $1920=$fSlow71;
 var $fRec166=(($this1+526816)|0);
 var $arrayidx3337=(($fRec166+8)|0);
 var $1921=HEAPF32[(($arrayidx3337)>>2)];
 var $mul3338=($1920)*($1921);
 var $1922=$fSlow42;
 var $fRec1663339=(($this1+526816)|0);
 var $arrayidx3340=(($fRec1663339+4)|0);
 var $1923=HEAPF32[(($arrayidx3340)>>2)];
 var $mul3341=($1922)*($1923);
 var $add3342=($mul3338)+($mul3341);
 var $mul3343=($1919)*($add3342);
 var $sub3344=($1918)-($mul3343);
 var $fRec1663345=(($this1+526816)|0);
 var $arrayidx3346=(($fRec1663345)|0);
 HEAPF32[(($arrayidx3346)>>2)]=$sub3344;
 var $1924=$fSlow69;
 var $fRec171=(($this1+526808)|0);
 var $arrayidx3347=(($fRec171+4)|0);
 var $1925=HEAPF32[(($arrayidx3347)>>2)];
 var $mul3348=($1924)*($1925);
 var $1926=$fSlow70;
 var $1927=$fSlow75;
 var $fVec223349=(($this1+526836)|0);
 var $arrayidx3350=(($fVec223349+4)|0);
 var $1928=HEAPF32[(($arrayidx3350)>>2)];
 var $mul3351=($1927)*($1928);
 var $1929=$fSlow74;
 var $1930=$fTemp96;
 var $mul3352=($1929)*($1930);
 var $add3353=($mul3351)+($mul3352);
 var $mul3354=($1926)*($add3353);
 var $add3355=($mul3348)+($mul3354);
 var $fRec1713356=(($this1+526808)|0);
 var $arrayidx3357=(($fRec1713356)|0);
 HEAPF32[(($arrayidx3357)>>2)]=$add3355;
 var $fRec1713358=(($this1+526808)|0);
 var $arrayidx3359=(($fRec1713358)|0);
 var $1931=HEAPF32[(($arrayidx3359)>>2)];
 var $1932=$fSlow65;
 var $1933=$fSlow71;
 var $fRec170=(($this1+526796)|0);
 var $arrayidx3360=(($fRec170+8)|0);
 var $1934=HEAPF32[(($arrayidx3360)>>2)];
 var $mul3361=($1933)*($1934);
 var $1935=$fSlow42;
 var $fRec1703362=(($this1+526796)|0);
 var $arrayidx3363=(($fRec1703362+4)|0);
 var $1936=HEAPF32[(($arrayidx3363)>>2)];
 var $mul3364=($1935)*($1936);
 var $add3365=($mul3361)+($mul3364);
 var $mul3366=($1932)*($add3365);
 var $sub3367=($1931)-($mul3366);
 var $fRec1703368=(($this1+526796)|0);
 var $arrayidx3369=(($fRec1703368)|0);
 HEAPF32[(($arrayidx3369)>>2)]=$sub3367;
 var $1937=$fSlow114;
 var $fRec1503370=(($this1+526996)|0);
 var $arrayidx3371=(($fRec1503370+8)|0);
 var $1938=HEAPF32[(($arrayidx3371)>>2)];
 var $1939=$fSlow39;
 var $1940=$fTemp88;
 var $1941=$fSlow40;
 var $fRec1503372=(($this1+526996)|0);
 var $arrayidx3373=(($fRec1503372)|0);
 var $1942=HEAPF32[(($arrayidx3373)>>2)];
 var $mul3374=($1941)*($1942);
 var $add3375=($1940)+($mul3374);
 var $mul3376=($1939)*($add3375);
 var $add3377=($1938)+($mul3376);
 var $mul3378=($1937)*($add3377);
 var $1943=$fSlow115;
 var $fRec1553379=(($this1+526924)|0);
 var $arrayidx3380=(($fRec1553379+8)|0);
 var $1944=HEAPF32[(($arrayidx3380)>>2)];
 var $1945=$fSlow39;
 var $1946=$fTemp92;
 var $1947=$fSlow40;
 var $fRec1553381=(($this1+526924)|0);
 var $arrayidx3382=(($fRec1553381)|0);
 var $1948=HEAPF32[(($arrayidx3382)>>2)];
 var $mul3383=($1947)*($1948);
 var $add3384=($1946)+($mul3383);
 var $mul3385=($1945)*($add3384);
 var $add3386=($1944)+($mul3385);
 var $mul3387=($1943)*($add3386);
 var $add3388=($mul3378)+($mul3387);
 var $1949=$fSlow116;
 var $fRec1613389=(($this1+526864)|0);
 var $arrayidx3390=(($fRec1613389+8)|0);
 var $1950=HEAPF32[(($arrayidx3390)>>2)];
 var $1951=$fSlow39;
 var $1952=$fTemp95;
 var $1953=$fSlow40;
 var $fRec1613391=(($this1+526864)|0);
 var $arrayidx3392=(($fRec1613391)|0);
 var $1954=HEAPF32[(($arrayidx3392)>>2)];
 var $mul3393=($1953)*($1954);
 var $add3394=($1952)+($mul3393);
 var $mul3395=($1951)*($add3394);
 var $add3396=($1950)+($mul3395);
 var $mul3397=($1949)*($add3396);
 var $add3398=($add3388)+($mul3397);
 var $1955=$fSlow65;
 var $1956=$fSlow117;
 var $fRec1663399=(($this1+526816)|0);
 var $arrayidx3400=(($fRec1663399+8)|0);
 var $1957=HEAPF32[(($arrayidx3400)>>2)];
 var $fRec1663401=(($this1+526816)|0);
 var $arrayidx3402=(($fRec1663401)|0);
 var $1958=HEAPF32[(($arrayidx3402)>>2)];
 var $fRec1663403=(($this1+526816)|0);
 var $arrayidx3404=(($fRec1663403+4)|0);
 var $1959=HEAPF32[(($arrayidx3404)>>2)];
 var $mul3405=($1959)*(2);
 var $add3406=($1958)+($mul3405);
 var $add3407=($1957)+($add3406);
 var $mul3408=($1956)*($add3407);
 var $1960=$fSlow118;
 var $1961=$fSlow41;
 var $fRec1703409=(($this1+526796)|0);
 var $arrayidx3410=(($fRec1703409)|0);
 var $1962=HEAPF32[(($arrayidx3410)>>2)];
 var $mul3411=($1961)*($1962);
 var $1963=$fSlow76;
 var $fRec1703412=(($this1+526796)|0);
 var $arrayidx3413=(($fRec1703412+4)|0);
 var $1964=HEAPF32[(($arrayidx3413)>>2)];
 var $mul3414=($1963)*($1964);
 var $add3415=($mul3411)+($mul3414);
 var $1965=$fSlow41;
 var $fRec1703416=(($this1+526796)|0);
 var $arrayidx3417=(($fRec1703416+8)|0);
 var $1966=HEAPF32[(($arrayidx3417)>>2)];
 var $mul3418=($1965)*($1966);
 var $add3419=($add3415)+($mul3418);
 var $mul3420=($1960)*($add3419);
 var $add3421=($mul3408)+($mul3420);
 var $mul3422=($1955)*($add3421);
 var $add3423=($add3398)+($mul3422);
 $fTemp98=$add3423;
 var $1967=$fSlow19;
 var $fRec176=(($this1+526788)|0);
 var $arrayidx3424=(($fRec176+4)|0);
 var $1968=HEAPF32[(($arrayidx3424)>>2)];
 var $mul3425=($1967)*($1968);
 var $1969=$fSlow20;
 var $1970=$fSlow14;
 var $fRec14=(($this1+32784)|0);
 var $arrayidx3426=(($fRec14+4)|0);
 var $1971=HEAPF32[(($arrayidx3426)>>2)];
 var $mul3427=($1970)*($1971);
 var $1972=$fSlow21;
 var $fRec143428=(($this1+32784)|0);
 var $arrayidx3429=(($fRec143428+8)|0);
 var $1973=HEAPF32[(($arrayidx3429)>>2)];
 var $mul3430=($1972)*($1973);
 var $add3431=($mul3427)+($mul3430);
 var $mul3432=($1969)*($add3431);
 var $add3433=($mul3425)+($mul3432);
 var $fRec1763434=(($this1+526788)|0);
 var $arrayidx3435=(($fRec1763434)|0);
 HEAPF32[(($arrayidx3435)>>2)]=$add3433;
 var $fRec1763436=(($this1+526788)|0);
 var $arrayidx3437=(($fRec1763436)|0);
 var $1974=HEAPF32[(($arrayidx3437)>>2)];
 var $1975=$fSlow16;
 var $1976=$fSlow22;
 var $fRec175=(($this1+526776)|0);
 var $arrayidx3438=(($fRec175+8)|0);
 var $1977=HEAPF32[(($arrayidx3438)>>2)];
 var $mul3439=($1976)*($1977);
 var $1978=$fSlow23;
 var $fRec1753440=(($this1+526776)|0);
 var $arrayidx3441=(($fRec1753440+4)|0);
 var $1979=HEAPF32[(($arrayidx3441)>>2)];
 var $mul3442=($1978)*($1979);
 var $add3443=($mul3439)+($mul3442);
 var $mul3444=($1975)*($add3443);
 var $sub3445=($1974)-($mul3444);
 var $fRec1753446=(($this1+526776)|0);
 var $arrayidx3447=(($fRec1753446)|0);
 HEAPF32[(($arrayidx3447)>>2)]=$sub3445;
 var $1980=$fSlow30;
 var $fRec174=(($this1+526764)|0);
 var $arrayidx3448=(($fRec174+4)|0);
 var $1981=HEAPF32[(($arrayidx3448)>>2)];
 var $mul3449=($1980)*($1981);
 $fTemp99=$mul3449;
 var $1982=$fSlow16;
 var $1983=$fSlow17;
 var $fRec1753450=(($this1+526776)|0);
 var $arrayidx3451=(($fRec1753450)|0);
 var $1984=HEAPF32[(($arrayidx3451)>>2)];
 var $mul3452=($1983)*($1984);
 var $1985=$fSlow24;
 var $fRec1753453=(($this1+526776)|0);
 var $arrayidx3454=(($fRec1753453+4)|0);
 var $1986=HEAPF32[(($arrayidx3454)>>2)];
 var $mul3455=($1985)*($1986);
 var $add3456=($mul3452)+($mul3455);
 var $1987=$fSlow17;
 var $fRec1753457=(($this1+526776)|0);
 var $arrayidx3458=(($fRec1753457+8)|0);
 var $1988=HEAPF32[(($arrayidx3458)>>2)];
 var $mul3459=($1987)*($1988);
 var $add3460=($add3456)+($mul3459);
 var $mul3461=($1982)*($add3460);
 var $1989=$fSlow27;
 var $1990=$fSlow28;
 var $fRec1743462=(($this1+526764)|0);
 var $arrayidx3463=(($fRec1743462+8)|0);
 var $1991=HEAPF32[(($arrayidx3463)>>2)];
 var $mul3464=($1990)*($1991);
 var $1992=$fTemp99;
 var $add3465=($mul3464)+($1992);
 var $mul3466=($1989)*($add3465);
 var $sub3467=($mul3461)-($mul3466);
 var $fRec1743468=(($this1+526764)|0);
 var $arrayidx3469=(($fRec1743468)|0);
 HEAPF32[(($arrayidx3469)>>2)]=$sub3467;
 var $1993=$fSlow36;
 var $fRec173=(($this1+526752)|0);
 var $arrayidx3470=(($fRec173+4)|0);
 var $1994=HEAPF32[(($arrayidx3470)>>2)];
 var $mul3471=($1993)*($1994);
 $fTemp100=$mul3471;
 var $fRec1743472=(($this1+526764)|0);
 var $arrayidx3473=(($fRec1743472+8)|0);
 var $1995=HEAPF32[(($arrayidx3473)>>2)];
 var $1996=$fSlow27;
 var $1997=$fTemp99;
 var $1998=$fSlow28;
 var $fRec1743474=(($this1+526764)|0);
 var $arrayidx3475=(($fRec1743474)|0);
 var $1999=HEAPF32[(($arrayidx3475)>>2)];
 var $mul3476=($1998)*($1999);
 var $add3477=($1997)+($mul3476);
 var $mul3478=($1996)*($add3477);
 var $add3479=($1995)+($mul3478);
 var $2000=$fSlow33;
 var $2001=$fSlow34;
 var $fRec1733480=(($this1+526752)|0);
 var $arrayidx3481=(($fRec1733480+8)|0);
 var $2002=HEAPF32[(($arrayidx3481)>>2)];
 var $mul3482=($2001)*($2002);
 var $2003=$fTemp100;
 var $add3483=($mul3482)+($2003);
 var $mul3484=($2000)*($add3483);
 var $sub3485=($add3479)-($mul3484);
 var $fRec1733486=(($this1+526752)|0);
 var $arrayidx3487=(($fRec1733486)|0);
 HEAPF32[(($arrayidx3487)>>2)]=$sub3485;
 var $2004=$fSlow42;
 var $fRec172=(($this1+526740)|0);
 var $arrayidx3488=(($fRec172+4)|0);
 var $2005=HEAPF32[(($arrayidx3488)>>2)];
 var $mul3489=($2004)*($2005);
 $fTemp101=$mul3489;
 var $fRec1733490=(($this1+526752)|0);
 var $arrayidx3491=(($fRec1733490+8)|0);
 var $2006=HEAPF32[(($arrayidx3491)>>2)];
 var $2007=$fSlow33;
 var $2008=$fTemp100;
 var $2009=$fSlow34;
 var $fRec1733492=(($this1+526752)|0);
 var $arrayidx3493=(($fRec1733492)|0);
 var $2010=HEAPF32[(($arrayidx3493)>>2)];
 var $mul3494=($2009)*($2010);
 var $add3495=($2008)+($mul3494);
 var $mul3496=($2007)*($add3495);
 var $add3497=($2006)+($mul3496);
 var $2011=$fSlow39;
 var $2012=$fSlow40;
 var $fRec1723498=(($this1+526740)|0);
 var $arrayidx3499=(($fRec1723498+8)|0);
 var $2013=HEAPF32[(($arrayidx3499)>>2)];
 var $mul3500=($2012)*($2013);
 var $2014=$fTemp101;
 var $add3501=($mul3500)+($2014);
 var $mul3502=($2011)*($add3501);
 var $sub3503=($add3497)-($mul3502);
 var $fRec1723504=(($this1+526740)|0);
 var $arrayidx3505=(($fRec1723504)|0);
 HEAPF32[(($arrayidx3505)>>2)]=$sub3503;
 var $2015=$fSlow19;
 var $fRec182=(($this1+526732)|0);
 var $arrayidx3506=(($fRec182+4)|0);
 var $2016=HEAPF32[(($arrayidx3506)>>2)];
 var $mul3507=($2015)*($2016);
 var $2017=$fSlow20;
 var $fRec143508=(($this1+32784)|0);
 var $arrayidx3509=(($fRec143508+4)|0);
 var $2018=HEAPF32[(($arrayidx3509)>>2)];
 var $fRec143510=(($this1+32784)|0);
 var $arrayidx3511=(($fRec143510+8)|0);
 var $2019=HEAPF32[(($arrayidx3511)>>2)];
 var $add3512=($2018)+($2019);
 var $mul3513=($2017)*($add3512);
 var $add3514=($mul3507)+($mul3513);
 var $fRec1823515=(($this1+526732)|0);
 var $arrayidx3516=(($fRec1823515)|0);
 HEAPF32[(($arrayidx3516)>>2)]=$add3514;
 var $fRec1823517=(($this1+526732)|0);
 var $arrayidx3518=(($fRec1823517)|0);
 var $2020=HEAPF32[(($arrayidx3518)>>2)];
 var $2021=$fSlow16;
 var $2022=$fSlow22;
 var $fRec181=(($this1+526720)|0);
 var $arrayidx3519=(($fRec181+8)|0);
 var $2023=HEAPF32[(($arrayidx3519)>>2)];
 var $mul3520=($2022)*($2023);
 var $2024=$fSlow23;
 var $fRec1813521=(($this1+526720)|0);
 var $arrayidx3522=(($fRec1813521+4)|0);
 var $2025=HEAPF32[(($arrayidx3522)>>2)];
 var $mul3523=($2024)*($2025);
 var $add3524=($mul3520)+($mul3523);
 var $mul3525=($2021)*($add3524);
 var $sub3526=($2020)-($mul3525);
 var $fRec1813527=(($this1+526720)|0);
 var $arrayidx3528=(($fRec1813527)|0);
 HEAPF32[(($arrayidx3528)>>2)]=$sub3526;
 var $fRec1813529=(($this1+526720)|0);
 var $arrayidx3530=(($fRec1813529+8)|0);
 var $2026=HEAPF32[(($arrayidx3530)>>2)];
 var $fRec1813531=(($this1+526720)|0);
 var $arrayidx3532=(($fRec1813531)|0);
 var $2027=HEAPF32[(($arrayidx3532)>>2)];
 var $fRec1813533=(($this1+526720)|0);
 var $arrayidx3534=(($fRec1813533+4)|0);
 var $2028=HEAPF32[(($arrayidx3534)>>2)];
 var $mul3535=($2028)*(2);
 var $add3536=($2027)+($mul3535);
 var $add3537=($2026)+($add3536);
 $fTemp102=$add3537;
 var $2029=$fSlow16;
 var $2030=$fTemp102;
 var $mul3538=($2029)*($2030);
 $fTemp103=$mul3538;
 var $2031=$fTemp103;
 var $fVec23=(($this1+526712)|0);
 var $arrayidx3539=(($fVec23)|0);
 HEAPF32[(($arrayidx3539)>>2)]=$2031;
 var $2032=$fSlow48;
 var $fRec180=(($this1+526704)|0);
 var $arrayidx3540=(($fRec180+4)|0);
 var $2033=HEAPF32[(($arrayidx3540)>>2)];
 var $mul3541=($2032)*($2033);
 var $2034=$fSlow49;
 var $2035=$fSlow51;
 var $fVec233542=(($this1+526712)|0);
 var $arrayidx3543=(($fVec233542+4)|0);
 var $2036=HEAPF32[(($arrayidx3543)>>2)];
 var $mul3544=($2035)*($2036);
 var $2037=$fSlow50;
 var $2038=$fTemp102;
 var $mul3545=($2037)*($2038);
 var $add3546=($mul3544)+($mul3545);
 var $mul3547=($2034)*($add3546);
 var $add3548=($mul3541)+($mul3547);
 var $fRec1803549=(($this1+526704)|0);
 var $arrayidx3550=(($fRec1803549)|0);
 HEAPF32[(($arrayidx3550)>>2)]=$add3548;
 var $fRec1803551=(($this1+526704)|0);
 var $arrayidx3552=(($fRec1803551)|0);
 var $2039=HEAPF32[(($arrayidx3552)>>2)];
 var $2040=$fSlow46;
 var $2041=$fSlow52;
 var $fRec179=(($this1+526692)|0);
 var $arrayidx3553=(($fRec179+8)|0);
 var $2042=HEAPF32[(($arrayidx3553)>>2)];
 var $mul3554=($2041)*($2042);
 var $2043=$fSlow30;
 var $fRec1793555=(($this1+526692)|0);
 var $arrayidx3556=(($fRec1793555+4)|0);
 var $2044=HEAPF32[(($arrayidx3556)>>2)];
 var $mul3557=($2043)*($2044);
 var $add3558=($mul3554)+($mul3557);
 var $mul3559=($2040)*($add3558);
 var $sub3560=($2039)-($mul3559);
 var $fRec1793561=(($this1+526692)|0);
 var $arrayidx3562=(($fRec1793561)|0);
 HEAPF32[(($arrayidx3562)>>2)]=$sub3560;
 var $2045=$fSlow36;
 var $fRec178=(($this1+526680)|0);
 var $arrayidx3563=(($fRec178+4)|0);
 var $2046=HEAPF32[(($arrayidx3563)>>2)];
 var $mul3564=($2045)*($2046);
 $fTemp104=$mul3564;
 var $2047=$fSlow46;
 var $2048=$fSlow29;
 var $fRec1793565=(($this1+526692)|0);
 var $arrayidx3566=(($fRec1793565)|0);
 var $2049=HEAPF32[(($arrayidx3566)>>2)];
 var $mul3567=($2048)*($2049);
 var $2050=$fSlow53;
 var $fRec1793568=(($this1+526692)|0);
 var $arrayidx3569=(($fRec1793568+4)|0);
 var $2051=HEAPF32[(($arrayidx3569)>>2)];
 var $mul3570=($2050)*($2051);
 var $add3571=($mul3567)+($mul3570);
 var $2052=$fSlow29;
 var $fRec1793572=(($this1+526692)|0);
 var $arrayidx3573=(($fRec1793572+8)|0);
 var $2053=HEAPF32[(($arrayidx3573)>>2)];
 var $mul3574=($2052)*($2053);
 var $add3575=($add3571)+($mul3574);
 var $mul3576=($2047)*($add3575);
 var $2054=$fSlow33;
 var $2055=$fSlow34;
 var $fRec1783577=(($this1+526680)|0);
 var $arrayidx3578=(($fRec1783577+8)|0);
 var $2056=HEAPF32[(($arrayidx3578)>>2)];
 var $mul3579=($2055)*($2056);
 var $2057=$fTemp104;
 var $add3580=($mul3579)+($2057);
 var $mul3581=($2054)*($add3580);
 var $sub3582=($mul3576)-($mul3581);
 var $fRec1783583=(($this1+526680)|0);
 var $arrayidx3584=(($fRec1783583)|0);
 HEAPF32[(($arrayidx3584)>>2)]=$sub3582;
 var $2058=$fSlow42;
 var $fRec177=(($this1+526668)|0);
 var $arrayidx3585=(($fRec177+4)|0);
 var $2059=HEAPF32[(($arrayidx3585)>>2)];
 var $mul3586=($2058)*($2059);
 $fTemp105=$mul3586;
 var $fRec1783587=(($this1+526680)|0);
 var $arrayidx3588=(($fRec1783587+8)|0);
 var $2060=HEAPF32[(($arrayidx3588)>>2)];
 var $2061=$fSlow33;
 var $2062=$fTemp104;
 var $2063=$fSlow34;
 var $fRec1783589=(($this1+526680)|0);
 var $arrayidx3590=(($fRec1783589)|0);
 var $2064=HEAPF32[(($arrayidx3590)>>2)];
 var $mul3591=($2063)*($2064);
 var $add3592=($2062)+($mul3591);
 var $mul3593=($2061)*($add3592);
 var $add3594=($2060)+($mul3593);
 var $2065=$fSlow39;
 var $2066=$fSlow40;
 var $fRec1773595=(($this1+526668)|0);
 var $arrayidx3596=(($fRec1773595+8)|0);
 var $2067=HEAPF32[(($arrayidx3596)>>2)];
 var $mul3597=($2066)*($2067);
 var $2068=$fTemp105;
 var $add3598=($mul3597)+($2068);
 var $mul3599=($2065)*($add3598);
 var $sub3600=($add3594)-($mul3599);
 var $fRec1773601=(($this1+526668)|0);
 var $arrayidx3602=(($fRec1773601)|0);
 HEAPF32[(($arrayidx3602)>>2)]=$sub3600;
 var $2069=$fSlow48;
 var $fRec187=(($this1+526660)|0);
 var $arrayidx3603=(($fRec187+4)|0);
 var $2070=HEAPF32[(($arrayidx3603)>>2)];
 var $mul3604=($2069)*($2070);
 var $2071=$fSlow49;
 var $fVec233605=(($this1+526712)|0);
 var $arrayidx3606=(($fVec233605+4)|0);
 var $2072=HEAPF32[(($arrayidx3606)>>2)];
 var $2073=$fTemp103;
 var $add3607=($2072)+($2073);
 var $mul3608=($2071)*($add3607);
 var $add3609=($mul3604)+($mul3608);
 var $fRec1873610=(($this1+526660)|0);
 var $arrayidx3611=(($fRec1873610)|0);
 HEAPF32[(($arrayidx3611)>>2)]=$add3609;
 var $fRec1873612=(($this1+526660)|0);
 var $arrayidx3613=(($fRec1873612)|0);
 var $2074=HEAPF32[(($arrayidx3613)>>2)];
 var $2075=$fSlow46;
 var $2076=$fSlow52;
 var $fRec186=(($this1+526648)|0);
 var $arrayidx3614=(($fRec186+8)|0);
 var $2077=HEAPF32[(($arrayidx3614)>>2)];
 var $mul3615=($2076)*($2077);
 var $2078=$fSlow30;
 var $fRec1863616=(($this1+526648)|0);
 var $arrayidx3617=(($fRec1863616+4)|0);
 var $2079=HEAPF32[(($arrayidx3617)>>2)];
 var $mul3618=($2078)*($2079);
 var $add3619=($mul3615)+($mul3618);
 var $mul3620=($2075)*($add3619);
 var $sub3621=($2074)-($mul3620);
 var $fRec1863622=(($this1+526648)|0);
 var $arrayidx3623=(($fRec1863622)|0);
 HEAPF32[(($arrayidx3623)>>2)]=$sub3621;
 var $fRec1863624=(($this1+526648)|0);
 var $arrayidx3625=(($fRec1863624+8)|0);
 var $2080=HEAPF32[(($arrayidx3625)>>2)];
 var $fRec1863626=(($this1+526648)|0);
 var $arrayidx3627=(($fRec1863626)|0);
 var $2081=HEAPF32[(($arrayidx3627)>>2)];
 var $fRec1863628=(($this1+526648)|0);
 var $arrayidx3629=(($fRec1863628+4)|0);
 var $2082=HEAPF32[(($arrayidx3629)>>2)];
 var $mul3630=($2082)*(2);
 var $add3631=($2081)+($mul3630);
 var $add3632=($2080)+($add3631);
 $fTemp106=$add3632;
 var $2083=$fSlow46;
 var $2084=$fTemp106;
 var $mul3633=($2083)*($2084);
 $fTemp107=$mul3633;
 var $2085=$fTemp107;
 var $fVec24=(($this1+526640)|0);
 var $arrayidx3634=(($fVec24)|0);
 HEAPF32[(($arrayidx3634)>>2)]=$2085;
 var $2086=$fSlow59;
 var $fRec185=(($this1+526632)|0);
 var $arrayidx3635=(($fRec185+4)|0);
 var $2087=HEAPF32[(($arrayidx3635)>>2)];
 var $mul3636=($2086)*($2087);
 var $2088=$fSlow60;
 var $2089=$fSlow62;
 var $fVec243637=(($this1+526640)|0);
 var $arrayidx3638=(($fVec243637+4)|0);
 var $2090=HEAPF32[(($arrayidx3638)>>2)];
 var $mul3639=($2089)*($2090);
 var $2091=$fSlow61;
 var $2092=$fTemp106;
 var $mul3640=($2091)*($2092);
 var $add3641=($mul3639)+($mul3640);
 var $mul3642=($2088)*($add3641);
 var $add3643=($mul3636)+($mul3642);
 var $fRec1853644=(($this1+526632)|0);
 var $arrayidx3645=(($fRec1853644)|0);
 HEAPF32[(($arrayidx3645)>>2)]=$add3643;
 var $fRec1853646=(($this1+526632)|0);
 var $arrayidx3647=(($fRec1853646)|0);
 var $2093=HEAPF32[(($arrayidx3647)>>2)];
 var $2094=$fSlow57;
 var $2095=$fSlow63;
 var $fRec184=(($this1+526620)|0);
 var $arrayidx3648=(($fRec184+8)|0);
 var $2096=HEAPF32[(($arrayidx3648)>>2)];
 var $mul3649=($2095)*($2096);
 var $2097=$fSlow36;
 var $fRec1843650=(($this1+526620)|0);
 var $arrayidx3651=(($fRec1843650+4)|0);
 var $2098=HEAPF32[(($arrayidx3651)>>2)];
 var $mul3652=($2097)*($2098);
 var $add3653=($mul3649)+($mul3652);
 var $mul3654=($2094)*($add3653);
 var $sub3655=($2093)-($mul3654);
 var $fRec1843656=(($this1+526620)|0);
 var $arrayidx3657=(($fRec1843656)|0);
 HEAPF32[(($arrayidx3657)>>2)]=$sub3655;
 var $2099=$fSlow42;
 var $fRec183=(($this1+526608)|0);
 var $arrayidx3658=(($fRec183+4)|0);
 var $2100=HEAPF32[(($arrayidx3658)>>2)];
 var $mul3659=($2099)*($2100);
 $fTemp108=$mul3659;
 var $2101=$fSlow57;
 var $2102=$fSlow35;
 var $fRec1843660=(($this1+526620)|0);
 var $arrayidx3661=(($fRec1843660)|0);
 var $2103=HEAPF32[(($arrayidx3661)>>2)];
 var $mul3662=($2102)*($2103);
 var $2104=$fSlow64;
 var $fRec1843663=(($this1+526620)|0);
 var $arrayidx3664=(($fRec1843663+4)|0);
 var $2105=HEAPF32[(($arrayidx3664)>>2)];
 var $mul3665=($2104)*($2105);
 var $add3666=($mul3662)+($mul3665);
 var $2106=$fSlow35;
 var $fRec1843667=(($this1+526620)|0);
 var $arrayidx3668=(($fRec1843667+8)|0);
 var $2107=HEAPF32[(($arrayidx3668)>>2)];
 var $mul3669=($2106)*($2107);
 var $add3670=($add3666)+($mul3669);
 var $mul3671=($2101)*($add3670);
 var $2108=$fSlow39;
 var $2109=$fSlow40;
 var $fRec1833672=(($this1+526608)|0);
 var $arrayidx3673=(($fRec1833672+8)|0);
 var $2110=HEAPF32[(($arrayidx3673)>>2)];
 var $mul3674=($2109)*($2110);
 var $2111=$fTemp108;
 var $add3675=($mul3674)+($2111);
 var $mul3676=($2108)*($add3675);
 var $sub3677=($mul3671)-($mul3676);
 var $fRec1833678=(($this1+526608)|0);
 var $arrayidx3679=(($fRec1833678)|0);
 HEAPF32[(($arrayidx3679)>>2)]=$sub3677;
 var $2112=$fSlow59;
 var $fRec191=(($this1+526600)|0);
 var $arrayidx3680=(($fRec191+4)|0);
 var $2113=HEAPF32[(($arrayidx3680)>>2)];
 var $mul3681=($2112)*($2113);
 var $2114=$fSlow60;
 var $fVec243682=(($this1+526640)|0);
 var $arrayidx3683=(($fVec243682+4)|0);
 var $2115=HEAPF32[(($arrayidx3683)>>2)];
 var $2116=$fTemp107;
 var $add3684=($2115)+($2116);
 var $mul3685=($2114)*($add3684);
 var $add3686=($mul3681)+($mul3685);
 var $fRec1913687=(($this1+526600)|0);
 var $arrayidx3688=(($fRec1913687)|0);
 HEAPF32[(($arrayidx3688)>>2)]=$add3686;
 var $fRec1913689=(($this1+526600)|0);
 var $arrayidx3690=(($fRec1913689)|0);
 var $2117=HEAPF32[(($arrayidx3690)>>2)];
 var $2118=$fSlow57;
 var $2119=$fSlow63;
 var $fRec190=(($this1+526588)|0);
 var $arrayidx3691=(($fRec190+8)|0);
 var $2120=HEAPF32[(($arrayidx3691)>>2)];
 var $mul3692=($2119)*($2120);
 var $2121=$fSlow36;
 var $fRec1903693=(($this1+526588)|0);
 var $arrayidx3694=(($fRec1903693+4)|0);
 var $2122=HEAPF32[(($arrayidx3694)>>2)];
 var $mul3695=($2121)*($2122);
 var $add3696=($mul3692)+($mul3695);
 var $mul3697=($2118)*($add3696);
 var $sub3698=($2117)-($mul3697);
 var $fRec1903699=(($this1+526588)|0);
 var $arrayidx3700=(($fRec1903699)|0);
 HEAPF32[(($arrayidx3700)>>2)]=$sub3698;
 var $fRec1903701=(($this1+526588)|0);
 var $arrayidx3702=(($fRec1903701+8)|0);
 var $2123=HEAPF32[(($arrayidx3702)>>2)];
 var $fRec1903703=(($this1+526588)|0);
 var $arrayidx3704=(($fRec1903703)|0);
 var $2124=HEAPF32[(($arrayidx3704)>>2)];
 var $fRec1903705=(($this1+526588)|0);
 var $arrayidx3706=(($fRec1903705+4)|0);
 var $2125=HEAPF32[(($arrayidx3706)>>2)];
 var $mul3707=($2125)*(2);
 var $add3708=($2124)+($mul3707);
 var $add3709=($2123)+($add3708);
 $fTemp109=$add3709;
 var $2126=$fSlow57;
 var $2127=$fTemp109;
 var $mul3710=($2126)*($2127);
 $fTemp110=$mul3710;
 var $2128=$fTemp110;
 var $fVec25=(($this1+526580)|0);
 var $arrayidx3711=(($fVec25)|0);
 HEAPF32[(($arrayidx3711)>>2)]=$2128;
 var $2129=$fSlow69;
 var $fRec189=(($this1+526572)|0);
 var $arrayidx3712=(($fRec189+4)|0);
 var $2130=HEAPF32[(($arrayidx3712)>>2)];
 var $mul3713=($2129)*($2130);
 var $2131=$fSlow70;
 var $fVec253714=(($this1+526580)|0);
 var $arrayidx3715=(($fVec253714+4)|0);
 var $2132=HEAPF32[(($arrayidx3715)>>2)];
 var $2133=$fTemp110;
 var $add3716=($2132)+($2133);
 var $mul3717=($2131)*($add3716);
 var $add3718=($mul3713)+($mul3717);
 var $fRec1893719=(($this1+526572)|0);
 var $arrayidx3720=(($fRec1893719)|0);
 HEAPF32[(($arrayidx3720)>>2)]=$add3718;
 var $fRec1893721=(($this1+526572)|0);
 var $arrayidx3722=(($fRec1893721)|0);
 var $2134=HEAPF32[(($arrayidx3722)>>2)];
 var $2135=$fSlow65;
 var $2136=$fSlow71;
 var $fRec188=(($this1+526560)|0);
 var $arrayidx3723=(($fRec188+8)|0);
 var $2137=HEAPF32[(($arrayidx3723)>>2)];
 var $mul3724=($2136)*($2137);
 var $2138=$fSlow42;
 var $fRec1883725=(($this1+526560)|0);
 var $arrayidx3726=(($fRec1883725+4)|0);
 var $2139=HEAPF32[(($arrayidx3726)>>2)];
 var $mul3727=($2138)*($2139);
 var $add3728=($mul3724)+($mul3727);
 var $mul3729=($2135)*($add3728);
 var $sub3730=($2134)-($mul3729);
 var $fRec1883731=(($this1+526560)|0);
 var $arrayidx3732=(($fRec1883731)|0);
 HEAPF32[(($arrayidx3732)>>2)]=$sub3730;
 var $2140=$fSlow69;
 var $fRec193=(($this1+526552)|0);
 var $arrayidx3733=(($fRec193+4)|0);
 var $2141=HEAPF32[(($arrayidx3733)>>2)];
 var $mul3734=($2140)*($2141);
 var $2142=$fSlow70;
 var $2143=$fSlow75;
 var $fVec253735=(($this1+526580)|0);
 var $arrayidx3736=(($fVec253735+4)|0);
 var $2144=HEAPF32[(($arrayidx3736)>>2)];
 var $mul3737=($2143)*($2144);
 var $2145=$fSlow74;
 var $2146=$fTemp109;
 var $mul3738=($2145)*($2146);
 var $add3739=($mul3737)+($mul3738);
 var $mul3740=($2142)*($add3739);
 var $add3741=($mul3734)+($mul3740);
 var $fRec1933742=(($this1+526552)|0);
 var $arrayidx3743=(($fRec1933742)|0);
 HEAPF32[(($arrayidx3743)>>2)]=$add3741;
 var $fRec1933744=(($this1+526552)|0);
 var $arrayidx3745=(($fRec1933744)|0);
 var $2147=HEAPF32[(($arrayidx3745)>>2)];
 var $2148=$fSlow65;
 var $2149=$fSlow71;
 var $fRec192=(($this1+526540)|0);
 var $arrayidx3746=(($fRec192+8)|0);
 var $2150=HEAPF32[(($arrayidx3746)>>2)];
 var $mul3747=($2149)*($2150);
 var $2151=$fSlow42;
 var $fRec1923748=(($this1+526540)|0);
 var $arrayidx3749=(($fRec1923748+4)|0);
 var $2152=HEAPF32[(($arrayidx3749)>>2)];
 var $mul3750=($2151)*($2152);
 var $add3751=($mul3747)+($mul3750);
 var $mul3752=($2148)*($add3751);
 var $sub3753=($2147)-($mul3752);
 var $fRec1923754=(($this1+526540)|0);
 var $arrayidx3755=(($fRec1923754)|0);
 HEAPF32[(($arrayidx3755)>>2)]=$sub3753;
 var $2153=$fSlow121;
 var $fRec1723756=(($this1+526740)|0);
 var $arrayidx3757=(($fRec1723756+8)|0);
 var $2154=HEAPF32[(($arrayidx3757)>>2)];
 var $2155=$fSlow39;
 var $2156=$fTemp101;
 var $2157=$fSlow40;
 var $fRec1723758=(($this1+526740)|0);
 var $arrayidx3759=(($fRec1723758)|0);
 var $2158=HEAPF32[(($arrayidx3759)>>2)];
 var $mul3760=($2157)*($2158);
 var $add3761=($2156)+($mul3760);
 var $mul3762=($2155)*($add3761);
 var $add3763=($2154)+($mul3762);
 var $mul3764=($2153)*($add3763);
 var $2159=$fSlow122;
 var $fRec1773765=(($this1+526668)|0);
 var $arrayidx3766=(($fRec1773765+8)|0);
 var $2160=HEAPF32[(($arrayidx3766)>>2)];
 var $2161=$fSlow39;
 var $2162=$fTemp105;
 var $2163=$fSlow40;
 var $fRec1773767=(($this1+526668)|0);
 var $arrayidx3768=(($fRec1773767)|0);
 var $2164=HEAPF32[(($arrayidx3768)>>2)];
 var $mul3769=($2163)*($2164);
 var $add3770=($2162)+($mul3769);
 var $mul3771=($2161)*($add3770);
 var $add3772=($2160)+($mul3771);
 var $mul3773=($2159)*($add3772);
 var $add3774=($mul3764)+($mul3773);
 var $2165=$fSlow123;
 var $fRec1833775=(($this1+526608)|0);
 var $arrayidx3776=(($fRec1833775+8)|0);
 var $2166=HEAPF32[(($arrayidx3776)>>2)];
 var $2167=$fSlow39;
 var $2168=$fTemp108;
 var $2169=$fSlow40;
 var $fRec1833777=(($this1+526608)|0);
 var $arrayidx3778=(($fRec1833777)|0);
 var $2170=HEAPF32[(($arrayidx3778)>>2)];
 var $mul3779=($2169)*($2170);
 var $add3780=($2168)+($mul3779);
 var $mul3781=($2167)*($add3780);
 var $add3782=($2166)+($mul3781);
 var $mul3783=($2165)*($add3782);
 var $add3784=($add3774)+($mul3783);
 var $2171=$fSlow65;
 var $2172=$fSlow124;
 var $fRec1883785=(($this1+526560)|0);
 var $arrayidx3786=(($fRec1883785+8)|0);
 var $2173=HEAPF32[(($arrayidx3786)>>2)];
 var $fRec1883787=(($this1+526560)|0);
 var $arrayidx3788=(($fRec1883787)|0);
 var $2174=HEAPF32[(($arrayidx3788)>>2)];
 var $fRec1883789=(($this1+526560)|0);
 var $arrayidx3790=(($fRec1883789+4)|0);
 var $2175=HEAPF32[(($arrayidx3790)>>2)];
 var $mul3791=($2175)*(2);
 var $add3792=($2174)+($mul3791);
 var $add3793=($2173)+($add3792);
 var $mul3794=($2172)*($add3793);
 var $2176=$fSlow125;
 var $2177=$fSlow41;
 var $fRec1923795=(($this1+526540)|0);
 var $arrayidx3796=(($fRec1923795)|0);
 var $2178=HEAPF32[(($arrayidx3796)>>2)];
 var $mul3797=($2177)*($2178);
 var $2179=$fSlow76;
 var $fRec1923798=(($this1+526540)|0);
 var $arrayidx3799=(($fRec1923798+4)|0);
 var $2180=HEAPF32[(($arrayidx3799)>>2)];
 var $mul3800=($2179)*($2180);
 var $add3801=($mul3797)+($mul3800);
 var $2181=$fSlow41;
 var $fRec1923802=(($this1+526540)|0);
 var $arrayidx3803=(($fRec1923802+8)|0);
 var $2182=HEAPF32[(($arrayidx3803)>>2)];
 var $mul3804=($2181)*($2182);
 var $add3805=($add3801)+($mul3804);
 var $mul3806=($2176)*($add3805);
 var $add3807=($mul3794)+($mul3806);
 var $mul3808=($2171)*($add3807);
 var $add3809=($add3784)+($mul3808);
 $fTemp111=$add3809;
 var $2183=$fTemp98;
 var $2184=$fTemp111;
 var $add3810=($2183)+($2184);
 $fTemp112=$add3810;
 var $2185=$fTemp85;
 var $2186=$fTemp112;
 var $add3811=($2185)+($2186);
 $fTemp113=$add3811;
 var $2187=$fTemp58;
 var $2188=$fTemp113;
 var $add3812=($2187)+($2188);
 $fTemp114=$add3812;
 var $2189=$fSlow19;
 var $fRec198=(($this1+526532)|0);
 var $arrayidx3813=(($fRec198+4)|0);
 var $2190=HEAPF32[(($arrayidx3813)>>2)];
 var $mul3814=($2189)*($2190);
 var $2191=$fSlow20;
 var $2192=$fSlow14;
 var $fRec1=(($this1+458924)|0);
 var $arrayidx3815=(($fRec1+4)|0);
 var $2193=HEAPF32[(($arrayidx3815)>>2)];
 var $mul3816=($2192)*($2193);
 var $2194=$fSlow21;
 var $fRec13817=(($this1+458924)|0);
 var $arrayidx3818=(($fRec13817+8)|0);
 var $2195=HEAPF32[(($arrayidx3818)>>2)];
 var $mul3819=($2194)*($2195);
 var $add3820=($mul3816)+($mul3819);
 var $mul3821=($2191)*($add3820);
 var $add3822=($mul3814)+($mul3821);
 var $fRec1983823=(($this1+526532)|0);
 var $arrayidx3824=(($fRec1983823)|0);
 HEAPF32[(($arrayidx3824)>>2)]=$add3822;
 var $fRec1983825=(($this1+526532)|0);
 var $arrayidx3826=(($fRec1983825)|0);
 var $2196=HEAPF32[(($arrayidx3826)>>2)];
 var $2197=$fSlow16;
 var $2198=$fSlow22;
 var $fRec197=(($this1+526520)|0);
 var $arrayidx3827=(($fRec197+8)|0);
 var $2199=HEAPF32[(($arrayidx3827)>>2)];
 var $mul3828=($2198)*($2199);
 var $2200=$fSlow23;
 var $fRec1973829=(($this1+526520)|0);
 var $arrayidx3830=(($fRec1973829+4)|0);
 var $2201=HEAPF32[(($arrayidx3830)>>2)];
 var $mul3831=($2200)*($2201);
 var $add3832=($mul3828)+($mul3831);
 var $mul3833=($2197)*($add3832);
 var $sub3834=($2196)-($mul3833);
 var $fRec1973835=(($this1+526520)|0);
 var $arrayidx3836=(($fRec1973835)|0);
 HEAPF32[(($arrayidx3836)>>2)]=$sub3834;
 var $2202=$fSlow30;
 var $fRec196=(($this1+526508)|0);
 var $arrayidx3837=(($fRec196+4)|0);
 var $2203=HEAPF32[(($arrayidx3837)>>2)];
 var $mul3838=($2202)*($2203);
 $fTemp115=$mul3838;
 var $2204=$fSlow16;
 var $2205=$fSlow17;
 var $fRec1973839=(($this1+526520)|0);
 var $arrayidx3840=(($fRec1973839)|0);
 var $2206=HEAPF32[(($arrayidx3840)>>2)];
 var $mul3841=($2205)*($2206);
 var $2207=$fSlow24;
 var $fRec1973842=(($this1+526520)|0);
 var $arrayidx3843=(($fRec1973842+4)|0);
 var $2208=HEAPF32[(($arrayidx3843)>>2)];
 var $mul3844=($2207)*($2208);
 var $add3845=($mul3841)+($mul3844);
 var $2209=$fSlow17;
 var $fRec1973846=(($this1+526520)|0);
 var $arrayidx3847=(($fRec1973846+8)|0);
 var $2210=HEAPF32[(($arrayidx3847)>>2)];
 var $mul3848=($2209)*($2210);
 var $add3849=($add3845)+($mul3848);
 var $mul3850=($2204)*($add3849);
 var $2211=$fSlow27;
 var $2212=$fSlow28;
 var $fRec1963851=(($this1+526508)|0);
 var $arrayidx3852=(($fRec1963851+8)|0);
 var $2213=HEAPF32[(($arrayidx3852)>>2)];
 var $mul3853=($2212)*($2213);
 var $2214=$fTemp115;
 var $add3854=($mul3853)+($2214);
 var $mul3855=($2211)*($add3854);
 var $sub3856=($mul3850)-($mul3855);
 var $fRec1963857=(($this1+526508)|0);
 var $arrayidx3858=(($fRec1963857)|0);
 HEAPF32[(($arrayidx3858)>>2)]=$sub3856;
 var $2215=$fSlow36;
 var $fRec195=(($this1+526496)|0);
 var $arrayidx3859=(($fRec195+4)|0);
 var $2216=HEAPF32[(($arrayidx3859)>>2)];
 var $mul3860=($2215)*($2216);
 $fTemp116=$mul3860;
 var $fRec1963861=(($this1+526508)|0);
 var $arrayidx3862=(($fRec1963861+8)|0);
 var $2217=HEAPF32[(($arrayidx3862)>>2)];
 var $2218=$fSlow27;
 var $2219=$fTemp115;
 var $2220=$fSlow28;
 var $fRec1963863=(($this1+526508)|0);
 var $arrayidx3864=(($fRec1963863)|0);
 var $2221=HEAPF32[(($arrayidx3864)>>2)];
 var $mul3865=($2220)*($2221);
 var $add3866=($2219)+($mul3865);
 var $mul3867=($2218)*($add3866);
 var $add3868=($2217)+($mul3867);
 var $2222=$fSlow33;
 var $2223=$fSlow34;
 var $fRec1953869=(($this1+526496)|0);
 var $arrayidx3870=(($fRec1953869+8)|0);
 var $2224=HEAPF32[(($arrayidx3870)>>2)];
 var $mul3871=($2223)*($2224);
 var $2225=$fTemp116;
 var $add3872=($mul3871)+($2225);
 var $mul3873=($2222)*($add3872);
 var $sub3874=($add3868)-($mul3873);
 var $fRec1953875=(($this1+526496)|0);
 var $arrayidx3876=(($fRec1953875)|0);
 HEAPF32[(($arrayidx3876)>>2)]=$sub3874;
 var $2226=$fSlow42;
 var $fRec194=(($this1+526484)|0);
 var $arrayidx3877=(($fRec194+4)|0);
 var $2227=HEAPF32[(($arrayidx3877)>>2)];
 var $mul3878=($2226)*($2227);
 $fTemp117=$mul3878;
 var $fRec1953879=(($this1+526496)|0);
 var $arrayidx3880=(($fRec1953879+8)|0);
 var $2228=HEAPF32[(($arrayidx3880)>>2)];
 var $2229=$fSlow33;
 var $2230=$fTemp116;
 var $2231=$fSlow34;
 var $fRec1953881=(($this1+526496)|0);
 var $arrayidx3882=(($fRec1953881)|0);
 var $2232=HEAPF32[(($arrayidx3882)>>2)];
 var $mul3883=($2231)*($2232);
 var $add3884=($2230)+($mul3883);
 var $mul3885=($2229)*($add3884);
 var $add3886=($2228)+($mul3885);
 var $2233=$fSlow39;
 var $2234=$fSlow40;
 var $fRec1943887=(($this1+526484)|0);
 var $arrayidx3888=(($fRec1943887+8)|0);
 var $2235=HEAPF32[(($arrayidx3888)>>2)];
 var $mul3889=($2234)*($2235);
 var $2236=$fTemp117;
 var $add3890=($mul3889)+($2236);
 var $mul3891=($2233)*($add3890);
 var $sub3892=($add3886)-($mul3891);
 var $fRec1943893=(($this1+526484)|0);
 var $arrayidx3894=(($fRec1943893)|0);
 HEAPF32[(($arrayidx3894)>>2)]=$sub3892;
 var $2237=$fSlow19;
 var $fRec204=(($this1+526476)|0);
 var $arrayidx3895=(($fRec204+4)|0);
 var $2238=HEAPF32[(($arrayidx3895)>>2)];
 var $mul3896=($2237)*($2238);
 var $2239=$fSlow20;
 var $fRec13897=(($this1+458924)|0);
 var $arrayidx3898=(($fRec13897+4)|0);
 var $2240=HEAPF32[(($arrayidx3898)>>2)];
 var $fRec13899=(($this1+458924)|0);
 var $arrayidx3900=(($fRec13899+8)|0);
 var $2241=HEAPF32[(($arrayidx3900)>>2)];
 var $add3901=($2240)+($2241);
 var $mul3902=($2239)*($add3901);
 var $add3903=($mul3896)+($mul3902);
 var $fRec2043904=(($this1+526476)|0);
 var $arrayidx3905=(($fRec2043904)|0);
 HEAPF32[(($arrayidx3905)>>2)]=$add3903;
 var $fRec2043906=(($this1+526476)|0);
 var $arrayidx3907=(($fRec2043906)|0);
 var $2242=HEAPF32[(($arrayidx3907)>>2)];
 var $2243=$fSlow16;
 var $2244=$fSlow22;
 var $fRec203=(($this1+526464)|0);
 var $arrayidx3908=(($fRec203+8)|0);
 var $2245=HEAPF32[(($arrayidx3908)>>2)];
 var $mul3909=($2244)*($2245);
 var $2246=$fSlow23;
 var $fRec2033910=(($this1+526464)|0);
 var $arrayidx3911=(($fRec2033910+4)|0);
 var $2247=HEAPF32[(($arrayidx3911)>>2)];
 var $mul3912=($2246)*($2247);
 var $add3913=($mul3909)+($mul3912);
 var $mul3914=($2243)*($add3913);
 var $sub3915=($2242)-($mul3914);
 var $fRec2033916=(($this1+526464)|0);
 var $arrayidx3917=(($fRec2033916)|0);
 HEAPF32[(($arrayidx3917)>>2)]=$sub3915;
 var $fRec2033918=(($this1+526464)|0);
 var $arrayidx3919=(($fRec2033918+8)|0);
 var $2248=HEAPF32[(($arrayidx3919)>>2)];
 var $fRec2033920=(($this1+526464)|0);
 var $arrayidx3921=(($fRec2033920)|0);
 var $2249=HEAPF32[(($arrayidx3921)>>2)];
 var $fRec2033922=(($this1+526464)|0);
 var $arrayidx3923=(($fRec2033922+4)|0);
 var $2250=HEAPF32[(($arrayidx3923)>>2)];
 var $mul3924=($2250)*(2);
 var $add3925=($2249)+($mul3924);
 var $add3926=($2248)+($add3925);
 $fTemp118=$add3926;
 var $2251=$fSlow16;
 var $2252=$fTemp118;
 var $mul3927=($2251)*($2252);
 $fTemp119=$mul3927;
 var $2253=$fTemp119;
 var $fVec26=(($this1+526456)|0);
 var $arrayidx3928=(($fVec26)|0);
 HEAPF32[(($arrayidx3928)>>2)]=$2253;
 var $2254=$fSlow48;
 var $fRec202=(($this1+526448)|0);
 var $arrayidx3929=(($fRec202+4)|0);
 var $2255=HEAPF32[(($arrayidx3929)>>2)];
 var $mul3930=($2254)*($2255);
 var $2256=$fSlow49;
 var $2257=$fSlow51;
 var $fVec263931=(($this1+526456)|0);
 var $arrayidx3932=(($fVec263931+4)|0);
 var $2258=HEAPF32[(($arrayidx3932)>>2)];
 var $mul3933=($2257)*($2258);
 var $2259=$fSlow50;
 var $2260=$fTemp118;
 var $mul3934=($2259)*($2260);
 var $add3935=($mul3933)+($mul3934);
 var $mul3936=($2256)*($add3935);
 var $add3937=($mul3930)+($mul3936);
 var $fRec2023938=(($this1+526448)|0);
 var $arrayidx3939=(($fRec2023938)|0);
 HEAPF32[(($arrayidx3939)>>2)]=$add3937;
 var $fRec2023940=(($this1+526448)|0);
 var $arrayidx3941=(($fRec2023940)|0);
 var $2261=HEAPF32[(($arrayidx3941)>>2)];
 var $2262=$fSlow46;
 var $2263=$fSlow52;
 var $fRec201=(($this1+526436)|0);
 var $arrayidx3942=(($fRec201+8)|0);
 var $2264=HEAPF32[(($arrayidx3942)>>2)];
 var $mul3943=($2263)*($2264);
 var $2265=$fSlow30;
 var $fRec2013944=(($this1+526436)|0);
 var $arrayidx3945=(($fRec2013944+4)|0);
 var $2266=HEAPF32[(($arrayidx3945)>>2)];
 var $mul3946=($2265)*($2266);
 var $add3947=($mul3943)+($mul3946);
 var $mul3948=($2262)*($add3947);
 var $sub3949=($2261)-($mul3948);
 var $fRec2013950=(($this1+526436)|0);
 var $arrayidx3951=(($fRec2013950)|0);
 HEAPF32[(($arrayidx3951)>>2)]=$sub3949;
 var $2267=$fSlow36;
 var $fRec200=(($this1+526424)|0);
 var $arrayidx3952=(($fRec200+4)|0);
 var $2268=HEAPF32[(($arrayidx3952)>>2)];
 var $mul3953=($2267)*($2268);
 $fTemp120=$mul3953;
 var $2269=$fSlow46;
 var $2270=$fSlow29;
 var $fRec2013954=(($this1+526436)|0);
 var $arrayidx3955=(($fRec2013954)|0);
 var $2271=HEAPF32[(($arrayidx3955)>>2)];
 var $mul3956=($2270)*($2271);
 var $2272=$fSlow53;
 var $fRec2013957=(($this1+526436)|0);
 var $arrayidx3958=(($fRec2013957+4)|0);
 var $2273=HEAPF32[(($arrayidx3958)>>2)];
 var $mul3959=($2272)*($2273);
 var $add3960=($mul3956)+($mul3959);
 var $2274=$fSlow29;
 var $fRec2013961=(($this1+526436)|0);
 var $arrayidx3962=(($fRec2013961+8)|0);
 var $2275=HEAPF32[(($arrayidx3962)>>2)];
 var $mul3963=($2274)*($2275);
 var $add3964=($add3960)+($mul3963);
 var $mul3965=($2269)*($add3964);
 var $2276=$fSlow33;
 var $2277=$fSlow34;
 var $fRec2003966=(($this1+526424)|0);
 var $arrayidx3967=(($fRec2003966+8)|0);
 var $2278=HEAPF32[(($arrayidx3967)>>2)];
 var $mul3968=($2277)*($2278);
 var $2279=$fTemp120;
 var $add3969=($mul3968)+($2279);
 var $mul3970=($2276)*($add3969);
 var $sub3971=($mul3965)-($mul3970);
 var $fRec2003972=(($this1+526424)|0);
 var $arrayidx3973=(($fRec2003972)|0);
 HEAPF32[(($arrayidx3973)>>2)]=$sub3971;
 var $2280=$fSlow42;
 var $fRec199=(($this1+526412)|0);
 var $arrayidx3974=(($fRec199+4)|0);
 var $2281=HEAPF32[(($arrayidx3974)>>2)];
 var $mul3975=($2280)*($2281);
 $fTemp121=$mul3975;
 var $fRec2003976=(($this1+526424)|0);
 var $arrayidx3977=(($fRec2003976+8)|0);
 var $2282=HEAPF32[(($arrayidx3977)>>2)];
 var $2283=$fSlow33;
 var $2284=$fTemp120;
 var $2285=$fSlow34;
 var $fRec2003978=(($this1+526424)|0);
 var $arrayidx3979=(($fRec2003978)|0);
 var $2286=HEAPF32[(($arrayidx3979)>>2)];
 var $mul3980=($2285)*($2286);
 var $add3981=($2284)+($mul3980);
 var $mul3982=($2283)*($add3981);
 var $add3983=($2282)+($mul3982);
 var $2287=$fSlow39;
 var $2288=$fSlow40;
 var $fRec1993984=(($this1+526412)|0);
 var $arrayidx3985=(($fRec1993984+8)|0);
 var $2289=HEAPF32[(($arrayidx3985)>>2)];
 var $mul3986=($2288)*($2289);
 var $2290=$fTemp121;
 var $add3987=($mul3986)+($2290);
 var $mul3988=($2287)*($add3987);
 var $sub3989=($add3983)-($mul3988);
 var $fRec1993990=(($this1+526412)|0);
 var $arrayidx3991=(($fRec1993990)|0);
 HEAPF32[(($arrayidx3991)>>2)]=$sub3989;
 var $2291=$fSlow48;
 var $fRec209=(($this1+526404)|0);
 var $arrayidx3992=(($fRec209+4)|0);
 var $2292=HEAPF32[(($arrayidx3992)>>2)];
 var $mul3993=($2291)*($2292);
 var $2293=$fSlow49;
 var $fVec263994=(($this1+526456)|0);
 var $arrayidx3995=(($fVec263994+4)|0);
 var $2294=HEAPF32[(($arrayidx3995)>>2)];
 var $2295=$fTemp119;
 var $add3996=($2294)+($2295);
 var $mul3997=($2293)*($add3996);
 var $add3998=($mul3993)+($mul3997);
 var $fRec2093999=(($this1+526404)|0);
 var $arrayidx4000=(($fRec2093999)|0);
 HEAPF32[(($arrayidx4000)>>2)]=$add3998;
 var $fRec2094001=(($this1+526404)|0);
 var $arrayidx4002=(($fRec2094001)|0);
 var $2296=HEAPF32[(($arrayidx4002)>>2)];
 var $2297=$fSlow46;
 var $2298=$fSlow52;
 var $fRec208=(($this1+526392)|0);
 var $arrayidx4003=(($fRec208+8)|0);
 var $2299=HEAPF32[(($arrayidx4003)>>2)];
 var $mul4004=($2298)*($2299);
 var $2300=$fSlow30;
 var $fRec2084005=(($this1+526392)|0);
 var $arrayidx4006=(($fRec2084005+4)|0);
 var $2301=HEAPF32[(($arrayidx4006)>>2)];
 var $mul4007=($2300)*($2301);
 var $add4008=($mul4004)+($mul4007);
 var $mul4009=($2297)*($add4008);
 var $sub4010=($2296)-($mul4009);
 var $fRec2084011=(($this1+526392)|0);
 var $arrayidx4012=(($fRec2084011)|0);
 HEAPF32[(($arrayidx4012)>>2)]=$sub4010;
 var $fRec2084013=(($this1+526392)|0);
 var $arrayidx4014=(($fRec2084013+8)|0);
 var $2302=HEAPF32[(($arrayidx4014)>>2)];
 var $fRec2084015=(($this1+526392)|0);
 var $arrayidx4016=(($fRec2084015)|0);
 var $2303=HEAPF32[(($arrayidx4016)>>2)];
 var $fRec2084017=(($this1+526392)|0);
 var $arrayidx4018=(($fRec2084017+4)|0);
 var $2304=HEAPF32[(($arrayidx4018)>>2)];
 var $mul4019=($2304)*(2);
 var $add4020=($2303)+($mul4019);
 var $add4021=($2302)+($add4020);
 $fTemp122=$add4021;
 var $2305=$fSlow46;
 var $2306=$fTemp122;
 var $mul4022=($2305)*($2306);
 $fTemp123=$mul4022;
 var $2307=$fTemp123;
 var $fVec27=(($this1+526384)|0);
 var $arrayidx4023=(($fVec27)|0);
 HEAPF32[(($arrayidx4023)>>2)]=$2307;
 var $2308=$fSlow59;
 var $fRec207=(($this1+526376)|0);
 var $arrayidx4024=(($fRec207+4)|0);
 var $2309=HEAPF32[(($arrayidx4024)>>2)];
 var $mul4025=($2308)*($2309);
 var $2310=$fSlow60;
 var $2311=$fSlow62;
 var $fVec274026=(($this1+526384)|0);
 var $arrayidx4027=(($fVec274026+4)|0);
 var $2312=HEAPF32[(($arrayidx4027)>>2)];
 var $mul4028=($2311)*($2312);
 var $2313=$fSlow61;
 var $2314=$fTemp122;
 var $mul4029=($2313)*($2314);
 var $add4030=($mul4028)+($mul4029);
 var $mul4031=($2310)*($add4030);
 var $add4032=($mul4025)+($mul4031);
 var $fRec2074033=(($this1+526376)|0);
 var $arrayidx4034=(($fRec2074033)|0);
 HEAPF32[(($arrayidx4034)>>2)]=$add4032;
 var $fRec2074035=(($this1+526376)|0);
 var $arrayidx4036=(($fRec2074035)|0);
 var $2315=HEAPF32[(($arrayidx4036)>>2)];
 var $2316=$fSlow57;
 var $2317=$fSlow63;
 var $fRec206=(($this1+526364)|0);
 var $arrayidx4037=(($fRec206+8)|0);
 var $2318=HEAPF32[(($arrayidx4037)>>2)];
 var $mul4038=($2317)*($2318);
 var $2319=$fSlow36;
 var $fRec2064039=(($this1+526364)|0);
 var $arrayidx4040=(($fRec2064039+4)|0);
 var $2320=HEAPF32[(($arrayidx4040)>>2)];
 var $mul4041=($2319)*($2320);
 var $add4042=($mul4038)+($mul4041);
 var $mul4043=($2316)*($add4042);
 var $sub4044=($2315)-($mul4043);
 var $fRec2064045=(($this1+526364)|0);
 var $arrayidx4046=(($fRec2064045)|0);
 HEAPF32[(($arrayidx4046)>>2)]=$sub4044;
 var $2321=$fSlow42;
 var $fRec205=(($this1+526352)|0);
 var $arrayidx4047=(($fRec205+4)|0);
 var $2322=HEAPF32[(($arrayidx4047)>>2)];
 var $mul4048=($2321)*($2322);
 $fTemp124=$mul4048;
 var $2323=$fSlow57;
 var $2324=$fSlow35;
 var $fRec2064049=(($this1+526364)|0);
 var $arrayidx4050=(($fRec2064049)|0);
 var $2325=HEAPF32[(($arrayidx4050)>>2)];
 var $mul4051=($2324)*($2325);
 var $2326=$fSlow64;
 var $fRec2064052=(($this1+526364)|0);
 var $arrayidx4053=(($fRec2064052+4)|0);
 var $2327=HEAPF32[(($arrayidx4053)>>2)];
 var $mul4054=($2326)*($2327);
 var $add4055=($mul4051)+($mul4054);
 var $2328=$fSlow35;
 var $fRec2064056=(($this1+526364)|0);
 var $arrayidx4057=(($fRec2064056+8)|0);
 var $2329=HEAPF32[(($arrayidx4057)>>2)];
 var $mul4058=($2328)*($2329);
 var $add4059=($add4055)+($mul4058);
 var $mul4060=($2323)*($add4059);
 var $2330=$fSlow39;
 var $2331=$fSlow40;
 var $fRec2054061=(($this1+526352)|0);
 var $arrayidx4062=(($fRec2054061+8)|0);
 var $2332=HEAPF32[(($arrayidx4062)>>2)];
 var $mul4063=($2331)*($2332);
 var $2333=$fTemp124;
 var $add4064=($mul4063)+($2333);
 var $mul4065=($2330)*($add4064);
 var $sub4066=($mul4060)-($mul4065);
 var $fRec2054067=(($this1+526352)|0);
 var $arrayidx4068=(($fRec2054067)|0);
 HEAPF32[(($arrayidx4068)>>2)]=$sub4066;
 var $2334=$fSlow59;
 var $fRec213=(($this1+526344)|0);
 var $arrayidx4069=(($fRec213+4)|0);
 var $2335=HEAPF32[(($arrayidx4069)>>2)];
 var $mul4070=($2334)*($2335);
 var $2336=$fSlow60;
 var $fVec274071=(($this1+526384)|0);
 var $arrayidx4072=(($fVec274071+4)|0);
 var $2337=HEAPF32[(($arrayidx4072)>>2)];
 var $2338=$fTemp123;
 var $add4073=($2337)+($2338);
 var $mul4074=($2336)*($add4073);
 var $add4075=($mul4070)+($mul4074);
 var $fRec2134076=(($this1+526344)|0);
 var $arrayidx4077=(($fRec2134076)|0);
 HEAPF32[(($arrayidx4077)>>2)]=$add4075;
 var $fRec2134078=(($this1+526344)|0);
 var $arrayidx4079=(($fRec2134078)|0);
 var $2339=HEAPF32[(($arrayidx4079)>>2)];
 var $2340=$fSlow57;
 var $2341=$fSlow63;
 var $fRec212=(($this1+526332)|0);
 var $arrayidx4080=(($fRec212+8)|0);
 var $2342=HEAPF32[(($arrayidx4080)>>2)];
 var $mul4081=($2341)*($2342);
 var $2343=$fSlow36;
 var $fRec2124082=(($this1+526332)|0);
 var $arrayidx4083=(($fRec2124082+4)|0);
 var $2344=HEAPF32[(($arrayidx4083)>>2)];
 var $mul4084=($2343)*($2344);
 var $add4085=($mul4081)+($mul4084);
 var $mul4086=($2340)*($add4085);
 var $sub4087=($2339)-($mul4086);
 var $fRec2124088=(($this1+526332)|0);
 var $arrayidx4089=(($fRec2124088)|0);
 HEAPF32[(($arrayidx4089)>>2)]=$sub4087;
 var $fRec2124090=(($this1+526332)|0);
 var $arrayidx4091=(($fRec2124090+8)|0);
 var $2345=HEAPF32[(($arrayidx4091)>>2)];
 var $fRec2124092=(($this1+526332)|0);
 var $arrayidx4093=(($fRec2124092)|0);
 var $2346=HEAPF32[(($arrayidx4093)>>2)];
 var $fRec2124094=(($this1+526332)|0);
 var $arrayidx4095=(($fRec2124094+4)|0);
 var $2347=HEAPF32[(($arrayidx4095)>>2)];
 var $mul4096=($2347)*(2);
 var $add4097=($2346)+($mul4096);
 var $add4098=($2345)+($add4097);
 $fTemp125=$add4098;
 var $2348=$fSlow57;
 var $2349=$fTemp125;
 var $mul4099=($2348)*($2349);
 $fTemp126=$mul4099;
 var $2350=$fTemp126;
 var $fVec28=(($this1+526324)|0);
 var $arrayidx4100=(($fVec28)|0);
 HEAPF32[(($arrayidx4100)>>2)]=$2350;
 var $2351=$fSlow69;
 var $fRec211=(($this1+526316)|0);
 var $arrayidx4101=(($fRec211+4)|0);
 var $2352=HEAPF32[(($arrayidx4101)>>2)];
 var $mul4102=($2351)*($2352);
 var $2353=$fSlow70;
 var $fVec284103=(($this1+526324)|0);
 var $arrayidx4104=(($fVec284103+4)|0);
 var $2354=HEAPF32[(($arrayidx4104)>>2)];
 var $2355=$fTemp126;
 var $add4105=($2354)+($2355);
 var $mul4106=($2353)*($add4105);
 var $add4107=($mul4102)+($mul4106);
 var $fRec2114108=(($this1+526316)|0);
 var $arrayidx4109=(($fRec2114108)|0);
 HEAPF32[(($arrayidx4109)>>2)]=$add4107;
 var $fRec2114110=(($this1+526316)|0);
 var $arrayidx4111=(($fRec2114110)|0);
 var $2356=HEAPF32[(($arrayidx4111)>>2)];
 var $2357=$fSlow65;
 var $2358=$fSlow71;
 var $fRec210=(($this1+526304)|0);
 var $arrayidx4112=(($fRec210+8)|0);
 var $2359=HEAPF32[(($arrayidx4112)>>2)];
 var $mul4113=($2358)*($2359);
 var $2360=$fSlow42;
 var $fRec2104114=(($this1+526304)|0);
 var $arrayidx4115=(($fRec2104114+4)|0);
 var $2361=HEAPF32[(($arrayidx4115)>>2)];
 var $mul4116=($2360)*($2361);
 var $add4117=($mul4113)+($mul4116);
 var $mul4118=($2357)*($add4117);
 var $sub4119=($2356)-($mul4118);
 var $fRec2104120=(($this1+526304)|0);
 var $arrayidx4121=(($fRec2104120)|0);
 HEAPF32[(($arrayidx4121)>>2)]=$sub4119;
 var $2362=$fSlow69;
 var $fRec215=(($this1+526296)|0);
 var $arrayidx4122=(($fRec215+4)|0);
 var $2363=HEAPF32[(($arrayidx4122)>>2)];
 var $mul4123=($2362)*($2363);
 var $2364=$fSlow70;
 var $2365=$fSlow75;
 var $fVec284124=(($this1+526324)|0);
 var $arrayidx4125=(($fVec284124+4)|0);
 var $2366=HEAPF32[(($arrayidx4125)>>2)];
 var $mul4126=($2365)*($2366);
 var $2367=$fSlow74;
 var $2368=$fTemp125;
 var $mul4127=($2367)*($2368);
 var $add4128=($mul4126)+($mul4127);
 var $mul4129=($2364)*($add4128);
 var $add4130=($mul4123)+($mul4129);
 var $fRec2154131=(($this1+526296)|0);
 var $arrayidx4132=(($fRec2154131)|0);
 HEAPF32[(($arrayidx4132)>>2)]=$add4130;
 var $fRec2154133=(($this1+526296)|0);
 var $arrayidx4134=(($fRec2154133)|0);
 var $2369=HEAPF32[(($arrayidx4134)>>2)];
 var $2370=$fSlow65;
 var $2371=$fSlow71;
 var $fRec214=(($this1+526284)|0);
 var $arrayidx4135=(($fRec214+8)|0);
 var $2372=HEAPF32[(($arrayidx4135)>>2)];
 var $mul4136=($2371)*($2372);
 var $2373=$fSlow42;
 var $fRec2144137=(($this1+526284)|0);
 var $arrayidx4138=(($fRec2144137+4)|0);
 var $2374=HEAPF32[(($arrayidx4138)>>2)];
 var $mul4139=($2373)*($2374);
 var $add4140=($mul4136)+($mul4139);
 var $mul4141=($2370)*($add4140);
 var $sub4142=($2369)-($mul4141);
 var $fRec2144143=(($this1+526284)|0);
 var $arrayidx4144=(($fRec2144143)|0);
 HEAPF32[(($arrayidx4144)>>2)]=$sub4142;
 var $2375=$fSlow128;
 var $fRec1944145=(($this1+526484)|0);
 var $arrayidx4146=(($fRec1944145+8)|0);
 var $2376=HEAPF32[(($arrayidx4146)>>2)];
 var $2377=$fSlow39;
 var $2378=$fTemp117;
 var $2379=$fSlow40;
 var $fRec1944147=(($this1+526484)|0);
 var $arrayidx4148=(($fRec1944147)|0);
 var $2380=HEAPF32[(($arrayidx4148)>>2)];
 var $mul4149=($2379)*($2380);
 var $add4150=($2378)+($mul4149);
 var $mul4151=($2377)*($add4150);
 var $add4152=($2376)+($mul4151);
 var $mul4153=($2375)*($add4152);
 var $2381=$fSlow129;
 var $fRec1994154=(($this1+526412)|0);
 var $arrayidx4155=(($fRec1994154+8)|0);
 var $2382=HEAPF32[(($arrayidx4155)>>2)];
 var $2383=$fSlow39;
 var $2384=$fTemp121;
 var $2385=$fSlow40;
 var $fRec1994156=(($this1+526412)|0);
 var $arrayidx4157=(($fRec1994156)|0);
 var $2386=HEAPF32[(($arrayidx4157)>>2)];
 var $mul4158=($2385)*($2386);
 var $add4159=($2384)+($mul4158);
 var $mul4160=($2383)*($add4159);
 var $add4161=($2382)+($mul4160);
 var $mul4162=($2381)*($add4161);
 var $add4163=($mul4153)+($mul4162);
 var $2387=$fSlow130;
 var $fRec2054164=(($this1+526352)|0);
 var $arrayidx4165=(($fRec2054164+8)|0);
 var $2388=HEAPF32[(($arrayidx4165)>>2)];
 var $2389=$fSlow39;
 var $2390=$fTemp124;
 var $2391=$fSlow40;
 var $fRec2054166=(($this1+526352)|0);
 var $arrayidx4167=(($fRec2054166)|0);
 var $2392=HEAPF32[(($arrayidx4167)>>2)];
 var $mul4168=($2391)*($2392);
 var $add4169=($2390)+($mul4168);
 var $mul4170=($2389)*($add4169);
 var $add4171=($2388)+($mul4170);
 var $mul4172=($2387)*($add4171);
 var $add4173=($add4163)+($mul4172);
 var $2393=$fSlow65;
 var $2394=$fSlow131;
 var $fRec2104174=(($this1+526304)|0);
 var $arrayidx4175=(($fRec2104174+8)|0);
 var $2395=HEAPF32[(($arrayidx4175)>>2)];
 var $fRec2104176=(($this1+526304)|0);
 var $arrayidx4177=(($fRec2104176)|0);
 var $2396=HEAPF32[(($arrayidx4177)>>2)];
 var $fRec2104178=(($this1+526304)|0);
 var $arrayidx4179=(($fRec2104178+4)|0);
 var $2397=HEAPF32[(($arrayidx4179)>>2)];
 var $mul4180=($2397)*(2);
 var $add4181=($2396)+($mul4180);
 var $add4182=($2395)+($add4181);
 var $mul4183=($2394)*($add4182);
 var $2398=$fSlow132;
 var $2399=$fSlow41;
 var $fRec2144184=(($this1+526284)|0);
 var $arrayidx4185=(($fRec2144184)|0);
 var $2400=HEAPF32[(($arrayidx4185)>>2)];
 var $mul4186=($2399)*($2400);
 var $2401=$fSlow76;
 var $fRec2144187=(($this1+526284)|0);
 var $arrayidx4188=(($fRec2144187+4)|0);
 var $2402=HEAPF32[(($arrayidx4188)>>2)];
 var $mul4189=($2401)*($2402);
 var $add4190=($mul4186)+($mul4189);
 var $2403=$fSlow41;
 var $fRec2144191=(($this1+526284)|0);
 var $arrayidx4192=(($fRec2144191+8)|0);
 var $2404=HEAPF32[(($arrayidx4192)>>2)];
 var $mul4193=($2403)*($2404);
 var $add4194=($add4190)+($mul4193);
 var $mul4195=($2398)*($add4194);
 var $add4196=($mul4183)+($mul4195);
 var $mul4197=($2393)*($add4196);
 var $add4198=($add4173)+($mul4197);
 $fTemp127=$add4198;
 var $2405=$fSlow19;
 var $fRec220=(($this1+526276)|0);
 var $arrayidx4199=(($fRec220+4)|0);
 var $2406=HEAPF32[(($arrayidx4199)>>2)];
 var $mul4200=($2405)*($2406);
 var $2407=$fSlow20;
 var $2408=$fSlow14;
 var $fRec9=(($this1+196684)|0);
 var $arrayidx4201=(($fRec9+4)|0);
 var $2409=HEAPF32[(($arrayidx4201)>>2)];
 var $mul4202=($2408)*($2409);
 var $2410=$fSlow21;
 var $fRec94203=(($this1+196684)|0);
 var $arrayidx4204=(($fRec94203+8)|0);
 var $2411=HEAPF32[(($arrayidx4204)>>2)];
 var $mul4205=($2410)*($2411);
 var $add4206=($mul4202)+($mul4205);
 var $mul4207=($2407)*($add4206);
 var $add4208=($mul4200)+($mul4207);
 var $fRec2204209=(($this1+526276)|0);
 var $arrayidx4210=(($fRec2204209)|0);
 HEAPF32[(($arrayidx4210)>>2)]=$add4208;
 var $fRec2204211=(($this1+526276)|0);
 var $arrayidx4212=(($fRec2204211)|0);
 var $2412=HEAPF32[(($arrayidx4212)>>2)];
 var $2413=$fSlow16;
 var $2414=$fSlow22;
 var $fRec219=(($this1+526264)|0);
 var $arrayidx4213=(($fRec219+8)|0);
 var $2415=HEAPF32[(($arrayidx4213)>>2)];
 var $mul4214=($2414)*($2415);
 var $2416=$fSlow23;
 var $fRec2194215=(($this1+526264)|0);
 var $arrayidx4216=(($fRec2194215+4)|0);
 var $2417=HEAPF32[(($arrayidx4216)>>2)];
 var $mul4217=($2416)*($2417);
 var $add4218=($mul4214)+($mul4217);
 var $mul4219=($2413)*($add4218);
 var $sub4220=($2412)-($mul4219);
 var $fRec2194221=(($this1+526264)|0);
 var $arrayidx4222=(($fRec2194221)|0);
 HEAPF32[(($arrayidx4222)>>2)]=$sub4220;
 var $2418=$fSlow30;
 var $fRec218=(($this1+526252)|0);
 var $arrayidx4223=(($fRec218+4)|0);
 var $2419=HEAPF32[(($arrayidx4223)>>2)];
 var $mul4224=($2418)*($2419);
 $fTemp128=$mul4224;
 var $2420=$fSlow16;
 var $2421=$fSlow17;
 var $fRec2194225=(($this1+526264)|0);
 var $arrayidx4226=(($fRec2194225)|0);
 var $2422=HEAPF32[(($arrayidx4226)>>2)];
 var $mul4227=($2421)*($2422);
 var $2423=$fSlow24;
 var $fRec2194228=(($this1+526264)|0);
 var $arrayidx4229=(($fRec2194228+4)|0);
 var $2424=HEAPF32[(($arrayidx4229)>>2)];
 var $mul4230=($2423)*($2424);
 var $add4231=($mul4227)+($mul4230);
 var $2425=$fSlow17;
 var $fRec2194232=(($this1+526264)|0);
 var $arrayidx4233=(($fRec2194232+8)|0);
 var $2426=HEAPF32[(($arrayidx4233)>>2)];
 var $mul4234=($2425)*($2426);
 var $add4235=($add4231)+($mul4234);
 var $mul4236=($2420)*($add4235);
 var $2427=$fSlow27;
 var $2428=$fSlow28;
 var $fRec2184237=(($this1+526252)|0);
 var $arrayidx4238=(($fRec2184237+8)|0);
 var $2429=HEAPF32[(($arrayidx4238)>>2)];
 var $mul4239=($2428)*($2429);
 var $2430=$fTemp128;
 var $add4240=($mul4239)+($2430);
 var $mul4241=($2427)*($add4240);
 var $sub4242=($mul4236)-($mul4241);
 var $fRec2184243=(($this1+526252)|0);
 var $arrayidx4244=(($fRec2184243)|0);
 HEAPF32[(($arrayidx4244)>>2)]=$sub4242;
 var $2431=$fSlow36;
 var $fRec217=(($this1+526240)|0);
 var $arrayidx4245=(($fRec217+4)|0);
 var $2432=HEAPF32[(($arrayidx4245)>>2)];
 var $mul4246=($2431)*($2432);
 $fTemp129=$mul4246;
 var $fRec2184247=(($this1+526252)|0);
 var $arrayidx4248=(($fRec2184247+8)|0);
 var $2433=HEAPF32[(($arrayidx4248)>>2)];
 var $2434=$fSlow27;
 var $2435=$fTemp128;
 var $2436=$fSlow28;
 var $fRec2184249=(($this1+526252)|0);
 var $arrayidx4250=(($fRec2184249)|0);
 var $2437=HEAPF32[(($arrayidx4250)>>2)];
 var $mul4251=($2436)*($2437);
 var $add4252=($2435)+($mul4251);
 var $mul4253=($2434)*($add4252);
 var $add4254=($2433)+($mul4253);
 var $2438=$fSlow33;
 var $2439=$fSlow34;
 var $fRec2174255=(($this1+526240)|0);
 var $arrayidx4256=(($fRec2174255+8)|0);
 var $2440=HEAPF32[(($arrayidx4256)>>2)];
 var $mul4257=($2439)*($2440);
 var $2441=$fTemp129;
 var $add4258=($mul4257)+($2441);
 var $mul4259=($2438)*($add4258);
 var $sub4260=($add4254)-($mul4259);
 var $fRec2174261=(($this1+526240)|0);
 var $arrayidx4262=(($fRec2174261)|0);
 HEAPF32[(($arrayidx4262)>>2)]=$sub4260;
 var $2442=$fSlow42;
 var $fRec216=(($this1+526228)|0);
 var $arrayidx4263=(($fRec216+4)|0);
 var $2443=HEAPF32[(($arrayidx4263)>>2)];
 var $mul4264=($2442)*($2443);
 $fTemp130=$mul4264;
 var $fRec2174265=(($this1+526240)|0);
 var $arrayidx4266=(($fRec2174265+8)|0);
 var $2444=HEAPF32[(($arrayidx4266)>>2)];
 var $2445=$fSlow33;
 var $2446=$fTemp129;
 var $2447=$fSlow34;
 var $fRec2174267=(($this1+526240)|0);
 var $arrayidx4268=(($fRec2174267)|0);
 var $2448=HEAPF32[(($arrayidx4268)>>2)];
 var $mul4269=($2447)*($2448);
 var $add4270=($2446)+($mul4269);
 var $mul4271=($2445)*($add4270);
 var $add4272=($2444)+($mul4271);
 var $2449=$fSlow39;
 var $2450=$fSlow40;
 var $fRec2164273=(($this1+526228)|0);
 var $arrayidx4274=(($fRec2164273+8)|0);
 var $2451=HEAPF32[(($arrayidx4274)>>2)];
 var $mul4275=($2450)*($2451);
 var $2452=$fTemp130;
 var $add4276=($mul4275)+($2452);
 var $mul4277=($2449)*($add4276);
 var $sub4278=($add4272)-($mul4277);
 var $fRec2164279=(($this1+526228)|0);
 var $arrayidx4280=(($fRec2164279)|0);
 HEAPF32[(($arrayidx4280)>>2)]=$sub4278;
 var $2453=$fSlow19;
 var $fRec226=(($this1+526220)|0);
 var $arrayidx4281=(($fRec226+4)|0);
 var $2454=HEAPF32[(($arrayidx4281)>>2)];
 var $mul4282=($2453)*($2454);
 var $2455=$fSlow20;
 var $fRec94283=(($this1+196684)|0);
 var $arrayidx4284=(($fRec94283+4)|0);
 var $2456=HEAPF32[(($arrayidx4284)>>2)];
 var $fRec94285=(($this1+196684)|0);
 var $arrayidx4286=(($fRec94285+8)|0);
 var $2457=HEAPF32[(($arrayidx4286)>>2)];
 var $add4287=($2456)+($2457);
 var $mul4288=($2455)*($add4287);
 var $add4289=($mul4282)+($mul4288);
 var $fRec2264290=(($this1+526220)|0);
 var $arrayidx4291=(($fRec2264290)|0);
 HEAPF32[(($arrayidx4291)>>2)]=$add4289;
 var $fRec2264292=(($this1+526220)|0);
 var $arrayidx4293=(($fRec2264292)|0);
 var $2458=HEAPF32[(($arrayidx4293)>>2)];
 var $2459=$fSlow16;
 var $2460=$fSlow22;
 var $fRec225=(($this1+526208)|0);
 var $arrayidx4294=(($fRec225+8)|0);
 var $2461=HEAPF32[(($arrayidx4294)>>2)];
 var $mul4295=($2460)*($2461);
 var $2462=$fSlow23;
 var $fRec2254296=(($this1+526208)|0);
 var $arrayidx4297=(($fRec2254296+4)|0);
 var $2463=HEAPF32[(($arrayidx4297)>>2)];
 var $mul4298=($2462)*($2463);
 var $add4299=($mul4295)+($mul4298);
 var $mul4300=($2459)*($add4299);
 var $sub4301=($2458)-($mul4300);
 var $fRec2254302=(($this1+526208)|0);
 var $arrayidx4303=(($fRec2254302)|0);
 HEAPF32[(($arrayidx4303)>>2)]=$sub4301;
 var $fRec2254304=(($this1+526208)|0);
 var $arrayidx4305=(($fRec2254304+8)|0);
 var $2464=HEAPF32[(($arrayidx4305)>>2)];
 var $fRec2254306=(($this1+526208)|0);
 var $arrayidx4307=(($fRec2254306)|0);
 var $2465=HEAPF32[(($arrayidx4307)>>2)];
 var $fRec2254308=(($this1+526208)|0);
 var $arrayidx4309=(($fRec2254308+4)|0);
 var $2466=HEAPF32[(($arrayidx4309)>>2)];
 var $mul4310=($2466)*(2);
 var $add4311=($2465)+($mul4310);
 var $add4312=($2464)+($add4311);
 $fTemp131=$add4312;
 var $2467=$fSlow16;
 var $2468=$fTemp131;
 var $mul4313=($2467)*($2468);
 $fTemp132=$mul4313;
 var $2469=$fTemp132;
 var $fVec29=(($this1+526200)|0);
 var $arrayidx4314=(($fVec29)|0);
 HEAPF32[(($arrayidx4314)>>2)]=$2469;
 var $2470=$fSlow48;
 var $fRec224=(($this1+526192)|0);
 var $arrayidx4315=(($fRec224+4)|0);
 var $2471=HEAPF32[(($arrayidx4315)>>2)];
 var $mul4316=($2470)*($2471);
 var $2472=$fSlow49;
 var $2473=$fSlow51;
 var $fVec294317=(($this1+526200)|0);
 var $arrayidx4318=(($fVec294317+4)|0);
 var $2474=HEAPF32[(($arrayidx4318)>>2)];
 var $mul4319=($2473)*($2474);
 var $2475=$fSlow50;
 var $2476=$fTemp131;
 var $mul4320=($2475)*($2476);
 var $add4321=($mul4319)+($mul4320);
 var $mul4322=($2472)*($add4321);
 var $add4323=($mul4316)+($mul4322);
 var $fRec2244324=(($this1+526192)|0);
 var $arrayidx4325=(($fRec2244324)|0);
 HEAPF32[(($arrayidx4325)>>2)]=$add4323;
 var $fRec2244326=(($this1+526192)|0);
 var $arrayidx4327=(($fRec2244326)|0);
 var $2477=HEAPF32[(($arrayidx4327)>>2)];
 var $2478=$fSlow46;
 var $2479=$fSlow52;
 var $fRec223=(($this1+526180)|0);
 var $arrayidx4328=(($fRec223+8)|0);
 var $2480=HEAPF32[(($arrayidx4328)>>2)];
 var $mul4329=($2479)*($2480);
 var $2481=$fSlow30;
 var $fRec2234330=(($this1+526180)|0);
 var $arrayidx4331=(($fRec2234330+4)|0);
 var $2482=HEAPF32[(($arrayidx4331)>>2)];
 var $mul4332=($2481)*($2482);
 var $add4333=($mul4329)+($mul4332);
 var $mul4334=($2478)*($add4333);
 var $sub4335=($2477)-($mul4334);
 var $fRec2234336=(($this1+526180)|0);
 var $arrayidx4337=(($fRec2234336)|0);
 HEAPF32[(($arrayidx4337)>>2)]=$sub4335;
 var $2483=$fSlow36;
 var $fRec222=(($this1+526168)|0);
 var $arrayidx4338=(($fRec222+4)|0);
 var $2484=HEAPF32[(($arrayidx4338)>>2)];
 var $mul4339=($2483)*($2484);
 $fTemp133=$mul4339;
 var $2485=$fSlow46;
 var $2486=$fSlow29;
 var $fRec2234340=(($this1+526180)|0);
 var $arrayidx4341=(($fRec2234340)|0);
 var $2487=HEAPF32[(($arrayidx4341)>>2)];
 var $mul4342=($2486)*($2487);
 var $2488=$fSlow53;
 var $fRec2234343=(($this1+526180)|0);
 var $arrayidx4344=(($fRec2234343+4)|0);
 var $2489=HEAPF32[(($arrayidx4344)>>2)];
 var $mul4345=($2488)*($2489);
 var $add4346=($mul4342)+($mul4345);
 var $2490=$fSlow29;
 var $fRec2234347=(($this1+526180)|0);
 var $arrayidx4348=(($fRec2234347+8)|0);
 var $2491=HEAPF32[(($arrayidx4348)>>2)];
 var $mul4349=($2490)*($2491);
 var $add4350=($add4346)+($mul4349);
 var $mul4351=($2485)*($add4350);
 var $2492=$fSlow33;
 var $2493=$fSlow34;
 var $fRec2224352=(($this1+526168)|0);
 var $arrayidx4353=(($fRec2224352+8)|0);
 var $2494=HEAPF32[(($arrayidx4353)>>2)];
 var $mul4354=($2493)*($2494);
 var $2495=$fTemp133;
 var $add4355=($mul4354)+($2495);
 var $mul4356=($2492)*($add4355);
 var $sub4357=($mul4351)-($mul4356);
 var $fRec2224358=(($this1+526168)|0);
 var $arrayidx4359=(($fRec2224358)|0);
 HEAPF32[(($arrayidx4359)>>2)]=$sub4357;
 var $2496=$fSlow42;
 var $fRec221=(($this1+526156)|0);
 var $arrayidx4360=(($fRec221+4)|0);
 var $2497=HEAPF32[(($arrayidx4360)>>2)];
 var $mul4361=($2496)*($2497);
 $fTemp134=$mul4361;
 var $fRec2224362=(($this1+526168)|0);
 var $arrayidx4363=(($fRec2224362+8)|0);
 var $2498=HEAPF32[(($arrayidx4363)>>2)];
 var $2499=$fSlow33;
 var $2500=$fTemp133;
 var $2501=$fSlow34;
 var $fRec2224364=(($this1+526168)|0);
 var $arrayidx4365=(($fRec2224364)|0);
 var $2502=HEAPF32[(($arrayidx4365)>>2)];
 var $mul4366=($2501)*($2502);
 var $add4367=($2500)+($mul4366);
 var $mul4368=($2499)*($add4367);
 var $add4369=($2498)+($mul4368);
 var $2503=$fSlow39;
 var $2504=$fSlow40;
 var $fRec2214370=(($this1+526156)|0);
 var $arrayidx4371=(($fRec2214370+8)|0);
 var $2505=HEAPF32[(($arrayidx4371)>>2)];
 var $mul4372=($2504)*($2505);
 var $2506=$fTemp134;
 var $add4373=($mul4372)+($2506);
 var $mul4374=($2503)*($add4373);
 var $sub4375=($add4369)-($mul4374);
 var $fRec2214376=(($this1+526156)|0);
 var $arrayidx4377=(($fRec2214376)|0);
 HEAPF32[(($arrayidx4377)>>2)]=$sub4375;
 var $2507=$fSlow48;
 var $fRec231=(($this1+526148)|0);
 var $arrayidx4378=(($fRec231+4)|0);
 var $2508=HEAPF32[(($arrayidx4378)>>2)];
 var $mul4379=($2507)*($2508);
 var $2509=$fSlow49;
 var $fVec294380=(($this1+526200)|0);
 var $arrayidx4381=(($fVec294380+4)|0);
 var $2510=HEAPF32[(($arrayidx4381)>>2)];
 var $2511=$fTemp132;
 var $add4382=($2510)+($2511);
 var $mul4383=($2509)*($add4382);
 var $add4384=($mul4379)+($mul4383);
 var $fRec2314385=(($this1+526148)|0);
 var $arrayidx4386=(($fRec2314385)|0);
 HEAPF32[(($arrayidx4386)>>2)]=$add4384;
 var $fRec2314387=(($this1+526148)|0);
 var $arrayidx4388=(($fRec2314387)|0);
 var $2512=HEAPF32[(($arrayidx4388)>>2)];
 var $2513=$fSlow46;
 var $2514=$fSlow52;
 var $fRec230=(($this1+526136)|0);
 var $arrayidx4389=(($fRec230+8)|0);
 var $2515=HEAPF32[(($arrayidx4389)>>2)];
 var $mul4390=($2514)*($2515);
 var $2516=$fSlow30;
 var $fRec2304391=(($this1+526136)|0);
 var $arrayidx4392=(($fRec2304391+4)|0);
 var $2517=HEAPF32[(($arrayidx4392)>>2)];
 var $mul4393=($2516)*($2517);
 var $add4394=($mul4390)+($mul4393);
 var $mul4395=($2513)*($add4394);
 var $sub4396=($2512)-($mul4395);
 var $fRec2304397=(($this1+526136)|0);
 var $arrayidx4398=(($fRec2304397)|0);
 HEAPF32[(($arrayidx4398)>>2)]=$sub4396;
 var $fRec2304399=(($this1+526136)|0);
 var $arrayidx4400=(($fRec2304399+8)|0);
 var $2518=HEAPF32[(($arrayidx4400)>>2)];
 var $fRec2304401=(($this1+526136)|0);
 var $arrayidx4402=(($fRec2304401)|0);
 var $2519=HEAPF32[(($arrayidx4402)>>2)];
 var $fRec2304403=(($this1+526136)|0);
 var $arrayidx4404=(($fRec2304403+4)|0);
 var $2520=HEAPF32[(($arrayidx4404)>>2)];
 var $mul4405=($2520)*(2);
 var $add4406=($2519)+($mul4405);
 var $add4407=($2518)+($add4406);
 $fTemp135=$add4407;
 var $2521=$fSlow46;
 var $2522=$fTemp135;
 var $mul4408=($2521)*($2522);
 $fTemp136=$mul4408;
 var $2523=$fTemp136;
 var $fVec30=(($this1+526128)|0);
 var $arrayidx4409=(($fVec30)|0);
 HEAPF32[(($arrayidx4409)>>2)]=$2523;
 var $2524=$fSlow59;
 var $fRec229=(($this1+526120)|0);
 var $arrayidx4410=(($fRec229+4)|0);
 var $2525=HEAPF32[(($arrayidx4410)>>2)];
 var $mul4411=($2524)*($2525);
 var $2526=$fSlow60;
 var $2527=$fSlow62;
 var $fVec304412=(($this1+526128)|0);
 var $arrayidx4413=(($fVec304412+4)|0);
 var $2528=HEAPF32[(($arrayidx4413)>>2)];
 var $mul4414=($2527)*($2528);
 var $2529=$fSlow61;
 var $2530=$fTemp135;
 var $mul4415=($2529)*($2530);
 var $add4416=($mul4414)+($mul4415);
 var $mul4417=($2526)*($add4416);
 var $add4418=($mul4411)+($mul4417);
 var $fRec2294419=(($this1+526120)|0);
 var $arrayidx4420=(($fRec2294419)|0);
 HEAPF32[(($arrayidx4420)>>2)]=$add4418;
 var $fRec2294421=(($this1+526120)|0);
 var $arrayidx4422=(($fRec2294421)|0);
 var $2531=HEAPF32[(($arrayidx4422)>>2)];
 var $2532=$fSlow57;
 var $2533=$fSlow63;
 var $fRec228=(($this1+526108)|0);
 var $arrayidx4423=(($fRec228+8)|0);
 var $2534=HEAPF32[(($arrayidx4423)>>2)];
 var $mul4424=($2533)*($2534);
 var $2535=$fSlow36;
 var $fRec2284425=(($this1+526108)|0);
 var $arrayidx4426=(($fRec2284425+4)|0);
 var $2536=HEAPF32[(($arrayidx4426)>>2)];
 var $mul4427=($2535)*($2536);
 var $add4428=($mul4424)+($mul4427);
 var $mul4429=($2532)*($add4428);
 var $sub4430=($2531)-($mul4429);
 var $fRec2284431=(($this1+526108)|0);
 var $arrayidx4432=(($fRec2284431)|0);
 HEAPF32[(($arrayidx4432)>>2)]=$sub4430;
 var $2537=$fSlow42;
 var $fRec227=(($this1+526096)|0);
 var $arrayidx4433=(($fRec227+4)|0);
 var $2538=HEAPF32[(($arrayidx4433)>>2)];
 var $mul4434=($2537)*($2538);
 $fTemp137=$mul4434;
 var $2539=$fSlow57;
 var $2540=$fSlow35;
 var $fRec2284435=(($this1+526108)|0);
 var $arrayidx4436=(($fRec2284435)|0);
 var $2541=HEAPF32[(($arrayidx4436)>>2)];
 var $mul4437=($2540)*($2541);
 var $2542=$fSlow64;
 var $fRec2284438=(($this1+526108)|0);
 var $arrayidx4439=(($fRec2284438+4)|0);
 var $2543=HEAPF32[(($arrayidx4439)>>2)];
 var $mul4440=($2542)*($2543);
 var $add4441=($mul4437)+($mul4440);
 var $2544=$fSlow35;
 var $fRec2284442=(($this1+526108)|0);
 var $arrayidx4443=(($fRec2284442+8)|0);
 var $2545=HEAPF32[(($arrayidx4443)>>2)];
 var $mul4444=($2544)*($2545);
 var $add4445=($add4441)+($mul4444);
 var $mul4446=($2539)*($add4445);
 var $2546=$fSlow39;
 var $2547=$fSlow40;
 var $fRec2274447=(($this1+526096)|0);
 var $arrayidx4448=(($fRec2274447+8)|0);
 var $2548=HEAPF32[(($arrayidx4448)>>2)];
 var $mul4449=($2547)*($2548);
 var $2549=$fTemp137;
 var $add4450=($mul4449)+($2549);
 var $mul4451=($2546)*($add4450);
 var $sub4452=($mul4446)-($mul4451);
 var $fRec2274453=(($this1+526096)|0);
 var $arrayidx4454=(($fRec2274453)|0);
 HEAPF32[(($arrayidx4454)>>2)]=$sub4452;
 var $2550=$fSlow59;
 var $fRec235=(($this1+526088)|0);
 var $arrayidx4455=(($fRec235+4)|0);
 var $2551=HEAPF32[(($arrayidx4455)>>2)];
 var $mul4456=($2550)*($2551);
 var $2552=$fSlow60;
 var $fVec304457=(($this1+526128)|0);
 var $arrayidx4458=(($fVec304457+4)|0);
 var $2553=HEAPF32[(($arrayidx4458)>>2)];
 var $2554=$fTemp136;
 var $add4459=($2553)+($2554);
 var $mul4460=($2552)*($add4459);
 var $add4461=($mul4456)+($mul4460);
 var $fRec2354462=(($this1+526088)|0);
 var $arrayidx4463=(($fRec2354462)|0);
 HEAPF32[(($arrayidx4463)>>2)]=$add4461;
 var $fRec2354464=(($this1+526088)|0);
 var $arrayidx4465=(($fRec2354464)|0);
 var $2555=HEAPF32[(($arrayidx4465)>>2)];
 var $2556=$fSlow57;
 var $2557=$fSlow63;
 var $fRec234=(($this1+526076)|0);
 var $arrayidx4466=(($fRec234+8)|0);
 var $2558=HEAPF32[(($arrayidx4466)>>2)];
 var $mul4467=($2557)*($2558);
 var $2559=$fSlow36;
 var $fRec2344468=(($this1+526076)|0);
 var $arrayidx4469=(($fRec2344468+4)|0);
 var $2560=HEAPF32[(($arrayidx4469)>>2)];
 var $mul4470=($2559)*($2560);
 var $add4471=($mul4467)+($mul4470);
 var $mul4472=($2556)*($add4471);
 var $sub4473=($2555)-($mul4472);
 var $fRec2344474=(($this1+526076)|0);
 var $arrayidx4475=(($fRec2344474)|0);
 HEAPF32[(($arrayidx4475)>>2)]=$sub4473;
 var $fRec2344476=(($this1+526076)|0);
 var $arrayidx4477=(($fRec2344476+8)|0);
 var $2561=HEAPF32[(($arrayidx4477)>>2)];
 var $fRec2344478=(($this1+526076)|0);
 var $arrayidx4479=(($fRec2344478)|0);
 var $2562=HEAPF32[(($arrayidx4479)>>2)];
 var $fRec2344480=(($this1+526076)|0);
 var $arrayidx4481=(($fRec2344480+4)|0);
 var $2563=HEAPF32[(($arrayidx4481)>>2)];
 var $mul4482=($2563)*(2);
 var $add4483=($2562)+($mul4482);
 var $add4484=($2561)+($add4483);
 $fTemp138=$add4484;
 var $2564=$fSlow57;
 var $2565=$fTemp138;
 var $mul4485=($2564)*($2565);
 $fTemp139=$mul4485;
 var $2566=$fTemp139;
 var $fVec31=(($this1+526068)|0);
 var $arrayidx4486=(($fVec31)|0);
 HEAPF32[(($arrayidx4486)>>2)]=$2566;
 var $2567=$fSlow69;
 var $fRec233=(($this1+526060)|0);
 var $arrayidx4487=(($fRec233+4)|0);
 var $2568=HEAPF32[(($arrayidx4487)>>2)];
 var $mul4488=($2567)*($2568);
 var $2569=$fSlow70;
 var $fVec314489=(($this1+526068)|0);
 var $arrayidx4490=(($fVec314489+4)|0);
 var $2570=HEAPF32[(($arrayidx4490)>>2)];
 var $2571=$fTemp139;
 var $add4491=($2570)+($2571);
 var $mul4492=($2569)*($add4491);
 var $add4493=($mul4488)+($mul4492);
 var $fRec2334494=(($this1+526060)|0);
 var $arrayidx4495=(($fRec2334494)|0);
 HEAPF32[(($arrayidx4495)>>2)]=$add4493;
 var $fRec2334496=(($this1+526060)|0);
 var $arrayidx4497=(($fRec2334496)|0);
 var $2572=HEAPF32[(($arrayidx4497)>>2)];
 var $2573=$fSlow65;
 var $2574=$fSlow71;
 var $fRec232=(($this1+526048)|0);
 var $arrayidx4498=(($fRec232+8)|0);
 var $2575=HEAPF32[(($arrayidx4498)>>2)];
 var $mul4499=($2574)*($2575);
 var $2576=$fSlow42;
 var $fRec2324500=(($this1+526048)|0);
 var $arrayidx4501=(($fRec2324500+4)|0);
 var $2577=HEAPF32[(($arrayidx4501)>>2)];
 var $mul4502=($2576)*($2577);
 var $add4503=($mul4499)+($mul4502);
 var $mul4504=($2573)*($add4503);
 var $sub4505=($2572)-($mul4504);
 var $fRec2324506=(($this1+526048)|0);
 var $arrayidx4507=(($fRec2324506)|0);
 HEAPF32[(($arrayidx4507)>>2)]=$sub4505;
 var $2578=$fSlow69;
 var $fRec237=(($this1+526040)|0);
 var $arrayidx4508=(($fRec237+4)|0);
 var $2579=HEAPF32[(($arrayidx4508)>>2)];
 var $mul4509=($2578)*($2579);
 var $2580=$fSlow70;
 var $2581=$fSlow75;
 var $fVec314510=(($this1+526068)|0);
 var $arrayidx4511=(($fVec314510+4)|0);
 var $2582=HEAPF32[(($arrayidx4511)>>2)];
 var $mul4512=($2581)*($2582);
 var $2583=$fSlow74;
 var $2584=$fTemp138;
 var $mul4513=($2583)*($2584);
 var $add4514=($mul4512)+($mul4513);
 var $mul4515=($2580)*($add4514);
 var $add4516=($mul4509)+($mul4515);
 var $fRec2374517=(($this1+526040)|0);
 var $arrayidx4518=(($fRec2374517)|0);
 HEAPF32[(($arrayidx4518)>>2)]=$add4516;
 var $fRec2374519=(($this1+526040)|0);
 var $arrayidx4520=(($fRec2374519)|0);
 var $2585=HEAPF32[(($arrayidx4520)>>2)];
 var $2586=$fSlow65;
 var $2587=$fSlow71;
 var $fRec236=(($this1+526028)|0);
 var $arrayidx4521=(($fRec236+8)|0);
 var $2588=HEAPF32[(($arrayidx4521)>>2)];
 var $mul4522=($2587)*($2588);
 var $2589=$fSlow42;
 var $fRec2364523=(($this1+526028)|0);
 var $arrayidx4524=(($fRec2364523+4)|0);
 var $2590=HEAPF32[(($arrayidx4524)>>2)];
 var $mul4525=($2589)*($2590);
 var $add4526=($mul4522)+($mul4525);
 var $mul4527=($2586)*($add4526);
 var $sub4528=($2585)-($mul4527);
 var $fRec2364529=(($this1+526028)|0);
 var $arrayidx4530=(($fRec2364529)|0);
 HEAPF32[(($arrayidx4530)>>2)]=$sub4528;
 var $2591=$fSlow135;
 var $fRec2164531=(($this1+526228)|0);
 var $arrayidx4532=(($fRec2164531+8)|0);
 var $2592=HEAPF32[(($arrayidx4532)>>2)];
 var $2593=$fSlow39;
 var $2594=$fTemp130;
 var $2595=$fSlow40;
 var $fRec2164533=(($this1+526228)|0);
 var $arrayidx4534=(($fRec2164533)|0);
 var $2596=HEAPF32[(($arrayidx4534)>>2)];
 var $mul4535=($2595)*($2596);
 var $add4536=($2594)+($mul4535);
 var $mul4537=($2593)*($add4536);
 var $add4538=($2592)+($mul4537);
 var $mul4539=($2591)*($add4538);
 var $2597=$fSlow136;
 var $fRec2214540=(($this1+526156)|0);
 var $arrayidx4541=(($fRec2214540+8)|0);
 var $2598=HEAPF32[(($arrayidx4541)>>2)];
 var $2599=$fSlow39;
 var $2600=$fTemp134;
 var $2601=$fSlow40;
 var $fRec2214542=(($this1+526156)|0);
 var $arrayidx4543=(($fRec2214542)|0);
 var $2602=HEAPF32[(($arrayidx4543)>>2)];
 var $mul4544=($2601)*($2602);
 var $add4545=($2600)+($mul4544);
 var $mul4546=($2599)*($add4545);
 var $add4547=($2598)+($mul4546);
 var $mul4548=($2597)*($add4547);
 var $add4549=($mul4539)+($mul4548);
 var $2603=$fSlow137;
 var $fRec2274550=(($this1+526096)|0);
 var $arrayidx4551=(($fRec2274550+8)|0);
 var $2604=HEAPF32[(($arrayidx4551)>>2)];
 var $2605=$fSlow39;
 var $2606=$fTemp137;
 var $2607=$fSlow40;
 var $fRec2274552=(($this1+526096)|0);
 var $arrayidx4553=(($fRec2274552)|0);
 var $2608=HEAPF32[(($arrayidx4553)>>2)];
 var $mul4554=($2607)*($2608);
 var $add4555=($2606)+($mul4554);
 var $mul4556=($2605)*($add4555);
 var $add4557=($2604)+($mul4556);
 var $mul4558=($2603)*($add4557);
 var $add4559=($add4549)+($mul4558);
 var $2609=$fSlow65;
 var $2610=$fSlow138;
 var $fRec2324560=(($this1+526048)|0);
 var $arrayidx4561=(($fRec2324560+8)|0);
 var $2611=HEAPF32[(($arrayidx4561)>>2)];
 var $fRec2324562=(($this1+526048)|0);
 var $arrayidx4563=(($fRec2324562)|0);
 var $2612=HEAPF32[(($arrayidx4563)>>2)];
 var $fRec2324564=(($this1+526048)|0);
 var $arrayidx4565=(($fRec2324564+4)|0);
 var $2613=HEAPF32[(($arrayidx4565)>>2)];
 var $mul4566=($2613)*(2);
 var $add4567=($2612)+($mul4566);
 var $add4568=($2611)+($add4567);
 var $mul4569=($2610)*($add4568);
 var $2614=$fSlow139;
 var $2615=$fSlow41;
 var $fRec2364570=(($this1+526028)|0);
 var $arrayidx4571=(($fRec2364570)|0);
 var $2616=HEAPF32[(($arrayidx4571)>>2)];
 var $mul4572=($2615)*($2616);
 var $2617=$fSlow76;
 var $fRec2364573=(($this1+526028)|0);
 var $arrayidx4574=(($fRec2364573+4)|0);
 var $2618=HEAPF32[(($arrayidx4574)>>2)];
 var $mul4575=($2617)*($2618);
 var $add4576=($mul4572)+($mul4575);
 var $2619=$fSlow41;
 var $fRec2364577=(($this1+526028)|0);
 var $arrayidx4578=(($fRec2364577+8)|0);
 var $2620=HEAPF32[(($arrayidx4578)>>2)];
 var $mul4579=($2619)*($2620);
 var $add4580=($add4576)+($mul4579);
 var $mul4581=($2614)*($add4580);
 var $add4582=($mul4569)+($mul4581);
 var $mul4583=($2609)*($add4582);
 var $add4584=($add4559)+($mul4583);
 $fTemp140=$add4584;
 var $2621=$fTemp127;
 var $2622=$fTemp140;
 var $add4585=($2621)+($2622);
 $fTemp141=$add4585;
 var $2623=$fSlow19;
 var $fRec242=(($this1+526020)|0);
 var $arrayidx4586=(($fRec242+4)|0);
 var $2624=HEAPF32[(($arrayidx4586)>>2)];
 var $mul4587=($2623)*($2624);
 var $2625=$fSlow20;
 var $2626=$fSlow14;
 var $fRec5=(($this1+327804)|0);
 var $arrayidx4588=(($fRec5+4)|0);
 var $2627=HEAPF32[(($arrayidx4588)>>2)];
 var $mul4589=($2626)*($2627);
 var $2628=$fSlow21;
 var $fRec54590=(($this1+327804)|0);
 var $arrayidx4591=(($fRec54590+8)|0);
 var $2629=HEAPF32[(($arrayidx4591)>>2)];
 var $mul4592=($2628)*($2629);
 var $add4593=($mul4589)+($mul4592);
 var $mul4594=($2625)*($add4593);
 var $add4595=($mul4587)+($mul4594);
 var $fRec2424596=(($this1+526020)|0);
 var $arrayidx4597=(($fRec2424596)|0);
 HEAPF32[(($arrayidx4597)>>2)]=$add4595;
 var $fRec2424598=(($this1+526020)|0);
 var $arrayidx4599=(($fRec2424598)|0);
 var $2630=HEAPF32[(($arrayidx4599)>>2)];
 var $2631=$fSlow16;
 var $2632=$fSlow22;
 var $fRec241=(($this1+526008)|0);
 var $arrayidx4600=(($fRec241+8)|0);
 var $2633=HEAPF32[(($arrayidx4600)>>2)];
 var $mul4601=($2632)*($2633);
 var $2634=$fSlow23;
 var $fRec2414602=(($this1+526008)|0);
 var $arrayidx4603=(($fRec2414602+4)|0);
 var $2635=HEAPF32[(($arrayidx4603)>>2)];
 var $mul4604=($2634)*($2635);
 var $add4605=($mul4601)+($mul4604);
 var $mul4606=($2631)*($add4605);
 var $sub4607=($2630)-($mul4606);
 var $fRec2414608=(($this1+526008)|0);
 var $arrayidx4609=(($fRec2414608)|0);
 HEAPF32[(($arrayidx4609)>>2)]=$sub4607;
 var $2636=$fSlow30;
 var $fRec240=(($this1+525996)|0);
 var $arrayidx4610=(($fRec240+4)|0);
 var $2637=HEAPF32[(($arrayidx4610)>>2)];
 var $mul4611=($2636)*($2637);
 $fTemp142=$mul4611;
 var $2638=$fSlow16;
 var $2639=$fSlow17;
 var $fRec2414612=(($this1+526008)|0);
 var $arrayidx4613=(($fRec2414612)|0);
 var $2640=HEAPF32[(($arrayidx4613)>>2)];
 var $mul4614=($2639)*($2640);
 var $2641=$fSlow24;
 var $fRec2414615=(($this1+526008)|0);
 var $arrayidx4616=(($fRec2414615+4)|0);
 var $2642=HEAPF32[(($arrayidx4616)>>2)];
 var $mul4617=($2641)*($2642);
 var $add4618=($mul4614)+($mul4617);
 var $2643=$fSlow17;
 var $fRec2414619=(($this1+526008)|0);
 var $arrayidx4620=(($fRec2414619+8)|0);
 var $2644=HEAPF32[(($arrayidx4620)>>2)];
 var $mul4621=($2643)*($2644);
 var $add4622=($add4618)+($mul4621);
 var $mul4623=($2638)*($add4622);
 var $2645=$fSlow27;
 var $2646=$fSlow28;
 var $fRec2404624=(($this1+525996)|0);
 var $arrayidx4625=(($fRec2404624+8)|0);
 var $2647=HEAPF32[(($arrayidx4625)>>2)];
 var $mul4626=($2646)*($2647);
 var $2648=$fTemp142;
 var $add4627=($mul4626)+($2648);
 var $mul4628=($2645)*($add4627);
 var $sub4629=($mul4623)-($mul4628);
 var $fRec2404630=(($this1+525996)|0);
 var $arrayidx4631=(($fRec2404630)|0);
 HEAPF32[(($arrayidx4631)>>2)]=$sub4629;
 var $2649=$fSlow36;
 var $fRec239=(($this1+525984)|0);
 var $arrayidx4632=(($fRec239+4)|0);
 var $2650=HEAPF32[(($arrayidx4632)>>2)];
 var $mul4633=($2649)*($2650);
 $fTemp143=$mul4633;
 var $fRec2404634=(($this1+525996)|0);
 var $arrayidx4635=(($fRec2404634+8)|0);
 var $2651=HEAPF32[(($arrayidx4635)>>2)];
 var $2652=$fSlow27;
 var $2653=$fTemp142;
 var $2654=$fSlow28;
 var $fRec2404636=(($this1+525996)|0);
 var $arrayidx4637=(($fRec2404636)|0);
 var $2655=HEAPF32[(($arrayidx4637)>>2)];
 var $mul4638=($2654)*($2655);
 var $add4639=($2653)+($mul4638);
 var $mul4640=($2652)*($add4639);
 var $add4641=($2651)+($mul4640);
 var $2656=$fSlow33;
 var $2657=$fSlow34;
 var $fRec2394642=(($this1+525984)|0);
 var $arrayidx4643=(($fRec2394642+8)|0);
 var $2658=HEAPF32[(($arrayidx4643)>>2)];
 var $mul4644=($2657)*($2658);
 var $2659=$fTemp143;
 var $add4645=($mul4644)+($2659);
 var $mul4646=($2656)*($add4645);
 var $sub4647=($add4641)-($mul4646);
 var $fRec2394648=(($this1+525984)|0);
 var $arrayidx4649=(($fRec2394648)|0);
 HEAPF32[(($arrayidx4649)>>2)]=$sub4647;
 var $2660=$fSlow42;
 var $fRec238=(($this1+525972)|0);
 var $arrayidx4650=(($fRec238+4)|0);
 var $2661=HEAPF32[(($arrayidx4650)>>2)];
 var $mul4651=($2660)*($2661);
 $fTemp144=$mul4651;
 var $fRec2394652=(($this1+525984)|0);
 var $arrayidx4653=(($fRec2394652+8)|0);
 var $2662=HEAPF32[(($arrayidx4653)>>2)];
 var $2663=$fSlow33;
 var $2664=$fTemp143;
 var $2665=$fSlow34;
 var $fRec2394654=(($this1+525984)|0);
 var $arrayidx4655=(($fRec2394654)|0);
 var $2666=HEAPF32[(($arrayidx4655)>>2)];
 var $mul4656=($2665)*($2666);
 var $add4657=($2664)+($mul4656);
 var $mul4658=($2663)*($add4657);
 var $add4659=($2662)+($mul4658);
 var $2667=$fSlow39;
 var $2668=$fSlow40;
 var $fRec2384660=(($this1+525972)|0);
 var $arrayidx4661=(($fRec2384660+8)|0);
 var $2669=HEAPF32[(($arrayidx4661)>>2)];
 var $mul4662=($2668)*($2669);
 var $2670=$fTemp144;
 var $add4663=($mul4662)+($2670);
 var $mul4664=($2667)*($add4663);
 var $sub4665=($add4659)-($mul4664);
 var $fRec2384666=(($this1+525972)|0);
 var $arrayidx4667=(($fRec2384666)|0);
 HEAPF32[(($arrayidx4667)>>2)]=$sub4665;
 var $2671=$fSlow19;
 var $fRec248=(($this1+525964)|0);
 var $arrayidx4668=(($fRec248+4)|0);
 var $2672=HEAPF32[(($arrayidx4668)>>2)];
 var $mul4669=($2671)*($2672);
 var $2673=$fSlow20;
 var $fRec54670=(($this1+327804)|0);
 var $arrayidx4671=(($fRec54670+4)|0);
 var $2674=HEAPF32[(($arrayidx4671)>>2)];
 var $fRec54672=(($this1+327804)|0);
 var $arrayidx4673=(($fRec54672+8)|0);
 var $2675=HEAPF32[(($arrayidx4673)>>2)];
 var $add4674=($2674)+($2675);
 var $mul4675=($2673)*($add4674);
 var $add4676=($mul4669)+($mul4675);
 var $fRec2484677=(($this1+525964)|0);
 var $arrayidx4678=(($fRec2484677)|0);
 HEAPF32[(($arrayidx4678)>>2)]=$add4676;
 var $fRec2484679=(($this1+525964)|0);
 var $arrayidx4680=(($fRec2484679)|0);
 var $2676=HEAPF32[(($arrayidx4680)>>2)];
 var $2677=$fSlow16;
 var $2678=$fSlow22;
 var $fRec247=(($this1+525952)|0);
 var $arrayidx4681=(($fRec247+8)|0);
 var $2679=HEAPF32[(($arrayidx4681)>>2)];
 var $mul4682=($2678)*($2679);
 var $2680=$fSlow23;
 var $fRec2474683=(($this1+525952)|0);
 var $arrayidx4684=(($fRec2474683+4)|0);
 var $2681=HEAPF32[(($arrayidx4684)>>2)];
 var $mul4685=($2680)*($2681);
 var $add4686=($mul4682)+($mul4685);
 var $mul4687=($2677)*($add4686);
 var $sub4688=($2676)-($mul4687);
 var $fRec2474689=(($this1+525952)|0);
 var $arrayidx4690=(($fRec2474689)|0);
 HEAPF32[(($arrayidx4690)>>2)]=$sub4688;
 var $fRec2474691=(($this1+525952)|0);
 var $arrayidx4692=(($fRec2474691+8)|0);
 var $2682=HEAPF32[(($arrayidx4692)>>2)];
 var $fRec2474693=(($this1+525952)|0);
 var $arrayidx4694=(($fRec2474693)|0);
 var $2683=HEAPF32[(($arrayidx4694)>>2)];
 var $fRec2474695=(($this1+525952)|0);
 var $arrayidx4696=(($fRec2474695+4)|0);
 var $2684=HEAPF32[(($arrayidx4696)>>2)];
 var $mul4697=($2684)*(2);
 var $add4698=($2683)+($mul4697);
 var $add4699=($2682)+($add4698);
 $fTemp145=$add4699;
 var $2685=$fSlow16;
 var $2686=$fTemp145;
 var $mul4700=($2685)*($2686);
 $fTemp146=$mul4700;
 var $2687=$fTemp146;
 var $fVec32=(($this1+525944)|0);
 var $arrayidx4701=(($fVec32)|0);
 HEAPF32[(($arrayidx4701)>>2)]=$2687;
 var $2688=$fSlow48;
 var $fRec246=(($this1+525936)|0);
 var $arrayidx4702=(($fRec246+4)|0);
 var $2689=HEAPF32[(($arrayidx4702)>>2)];
 var $mul4703=($2688)*($2689);
 var $2690=$fSlow49;
 var $2691=$fSlow51;
 var $fVec324704=(($this1+525944)|0);
 var $arrayidx4705=(($fVec324704+4)|0);
 var $2692=HEAPF32[(($arrayidx4705)>>2)];
 var $mul4706=($2691)*($2692);
 var $2693=$fSlow50;
 var $2694=$fTemp145;
 var $mul4707=($2693)*($2694);
 var $add4708=($mul4706)+($mul4707);
 var $mul4709=($2690)*($add4708);
 var $add4710=($mul4703)+($mul4709);
 var $fRec2464711=(($this1+525936)|0);
 var $arrayidx4712=(($fRec2464711)|0);
 HEAPF32[(($arrayidx4712)>>2)]=$add4710;
 var $fRec2464713=(($this1+525936)|0);
 var $arrayidx4714=(($fRec2464713)|0);
 var $2695=HEAPF32[(($arrayidx4714)>>2)];
 var $2696=$fSlow46;
 var $2697=$fSlow52;
 var $fRec245=(($this1+525924)|0);
 var $arrayidx4715=(($fRec245+8)|0);
 var $2698=HEAPF32[(($arrayidx4715)>>2)];
 var $mul4716=($2697)*($2698);
 var $2699=$fSlow30;
 var $fRec2454717=(($this1+525924)|0);
 var $arrayidx4718=(($fRec2454717+4)|0);
 var $2700=HEAPF32[(($arrayidx4718)>>2)];
 var $mul4719=($2699)*($2700);
 var $add4720=($mul4716)+($mul4719);
 var $mul4721=($2696)*($add4720);
 var $sub4722=($2695)-($mul4721);
 var $fRec2454723=(($this1+525924)|0);
 var $arrayidx4724=(($fRec2454723)|0);
 HEAPF32[(($arrayidx4724)>>2)]=$sub4722;
 var $2701=$fSlow36;
 var $fRec244=(($this1+525912)|0);
 var $arrayidx4725=(($fRec244+4)|0);
 var $2702=HEAPF32[(($arrayidx4725)>>2)];
 var $mul4726=($2701)*($2702);
 $fTemp147=$mul4726;
 var $2703=$fSlow46;
 var $2704=$fSlow29;
 var $fRec2454727=(($this1+525924)|0);
 var $arrayidx4728=(($fRec2454727)|0);
 var $2705=HEAPF32[(($arrayidx4728)>>2)];
 var $mul4729=($2704)*($2705);
 var $2706=$fSlow53;
 var $fRec2454730=(($this1+525924)|0);
 var $arrayidx4731=(($fRec2454730+4)|0);
 var $2707=HEAPF32[(($arrayidx4731)>>2)];
 var $mul4732=($2706)*($2707);
 var $add4733=($mul4729)+($mul4732);
 var $2708=$fSlow29;
 var $fRec2454734=(($this1+525924)|0);
 var $arrayidx4735=(($fRec2454734+8)|0);
 var $2709=HEAPF32[(($arrayidx4735)>>2)];
 var $mul4736=($2708)*($2709);
 var $add4737=($add4733)+($mul4736);
 var $mul4738=($2703)*($add4737);
 var $2710=$fSlow33;
 var $2711=$fSlow34;
 var $fRec2444739=(($this1+525912)|0);
 var $arrayidx4740=(($fRec2444739+8)|0);
 var $2712=HEAPF32[(($arrayidx4740)>>2)];
 var $mul4741=($2711)*($2712);
 var $2713=$fTemp147;
 var $add4742=($mul4741)+($2713);
 var $mul4743=($2710)*($add4742);
 var $sub4744=($mul4738)-($mul4743);
 var $fRec2444745=(($this1+525912)|0);
 var $arrayidx4746=(($fRec2444745)|0);
 HEAPF32[(($arrayidx4746)>>2)]=$sub4744;
 var $2714=$fSlow42;
 var $fRec243=(($this1+525900)|0);
 var $arrayidx4747=(($fRec243+4)|0);
 var $2715=HEAPF32[(($arrayidx4747)>>2)];
 var $mul4748=($2714)*($2715);
 $fTemp148=$mul4748;
 var $fRec2444749=(($this1+525912)|0);
 var $arrayidx4750=(($fRec2444749+8)|0);
 var $2716=HEAPF32[(($arrayidx4750)>>2)];
 var $2717=$fSlow33;
 var $2718=$fTemp147;
 var $2719=$fSlow34;
 var $fRec2444751=(($this1+525912)|0);
 var $arrayidx4752=(($fRec2444751)|0);
 var $2720=HEAPF32[(($arrayidx4752)>>2)];
 var $mul4753=($2719)*($2720);
 var $add4754=($2718)+($mul4753);
 var $mul4755=($2717)*($add4754);
 var $add4756=($2716)+($mul4755);
 var $2721=$fSlow39;
 var $2722=$fSlow40;
 var $fRec2434757=(($this1+525900)|0);
 var $arrayidx4758=(($fRec2434757+8)|0);
 var $2723=HEAPF32[(($arrayidx4758)>>2)];
 var $mul4759=($2722)*($2723);
 var $2724=$fTemp148;
 var $add4760=($mul4759)+($2724);
 var $mul4761=($2721)*($add4760);
 var $sub4762=($add4756)-($mul4761);
 var $fRec2434763=(($this1+525900)|0);
 var $arrayidx4764=(($fRec2434763)|0);
 HEAPF32[(($arrayidx4764)>>2)]=$sub4762;
 var $2725=$fSlow48;
 var $fRec253=(($this1+525892)|0);
 var $arrayidx4765=(($fRec253+4)|0);
 var $2726=HEAPF32[(($arrayidx4765)>>2)];
 var $mul4766=($2725)*($2726);
 var $2727=$fSlow49;
 var $fVec324767=(($this1+525944)|0);
 var $arrayidx4768=(($fVec324767+4)|0);
 var $2728=HEAPF32[(($arrayidx4768)>>2)];
 var $2729=$fTemp146;
 var $add4769=($2728)+($2729);
 var $mul4770=($2727)*($add4769);
 var $add4771=($mul4766)+($mul4770);
 var $fRec2534772=(($this1+525892)|0);
 var $arrayidx4773=(($fRec2534772)|0);
 HEAPF32[(($arrayidx4773)>>2)]=$add4771;
 var $fRec2534774=(($this1+525892)|0);
 var $arrayidx4775=(($fRec2534774)|0);
 var $2730=HEAPF32[(($arrayidx4775)>>2)];
 var $2731=$fSlow46;
 var $2732=$fSlow52;
 var $fRec252=(($this1+525880)|0);
 var $arrayidx4776=(($fRec252+8)|0);
 var $2733=HEAPF32[(($arrayidx4776)>>2)];
 var $mul4777=($2732)*($2733);
 var $2734=$fSlow30;
 var $fRec2524778=(($this1+525880)|0);
 var $arrayidx4779=(($fRec2524778+4)|0);
 var $2735=HEAPF32[(($arrayidx4779)>>2)];
 var $mul4780=($2734)*($2735);
 var $add4781=($mul4777)+($mul4780);
 var $mul4782=($2731)*($add4781);
 var $sub4783=($2730)-($mul4782);
 var $fRec2524784=(($this1+525880)|0);
 var $arrayidx4785=(($fRec2524784)|0);
 HEAPF32[(($arrayidx4785)>>2)]=$sub4783;
 var $fRec2524786=(($this1+525880)|0);
 var $arrayidx4787=(($fRec2524786+8)|0);
 var $2736=HEAPF32[(($arrayidx4787)>>2)];
 var $fRec2524788=(($this1+525880)|0);
 var $arrayidx4789=(($fRec2524788)|0);
 var $2737=HEAPF32[(($arrayidx4789)>>2)];
 var $fRec2524790=(($this1+525880)|0);
 var $arrayidx4791=(($fRec2524790+4)|0);
 var $2738=HEAPF32[(($arrayidx4791)>>2)];
 var $mul4792=($2738)*(2);
 var $add4793=($2737)+($mul4792);
 var $add4794=($2736)+($add4793);
 $fTemp149=$add4794;
 var $2739=$fSlow46;
 var $2740=$fTemp149;
 var $mul4795=($2739)*($2740);
 $fTemp150=$mul4795;
 var $2741=$fTemp150;
 var $fVec33=(($this1+525872)|0);
 var $arrayidx4796=(($fVec33)|0);
 HEAPF32[(($arrayidx4796)>>2)]=$2741;
 var $2742=$fSlow59;
 var $fRec251=(($this1+525864)|0);
 var $arrayidx4797=(($fRec251+4)|0);
 var $2743=HEAPF32[(($arrayidx4797)>>2)];
 var $mul4798=($2742)*($2743);
 var $2744=$fSlow60;
 var $2745=$fSlow62;
 var $fVec334799=(($this1+525872)|0);
 var $arrayidx4800=(($fVec334799+4)|0);
 var $2746=HEAPF32[(($arrayidx4800)>>2)];
 var $mul4801=($2745)*($2746);
 var $2747=$fSlow61;
 var $2748=$fTemp149;
 var $mul4802=($2747)*($2748);
 var $add4803=($mul4801)+($mul4802);
 var $mul4804=($2744)*($add4803);
 var $add4805=($mul4798)+($mul4804);
 var $fRec2514806=(($this1+525864)|0);
 var $arrayidx4807=(($fRec2514806)|0);
 HEAPF32[(($arrayidx4807)>>2)]=$add4805;
 var $fRec2514808=(($this1+525864)|0);
 var $arrayidx4809=(($fRec2514808)|0);
 var $2749=HEAPF32[(($arrayidx4809)>>2)];
 var $2750=$fSlow57;
 var $2751=$fSlow63;
 var $fRec250=(($this1+525852)|0);
 var $arrayidx4810=(($fRec250+8)|0);
 var $2752=HEAPF32[(($arrayidx4810)>>2)];
 var $mul4811=($2751)*($2752);
 var $2753=$fSlow36;
 var $fRec2504812=(($this1+525852)|0);
 var $arrayidx4813=(($fRec2504812+4)|0);
 var $2754=HEAPF32[(($arrayidx4813)>>2)];
 var $mul4814=($2753)*($2754);
 var $add4815=($mul4811)+($mul4814);
 var $mul4816=($2750)*($add4815);
 var $sub4817=($2749)-($mul4816);
 var $fRec2504818=(($this1+525852)|0);
 var $arrayidx4819=(($fRec2504818)|0);
 HEAPF32[(($arrayidx4819)>>2)]=$sub4817;
 var $2755=$fSlow42;
 var $fRec249=(($this1+525840)|0);
 var $arrayidx4820=(($fRec249+4)|0);
 var $2756=HEAPF32[(($arrayidx4820)>>2)];
 var $mul4821=($2755)*($2756);
 $fTemp151=$mul4821;
 var $2757=$fSlow57;
 var $2758=$fSlow35;
 var $fRec2504822=(($this1+525852)|0);
 var $arrayidx4823=(($fRec2504822)|0);
 var $2759=HEAPF32[(($arrayidx4823)>>2)];
 var $mul4824=($2758)*($2759);
 var $2760=$fSlow64;
 var $fRec2504825=(($this1+525852)|0);
 var $arrayidx4826=(($fRec2504825+4)|0);
 var $2761=HEAPF32[(($arrayidx4826)>>2)];
 var $mul4827=($2760)*($2761);
 var $add4828=($mul4824)+($mul4827);
 var $2762=$fSlow35;
 var $fRec2504829=(($this1+525852)|0);
 var $arrayidx4830=(($fRec2504829+8)|0);
 var $2763=HEAPF32[(($arrayidx4830)>>2)];
 var $mul4831=($2762)*($2763);
 var $add4832=($add4828)+($mul4831);
 var $mul4833=($2757)*($add4832);
 var $2764=$fSlow39;
 var $2765=$fSlow40;
 var $fRec2494834=(($this1+525840)|0);
 var $arrayidx4835=(($fRec2494834+8)|0);
 var $2766=HEAPF32[(($arrayidx4835)>>2)];
 var $mul4836=($2765)*($2766);
 var $2767=$fTemp151;
 var $add4837=($mul4836)+($2767);
 var $mul4838=($2764)*($add4837);
 var $sub4839=($mul4833)-($mul4838);
 var $fRec2494840=(($this1+525840)|0);
 var $arrayidx4841=(($fRec2494840)|0);
 HEAPF32[(($arrayidx4841)>>2)]=$sub4839;
 var $2768=$fSlow59;
 var $fRec257=(($this1+525832)|0);
 var $arrayidx4842=(($fRec257+4)|0);
 var $2769=HEAPF32[(($arrayidx4842)>>2)];
 var $mul4843=($2768)*($2769);
 var $2770=$fSlow60;
 var $fVec334844=(($this1+525872)|0);
 var $arrayidx4845=(($fVec334844+4)|0);
 var $2771=HEAPF32[(($arrayidx4845)>>2)];
 var $2772=$fTemp150;
 var $add4846=($2771)+($2772);
 var $mul4847=($2770)*($add4846);
 var $add4848=($mul4843)+($mul4847);
 var $fRec2574849=(($this1+525832)|0);
 var $arrayidx4850=(($fRec2574849)|0);
 HEAPF32[(($arrayidx4850)>>2)]=$add4848;
 var $fRec2574851=(($this1+525832)|0);
 var $arrayidx4852=(($fRec2574851)|0);
 var $2773=HEAPF32[(($arrayidx4852)>>2)];
 var $2774=$fSlow57;
 var $2775=$fSlow63;
 var $fRec256=(($this1+525820)|0);
 var $arrayidx4853=(($fRec256+8)|0);
 var $2776=HEAPF32[(($arrayidx4853)>>2)];
 var $mul4854=($2775)*($2776);
 var $2777=$fSlow36;
 var $fRec2564855=(($this1+525820)|0);
 var $arrayidx4856=(($fRec2564855+4)|0);
 var $2778=HEAPF32[(($arrayidx4856)>>2)];
 var $mul4857=($2777)*($2778);
 var $add4858=($mul4854)+($mul4857);
 var $mul4859=($2774)*($add4858);
 var $sub4860=($2773)-($mul4859);
 var $fRec2564861=(($this1+525820)|0);
 var $arrayidx4862=(($fRec2564861)|0);
 HEAPF32[(($arrayidx4862)>>2)]=$sub4860;
 var $fRec2564863=(($this1+525820)|0);
 var $arrayidx4864=(($fRec2564863+8)|0);
 var $2779=HEAPF32[(($arrayidx4864)>>2)];
 var $fRec2564865=(($this1+525820)|0);
 var $arrayidx4866=(($fRec2564865)|0);
 var $2780=HEAPF32[(($arrayidx4866)>>2)];
 var $fRec2564867=(($this1+525820)|0);
 var $arrayidx4868=(($fRec2564867+4)|0);
 var $2781=HEAPF32[(($arrayidx4868)>>2)];
 var $mul4869=($2781)*(2);
 var $add4870=($2780)+($mul4869);
 var $add4871=($2779)+($add4870);
 $fTemp152=$add4871;
 var $2782=$fSlow57;
 var $2783=$fTemp152;
 var $mul4872=($2782)*($2783);
 $fTemp153=$mul4872;
 var $2784=$fTemp153;
 var $fVec34=(($this1+525812)|0);
 var $arrayidx4873=(($fVec34)|0);
 HEAPF32[(($arrayidx4873)>>2)]=$2784;
 var $2785=$fSlow69;
 var $fRec255=(($this1+525804)|0);
 var $arrayidx4874=(($fRec255+4)|0);
 var $2786=HEAPF32[(($arrayidx4874)>>2)];
 var $mul4875=($2785)*($2786);
 var $2787=$fSlow70;
 var $fVec344876=(($this1+525812)|0);
 var $arrayidx4877=(($fVec344876+4)|0);
 var $2788=HEAPF32[(($arrayidx4877)>>2)];
 var $2789=$fTemp153;
 var $add4878=($2788)+($2789);
 var $mul4879=($2787)*($add4878);
 var $add4880=($mul4875)+($mul4879);
 var $fRec2554881=(($this1+525804)|0);
 var $arrayidx4882=(($fRec2554881)|0);
 HEAPF32[(($arrayidx4882)>>2)]=$add4880;
 var $fRec2554883=(($this1+525804)|0);
 var $arrayidx4884=(($fRec2554883)|0);
 var $2790=HEAPF32[(($arrayidx4884)>>2)];
 var $2791=$fSlow65;
 var $2792=$fSlow71;
 var $fRec254=(($this1+525792)|0);
 var $arrayidx4885=(($fRec254+8)|0);
 var $2793=HEAPF32[(($arrayidx4885)>>2)];
 var $mul4886=($2792)*($2793);
 var $2794=$fSlow42;
 var $fRec2544887=(($this1+525792)|0);
 var $arrayidx4888=(($fRec2544887+4)|0);
 var $2795=HEAPF32[(($arrayidx4888)>>2)];
 var $mul4889=($2794)*($2795);
 var $add4890=($mul4886)+($mul4889);
 var $mul4891=($2791)*($add4890);
 var $sub4892=($2790)-($mul4891);
 var $fRec2544893=(($this1+525792)|0);
 var $arrayidx4894=(($fRec2544893)|0);
 HEAPF32[(($arrayidx4894)>>2)]=$sub4892;
 var $2796=$fSlow69;
 var $fRec259=(($this1+525784)|0);
 var $arrayidx4895=(($fRec259+4)|0);
 var $2797=HEAPF32[(($arrayidx4895)>>2)];
 var $mul4896=($2796)*($2797);
 var $2798=$fSlow70;
 var $2799=$fSlow75;
 var $fVec344897=(($this1+525812)|0);
 var $arrayidx4898=(($fVec344897+4)|0);
 var $2800=HEAPF32[(($arrayidx4898)>>2)];
 var $mul4899=($2799)*($2800);
 var $2801=$fSlow74;
 var $2802=$fTemp152;
 var $mul4900=($2801)*($2802);
 var $add4901=($mul4899)+($mul4900);
 var $mul4902=($2798)*($add4901);
 var $add4903=($mul4896)+($mul4902);
 var $fRec2594904=(($this1+525784)|0);
 var $arrayidx4905=(($fRec2594904)|0);
 HEAPF32[(($arrayidx4905)>>2)]=$add4903;
 var $fRec2594906=(($this1+525784)|0);
 var $arrayidx4907=(($fRec2594906)|0);
 var $2803=HEAPF32[(($arrayidx4907)>>2)];
 var $2804=$fSlow65;
 var $2805=$fSlow71;
 var $fRec258=(($this1+525772)|0);
 var $arrayidx4908=(($fRec258+8)|0);
 var $2806=HEAPF32[(($arrayidx4908)>>2)];
 var $mul4909=($2805)*($2806);
 var $2807=$fSlow42;
 var $fRec2584910=(($this1+525772)|0);
 var $arrayidx4911=(($fRec2584910+4)|0);
 var $2808=HEAPF32[(($arrayidx4911)>>2)];
 var $mul4912=($2807)*($2808);
 var $add4913=($mul4909)+($mul4912);
 var $mul4914=($2804)*($add4913);
 var $sub4915=($2803)-($mul4914);
 var $fRec2584916=(($this1+525772)|0);
 var $arrayidx4917=(($fRec2584916)|0);
 HEAPF32[(($arrayidx4917)>>2)]=$sub4915;
 var $2809=$fSlow142;
 var $fRec2384918=(($this1+525972)|0);
 var $arrayidx4919=(($fRec2384918+8)|0);
 var $2810=HEAPF32[(($arrayidx4919)>>2)];
 var $2811=$fSlow39;
 var $2812=$fTemp144;
 var $2813=$fSlow40;
 var $fRec2384920=(($this1+525972)|0);
 var $arrayidx4921=(($fRec2384920)|0);
 var $2814=HEAPF32[(($arrayidx4921)>>2)];
 var $mul4922=($2813)*($2814);
 var $add4923=($2812)+($mul4922);
 var $mul4924=($2811)*($add4923);
 var $add4925=($2810)+($mul4924);
 var $mul4926=($2809)*($add4925);
 var $2815=$fSlow143;
 var $fRec2434927=(($this1+525900)|0);
 var $arrayidx4928=(($fRec2434927+8)|0);
 var $2816=HEAPF32[(($arrayidx4928)>>2)];
 var $2817=$fSlow39;
 var $2818=$fTemp148;
 var $2819=$fSlow40;
 var $fRec2434929=(($this1+525900)|0);
 var $arrayidx4930=(($fRec2434929)|0);
 var $2820=HEAPF32[(($arrayidx4930)>>2)];
 var $mul4931=($2819)*($2820);
 var $add4932=($2818)+($mul4931);
 var $mul4933=($2817)*($add4932);
 var $add4934=($2816)+($mul4933);
 var $mul4935=($2815)*($add4934);
 var $add4936=($mul4926)+($mul4935);
 var $2821=$fSlow144;
 var $fRec2494937=(($this1+525840)|0);
 var $arrayidx4938=(($fRec2494937+8)|0);
 var $2822=HEAPF32[(($arrayidx4938)>>2)];
 var $2823=$fSlow39;
 var $2824=$fTemp151;
 var $2825=$fSlow40;
 var $fRec2494939=(($this1+525840)|0);
 var $arrayidx4940=(($fRec2494939)|0);
 var $2826=HEAPF32[(($arrayidx4940)>>2)];
 var $mul4941=($2825)*($2826);
 var $add4942=($2824)+($mul4941);
 var $mul4943=($2823)*($add4942);
 var $add4944=($2822)+($mul4943);
 var $mul4945=($2821)*($add4944);
 var $add4946=($add4936)+($mul4945);
 var $2827=$fSlow65;
 var $2828=$fSlow145;
 var $fRec2544947=(($this1+525792)|0);
 var $arrayidx4948=(($fRec2544947+8)|0);
 var $2829=HEAPF32[(($arrayidx4948)>>2)];
 var $fRec2544949=(($this1+525792)|0);
 var $arrayidx4950=(($fRec2544949)|0);
 var $2830=HEAPF32[(($arrayidx4950)>>2)];
 var $fRec2544951=(($this1+525792)|0);
 var $arrayidx4952=(($fRec2544951+4)|0);
 var $2831=HEAPF32[(($arrayidx4952)>>2)];
 var $mul4953=($2831)*(2);
 var $add4954=($2830)+($mul4953);
 var $add4955=($2829)+($add4954);
 var $mul4956=($2828)*($add4955);
 var $2832=$fSlow146;
 var $2833=$fSlow41;
 var $fRec2584957=(($this1+525772)|0);
 var $arrayidx4958=(($fRec2584957)|0);
 var $2834=HEAPF32[(($arrayidx4958)>>2)];
 var $mul4959=($2833)*($2834);
 var $2835=$fSlow76;
 var $fRec2584960=(($this1+525772)|0);
 var $arrayidx4961=(($fRec2584960+4)|0);
 var $2836=HEAPF32[(($arrayidx4961)>>2)];
 var $mul4962=($2835)*($2836);
 var $add4963=($mul4959)+($mul4962);
 var $2837=$fSlow41;
 var $fRec2584964=(($this1+525772)|0);
 var $arrayidx4965=(($fRec2584964+8)|0);
 var $2838=HEAPF32[(($arrayidx4965)>>2)];
 var $mul4966=($2837)*($2838);
 var $add4967=($add4963)+($mul4966);
 var $mul4968=($2832)*($add4967);
 var $add4969=($mul4956)+($mul4968);
 var $mul4970=($2827)*($add4969);
 var $add4971=($add4946)+($mul4970);
 $fTemp154=$add4971;
 var $2839=$fSlow19;
 var $fRec264=(($this1+525764)|0);
 var $arrayidx4972=(($fRec264+4)|0);
 var $2840=HEAPF32[(($arrayidx4972)>>2)];
 var $mul4973=($2839)*($2840);
 var $2841=$fSlow20;
 var $2842=$fSlow14;
 var $fRec13=(($this1+65564)|0);
 var $arrayidx4974=(($fRec13+4)|0);
 var $2843=HEAPF32[(($arrayidx4974)>>2)];
 var $mul4975=($2842)*($2843);
 var $2844=$fSlow21;
 var $fRec134976=(($this1+65564)|0);
 var $arrayidx4977=(($fRec134976+8)|0);
 var $2845=HEAPF32[(($arrayidx4977)>>2)];
 var $mul4978=($2844)*($2845);
 var $add4979=($mul4975)+($mul4978);
 var $mul4980=($2841)*($add4979);
 var $add4981=($mul4973)+($mul4980);
 var $fRec2644982=(($this1+525764)|0);
 var $arrayidx4983=(($fRec2644982)|0);
 HEAPF32[(($arrayidx4983)>>2)]=$add4981;
 var $fRec2644984=(($this1+525764)|0);
 var $arrayidx4985=(($fRec2644984)|0);
 var $2846=HEAPF32[(($arrayidx4985)>>2)];
 var $2847=$fSlow16;
 var $2848=$fSlow22;
 var $fRec263=(($this1+525752)|0);
 var $arrayidx4986=(($fRec263+8)|0);
 var $2849=HEAPF32[(($arrayidx4986)>>2)];
 var $mul4987=($2848)*($2849);
 var $2850=$fSlow23;
 var $fRec2634988=(($this1+525752)|0);
 var $arrayidx4989=(($fRec2634988+4)|0);
 var $2851=HEAPF32[(($arrayidx4989)>>2)];
 var $mul4990=($2850)*($2851);
 var $add4991=($mul4987)+($mul4990);
 var $mul4992=($2847)*($add4991);
 var $sub4993=($2846)-($mul4992);
 var $fRec2634994=(($this1+525752)|0);
 var $arrayidx4995=(($fRec2634994)|0);
 HEAPF32[(($arrayidx4995)>>2)]=$sub4993;
 var $2852=$fSlow30;
 var $fRec262=(($this1+525740)|0);
 var $arrayidx4996=(($fRec262+4)|0);
 var $2853=HEAPF32[(($arrayidx4996)>>2)];
 var $mul4997=($2852)*($2853);
 $fTemp155=$mul4997;
 var $2854=$fSlow16;
 var $2855=$fSlow17;
 var $fRec2634998=(($this1+525752)|0);
 var $arrayidx4999=(($fRec2634998)|0);
 var $2856=HEAPF32[(($arrayidx4999)>>2)];
 var $mul5000=($2855)*($2856);
 var $2857=$fSlow24;
 var $fRec2635001=(($this1+525752)|0);
 var $arrayidx5002=(($fRec2635001+4)|0);
 var $2858=HEAPF32[(($arrayidx5002)>>2)];
 var $mul5003=($2857)*($2858);
 var $add5004=($mul5000)+($mul5003);
 var $2859=$fSlow17;
 var $fRec2635005=(($this1+525752)|0);
 var $arrayidx5006=(($fRec2635005+8)|0);
 var $2860=HEAPF32[(($arrayidx5006)>>2)];
 var $mul5007=($2859)*($2860);
 var $add5008=($add5004)+($mul5007);
 var $mul5009=($2854)*($add5008);
 var $2861=$fSlow27;
 var $2862=$fSlow28;
 var $fRec2625010=(($this1+525740)|0);
 var $arrayidx5011=(($fRec2625010+8)|0);
 var $2863=HEAPF32[(($arrayidx5011)>>2)];
 var $mul5012=($2862)*($2863);
 var $2864=$fTemp155;
 var $add5013=($mul5012)+($2864);
 var $mul5014=($2861)*($add5013);
 var $sub5015=($mul5009)-($mul5014);
 var $fRec2625016=(($this1+525740)|0);
 var $arrayidx5017=(($fRec2625016)|0);
 HEAPF32[(($arrayidx5017)>>2)]=$sub5015;
 var $2865=$fSlow36;
 var $fRec261=(($this1+525728)|0);
 var $arrayidx5018=(($fRec261+4)|0);
 var $2866=HEAPF32[(($arrayidx5018)>>2)];
 var $mul5019=($2865)*($2866);
 $fTemp156=$mul5019;
 var $fRec2625020=(($this1+525740)|0);
 var $arrayidx5021=(($fRec2625020+8)|0);
 var $2867=HEAPF32[(($arrayidx5021)>>2)];
 var $2868=$fSlow27;
 var $2869=$fTemp155;
 var $2870=$fSlow28;
 var $fRec2625022=(($this1+525740)|0);
 var $arrayidx5023=(($fRec2625022)|0);
 var $2871=HEAPF32[(($arrayidx5023)>>2)];
 var $mul5024=($2870)*($2871);
 var $add5025=($2869)+($mul5024);
 var $mul5026=($2868)*($add5025);
 var $add5027=($2867)+($mul5026);
 var $2872=$fSlow33;
 var $2873=$fSlow34;
 var $fRec2615028=(($this1+525728)|0);
 var $arrayidx5029=(($fRec2615028+8)|0);
 var $2874=HEAPF32[(($arrayidx5029)>>2)];
 var $mul5030=($2873)*($2874);
 var $2875=$fTemp156;
 var $add5031=($mul5030)+($2875);
 var $mul5032=($2872)*($add5031);
 var $sub5033=($add5027)-($mul5032);
 var $fRec2615034=(($this1+525728)|0);
 var $arrayidx5035=(($fRec2615034)|0);
 HEAPF32[(($arrayidx5035)>>2)]=$sub5033;
 var $2876=$fSlow42;
 var $fRec260=(($this1+525716)|0);
 var $arrayidx5036=(($fRec260+4)|0);
 var $2877=HEAPF32[(($arrayidx5036)>>2)];
 var $mul5037=($2876)*($2877);
 $fTemp157=$mul5037;
 var $fRec2615038=(($this1+525728)|0);
 var $arrayidx5039=(($fRec2615038+8)|0);
 var $2878=HEAPF32[(($arrayidx5039)>>2)];
 var $2879=$fSlow33;
 var $2880=$fTemp156;
 var $2881=$fSlow34;
 var $fRec2615040=(($this1+525728)|0);
 var $arrayidx5041=(($fRec2615040)|0);
 var $2882=HEAPF32[(($arrayidx5041)>>2)];
 var $mul5042=($2881)*($2882);
 var $add5043=($2880)+($mul5042);
 var $mul5044=($2879)*($add5043);
 var $add5045=($2878)+($mul5044);
 var $2883=$fSlow39;
 var $2884=$fSlow40;
 var $fRec2605046=(($this1+525716)|0);
 var $arrayidx5047=(($fRec2605046+8)|0);
 var $2885=HEAPF32[(($arrayidx5047)>>2)];
 var $mul5048=($2884)*($2885);
 var $2886=$fTemp157;
 var $add5049=($mul5048)+($2886);
 var $mul5050=($2883)*($add5049);
 var $sub5051=($add5045)-($mul5050);
 var $fRec2605052=(($this1+525716)|0);
 var $arrayidx5053=(($fRec2605052)|0);
 HEAPF32[(($arrayidx5053)>>2)]=$sub5051;
 var $2887=$fSlow19;
 var $fRec270=(($this1+525708)|0);
 var $arrayidx5054=(($fRec270+4)|0);
 var $2888=HEAPF32[(($arrayidx5054)>>2)];
 var $mul5055=($2887)*($2888);
 var $2889=$fSlow20;
 var $fRec135056=(($this1+65564)|0);
 var $arrayidx5057=(($fRec135056+4)|0);
 var $2890=HEAPF32[(($arrayidx5057)>>2)];
 var $fRec135058=(($this1+65564)|0);
 var $arrayidx5059=(($fRec135058+8)|0);
 var $2891=HEAPF32[(($arrayidx5059)>>2)];
 var $add5060=($2890)+($2891);
 var $mul5061=($2889)*($add5060);
 var $add5062=($mul5055)+($mul5061);
 var $fRec2705063=(($this1+525708)|0);
 var $arrayidx5064=(($fRec2705063)|0);
 HEAPF32[(($arrayidx5064)>>2)]=$add5062;
 var $fRec2705065=(($this1+525708)|0);
 var $arrayidx5066=(($fRec2705065)|0);
 var $2892=HEAPF32[(($arrayidx5066)>>2)];
 var $2893=$fSlow16;
 var $2894=$fSlow22;
 var $fRec269=(($this1+525696)|0);
 var $arrayidx5067=(($fRec269+8)|0);
 var $2895=HEAPF32[(($arrayidx5067)>>2)];
 var $mul5068=($2894)*($2895);
 var $2896=$fSlow23;
 var $fRec2695069=(($this1+525696)|0);
 var $arrayidx5070=(($fRec2695069+4)|0);
 var $2897=HEAPF32[(($arrayidx5070)>>2)];
 var $mul5071=($2896)*($2897);
 var $add5072=($mul5068)+($mul5071);
 var $mul5073=($2893)*($add5072);
 var $sub5074=($2892)-($mul5073);
 var $fRec2695075=(($this1+525696)|0);
 var $arrayidx5076=(($fRec2695075)|0);
 HEAPF32[(($arrayidx5076)>>2)]=$sub5074;
 var $fRec2695077=(($this1+525696)|0);
 var $arrayidx5078=(($fRec2695077+8)|0);
 var $2898=HEAPF32[(($arrayidx5078)>>2)];
 var $fRec2695079=(($this1+525696)|0);
 var $arrayidx5080=(($fRec2695079)|0);
 var $2899=HEAPF32[(($arrayidx5080)>>2)];
 var $fRec2695081=(($this1+525696)|0);
 var $arrayidx5082=(($fRec2695081+4)|0);
 var $2900=HEAPF32[(($arrayidx5082)>>2)];
 var $mul5083=($2900)*(2);
 var $add5084=($2899)+($mul5083);
 var $add5085=($2898)+($add5084);
 $fTemp158=$add5085;
 var $2901=$fSlow16;
 var $2902=$fTemp158;
 var $mul5086=($2901)*($2902);
 $fTemp159=$mul5086;
 var $2903=$fTemp159;
 var $fVec35=(($this1+525688)|0);
 var $arrayidx5087=(($fVec35)|0);
 HEAPF32[(($arrayidx5087)>>2)]=$2903;
 var $2904=$fSlow48;
 var $fRec268=(($this1+525680)|0);
 var $arrayidx5088=(($fRec268+4)|0);
 var $2905=HEAPF32[(($arrayidx5088)>>2)];
 var $mul5089=($2904)*($2905);
 var $2906=$fSlow49;
 var $2907=$fSlow51;
 var $fVec355090=(($this1+525688)|0);
 var $arrayidx5091=(($fVec355090+4)|0);
 var $2908=HEAPF32[(($arrayidx5091)>>2)];
 var $mul5092=($2907)*($2908);
 var $2909=$fSlow50;
 var $2910=$fTemp158;
 var $mul5093=($2909)*($2910);
 var $add5094=($mul5092)+($mul5093);
 var $mul5095=($2906)*($add5094);
 var $add5096=($mul5089)+($mul5095);
 var $fRec2685097=(($this1+525680)|0);
 var $arrayidx5098=(($fRec2685097)|0);
 HEAPF32[(($arrayidx5098)>>2)]=$add5096;
 var $fRec2685099=(($this1+525680)|0);
 var $arrayidx5100=(($fRec2685099)|0);
 var $2911=HEAPF32[(($arrayidx5100)>>2)];
 var $2912=$fSlow46;
 var $2913=$fSlow52;
 var $fRec267=(($this1+525668)|0);
 var $arrayidx5101=(($fRec267+8)|0);
 var $2914=HEAPF32[(($arrayidx5101)>>2)];
 var $mul5102=($2913)*($2914);
 var $2915=$fSlow30;
 var $fRec2675103=(($this1+525668)|0);
 var $arrayidx5104=(($fRec2675103+4)|0);
 var $2916=HEAPF32[(($arrayidx5104)>>2)];
 var $mul5105=($2915)*($2916);
 var $add5106=($mul5102)+($mul5105);
 var $mul5107=($2912)*($add5106);
 var $sub5108=($2911)-($mul5107);
 var $fRec2675109=(($this1+525668)|0);
 var $arrayidx5110=(($fRec2675109)|0);
 HEAPF32[(($arrayidx5110)>>2)]=$sub5108;
 var $2917=$fSlow36;
 var $fRec266=(($this1+525656)|0);
 var $arrayidx5111=(($fRec266+4)|0);
 var $2918=HEAPF32[(($arrayidx5111)>>2)];
 var $mul5112=($2917)*($2918);
 $fTemp160=$mul5112;
 var $2919=$fSlow46;
 var $2920=$fSlow29;
 var $fRec2675113=(($this1+525668)|0);
 var $arrayidx5114=(($fRec2675113)|0);
 var $2921=HEAPF32[(($arrayidx5114)>>2)];
 var $mul5115=($2920)*($2921);
 var $2922=$fSlow53;
 var $fRec2675116=(($this1+525668)|0);
 var $arrayidx5117=(($fRec2675116+4)|0);
 var $2923=HEAPF32[(($arrayidx5117)>>2)];
 var $mul5118=($2922)*($2923);
 var $add5119=($mul5115)+($mul5118);
 var $2924=$fSlow29;
 var $fRec2675120=(($this1+525668)|0);
 var $arrayidx5121=(($fRec2675120+8)|0);
 var $2925=HEAPF32[(($arrayidx5121)>>2)];
 var $mul5122=($2924)*($2925);
 var $add5123=($add5119)+($mul5122);
 var $mul5124=($2919)*($add5123);
 var $2926=$fSlow33;
 var $2927=$fSlow34;
 var $fRec2665125=(($this1+525656)|0);
 var $arrayidx5126=(($fRec2665125+8)|0);
 var $2928=HEAPF32[(($arrayidx5126)>>2)];
 var $mul5127=($2927)*($2928);
 var $2929=$fTemp160;
 var $add5128=($mul5127)+($2929);
 var $mul5129=($2926)*($add5128);
 var $sub5130=($mul5124)-($mul5129);
 var $fRec2665131=(($this1+525656)|0);
 var $arrayidx5132=(($fRec2665131)|0);
 HEAPF32[(($arrayidx5132)>>2)]=$sub5130;
 var $2930=$fSlow42;
 var $fRec265=(($this1+525644)|0);
 var $arrayidx5133=(($fRec265+4)|0);
 var $2931=HEAPF32[(($arrayidx5133)>>2)];
 var $mul5134=($2930)*($2931);
 $fTemp161=$mul5134;
 var $fRec2665135=(($this1+525656)|0);
 var $arrayidx5136=(($fRec2665135+8)|0);
 var $2932=HEAPF32[(($arrayidx5136)>>2)];
 var $2933=$fSlow33;
 var $2934=$fTemp160;
 var $2935=$fSlow34;
 var $fRec2665137=(($this1+525656)|0);
 var $arrayidx5138=(($fRec2665137)|0);
 var $2936=HEAPF32[(($arrayidx5138)>>2)];
 var $mul5139=($2935)*($2936);
 var $add5140=($2934)+($mul5139);
 var $mul5141=($2933)*($add5140);
 var $add5142=($2932)+($mul5141);
 var $2937=$fSlow39;
 var $2938=$fSlow40;
 var $fRec2655143=(($this1+525644)|0);
 var $arrayidx5144=(($fRec2655143+8)|0);
 var $2939=HEAPF32[(($arrayidx5144)>>2)];
 var $mul5145=($2938)*($2939);
 var $2940=$fTemp161;
 var $add5146=($mul5145)+($2940);
 var $mul5147=($2937)*($add5146);
 var $sub5148=($add5142)-($mul5147);
 var $fRec2655149=(($this1+525644)|0);
 var $arrayidx5150=(($fRec2655149)|0);
 HEAPF32[(($arrayidx5150)>>2)]=$sub5148;
 var $2941=$fSlow48;
 var $fRec275=(($this1+525636)|0);
 var $arrayidx5151=(($fRec275+4)|0);
 var $2942=HEAPF32[(($arrayidx5151)>>2)];
 var $mul5152=($2941)*($2942);
 var $2943=$fSlow49;
 var $fVec355153=(($this1+525688)|0);
 var $arrayidx5154=(($fVec355153+4)|0);
 var $2944=HEAPF32[(($arrayidx5154)>>2)];
 var $2945=$fTemp159;
 var $add5155=($2944)+($2945);
 var $mul5156=($2943)*($add5155);
 var $add5157=($mul5152)+($mul5156);
 var $fRec2755158=(($this1+525636)|0);
 var $arrayidx5159=(($fRec2755158)|0);
 HEAPF32[(($arrayidx5159)>>2)]=$add5157;
 var $fRec2755160=(($this1+525636)|0);
 var $arrayidx5161=(($fRec2755160)|0);
 var $2946=HEAPF32[(($arrayidx5161)>>2)];
 var $2947=$fSlow46;
 var $2948=$fSlow52;
 var $fRec274=(($this1+525624)|0);
 var $arrayidx5162=(($fRec274+8)|0);
 var $2949=HEAPF32[(($arrayidx5162)>>2)];
 var $mul5163=($2948)*($2949);
 var $2950=$fSlow30;
 var $fRec2745164=(($this1+525624)|0);
 var $arrayidx5165=(($fRec2745164+4)|0);
 var $2951=HEAPF32[(($arrayidx5165)>>2)];
 var $mul5166=($2950)*($2951);
 var $add5167=($mul5163)+($mul5166);
 var $mul5168=($2947)*($add5167);
 var $sub5169=($2946)-($mul5168);
 var $fRec2745170=(($this1+525624)|0);
 var $arrayidx5171=(($fRec2745170)|0);
 HEAPF32[(($arrayidx5171)>>2)]=$sub5169;
 var $fRec2745172=(($this1+525624)|0);
 var $arrayidx5173=(($fRec2745172+8)|0);
 var $2952=HEAPF32[(($arrayidx5173)>>2)];
 var $fRec2745174=(($this1+525624)|0);
 var $arrayidx5175=(($fRec2745174)|0);
 var $2953=HEAPF32[(($arrayidx5175)>>2)];
 var $fRec2745176=(($this1+525624)|0);
 var $arrayidx5177=(($fRec2745176+4)|0);
 var $2954=HEAPF32[(($arrayidx5177)>>2)];
 var $mul5178=($2954)*(2);
 var $add5179=($2953)+($mul5178);
 var $add5180=($2952)+($add5179);
 $fTemp162=$add5180;
 var $2955=$fSlow46;
 var $2956=$fTemp162;
 var $mul5181=($2955)*($2956);
 $fTemp163=$mul5181;
 var $2957=$fTemp163;
 var $fVec36=(($this1+525616)|0);
 var $arrayidx5182=(($fVec36)|0);
 HEAPF32[(($arrayidx5182)>>2)]=$2957;
 var $2958=$fSlow59;
 var $fRec273=(($this1+525608)|0);
 var $arrayidx5183=(($fRec273+4)|0);
 var $2959=HEAPF32[(($arrayidx5183)>>2)];
 var $mul5184=($2958)*($2959);
 var $2960=$fSlow60;
 var $2961=$fSlow62;
 var $fVec365185=(($this1+525616)|0);
 var $arrayidx5186=(($fVec365185+4)|0);
 var $2962=HEAPF32[(($arrayidx5186)>>2)];
 var $mul5187=($2961)*($2962);
 var $2963=$fSlow61;
 var $2964=$fTemp162;
 var $mul5188=($2963)*($2964);
 var $add5189=($mul5187)+($mul5188);
 var $mul5190=($2960)*($add5189);
 var $add5191=($mul5184)+($mul5190);
 var $fRec2735192=(($this1+525608)|0);
 var $arrayidx5193=(($fRec2735192)|0);
 HEAPF32[(($arrayidx5193)>>2)]=$add5191;
 var $fRec2735194=(($this1+525608)|0);
 var $arrayidx5195=(($fRec2735194)|0);
 var $2965=HEAPF32[(($arrayidx5195)>>2)];
 var $2966=$fSlow57;
 var $2967=$fSlow63;
 var $fRec272=(($this1+525596)|0);
 var $arrayidx5196=(($fRec272+8)|0);
 var $2968=HEAPF32[(($arrayidx5196)>>2)];
 var $mul5197=($2967)*($2968);
 var $2969=$fSlow36;
 var $fRec2725198=(($this1+525596)|0);
 var $arrayidx5199=(($fRec2725198+4)|0);
 var $2970=HEAPF32[(($arrayidx5199)>>2)];
 var $mul5200=($2969)*($2970);
 var $add5201=($mul5197)+($mul5200);
 var $mul5202=($2966)*($add5201);
 var $sub5203=($2965)-($mul5202);
 var $fRec2725204=(($this1+525596)|0);
 var $arrayidx5205=(($fRec2725204)|0);
 HEAPF32[(($arrayidx5205)>>2)]=$sub5203;
 var $2971=$fSlow42;
 var $fRec271=(($this1+525584)|0);
 var $arrayidx5206=(($fRec271+4)|0);
 var $2972=HEAPF32[(($arrayidx5206)>>2)];
 var $mul5207=($2971)*($2972);
 $fTemp164=$mul5207;
 var $2973=$fSlow57;
 var $2974=$fSlow35;
 var $fRec2725208=(($this1+525596)|0);
 var $arrayidx5209=(($fRec2725208)|0);
 var $2975=HEAPF32[(($arrayidx5209)>>2)];
 var $mul5210=($2974)*($2975);
 var $2976=$fSlow64;
 var $fRec2725211=(($this1+525596)|0);
 var $arrayidx5212=(($fRec2725211+4)|0);
 var $2977=HEAPF32[(($arrayidx5212)>>2)];
 var $mul5213=($2976)*($2977);
 var $add5214=($mul5210)+($mul5213);
 var $2978=$fSlow35;
 var $fRec2725215=(($this1+525596)|0);
 var $arrayidx5216=(($fRec2725215+8)|0);
 var $2979=HEAPF32[(($arrayidx5216)>>2)];
 var $mul5217=($2978)*($2979);
 var $add5218=($add5214)+($mul5217);
 var $mul5219=($2973)*($add5218);
 var $2980=$fSlow39;
 var $2981=$fSlow40;
 var $fRec2715220=(($this1+525584)|0);
 var $arrayidx5221=(($fRec2715220+8)|0);
 var $2982=HEAPF32[(($arrayidx5221)>>2)];
 var $mul5222=($2981)*($2982);
 var $2983=$fTemp164;
 var $add5223=($mul5222)+($2983);
 var $mul5224=($2980)*($add5223);
 var $sub5225=($mul5219)-($mul5224);
 var $fRec2715226=(($this1+525584)|0);
 var $arrayidx5227=(($fRec2715226)|0);
 HEAPF32[(($arrayidx5227)>>2)]=$sub5225;
 var $2984=$fSlow59;
 var $fRec279=(($this1+525576)|0);
 var $arrayidx5228=(($fRec279+4)|0);
 var $2985=HEAPF32[(($arrayidx5228)>>2)];
 var $mul5229=($2984)*($2985);
 var $2986=$fSlow60;
 var $fVec365230=(($this1+525616)|0);
 var $arrayidx5231=(($fVec365230+4)|0);
 var $2987=HEAPF32[(($arrayidx5231)>>2)];
 var $2988=$fTemp163;
 var $add5232=($2987)+($2988);
 var $mul5233=($2986)*($add5232);
 var $add5234=($mul5229)+($mul5233);
 var $fRec2795235=(($this1+525576)|0);
 var $arrayidx5236=(($fRec2795235)|0);
 HEAPF32[(($arrayidx5236)>>2)]=$add5234;
 var $fRec2795237=(($this1+525576)|0);
 var $arrayidx5238=(($fRec2795237)|0);
 var $2989=HEAPF32[(($arrayidx5238)>>2)];
 var $2990=$fSlow57;
 var $2991=$fSlow63;
 var $fRec278=(($this1+525564)|0);
 var $arrayidx5239=(($fRec278+8)|0);
 var $2992=HEAPF32[(($arrayidx5239)>>2)];
 var $mul5240=($2991)*($2992);
 var $2993=$fSlow36;
 var $fRec2785241=(($this1+525564)|0);
 var $arrayidx5242=(($fRec2785241+4)|0);
 var $2994=HEAPF32[(($arrayidx5242)>>2)];
 var $mul5243=($2993)*($2994);
 var $add5244=($mul5240)+($mul5243);
 var $mul5245=($2990)*($add5244);
 var $sub5246=($2989)-($mul5245);
 var $fRec2785247=(($this1+525564)|0);
 var $arrayidx5248=(($fRec2785247)|0);
 HEAPF32[(($arrayidx5248)>>2)]=$sub5246;
 var $fRec2785249=(($this1+525564)|0);
 var $arrayidx5250=(($fRec2785249+8)|0);
 var $2995=HEAPF32[(($arrayidx5250)>>2)];
 var $fRec2785251=(($this1+525564)|0);
 var $arrayidx5252=(($fRec2785251)|0);
 var $2996=HEAPF32[(($arrayidx5252)>>2)];
 var $fRec2785253=(($this1+525564)|0);
 var $arrayidx5254=(($fRec2785253+4)|0);
 var $2997=HEAPF32[(($arrayidx5254)>>2)];
 var $mul5255=($2997)*(2);
 var $add5256=($2996)+($mul5255);
 var $add5257=($2995)+($add5256);
 $fTemp165=$add5257;
 var $2998=$fSlow57;
 var $2999=$fTemp165;
 var $mul5258=($2998)*($2999);
 $fTemp166=$mul5258;
 var $3000=$fTemp166;
 var $fVec37=(($this1+525556)|0);
 var $arrayidx5259=(($fVec37)|0);
 HEAPF32[(($arrayidx5259)>>2)]=$3000;
 var $3001=$fSlow69;
 var $fRec277=(($this1+525548)|0);
 var $arrayidx5260=(($fRec277+4)|0);
 var $3002=HEAPF32[(($arrayidx5260)>>2)];
 var $mul5261=($3001)*($3002);
 var $3003=$fSlow70;
 var $fVec375262=(($this1+525556)|0);
 var $arrayidx5263=(($fVec375262+4)|0);
 var $3004=HEAPF32[(($arrayidx5263)>>2)];
 var $3005=$fTemp166;
 var $add5264=($3004)+($3005);
 var $mul5265=($3003)*($add5264);
 var $add5266=($mul5261)+($mul5265);
 var $fRec2775267=(($this1+525548)|0);
 var $arrayidx5268=(($fRec2775267)|0);
 HEAPF32[(($arrayidx5268)>>2)]=$add5266;
 var $fRec2775269=(($this1+525548)|0);
 var $arrayidx5270=(($fRec2775269)|0);
 var $3006=HEAPF32[(($arrayidx5270)>>2)];
 var $3007=$fSlow65;
 var $3008=$fSlow71;
 var $fRec276=(($this1+525536)|0);
 var $arrayidx5271=(($fRec276+8)|0);
 var $3009=HEAPF32[(($arrayidx5271)>>2)];
 var $mul5272=($3008)*($3009);
 var $3010=$fSlow42;
 var $fRec2765273=(($this1+525536)|0);
 var $arrayidx5274=(($fRec2765273+4)|0);
 var $3011=HEAPF32[(($arrayidx5274)>>2)];
 var $mul5275=($3010)*($3011);
 var $add5276=($mul5272)+($mul5275);
 var $mul5277=($3007)*($add5276);
 var $sub5278=($3006)-($mul5277);
 var $fRec2765279=(($this1+525536)|0);
 var $arrayidx5280=(($fRec2765279)|0);
 HEAPF32[(($arrayidx5280)>>2)]=$sub5278;
 var $3012=$fSlow69;
 var $fRec281=(($this1+525528)|0);
 var $arrayidx5281=(($fRec281+4)|0);
 var $3013=HEAPF32[(($arrayidx5281)>>2)];
 var $mul5282=($3012)*($3013);
 var $3014=$fSlow70;
 var $3015=$fSlow75;
 var $fVec375283=(($this1+525556)|0);
 var $arrayidx5284=(($fVec375283+4)|0);
 var $3016=HEAPF32[(($arrayidx5284)>>2)];
 var $mul5285=($3015)*($3016);
 var $3017=$fSlow74;
 var $3018=$fTemp165;
 var $mul5286=($3017)*($3018);
 var $add5287=($mul5285)+($mul5286);
 var $mul5288=($3014)*($add5287);
 var $add5289=($mul5282)+($mul5288);
 var $fRec2815290=(($this1+525528)|0);
 var $arrayidx5291=(($fRec2815290)|0);
 HEAPF32[(($arrayidx5291)>>2)]=$add5289;
 var $fRec2815292=(($this1+525528)|0);
 var $arrayidx5293=(($fRec2815292)|0);
 var $3019=HEAPF32[(($arrayidx5293)>>2)];
 var $3020=$fSlow65;
 var $3021=$fSlow71;
 var $fRec280=(($this1+525516)|0);
 var $arrayidx5294=(($fRec280+8)|0);
 var $3022=HEAPF32[(($arrayidx5294)>>2)];
 var $mul5295=($3021)*($3022);
 var $3023=$fSlow42;
 var $fRec2805296=(($this1+525516)|0);
 var $arrayidx5297=(($fRec2805296+4)|0);
 var $3024=HEAPF32[(($arrayidx5297)>>2)];
 var $mul5298=($3023)*($3024);
 var $add5299=($mul5295)+($mul5298);
 var $mul5300=($3020)*($add5299);
 var $sub5301=($3019)-($mul5300);
 var $fRec2805302=(($this1+525516)|0);
 var $arrayidx5303=(($fRec2805302)|0);
 HEAPF32[(($arrayidx5303)>>2)]=$sub5301;
 var $3025=$fSlow149;
 var $fRec2605304=(($this1+525716)|0);
 var $arrayidx5305=(($fRec2605304+8)|0);
 var $3026=HEAPF32[(($arrayidx5305)>>2)];
 var $3027=$fSlow39;
 var $3028=$fTemp157;
 var $3029=$fSlow40;
 var $fRec2605306=(($this1+525716)|0);
 var $arrayidx5307=(($fRec2605306)|0);
 var $3030=HEAPF32[(($arrayidx5307)>>2)];
 var $mul5308=($3029)*($3030);
 var $add5309=($3028)+($mul5308);
 var $mul5310=($3027)*($add5309);
 var $add5311=($3026)+($mul5310);
 var $mul5312=($3025)*($add5311);
 var $3031=$fSlow150;
 var $fRec2655313=(($this1+525644)|0);
 var $arrayidx5314=(($fRec2655313+8)|0);
 var $3032=HEAPF32[(($arrayidx5314)>>2)];
 var $3033=$fSlow39;
 var $3034=$fTemp161;
 var $3035=$fSlow40;
 var $fRec2655315=(($this1+525644)|0);
 var $arrayidx5316=(($fRec2655315)|0);
 var $3036=HEAPF32[(($arrayidx5316)>>2)];
 var $mul5317=($3035)*($3036);
 var $add5318=($3034)+($mul5317);
 var $mul5319=($3033)*($add5318);
 var $add5320=($3032)+($mul5319);
 var $mul5321=($3031)*($add5320);
 var $add5322=($mul5312)+($mul5321);
 var $3037=$fSlow151;
 var $fRec2715323=(($this1+525584)|0);
 var $arrayidx5324=(($fRec2715323+8)|0);
 var $3038=HEAPF32[(($arrayidx5324)>>2)];
 var $3039=$fSlow39;
 var $3040=$fTemp164;
 var $3041=$fSlow40;
 var $fRec2715325=(($this1+525584)|0);
 var $arrayidx5326=(($fRec2715325)|0);
 var $3042=HEAPF32[(($arrayidx5326)>>2)];
 var $mul5327=($3041)*($3042);
 var $add5328=($3040)+($mul5327);
 var $mul5329=($3039)*($add5328);
 var $add5330=($3038)+($mul5329);
 var $mul5331=($3037)*($add5330);
 var $add5332=($add5322)+($mul5331);
 var $3043=$fSlow65;
 var $3044=$fSlow152;
 var $fRec2765333=(($this1+525536)|0);
 var $arrayidx5334=(($fRec2765333+8)|0);
 var $3045=HEAPF32[(($arrayidx5334)>>2)];
 var $fRec2765335=(($this1+525536)|0);
 var $arrayidx5336=(($fRec2765335)|0);
 var $3046=HEAPF32[(($arrayidx5336)>>2)];
 var $fRec2765337=(($this1+525536)|0);
 var $arrayidx5338=(($fRec2765337+4)|0);
 var $3047=HEAPF32[(($arrayidx5338)>>2)];
 var $mul5339=($3047)*(2);
 var $add5340=($3046)+($mul5339);
 var $add5341=($3045)+($add5340);
 var $mul5342=($3044)*($add5341);
 var $3048=$fSlow153;
 var $3049=$fSlow41;
 var $fRec2805343=(($this1+525516)|0);
 var $arrayidx5344=(($fRec2805343)|0);
 var $3050=HEAPF32[(($arrayidx5344)>>2)];
 var $mul5345=($3049)*($3050);
 var $3051=$fSlow76;
 var $fRec2805346=(($this1+525516)|0);
 var $arrayidx5347=(($fRec2805346+4)|0);
 var $3052=HEAPF32[(($arrayidx5347)>>2)];
 var $mul5348=($3051)*($3052);
 var $add5349=($mul5345)+($mul5348);
 var $3053=$fSlow41;
 var $fRec2805350=(($this1+525516)|0);
 var $arrayidx5351=(($fRec2805350+8)|0);
 var $3054=HEAPF32[(($arrayidx5351)>>2)];
 var $mul5352=($3053)*($3054);
 var $add5353=($add5349)+($mul5352);
 var $mul5354=($3048)*($add5353);
 var $add5355=($mul5342)+($mul5354);
 var $mul5356=($3043)*($add5355);
 var $add5357=($add5332)+($mul5356);
 $fTemp167=$add5357;
 var $3055=$fTemp154;
 var $3056=$fTemp167;
 var $add5358=($3055)+($3056);
 $fTemp168=$add5358;
 var $3057=$fTemp141;
 var $3058=$fTemp168;
 var $add5359=($3057)+($3058);
 $fTemp169=$add5359;
 var $3059=$fSlow19;
 var $fRec286=(($this1+525508)|0);
 var $arrayidx5360=(($fRec286+4)|0);
 var $3060=HEAPF32[(($arrayidx5360)>>2)];
 var $mul5361=($3059)*($3060);
 var $3061=$fSlow20;
 var $3062=$fSlow14;
 var $fRec3=(($this1+393364)|0);
 var $arrayidx5362=(($fRec3+4)|0);
 var $3063=HEAPF32[(($arrayidx5362)>>2)];
 var $mul5363=($3062)*($3063);
 var $3064=$fSlow21;
 var $fRec35364=(($this1+393364)|0);
 var $arrayidx5365=(($fRec35364+8)|0);
 var $3065=HEAPF32[(($arrayidx5365)>>2)];
 var $mul5366=($3064)*($3065);
 var $add5367=($mul5363)+($mul5366);
 var $mul5368=($3061)*($add5367);
 var $add5369=($mul5361)+($mul5368);
 var $fRec2865370=(($this1+525508)|0);
 var $arrayidx5371=(($fRec2865370)|0);
 HEAPF32[(($arrayidx5371)>>2)]=$add5369;
 var $fRec2865372=(($this1+525508)|0);
 var $arrayidx5373=(($fRec2865372)|0);
 var $3066=HEAPF32[(($arrayidx5373)>>2)];
 var $3067=$fSlow16;
 var $3068=$fSlow22;
 var $fRec285=(($this1+525496)|0);
 var $arrayidx5374=(($fRec285+8)|0);
 var $3069=HEAPF32[(($arrayidx5374)>>2)];
 var $mul5375=($3068)*($3069);
 var $3070=$fSlow23;
 var $fRec2855376=(($this1+525496)|0);
 var $arrayidx5377=(($fRec2855376+4)|0);
 var $3071=HEAPF32[(($arrayidx5377)>>2)];
 var $mul5378=($3070)*($3071);
 var $add5379=($mul5375)+($mul5378);
 var $mul5380=($3067)*($add5379);
 var $sub5381=($3066)-($mul5380);
 var $fRec2855382=(($this1+525496)|0);
 var $arrayidx5383=(($fRec2855382)|0);
 HEAPF32[(($arrayidx5383)>>2)]=$sub5381;
 var $3072=$fSlow30;
 var $fRec284=(($this1+525484)|0);
 var $arrayidx5384=(($fRec284+4)|0);
 var $3073=HEAPF32[(($arrayidx5384)>>2)];
 var $mul5385=($3072)*($3073);
 $fTemp170=$mul5385;
 var $3074=$fSlow16;
 var $3075=$fSlow17;
 var $fRec2855386=(($this1+525496)|0);
 var $arrayidx5387=(($fRec2855386)|0);
 var $3076=HEAPF32[(($arrayidx5387)>>2)];
 var $mul5388=($3075)*($3076);
 var $3077=$fSlow24;
 var $fRec2855389=(($this1+525496)|0);
 var $arrayidx5390=(($fRec2855389+4)|0);
 var $3078=HEAPF32[(($arrayidx5390)>>2)];
 var $mul5391=($3077)*($3078);
 var $add5392=($mul5388)+($mul5391);
 var $3079=$fSlow17;
 var $fRec2855393=(($this1+525496)|0);
 var $arrayidx5394=(($fRec2855393+8)|0);
 var $3080=HEAPF32[(($arrayidx5394)>>2)];
 var $mul5395=($3079)*($3080);
 var $add5396=($add5392)+($mul5395);
 var $mul5397=($3074)*($add5396);
 var $3081=$fSlow27;
 var $3082=$fSlow28;
 var $fRec2845398=(($this1+525484)|0);
 var $arrayidx5399=(($fRec2845398+8)|0);
 var $3083=HEAPF32[(($arrayidx5399)>>2)];
 var $mul5400=($3082)*($3083);
 var $3084=$fTemp170;
 var $add5401=($mul5400)+($3084);
 var $mul5402=($3081)*($add5401);
 var $sub5403=($mul5397)-($mul5402);
 var $fRec2845404=(($this1+525484)|0);
 var $arrayidx5405=(($fRec2845404)|0);
 HEAPF32[(($arrayidx5405)>>2)]=$sub5403;
 var $3085=$fSlow36;
 var $fRec283=(($this1+525472)|0);
 var $arrayidx5406=(($fRec283+4)|0);
 var $3086=HEAPF32[(($arrayidx5406)>>2)];
 var $mul5407=($3085)*($3086);
 $fTemp171=$mul5407;
 var $fRec2845408=(($this1+525484)|0);
 var $arrayidx5409=(($fRec2845408+8)|0);
 var $3087=HEAPF32[(($arrayidx5409)>>2)];
 var $3088=$fSlow27;
 var $3089=$fTemp170;
 var $3090=$fSlow28;
 var $fRec2845410=(($this1+525484)|0);
 var $arrayidx5411=(($fRec2845410)|0);
 var $3091=HEAPF32[(($arrayidx5411)>>2)];
 var $mul5412=($3090)*($3091);
 var $add5413=($3089)+($mul5412);
 var $mul5414=($3088)*($add5413);
 var $add5415=($3087)+($mul5414);
 var $3092=$fSlow33;
 var $3093=$fSlow34;
 var $fRec2835416=(($this1+525472)|0);
 var $arrayidx5417=(($fRec2835416+8)|0);
 var $3094=HEAPF32[(($arrayidx5417)>>2)];
 var $mul5418=($3093)*($3094);
 var $3095=$fTemp171;
 var $add5419=($mul5418)+($3095);
 var $mul5420=($3092)*($add5419);
 var $sub5421=($add5415)-($mul5420);
 var $fRec2835422=(($this1+525472)|0);
 var $arrayidx5423=(($fRec2835422)|0);
 HEAPF32[(($arrayidx5423)>>2)]=$sub5421;
 var $3096=$fSlow42;
 var $fRec282=(($this1+525460)|0);
 var $arrayidx5424=(($fRec282+4)|0);
 var $3097=HEAPF32[(($arrayidx5424)>>2)];
 var $mul5425=($3096)*($3097);
 $fTemp172=$mul5425;
 var $fRec2835426=(($this1+525472)|0);
 var $arrayidx5427=(($fRec2835426+8)|0);
 var $3098=HEAPF32[(($arrayidx5427)>>2)];
 var $3099=$fSlow33;
 var $3100=$fTemp171;
 var $3101=$fSlow34;
 var $fRec2835428=(($this1+525472)|0);
 var $arrayidx5429=(($fRec2835428)|0);
 var $3102=HEAPF32[(($arrayidx5429)>>2)];
 var $mul5430=($3101)*($3102);
 var $add5431=($3100)+($mul5430);
 var $mul5432=($3099)*($add5431);
 var $add5433=($3098)+($mul5432);
 var $3103=$fSlow39;
 var $3104=$fSlow40;
 var $fRec2825434=(($this1+525460)|0);
 var $arrayidx5435=(($fRec2825434+8)|0);
 var $3105=HEAPF32[(($arrayidx5435)>>2)];
 var $mul5436=($3104)*($3105);
 var $3106=$fTemp172;
 var $add5437=($mul5436)+($3106);
 var $mul5438=($3103)*($add5437);
 var $sub5439=($add5433)-($mul5438);
 var $fRec2825440=(($this1+525460)|0);
 var $arrayidx5441=(($fRec2825440)|0);
 HEAPF32[(($arrayidx5441)>>2)]=$sub5439;
 var $3107=$fSlow19;
 var $fRec292=(($this1+525452)|0);
 var $arrayidx5442=(($fRec292+4)|0);
 var $3108=HEAPF32[(($arrayidx5442)>>2)];
 var $mul5443=($3107)*($3108);
 var $3109=$fSlow20;
 var $fRec35444=(($this1+393364)|0);
 var $arrayidx5445=(($fRec35444+4)|0);
 var $3110=HEAPF32[(($arrayidx5445)>>2)];
 var $fRec35446=(($this1+393364)|0);
 var $arrayidx5447=(($fRec35446+8)|0);
 var $3111=HEAPF32[(($arrayidx5447)>>2)];
 var $add5448=($3110)+($3111);
 var $mul5449=($3109)*($add5448);
 var $add5450=($mul5443)+($mul5449);
 var $fRec2925451=(($this1+525452)|0);
 var $arrayidx5452=(($fRec2925451)|0);
 HEAPF32[(($arrayidx5452)>>2)]=$add5450;
 var $fRec2925453=(($this1+525452)|0);
 var $arrayidx5454=(($fRec2925453)|0);
 var $3112=HEAPF32[(($arrayidx5454)>>2)];
 var $3113=$fSlow16;
 var $3114=$fSlow22;
 var $fRec291=(($this1+525440)|0);
 var $arrayidx5455=(($fRec291+8)|0);
 var $3115=HEAPF32[(($arrayidx5455)>>2)];
 var $mul5456=($3114)*($3115);
 var $3116=$fSlow23;
 var $fRec2915457=(($this1+525440)|0);
 var $arrayidx5458=(($fRec2915457+4)|0);
 var $3117=HEAPF32[(($arrayidx5458)>>2)];
 var $mul5459=($3116)*($3117);
 var $add5460=($mul5456)+($mul5459);
 var $mul5461=($3113)*($add5460);
 var $sub5462=($3112)-($mul5461);
 var $fRec2915463=(($this1+525440)|0);
 var $arrayidx5464=(($fRec2915463)|0);
 HEAPF32[(($arrayidx5464)>>2)]=$sub5462;
 var $fRec2915465=(($this1+525440)|0);
 var $arrayidx5466=(($fRec2915465+8)|0);
 var $3118=HEAPF32[(($arrayidx5466)>>2)];
 var $fRec2915467=(($this1+525440)|0);
 var $arrayidx5468=(($fRec2915467)|0);
 var $3119=HEAPF32[(($arrayidx5468)>>2)];
 var $fRec2915469=(($this1+525440)|0);
 var $arrayidx5470=(($fRec2915469+4)|0);
 var $3120=HEAPF32[(($arrayidx5470)>>2)];
 var $mul5471=($3120)*(2);
 var $add5472=($3119)+($mul5471);
 var $add5473=($3118)+($add5472);
 $fTemp173=$add5473;
 var $3121=$fSlow16;
 var $3122=$fTemp173;
 var $mul5474=($3121)*($3122);
 $fTemp174=$mul5474;
 var $3123=$fTemp174;
 var $fVec38=(($this1+525432)|0);
 var $arrayidx5475=(($fVec38)|0);
 HEAPF32[(($arrayidx5475)>>2)]=$3123;
 var $3124=$fSlow48;
 var $fRec290=(($this1+525424)|0);
 var $arrayidx5476=(($fRec290+4)|0);
 var $3125=HEAPF32[(($arrayidx5476)>>2)];
 var $mul5477=($3124)*($3125);
 var $3126=$fSlow49;
 var $3127=$fSlow51;
 var $fVec385478=(($this1+525432)|0);
 var $arrayidx5479=(($fVec385478+4)|0);
 var $3128=HEAPF32[(($arrayidx5479)>>2)];
 var $mul5480=($3127)*($3128);
 var $3129=$fSlow50;
 var $3130=$fTemp173;
 var $mul5481=($3129)*($3130);
 var $add5482=($mul5480)+($mul5481);
 var $mul5483=($3126)*($add5482);
 var $add5484=($mul5477)+($mul5483);
 var $fRec2905485=(($this1+525424)|0);
 var $arrayidx5486=(($fRec2905485)|0);
 HEAPF32[(($arrayidx5486)>>2)]=$add5484;
 var $fRec2905487=(($this1+525424)|0);
 var $arrayidx5488=(($fRec2905487)|0);
 var $3131=HEAPF32[(($arrayidx5488)>>2)];
 var $3132=$fSlow46;
 var $3133=$fSlow52;
 var $fRec289=(($this1+525412)|0);
 var $arrayidx5489=(($fRec289+8)|0);
 var $3134=HEAPF32[(($arrayidx5489)>>2)];
 var $mul5490=($3133)*($3134);
 var $3135=$fSlow30;
 var $fRec2895491=(($this1+525412)|0);
 var $arrayidx5492=(($fRec2895491+4)|0);
 var $3136=HEAPF32[(($arrayidx5492)>>2)];
 var $mul5493=($3135)*($3136);
 var $add5494=($mul5490)+($mul5493);
 var $mul5495=($3132)*($add5494);
 var $sub5496=($3131)-($mul5495);
 var $fRec2895497=(($this1+525412)|0);
 var $arrayidx5498=(($fRec2895497)|0);
 HEAPF32[(($arrayidx5498)>>2)]=$sub5496;
 var $3137=$fSlow36;
 var $fRec288=(($this1+525400)|0);
 var $arrayidx5499=(($fRec288+4)|0);
 var $3138=HEAPF32[(($arrayidx5499)>>2)];
 var $mul5500=($3137)*($3138);
 $fTemp175=$mul5500;
 var $3139=$fSlow46;
 var $3140=$fSlow29;
 var $fRec2895501=(($this1+525412)|0);
 var $arrayidx5502=(($fRec2895501)|0);
 var $3141=HEAPF32[(($arrayidx5502)>>2)];
 var $mul5503=($3140)*($3141);
 var $3142=$fSlow53;
 var $fRec2895504=(($this1+525412)|0);
 var $arrayidx5505=(($fRec2895504+4)|0);
 var $3143=HEAPF32[(($arrayidx5505)>>2)];
 var $mul5506=($3142)*($3143);
 var $add5507=($mul5503)+($mul5506);
 var $3144=$fSlow29;
 var $fRec2895508=(($this1+525412)|0);
 var $arrayidx5509=(($fRec2895508+8)|0);
 var $3145=HEAPF32[(($arrayidx5509)>>2)];
 var $mul5510=($3144)*($3145);
 var $add5511=($add5507)+($mul5510);
 var $mul5512=($3139)*($add5511);
 var $3146=$fSlow33;
 var $3147=$fSlow34;
 var $fRec2885513=(($this1+525400)|0);
 var $arrayidx5514=(($fRec2885513+8)|0);
 var $3148=HEAPF32[(($arrayidx5514)>>2)];
 var $mul5515=($3147)*($3148);
 var $3149=$fTemp175;
 var $add5516=($mul5515)+($3149);
 var $mul5517=($3146)*($add5516);
 var $sub5518=($mul5512)-($mul5517);
 var $fRec2885519=(($this1+525400)|0);
 var $arrayidx5520=(($fRec2885519)|0);
 HEAPF32[(($arrayidx5520)>>2)]=$sub5518;
 var $3150=$fSlow42;
 var $fRec287=(($this1+525388)|0);
 var $arrayidx5521=(($fRec287+4)|0);
 var $3151=HEAPF32[(($arrayidx5521)>>2)];
 var $mul5522=($3150)*($3151);
 $fTemp176=$mul5522;
 var $fRec2885523=(($this1+525400)|0);
 var $arrayidx5524=(($fRec2885523+8)|0);
 var $3152=HEAPF32[(($arrayidx5524)>>2)];
 var $3153=$fSlow33;
 var $3154=$fTemp175;
 var $3155=$fSlow34;
 var $fRec2885525=(($this1+525400)|0);
 var $arrayidx5526=(($fRec2885525)|0);
 var $3156=HEAPF32[(($arrayidx5526)>>2)];
 var $mul5527=($3155)*($3156);
 var $add5528=($3154)+($mul5527);
 var $mul5529=($3153)*($add5528);
 var $add5530=($3152)+($mul5529);
 var $3157=$fSlow39;
 var $3158=$fSlow40;
 var $fRec2875531=(($this1+525388)|0);
 var $arrayidx5532=(($fRec2875531+8)|0);
 var $3159=HEAPF32[(($arrayidx5532)>>2)];
 var $mul5533=($3158)*($3159);
 var $3160=$fTemp176;
 var $add5534=($mul5533)+($3160);
 var $mul5535=($3157)*($add5534);
 var $sub5536=($add5530)-($mul5535);
 var $fRec2875537=(($this1+525388)|0);
 var $arrayidx5538=(($fRec2875537)|0);
 HEAPF32[(($arrayidx5538)>>2)]=$sub5536;
 var $3161=$fSlow48;
 var $fRec297=(($this1+525380)|0);
 var $arrayidx5539=(($fRec297+4)|0);
 var $3162=HEAPF32[(($arrayidx5539)>>2)];
 var $mul5540=($3161)*($3162);
 var $3163=$fSlow49;
 var $fVec385541=(($this1+525432)|0);
 var $arrayidx5542=(($fVec385541+4)|0);
 var $3164=HEAPF32[(($arrayidx5542)>>2)];
 var $3165=$fTemp174;
 var $add5543=($3164)+($3165);
 var $mul5544=($3163)*($add5543);
 var $add5545=($mul5540)+($mul5544);
 var $fRec2975546=(($this1+525380)|0);
 var $arrayidx5547=(($fRec2975546)|0);
 HEAPF32[(($arrayidx5547)>>2)]=$add5545;
 var $fRec2975548=(($this1+525380)|0);
 var $arrayidx5549=(($fRec2975548)|0);
 var $3166=HEAPF32[(($arrayidx5549)>>2)];
 var $3167=$fSlow46;
 var $3168=$fSlow52;
 var $fRec296=(($this1+525368)|0);
 var $arrayidx5550=(($fRec296+8)|0);
 var $3169=HEAPF32[(($arrayidx5550)>>2)];
 var $mul5551=($3168)*($3169);
 var $3170=$fSlow30;
 var $fRec2965552=(($this1+525368)|0);
 var $arrayidx5553=(($fRec2965552+4)|0);
 var $3171=HEAPF32[(($arrayidx5553)>>2)];
 var $mul5554=($3170)*($3171);
 var $add5555=($mul5551)+($mul5554);
 var $mul5556=($3167)*($add5555);
 var $sub5557=($3166)-($mul5556);
 var $fRec2965558=(($this1+525368)|0);
 var $arrayidx5559=(($fRec2965558)|0);
 HEAPF32[(($arrayidx5559)>>2)]=$sub5557;
 var $fRec2965560=(($this1+525368)|0);
 var $arrayidx5561=(($fRec2965560+8)|0);
 var $3172=HEAPF32[(($arrayidx5561)>>2)];
 var $fRec2965562=(($this1+525368)|0);
 var $arrayidx5563=(($fRec2965562)|0);
 var $3173=HEAPF32[(($arrayidx5563)>>2)];
 var $fRec2965564=(($this1+525368)|0);
 var $arrayidx5565=(($fRec2965564+4)|0);
 var $3174=HEAPF32[(($arrayidx5565)>>2)];
 var $mul5566=($3174)*(2);
 var $add5567=($3173)+($mul5566);
 var $add5568=($3172)+($add5567);
 $fTemp177=$add5568;
 var $3175=$fSlow46;
 var $3176=$fTemp177;
 var $mul5569=($3175)*($3176);
 $fTemp178=$mul5569;
 var $3177=$fTemp178;
 var $fVec39=(($this1+525360)|0);
 var $arrayidx5570=(($fVec39)|0);
 HEAPF32[(($arrayidx5570)>>2)]=$3177;
 var $3178=$fSlow59;
 var $fRec295=(($this1+525352)|0);
 var $arrayidx5571=(($fRec295+4)|0);
 var $3179=HEAPF32[(($arrayidx5571)>>2)];
 var $mul5572=($3178)*($3179);
 var $3180=$fSlow60;
 var $3181=$fSlow62;
 var $fVec395573=(($this1+525360)|0);
 var $arrayidx5574=(($fVec395573+4)|0);
 var $3182=HEAPF32[(($arrayidx5574)>>2)];
 var $mul5575=($3181)*($3182);
 var $3183=$fSlow61;
 var $3184=$fTemp177;
 var $mul5576=($3183)*($3184);
 var $add5577=($mul5575)+($mul5576);
 var $mul5578=($3180)*($add5577);
 var $add5579=($mul5572)+($mul5578);
 var $fRec2955580=(($this1+525352)|0);
 var $arrayidx5581=(($fRec2955580)|0);
 HEAPF32[(($arrayidx5581)>>2)]=$add5579;
 var $fRec2955582=(($this1+525352)|0);
 var $arrayidx5583=(($fRec2955582)|0);
 var $3185=HEAPF32[(($arrayidx5583)>>2)];
 var $3186=$fSlow57;
 var $3187=$fSlow63;
 var $fRec294=(($this1+525340)|0);
 var $arrayidx5584=(($fRec294+8)|0);
 var $3188=HEAPF32[(($arrayidx5584)>>2)];
 var $mul5585=($3187)*($3188);
 var $3189=$fSlow36;
 var $fRec2945586=(($this1+525340)|0);
 var $arrayidx5587=(($fRec2945586+4)|0);
 var $3190=HEAPF32[(($arrayidx5587)>>2)];
 var $mul5588=($3189)*($3190);
 var $add5589=($mul5585)+($mul5588);
 var $mul5590=($3186)*($add5589);
 var $sub5591=($3185)-($mul5590);
 var $fRec2945592=(($this1+525340)|0);
 var $arrayidx5593=(($fRec2945592)|0);
 HEAPF32[(($arrayidx5593)>>2)]=$sub5591;
 var $3191=$fSlow42;
 var $fRec293=(($this1+525328)|0);
 var $arrayidx5594=(($fRec293+4)|0);
 var $3192=HEAPF32[(($arrayidx5594)>>2)];
 var $mul5595=($3191)*($3192);
 $fTemp179=$mul5595;
 var $3193=$fSlow57;
 var $3194=$fSlow35;
 var $fRec2945596=(($this1+525340)|0);
 var $arrayidx5597=(($fRec2945596)|0);
 var $3195=HEAPF32[(($arrayidx5597)>>2)];
 var $mul5598=($3194)*($3195);
 var $3196=$fSlow64;
 var $fRec2945599=(($this1+525340)|0);
 var $arrayidx5600=(($fRec2945599+4)|0);
 var $3197=HEAPF32[(($arrayidx5600)>>2)];
 var $mul5601=($3196)*($3197);
 var $add5602=($mul5598)+($mul5601);
 var $3198=$fSlow35;
 var $fRec2945603=(($this1+525340)|0);
 var $arrayidx5604=(($fRec2945603+8)|0);
 var $3199=HEAPF32[(($arrayidx5604)>>2)];
 var $mul5605=($3198)*($3199);
 var $add5606=($add5602)+($mul5605);
 var $mul5607=($3193)*($add5606);
 var $3200=$fSlow39;
 var $3201=$fSlow40;
 var $fRec2935608=(($this1+525328)|0);
 var $arrayidx5609=(($fRec2935608+8)|0);
 var $3202=HEAPF32[(($arrayidx5609)>>2)];
 var $mul5610=($3201)*($3202);
 var $3203=$fTemp179;
 var $add5611=($mul5610)+($3203);
 var $mul5612=($3200)*($add5611);
 var $sub5613=($mul5607)-($mul5612);
 var $fRec2935614=(($this1+525328)|0);
 var $arrayidx5615=(($fRec2935614)|0);
 HEAPF32[(($arrayidx5615)>>2)]=$sub5613;
 var $3204=$fSlow59;
 var $fRec301=(($this1+525320)|0);
 var $arrayidx5616=(($fRec301+4)|0);
 var $3205=HEAPF32[(($arrayidx5616)>>2)];
 var $mul5617=($3204)*($3205);
 var $3206=$fSlow60;
 var $fVec395618=(($this1+525360)|0);
 var $arrayidx5619=(($fVec395618+4)|0);
 var $3207=HEAPF32[(($arrayidx5619)>>2)];
 var $3208=$fTemp178;
 var $add5620=($3207)+($3208);
 var $mul5621=($3206)*($add5620);
 var $add5622=($mul5617)+($mul5621);
 var $fRec3015623=(($this1+525320)|0);
 var $arrayidx5624=(($fRec3015623)|0);
 HEAPF32[(($arrayidx5624)>>2)]=$add5622;
 var $fRec3015625=(($this1+525320)|0);
 var $arrayidx5626=(($fRec3015625)|0);
 var $3209=HEAPF32[(($arrayidx5626)>>2)];
 var $3210=$fSlow57;
 var $3211=$fSlow63;
 var $fRec300=(($this1+525308)|0);
 var $arrayidx5627=(($fRec300+8)|0);
 var $3212=HEAPF32[(($arrayidx5627)>>2)];
 var $mul5628=($3211)*($3212);
 var $3213=$fSlow36;
 var $fRec3005629=(($this1+525308)|0);
 var $arrayidx5630=(($fRec3005629+4)|0);
 var $3214=HEAPF32[(($arrayidx5630)>>2)];
 var $mul5631=($3213)*($3214);
 var $add5632=($mul5628)+($mul5631);
 var $mul5633=($3210)*($add5632);
 var $sub5634=($3209)-($mul5633);
 var $fRec3005635=(($this1+525308)|0);
 var $arrayidx5636=(($fRec3005635)|0);
 HEAPF32[(($arrayidx5636)>>2)]=$sub5634;
 var $fRec3005637=(($this1+525308)|0);
 var $arrayidx5638=(($fRec3005637+8)|0);
 var $3215=HEAPF32[(($arrayidx5638)>>2)];
 var $fRec3005639=(($this1+525308)|0);
 var $arrayidx5640=(($fRec3005639)|0);
 var $3216=HEAPF32[(($arrayidx5640)>>2)];
 var $fRec3005641=(($this1+525308)|0);
 var $arrayidx5642=(($fRec3005641+4)|0);
 var $3217=HEAPF32[(($arrayidx5642)>>2)];
 var $mul5643=($3217)*(2);
 var $add5644=($3216)+($mul5643);
 var $add5645=($3215)+($add5644);
 $fTemp180=$add5645;
 var $3218=$fSlow57;
 var $3219=$fTemp180;
 var $mul5646=($3218)*($3219);
 $fTemp181=$mul5646;
 var $3220=$fTemp181;
 var $fVec40=(($this1+525300)|0);
 var $arrayidx5647=(($fVec40)|0);
 HEAPF32[(($arrayidx5647)>>2)]=$3220;
 var $3221=$fSlow69;
 var $fRec299=(($this1+525292)|0);
 var $arrayidx5648=(($fRec299+4)|0);
 var $3222=HEAPF32[(($arrayidx5648)>>2)];
 var $mul5649=($3221)*($3222);
 var $3223=$fSlow70;
 var $fVec405650=(($this1+525300)|0);
 var $arrayidx5651=(($fVec405650+4)|0);
 var $3224=HEAPF32[(($arrayidx5651)>>2)];
 var $3225=$fTemp181;
 var $add5652=($3224)+($3225);
 var $mul5653=($3223)*($add5652);
 var $add5654=($mul5649)+($mul5653);
 var $fRec2995655=(($this1+525292)|0);
 var $arrayidx5656=(($fRec2995655)|0);
 HEAPF32[(($arrayidx5656)>>2)]=$add5654;
 var $fRec2995657=(($this1+525292)|0);
 var $arrayidx5658=(($fRec2995657)|0);
 var $3226=HEAPF32[(($arrayidx5658)>>2)];
 var $3227=$fSlow65;
 var $3228=$fSlow71;
 var $fRec298=(($this1+525280)|0);
 var $arrayidx5659=(($fRec298+8)|0);
 var $3229=HEAPF32[(($arrayidx5659)>>2)];
 var $mul5660=($3228)*($3229);
 var $3230=$fSlow42;
 var $fRec2985661=(($this1+525280)|0);
 var $arrayidx5662=(($fRec2985661+4)|0);
 var $3231=HEAPF32[(($arrayidx5662)>>2)];
 var $mul5663=($3230)*($3231);
 var $add5664=($mul5660)+($mul5663);
 var $mul5665=($3227)*($add5664);
 var $sub5666=($3226)-($mul5665);
 var $fRec2985667=(($this1+525280)|0);
 var $arrayidx5668=(($fRec2985667)|0);
 HEAPF32[(($arrayidx5668)>>2)]=$sub5666;
 var $3232=$fSlow69;
 var $fRec303=(($this1+525272)|0);
 var $arrayidx5669=(($fRec303+4)|0);
 var $3233=HEAPF32[(($arrayidx5669)>>2)];
 var $mul5670=($3232)*($3233);
 var $3234=$fSlow70;
 var $3235=$fSlow75;
 var $fVec405671=(($this1+525300)|0);
 var $arrayidx5672=(($fVec405671+4)|0);
 var $3236=HEAPF32[(($arrayidx5672)>>2)];
 var $mul5673=($3235)*($3236);
 var $3237=$fSlow74;
 var $3238=$fTemp180;
 var $mul5674=($3237)*($3238);
 var $add5675=($mul5673)+($mul5674);
 var $mul5676=($3234)*($add5675);
 var $add5677=($mul5670)+($mul5676);
 var $fRec3035678=(($this1+525272)|0);
 var $arrayidx5679=(($fRec3035678)|0);
 HEAPF32[(($arrayidx5679)>>2)]=$add5677;
 var $fRec3035680=(($this1+525272)|0);
 var $arrayidx5681=(($fRec3035680)|0);
 var $3239=HEAPF32[(($arrayidx5681)>>2)];
 var $3240=$fSlow65;
 var $3241=$fSlow71;
 var $fRec302=(($this1+525260)|0);
 var $arrayidx5682=(($fRec302+8)|0);
 var $3242=HEAPF32[(($arrayidx5682)>>2)];
 var $mul5683=($3241)*($3242);
 var $3243=$fSlow42;
 var $fRec3025684=(($this1+525260)|0);
 var $arrayidx5685=(($fRec3025684+4)|0);
 var $3244=HEAPF32[(($arrayidx5685)>>2)];
 var $mul5686=($3243)*($3244);
 var $add5687=($mul5683)+($mul5686);
 var $mul5688=($3240)*($add5687);
 var $sub5689=($3239)-($mul5688);
 var $fRec3025690=(($this1+525260)|0);
 var $arrayidx5691=(($fRec3025690)|0);
 HEAPF32[(($arrayidx5691)>>2)]=$sub5689;
 var $3245=$fSlow156;
 var $fRec2825692=(($this1+525460)|0);
 var $arrayidx5693=(($fRec2825692+8)|0);
 var $3246=HEAPF32[(($arrayidx5693)>>2)];
 var $3247=$fSlow39;
 var $3248=$fTemp172;
 var $3249=$fSlow40;
 var $fRec2825694=(($this1+525460)|0);
 var $arrayidx5695=(($fRec2825694)|0);
 var $3250=HEAPF32[(($arrayidx5695)>>2)];
 var $mul5696=($3249)*($3250);
 var $add5697=($3248)+($mul5696);
 var $mul5698=($3247)*($add5697);
 var $add5699=($3246)+($mul5698);
 var $mul5700=($3245)*($add5699);
 var $3251=$fSlow157;
 var $fRec2875701=(($this1+525388)|0);
 var $arrayidx5702=(($fRec2875701+8)|0);
 var $3252=HEAPF32[(($arrayidx5702)>>2)];
 var $3253=$fSlow39;
 var $3254=$fTemp176;
 var $3255=$fSlow40;
 var $fRec2875703=(($this1+525388)|0);
 var $arrayidx5704=(($fRec2875703)|0);
 var $3256=HEAPF32[(($arrayidx5704)>>2)];
 var $mul5705=($3255)*($3256);
 var $add5706=($3254)+($mul5705);
 var $mul5707=($3253)*($add5706);
 var $add5708=($3252)+($mul5707);
 var $mul5709=($3251)*($add5708);
 var $add5710=($mul5700)+($mul5709);
 var $3257=$fSlow158;
 var $fRec2935711=(($this1+525328)|0);
 var $arrayidx5712=(($fRec2935711+8)|0);
 var $3258=HEAPF32[(($arrayidx5712)>>2)];
 var $3259=$fSlow39;
 var $3260=$fTemp179;
 var $3261=$fSlow40;
 var $fRec2935713=(($this1+525328)|0);
 var $arrayidx5714=(($fRec2935713)|0);
 var $3262=HEAPF32[(($arrayidx5714)>>2)];
 var $mul5715=($3261)*($3262);
 var $add5716=($3260)+($mul5715);
 var $mul5717=($3259)*($add5716);
 var $add5718=($3258)+($mul5717);
 var $mul5719=($3257)*($add5718);
 var $add5720=($add5710)+($mul5719);
 var $3263=$fSlow65;
 var $3264=$fSlow159;
 var $fRec2985721=(($this1+525280)|0);
 var $arrayidx5722=(($fRec2985721+8)|0);
 var $3265=HEAPF32[(($arrayidx5722)>>2)];
 var $fRec2985723=(($this1+525280)|0);
 var $arrayidx5724=(($fRec2985723)|0);
 var $3266=HEAPF32[(($arrayidx5724)>>2)];
 var $fRec2985725=(($this1+525280)|0);
 var $arrayidx5726=(($fRec2985725+4)|0);
 var $3267=HEAPF32[(($arrayidx5726)>>2)];
 var $mul5727=($3267)*(2);
 var $add5728=($3266)+($mul5727);
 var $add5729=($3265)+($add5728);
 var $mul5730=($3264)*($add5729);
 var $3268=$fSlow160;
 var $3269=$fSlow41;
 var $fRec3025731=(($this1+525260)|0);
 var $arrayidx5732=(($fRec3025731)|0);
 var $3270=HEAPF32[(($arrayidx5732)>>2)];
 var $mul5733=($3269)*($3270);
 var $3271=$fSlow76;
 var $fRec3025734=(($this1+525260)|0);
 var $arrayidx5735=(($fRec3025734+4)|0);
 var $3272=HEAPF32[(($arrayidx5735)>>2)];
 var $mul5736=($3271)*($3272);
 var $add5737=($mul5733)+($mul5736);
 var $3273=$fSlow41;
 var $fRec3025738=(($this1+525260)|0);
 var $arrayidx5739=(($fRec3025738+8)|0);
 var $3274=HEAPF32[(($arrayidx5739)>>2)];
 var $mul5740=($3273)*($3274);
 var $add5741=($add5737)+($mul5740);
 var $mul5742=($3268)*($add5741);
 var $add5743=($mul5730)+($mul5742);
 var $mul5744=($3263)*($add5743);
 var $add5745=($add5720)+($mul5744);
 $fTemp182=$add5745;
 var $3275=$fSlow19;
 var $fRec308=(($this1+525252)|0);
 var $arrayidx5746=(($fRec308+4)|0);
 var $3276=HEAPF32[(($arrayidx5746)>>2)];
 var $mul5747=($3275)*($3276);
 var $3277=$fSlow20;
 var $3278=$fSlow14;
 var $fRec11=(($this1+131124)|0);
 var $arrayidx5748=(($fRec11+4)|0);
 var $3279=HEAPF32[(($arrayidx5748)>>2)];
 var $mul5749=($3278)*($3279);
 var $3280=$fSlow21;
 var $fRec115750=(($this1+131124)|0);
 var $arrayidx5751=(($fRec115750+8)|0);
 var $3281=HEAPF32[(($arrayidx5751)>>2)];
 var $mul5752=($3280)*($3281);
 var $add5753=($mul5749)+($mul5752);
 var $mul5754=($3277)*($add5753);
 var $add5755=($mul5747)+($mul5754);
 var $fRec3085756=(($this1+525252)|0);
 var $arrayidx5757=(($fRec3085756)|0);
 HEAPF32[(($arrayidx5757)>>2)]=$add5755;
 var $fRec3085758=(($this1+525252)|0);
 var $arrayidx5759=(($fRec3085758)|0);
 var $3282=HEAPF32[(($arrayidx5759)>>2)];
 var $3283=$fSlow16;
 var $3284=$fSlow22;
 var $fRec307=(($this1+525240)|0);
 var $arrayidx5760=(($fRec307+8)|0);
 var $3285=HEAPF32[(($arrayidx5760)>>2)];
 var $mul5761=($3284)*($3285);
 var $3286=$fSlow23;
 var $fRec3075762=(($this1+525240)|0);
 var $arrayidx5763=(($fRec3075762+4)|0);
 var $3287=HEAPF32[(($arrayidx5763)>>2)];
 var $mul5764=($3286)*($3287);
 var $add5765=($mul5761)+($mul5764);
 var $mul5766=($3283)*($add5765);
 var $sub5767=($3282)-($mul5766);
 var $fRec3075768=(($this1+525240)|0);
 var $arrayidx5769=(($fRec3075768)|0);
 HEAPF32[(($arrayidx5769)>>2)]=$sub5767;
 var $3288=$fSlow30;
 var $fRec306=(($this1+525228)|0);
 var $arrayidx5770=(($fRec306+4)|0);
 var $3289=HEAPF32[(($arrayidx5770)>>2)];
 var $mul5771=($3288)*($3289);
 $fTemp183=$mul5771;
 var $3290=$fSlow16;
 var $3291=$fSlow17;
 var $fRec3075772=(($this1+525240)|0);
 var $arrayidx5773=(($fRec3075772)|0);
 var $3292=HEAPF32[(($arrayidx5773)>>2)];
 var $mul5774=($3291)*($3292);
 var $3293=$fSlow24;
 var $fRec3075775=(($this1+525240)|0);
 var $arrayidx5776=(($fRec3075775+4)|0);
 var $3294=HEAPF32[(($arrayidx5776)>>2)];
 var $mul5777=($3293)*($3294);
 var $add5778=($mul5774)+($mul5777);
 var $3295=$fSlow17;
 var $fRec3075779=(($this1+525240)|0);
 var $arrayidx5780=(($fRec3075779+8)|0);
 var $3296=HEAPF32[(($arrayidx5780)>>2)];
 var $mul5781=($3295)*($3296);
 var $add5782=($add5778)+($mul5781);
 var $mul5783=($3290)*($add5782);
 var $3297=$fSlow27;
 var $3298=$fSlow28;
 var $fRec3065784=(($this1+525228)|0);
 var $arrayidx5785=(($fRec3065784+8)|0);
 var $3299=HEAPF32[(($arrayidx5785)>>2)];
 var $mul5786=($3298)*($3299);
 var $3300=$fTemp183;
 var $add5787=($mul5786)+($3300);
 var $mul5788=($3297)*($add5787);
 var $sub5789=($mul5783)-($mul5788);
 var $fRec3065790=(($this1+525228)|0);
 var $arrayidx5791=(($fRec3065790)|0);
 HEAPF32[(($arrayidx5791)>>2)]=$sub5789;
 var $3301=$fSlow36;
 var $fRec305=(($this1+525216)|0);
 var $arrayidx5792=(($fRec305+4)|0);
 var $3302=HEAPF32[(($arrayidx5792)>>2)];
 var $mul5793=($3301)*($3302);
 $fTemp184=$mul5793;
 var $fRec3065794=(($this1+525228)|0);
 var $arrayidx5795=(($fRec3065794+8)|0);
 var $3303=HEAPF32[(($arrayidx5795)>>2)];
 var $3304=$fSlow27;
 var $3305=$fTemp183;
 var $3306=$fSlow28;
 var $fRec3065796=(($this1+525228)|0);
 var $arrayidx5797=(($fRec3065796)|0);
 var $3307=HEAPF32[(($arrayidx5797)>>2)];
 var $mul5798=($3306)*($3307);
 var $add5799=($3305)+($mul5798);
 var $mul5800=($3304)*($add5799);
 var $add5801=($3303)+($mul5800);
 var $3308=$fSlow33;
 var $3309=$fSlow34;
 var $fRec3055802=(($this1+525216)|0);
 var $arrayidx5803=(($fRec3055802+8)|0);
 var $3310=HEAPF32[(($arrayidx5803)>>2)];
 var $mul5804=($3309)*($3310);
 var $3311=$fTemp184;
 var $add5805=($mul5804)+($3311);
 var $mul5806=($3308)*($add5805);
 var $sub5807=($add5801)-($mul5806);
 var $fRec3055808=(($this1+525216)|0);
 var $arrayidx5809=(($fRec3055808)|0);
 HEAPF32[(($arrayidx5809)>>2)]=$sub5807;
 var $3312=$fSlow42;
 var $fRec304=(($this1+525204)|0);
 var $arrayidx5810=(($fRec304+4)|0);
 var $3313=HEAPF32[(($arrayidx5810)>>2)];
 var $mul5811=($3312)*($3313);
 $fTemp185=$mul5811;
 var $fRec3055812=(($this1+525216)|0);
 var $arrayidx5813=(($fRec3055812+8)|0);
 var $3314=HEAPF32[(($arrayidx5813)>>2)];
 var $3315=$fSlow33;
 var $3316=$fTemp184;
 var $3317=$fSlow34;
 var $fRec3055814=(($this1+525216)|0);
 var $arrayidx5815=(($fRec3055814)|0);
 var $3318=HEAPF32[(($arrayidx5815)>>2)];
 var $mul5816=($3317)*($3318);
 var $add5817=($3316)+($mul5816);
 var $mul5818=($3315)*($add5817);
 var $add5819=($3314)+($mul5818);
 var $3319=$fSlow39;
 var $3320=$fSlow40;
 var $fRec3045820=(($this1+525204)|0);
 var $arrayidx5821=(($fRec3045820+8)|0);
 var $3321=HEAPF32[(($arrayidx5821)>>2)];
 var $mul5822=($3320)*($3321);
 var $3322=$fTemp185;
 var $add5823=($mul5822)+($3322);
 var $mul5824=($3319)*($add5823);
 var $sub5825=($add5819)-($mul5824);
 var $fRec3045826=(($this1+525204)|0);
 var $arrayidx5827=(($fRec3045826)|0);
 HEAPF32[(($arrayidx5827)>>2)]=$sub5825;
 var $3323=$fSlow19;
 var $fRec314=(($this1+525196)|0);
 var $arrayidx5828=(($fRec314+4)|0);
 var $3324=HEAPF32[(($arrayidx5828)>>2)];
 var $mul5829=($3323)*($3324);
 var $3325=$fSlow20;
 var $fRec115830=(($this1+131124)|0);
 var $arrayidx5831=(($fRec115830+4)|0);
 var $3326=HEAPF32[(($arrayidx5831)>>2)];
 var $fRec115832=(($this1+131124)|0);
 var $arrayidx5833=(($fRec115832+8)|0);
 var $3327=HEAPF32[(($arrayidx5833)>>2)];
 var $add5834=($3326)+($3327);
 var $mul5835=($3325)*($add5834);
 var $add5836=($mul5829)+($mul5835);
 var $fRec3145837=(($this1+525196)|0);
 var $arrayidx5838=(($fRec3145837)|0);
 HEAPF32[(($arrayidx5838)>>2)]=$add5836;
 var $fRec3145839=(($this1+525196)|0);
 var $arrayidx5840=(($fRec3145839)|0);
 var $3328=HEAPF32[(($arrayidx5840)>>2)];
 var $3329=$fSlow16;
 var $3330=$fSlow22;
 var $fRec313=(($this1+525184)|0);
 var $arrayidx5841=(($fRec313+8)|0);
 var $3331=HEAPF32[(($arrayidx5841)>>2)];
 var $mul5842=($3330)*($3331);
 var $3332=$fSlow23;
 var $fRec3135843=(($this1+525184)|0);
 var $arrayidx5844=(($fRec3135843+4)|0);
 var $3333=HEAPF32[(($arrayidx5844)>>2)];
 var $mul5845=($3332)*($3333);
 var $add5846=($mul5842)+($mul5845);
 var $mul5847=($3329)*($add5846);
 var $sub5848=($3328)-($mul5847);
 var $fRec3135849=(($this1+525184)|0);
 var $arrayidx5850=(($fRec3135849)|0);
 HEAPF32[(($arrayidx5850)>>2)]=$sub5848;
 var $fRec3135851=(($this1+525184)|0);
 var $arrayidx5852=(($fRec3135851+8)|0);
 var $3334=HEAPF32[(($arrayidx5852)>>2)];
 var $fRec3135853=(($this1+525184)|0);
 var $arrayidx5854=(($fRec3135853)|0);
 var $3335=HEAPF32[(($arrayidx5854)>>2)];
 var $fRec3135855=(($this1+525184)|0);
 var $arrayidx5856=(($fRec3135855+4)|0);
 var $3336=HEAPF32[(($arrayidx5856)>>2)];
 var $mul5857=($3336)*(2);
 var $add5858=($3335)+($mul5857);
 var $add5859=($3334)+($add5858);
 $fTemp186=$add5859;
 var $3337=$fSlow16;
 var $3338=$fTemp186;
 var $mul5860=($3337)*($3338);
 $fTemp187=$mul5860;
 var $3339=$fTemp187;
 var $fVec41=(($this1+525176)|0);
 var $arrayidx5861=(($fVec41)|0);
 HEAPF32[(($arrayidx5861)>>2)]=$3339;
 var $3340=$fSlow48;
 var $fRec312=(($this1+525168)|0);
 var $arrayidx5862=(($fRec312+4)|0);
 var $3341=HEAPF32[(($arrayidx5862)>>2)];
 var $mul5863=($3340)*($3341);
 var $3342=$fSlow49;
 var $3343=$fSlow51;
 var $fVec415864=(($this1+525176)|0);
 var $arrayidx5865=(($fVec415864+4)|0);
 var $3344=HEAPF32[(($arrayidx5865)>>2)];
 var $mul5866=($3343)*($3344);
 var $3345=$fSlow50;
 var $3346=$fTemp186;
 var $mul5867=($3345)*($3346);
 var $add5868=($mul5866)+($mul5867);
 var $mul5869=($3342)*($add5868);
 var $add5870=($mul5863)+($mul5869);
 var $fRec3125871=(($this1+525168)|0);
 var $arrayidx5872=(($fRec3125871)|0);
 HEAPF32[(($arrayidx5872)>>2)]=$add5870;
 var $fRec3125873=(($this1+525168)|0);
 var $arrayidx5874=(($fRec3125873)|0);
 var $3347=HEAPF32[(($arrayidx5874)>>2)];
 var $3348=$fSlow46;
 var $3349=$fSlow52;
 var $fRec311=(($this1+525156)|0);
 var $arrayidx5875=(($fRec311+8)|0);
 var $3350=HEAPF32[(($arrayidx5875)>>2)];
 var $mul5876=($3349)*($3350);
 var $3351=$fSlow30;
 var $fRec3115877=(($this1+525156)|0);
 var $arrayidx5878=(($fRec3115877+4)|0);
 var $3352=HEAPF32[(($arrayidx5878)>>2)];
 var $mul5879=($3351)*($3352);
 var $add5880=($mul5876)+($mul5879);
 var $mul5881=($3348)*($add5880);
 var $sub5882=($3347)-($mul5881);
 var $fRec3115883=(($this1+525156)|0);
 var $arrayidx5884=(($fRec3115883)|0);
 HEAPF32[(($arrayidx5884)>>2)]=$sub5882;
 var $3353=$fSlow36;
 var $fRec310=(($this1+525144)|0);
 var $arrayidx5885=(($fRec310+4)|0);
 var $3354=HEAPF32[(($arrayidx5885)>>2)];
 var $mul5886=($3353)*($3354);
 $fTemp188=$mul5886;
 var $3355=$fSlow46;
 var $3356=$fSlow29;
 var $fRec3115887=(($this1+525156)|0);
 var $arrayidx5888=(($fRec3115887)|0);
 var $3357=HEAPF32[(($arrayidx5888)>>2)];
 var $mul5889=($3356)*($3357);
 var $3358=$fSlow53;
 var $fRec3115890=(($this1+525156)|0);
 var $arrayidx5891=(($fRec3115890+4)|0);
 var $3359=HEAPF32[(($arrayidx5891)>>2)];
 var $mul5892=($3358)*($3359);
 var $add5893=($mul5889)+($mul5892);
 var $3360=$fSlow29;
 var $fRec3115894=(($this1+525156)|0);
 var $arrayidx5895=(($fRec3115894+8)|0);
 var $3361=HEAPF32[(($arrayidx5895)>>2)];
 var $mul5896=($3360)*($3361);
 var $add5897=($add5893)+($mul5896);
 var $mul5898=($3355)*($add5897);
 var $3362=$fSlow33;
 var $3363=$fSlow34;
 var $fRec3105899=(($this1+525144)|0);
 var $arrayidx5900=(($fRec3105899+8)|0);
 var $3364=HEAPF32[(($arrayidx5900)>>2)];
 var $mul5901=($3363)*($3364);
 var $3365=$fTemp188;
 var $add5902=($mul5901)+($3365);
 var $mul5903=($3362)*($add5902);
 var $sub5904=($mul5898)-($mul5903);
 var $fRec3105905=(($this1+525144)|0);
 var $arrayidx5906=(($fRec3105905)|0);
 HEAPF32[(($arrayidx5906)>>2)]=$sub5904;
 var $3366=$fSlow42;
 var $fRec309=(($this1+525132)|0);
 var $arrayidx5907=(($fRec309+4)|0);
 var $3367=HEAPF32[(($arrayidx5907)>>2)];
 var $mul5908=($3366)*($3367);
 $fTemp189=$mul5908;
 var $fRec3105909=(($this1+525144)|0);
 var $arrayidx5910=(($fRec3105909+8)|0);
 var $3368=HEAPF32[(($arrayidx5910)>>2)];
 var $3369=$fSlow33;
 var $3370=$fTemp188;
 var $3371=$fSlow34;
 var $fRec3105911=(($this1+525144)|0);
 var $arrayidx5912=(($fRec3105911)|0);
 var $3372=HEAPF32[(($arrayidx5912)>>2)];
 var $mul5913=($3371)*($3372);
 var $add5914=($3370)+($mul5913);
 var $mul5915=($3369)*($add5914);
 var $add5916=($3368)+($mul5915);
 var $3373=$fSlow39;
 var $3374=$fSlow40;
 var $fRec3095917=(($this1+525132)|0);
 var $arrayidx5918=(($fRec3095917+8)|0);
 var $3375=HEAPF32[(($arrayidx5918)>>2)];
 var $mul5919=($3374)*($3375);
 var $3376=$fTemp189;
 var $add5920=($mul5919)+($3376);
 var $mul5921=($3373)*($add5920);
 var $sub5922=($add5916)-($mul5921);
 var $fRec3095923=(($this1+525132)|0);
 var $arrayidx5924=(($fRec3095923)|0);
 HEAPF32[(($arrayidx5924)>>2)]=$sub5922;
 var $3377=$fSlow48;
 var $fRec319=(($this1+525124)|0);
 var $arrayidx5925=(($fRec319+4)|0);
 var $3378=HEAPF32[(($arrayidx5925)>>2)];
 var $mul5926=($3377)*($3378);
 var $3379=$fSlow49;
 var $fVec415927=(($this1+525176)|0);
 var $arrayidx5928=(($fVec415927+4)|0);
 var $3380=HEAPF32[(($arrayidx5928)>>2)];
 var $3381=$fTemp187;
 var $add5929=($3380)+($3381);
 var $mul5930=($3379)*($add5929);
 var $add5931=($mul5926)+($mul5930);
 var $fRec3195932=(($this1+525124)|0);
 var $arrayidx5933=(($fRec3195932)|0);
 HEAPF32[(($arrayidx5933)>>2)]=$add5931;
 var $fRec3195934=(($this1+525124)|0);
 var $arrayidx5935=(($fRec3195934)|0);
 var $3382=HEAPF32[(($arrayidx5935)>>2)];
 var $3383=$fSlow46;
 var $3384=$fSlow52;
 var $fRec318=(($this1+525112)|0);
 var $arrayidx5936=(($fRec318+8)|0);
 var $3385=HEAPF32[(($arrayidx5936)>>2)];
 var $mul5937=($3384)*($3385);
 var $3386=$fSlow30;
 var $fRec3185938=(($this1+525112)|0);
 var $arrayidx5939=(($fRec3185938+4)|0);
 var $3387=HEAPF32[(($arrayidx5939)>>2)];
 var $mul5940=($3386)*($3387);
 var $add5941=($mul5937)+($mul5940);
 var $mul5942=($3383)*($add5941);
 var $sub5943=($3382)-($mul5942);
 var $fRec3185944=(($this1+525112)|0);
 var $arrayidx5945=(($fRec3185944)|0);
 HEAPF32[(($arrayidx5945)>>2)]=$sub5943;
 var $fRec3185946=(($this1+525112)|0);
 var $arrayidx5947=(($fRec3185946+8)|0);
 var $3388=HEAPF32[(($arrayidx5947)>>2)];
 var $fRec3185948=(($this1+525112)|0);
 var $arrayidx5949=(($fRec3185948)|0);
 var $3389=HEAPF32[(($arrayidx5949)>>2)];
 var $fRec3185950=(($this1+525112)|0);
 var $arrayidx5951=(($fRec3185950+4)|0);
 var $3390=HEAPF32[(($arrayidx5951)>>2)];
 var $mul5952=($3390)*(2);
 var $add5953=($3389)+($mul5952);
 var $add5954=($3388)+($add5953);
 $fTemp190=$add5954;
 var $3391=$fSlow46;
 var $3392=$fTemp190;
 var $mul5955=($3391)*($3392);
 $fTemp191=$mul5955;
 var $3393=$fTemp191;
 var $fVec42=(($this1+525104)|0);
 var $arrayidx5956=(($fVec42)|0);
 HEAPF32[(($arrayidx5956)>>2)]=$3393;
 var $3394=$fSlow59;
 var $fRec317=(($this1+525096)|0);
 var $arrayidx5957=(($fRec317+4)|0);
 var $3395=HEAPF32[(($arrayidx5957)>>2)];
 var $mul5958=($3394)*($3395);
 var $3396=$fSlow60;
 var $3397=$fSlow62;
 var $fVec425959=(($this1+525104)|0);
 var $arrayidx5960=(($fVec425959+4)|0);
 var $3398=HEAPF32[(($arrayidx5960)>>2)];
 var $mul5961=($3397)*($3398);
 var $3399=$fSlow61;
 var $3400=$fTemp190;
 var $mul5962=($3399)*($3400);
 var $add5963=($mul5961)+($mul5962);
 var $mul5964=($3396)*($add5963);
 var $add5965=($mul5958)+($mul5964);
 var $fRec3175966=(($this1+525096)|0);
 var $arrayidx5967=(($fRec3175966)|0);
 HEAPF32[(($arrayidx5967)>>2)]=$add5965;
 var $fRec3175968=(($this1+525096)|0);
 var $arrayidx5969=(($fRec3175968)|0);
 var $3401=HEAPF32[(($arrayidx5969)>>2)];
 var $3402=$fSlow57;
 var $3403=$fSlow63;
 var $fRec316=(($this1+525084)|0);
 var $arrayidx5970=(($fRec316+8)|0);
 var $3404=HEAPF32[(($arrayidx5970)>>2)];
 var $mul5971=($3403)*($3404);
 var $3405=$fSlow36;
 var $fRec3165972=(($this1+525084)|0);
 var $arrayidx5973=(($fRec3165972+4)|0);
 var $3406=HEAPF32[(($arrayidx5973)>>2)];
 var $mul5974=($3405)*($3406);
 var $add5975=($mul5971)+($mul5974);
 var $mul5976=($3402)*($add5975);
 var $sub5977=($3401)-($mul5976);
 var $fRec3165978=(($this1+525084)|0);
 var $arrayidx5979=(($fRec3165978)|0);
 HEAPF32[(($arrayidx5979)>>2)]=$sub5977;
 var $3407=$fSlow42;
 var $fRec315=(($this1+525072)|0);
 var $arrayidx5980=(($fRec315+4)|0);
 var $3408=HEAPF32[(($arrayidx5980)>>2)];
 var $mul5981=($3407)*($3408);
 $fTemp192=$mul5981;
 var $3409=$fSlow57;
 var $3410=$fSlow35;
 var $fRec3165982=(($this1+525084)|0);
 var $arrayidx5983=(($fRec3165982)|0);
 var $3411=HEAPF32[(($arrayidx5983)>>2)];
 var $mul5984=($3410)*($3411);
 var $3412=$fSlow64;
 var $fRec3165985=(($this1+525084)|0);
 var $arrayidx5986=(($fRec3165985+4)|0);
 var $3413=HEAPF32[(($arrayidx5986)>>2)];
 var $mul5987=($3412)*($3413);
 var $add5988=($mul5984)+($mul5987);
 var $3414=$fSlow35;
 var $fRec3165989=(($this1+525084)|0);
 var $arrayidx5990=(($fRec3165989+8)|0);
 var $3415=HEAPF32[(($arrayidx5990)>>2)];
 var $mul5991=($3414)*($3415);
 var $add5992=($add5988)+($mul5991);
 var $mul5993=($3409)*($add5992);
 var $3416=$fSlow39;
 var $3417=$fSlow40;
 var $fRec3155994=(($this1+525072)|0);
 var $arrayidx5995=(($fRec3155994+8)|0);
 var $3418=HEAPF32[(($arrayidx5995)>>2)];
 var $mul5996=($3417)*($3418);
 var $3419=$fTemp192;
 var $add5997=($mul5996)+($3419);
 var $mul5998=($3416)*($add5997);
 var $sub5999=($mul5993)-($mul5998);
 var $fRec3156000=(($this1+525072)|0);
 var $arrayidx6001=(($fRec3156000)|0);
 HEAPF32[(($arrayidx6001)>>2)]=$sub5999;
 var $3420=$fSlow59;
 var $fRec323=(($this1+525064)|0);
 var $arrayidx6002=(($fRec323+4)|0);
 var $3421=HEAPF32[(($arrayidx6002)>>2)];
 var $mul6003=($3420)*($3421);
 var $3422=$fSlow60;
 var $fVec426004=(($this1+525104)|0);
 var $arrayidx6005=(($fVec426004+4)|0);
 var $3423=HEAPF32[(($arrayidx6005)>>2)];
 var $3424=$fTemp191;
 var $add6006=($3423)+($3424);
 var $mul6007=($3422)*($add6006);
 var $add6008=($mul6003)+($mul6007);
 var $fRec3236009=(($this1+525064)|0);
 var $arrayidx6010=(($fRec3236009)|0);
 HEAPF32[(($arrayidx6010)>>2)]=$add6008;
 var $fRec3236011=(($this1+525064)|0);
 var $arrayidx6012=(($fRec3236011)|0);
 var $3425=HEAPF32[(($arrayidx6012)>>2)];
 var $3426=$fSlow57;
 var $3427=$fSlow63;
 var $fRec322=(($this1+525052)|0);
 var $arrayidx6013=(($fRec322+8)|0);
 var $3428=HEAPF32[(($arrayidx6013)>>2)];
 var $mul6014=($3427)*($3428);
 var $3429=$fSlow36;
 var $fRec3226015=(($this1+525052)|0);
 var $arrayidx6016=(($fRec3226015+4)|0);
 var $3430=HEAPF32[(($arrayidx6016)>>2)];
 var $mul6017=($3429)*($3430);
 var $add6018=($mul6014)+($mul6017);
 var $mul6019=($3426)*($add6018);
 var $sub6020=($3425)-($mul6019);
 var $fRec3226021=(($this1+525052)|0);
 var $arrayidx6022=(($fRec3226021)|0);
 HEAPF32[(($arrayidx6022)>>2)]=$sub6020;
 var $fRec3226023=(($this1+525052)|0);
 var $arrayidx6024=(($fRec3226023+8)|0);
 var $3431=HEAPF32[(($arrayidx6024)>>2)];
 var $fRec3226025=(($this1+525052)|0);
 var $arrayidx6026=(($fRec3226025)|0);
 var $3432=HEAPF32[(($arrayidx6026)>>2)];
 var $fRec3226027=(($this1+525052)|0);
 var $arrayidx6028=(($fRec3226027+4)|0);
 var $3433=HEAPF32[(($arrayidx6028)>>2)];
 var $mul6029=($3433)*(2);
 var $add6030=($3432)+($mul6029);
 var $add6031=($3431)+($add6030);
 $fTemp193=$add6031;
 var $3434=$fSlow57;
 var $3435=$fTemp193;
 var $mul6032=($3434)*($3435);
 $fTemp194=$mul6032;
 var $3436=$fTemp194;
 var $fVec43=(($this1+525044)|0);
 var $arrayidx6033=(($fVec43)|0);
 HEAPF32[(($arrayidx6033)>>2)]=$3436;
 var $3437=$fSlow69;
 var $fRec321=(($this1+525036)|0);
 var $arrayidx6034=(($fRec321+4)|0);
 var $3438=HEAPF32[(($arrayidx6034)>>2)];
 var $mul6035=($3437)*($3438);
 var $3439=$fSlow70;
 var $fVec436036=(($this1+525044)|0);
 var $arrayidx6037=(($fVec436036+4)|0);
 var $3440=HEAPF32[(($arrayidx6037)>>2)];
 var $3441=$fTemp194;
 var $add6038=($3440)+($3441);
 var $mul6039=($3439)*($add6038);
 var $add6040=($mul6035)+($mul6039);
 var $fRec3216041=(($this1+525036)|0);
 var $arrayidx6042=(($fRec3216041)|0);
 HEAPF32[(($arrayidx6042)>>2)]=$add6040;
 var $fRec3216043=(($this1+525036)|0);
 var $arrayidx6044=(($fRec3216043)|0);
 var $3442=HEAPF32[(($arrayidx6044)>>2)];
 var $3443=$fSlow65;
 var $3444=$fSlow71;
 var $fRec320=(($this1+525024)|0);
 var $arrayidx6045=(($fRec320+8)|0);
 var $3445=HEAPF32[(($arrayidx6045)>>2)];
 var $mul6046=($3444)*($3445);
 var $3446=$fSlow42;
 var $fRec3206047=(($this1+525024)|0);
 var $arrayidx6048=(($fRec3206047+4)|0);
 var $3447=HEAPF32[(($arrayidx6048)>>2)];
 var $mul6049=($3446)*($3447);
 var $add6050=($mul6046)+($mul6049);
 var $mul6051=($3443)*($add6050);
 var $sub6052=($3442)-($mul6051);
 var $fRec3206053=(($this1+525024)|0);
 var $arrayidx6054=(($fRec3206053)|0);
 HEAPF32[(($arrayidx6054)>>2)]=$sub6052;
 var $3448=$fSlow69;
 var $fRec325=(($this1+525016)|0);
 var $arrayidx6055=(($fRec325+4)|0);
 var $3449=HEAPF32[(($arrayidx6055)>>2)];
 var $mul6056=($3448)*($3449);
 var $3450=$fSlow70;
 var $3451=$fSlow75;
 var $fVec436057=(($this1+525044)|0);
 var $arrayidx6058=(($fVec436057+4)|0);
 var $3452=HEAPF32[(($arrayidx6058)>>2)];
 var $mul6059=($3451)*($3452);
 var $3453=$fSlow74;
 var $3454=$fTemp193;
 var $mul6060=($3453)*($3454);
 var $add6061=($mul6059)+($mul6060);
 var $mul6062=($3450)*($add6061);
 var $add6063=($mul6056)+($mul6062);
 var $fRec3256064=(($this1+525016)|0);
 var $arrayidx6065=(($fRec3256064)|0);
 HEAPF32[(($arrayidx6065)>>2)]=$add6063;
 var $fRec3256066=(($this1+525016)|0);
 var $arrayidx6067=(($fRec3256066)|0);
 var $3455=HEAPF32[(($arrayidx6067)>>2)];
 var $3456=$fSlow65;
 var $3457=$fSlow71;
 var $fRec324=(($this1+525004)|0);
 var $arrayidx6068=(($fRec324+8)|0);
 var $3458=HEAPF32[(($arrayidx6068)>>2)];
 var $mul6069=($3457)*($3458);
 var $3459=$fSlow42;
 var $fRec3246070=(($this1+525004)|0);
 var $arrayidx6071=(($fRec3246070+4)|0);
 var $3460=HEAPF32[(($arrayidx6071)>>2)];
 var $mul6072=($3459)*($3460);
 var $add6073=($mul6069)+($mul6072);
 var $mul6074=($3456)*($add6073);
 var $sub6075=($3455)-($mul6074);
 var $fRec3246076=(($this1+525004)|0);
 var $arrayidx6077=(($fRec3246076)|0);
 HEAPF32[(($arrayidx6077)>>2)]=$sub6075;
 var $3461=$fSlow163;
 var $fRec3046078=(($this1+525204)|0);
 var $arrayidx6079=(($fRec3046078+8)|0);
 var $3462=HEAPF32[(($arrayidx6079)>>2)];
 var $3463=$fSlow39;
 var $3464=$fTemp185;
 var $3465=$fSlow40;
 var $fRec3046080=(($this1+525204)|0);
 var $arrayidx6081=(($fRec3046080)|0);
 var $3466=HEAPF32[(($arrayidx6081)>>2)];
 var $mul6082=($3465)*($3466);
 var $add6083=($3464)+($mul6082);
 var $mul6084=($3463)*($add6083);
 var $add6085=($3462)+($mul6084);
 var $mul6086=($3461)*($add6085);
 var $3467=$fSlow164;
 var $fRec3096087=(($this1+525132)|0);
 var $arrayidx6088=(($fRec3096087+8)|0);
 var $3468=HEAPF32[(($arrayidx6088)>>2)];
 var $3469=$fSlow39;
 var $3470=$fTemp189;
 var $3471=$fSlow40;
 var $fRec3096089=(($this1+525132)|0);
 var $arrayidx6090=(($fRec3096089)|0);
 var $3472=HEAPF32[(($arrayidx6090)>>2)];
 var $mul6091=($3471)*($3472);
 var $add6092=($3470)+($mul6091);
 var $mul6093=($3469)*($add6092);
 var $add6094=($3468)+($mul6093);
 var $mul6095=($3467)*($add6094);
 var $add6096=($mul6086)+($mul6095);
 var $3473=$fSlow165;
 var $fRec3156097=(($this1+525072)|0);
 var $arrayidx6098=(($fRec3156097+8)|0);
 var $3474=HEAPF32[(($arrayidx6098)>>2)];
 var $3475=$fSlow39;
 var $3476=$fTemp192;
 var $3477=$fSlow40;
 var $fRec3156099=(($this1+525072)|0);
 var $arrayidx6100=(($fRec3156099)|0);
 var $3478=HEAPF32[(($arrayidx6100)>>2)];
 var $mul6101=($3477)*($3478);
 var $add6102=($3476)+($mul6101);
 var $mul6103=($3475)*($add6102);
 var $add6104=($3474)+($mul6103);
 var $mul6105=($3473)*($add6104);
 var $add6106=($add6096)+($mul6105);
 var $3479=$fSlow65;
 var $3480=$fSlow166;
 var $fRec3206107=(($this1+525024)|0);
 var $arrayidx6108=(($fRec3206107+8)|0);
 var $3481=HEAPF32[(($arrayidx6108)>>2)];
 var $fRec3206109=(($this1+525024)|0);
 var $arrayidx6110=(($fRec3206109)|0);
 var $3482=HEAPF32[(($arrayidx6110)>>2)];
 var $fRec3206111=(($this1+525024)|0);
 var $arrayidx6112=(($fRec3206111+4)|0);
 var $3483=HEAPF32[(($arrayidx6112)>>2)];
 var $mul6113=($3483)*(2);
 var $add6114=($3482)+($mul6113);
 var $add6115=($3481)+($add6114);
 var $mul6116=($3480)*($add6115);
 var $3484=$fSlow167;
 var $3485=$fSlow41;
 var $fRec3246117=(($this1+525004)|0);
 var $arrayidx6118=(($fRec3246117)|0);
 var $3486=HEAPF32[(($arrayidx6118)>>2)];
 var $mul6119=($3485)*($3486);
 var $3487=$fSlow76;
 var $fRec3246120=(($this1+525004)|0);
 var $arrayidx6121=(($fRec3246120+4)|0);
 var $3488=HEAPF32[(($arrayidx6121)>>2)];
 var $mul6122=($3487)*($3488);
 var $add6123=($mul6119)+($mul6122);
 var $3489=$fSlow41;
 var $fRec3246124=(($this1+525004)|0);
 var $arrayidx6125=(($fRec3246124+8)|0);
 var $3490=HEAPF32[(($arrayidx6125)>>2)];
 var $mul6126=($3489)*($3490);
 var $add6127=($add6123)+($mul6126);
 var $mul6128=($3484)*($add6127);
 var $add6129=($mul6116)+($mul6128);
 var $mul6130=($3479)*($add6129);
 var $add6131=($add6106)+($mul6130);
 $fTemp195=$add6131;
 var $3491=$fTemp182;
 var $3492=$fTemp195;
 var $add6132=($3491)+($3492);
 $fTemp196=$add6132;
 var $3493=$fSlow19;
 var $fRec330=(($this1+524996)|0);
 var $arrayidx6133=(($fRec330+4)|0);
 var $3494=HEAPF32[(($arrayidx6133)>>2)];
 var $mul6134=($3493)*($3494);
 var $3495=$fSlow20;
 var $3496=$fSlow14;
 var $fRec7=(($this1+262244)|0);
 var $arrayidx6135=(($fRec7+4)|0);
 var $3497=HEAPF32[(($arrayidx6135)>>2)];
 var $mul6136=($3496)*($3497);
 var $3498=$fSlow21;
 var $fRec76137=(($this1+262244)|0);
 var $arrayidx6138=(($fRec76137+8)|0);
 var $3499=HEAPF32[(($arrayidx6138)>>2)];
 var $mul6139=($3498)*($3499);
 var $add6140=($mul6136)+($mul6139);
 var $mul6141=($3495)*($add6140);
 var $add6142=($mul6134)+($mul6141);
 var $fRec3306143=(($this1+524996)|0);
 var $arrayidx6144=(($fRec3306143)|0);
 HEAPF32[(($arrayidx6144)>>2)]=$add6142;
 var $fRec3306145=(($this1+524996)|0);
 var $arrayidx6146=(($fRec3306145)|0);
 var $3500=HEAPF32[(($arrayidx6146)>>2)];
 var $3501=$fSlow16;
 var $3502=$fSlow22;
 var $fRec329=(($this1+524984)|0);
 var $arrayidx6147=(($fRec329+8)|0);
 var $3503=HEAPF32[(($arrayidx6147)>>2)];
 var $mul6148=($3502)*($3503);
 var $3504=$fSlow23;
 var $fRec3296149=(($this1+524984)|0);
 var $arrayidx6150=(($fRec3296149+4)|0);
 var $3505=HEAPF32[(($arrayidx6150)>>2)];
 var $mul6151=($3504)*($3505);
 var $add6152=($mul6148)+($mul6151);
 var $mul6153=($3501)*($add6152);
 var $sub6154=($3500)-($mul6153);
 var $fRec3296155=(($this1+524984)|0);
 var $arrayidx6156=(($fRec3296155)|0);
 HEAPF32[(($arrayidx6156)>>2)]=$sub6154;
 var $3506=$fSlow30;
 var $fRec328=(($this1+524972)|0);
 var $arrayidx6157=(($fRec328+4)|0);
 var $3507=HEAPF32[(($arrayidx6157)>>2)];
 var $mul6158=($3506)*($3507);
 $fTemp197=$mul6158;
 var $3508=$fSlow16;
 var $3509=$fSlow17;
 var $fRec3296159=(($this1+524984)|0);
 var $arrayidx6160=(($fRec3296159)|0);
 var $3510=HEAPF32[(($arrayidx6160)>>2)];
 var $mul6161=($3509)*($3510);
 var $3511=$fSlow24;
 var $fRec3296162=(($this1+524984)|0);
 var $arrayidx6163=(($fRec3296162+4)|0);
 var $3512=HEAPF32[(($arrayidx6163)>>2)];
 var $mul6164=($3511)*($3512);
 var $add6165=($mul6161)+($mul6164);
 var $3513=$fSlow17;
 var $fRec3296166=(($this1+524984)|0);
 var $arrayidx6167=(($fRec3296166+8)|0);
 var $3514=HEAPF32[(($arrayidx6167)>>2)];
 var $mul6168=($3513)*($3514);
 var $add6169=($add6165)+($mul6168);
 var $mul6170=($3508)*($add6169);
 var $3515=$fSlow27;
 var $3516=$fSlow28;
 var $fRec3286171=(($this1+524972)|0);
 var $arrayidx6172=(($fRec3286171+8)|0);
 var $3517=HEAPF32[(($arrayidx6172)>>2)];
 var $mul6173=($3516)*($3517);
 var $3518=$fTemp197;
 var $add6174=($mul6173)+($3518);
 var $mul6175=($3515)*($add6174);
 var $sub6176=($mul6170)-($mul6175);
 var $fRec3286177=(($this1+524972)|0);
 var $arrayidx6178=(($fRec3286177)|0);
 HEAPF32[(($arrayidx6178)>>2)]=$sub6176;
 var $3519=$fSlow36;
 var $fRec327=(($this1+524960)|0);
 var $arrayidx6179=(($fRec327+4)|0);
 var $3520=HEAPF32[(($arrayidx6179)>>2)];
 var $mul6180=($3519)*($3520);
 $fTemp198=$mul6180;
 var $fRec3286181=(($this1+524972)|0);
 var $arrayidx6182=(($fRec3286181+8)|0);
 var $3521=HEAPF32[(($arrayidx6182)>>2)];
 var $3522=$fSlow27;
 var $3523=$fTemp197;
 var $3524=$fSlow28;
 var $fRec3286183=(($this1+524972)|0);
 var $arrayidx6184=(($fRec3286183)|0);
 var $3525=HEAPF32[(($arrayidx6184)>>2)];
 var $mul6185=($3524)*($3525);
 var $add6186=($3523)+($mul6185);
 var $mul6187=($3522)*($add6186);
 var $add6188=($3521)+($mul6187);
 var $3526=$fSlow33;
 var $3527=$fSlow34;
 var $fRec3276189=(($this1+524960)|0);
 var $arrayidx6190=(($fRec3276189+8)|0);
 var $3528=HEAPF32[(($arrayidx6190)>>2)];
 var $mul6191=($3527)*($3528);
 var $3529=$fTemp198;
 var $add6192=($mul6191)+($3529);
 var $mul6193=($3526)*($add6192);
 var $sub6194=($add6188)-($mul6193);
 var $fRec3276195=(($this1+524960)|0);
 var $arrayidx6196=(($fRec3276195)|0);
 HEAPF32[(($arrayidx6196)>>2)]=$sub6194;
 var $3530=$fSlow42;
 var $fRec326=(($this1+524948)|0);
 var $arrayidx6197=(($fRec326+4)|0);
 var $3531=HEAPF32[(($arrayidx6197)>>2)];
 var $mul6198=($3530)*($3531);
 $fTemp199=$mul6198;
 var $fRec3276199=(($this1+524960)|0);
 var $arrayidx6200=(($fRec3276199+8)|0);
 var $3532=HEAPF32[(($arrayidx6200)>>2)];
 var $3533=$fSlow33;
 var $3534=$fTemp198;
 var $3535=$fSlow34;
 var $fRec3276201=(($this1+524960)|0);
 var $arrayidx6202=(($fRec3276201)|0);
 var $3536=HEAPF32[(($arrayidx6202)>>2)];
 var $mul6203=($3535)*($3536);
 var $add6204=($3534)+($mul6203);
 var $mul6205=($3533)*($add6204);
 var $add6206=($3532)+($mul6205);
 var $3537=$fSlow39;
 var $3538=$fSlow40;
 var $fRec3266207=(($this1+524948)|0);
 var $arrayidx6208=(($fRec3266207+8)|0);
 var $3539=HEAPF32[(($arrayidx6208)>>2)];
 var $mul6209=($3538)*($3539);
 var $3540=$fTemp199;
 var $add6210=($mul6209)+($3540);
 var $mul6211=($3537)*($add6210);
 var $sub6212=($add6206)-($mul6211);
 var $fRec3266213=(($this1+524948)|0);
 var $arrayidx6214=(($fRec3266213)|0);
 HEAPF32[(($arrayidx6214)>>2)]=$sub6212;
 var $3541=$fSlow19;
 var $fRec336=(($this1+524940)|0);
 var $arrayidx6215=(($fRec336+4)|0);
 var $3542=HEAPF32[(($arrayidx6215)>>2)];
 var $mul6216=($3541)*($3542);
 var $3543=$fSlow20;
 var $fRec76217=(($this1+262244)|0);
 var $arrayidx6218=(($fRec76217+4)|0);
 var $3544=HEAPF32[(($arrayidx6218)>>2)];
 var $fRec76219=(($this1+262244)|0);
 var $arrayidx6220=(($fRec76219+8)|0);
 var $3545=HEAPF32[(($arrayidx6220)>>2)];
 var $add6221=($3544)+($3545);
 var $mul6222=($3543)*($add6221);
 var $add6223=($mul6216)+($mul6222);
 var $fRec3366224=(($this1+524940)|0);
 var $arrayidx6225=(($fRec3366224)|0);
 HEAPF32[(($arrayidx6225)>>2)]=$add6223;
 var $fRec3366226=(($this1+524940)|0);
 var $arrayidx6227=(($fRec3366226)|0);
 var $3546=HEAPF32[(($arrayidx6227)>>2)];
 var $3547=$fSlow16;
 var $3548=$fSlow22;
 var $fRec335=(($this1+524928)|0);
 var $arrayidx6228=(($fRec335+8)|0);
 var $3549=HEAPF32[(($arrayidx6228)>>2)];
 var $mul6229=($3548)*($3549);
 var $3550=$fSlow23;
 var $fRec3356230=(($this1+524928)|0);
 var $arrayidx6231=(($fRec3356230+4)|0);
 var $3551=HEAPF32[(($arrayidx6231)>>2)];
 var $mul6232=($3550)*($3551);
 var $add6233=($mul6229)+($mul6232);
 var $mul6234=($3547)*($add6233);
 var $sub6235=($3546)-($mul6234);
 var $fRec3356236=(($this1+524928)|0);
 var $arrayidx6237=(($fRec3356236)|0);
 HEAPF32[(($arrayidx6237)>>2)]=$sub6235;
 var $fRec3356238=(($this1+524928)|0);
 var $arrayidx6239=(($fRec3356238+8)|0);
 var $3552=HEAPF32[(($arrayidx6239)>>2)];
 var $fRec3356240=(($this1+524928)|0);
 var $arrayidx6241=(($fRec3356240)|0);
 var $3553=HEAPF32[(($arrayidx6241)>>2)];
 var $fRec3356242=(($this1+524928)|0);
 var $arrayidx6243=(($fRec3356242+4)|0);
 var $3554=HEAPF32[(($arrayidx6243)>>2)];
 var $mul6244=($3554)*(2);
 var $add6245=($3553)+($mul6244);
 var $add6246=($3552)+($add6245);
 $fTemp200=$add6246;
 var $3555=$fSlow16;
 var $3556=$fTemp200;
 var $mul6247=($3555)*($3556);
 $fTemp201=$mul6247;
 var $3557=$fTemp201;
 var $fVec44=(($this1+524920)|0);
 var $arrayidx6248=(($fVec44)|0);
 HEAPF32[(($arrayidx6248)>>2)]=$3557;
 var $3558=$fSlow48;
 var $fRec334=(($this1+524912)|0);
 var $arrayidx6249=(($fRec334+4)|0);
 var $3559=HEAPF32[(($arrayidx6249)>>2)];
 var $mul6250=($3558)*($3559);
 var $3560=$fSlow49;
 var $3561=$fSlow51;
 var $fVec446251=(($this1+524920)|0);
 var $arrayidx6252=(($fVec446251+4)|0);
 var $3562=HEAPF32[(($arrayidx6252)>>2)];
 var $mul6253=($3561)*($3562);
 var $3563=$fSlow50;
 var $3564=$fTemp200;
 var $mul6254=($3563)*($3564);
 var $add6255=($mul6253)+($mul6254);
 var $mul6256=($3560)*($add6255);
 var $add6257=($mul6250)+($mul6256);
 var $fRec3346258=(($this1+524912)|0);
 var $arrayidx6259=(($fRec3346258)|0);
 HEAPF32[(($arrayidx6259)>>2)]=$add6257;
 var $fRec3346260=(($this1+524912)|0);
 var $arrayidx6261=(($fRec3346260)|0);
 var $3565=HEAPF32[(($arrayidx6261)>>2)];
 var $3566=$fSlow46;
 var $3567=$fSlow52;
 var $fRec333=(($this1+524900)|0);
 var $arrayidx6262=(($fRec333+8)|0);
 var $3568=HEAPF32[(($arrayidx6262)>>2)];
 var $mul6263=($3567)*($3568);
 var $3569=$fSlow30;
 var $fRec3336264=(($this1+524900)|0);
 var $arrayidx6265=(($fRec3336264+4)|0);
 var $3570=HEAPF32[(($arrayidx6265)>>2)];
 var $mul6266=($3569)*($3570);
 var $add6267=($mul6263)+($mul6266);
 var $mul6268=($3566)*($add6267);
 var $sub6269=($3565)-($mul6268);
 var $fRec3336270=(($this1+524900)|0);
 var $arrayidx6271=(($fRec3336270)|0);
 HEAPF32[(($arrayidx6271)>>2)]=$sub6269;
 var $3571=$fSlow36;
 var $fRec332=(($this1+524888)|0);
 var $arrayidx6272=(($fRec332+4)|0);
 var $3572=HEAPF32[(($arrayidx6272)>>2)];
 var $mul6273=($3571)*($3572);
 $fTemp202=$mul6273;
 var $3573=$fSlow46;
 var $3574=$fSlow29;
 var $fRec3336274=(($this1+524900)|0);
 var $arrayidx6275=(($fRec3336274)|0);
 var $3575=HEAPF32[(($arrayidx6275)>>2)];
 var $mul6276=($3574)*($3575);
 var $3576=$fSlow53;
 var $fRec3336277=(($this1+524900)|0);
 var $arrayidx6278=(($fRec3336277+4)|0);
 var $3577=HEAPF32[(($arrayidx6278)>>2)];
 var $mul6279=($3576)*($3577);
 var $add6280=($mul6276)+($mul6279);
 var $3578=$fSlow29;
 var $fRec3336281=(($this1+524900)|0);
 var $arrayidx6282=(($fRec3336281+8)|0);
 var $3579=HEAPF32[(($arrayidx6282)>>2)];
 var $mul6283=($3578)*($3579);
 var $add6284=($add6280)+($mul6283);
 var $mul6285=($3573)*($add6284);
 var $3580=$fSlow33;
 var $3581=$fSlow34;
 var $fRec3326286=(($this1+524888)|0);
 var $arrayidx6287=(($fRec3326286+8)|0);
 var $3582=HEAPF32[(($arrayidx6287)>>2)];
 var $mul6288=($3581)*($3582);
 var $3583=$fTemp202;
 var $add6289=($mul6288)+($3583);
 var $mul6290=($3580)*($add6289);
 var $sub6291=($mul6285)-($mul6290);
 var $fRec3326292=(($this1+524888)|0);
 var $arrayidx6293=(($fRec3326292)|0);
 HEAPF32[(($arrayidx6293)>>2)]=$sub6291;
 var $3584=$fSlow42;
 var $fRec331=(($this1+524876)|0);
 var $arrayidx6294=(($fRec331+4)|0);
 var $3585=HEAPF32[(($arrayidx6294)>>2)];
 var $mul6295=($3584)*($3585);
 $fTemp203=$mul6295;
 var $fRec3326296=(($this1+524888)|0);
 var $arrayidx6297=(($fRec3326296+8)|0);
 var $3586=HEAPF32[(($arrayidx6297)>>2)];
 var $3587=$fSlow33;
 var $3588=$fTemp202;
 var $3589=$fSlow34;
 var $fRec3326298=(($this1+524888)|0);
 var $arrayidx6299=(($fRec3326298)|0);
 var $3590=HEAPF32[(($arrayidx6299)>>2)];
 var $mul6300=($3589)*($3590);
 var $add6301=($3588)+($mul6300);
 var $mul6302=($3587)*($add6301);
 var $add6303=($3586)+($mul6302);
 var $3591=$fSlow39;
 var $3592=$fSlow40;
 var $fRec3316304=(($this1+524876)|0);
 var $arrayidx6305=(($fRec3316304+8)|0);
 var $3593=HEAPF32[(($arrayidx6305)>>2)];
 var $mul6306=($3592)*($3593);
 var $3594=$fTemp203;
 var $add6307=($mul6306)+($3594);
 var $mul6308=($3591)*($add6307);
 var $sub6309=($add6303)-($mul6308);
 var $fRec3316310=(($this1+524876)|0);
 var $arrayidx6311=(($fRec3316310)|0);
 HEAPF32[(($arrayidx6311)>>2)]=$sub6309;
 var $3595=$fSlow48;
 var $fRec341=(($this1+524868)|0);
 var $arrayidx6312=(($fRec341+4)|0);
 var $3596=HEAPF32[(($arrayidx6312)>>2)];
 var $mul6313=($3595)*($3596);
 var $3597=$fSlow49;
 var $fVec446314=(($this1+524920)|0);
 var $arrayidx6315=(($fVec446314+4)|0);
 var $3598=HEAPF32[(($arrayidx6315)>>2)];
 var $3599=$fTemp201;
 var $add6316=($3598)+($3599);
 var $mul6317=($3597)*($add6316);
 var $add6318=($mul6313)+($mul6317);
 var $fRec3416319=(($this1+524868)|0);
 var $arrayidx6320=(($fRec3416319)|0);
 HEAPF32[(($arrayidx6320)>>2)]=$add6318;
 var $fRec3416321=(($this1+524868)|0);
 var $arrayidx6322=(($fRec3416321)|0);
 var $3600=HEAPF32[(($arrayidx6322)>>2)];
 var $3601=$fSlow46;
 var $3602=$fSlow52;
 var $fRec340=(($this1+524856)|0);
 var $arrayidx6323=(($fRec340+8)|0);
 var $3603=HEAPF32[(($arrayidx6323)>>2)];
 var $mul6324=($3602)*($3603);
 var $3604=$fSlow30;
 var $fRec3406325=(($this1+524856)|0);
 var $arrayidx6326=(($fRec3406325+4)|0);
 var $3605=HEAPF32[(($arrayidx6326)>>2)];
 var $mul6327=($3604)*($3605);
 var $add6328=($mul6324)+($mul6327);
 var $mul6329=($3601)*($add6328);
 var $sub6330=($3600)-($mul6329);
 var $fRec3406331=(($this1+524856)|0);
 var $arrayidx6332=(($fRec3406331)|0);
 HEAPF32[(($arrayidx6332)>>2)]=$sub6330;
 var $fRec3406333=(($this1+524856)|0);
 var $arrayidx6334=(($fRec3406333+8)|0);
 var $3606=HEAPF32[(($arrayidx6334)>>2)];
 var $fRec3406335=(($this1+524856)|0);
 var $arrayidx6336=(($fRec3406335)|0);
 var $3607=HEAPF32[(($arrayidx6336)>>2)];
 var $fRec3406337=(($this1+524856)|0);
 var $arrayidx6338=(($fRec3406337+4)|0);
 var $3608=HEAPF32[(($arrayidx6338)>>2)];
 var $mul6339=($3608)*(2);
 var $add6340=($3607)+($mul6339);
 var $add6341=($3606)+($add6340);
 $fTemp204=$add6341;
 var $3609=$fSlow46;
 var $3610=$fTemp204;
 var $mul6342=($3609)*($3610);
 $fTemp205=$mul6342;
 var $3611=$fTemp205;
 var $fVec45=(($this1+524848)|0);
 var $arrayidx6343=(($fVec45)|0);
 HEAPF32[(($arrayidx6343)>>2)]=$3611;
 var $3612=$fSlow59;
 var $fRec339=(($this1+524840)|0);
 var $arrayidx6344=(($fRec339+4)|0);
 var $3613=HEAPF32[(($arrayidx6344)>>2)];
 var $mul6345=($3612)*($3613);
 var $3614=$fSlow60;
 var $3615=$fSlow62;
 var $fVec456346=(($this1+524848)|0);
 var $arrayidx6347=(($fVec456346+4)|0);
 var $3616=HEAPF32[(($arrayidx6347)>>2)];
 var $mul6348=($3615)*($3616);
 var $3617=$fSlow61;
 var $3618=$fTemp204;
 var $mul6349=($3617)*($3618);
 var $add6350=($mul6348)+($mul6349);
 var $mul6351=($3614)*($add6350);
 var $add6352=($mul6345)+($mul6351);
 var $fRec3396353=(($this1+524840)|0);
 var $arrayidx6354=(($fRec3396353)|0);
 HEAPF32[(($arrayidx6354)>>2)]=$add6352;
 var $fRec3396355=(($this1+524840)|0);
 var $arrayidx6356=(($fRec3396355)|0);
 var $3619=HEAPF32[(($arrayidx6356)>>2)];
 var $3620=$fSlow57;
 var $3621=$fSlow63;
 var $fRec338=(($this1+524828)|0);
 var $arrayidx6357=(($fRec338+8)|0);
 var $3622=HEAPF32[(($arrayidx6357)>>2)];
 var $mul6358=($3621)*($3622);
 var $3623=$fSlow36;
 var $fRec3386359=(($this1+524828)|0);
 var $arrayidx6360=(($fRec3386359+4)|0);
 var $3624=HEAPF32[(($arrayidx6360)>>2)];
 var $mul6361=($3623)*($3624);
 var $add6362=($mul6358)+($mul6361);
 var $mul6363=($3620)*($add6362);
 var $sub6364=($3619)-($mul6363);
 var $fRec3386365=(($this1+524828)|0);
 var $arrayidx6366=(($fRec3386365)|0);
 HEAPF32[(($arrayidx6366)>>2)]=$sub6364;
 var $3625=$fSlow42;
 var $fRec337=(($this1+524816)|0);
 var $arrayidx6367=(($fRec337+4)|0);
 var $3626=HEAPF32[(($arrayidx6367)>>2)];
 var $mul6368=($3625)*($3626);
 $fTemp206=$mul6368;
 var $3627=$fSlow57;
 var $3628=$fSlow35;
 var $fRec3386369=(($this1+524828)|0);
 var $arrayidx6370=(($fRec3386369)|0);
 var $3629=HEAPF32[(($arrayidx6370)>>2)];
 var $mul6371=($3628)*($3629);
 var $3630=$fSlow64;
 var $fRec3386372=(($this1+524828)|0);
 var $arrayidx6373=(($fRec3386372+4)|0);
 var $3631=HEAPF32[(($arrayidx6373)>>2)];
 var $mul6374=($3630)*($3631);
 var $add6375=($mul6371)+($mul6374);
 var $3632=$fSlow35;
 var $fRec3386376=(($this1+524828)|0);
 var $arrayidx6377=(($fRec3386376+8)|0);
 var $3633=HEAPF32[(($arrayidx6377)>>2)];
 var $mul6378=($3632)*($3633);
 var $add6379=($add6375)+($mul6378);
 var $mul6380=($3627)*($add6379);
 var $3634=$fSlow39;
 var $3635=$fSlow40;
 var $fRec3376381=(($this1+524816)|0);
 var $arrayidx6382=(($fRec3376381+8)|0);
 var $3636=HEAPF32[(($arrayidx6382)>>2)];
 var $mul6383=($3635)*($3636);
 var $3637=$fTemp206;
 var $add6384=($mul6383)+($3637);
 var $mul6385=($3634)*($add6384);
 var $sub6386=($mul6380)-($mul6385);
 var $fRec3376387=(($this1+524816)|0);
 var $arrayidx6388=(($fRec3376387)|0);
 HEAPF32[(($arrayidx6388)>>2)]=$sub6386;
 var $3638=$fSlow59;
 var $fRec345=(($this1+524808)|0);
 var $arrayidx6389=(($fRec345+4)|0);
 var $3639=HEAPF32[(($arrayidx6389)>>2)];
 var $mul6390=($3638)*($3639);
 var $3640=$fSlow60;
 var $fVec456391=(($this1+524848)|0);
 var $arrayidx6392=(($fVec456391+4)|0);
 var $3641=HEAPF32[(($arrayidx6392)>>2)];
 var $3642=$fTemp205;
 var $add6393=($3641)+($3642);
 var $mul6394=($3640)*($add6393);
 var $add6395=($mul6390)+($mul6394);
 var $fRec3456396=(($this1+524808)|0);
 var $arrayidx6397=(($fRec3456396)|0);
 HEAPF32[(($arrayidx6397)>>2)]=$add6395;
 var $fRec3456398=(($this1+524808)|0);
 var $arrayidx6399=(($fRec3456398)|0);
 var $3643=HEAPF32[(($arrayidx6399)>>2)];
 var $3644=$fSlow57;
 var $3645=$fSlow63;
 var $fRec344=(($this1+524796)|0);
 var $arrayidx6400=(($fRec344+8)|0);
 var $3646=HEAPF32[(($arrayidx6400)>>2)];
 var $mul6401=($3645)*($3646);
 var $3647=$fSlow36;
 var $fRec3446402=(($this1+524796)|0);
 var $arrayidx6403=(($fRec3446402+4)|0);
 var $3648=HEAPF32[(($arrayidx6403)>>2)];
 var $mul6404=($3647)*($3648);
 var $add6405=($mul6401)+($mul6404);
 var $mul6406=($3644)*($add6405);
 var $sub6407=($3643)-($mul6406);
 var $fRec3446408=(($this1+524796)|0);
 var $arrayidx6409=(($fRec3446408)|0);
 HEAPF32[(($arrayidx6409)>>2)]=$sub6407;
 var $fRec3446410=(($this1+524796)|0);
 var $arrayidx6411=(($fRec3446410+8)|0);
 var $3649=HEAPF32[(($arrayidx6411)>>2)];
 var $fRec3446412=(($this1+524796)|0);
 var $arrayidx6413=(($fRec3446412)|0);
 var $3650=HEAPF32[(($arrayidx6413)>>2)];
 var $fRec3446414=(($this1+524796)|0);
 var $arrayidx6415=(($fRec3446414+4)|0);
 var $3651=HEAPF32[(($arrayidx6415)>>2)];
 var $mul6416=($3651)*(2);
 var $add6417=($3650)+($mul6416);
 var $add6418=($3649)+($add6417);
 $fTemp207=$add6418;
 var $3652=$fSlow57;
 var $3653=$fTemp207;
 var $mul6419=($3652)*($3653);
 $fTemp208=$mul6419;
 var $3654=$fTemp208;
 var $fVec46=(($this1+524788)|0);
 var $arrayidx6420=(($fVec46)|0);
 HEAPF32[(($arrayidx6420)>>2)]=$3654;
 var $3655=$fSlow69;
 var $fRec343=(($this1+524780)|0);
 var $arrayidx6421=(($fRec343+4)|0);
 var $3656=HEAPF32[(($arrayidx6421)>>2)];
 var $mul6422=($3655)*($3656);
 var $3657=$fSlow70;
 var $fVec466423=(($this1+524788)|0);
 var $arrayidx6424=(($fVec466423+4)|0);
 var $3658=HEAPF32[(($arrayidx6424)>>2)];
 var $3659=$fTemp208;
 var $add6425=($3658)+($3659);
 var $mul6426=($3657)*($add6425);
 var $add6427=($mul6422)+($mul6426);
 var $fRec3436428=(($this1+524780)|0);
 var $arrayidx6429=(($fRec3436428)|0);
 HEAPF32[(($arrayidx6429)>>2)]=$add6427;
 var $fRec3436430=(($this1+524780)|0);
 var $arrayidx6431=(($fRec3436430)|0);
 var $3660=HEAPF32[(($arrayidx6431)>>2)];
 var $3661=$fSlow65;
 var $3662=$fSlow71;
 var $fRec342=(($this1+524768)|0);
 var $arrayidx6432=(($fRec342+8)|0);
 var $3663=HEAPF32[(($arrayidx6432)>>2)];
 var $mul6433=($3662)*($3663);
 var $3664=$fSlow42;
 var $fRec3426434=(($this1+524768)|0);
 var $arrayidx6435=(($fRec3426434+4)|0);
 var $3665=HEAPF32[(($arrayidx6435)>>2)];
 var $mul6436=($3664)*($3665);
 var $add6437=($mul6433)+($mul6436);
 var $mul6438=($3661)*($add6437);
 var $sub6439=($3660)-($mul6438);
 var $fRec3426440=(($this1+524768)|0);
 var $arrayidx6441=(($fRec3426440)|0);
 HEAPF32[(($arrayidx6441)>>2)]=$sub6439;
 var $3666=$fSlow69;
 var $fRec347=(($this1+524760)|0);
 var $arrayidx6442=(($fRec347+4)|0);
 var $3667=HEAPF32[(($arrayidx6442)>>2)];
 var $mul6443=($3666)*($3667);
 var $3668=$fSlow70;
 var $3669=$fSlow75;
 var $fVec466444=(($this1+524788)|0);
 var $arrayidx6445=(($fVec466444+4)|0);
 var $3670=HEAPF32[(($arrayidx6445)>>2)];
 var $mul6446=($3669)*($3670);
 var $3671=$fSlow74;
 var $3672=$fTemp207;
 var $mul6447=($3671)*($3672);
 var $add6448=($mul6446)+($mul6447);
 var $mul6449=($3668)*($add6448);
 var $add6450=($mul6443)+($mul6449);
 var $fRec3476451=(($this1+524760)|0);
 var $arrayidx6452=(($fRec3476451)|0);
 HEAPF32[(($arrayidx6452)>>2)]=$add6450;
 var $fRec3476453=(($this1+524760)|0);
 var $arrayidx6454=(($fRec3476453)|0);
 var $3673=HEAPF32[(($arrayidx6454)>>2)];
 var $3674=$fSlow65;
 var $3675=$fSlow71;
 var $fRec346=(($this1+524748)|0);
 var $arrayidx6455=(($fRec346+8)|0);
 var $3676=HEAPF32[(($arrayidx6455)>>2)];
 var $mul6456=($3675)*($3676);
 var $3677=$fSlow42;
 var $fRec3466457=(($this1+524748)|0);
 var $arrayidx6458=(($fRec3466457+4)|0);
 var $3678=HEAPF32[(($arrayidx6458)>>2)];
 var $mul6459=($3677)*($3678);
 var $add6460=($mul6456)+($mul6459);
 var $mul6461=($3674)*($add6460);
 var $sub6462=($3673)-($mul6461);
 var $fRec3466463=(($this1+524748)|0);
 var $arrayidx6464=(($fRec3466463)|0);
 HEAPF32[(($arrayidx6464)>>2)]=$sub6462;
 var $3679=$fSlow170;
 var $fRec3266465=(($this1+524948)|0);
 var $arrayidx6466=(($fRec3266465+8)|0);
 var $3680=HEAPF32[(($arrayidx6466)>>2)];
 var $3681=$fSlow39;
 var $3682=$fTemp199;
 var $3683=$fSlow40;
 var $fRec3266467=(($this1+524948)|0);
 var $arrayidx6468=(($fRec3266467)|0);
 var $3684=HEAPF32[(($arrayidx6468)>>2)];
 var $mul6469=($3683)*($3684);
 var $add6470=($3682)+($mul6469);
 var $mul6471=($3681)*($add6470);
 var $add6472=($3680)+($mul6471);
 var $mul6473=($3679)*($add6472);
 var $3685=$fSlow171;
 var $fRec3316474=(($this1+524876)|0);
 var $arrayidx6475=(($fRec3316474+8)|0);
 var $3686=HEAPF32[(($arrayidx6475)>>2)];
 var $3687=$fSlow39;
 var $3688=$fTemp203;
 var $3689=$fSlow40;
 var $fRec3316476=(($this1+524876)|0);
 var $arrayidx6477=(($fRec3316476)|0);
 var $3690=HEAPF32[(($arrayidx6477)>>2)];
 var $mul6478=($3689)*($3690);
 var $add6479=($3688)+($mul6478);
 var $mul6480=($3687)*($add6479);
 var $add6481=($3686)+($mul6480);
 var $mul6482=($3685)*($add6481);
 var $add6483=($mul6473)+($mul6482);
 var $3691=$fSlow172;
 var $fRec3376484=(($this1+524816)|0);
 var $arrayidx6485=(($fRec3376484+8)|0);
 var $3692=HEAPF32[(($arrayidx6485)>>2)];
 var $3693=$fSlow39;
 var $3694=$fTemp206;
 var $3695=$fSlow40;
 var $fRec3376486=(($this1+524816)|0);
 var $arrayidx6487=(($fRec3376486)|0);
 var $3696=HEAPF32[(($arrayidx6487)>>2)];
 var $mul6488=($3695)*($3696);
 var $add6489=($3694)+($mul6488);
 var $mul6490=($3693)*($add6489);
 var $add6491=($3692)+($mul6490);
 var $mul6492=($3691)*($add6491);
 var $add6493=($add6483)+($mul6492);
 var $3697=$fSlow65;
 var $3698=$fSlow173;
 var $fRec3426494=(($this1+524768)|0);
 var $arrayidx6495=(($fRec3426494+8)|0);
 var $3699=HEAPF32[(($arrayidx6495)>>2)];
 var $fRec3426496=(($this1+524768)|0);
 var $arrayidx6497=(($fRec3426496)|0);
 var $3700=HEAPF32[(($arrayidx6497)>>2)];
 var $fRec3426498=(($this1+524768)|0);
 var $arrayidx6499=(($fRec3426498+4)|0);
 var $3701=HEAPF32[(($arrayidx6499)>>2)];
 var $mul6500=($3701)*(2);
 var $add6501=($3700)+($mul6500);
 var $add6502=($3699)+($add6501);
 var $mul6503=($3698)*($add6502);
 var $3702=$fSlow174;
 var $3703=$fSlow41;
 var $fRec3466504=(($this1+524748)|0);
 var $arrayidx6505=(($fRec3466504)|0);
 var $3704=HEAPF32[(($arrayidx6505)>>2)];
 var $mul6506=($3703)*($3704);
 var $3705=$fSlow76;
 var $fRec3466507=(($this1+524748)|0);
 var $arrayidx6508=(($fRec3466507+4)|0);
 var $3706=HEAPF32[(($arrayidx6508)>>2)];
 var $mul6509=($3705)*($3706);
 var $add6510=($mul6506)+($mul6509);
 var $3707=$fSlow41;
 var $fRec3466511=(($this1+524748)|0);
 var $arrayidx6512=(($fRec3466511+8)|0);
 var $3708=HEAPF32[(($arrayidx6512)>>2)];
 var $mul6513=($3707)*($3708);
 var $add6514=($add6510)+($mul6513);
 var $mul6515=($3702)*($add6514);
 var $add6516=($mul6503)+($mul6515);
 var $mul6517=($3697)*($add6516);
 var $add6518=($add6493)+($mul6517);
 $fTemp209=$add6518;
 var $3709=$fSlow19;
 var $fRec352=(($this1+524740)|0);
 var $arrayidx6519=(($fRec352+4)|0);
 var $3710=HEAPF32[(($arrayidx6519)>>2)];
 var $mul6520=($3709)*($3710);
 var $3711=$fSlow20;
 var $3712=$fSlow14;
 var $fRec15=(($this1+4)|0);
 var $arrayidx6521=(($fRec15+4)|0);
 var $3713=HEAPF32[(($arrayidx6521)>>2)];
 var $mul6522=($3712)*($3713);
 var $3714=$fSlow21;
 var $fRec156523=(($this1+4)|0);
 var $arrayidx6524=(($fRec156523+8)|0);
 var $3715=HEAPF32[(($arrayidx6524)>>2)];
 var $mul6525=($3714)*($3715);
 var $add6526=($mul6522)+($mul6525);
 var $mul6527=($3711)*($add6526);
 var $add6528=($mul6520)+($mul6527);
 var $fRec3526529=(($this1+524740)|0);
 var $arrayidx6530=(($fRec3526529)|0);
 HEAPF32[(($arrayidx6530)>>2)]=$add6528;
 var $fRec3526531=(($this1+524740)|0);
 var $arrayidx6532=(($fRec3526531)|0);
 var $3716=HEAPF32[(($arrayidx6532)>>2)];
 var $3717=$fSlow16;
 var $3718=$fSlow22;
 var $fRec351=(($this1+524728)|0);
 var $arrayidx6533=(($fRec351+8)|0);
 var $3719=HEAPF32[(($arrayidx6533)>>2)];
 var $mul6534=($3718)*($3719);
 var $3720=$fSlow23;
 var $fRec3516535=(($this1+524728)|0);
 var $arrayidx6536=(($fRec3516535+4)|0);
 var $3721=HEAPF32[(($arrayidx6536)>>2)];
 var $mul6537=($3720)*($3721);
 var $add6538=($mul6534)+($mul6537);
 var $mul6539=($3717)*($add6538);
 var $sub6540=($3716)-($mul6539);
 var $fRec3516541=(($this1+524728)|0);
 var $arrayidx6542=(($fRec3516541)|0);
 HEAPF32[(($arrayidx6542)>>2)]=$sub6540;
 var $3722=$fSlow30;
 var $fRec350=(($this1+524716)|0);
 var $arrayidx6543=(($fRec350+4)|0);
 var $3723=HEAPF32[(($arrayidx6543)>>2)];
 var $mul6544=($3722)*($3723);
 $fTemp210=$mul6544;
 var $3724=$fSlow16;
 var $3725=$fSlow17;
 var $fRec3516545=(($this1+524728)|0);
 var $arrayidx6546=(($fRec3516545)|0);
 var $3726=HEAPF32[(($arrayidx6546)>>2)];
 var $mul6547=($3725)*($3726);
 var $3727=$fSlow24;
 var $fRec3516548=(($this1+524728)|0);
 var $arrayidx6549=(($fRec3516548+4)|0);
 var $3728=HEAPF32[(($arrayidx6549)>>2)];
 var $mul6550=($3727)*($3728);
 var $add6551=($mul6547)+($mul6550);
 var $3729=$fSlow17;
 var $fRec3516552=(($this1+524728)|0);
 var $arrayidx6553=(($fRec3516552+8)|0);
 var $3730=HEAPF32[(($arrayidx6553)>>2)];
 var $mul6554=($3729)*($3730);
 var $add6555=($add6551)+($mul6554);
 var $mul6556=($3724)*($add6555);
 var $3731=$fSlow27;
 var $3732=$fSlow28;
 var $fRec3506557=(($this1+524716)|0);
 var $arrayidx6558=(($fRec3506557+8)|0);
 var $3733=HEAPF32[(($arrayidx6558)>>2)];
 var $mul6559=($3732)*($3733);
 var $3734=$fTemp210;
 var $add6560=($mul6559)+($3734);
 var $mul6561=($3731)*($add6560);
 var $sub6562=($mul6556)-($mul6561);
 var $fRec3506563=(($this1+524716)|0);
 var $arrayidx6564=(($fRec3506563)|0);
 HEAPF32[(($arrayidx6564)>>2)]=$sub6562;
 var $3735=$fSlow36;
 var $fRec349=(($this1+524704)|0);
 var $arrayidx6565=(($fRec349+4)|0);
 var $3736=HEAPF32[(($arrayidx6565)>>2)];
 var $mul6566=($3735)*($3736);
 $fTemp211=$mul6566;
 var $fRec3506567=(($this1+524716)|0);
 var $arrayidx6568=(($fRec3506567+8)|0);
 var $3737=HEAPF32[(($arrayidx6568)>>2)];
 var $3738=$fSlow27;
 var $3739=$fTemp210;
 var $3740=$fSlow28;
 var $fRec3506569=(($this1+524716)|0);
 var $arrayidx6570=(($fRec3506569)|0);
 var $3741=HEAPF32[(($arrayidx6570)>>2)];
 var $mul6571=($3740)*($3741);
 var $add6572=($3739)+($mul6571);
 var $mul6573=($3738)*($add6572);
 var $add6574=($3737)+($mul6573);
 var $3742=$fSlow33;
 var $3743=$fSlow34;
 var $fRec3496575=(($this1+524704)|0);
 var $arrayidx6576=(($fRec3496575+8)|0);
 var $3744=HEAPF32[(($arrayidx6576)>>2)];
 var $mul6577=($3743)*($3744);
 var $3745=$fTemp211;
 var $add6578=($mul6577)+($3745);
 var $mul6579=($3742)*($add6578);
 var $sub6580=($add6574)-($mul6579);
 var $fRec3496581=(($this1+524704)|0);
 var $arrayidx6582=(($fRec3496581)|0);
 HEAPF32[(($arrayidx6582)>>2)]=$sub6580;
 var $3746=$fSlow42;
 var $fRec348=(($this1+524692)|0);
 var $arrayidx6583=(($fRec348+4)|0);
 var $3747=HEAPF32[(($arrayidx6583)>>2)];
 var $mul6584=($3746)*($3747);
 $fTemp212=$mul6584;
 var $fRec3496585=(($this1+524704)|0);
 var $arrayidx6586=(($fRec3496585+8)|0);
 var $3748=HEAPF32[(($arrayidx6586)>>2)];
 var $3749=$fSlow33;
 var $3750=$fTemp211;
 var $3751=$fSlow34;
 var $fRec3496587=(($this1+524704)|0);
 var $arrayidx6588=(($fRec3496587)|0);
 var $3752=HEAPF32[(($arrayidx6588)>>2)];
 var $mul6589=($3751)*($3752);
 var $add6590=($3750)+($mul6589);
 var $mul6591=($3749)*($add6590);
 var $add6592=($3748)+($mul6591);
 var $3753=$fSlow39;
 var $3754=$fSlow40;
 var $fRec3486593=(($this1+524692)|0);
 var $arrayidx6594=(($fRec3486593+8)|0);
 var $3755=HEAPF32[(($arrayidx6594)>>2)];
 var $mul6595=($3754)*($3755);
 var $3756=$fTemp212;
 var $add6596=($mul6595)+($3756);
 var $mul6597=($3753)*($add6596);
 var $sub6598=($add6592)-($mul6597);
 var $fRec3486599=(($this1+524692)|0);
 var $arrayidx6600=(($fRec3486599)|0);
 HEAPF32[(($arrayidx6600)>>2)]=$sub6598;
 var $3757=$fSlow19;
 var $fRec358=(($this1+524684)|0);
 var $arrayidx6601=(($fRec358+4)|0);
 var $3758=HEAPF32[(($arrayidx6601)>>2)];
 var $mul6602=($3757)*($3758);
 var $3759=$fSlow20;
 var $fRec156603=(($this1+4)|0);
 var $arrayidx6604=(($fRec156603+4)|0);
 var $3760=HEAPF32[(($arrayidx6604)>>2)];
 var $fRec156605=(($this1+4)|0);
 var $arrayidx6606=(($fRec156605+8)|0);
 var $3761=HEAPF32[(($arrayidx6606)>>2)];
 var $add6607=($3760)+($3761);
 var $mul6608=($3759)*($add6607);
 var $add6609=($mul6602)+($mul6608);
 var $fRec3586610=(($this1+524684)|0);
 var $arrayidx6611=(($fRec3586610)|0);
 HEAPF32[(($arrayidx6611)>>2)]=$add6609;
 var $fRec3586612=(($this1+524684)|0);
 var $arrayidx6613=(($fRec3586612)|0);
 var $3762=HEAPF32[(($arrayidx6613)>>2)];
 var $3763=$fSlow16;
 var $3764=$fSlow22;
 var $fRec357=(($this1+524672)|0);
 var $arrayidx6614=(($fRec357+8)|0);
 var $3765=HEAPF32[(($arrayidx6614)>>2)];
 var $mul6615=($3764)*($3765);
 var $3766=$fSlow23;
 var $fRec3576616=(($this1+524672)|0);
 var $arrayidx6617=(($fRec3576616+4)|0);
 var $3767=HEAPF32[(($arrayidx6617)>>2)];
 var $mul6618=($3766)*($3767);
 var $add6619=($mul6615)+($mul6618);
 var $mul6620=($3763)*($add6619);
 var $sub6621=($3762)-($mul6620);
 var $fRec3576622=(($this1+524672)|0);
 var $arrayidx6623=(($fRec3576622)|0);
 HEAPF32[(($arrayidx6623)>>2)]=$sub6621;
 var $fRec3576624=(($this1+524672)|0);
 var $arrayidx6625=(($fRec3576624+8)|0);
 var $3768=HEAPF32[(($arrayidx6625)>>2)];
 var $fRec3576626=(($this1+524672)|0);
 var $arrayidx6627=(($fRec3576626)|0);
 var $3769=HEAPF32[(($arrayidx6627)>>2)];
 var $fRec3576628=(($this1+524672)|0);
 var $arrayidx6629=(($fRec3576628+4)|0);
 var $3770=HEAPF32[(($arrayidx6629)>>2)];
 var $mul6630=($3770)*(2);
 var $add6631=($3769)+($mul6630);
 var $add6632=($3768)+($add6631);
 $fTemp213=$add6632;
 var $3771=$fSlow16;
 var $3772=$fTemp213;
 var $mul6633=($3771)*($3772);
 $fTemp214=$mul6633;
 var $3773=$fTemp214;
 var $fVec47=(($this1+524664)|0);
 var $arrayidx6634=(($fVec47)|0);
 HEAPF32[(($arrayidx6634)>>2)]=$3773;
 var $3774=$fSlow48;
 var $fRec356=(($this1+524656)|0);
 var $arrayidx6635=(($fRec356+4)|0);
 var $3775=HEAPF32[(($arrayidx6635)>>2)];
 var $mul6636=($3774)*($3775);
 var $3776=$fSlow49;
 var $3777=$fSlow51;
 var $fVec476637=(($this1+524664)|0);
 var $arrayidx6638=(($fVec476637+4)|0);
 var $3778=HEAPF32[(($arrayidx6638)>>2)];
 var $mul6639=($3777)*($3778);
 var $3779=$fSlow50;
 var $3780=$fTemp213;
 var $mul6640=($3779)*($3780);
 var $add6641=($mul6639)+($mul6640);
 var $mul6642=($3776)*($add6641);
 var $add6643=($mul6636)+($mul6642);
 var $fRec3566644=(($this1+524656)|0);
 var $arrayidx6645=(($fRec3566644)|0);
 HEAPF32[(($arrayidx6645)>>2)]=$add6643;
 var $fRec3566646=(($this1+524656)|0);
 var $arrayidx6647=(($fRec3566646)|0);
 var $3781=HEAPF32[(($arrayidx6647)>>2)];
 var $3782=$fSlow46;
 var $3783=$fSlow52;
 var $fRec355=(($this1+524644)|0);
 var $arrayidx6648=(($fRec355+8)|0);
 var $3784=HEAPF32[(($arrayidx6648)>>2)];
 var $mul6649=($3783)*($3784);
 var $3785=$fSlow30;
 var $fRec3556650=(($this1+524644)|0);
 var $arrayidx6651=(($fRec3556650+4)|0);
 var $3786=HEAPF32[(($arrayidx6651)>>2)];
 var $mul6652=($3785)*($3786);
 var $add6653=($mul6649)+($mul6652);
 var $mul6654=($3782)*($add6653);
 var $sub6655=($3781)-($mul6654);
 var $fRec3556656=(($this1+524644)|0);
 var $arrayidx6657=(($fRec3556656)|0);
 HEAPF32[(($arrayidx6657)>>2)]=$sub6655;
 var $3787=$fSlow36;
 var $fRec354=(($this1+524632)|0);
 var $arrayidx6658=(($fRec354+4)|0);
 var $3788=HEAPF32[(($arrayidx6658)>>2)];
 var $mul6659=($3787)*($3788);
 $fTemp215=$mul6659;
 var $3789=$fSlow46;
 var $3790=$fSlow29;
 var $fRec3556660=(($this1+524644)|0);
 var $arrayidx6661=(($fRec3556660)|0);
 var $3791=HEAPF32[(($arrayidx6661)>>2)];
 var $mul6662=($3790)*($3791);
 var $3792=$fSlow53;
 var $fRec3556663=(($this1+524644)|0);
 var $arrayidx6664=(($fRec3556663+4)|0);
 var $3793=HEAPF32[(($arrayidx6664)>>2)];
 var $mul6665=($3792)*($3793);
 var $add6666=($mul6662)+($mul6665);
 var $3794=$fSlow29;
 var $fRec3556667=(($this1+524644)|0);
 var $arrayidx6668=(($fRec3556667+8)|0);
 var $3795=HEAPF32[(($arrayidx6668)>>2)];
 var $mul6669=($3794)*($3795);
 var $add6670=($add6666)+($mul6669);
 var $mul6671=($3789)*($add6670);
 var $3796=$fSlow33;
 var $3797=$fSlow34;
 var $fRec3546672=(($this1+524632)|0);
 var $arrayidx6673=(($fRec3546672+8)|0);
 var $3798=HEAPF32[(($arrayidx6673)>>2)];
 var $mul6674=($3797)*($3798);
 var $3799=$fTemp215;
 var $add6675=($mul6674)+($3799);
 var $mul6676=($3796)*($add6675);
 var $sub6677=($mul6671)-($mul6676);
 var $fRec3546678=(($this1+524632)|0);
 var $arrayidx6679=(($fRec3546678)|0);
 HEAPF32[(($arrayidx6679)>>2)]=$sub6677;
 var $3800=$fSlow42;
 var $fRec353=(($this1+524620)|0);
 var $arrayidx6680=(($fRec353+4)|0);
 var $3801=HEAPF32[(($arrayidx6680)>>2)];
 var $mul6681=($3800)*($3801);
 $fTemp216=$mul6681;
 var $fRec3546682=(($this1+524632)|0);
 var $arrayidx6683=(($fRec3546682+8)|0);
 var $3802=HEAPF32[(($arrayidx6683)>>2)];
 var $3803=$fSlow33;
 var $3804=$fTemp215;
 var $3805=$fSlow34;
 var $fRec3546684=(($this1+524632)|0);
 var $arrayidx6685=(($fRec3546684)|0);
 var $3806=HEAPF32[(($arrayidx6685)>>2)];
 var $mul6686=($3805)*($3806);
 var $add6687=($3804)+($mul6686);
 var $mul6688=($3803)*($add6687);
 var $add6689=($3802)+($mul6688);
 var $3807=$fSlow39;
 var $3808=$fSlow40;
 var $fRec3536690=(($this1+524620)|0);
 var $arrayidx6691=(($fRec3536690+8)|0);
 var $3809=HEAPF32[(($arrayidx6691)>>2)];
 var $mul6692=($3808)*($3809);
 var $3810=$fTemp216;
 var $add6693=($mul6692)+($3810);
 var $mul6694=($3807)*($add6693);
 var $sub6695=($add6689)-($mul6694);
 var $fRec3536696=(($this1+524620)|0);
 var $arrayidx6697=(($fRec3536696)|0);
 HEAPF32[(($arrayidx6697)>>2)]=$sub6695;
 var $3811=$fSlow48;
 var $fRec363=(($this1+524612)|0);
 var $arrayidx6698=(($fRec363+4)|0);
 var $3812=HEAPF32[(($arrayidx6698)>>2)];
 var $mul6699=($3811)*($3812);
 var $3813=$fSlow49;
 var $fVec476700=(($this1+524664)|0);
 var $arrayidx6701=(($fVec476700+4)|0);
 var $3814=HEAPF32[(($arrayidx6701)>>2)];
 var $3815=$fTemp214;
 var $add6702=($3814)+($3815);
 var $mul6703=($3813)*($add6702);
 var $add6704=($mul6699)+($mul6703);
 var $fRec3636705=(($this1+524612)|0);
 var $arrayidx6706=(($fRec3636705)|0);
 HEAPF32[(($arrayidx6706)>>2)]=$add6704;
 var $fRec3636707=(($this1+524612)|0);
 var $arrayidx6708=(($fRec3636707)|0);
 var $3816=HEAPF32[(($arrayidx6708)>>2)];
 var $3817=$fSlow46;
 var $3818=$fSlow52;
 var $fRec362=(($this1+524600)|0);
 var $arrayidx6709=(($fRec362+8)|0);
 var $3819=HEAPF32[(($arrayidx6709)>>2)];
 var $mul6710=($3818)*($3819);
 var $3820=$fSlow30;
 var $fRec3626711=(($this1+524600)|0);
 var $arrayidx6712=(($fRec3626711+4)|0);
 var $3821=HEAPF32[(($arrayidx6712)>>2)];
 var $mul6713=($3820)*($3821);
 var $add6714=($mul6710)+($mul6713);
 var $mul6715=($3817)*($add6714);
 var $sub6716=($3816)-($mul6715);
 var $fRec3626717=(($this1+524600)|0);
 var $arrayidx6718=(($fRec3626717)|0);
 HEAPF32[(($arrayidx6718)>>2)]=$sub6716;
 var $fRec3626719=(($this1+524600)|0);
 var $arrayidx6720=(($fRec3626719+8)|0);
 var $3822=HEAPF32[(($arrayidx6720)>>2)];
 var $fRec3626721=(($this1+524600)|0);
 var $arrayidx6722=(($fRec3626721)|0);
 var $3823=HEAPF32[(($arrayidx6722)>>2)];
 var $fRec3626723=(($this1+524600)|0);
 var $arrayidx6724=(($fRec3626723+4)|0);
 var $3824=HEAPF32[(($arrayidx6724)>>2)];
 var $mul6725=($3824)*(2);
 var $add6726=($3823)+($mul6725);
 var $add6727=($3822)+($add6726);
 $fTemp217=$add6727;
 var $3825=$fSlow46;
 var $3826=$fTemp217;
 var $mul6728=($3825)*($3826);
 $fTemp218=$mul6728;
 var $3827=$fTemp218;
 var $fVec48=(($this1+524592)|0);
 var $arrayidx6729=(($fVec48)|0);
 HEAPF32[(($arrayidx6729)>>2)]=$3827;
 var $3828=$fSlow59;
 var $fRec361=(($this1+524584)|0);
 var $arrayidx6730=(($fRec361+4)|0);
 var $3829=HEAPF32[(($arrayidx6730)>>2)];
 var $mul6731=($3828)*($3829);
 var $3830=$fSlow60;
 var $3831=$fSlow62;
 var $fVec486732=(($this1+524592)|0);
 var $arrayidx6733=(($fVec486732+4)|0);
 var $3832=HEAPF32[(($arrayidx6733)>>2)];
 var $mul6734=($3831)*($3832);
 var $3833=$fSlow61;
 var $3834=$fTemp217;
 var $mul6735=($3833)*($3834);
 var $add6736=($mul6734)+($mul6735);
 var $mul6737=($3830)*($add6736);
 var $add6738=($mul6731)+($mul6737);
 var $fRec3616739=(($this1+524584)|0);
 var $arrayidx6740=(($fRec3616739)|0);
 HEAPF32[(($arrayidx6740)>>2)]=$add6738;
 var $fRec3616741=(($this1+524584)|0);
 var $arrayidx6742=(($fRec3616741)|0);
 var $3835=HEAPF32[(($arrayidx6742)>>2)];
 var $3836=$fSlow57;
 var $3837=$fSlow63;
 var $fRec360=(($this1+524572)|0);
 var $arrayidx6743=(($fRec360+8)|0);
 var $3838=HEAPF32[(($arrayidx6743)>>2)];
 var $mul6744=($3837)*($3838);
 var $3839=$fSlow36;
 var $fRec3606745=(($this1+524572)|0);
 var $arrayidx6746=(($fRec3606745+4)|0);
 var $3840=HEAPF32[(($arrayidx6746)>>2)];
 var $mul6747=($3839)*($3840);
 var $add6748=($mul6744)+($mul6747);
 var $mul6749=($3836)*($add6748);
 var $sub6750=($3835)-($mul6749);
 var $fRec3606751=(($this1+524572)|0);
 var $arrayidx6752=(($fRec3606751)|0);
 HEAPF32[(($arrayidx6752)>>2)]=$sub6750;
 var $3841=$fSlow42;
 var $fRec359=(($this1+524560)|0);
 var $arrayidx6753=(($fRec359+4)|0);
 var $3842=HEAPF32[(($arrayidx6753)>>2)];
 var $mul6754=($3841)*($3842);
 $fTemp219=$mul6754;
 var $3843=$fSlow57;
 var $3844=$fSlow35;
 var $fRec3606755=(($this1+524572)|0);
 var $arrayidx6756=(($fRec3606755)|0);
 var $3845=HEAPF32[(($arrayidx6756)>>2)];
 var $mul6757=($3844)*($3845);
 var $3846=$fSlow64;
 var $fRec3606758=(($this1+524572)|0);
 var $arrayidx6759=(($fRec3606758+4)|0);
 var $3847=HEAPF32[(($arrayidx6759)>>2)];
 var $mul6760=($3846)*($3847);
 var $add6761=($mul6757)+($mul6760);
 var $3848=$fSlow35;
 var $fRec3606762=(($this1+524572)|0);
 var $arrayidx6763=(($fRec3606762+8)|0);
 var $3849=HEAPF32[(($arrayidx6763)>>2)];
 var $mul6764=($3848)*($3849);
 var $add6765=($add6761)+($mul6764);
 var $mul6766=($3843)*($add6765);
 var $3850=$fSlow39;
 var $3851=$fSlow40;
 var $fRec3596767=(($this1+524560)|0);
 var $arrayidx6768=(($fRec3596767+8)|0);
 var $3852=HEAPF32[(($arrayidx6768)>>2)];
 var $mul6769=($3851)*($3852);
 var $3853=$fTemp219;
 var $add6770=($mul6769)+($3853);
 var $mul6771=($3850)*($add6770);
 var $sub6772=($mul6766)-($mul6771);
 var $fRec3596773=(($this1+524560)|0);
 var $arrayidx6774=(($fRec3596773)|0);
 HEAPF32[(($arrayidx6774)>>2)]=$sub6772;
 var $3854=$fSlow59;
 var $fRec367=(($this1+524552)|0);
 var $arrayidx6775=(($fRec367+4)|0);
 var $3855=HEAPF32[(($arrayidx6775)>>2)];
 var $mul6776=($3854)*($3855);
 var $3856=$fSlow60;
 var $fVec486777=(($this1+524592)|0);
 var $arrayidx6778=(($fVec486777+4)|0);
 var $3857=HEAPF32[(($arrayidx6778)>>2)];
 var $3858=$fTemp218;
 var $add6779=($3857)+($3858);
 var $mul6780=($3856)*($add6779);
 var $add6781=($mul6776)+($mul6780);
 var $fRec3676782=(($this1+524552)|0);
 var $arrayidx6783=(($fRec3676782)|0);
 HEAPF32[(($arrayidx6783)>>2)]=$add6781;
 var $fRec3676784=(($this1+524552)|0);
 var $arrayidx6785=(($fRec3676784)|0);
 var $3859=HEAPF32[(($arrayidx6785)>>2)];
 var $3860=$fSlow57;
 var $3861=$fSlow63;
 var $fRec366=(($this1+524540)|0);
 var $arrayidx6786=(($fRec366+8)|0);
 var $3862=HEAPF32[(($arrayidx6786)>>2)];
 var $mul6787=($3861)*($3862);
 var $3863=$fSlow36;
 var $fRec3666788=(($this1+524540)|0);
 var $arrayidx6789=(($fRec3666788+4)|0);
 var $3864=HEAPF32[(($arrayidx6789)>>2)];
 var $mul6790=($3863)*($3864);
 var $add6791=($mul6787)+($mul6790);
 var $mul6792=($3860)*($add6791);
 var $sub6793=($3859)-($mul6792);
 var $fRec3666794=(($this1+524540)|0);
 var $arrayidx6795=(($fRec3666794)|0);
 HEAPF32[(($arrayidx6795)>>2)]=$sub6793;
 var $fRec3666796=(($this1+524540)|0);
 var $arrayidx6797=(($fRec3666796+8)|0);
 var $3865=HEAPF32[(($arrayidx6797)>>2)];
 var $fRec3666798=(($this1+524540)|0);
 var $arrayidx6799=(($fRec3666798)|0);
 var $3866=HEAPF32[(($arrayidx6799)>>2)];
 var $fRec3666800=(($this1+524540)|0);
 var $arrayidx6801=(($fRec3666800+4)|0);
 var $3867=HEAPF32[(($arrayidx6801)>>2)];
 var $mul6802=($3867)*(2);
 var $add6803=($3866)+($mul6802);
 var $add6804=($3865)+($add6803);
 $fTemp220=$add6804;
 var $3868=$fSlow57;
 var $3869=$fTemp220;
 var $mul6805=($3868)*($3869);
 $fTemp221=$mul6805;
 var $3870=$fTemp221;
 var $fVec49=(($this1+524532)|0);
 var $arrayidx6806=(($fVec49)|0);
 HEAPF32[(($arrayidx6806)>>2)]=$3870;
 var $3871=$fSlow69;
 var $fRec365=(($this1+524524)|0);
 var $arrayidx6807=(($fRec365+4)|0);
 var $3872=HEAPF32[(($arrayidx6807)>>2)];
 var $mul6808=($3871)*($3872);
 var $3873=$fSlow70;
 var $fVec496809=(($this1+524532)|0);
 var $arrayidx6810=(($fVec496809+4)|0);
 var $3874=HEAPF32[(($arrayidx6810)>>2)];
 var $3875=$fTemp221;
 var $add6811=($3874)+($3875);
 var $mul6812=($3873)*($add6811);
 var $add6813=($mul6808)+($mul6812);
 var $fRec3656814=(($this1+524524)|0);
 var $arrayidx6815=(($fRec3656814)|0);
 HEAPF32[(($arrayidx6815)>>2)]=$add6813;
 var $fRec3656816=(($this1+524524)|0);
 var $arrayidx6817=(($fRec3656816)|0);
 var $3876=HEAPF32[(($arrayidx6817)>>2)];
 var $3877=$fSlow65;
 var $3878=$fSlow71;
 var $fRec364=(($this1+524512)|0);
 var $arrayidx6818=(($fRec364+8)|0);
 var $3879=HEAPF32[(($arrayidx6818)>>2)];
 var $mul6819=($3878)*($3879);
 var $3880=$fSlow42;
 var $fRec3646820=(($this1+524512)|0);
 var $arrayidx6821=(($fRec3646820+4)|0);
 var $3881=HEAPF32[(($arrayidx6821)>>2)];
 var $mul6822=($3880)*($3881);
 var $add6823=($mul6819)+($mul6822);
 var $mul6824=($3877)*($add6823);
 var $sub6825=($3876)-($mul6824);
 var $fRec3646826=(($this1+524512)|0);
 var $arrayidx6827=(($fRec3646826)|0);
 HEAPF32[(($arrayidx6827)>>2)]=$sub6825;
 var $3882=$fSlow69;
 var $fRec369=(($this1+524504)|0);
 var $arrayidx6828=(($fRec369+4)|0);
 var $3883=HEAPF32[(($arrayidx6828)>>2)];
 var $mul6829=($3882)*($3883);
 var $3884=$fSlow70;
 var $3885=$fSlow75;
 var $fVec496830=(($this1+524532)|0);
 var $arrayidx6831=(($fVec496830+4)|0);
 var $3886=HEAPF32[(($arrayidx6831)>>2)];
 var $mul6832=($3885)*($3886);
 var $3887=$fSlow74;
 var $3888=$fTemp220;
 var $mul6833=($3887)*($3888);
 var $add6834=($mul6832)+($mul6833);
 var $mul6835=($3884)*($add6834);
 var $add6836=($mul6829)+($mul6835);
 var $fRec3696837=(($this1+524504)|0);
 var $arrayidx6838=(($fRec3696837)|0);
 HEAPF32[(($arrayidx6838)>>2)]=$add6836;
 var $fRec3696839=(($this1+524504)|0);
 var $arrayidx6840=(($fRec3696839)|0);
 var $3889=HEAPF32[(($arrayidx6840)>>2)];
 var $3890=$fSlow65;
 var $3891=$fSlow71;
 var $fRec368=(($this1+524492)|0);
 var $arrayidx6841=(($fRec368+8)|0);
 var $3892=HEAPF32[(($arrayidx6841)>>2)];
 var $mul6842=($3891)*($3892);
 var $3893=$fSlow42;
 var $fRec3686843=(($this1+524492)|0);
 var $arrayidx6844=(($fRec3686843+4)|0);
 var $3894=HEAPF32[(($arrayidx6844)>>2)];
 var $mul6845=($3893)*($3894);
 var $add6846=($mul6842)+($mul6845);
 var $mul6847=($3890)*($add6846);
 var $sub6848=($3889)-($mul6847);
 var $fRec3686849=(($this1+524492)|0);
 var $arrayidx6850=(($fRec3686849)|0);
 HEAPF32[(($arrayidx6850)>>2)]=$sub6848;
 var $3895=$fSlow177;
 var $fRec3486851=(($this1+524692)|0);
 var $arrayidx6852=(($fRec3486851+8)|0);
 var $3896=HEAPF32[(($arrayidx6852)>>2)];
 var $3897=$fSlow39;
 var $3898=$fTemp212;
 var $3899=$fSlow40;
 var $fRec3486853=(($this1+524692)|0);
 var $arrayidx6854=(($fRec3486853)|0);
 var $3900=HEAPF32[(($arrayidx6854)>>2)];
 var $mul6855=($3899)*($3900);
 var $add6856=($3898)+($mul6855);
 var $mul6857=($3897)*($add6856);
 var $add6858=($3896)+($mul6857);
 var $mul6859=($3895)*($add6858);
 var $3901=$fSlow178;
 var $fRec3536860=(($this1+524620)|0);
 var $arrayidx6861=(($fRec3536860+8)|0);
 var $3902=HEAPF32[(($arrayidx6861)>>2)];
 var $3903=$fSlow39;
 var $3904=$fTemp216;
 var $3905=$fSlow40;
 var $fRec3536862=(($this1+524620)|0);
 var $arrayidx6863=(($fRec3536862)|0);
 var $3906=HEAPF32[(($arrayidx6863)>>2)];
 var $mul6864=($3905)*($3906);
 var $add6865=($3904)+($mul6864);
 var $mul6866=($3903)*($add6865);
 var $add6867=($3902)+($mul6866);
 var $mul6868=($3901)*($add6867);
 var $add6869=($mul6859)+($mul6868);
 var $3907=$fSlow179;
 var $fRec3596870=(($this1+524560)|0);
 var $arrayidx6871=(($fRec3596870+8)|0);
 var $3908=HEAPF32[(($arrayidx6871)>>2)];
 var $3909=$fSlow39;
 var $3910=$fTemp219;
 var $3911=$fSlow40;
 var $fRec3596872=(($this1+524560)|0);
 var $arrayidx6873=(($fRec3596872)|0);
 var $3912=HEAPF32[(($arrayidx6873)>>2)];
 var $mul6874=($3911)*($3912);
 var $add6875=($3910)+($mul6874);
 var $mul6876=($3909)*($add6875);
 var $add6877=($3908)+($mul6876);
 var $mul6878=($3907)*($add6877);
 var $add6879=($add6869)+($mul6878);
 var $3913=$fSlow65;
 var $3914=$fSlow180;
 var $fRec3646880=(($this1+524512)|0);
 var $arrayidx6881=(($fRec3646880+8)|0);
 var $3915=HEAPF32[(($arrayidx6881)>>2)];
 var $fRec3646882=(($this1+524512)|0);
 var $arrayidx6883=(($fRec3646882)|0);
 var $3916=HEAPF32[(($arrayidx6883)>>2)];
 var $fRec3646884=(($this1+524512)|0);
 var $arrayidx6885=(($fRec3646884+4)|0);
 var $3917=HEAPF32[(($arrayidx6885)>>2)];
 var $mul6886=($3917)*(2);
 var $add6887=($3916)+($mul6886);
 var $add6888=($3915)+($add6887);
 var $mul6889=($3914)*($add6888);
 var $3918=$fSlow181;
 var $3919=$fSlow41;
 var $fRec3686890=(($this1+524492)|0);
 var $arrayidx6891=(($fRec3686890)|0);
 var $3920=HEAPF32[(($arrayidx6891)>>2)];
 var $mul6892=($3919)*($3920);
 var $3921=$fSlow76;
 var $fRec3686893=(($this1+524492)|0);
 var $arrayidx6894=(($fRec3686893+4)|0);
 var $3922=HEAPF32[(($arrayidx6894)>>2)];
 var $mul6895=($3921)*($3922);
 var $add6896=($mul6892)+($mul6895);
 var $3923=$fSlow41;
 var $fRec3686897=(($this1+524492)|0);
 var $arrayidx6898=(($fRec3686897+8)|0);
 var $3924=HEAPF32[(($arrayidx6898)>>2)];
 var $mul6899=($3923)*($3924);
 var $add6900=($add6896)+($mul6899);
 var $mul6901=($3918)*($add6900);
 var $add6902=($mul6889)+($mul6901);
 var $mul6903=($3913)*($add6902);
 var $add6904=($add6879)+($mul6903);
 $fTemp222=$add6904;
 var $3925=$fTemp209;
 var $3926=$fTemp222;
 var $add6905=($3925)+($3926);
 $fTemp223=$add6905;
 var $3927=$fTemp196;
 var $3928=$fTemp223;
 var $add6906=($3927)+($3928);
 $fTemp224=$add6906;
 var $3929=$fTemp169;
 var $3930=$fTemp224;
 var $add6907=($3929)+($3930);
 $fTemp225=$add6907;
 var $3931=$fTemp0;
 var $3932=$iTemp1;
 var $conv6908=($3932|0);
 var $3933=$iTemp2;
 var $conv6909=($3933|0);
 var $3934=$fTemp3;
 var $3935=$fSlow6;
 var $3936=$fTemp114;
 var $3937=$fTemp225;
 var $add6910=($3936)+($3937);
 var $mul6911=($3935)*($add6910);
 var $add6912=($3934)+($mul6911);
 var $add6913=($conv6909)+($add6912);
 var $add6914=($conv6908)+($add6913);
 var $add6915=($3931)+($add6914);
 var $IOTA=(($this1+528716)|0);
 var $3938=HEAP32[(($IOTA)>>2)];
 var $and6916=$3938&8191;
 var $fVec50=(($this1+491724)|0);
 var $arrayidx6917=(($fVec50+($and6916<<2))|0);
 HEAPF32[(($arrayidx6917)>>2)]=$add6915;
 var $IOTA6918=(($this1+528716)|0);
 var $3939=HEAP32[(($IOTA6918)>>2)];
 var $3940=$iSlow182;
 var $sub6919=((($3939)-($3940))|0);
 var $and6920=$sub6919&8191;
 var $fVec506921=(($this1+491724)|0);
 var $arrayidx6922=(($fVec506921+($and6920<<2))|0);
 var $3941=HEAPF32[(($arrayidx6922)>>2)];
 var $fRec06923=(($this1+491712)|0);
 var $arrayidx6924=(($fRec06923)|0);
 HEAPF32[(($arrayidx6924)>>2)]=$3941;
 var $3942=$fSlow183;
 var $fVec51=(($this1+491704)|0);
 var $arrayidx6925=(($fVec51)|0);
 HEAPF32[(($arrayidx6925)>>2)]=$3942;
 var $3943=$fSlow183;
 var $fVec516926=(($this1+491704)|0);
 var $arrayidx6927=(($fVec516926+4)|0);
 var $3944=HEAPF32[(($arrayidx6927)>>2)];
 var $sub6928=($3943)-($3944);
 var $cmp6929=$sub6928>0;
 var $conv6930=($cmp6929&1);
 $iTemp226=$conv6930;
 var $3945=$fSlow4;
 var $3946=$i;
 var $3947=$input1;
 var $arrayidx6931=(($3947+($3946<<2))|0);
 var $3948=HEAPF32[(($arrayidx6931)>>2)];
 var $mul6932=($3945)*($3948);
 $fTemp227=$mul6932;
 var $3949=$iTemp1;
 var $conv6933=($3949|0);
 var $3950=$fTemp0;
 var $add6934=($conv6933)+($3950);
 $fTemp228=$add6934;
 var $3951=$iTemp226;
 var $conv6935=($3951|0);
 var $3952=$fTemp227;
 var $3953=$fSlow5;
 var $3954=$fTemp114;
 var $mul6936=((0.25))*($3954);
 var $3955=$fTemp225;
 var $mul6937=((0.25))*($3955);
 var $sub6938=($mul6936)-($mul6937);
 var $mul6939=($3953)*($sub6938);
 var $3956=$fTemp228;
 var $add6940=($mul6939)+($3956);
 var $add6941=($3952)+($add6940);
 var $add6942=($conv6935)+($add6941);
 var $IOTA6943=(($this1+528716)|0);
 var $3957=HEAP32[(($IOTA6943)>>2)];
 var $and6944=$3957&8191;
 var $fVec52=(($this1+458936)|0);
 var $arrayidx6945=(($fVec52+($and6944<<2))|0);
 HEAPF32[(($arrayidx6945)>>2)]=$add6942;
 var $IOTA6946=(($this1+528716)|0);
 var $3958=HEAP32[(($IOTA6946)>>2)];
 var $3959=$iSlow184;
 var $sub6947=((($3958)-($3959))|0);
 var $and6948=$sub6947&8191;
 var $fVec526949=(($this1+458936)|0);
 var $arrayidx6950=(($fVec526949+($and6948<<2))|0);
 var $3960=HEAPF32[(($arrayidx6950)>>2)];
 var $fRec16951=(($this1+458924)|0);
 var $arrayidx6952=(($fRec16951)|0);
 HEAPF32[(($arrayidx6952)>>2)]=$3960;
 var $3961=$iTemp1;
 var $conv6953=($3961|0);
 var $3962=$fTemp3;
 var $3963=$iTemp2;
 var $conv6954=($3963|0);
 var $add6955=($3962)+($conv6954);
 var $add6956=($conv6953)+($add6955);
 var $3964=$fTemp0;
 var $add6957=($add6956)+($3964);
 $fTemp229=$add6957;
 var $3965=$fTemp58;
 var $mul6958=((0.25))*($3965);
 var $3966=$fTemp113;
 var $mul6959=((0.25))*($3966);
 var $sub6960=($mul6958)-($mul6959);
 $fTemp230=$sub6960;
 var $3967=$fTemp169;
 var $mul6961=((0.25))*($3967);
 var $3968=$fTemp224;
 var $mul6962=((0.25))*($3968);
 var $sub6963=($mul6961)-($mul6962);
 $fTemp231=$sub6963;
 var $3969=$fTemp229;
 var $3970=$fSlow5;
 var $3971=$fTemp230;
 var $3972=$fTemp231;
 var $add6964=($3971)+($3972);
 var $mul6965=($3970)*($add6964);
 var $add6966=($3969)+($mul6965);
 var $IOTA6967=(($this1+528716)|0);
 var $3973=HEAP32[(($IOTA6967)>>2)];
 var $and6968=$3973&8191;
 var $fVec53=(($this1+426156)|0);
 var $arrayidx6969=(($fVec53+($and6968<<2))|0);
 HEAPF32[(($arrayidx6969)>>2)]=$add6966;
 var $IOTA6970=(($this1+528716)|0);
 var $3974=HEAP32[(($IOTA6970)>>2)];
 var $3975=$iSlow185;
 var $sub6971=((($3974)-($3975))|0);
 var $and6972=$sub6971&8191;
 var $fVec536973=(($this1+426156)|0);
 var $arrayidx6974=(($fVec536973+($and6972<<2))|0);
 var $3976=HEAPF32[(($arrayidx6974)>>2)];
 var $fRec26975=(($this1+426144)|0);
 var $arrayidx6976=(($fRec26975)|0);
 HEAPF32[(($arrayidx6976)>>2)]=$3976;
 var $3977=$iTemp226;
 var $conv6977=($3977|0);
 var $3978=$fTemp227;
 var $3979=$fTemp228;
 var $add6978=($3978)+($3979);
 var $add6979=($conv6977)+($add6978);
 $fTemp232=$add6979;
 var $3980=$fTemp232;
 var $3981=$fSlow5;
 var $3982=$fTemp230;
 var $3983=$fTemp231;
 var $sub6980=($3982)-($3983);
 var $mul6981=($3981)*($sub6980);
 var $add6982=($3980)+($mul6981);
 var $IOTA6983=(($this1+528716)|0);
 var $3984=HEAP32[(($IOTA6983)>>2)];
 var $and6984=$3984&8191;
 var $fVec54=(($this1+393376)|0);
 var $arrayidx6985=(($fVec54+($and6984<<2))|0);
 HEAPF32[(($arrayidx6985)>>2)]=$add6982;
 var $IOTA6986=(($this1+528716)|0);
 var $3985=HEAP32[(($IOTA6986)>>2)];
 var $3986=$iSlow186;
 var $sub6987=((($3985)-($3986))|0);
 var $and6988=$sub6987&8191;
 var $fVec546989=(($this1+393376)|0);
 var $arrayidx6990=(($fVec546989+($and6988<<2))|0);
 var $3987=HEAPF32[(($arrayidx6990)>>2)];
 var $fRec36991=(($this1+393364)|0);
 var $arrayidx6992=(($fRec36991)|0);
 HEAPF32[(($arrayidx6992)>>2)]=$3987;
 var $3988=$fTemp30;
 var $mul6993=((0.25))*($3988);
 var $3989=$fTemp57;
 var $mul6994=((0.25))*($3989);
 var $sub6995=($mul6993)-($mul6994);
 $fTemp233=$sub6995;
 var $3990=$fTemp85;
 var $mul6996=((0.25))*($3990);
 var $3991=$fTemp112;
 var $mul6997=((0.25))*($3991);
 var $sub6998=($mul6996)-($mul6997);
 $fTemp234=$sub6998;
 var $3992=$fTemp233;
 var $3993=$fTemp234;
 var $add6999=($3992)+($3993);
 $fTemp235=$add6999;
 var $3994=$fTemp141;
 var $mul7000=((0.25))*($3994);
 var $3995=$fTemp168;
 var $mul7001=((0.25))*($3995);
 var $sub7002=($mul7000)-($mul7001);
 $fTemp236=$sub7002;
 var $3996=$fTemp196;
 var $mul7003=((0.25))*($3996);
 var $3997=$fTemp223;
 var $mul7004=((0.25))*($3997);
 var $sub7005=($mul7003)-($mul7004);
 $fTemp237=$sub7005;
 var $3998=$fTemp236;
 var $3999=$fTemp237;
 var $add7006=($3998)+($3999);
 $fTemp238=$add7006;
 var $4000=$fTemp229;
 var $4001=$fSlow5;
 var $4002=$fTemp235;
 var $4003=$fTemp238;
 var $add7007=($4002)+($4003);
 var $mul7008=($4001)*($add7007);
 var $add7009=($4000)+($mul7008);
 var $IOTA7010=(($this1+528716)|0);
 var $4004=HEAP32[(($IOTA7010)>>2)];
 var $and7011=$4004&8191;
 var $fVec55=(($this1+360596)|0);
 var $arrayidx7012=(($fVec55+($and7011<<2))|0);
 HEAPF32[(($arrayidx7012)>>2)]=$add7009;
 var $IOTA7013=(($this1+528716)|0);
 var $4005=HEAP32[(($IOTA7013)>>2)];
 var $4006=$iSlow187;
 var $sub7014=((($4005)-($4006))|0);
 var $and7015=$sub7014&8191;
 var $fVec557016=(($this1+360596)|0);
 var $arrayidx7017=(($fVec557016+($and7015<<2))|0);
 var $4007=HEAPF32[(($arrayidx7017)>>2)];
 var $fRec47018=(($this1+360584)|0);
 var $arrayidx7019=(($fRec47018)|0);
 HEAPF32[(($arrayidx7019)>>2)]=$4007;
 var $4008=$fTemp232;
 var $4009=$fSlow5;
 var $4010=$fTemp235;
 var $4011=$fTemp238;
 var $sub7020=($4010)-($4011);
 var $mul7021=($4009)*($sub7020);
 var $add7022=($4008)+($mul7021);
 var $IOTA7023=(($this1+528716)|0);
 var $4012=HEAP32[(($IOTA7023)>>2)];
 var $and7024=$4012&8191;
 var $fVec56=(($this1+327816)|0);
 var $arrayidx7025=(($fVec56+($and7024<<2))|0);
 HEAPF32[(($arrayidx7025)>>2)]=$add7022;
 var $IOTA7026=(($this1+528716)|0);
 var $4013=HEAP32[(($IOTA7026)>>2)];
 var $4014=$iSlow188;
 var $sub7027=((($4013)-($4014))|0);
 var $and7028=$sub7027&8191;
 var $fVec567029=(($this1+327816)|0);
 var $arrayidx7030=(($fVec567029+($and7028<<2))|0);
 var $4015=HEAPF32[(($arrayidx7030)>>2)];
 var $fRec57031=(($this1+327804)|0);
 var $arrayidx7032=(($fRec57031)|0);
 HEAPF32[(($arrayidx7032)>>2)]=$4015;
 var $4016=$fTemp233;
 var $4017=$fTemp234;
 var $sub7033=($4016)-($4017);
 $fTemp239=$sub7033;
 var $4018=$fTemp236;
 var $4019=$fTemp237;
 var $sub7034=($4018)-($4019);
 $fTemp240=$sub7034;
 var $4020=$fTemp229;
 var $4021=$fSlow5;
 var $4022=$fTemp239;
 var $4023=$fTemp240;
 var $add7035=($4022)+($4023);
 var $mul7036=($4021)*($add7035);
 var $add7037=($4020)+($mul7036);
 var $IOTA7038=(($this1+528716)|0);
 var $4024=HEAP32[(($IOTA7038)>>2)];
 var $and7039=$4024&8191;
 var $fVec57=(($this1+295036)|0);
 var $arrayidx7040=(($fVec57+($and7039<<2))|0);
 HEAPF32[(($arrayidx7040)>>2)]=$add7037;
 var $IOTA7041=(($this1+528716)|0);
 var $4025=HEAP32[(($IOTA7041)>>2)];
 var $4026=$iSlow189;
 var $sub7042=((($4025)-($4026))|0);
 var $and7043=$sub7042&8191;
 var $fVec577044=(($this1+295036)|0);
 var $arrayidx7045=(($fVec577044+($and7043<<2))|0);
 var $4027=HEAPF32[(($arrayidx7045)>>2)];
 var $fRec67046=(($this1+295024)|0);
 var $arrayidx7047=(($fRec67046)|0);
 HEAPF32[(($arrayidx7047)>>2)]=$4027;
 var $4028=$fTemp232;
 var $4029=$fSlow5;
 var $4030=$fTemp239;
 var $4031=$fTemp240;
 var $sub7048=($4030)-($4031);
 var $mul7049=($4029)*($sub7048);
 var $add7050=($4028)+($mul7049);
 var $IOTA7051=(($this1+528716)|0);
 var $4032=HEAP32[(($IOTA7051)>>2)];
 var $and7052=$4032&8191;
 var $fVec58=(($this1+262256)|0);
 var $arrayidx7053=(($fVec58+($and7052<<2))|0);
 HEAPF32[(($arrayidx7053)>>2)]=$add7050;
 var $IOTA7054=(($this1+528716)|0);
 var $4033=HEAP32[(($IOTA7054)>>2)];
 var $4034=$iSlow190;
 var $sub7055=((($4033)-($4034))|0);
 var $and7056=$sub7055&8191;
 var $fVec587057=(($this1+262256)|0);
 var $arrayidx7058=(($fVec587057+($and7056<<2))|0);
 var $4035=HEAPF32[(($arrayidx7058)>>2)];
 var $fRec77059=(($this1+262244)|0);
 var $arrayidx7060=(($fRec77059)|0);
 HEAPF32[(($arrayidx7060)>>2)]=$4035;
 var $4036=$fTemp16;
 var $mul7061=((0.25))*($4036);
 var $4037=$fTemp29;
 var $mul7062=((0.25))*($4037);
 var $sub7063=($mul7061)-($mul7062);
 $fTemp241=$sub7063;
 var $4038=$fTemp43;
 var $mul7064=((0.25))*($4038);
 var $4039=$fTemp56;
 var $mul7065=((0.25))*($4039);
 var $sub7066=($mul7064)-($mul7065);
 $fTemp242=$sub7066;
 var $4040=$fTemp241;
 var $4041=$fTemp242;
 var $add7067=($4040)+($4041);
 $fTemp243=$add7067;
 var $4042=$fTemp71;
 var $mul7068=((0.25))*($4042);
 var $4043=$fTemp84;
 var $mul7069=((0.25))*($4043);
 var $sub7070=($mul7068)-($mul7069);
 $fTemp244=$sub7070;
 var $4044=$fTemp98;
 var $mul7071=((0.25))*($4044);
 var $4045=$fTemp111;
 var $mul7072=((0.25))*($4045);
 var $sub7073=($mul7071)-($mul7072);
 $fTemp245=$sub7073;
 var $4046=$fTemp244;
 var $4047=$fTemp245;
 var $add7074=($4046)+($4047);
 $fTemp246=$add7074;
 var $4048=$fTemp243;
 var $4049=$fTemp246;
 var $add7075=($4048)+($4049);
 $fTemp247=$add7075;
 var $4050=$fTemp127;
 var $mul7076=((0.25))*($4050);
 var $4051=$fTemp140;
 var $mul7077=((0.25))*($4051);
 var $sub7078=($mul7076)-($mul7077);
 $fTemp248=$sub7078;
 var $4052=$fTemp154;
 var $mul7079=((0.25))*($4052);
 var $4053=$fTemp167;
 var $mul7080=((0.25))*($4053);
 var $sub7081=($mul7079)-($mul7080);
 $fTemp249=$sub7081;
 var $4054=$fTemp248;
 var $4055=$fTemp249;
 var $add7082=($4054)+($4055);
 $fTemp250=$add7082;
 var $4056=$fTemp182;
 var $mul7083=((0.25))*($4056);
 var $4057=$fTemp195;
 var $mul7084=((0.25))*($4057);
 var $sub7085=($mul7083)-($mul7084);
 $fTemp251=$sub7085;
 var $4058=$fTemp209;
 var $mul7086=((0.25))*($4058);
 var $4059=$fTemp222;
 var $mul7087=((0.25))*($4059);
 var $sub7088=($mul7086)-($mul7087);
 $fTemp252=$sub7088;
 var $4060=$fTemp251;
 var $4061=$fTemp252;
 var $add7089=($4060)+($4061);
 $fTemp253=$add7089;
 var $4062=$fTemp250;
 var $4063=$fTemp253;
 var $add7090=($4062)+($4063);
 $fTemp254=$add7090;
 var $4064=$fTemp229;
 var $4065=$fSlow5;
 var $4066=$fTemp247;
 var $4067=$fTemp254;
 var $add7091=($4066)+($4067);
 var $mul7092=($4065)*($add7091);
 var $add7093=($4064)+($mul7092);
 var $IOTA7094=(($this1+528716)|0);
 var $4068=HEAP32[(($IOTA7094)>>2)];
 var $and7095=$4068&8191;
 var $fVec59=(($this1+229476)|0);
 var $arrayidx7096=(($fVec59+($and7095<<2))|0);
 HEAPF32[(($arrayidx7096)>>2)]=$add7093;
 var $IOTA7097=(($this1+528716)|0);
 var $4069=HEAP32[(($IOTA7097)>>2)];
 var $4070=$iSlow191;
 var $sub7098=((($4069)-($4070))|0);
 var $and7099=$sub7098&8191;
 var $fVec597100=(($this1+229476)|0);
 var $arrayidx7101=(($fVec597100+($and7099<<2))|0);
 var $4071=HEAPF32[(($arrayidx7101)>>2)];
 var $fRec87102=(($this1+229464)|0);
 var $arrayidx7103=(($fRec87102)|0);
 HEAPF32[(($arrayidx7103)>>2)]=$4071;
 var $4072=$fTemp232;
 var $4073=$fSlow5;
 var $4074=$fTemp247;
 var $4075=$fTemp254;
 var $sub7104=($4074)-($4075);
 var $mul7105=($4073)*($sub7104);
 var $add7106=($4072)+($mul7105);
 var $IOTA7107=(($this1+528716)|0);
 var $4076=HEAP32[(($IOTA7107)>>2)];
 var $and7108=$4076&8191;
 var $fVec60=(($this1+196696)|0);
 var $arrayidx7109=(($fVec60+($and7108<<2))|0);
 HEAPF32[(($arrayidx7109)>>2)]=$add7106;
 var $IOTA7110=(($this1+528716)|0);
 var $4077=HEAP32[(($IOTA7110)>>2)];
 var $4078=$iSlow192;
 var $sub7111=((($4077)-($4078))|0);
 var $and7112=$sub7111&8191;
 var $fVec607113=(($this1+196696)|0);
 var $arrayidx7114=(($fVec607113+($and7112<<2))|0);
 var $4079=HEAPF32[(($arrayidx7114)>>2)];
 var $fRec97115=(($this1+196684)|0);
 var $arrayidx7116=(($fRec97115)|0);
 HEAPF32[(($arrayidx7116)>>2)]=$4079;
 var $4080=$fTemp243;
 var $4081=$fTemp246;
 var $sub7117=($4080)-($4081);
 $fTemp255=$sub7117;
 var $4082=$fTemp250;
 var $4083=$fTemp253;
 var $sub7118=($4082)-($4083);
 $fTemp256=$sub7118;
 var $4084=$fTemp229;
 var $4085=$fSlow5;
 var $4086=$fTemp255;
 var $4087=$fTemp256;
 var $add7119=($4086)+($4087);
 var $mul7120=($4085)*($add7119);
 var $add7121=($4084)+($mul7120);
 var $IOTA7122=(($this1+528716)|0);
 var $4088=HEAP32[(($IOTA7122)>>2)];
 var $and7123=$4088&8191;
 var $fVec61=(($this1+163916)|0);
 var $arrayidx7124=(($fVec61+($and7123<<2))|0);
 HEAPF32[(($arrayidx7124)>>2)]=$add7121;
 var $IOTA7125=(($this1+528716)|0);
 var $4089=HEAP32[(($IOTA7125)>>2)];
 var $4090=$iSlow193;
 var $sub7126=((($4089)-($4090))|0);
 var $and7127=$sub7126&8191;
 var $fVec617128=(($this1+163916)|0);
 var $arrayidx7129=(($fVec617128+($and7127<<2))|0);
 var $4091=HEAPF32[(($arrayidx7129)>>2)];
 var $fRec107130=(($this1+163904)|0);
 var $arrayidx7131=(($fRec107130)|0);
 HEAPF32[(($arrayidx7131)>>2)]=$4091;
 var $4092=$fTemp232;
 var $4093=$fSlow5;
 var $4094=$fTemp255;
 var $4095=$fTemp256;
 var $sub7132=($4094)-($4095);
 var $mul7133=($4093)*($sub7132);
 var $add7134=($4092)+($mul7133);
 var $IOTA7135=(($this1+528716)|0);
 var $4096=HEAP32[(($IOTA7135)>>2)];
 var $and7136=$4096&8191;
 var $fVec62=(($this1+131136)|0);
 var $arrayidx7137=(($fVec62+($and7136<<2))|0);
 HEAPF32[(($arrayidx7137)>>2)]=$add7134;
 var $IOTA7138=(($this1+528716)|0);
 var $4097=HEAP32[(($IOTA7138)>>2)];
 var $4098=$iSlow194;
 var $sub7139=((($4097)-($4098))|0);
 var $and7140=$sub7139&8191;
 var $fVec627141=(($this1+131136)|0);
 var $arrayidx7142=(($fVec627141+($and7140<<2))|0);
 var $4099=HEAPF32[(($arrayidx7142)>>2)];
 var $fRec117143=(($this1+131124)|0);
 var $arrayidx7144=(($fRec117143)|0);
 HEAPF32[(($arrayidx7144)>>2)]=$4099;
 var $4100=$fTemp241;
 var $4101=$fTemp242;
 var $sub7145=($4100)-($4101);
 $fTemp257=$sub7145;
 var $4102=$fTemp244;
 var $4103=$fTemp245;
 var $sub7146=($4102)-($4103);
 $fTemp258=$sub7146;
 var $4104=$fTemp257;
 var $4105=$fTemp258;
 var $add7147=($4104)+($4105);
 $fTemp259=$add7147;
 var $4106=$fTemp248;
 var $4107=$fTemp249;
 var $sub7148=($4106)-($4107);
 $fTemp260=$sub7148;
 var $4108=$fTemp251;
 var $4109=$fTemp252;
 var $sub7149=($4108)-($4109);
 $fTemp261=$sub7149;
 var $4110=$fTemp260;
 var $4111=$fTemp261;
 var $add7150=($4110)+($4111);
 $fTemp262=$add7150;
 var $4112=$fTemp229;
 var $4113=$fSlow5;
 var $4114=$fTemp259;
 var $4115=$fTemp262;
 var $add7151=($4114)+($4115);
 var $mul7152=($4113)*($add7151);
 var $add7153=($4112)+($mul7152);
 var $IOTA7154=(($this1+528716)|0);
 var $4116=HEAP32[(($IOTA7154)>>2)];
 var $and7155=$4116&8191;
 var $fVec63=(($this1+98356)|0);
 var $arrayidx7156=(($fVec63+($and7155<<2))|0);
 HEAPF32[(($arrayidx7156)>>2)]=$add7153;
 var $IOTA7157=(($this1+528716)|0);
 var $4117=HEAP32[(($IOTA7157)>>2)];
 var $4118=$iSlow195;
 var $sub7158=((($4117)-($4118))|0);
 var $and7159=$sub7158&8191;
 var $fVec637160=(($this1+98356)|0);
 var $arrayidx7161=(($fVec637160+($and7159<<2))|0);
 var $4119=HEAPF32[(($arrayidx7161)>>2)];
 var $fRec127162=(($this1+98344)|0);
 var $arrayidx7163=(($fRec127162)|0);
 HEAPF32[(($arrayidx7163)>>2)]=$4119;
 var $4120=$fTemp232;
 var $4121=$fSlow5;
 var $4122=$fTemp259;
 var $4123=$fTemp262;
 var $sub7164=($4122)-($4123);
 var $mul7165=($4121)*($sub7164);
 var $add7166=($4120)+($mul7165);
 var $IOTA7167=(($this1+528716)|0);
 var $4124=HEAP32[(($IOTA7167)>>2)];
 var $and7168=$4124&8191;
 var $fVec64=(($this1+65576)|0);
 var $arrayidx7169=(($fVec64+($and7168<<2))|0);
 HEAPF32[(($arrayidx7169)>>2)]=$add7166;
 var $IOTA7170=(($this1+528716)|0);
 var $4125=HEAP32[(($IOTA7170)>>2)];
 var $4126=$iSlow196;
 var $sub7171=((($4125)-($4126))|0);
 var $and7172=$sub7171&8191;
 var $fVec647173=(($this1+65576)|0);
 var $arrayidx7174=(($fVec647173+($and7172<<2))|0);
 var $4127=HEAPF32[(($arrayidx7174)>>2)];
 var $fRec137175=(($this1+65564)|0);
 var $arrayidx7176=(($fRec137175)|0);
 HEAPF32[(($arrayidx7176)>>2)]=$4127;
 var $4128=$fTemp257;
 var $4129=$fTemp258;
 var $sub7177=($4128)-($4129);
 $fTemp263=$sub7177;
 var $4130=$fTemp260;
 var $4131=$fTemp261;
 var $sub7178=($4130)-($4131);
 $fTemp264=$sub7178;
 var $4132=$fTemp229;
 var $4133=$fSlow5;
 var $4134=$fTemp263;
 var $4135=$fTemp264;
 var $add7179=($4134)+($4135);
 var $mul7180=($4133)*($add7179);
 var $add7181=($4132)+($mul7180);
 var $IOTA7182=(($this1+528716)|0);
 var $4136=HEAP32[(($IOTA7182)>>2)];
 var $and7183=$4136&8191;
 var $fVec65=(($this1+32796)|0);
 var $arrayidx7184=(($fVec65+($and7183<<2))|0);
 HEAPF32[(($arrayidx7184)>>2)]=$add7181;
 var $IOTA7185=(($this1+528716)|0);
 var $4137=HEAP32[(($IOTA7185)>>2)];
 var $4138=$iSlow197;
 var $sub7186=((($4137)-($4138))|0);
 var $and7187=$sub7186&8191;
 var $fVec657188=(($this1+32796)|0);
 var $arrayidx7189=(($fVec657188+($and7187<<2))|0);
 var $4139=HEAPF32[(($arrayidx7189)>>2)];
 var $fRec147190=(($this1+32784)|0);
 var $arrayidx7191=(($fRec147190)|0);
 HEAPF32[(($arrayidx7191)>>2)]=$4139;
 var $4140=$fTemp232;
 var $4141=$fSlow5;
 var $4142=$fTemp263;
 var $4143=$fTemp264;
 var $sub7192=($4142)-($4143);
 var $mul7193=($4141)*($sub7192);
 var $add7194=($4140)+($mul7193);
 var $IOTA7195=(($this1+528716)|0);
 var $4144=HEAP32[(($IOTA7195)>>2)];
 var $and7196=$4144&8191;
 var $fVec66=(($this1+16)|0);
 var $arrayidx7197=(($fVec66+($and7196<<2))|0);
 HEAPF32[(($arrayidx7197)>>2)]=$add7194;
 var $IOTA7198=(($this1+528716)|0);
 var $4145=HEAP32[(($IOTA7198)>>2)];
 var $4146=$iSlow198;
 var $sub7199=((($4145)-($4146))|0);
 var $and7200=$sub7199&8191;
 var $fVec667201=(($this1+16)|0);
 var $arrayidx7202=(($fVec667201+($and7200<<2))|0);
 var $4147=HEAPF32[(($arrayidx7202)>>2)];
 var $fRec157203=(($this1+4)|0);
 var $arrayidx7204=(($fRec157203)|0);
 HEAPF32[(($arrayidx7204)>>2)]=$4147;
 var $4148=$fSlow0;
 var $fRec07205=(($this1+491712)|0);
 var $arrayidx7206=(($fRec07205)|0);
 var $4149=HEAPF32[(($arrayidx7206)>>2)];
 var $fRec27207=(($this1+426144)|0);
 var $arrayidx7208=(($fRec27207)|0);
 var $4150=HEAPF32[(($arrayidx7208)>>2)];
 var $add7209=($4149)+($4150);
 var $fRec47210=(($this1+360584)|0);
 var $arrayidx7211=(($fRec47210)|0);
 var $4151=HEAPF32[(($arrayidx7211)>>2)];
 var $add7212=($add7209)+($4151);
 var $fRec67213=(($this1+295024)|0);
 var $arrayidx7214=(($fRec67213)|0);
 var $4152=HEAPF32[(($arrayidx7214)>>2)];
 var $add7215=($add7212)+($4152);
 var $fRec87216=(($this1+229464)|0);
 var $arrayidx7217=(($fRec87216)|0);
 var $4153=HEAPF32[(($arrayidx7217)>>2)];
 var $add7218=($add7215)+($4153);
 var $fRec107219=(($this1+163904)|0);
 var $arrayidx7220=(($fRec107219)|0);
 var $4154=HEAPF32[(($arrayidx7220)>>2)];
 var $add7221=($add7218)+($4154);
 var $fRec127222=(($this1+98344)|0);
 var $arrayidx7223=(($fRec127222)|0);
 var $4155=HEAPF32[(($arrayidx7223)>>2)];
 var $add7224=($add7221)+($4155);
 var $fRec147225=(($this1+32784)|0);
 var $arrayidx7226=(($fRec147225)|0);
 var $4156=HEAPF32[(($arrayidx7226)>>2)];
 var $add7227=($add7224)+($4156);
 var $mul7228=($4148)*($add7227);
 var $4157=$i;
 var $4158=$output0;
 var $arrayidx7229=(($4158+($4157<<2))|0);
 HEAPF32[(($arrayidx7229)>>2)]=$mul7228;
 var $4159=$fSlow0;
 var $fRec17230=(($this1+458924)|0);
 var $arrayidx7231=(($fRec17230)|0);
 var $4160=HEAPF32[(($arrayidx7231)>>2)];
 var $fRec37232=(($this1+393364)|0);
 var $arrayidx7233=(($fRec37232)|0);
 var $4161=HEAPF32[(($arrayidx7233)>>2)];
 var $add7234=($4160)+($4161);
 var $fRec57235=(($this1+327804)|0);
 var $arrayidx7236=(($fRec57235)|0);
 var $4162=HEAPF32[(($arrayidx7236)>>2)];
 var $add7237=($add7234)+($4162);
 var $fRec77238=(($this1+262244)|0);
 var $arrayidx7239=(($fRec77238)|0);
 var $4163=HEAPF32[(($arrayidx7239)>>2)];
 var $add7240=($add7237)+($4163);
 var $fRec97241=(($this1+196684)|0);
 var $arrayidx7242=(($fRec97241)|0);
 var $4164=HEAPF32[(($arrayidx7242)>>2)];
 var $add7243=($add7240)+($4164);
 var $fRec117244=(($this1+131124)|0);
 var $arrayidx7245=(($fRec117244)|0);
 var $4165=HEAPF32[(($arrayidx7245)>>2)];
 var $add7246=($add7243)+($4165);
 var $fRec137247=(($this1+65564)|0);
 var $arrayidx7248=(($fRec137247)|0);
 var $4166=HEAPF32[(($arrayidx7248)>>2)];
 var $add7249=($add7246)+($4166);
 var $fRec157250=(($this1+4)|0);
 var $arrayidx7251=(($fRec157250)|0);
 var $4167=HEAPF32[(($arrayidx7251)>>2)];
 var $add7252=($add7249)+($4167);
 var $mul7253=($4159)*($add7252);
 var $4168=$i;
 var $4169=$output1;
 var $arrayidx7254=(($4169+($4168<<2))|0);
 HEAPF32[(($arrayidx7254)>>2)]=$mul7253;
 var $iRec177255=(($this1+528620)|0);
 var $arrayidx7256=(($iRec177255)|0);
 var $4170=HEAP32[(($arrayidx7256)>>2)];
 var $iRec177257=(($this1+528620)|0);
 var $arrayidx7258=(($iRec177257+4)|0);
 HEAP32[(($arrayidx7258)>>2)]=$4170;
 $j=3;
 label=4;break;
 case 4: 
 var $4171=$j;
 var $cmp7260=($4171|0)>0;
 if($cmp7260){label=5;break;}else{label=7;break;}
 case 5: 
 var $4172=$j;
 var $sub7262=((($4172)-(1))|0);
 var $fRec167263=(($this1+528604)|0);
 var $arrayidx7264=(($fRec167263+($sub7262<<2))|0);
 var $4173=HEAPF32[(($arrayidx7264)>>2)];
 var $4174=$j;
 var $fRec167265=(($this1+528604)|0);
 var $arrayidx7266=(($fRec167265+($4174<<2))|0);
 HEAPF32[(($arrayidx7266)>>2)]=$4173;
 label=6;break;
 case 6: 
 var $4175=$j;
 var $sub7267=((($4175)-(1))|0);
 $j=$sub7267;
 label=4;break;
 case 7: 
 var $fVec07268=(($this1+528596)|0);
 var $arrayidx7269=(($fVec07268)|0);
 var $4176=HEAPF32[(($arrayidx7269)>>2)];
 var $fVec07270=(($this1+528596)|0);
 var $arrayidx7271=(($fVec07270+4)|0);
 HEAPF32[(($arrayidx7271)>>2)]=$4176;
 var $fVec17272=(($this1+528588)|0);
 var $arrayidx7273=(($fVec17272)|0);
 var $4177=HEAPF32[(($arrayidx7273)>>2)];
 var $fVec17274=(($this1+528588)|0);
 var $arrayidx7275=(($fVec17274+4)|0);
 HEAPF32[(($arrayidx7275)>>2)]=$4177;
 var $fRec227276=(($this1+528580)|0);
 var $arrayidx7277=(($fRec227276)|0);
 var $4178=HEAPF32[(($arrayidx7277)>>2)];
 var $fRec227278=(($this1+528580)|0);
 var $arrayidx7279=(($fRec227278+4)|0);
 HEAPF32[(($arrayidx7279)>>2)]=$4178;
 var $fRec217280=(($this1+528568)|0);
 var $arrayidx7281=(($fRec217280+4)|0);
 var $4179=HEAPF32[(($arrayidx7281)>>2)];
 var $fRec217282=(($this1+528568)|0);
 var $arrayidx7283=(($fRec217282+8)|0);
 HEAPF32[(($arrayidx7283)>>2)]=$4179;
 var $fRec217284=(($this1+528568)|0);
 var $arrayidx7285=(($fRec217284)|0);
 var $4180=HEAPF32[(($arrayidx7285)>>2)];
 var $fRec217286=(($this1+528568)|0);
 var $arrayidx7287=(($fRec217286+4)|0);
 HEAPF32[(($arrayidx7287)>>2)]=$4180;
 var $fRec207288=(($this1+528556)|0);
 var $arrayidx7289=(($fRec207288+4)|0);
 var $4181=HEAPF32[(($arrayidx7289)>>2)];
 var $fRec207290=(($this1+528556)|0);
 var $arrayidx7291=(($fRec207290+8)|0);
 HEAPF32[(($arrayidx7291)>>2)]=$4181;
 var $fRec207292=(($this1+528556)|0);
 var $arrayidx7293=(($fRec207292)|0);
 var $4182=HEAPF32[(($arrayidx7293)>>2)];
 var $fRec207294=(($this1+528556)|0);
 var $arrayidx7295=(($fRec207294+4)|0);
 HEAPF32[(($arrayidx7295)>>2)]=$4182;
 var $fRec197296=(($this1+528544)|0);
 var $arrayidx7297=(($fRec197296+4)|0);
 var $4183=HEAPF32[(($arrayidx7297)>>2)];
 var $fRec197298=(($this1+528544)|0);
 var $arrayidx7299=(($fRec197298+8)|0);
 HEAPF32[(($arrayidx7299)>>2)]=$4183;
 var $fRec197300=(($this1+528544)|0);
 var $arrayidx7301=(($fRec197300)|0);
 var $4184=HEAPF32[(($arrayidx7301)>>2)];
 var $fRec197302=(($this1+528544)|0);
 var $arrayidx7303=(($fRec197302+4)|0);
 HEAPF32[(($arrayidx7303)>>2)]=$4184;
 var $fRec187304=(($this1+528532)|0);
 var $arrayidx7305=(($fRec187304+4)|0);
 var $4185=HEAPF32[(($arrayidx7305)>>2)];
 var $fRec187306=(($this1+528532)|0);
 var $arrayidx7307=(($fRec187306+8)|0);
 HEAPF32[(($arrayidx7307)>>2)]=$4185;
 var $fRec187308=(($this1+528532)|0);
 var $arrayidx7309=(($fRec187308)|0);
 var $4186=HEAPF32[(($arrayidx7309)>>2)];
 var $fRec187310=(($this1+528532)|0);
 var $arrayidx7311=(($fRec187310+4)|0);
 HEAPF32[(($arrayidx7311)>>2)]=$4186;
 var $fRec287312=(($this1+528524)|0);
 var $arrayidx7313=(($fRec287312)|0);
 var $4187=HEAPF32[(($arrayidx7313)>>2)];
 var $fRec287314=(($this1+528524)|0);
 var $arrayidx7315=(($fRec287314+4)|0);
 HEAPF32[(($arrayidx7315)>>2)]=$4187;
 var $fRec277316=(($this1+528512)|0);
 var $arrayidx7317=(($fRec277316+4)|0);
 var $4188=HEAPF32[(($arrayidx7317)>>2)];
 var $fRec277318=(($this1+528512)|0);
 var $arrayidx7319=(($fRec277318+8)|0);
 HEAPF32[(($arrayidx7319)>>2)]=$4188;
 var $fRec277320=(($this1+528512)|0);
 var $arrayidx7321=(($fRec277320)|0);
 var $4189=HEAPF32[(($arrayidx7321)>>2)];
 var $fRec277322=(($this1+528512)|0);
 var $arrayidx7323=(($fRec277322+4)|0);
 HEAPF32[(($arrayidx7323)>>2)]=$4189;
 var $fVec27324=(($this1+528504)|0);
 var $arrayidx7325=(($fVec27324)|0);
 var $4190=HEAPF32[(($arrayidx7325)>>2)];
 var $fVec27326=(($this1+528504)|0);
 var $arrayidx7327=(($fVec27326+4)|0);
 HEAPF32[(($arrayidx7327)>>2)]=$4190;
 var $fRec267328=(($this1+528496)|0);
 var $arrayidx7329=(($fRec267328)|0);
 var $4191=HEAPF32[(($arrayidx7329)>>2)];
 var $fRec267330=(($this1+528496)|0);
 var $arrayidx7331=(($fRec267330+4)|0);
 HEAPF32[(($arrayidx7331)>>2)]=$4191;
 var $fRec257332=(($this1+528484)|0);
 var $arrayidx7333=(($fRec257332+4)|0);
 var $4192=HEAPF32[(($arrayidx7333)>>2)];
 var $fRec257334=(($this1+528484)|0);
 var $arrayidx7335=(($fRec257334+8)|0);
 HEAPF32[(($arrayidx7335)>>2)]=$4192;
 var $fRec257336=(($this1+528484)|0);
 var $arrayidx7337=(($fRec257336)|0);
 var $4193=HEAPF32[(($arrayidx7337)>>2)];
 var $fRec257338=(($this1+528484)|0);
 var $arrayidx7339=(($fRec257338+4)|0);
 HEAPF32[(($arrayidx7339)>>2)]=$4193;
 var $fRec247340=(($this1+528472)|0);
 var $arrayidx7341=(($fRec247340+4)|0);
 var $4194=HEAPF32[(($arrayidx7341)>>2)];
 var $fRec247342=(($this1+528472)|0);
 var $arrayidx7343=(($fRec247342+8)|0);
 HEAPF32[(($arrayidx7343)>>2)]=$4194;
 var $fRec247344=(($this1+528472)|0);
 var $arrayidx7345=(($fRec247344)|0);
 var $4195=HEAPF32[(($arrayidx7345)>>2)];
 var $fRec247346=(($this1+528472)|0);
 var $arrayidx7347=(($fRec247346+4)|0);
 HEAPF32[(($arrayidx7347)>>2)]=$4195;
 var $fRec237348=(($this1+528460)|0);
 var $arrayidx7349=(($fRec237348+4)|0);
 var $4196=HEAPF32[(($arrayidx7349)>>2)];
 var $fRec237350=(($this1+528460)|0);
 var $arrayidx7351=(($fRec237350+8)|0);
 HEAPF32[(($arrayidx7351)>>2)]=$4196;
 var $fRec237352=(($this1+528460)|0);
 var $arrayidx7353=(($fRec237352)|0);
 var $4197=HEAPF32[(($arrayidx7353)>>2)];
 var $fRec237354=(($this1+528460)|0);
 var $arrayidx7355=(($fRec237354+4)|0);
 HEAPF32[(($arrayidx7355)>>2)]=$4197;
 var $fRec337356=(($this1+528452)|0);
 var $arrayidx7357=(($fRec337356)|0);
 var $4198=HEAPF32[(($arrayidx7357)>>2)];
 var $fRec337358=(($this1+528452)|0);
 var $arrayidx7359=(($fRec337358+4)|0);
 HEAPF32[(($arrayidx7359)>>2)]=$4198;
 var $fRec327360=(($this1+528440)|0);
 var $arrayidx7361=(($fRec327360+4)|0);
 var $4199=HEAPF32[(($arrayidx7361)>>2)];
 var $fRec327362=(($this1+528440)|0);
 var $arrayidx7363=(($fRec327362+8)|0);
 HEAPF32[(($arrayidx7363)>>2)]=$4199;
 var $fRec327364=(($this1+528440)|0);
 var $arrayidx7365=(($fRec327364)|0);
 var $4200=HEAPF32[(($arrayidx7365)>>2)];
 var $fRec327366=(($this1+528440)|0);
 var $arrayidx7367=(($fRec327366+4)|0);
 HEAPF32[(($arrayidx7367)>>2)]=$4200;
 var $fVec37368=(($this1+528432)|0);
 var $arrayidx7369=(($fVec37368)|0);
 var $4201=HEAPF32[(($arrayidx7369)>>2)];
 var $fVec37370=(($this1+528432)|0);
 var $arrayidx7371=(($fVec37370+4)|0);
 HEAPF32[(($arrayidx7371)>>2)]=$4201;
 var $fRec317372=(($this1+528424)|0);
 var $arrayidx7373=(($fRec317372)|0);
 var $4202=HEAPF32[(($arrayidx7373)>>2)];
 var $fRec317374=(($this1+528424)|0);
 var $arrayidx7375=(($fRec317374+4)|0);
 HEAPF32[(($arrayidx7375)>>2)]=$4202;
 var $fRec307376=(($this1+528412)|0);
 var $arrayidx7377=(($fRec307376+4)|0);
 var $4203=HEAPF32[(($arrayidx7377)>>2)];
 var $fRec307378=(($this1+528412)|0);
 var $arrayidx7379=(($fRec307378+8)|0);
 HEAPF32[(($arrayidx7379)>>2)]=$4203;
 var $fRec307380=(($this1+528412)|0);
 var $arrayidx7381=(($fRec307380)|0);
 var $4204=HEAPF32[(($arrayidx7381)>>2)];
 var $fRec307382=(($this1+528412)|0);
 var $arrayidx7383=(($fRec307382+4)|0);
 HEAPF32[(($arrayidx7383)>>2)]=$4204;
 var $fRec297384=(($this1+528400)|0);
 var $arrayidx7385=(($fRec297384+4)|0);
 var $4205=HEAPF32[(($arrayidx7385)>>2)];
 var $fRec297386=(($this1+528400)|0);
 var $arrayidx7387=(($fRec297386+8)|0);
 HEAPF32[(($arrayidx7387)>>2)]=$4205;
 var $fRec297388=(($this1+528400)|0);
 var $arrayidx7389=(($fRec297388)|0);
 var $4206=HEAPF32[(($arrayidx7389)>>2)];
 var $fRec297390=(($this1+528400)|0);
 var $arrayidx7391=(($fRec297390+4)|0);
 HEAPF32[(($arrayidx7391)>>2)]=$4206;
 var $fRec377392=(($this1+528392)|0);
 var $arrayidx7393=(($fRec377392)|0);
 var $4207=HEAPF32[(($arrayidx7393)>>2)];
 var $fRec377394=(($this1+528392)|0);
 var $arrayidx7395=(($fRec377394+4)|0);
 HEAPF32[(($arrayidx7395)>>2)]=$4207;
 var $fRec367396=(($this1+528380)|0);
 var $arrayidx7397=(($fRec367396+4)|0);
 var $4208=HEAPF32[(($arrayidx7397)>>2)];
 var $fRec367398=(($this1+528380)|0);
 var $arrayidx7399=(($fRec367398+8)|0);
 HEAPF32[(($arrayidx7399)>>2)]=$4208;
 var $fRec367400=(($this1+528380)|0);
 var $arrayidx7401=(($fRec367400)|0);
 var $4209=HEAPF32[(($arrayidx7401)>>2)];
 var $fRec367402=(($this1+528380)|0);
 var $arrayidx7403=(($fRec367402+4)|0);
 HEAPF32[(($arrayidx7403)>>2)]=$4209;
 var $fVec47404=(($this1+528372)|0);
 var $arrayidx7405=(($fVec47404)|0);
 var $4210=HEAPF32[(($arrayidx7405)>>2)];
 var $fVec47406=(($this1+528372)|0);
 var $arrayidx7407=(($fVec47406+4)|0);
 HEAPF32[(($arrayidx7407)>>2)]=$4210;
 var $fRec357408=(($this1+528364)|0);
 var $arrayidx7409=(($fRec357408)|0);
 var $4211=HEAPF32[(($arrayidx7409)>>2)];
 var $fRec357410=(($this1+528364)|0);
 var $arrayidx7411=(($fRec357410+4)|0);
 HEAPF32[(($arrayidx7411)>>2)]=$4211;
 var $fRec347412=(($this1+528352)|0);
 var $arrayidx7413=(($fRec347412+4)|0);
 var $4212=HEAPF32[(($arrayidx7413)>>2)];
 var $fRec347414=(($this1+528352)|0);
 var $arrayidx7415=(($fRec347414+8)|0);
 HEAPF32[(($arrayidx7415)>>2)]=$4212;
 var $fRec347416=(($this1+528352)|0);
 var $arrayidx7417=(($fRec347416)|0);
 var $4213=HEAPF32[(($arrayidx7417)>>2)];
 var $fRec347418=(($this1+528352)|0);
 var $arrayidx7419=(($fRec347418+4)|0);
 HEAPF32[(($arrayidx7419)>>2)]=$4213;
 var $fRec397420=(($this1+528344)|0);
 var $arrayidx7421=(($fRec397420)|0);
 var $4214=HEAPF32[(($arrayidx7421)>>2)];
 var $fRec397422=(($this1+528344)|0);
 var $arrayidx7423=(($fRec397422+4)|0);
 HEAPF32[(($arrayidx7423)>>2)]=$4214;
 var $fRec387424=(($this1+528332)|0);
 var $arrayidx7425=(($fRec387424+4)|0);
 var $4215=HEAPF32[(($arrayidx7425)>>2)];
 var $fRec387426=(($this1+528332)|0);
 var $arrayidx7427=(($fRec387426+8)|0);
 HEAPF32[(($arrayidx7427)>>2)]=$4215;
 var $fRec387428=(($this1+528332)|0);
 var $arrayidx7429=(($fRec387428)|0);
 var $4216=HEAPF32[(($arrayidx7429)>>2)];
 var $fRec387430=(($this1+528332)|0);
 var $arrayidx7431=(($fRec387430+4)|0);
 HEAPF32[(($arrayidx7431)>>2)]=$4216;
 var $fRec447432=(($this1+528324)|0);
 var $arrayidx7433=(($fRec447432)|0);
 var $4217=HEAPF32[(($arrayidx7433)>>2)];
 var $fRec447434=(($this1+528324)|0);
 var $arrayidx7435=(($fRec447434+4)|0);
 HEAPF32[(($arrayidx7435)>>2)]=$4217;
 var $fRec437436=(($this1+528312)|0);
 var $arrayidx7437=(($fRec437436+4)|0);
 var $4218=HEAPF32[(($arrayidx7437)>>2)];
 var $fRec437438=(($this1+528312)|0);
 var $arrayidx7439=(($fRec437438+8)|0);
 HEAPF32[(($arrayidx7439)>>2)]=$4218;
 var $fRec437440=(($this1+528312)|0);
 var $arrayidx7441=(($fRec437440)|0);
 var $4219=HEAPF32[(($arrayidx7441)>>2)];
 var $fRec437442=(($this1+528312)|0);
 var $arrayidx7443=(($fRec437442+4)|0);
 HEAPF32[(($arrayidx7443)>>2)]=$4219;
 var $fRec427444=(($this1+528300)|0);
 var $arrayidx7445=(($fRec427444+4)|0);
 var $4220=HEAPF32[(($arrayidx7445)>>2)];
 var $fRec427446=(($this1+528300)|0);
 var $arrayidx7447=(($fRec427446+8)|0);
 HEAPF32[(($arrayidx7447)>>2)]=$4220;
 var $fRec427448=(($this1+528300)|0);
 var $arrayidx7449=(($fRec427448)|0);
 var $4221=HEAPF32[(($arrayidx7449)>>2)];
 var $fRec427450=(($this1+528300)|0);
 var $arrayidx7451=(($fRec427450+4)|0);
 HEAPF32[(($arrayidx7451)>>2)]=$4221;
 var $fRec417452=(($this1+528288)|0);
 var $arrayidx7453=(($fRec417452+4)|0);
 var $4222=HEAPF32[(($arrayidx7453)>>2)];
 var $fRec417454=(($this1+528288)|0);
 var $arrayidx7455=(($fRec417454+8)|0);
 HEAPF32[(($arrayidx7455)>>2)]=$4222;
 var $fRec417456=(($this1+528288)|0);
 var $arrayidx7457=(($fRec417456)|0);
 var $4223=HEAPF32[(($arrayidx7457)>>2)];
 var $fRec417458=(($this1+528288)|0);
 var $arrayidx7459=(($fRec417458+4)|0);
 HEAPF32[(($arrayidx7459)>>2)]=$4223;
 var $fRec407460=(($this1+528276)|0);
 var $arrayidx7461=(($fRec407460+4)|0);
 var $4224=HEAPF32[(($arrayidx7461)>>2)];
 var $fRec407462=(($this1+528276)|0);
 var $arrayidx7463=(($fRec407462+8)|0);
 HEAPF32[(($arrayidx7463)>>2)]=$4224;
 var $fRec407464=(($this1+528276)|0);
 var $arrayidx7465=(($fRec407464)|0);
 var $4225=HEAPF32[(($arrayidx7465)>>2)];
 var $fRec407466=(($this1+528276)|0);
 var $arrayidx7467=(($fRec407466+4)|0);
 HEAPF32[(($arrayidx7467)>>2)]=$4225;
 var $fRec507468=(($this1+528268)|0);
 var $arrayidx7469=(($fRec507468)|0);
 var $4226=HEAPF32[(($arrayidx7469)>>2)];
 var $fRec507470=(($this1+528268)|0);
 var $arrayidx7471=(($fRec507470+4)|0);
 HEAPF32[(($arrayidx7471)>>2)]=$4226;
 var $fRec497472=(($this1+528256)|0);
 var $arrayidx7473=(($fRec497472+4)|0);
 var $4227=HEAPF32[(($arrayidx7473)>>2)];
 var $fRec497474=(($this1+528256)|0);
 var $arrayidx7475=(($fRec497474+8)|0);
 HEAPF32[(($arrayidx7475)>>2)]=$4227;
 var $fRec497476=(($this1+528256)|0);
 var $arrayidx7477=(($fRec497476)|0);
 var $4228=HEAPF32[(($arrayidx7477)>>2)];
 var $fRec497478=(($this1+528256)|0);
 var $arrayidx7479=(($fRec497478+4)|0);
 HEAPF32[(($arrayidx7479)>>2)]=$4228;
 var $fVec57480=(($this1+528248)|0);
 var $arrayidx7481=(($fVec57480)|0);
 var $4229=HEAPF32[(($arrayidx7481)>>2)];
 var $fVec57482=(($this1+528248)|0);
 var $arrayidx7483=(($fVec57482+4)|0);
 HEAPF32[(($arrayidx7483)>>2)]=$4229;
 var $fRec487484=(($this1+528240)|0);
 var $arrayidx7485=(($fRec487484)|0);
 var $4230=HEAPF32[(($arrayidx7485)>>2)];
 var $fRec487486=(($this1+528240)|0);
 var $arrayidx7487=(($fRec487486+4)|0);
 HEAPF32[(($arrayidx7487)>>2)]=$4230;
 var $fRec477488=(($this1+528228)|0);
 var $arrayidx7489=(($fRec477488+4)|0);
 var $4231=HEAPF32[(($arrayidx7489)>>2)];
 var $fRec477490=(($this1+528228)|0);
 var $arrayidx7491=(($fRec477490+8)|0);
 HEAPF32[(($arrayidx7491)>>2)]=$4231;
 var $fRec477492=(($this1+528228)|0);
 var $arrayidx7493=(($fRec477492)|0);
 var $4232=HEAPF32[(($arrayidx7493)>>2)];
 var $fRec477494=(($this1+528228)|0);
 var $arrayidx7495=(($fRec477494+4)|0);
 HEAPF32[(($arrayidx7495)>>2)]=$4232;
 var $fRec467496=(($this1+528216)|0);
 var $arrayidx7497=(($fRec467496+4)|0);
 var $4233=HEAPF32[(($arrayidx7497)>>2)];
 var $fRec467498=(($this1+528216)|0);
 var $arrayidx7499=(($fRec467498+8)|0);
 HEAPF32[(($arrayidx7499)>>2)]=$4233;
 var $fRec467500=(($this1+528216)|0);
 var $arrayidx7501=(($fRec467500)|0);
 var $4234=HEAPF32[(($arrayidx7501)>>2)];
 var $fRec467502=(($this1+528216)|0);
 var $arrayidx7503=(($fRec467502+4)|0);
 HEAPF32[(($arrayidx7503)>>2)]=$4234;
 var $fRec457504=(($this1+528204)|0);
 var $arrayidx7505=(($fRec457504+4)|0);
 var $4235=HEAPF32[(($arrayidx7505)>>2)];
 var $fRec457506=(($this1+528204)|0);
 var $arrayidx7507=(($fRec457506+8)|0);
 HEAPF32[(($arrayidx7507)>>2)]=$4235;
 var $fRec457508=(($this1+528204)|0);
 var $arrayidx7509=(($fRec457508)|0);
 var $4236=HEAPF32[(($arrayidx7509)>>2)];
 var $fRec457510=(($this1+528204)|0);
 var $arrayidx7511=(($fRec457510+4)|0);
 HEAPF32[(($arrayidx7511)>>2)]=$4236;
 var $fRec557512=(($this1+528196)|0);
 var $arrayidx7513=(($fRec557512)|0);
 var $4237=HEAPF32[(($arrayidx7513)>>2)];
 var $fRec557514=(($this1+528196)|0);
 var $arrayidx7515=(($fRec557514+4)|0);
 HEAPF32[(($arrayidx7515)>>2)]=$4237;
 var $fRec547516=(($this1+528184)|0);
 var $arrayidx7517=(($fRec547516+4)|0);
 var $4238=HEAPF32[(($arrayidx7517)>>2)];
 var $fRec547518=(($this1+528184)|0);
 var $arrayidx7519=(($fRec547518+8)|0);
 HEAPF32[(($arrayidx7519)>>2)]=$4238;
 var $fRec547520=(($this1+528184)|0);
 var $arrayidx7521=(($fRec547520)|0);
 var $4239=HEAPF32[(($arrayidx7521)>>2)];
 var $fRec547522=(($this1+528184)|0);
 var $arrayidx7523=(($fRec547522+4)|0);
 HEAPF32[(($arrayidx7523)>>2)]=$4239;
 var $fVec67524=(($this1+528176)|0);
 var $arrayidx7525=(($fVec67524)|0);
 var $4240=HEAPF32[(($arrayidx7525)>>2)];
 var $fVec67526=(($this1+528176)|0);
 var $arrayidx7527=(($fVec67526+4)|0);
 HEAPF32[(($arrayidx7527)>>2)]=$4240;
 var $fRec537528=(($this1+528168)|0);
 var $arrayidx7529=(($fRec537528)|0);
 var $4241=HEAPF32[(($arrayidx7529)>>2)];
 var $fRec537530=(($this1+528168)|0);
 var $arrayidx7531=(($fRec537530+4)|0);
 HEAPF32[(($arrayidx7531)>>2)]=$4241;
 var $fRec527532=(($this1+528156)|0);
 var $arrayidx7533=(($fRec527532+4)|0);
 var $4242=HEAPF32[(($arrayidx7533)>>2)];
 var $fRec527534=(($this1+528156)|0);
 var $arrayidx7535=(($fRec527534+8)|0);
 HEAPF32[(($arrayidx7535)>>2)]=$4242;
 var $fRec527536=(($this1+528156)|0);
 var $arrayidx7537=(($fRec527536)|0);
 var $4243=HEAPF32[(($arrayidx7537)>>2)];
 var $fRec527538=(($this1+528156)|0);
 var $arrayidx7539=(($fRec527538+4)|0);
 HEAPF32[(($arrayidx7539)>>2)]=$4243;
 var $fRec517540=(($this1+528144)|0);
 var $arrayidx7541=(($fRec517540+4)|0);
 var $4244=HEAPF32[(($arrayidx7541)>>2)];
 var $fRec517542=(($this1+528144)|0);
 var $arrayidx7543=(($fRec517542+8)|0);
 HEAPF32[(($arrayidx7543)>>2)]=$4244;
 var $fRec517544=(($this1+528144)|0);
 var $arrayidx7545=(($fRec517544)|0);
 var $4245=HEAPF32[(($arrayidx7545)>>2)];
 var $fRec517546=(($this1+528144)|0);
 var $arrayidx7547=(($fRec517546+4)|0);
 HEAPF32[(($arrayidx7547)>>2)]=$4245;
 var $fRec597548=(($this1+528136)|0);
 var $arrayidx7549=(($fRec597548)|0);
 var $4246=HEAPF32[(($arrayidx7549)>>2)];
 var $fRec597550=(($this1+528136)|0);
 var $arrayidx7551=(($fRec597550+4)|0);
 HEAPF32[(($arrayidx7551)>>2)]=$4246;
 var $fRec587552=(($this1+528124)|0);
 var $arrayidx7553=(($fRec587552+4)|0);
 var $4247=HEAPF32[(($arrayidx7553)>>2)];
 var $fRec587554=(($this1+528124)|0);
 var $arrayidx7555=(($fRec587554+8)|0);
 HEAPF32[(($arrayidx7555)>>2)]=$4247;
 var $fRec587556=(($this1+528124)|0);
 var $arrayidx7557=(($fRec587556)|0);
 var $4248=HEAPF32[(($arrayidx7557)>>2)];
 var $fRec587558=(($this1+528124)|0);
 var $arrayidx7559=(($fRec587558+4)|0);
 HEAPF32[(($arrayidx7559)>>2)]=$4248;
 var $fVec77560=(($this1+528116)|0);
 var $arrayidx7561=(($fVec77560)|0);
 var $4249=HEAPF32[(($arrayidx7561)>>2)];
 var $fVec77562=(($this1+528116)|0);
 var $arrayidx7563=(($fVec77562+4)|0);
 HEAPF32[(($arrayidx7563)>>2)]=$4249;
 var $fRec577564=(($this1+528108)|0);
 var $arrayidx7565=(($fRec577564)|0);
 var $4250=HEAPF32[(($arrayidx7565)>>2)];
 var $fRec577566=(($this1+528108)|0);
 var $arrayidx7567=(($fRec577566+4)|0);
 HEAPF32[(($arrayidx7567)>>2)]=$4250;
 var $fRec567568=(($this1+528096)|0);
 var $arrayidx7569=(($fRec567568+4)|0);
 var $4251=HEAPF32[(($arrayidx7569)>>2)];
 var $fRec567570=(($this1+528096)|0);
 var $arrayidx7571=(($fRec567570+8)|0);
 HEAPF32[(($arrayidx7571)>>2)]=$4251;
 var $fRec567572=(($this1+528096)|0);
 var $arrayidx7573=(($fRec567572)|0);
 var $4252=HEAPF32[(($arrayidx7573)>>2)];
 var $fRec567574=(($this1+528096)|0);
 var $arrayidx7575=(($fRec567574+4)|0);
 HEAPF32[(($arrayidx7575)>>2)]=$4252;
 var $fRec617576=(($this1+528088)|0);
 var $arrayidx7577=(($fRec617576)|0);
 var $4253=HEAPF32[(($arrayidx7577)>>2)];
 var $fRec617578=(($this1+528088)|0);
 var $arrayidx7579=(($fRec617578+4)|0);
 HEAPF32[(($arrayidx7579)>>2)]=$4253;
 var $fRec607580=(($this1+528076)|0);
 var $arrayidx7581=(($fRec607580+4)|0);
 var $4254=HEAPF32[(($arrayidx7581)>>2)];
 var $fRec607582=(($this1+528076)|0);
 var $arrayidx7583=(($fRec607582+8)|0);
 HEAPF32[(($arrayidx7583)>>2)]=$4254;
 var $fRec607584=(($this1+528076)|0);
 var $arrayidx7585=(($fRec607584)|0);
 var $4255=HEAPF32[(($arrayidx7585)>>2)];
 var $fRec607586=(($this1+528076)|0);
 var $arrayidx7587=(($fRec607586+4)|0);
 HEAPF32[(($arrayidx7587)>>2)]=$4255;
 var $fRec667588=(($this1+528068)|0);
 var $arrayidx7589=(($fRec667588)|0);
 var $4256=HEAPF32[(($arrayidx7589)>>2)];
 var $fRec667590=(($this1+528068)|0);
 var $arrayidx7591=(($fRec667590+4)|0);
 HEAPF32[(($arrayidx7591)>>2)]=$4256;
 var $fRec657592=(($this1+528056)|0);
 var $arrayidx7593=(($fRec657592+4)|0);
 var $4257=HEAPF32[(($arrayidx7593)>>2)];
 var $fRec657594=(($this1+528056)|0);
 var $arrayidx7595=(($fRec657594+8)|0);
 HEAPF32[(($arrayidx7595)>>2)]=$4257;
 var $fRec657596=(($this1+528056)|0);
 var $arrayidx7597=(($fRec657596)|0);
 var $4258=HEAPF32[(($arrayidx7597)>>2)];
 var $fRec657598=(($this1+528056)|0);
 var $arrayidx7599=(($fRec657598+4)|0);
 HEAPF32[(($arrayidx7599)>>2)]=$4258;
 var $fRec647600=(($this1+528044)|0);
 var $arrayidx7601=(($fRec647600+4)|0);
 var $4259=HEAPF32[(($arrayidx7601)>>2)];
 var $fRec647602=(($this1+528044)|0);
 var $arrayidx7603=(($fRec647602+8)|0);
 HEAPF32[(($arrayidx7603)>>2)]=$4259;
 var $fRec647604=(($this1+528044)|0);
 var $arrayidx7605=(($fRec647604)|0);
 var $4260=HEAPF32[(($arrayidx7605)>>2)];
 var $fRec647606=(($this1+528044)|0);
 var $arrayidx7607=(($fRec647606+4)|0);
 HEAPF32[(($arrayidx7607)>>2)]=$4260;
 var $fRec637608=(($this1+528032)|0);
 var $arrayidx7609=(($fRec637608+4)|0);
 var $4261=HEAPF32[(($arrayidx7609)>>2)];
 var $fRec637610=(($this1+528032)|0);
 var $arrayidx7611=(($fRec637610+8)|0);
 HEAPF32[(($arrayidx7611)>>2)]=$4261;
 var $fRec637612=(($this1+528032)|0);
 var $arrayidx7613=(($fRec637612)|0);
 var $4262=HEAPF32[(($arrayidx7613)>>2)];
 var $fRec637614=(($this1+528032)|0);
 var $arrayidx7615=(($fRec637614+4)|0);
 HEAPF32[(($arrayidx7615)>>2)]=$4262;
 var $fRec627616=(($this1+528020)|0);
 var $arrayidx7617=(($fRec627616+4)|0);
 var $4263=HEAPF32[(($arrayidx7617)>>2)];
 var $fRec627618=(($this1+528020)|0);
 var $arrayidx7619=(($fRec627618+8)|0);
 HEAPF32[(($arrayidx7619)>>2)]=$4263;
 var $fRec627620=(($this1+528020)|0);
 var $arrayidx7621=(($fRec627620)|0);
 var $4264=HEAPF32[(($arrayidx7621)>>2)];
 var $fRec627622=(($this1+528020)|0);
 var $arrayidx7623=(($fRec627622+4)|0);
 HEAPF32[(($arrayidx7623)>>2)]=$4264;
 var $fRec727624=(($this1+528012)|0);
 var $arrayidx7625=(($fRec727624)|0);
 var $4265=HEAPF32[(($arrayidx7625)>>2)];
 var $fRec727626=(($this1+528012)|0);
 var $arrayidx7627=(($fRec727626+4)|0);
 HEAPF32[(($arrayidx7627)>>2)]=$4265;
 var $fRec717628=(($this1+528000)|0);
 var $arrayidx7629=(($fRec717628+4)|0);
 var $4266=HEAPF32[(($arrayidx7629)>>2)];
 var $fRec717630=(($this1+528000)|0);
 var $arrayidx7631=(($fRec717630+8)|0);
 HEAPF32[(($arrayidx7631)>>2)]=$4266;
 var $fRec717632=(($this1+528000)|0);
 var $arrayidx7633=(($fRec717632)|0);
 var $4267=HEAPF32[(($arrayidx7633)>>2)];
 var $fRec717634=(($this1+528000)|0);
 var $arrayidx7635=(($fRec717634+4)|0);
 HEAPF32[(($arrayidx7635)>>2)]=$4267;
 var $fVec87636=(($this1+527992)|0);
 var $arrayidx7637=(($fVec87636)|0);
 var $4268=HEAPF32[(($arrayidx7637)>>2)];
 var $fVec87638=(($this1+527992)|0);
 var $arrayidx7639=(($fVec87638+4)|0);
 HEAPF32[(($arrayidx7639)>>2)]=$4268;
 var $fRec707640=(($this1+527984)|0);
 var $arrayidx7641=(($fRec707640)|0);
 var $4269=HEAPF32[(($arrayidx7641)>>2)];
 var $fRec707642=(($this1+527984)|0);
 var $arrayidx7643=(($fRec707642+4)|0);
 HEAPF32[(($arrayidx7643)>>2)]=$4269;
 var $fRec697644=(($this1+527972)|0);
 var $arrayidx7645=(($fRec697644+4)|0);
 var $4270=HEAPF32[(($arrayidx7645)>>2)];
 var $fRec697646=(($this1+527972)|0);
 var $arrayidx7647=(($fRec697646+8)|0);
 HEAPF32[(($arrayidx7647)>>2)]=$4270;
 var $fRec697648=(($this1+527972)|0);
 var $arrayidx7649=(($fRec697648)|0);
 var $4271=HEAPF32[(($arrayidx7649)>>2)];
 var $fRec697650=(($this1+527972)|0);
 var $arrayidx7651=(($fRec697650+4)|0);
 HEAPF32[(($arrayidx7651)>>2)]=$4271;
 var $fRec687652=(($this1+527960)|0);
 var $arrayidx7653=(($fRec687652+4)|0);
 var $4272=HEAPF32[(($arrayidx7653)>>2)];
 var $fRec687654=(($this1+527960)|0);
 var $arrayidx7655=(($fRec687654+8)|0);
 HEAPF32[(($arrayidx7655)>>2)]=$4272;
 var $fRec687656=(($this1+527960)|0);
 var $arrayidx7657=(($fRec687656)|0);
 var $4273=HEAPF32[(($arrayidx7657)>>2)];
 var $fRec687658=(($this1+527960)|0);
 var $arrayidx7659=(($fRec687658+4)|0);
 HEAPF32[(($arrayidx7659)>>2)]=$4273;
 var $fRec677660=(($this1+527948)|0);
 var $arrayidx7661=(($fRec677660+4)|0);
 var $4274=HEAPF32[(($arrayidx7661)>>2)];
 var $fRec677662=(($this1+527948)|0);
 var $arrayidx7663=(($fRec677662+8)|0);
 HEAPF32[(($arrayidx7663)>>2)]=$4274;
 var $fRec677664=(($this1+527948)|0);
 var $arrayidx7665=(($fRec677664)|0);
 var $4275=HEAPF32[(($arrayidx7665)>>2)];
 var $fRec677666=(($this1+527948)|0);
 var $arrayidx7667=(($fRec677666+4)|0);
 HEAPF32[(($arrayidx7667)>>2)]=$4275;
 var $fRec777668=(($this1+527940)|0);
 var $arrayidx7669=(($fRec777668)|0);
 var $4276=HEAPF32[(($arrayidx7669)>>2)];
 var $fRec777670=(($this1+527940)|0);
 var $arrayidx7671=(($fRec777670+4)|0);
 HEAPF32[(($arrayidx7671)>>2)]=$4276;
 var $fRec767672=(($this1+527928)|0);
 var $arrayidx7673=(($fRec767672+4)|0);
 var $4277=HEAPF32[(($arrayidx7673)>>2)];
 var $fRec767674=(($this1+527928)|0);
 var $arrayidx7675=(($fRec767674+8)|0);
 HEAPF32[(($arrayidx7675)>>2)]=$4277;
 var $fRec767676=(($this1+527928)|0);
 var $arrayidx7677=(($fRec767676)|0);
 var $4278=HEAPF32[(($arrayidx7677)>>2)];
 var $fRec767678=(($this1+527928)|0);
 var $arrayidx7679=(($fRec767678+4)|0);
 HEAPF32[(($arrayidx7679)>>2)]=$4278;
 var $fVec97680=(($this1+527920)|0);
 var $arrayidx7681=(($fVec97680)|0);
 var $4279=HEAPF32[(($arrayidx7681)>>2)];
 var $fVec97682=(($this1+527920)|0);
 var $arrayidx7683=(($fVec97682+4)|0);
 HEAPF32[(($arrayidx7683)>>2)]=$4279;
 var $fRec757684=(($this1+527912)|0);
 var $arrayidx7685=(($fRec757684)|0);
 var $4280=HEAPF32[(($arrayidx7685)>>2)];
 var $fRec757686=(($this1+527912)|0);
 var $arrayidx7687=(($fRec757686+4)|0);
 HEAPF32[(($arrayidx7687)>>2)]=$4280;
 var $fRec747688=(($this1+527900)|0);
 var $arrayidx7689=(($fRec747688+4)|0);
 var $4281=HEAPF32[(($arrayidx7689)>>2)];
 var $fRec747690=(($this1+527900)|0);
 var $arrayidx7691=(($fRec747690+8)|0);
 HEAPF32[(($arrayidx7691)>>2)]=$4281;
 var $fRec747692=(($this1+527900)|0);
 var $arrayidx7693=(($fRec747692)|0);
 var $4282=HEAPF32[(($arrayidx7693)>>2)];
 var $fRec747694=(($this1+527900)|0);
 var $arrayidx7695=(($fRec747694+4)|0);
 HEAPF32[(($arrayidx7695)>>2)]=$4282;
 var $fRec737696=(($this1+527888)|0);
 var $arrayidx7697=(($fRec737696+4)|0);
 var $4283=HEAPF32[(($arrayidx7697)>>2)];
 var $fRec737698=(($this1+527888)|0);
 var $arrayidx7699=(($fRec737698+8)|0);
 HEAPF32[(($arrayidx7699)>>2)]=$4283;
 var $fRec737700=(($this1+527888)|0);
 var $arrayidx7701=(($fRec737700)|0);
 var $4284=HEAPF32[(($arrayidx7701)>>2)];
 var $fRec737702=(($this1+527888)|0);
 var $arrayidx7703=(($fRec737702+4)|0);
 HEAPF32[(($arrayidx7703)>>2)]=$4284;
 var $fRec817704=(($this1+527880)|0);
 var $arrayidx7705=(($fRec817704)|0);
 var $4285=HEAPF32[(($arrayidx7705)>>2)];
 var $fRec817706=(($this1+527880)|0);
 var $arrayidx7707=(($fRec817706+4)|0);
 HEAPF32[(($arrayidx7707)>>2)]=$4285;
 var $fRec807708=(($this1+527868)|0);
 var $arrayidx7709=(($fRec807708+4)|0);
 var $4286=HEAPF32[(($arrayidx7709)>>2)];
 var $fRec807710=(($this1+527868)|0);
 var $arrayidx7711=(($fRec807710+8)|0);
 HEAPF32[(($arrayidx7711)>>2)]=$4286;
 var $fRec807712=(($this1+527868)|0);
 var $arrayidx7713=(($fRec807712)|0);
 var $4287=HEAPF32[(($arrayidx7713)>>2)];
 var $fRec807714=(($this1+527868)|0);
 var $arrayidx7715=(($fRec807714+4)|0);
 HEAPF32[(($arrayidx7715)>>2)]=$4287;
 var $fVec107716=(($this1+527860)|0);
 var $arrayidx7717=(($fVec107716)|0);
 var $4288=HEAPF32[(($arrayidx7717)>>2)];
 var $fVec107718=(($this1+527860)|0);
 var $arrayidx7719=(($fVec107718+4)|0);
 HEAPF32[(($arrayidx7719)>>2)]=$4288;
 var $fRec797720=(($this1+527852)|0);
 var $arrayidx7721=(($fRec797720)|0);
 var $4289=HEAPF32[(($arrayidx7721)>>2)];
 var $fRec797722=(($this1+527852)|0);
 var $arrayidx7723=(($fRec797722+4)|0);
 HEAPF32[(($arrayidx7723)>>2)]=$4289;
 var $fRec787724=(($this1+527840)|0);
 var $arrayidx7725=(($fRec787724+4)|0);
 var $4290=HEAPF32[(($arrayidx7725)>>2)];
 var $fRec787726=(($this1+527840)|0);
 var $arrayidx7727=(($fRec787726+8)|0);
 HEAPF32[(($arrayidx7727)>>2)]=$4290;
 var $fRec787728=(($this1+527840)|0);
 var $arrayidx7729=(($fRec787728)|0);
 var $4291=HEAPF32[(($arrayidx7729)>>2)];
 var $fRec787730=(($this1+527840)|0);
 var $arrayidx7731=(($fRec787730+4)|0);
 HEAPF32[(($arrayidx7731)>>2)]=$4291;
 var $fRec837732=(($this1+527832)|0);
 var $arrayidx7733=(($fRec837732)|0);
 var $4292=HEAPF32[(($arrayidx7733)>>2)];
 var $fRec837734=(($this1+527832)|0);
 var $arrayidx7735=(($fRec837734+4)|0);
 HEAPF32[(($arrayidx7735)>>2)]=$4292;
 var $fRec827736=(($this1+527820)|0);
 var $arrayidx7737=(($fRec827736+4)|0);
 var $4293=HEAPF32[(($arrayidx7737)>>2)];
 var $fRec827738=(($this1+527820)|0);
 var $arrayidx7739=(($fRec827738+8)|0);
 HEAPF32[(($arrayidx7739)>>2)]=$4293;
 var $fRec827740=(($this1+527820)|0);
 var $arrayidx7741=(($fRec827740)|0);
 var $4294=HEAPF32[(($arrayidx7741)>>2)];
 var $fRec827742=(($this1+527820)|0);
 var $arrayidx7743=(($fRec827742+4)|0);
 HEAPF32[(($arrayidx7743)>>2)]=$4294;
 var $fRec887744=(($this1+527812)|0);
 var $arrayidx7745=(($fRec887744)|0);
 var $4295=HEAPF32[(($arrayidx7745)>>2)];
 var $fRec887746=(($this1+527812)|0);
 var $arrayidx7747=(($fRec887746+4)|0);
 HEAPF32[(($arrayidx7747)>>2)]=$4295;
 var $fRec877748=(($this1+527800)|0);
 var $arrayidx7749=(($fRec877748+4)|0);
 var $4296=HEAPF32[(($arrayidx7749)>>2)];
 var $fRec877750=(($this1+527800)|0);
 var $arrayidx7751=(($fRec877750+8)|0);
 HEAPF32[(($arrayidx7751)>>2)]=$4296;
 var $fRec877752=(($this1+527800)|0);
 var $arrayidx7753=(($fRec877752)|0);
 var $4297=HEAPF32[(($arrayidx7753)>>2)];
 var $fRec877754=(($this1+527800)|0);
 var $arrayidx7755=(($fRec877754+4)|0);
 HEAPF32[(($arrayidx7755)>>2)]=$4297;
 var $fRec867756=(($this1+527788)|0);
 var $arrayidx7757=(($fRec867756+4)|0);
 var $4298=HEAPF32[(($arrayidx7757)>>2)];
 var $fRec867758=(($this1+527788)|0);
 var $arrayidx7759=(($fRec867758+8)|0);
 HEAPF32[(($arrayidx7759)>>2)]=$4298;
 var $fRec867760=(($this1+527788)|0);
 var $arrayidx7761=(($fRec867760)|0);
 var $4299=HEAPF32[(($arrayidx7761)>>2)];
 var $fRec867762=(($this1+527788)|0);
 var $arrayidx7763=(($fRec867762+4)|0);
 HEAPF32[(($arrayidx7763)>>2)]=$4299;
 var $fRec857764=(($this1+527776)|0);
 var $arrayidx7765=(($fRec857764+4)|0);
 var $4300=HEAPF32[(($arrayidx7765)>>2)];
 var $fRec857766=(($this1+527776)|0);
 var $arrayidx7767=(($fRec857766+8)|0);
 HEAPF32[(($arrayidx7767)>>2)]=$4300;
 var $fRec857768=(($this1+527776)|0);
 var $arrayidx7769=(($fRec857768)|0);
 var $4301=HEAPF32[(($arrayidx7769)>>2)];
 var $fRec857770=(($this1+527776)|0);
 var $arrayidx7771=(($fRec857770+4)|0);
 HEAPF32[(($arrayidx7771)>>2)]=$4301;
 var $fRec847772=(($this1+527764)|0);
 var $arrayidx7773=(($fRec847772+4)|0);
 var $4302=HEAPF32[(($arrayidx7773)>>2)];
 var $fRec847774=(($this1+527764)|0);
 var $arrayidx7775=(($fRec847774+8)|0);
 HEAPF32[(($arrayidx7775)>>2)]=$4302;
 var $fRec847776=(($this1+527764)|0);
 var $arrayidx7777=(($fRec847776)|0);
 var $4303=HEAPF32[(($arrayidx7777)>>2)];
 var $fRec847778=(($this1+527764)|0);
 var $arrayidx7779=(($fRec847778+4)|0);
 HEAPF32[(($arrayidx7779)>>2)]=$4303;
 var $fRec947780=(($this1+527756)|0);
 var $arrayidx7781=(($fRec947780)|0);
 var $4304=HEAPF32[(($arrayidx7781)>>2)];
 var $fRec947782=(($this1+527756)|0);
 var $arrayidx7783=(($fRec947782+4)|0);
 HEAPF32[(($arrayidx7783)>>2)]=$4304;
 var $fRec937784=(($this1+527744)|0);
 var $arrayidx7785=(($fRec937784+4)|0);
 var $4305=HEAPF32[(($arrayidx7785)>>2)];
 var $fRec937786=(($this1+527744)|0);
 var $arrayidx7787=(($fRec937786+8)|0);
 HEAPF32[(($arrayidx7787)>>2)]=$4305;
 var $fRec937788=(($this1+527744)|0);
 var $arrayidx7789=(($fRec937788)|0);
 var $4306=HEAPF32[(($arrayidx7789)>>2)];
 var $fRec937790=(($this1+527744)|0);
 var $arrayidx7791=(($fRec937790+4)|0);
 HEAPF32[(($arrayidx7791)>>2)]=$4306;
 var $fVec117792=(($this1+527736)|0);
 var $arrayidx7793=(($fVec117792)|0);
 var $4307=HEAPF32[(($arrayidx7793)>>2)];
 var $fVec117794=(($this1+527736)|0);
 var $arrayidx7795=(($fVec117794+4)|0);
 HEAPF32[(($arrayidx7795)>>2)]=$4307;
 var $fRec927796=(($this1+527728)|0);
 var $arrayidx7797=(($fRec927796)|0);
 var $4308=HEAPF32[(($arrayidx7797)>>2)];
 var $fRec927798=(($this1+527728)|0);
 var $arrayidx7799=(($fRec927798+4)|0);
 HEAPF32[(($arrayidx7799)>>2)]=$4308;
 var $fRec917800=(($this1+527716)|0);
 var $arrayidx7801=(($fRec917800+4)|0);
 var $4309=HEAPF32[(($arrayidx7801)>>2)];
 var $fRec917802=(($this1+527716)|0);
 var $arrayidx7803=(($fRec917802+8)|0);
 HEAPF32[(($arrayidx7803)>>2)]=$4309;
 var $fRec917804=(($this1+527716)|0);
 var $arrayidx7805=(($fRec917804)|0);
 var $4310=HEAPF32[(($arrayidx7805)>>2)];
 var $fRec917806=(($this1+527716)|0);
 var $arrayidx7807=(($fRec917806+4)|0);
 HEAPF32[(($arrayidx7807)>>2)]=$4310;
 var $fRec907808=(($this1+527704)|0);
 var $arrayidx7809=(($fRec907808+4)|0);
 var $4311=HEAPF32[(($arrayidx7809)>>2)];
 var $fRec907810=(($this1+527704)|0);
 var $arrayidx7811=(($fRec907810+8)|0);
 HEAPF32[(($arrayidx7811)>>2)]=$4311;
 var $fRec907812=(($this1+527704)|0);
 var $arrayidx7813=(($fRec907812)|0);
 var $4312=HEAPF32[(($arrayidx7813)>>2)];
 var $fRec907814=(($this1+527704)|0);
 var $arrayidx7815=(($fRec907814+4)|0);
 HEAPF32[(($arrayidx7815)>>2)]=$4312;
 var $fRec897816=(($this1+527692)|0);
 var $arrayidx7817=(($fRec897816+4)|0);
 var $4313=HEAPF32[(($arrayidx7817)>>2)];
 var $fRec897818=(($this1+527692)|0);
 var $arrayidx7819=(($fRec897818+8)|0);
 HEAPF32[(($arrayidx7819)>>2)]=$4313;
 var $fRec897820=(($this1+527692)|0);
 var $arrayidx7821=(($fRec897820)|0);
 var $4314=HEAPF32[(($arrayidx7821)>>2)];
 var $fRec897822=(($this1+527692)|0);
 var $arrayidx7823=(($fRec897822+4)|0);
 HEAPF32[(($arrayidx7823)>>2)]=$4314;
 var $fRec997824=(($this1+527684)|0);
 var $arrayidx7825=(($fRec997824)|0);
 var $4315=HEAPF32[(($arrayidx7825)>>2)];
 var $fRec997826=(($this1+527684)|0);
 var $arrayidx7827=(($fRec997826+4)|0);
 HEAPF32[(($arrayidx7827)>>2)]=$4315;
 var $fRec987828=(($this1+527672)|0);
 var $arrayidx7829=(($fRec987828+4)|0);
 var $4316=HEAPF32[(($arrayidx7829)>>2)];
 var $fRec987830=(($this1+527672)|0);
 var $arrayidx7831=(($fRec987830+8)|0);
 HEAPF32[(($arrayidx7831)>>2)]=$4316;
 var $fRec987832=(($this1+527672)|0);
 var $arrayidx7833=(($fRec987832)|0);
 var $4317=HEAPF32[(($arrayidx7833)>>2)];
 var $fRec987834=(($this1+527672)|0);
 var $arrayidx7835=(($fRec987834+4)|0);
 HEAPF32[(($arrayidx7835)>>2)]=$4317;
 var $fVec127836=(($this1+527664)|0);
 var $arrayidx7837=(($fVec127836)|0);
 var $4318=HEAPF32[(($arrayidx7837)>>2)];
 var $fVec127838=(($this1+527664)|0);
 var $arrayidx7839=(($fVec127838+4)|0);
 HEAPF32[(($arrayidx7839)>>2)]=$4318;
 var $fRec977840=(($this1+527656)|0);
 var $arrayidx7841=(($fRec977840)|0);
 var $4319=HEAPF32[(($arrayidx7841)>>2)];
 var $fRec977842=(($this1+527656)|0);
 var $arrayidx7843=(($fRec977842+4)|0);
 HEAPF32[(($arrayidx7843)>>2)]=$4319;
 var $fRec967844=(($this1+527644)|0);
 var $arrayidx7845=(($fRec967844+4)|0);
 var $4320=HEAPF32[(($arrayidx7845)>>2)];
 var $fRec967846=(($this1+527644)|0);
 var $arrayidx7847=(($fRec967846+8)|0);
 HEAPF32[(($arrayidx7847)>>2)]=$4320;
 var $fRec967848=(($this1+527644)|0);
 var $arrayidx7849=(($fRec967848)|0);
 var $4321=HEAPF32[(($arrayidx7849)>>2)];
 var $fRec967850=(($this1+527644)|0);
 var $arrayidx7851=(($fRec967850+4)|0);
 HEAPF32[(($arrayidx7851)>>2)]=$4321;
 var $fRec957852=(($this1+527632)|0);
 var $arrayidx7853=(($fRec957852+4)|0);
 var $4322=HEAPF32[(($arrayidx7853)>>2)];
 var $fRec957854=(($this1+527632)|0);
 var $arrayidx7855=(($fRec957854+8)|0);
 HEAPF32[(($arrayidx7855)>>2)]=$4322;
 var $fRec957856=(($this1+527632)|0);
 var $arrayidx7857=(($fRec957856)|0);
 var $4323=HEAPF32[(($arrayidx7857)>>2)];
 var $fRec957858=(($this1+527632)|0);
 var $arrayidx7859=(($fRec957858+4)|0);
 HEAPF32[(($arrayidx7859)>>2)]=$4323;
 var $fRec1037860=(($this1+527624)|0);
 var $arrayidx7861=(($fRec1037860)|0);
 var $4324=HEAPF32[(($arrayidx7861)>>2)];
 var $fRec1037862=(($this1+527624)|0);
 var $arrayidx7863=(($fRec1037862+4)|0);
 HEAPF32[(($arrayidx7863)>>2)]=$4324;
 var $fRec1027864=(($this1+527612)|0);
 var $arrayidx7865=(($fRec1027864+4)|0);
 var $4325=HEAPF32[(($arrayidx7865)>>2)];
 var $fRec1027866=(($this1+527612)|0);
 var $arrayidx7867=(($fRec1027866+8)|0);
 HEAPF32[(($arrayidx7867)>>2)]=$4325;
 var $fRec1027868=(($this1+527612)|0);
 var $arrayidx7869=(($fRec1027868)|0);
 var $4326=HEAPF32[(($arrayidx7869)>>2)];
 var $fRec1027870=(($this1+527612)|0);
 var $arrayidx7871=(($fRec1027870+4)|0);
 HEAPF32[(($arrayidx7871)>>2)]=$4326;
 var $fVec137872=(($this1+527604)|0);
 var $arrayidx7873=(($fVec137872)|0);
 var $4327=HEAPF32[(($arrayidx7873)>>2)];
 var $fVec137874=(($this1+527604)|0);
 var $arrayidx7875=(($fVec137874+4)|0);
 HEAPF32[(($arrayidx7875)>>2)]=$4327;
 var $fRec1017876=(($this1+527596)|0);
 var $arrayidx7877=(($fRec1017876)|0);
 var $4328=HEAPF32[(($arrayidx7877)>>2)];
 var $fRec1017878=(($this1+527596)|0);
 var $arrayidx7879=(($fRec1017878+4)|0);
 HEAPF32[(($arrayidx7879)>>2)]=$4328;
 var $fRec1007880=(($this1+527584)|0);
 var $arrayidx7881=(($fRec1007880+4)|0);
 var $4329=HEAPF32[(($arrayidx7881)>>2)];
 var $fRec1007882=(($this1+527584)|0);
 var $arrayidx7883=(($fRec1007882+8)|0);
 HEAPF32[(($arrayidx7883)>>2)]=$4329;
 var $fRec1007884=(($this1+527584)|0);
 var $arrayidx7885=(($fRec1007884)|0);
 var $4330=HEAPF32[(($arrayidx7885)>>2)];
 var $fRec1007886=(($this1+527584)|0);
 var $arrayidx7887=(($fRec1007886+4)|0);
 HEAPF32[(($arrayidx7887)>>2)]=$4330;
 var $fRec1057888=(($this1+527576)|0);
 var $arrayidx7889=(($fRec1057888)|0);
 var $4331=HEAPF32[(($arrayidx7889)>>2)];
 var $fRec1057890=(($this1+527576)|0);
 var $arrayidx7891=(($fRec1057890+4)|0);
 HEAPF32[(($arrayidx7891)>>2)]=$4331;
 var $fRec1047892=(($this1+527564)|0);
 var $arrayidx7893=(($fRec1047892+4)|0);
 var $4332=HEAPF32[(($arrayidx7893)>>2)];
 var $fRec1047894=(($this1+527564)|0);
 var $arrayidx7895=(($fRec1047894+8)|0);
 HEAPF32[(($arrayidx7895)>>2)]=$4332;
 var $fRec1047896=(($this1+527564)|0);
 var $arrayidx7897=(($fRec1047896)|0);
 var $4333=HEAPF32[(($arrayidx7897)>>2)];
 var $fRec1047898=(($this1+527564)|0);
 var $arrayidx7899=(($fRec1047898+4)|0);
 HEAPF32[(($arrayidx7899)>>2)]=$4333;
 var $fRec1107900=(($this1+527556)|0);
 var $arrayidx7901=(($fRec1107900)|0);
 var $4334=HEAPF32[(($arrayidx7901)>>2)];
 var $fRec1107902=(($this1+527556)|0);
 var $arrayidx7903=(($fRec1107902+4)|0);
 HEAPF32[(($arrayidx7903)>>2)]=$4334;
 var $fRec1097904=(($this1+527544)|0);
 var $arrayidx7905=(($fRec1097904+4)|0);
 var $4335=HEAPF32[(($arrayidx7905)>>2)];
 var $fRec1097906=(($this1+527544)|0);
 var $arrayidx7907=(($fRec1097906+8)|0);
 HEAPF32[(($arrayidx7907)>>2)]=$4335;
 var $fRec1097908=(($this1+527544)|0);
 var $arrayidx7909=(($fRec1097908)|0);
 var $4336=HEAPF32[(($arrayidx7909)>>2)];
 var $fRec1097910=(($this1+527544)|0);
 var $arrayidx7911=(($fRec1097910+4)|0);
 HEAPF32[(($arrayidx7911)>>2)]=$4336;
 var $fRec1087912=(($this1+527532)|0);
 var $arrayidx7913=(($fRec1087912+4)|0);
 var $4337=HEAPF32[(($arrayidx7913)>>2)];
 var $fRec1087914=(($this1+527532)|0);
 var $arrayidx7915=(($fRec1087914+8)|0);
 HEAPF32[(($arrayidx7915)>>2)]=$4337;
 var $fRec1087916=(($this1+527532)|0);
 var $arrayidx7917=(($fRec1087916)|0);
 var $4338=HEAPF32[(($arrayidx7917)>>2)];
 var $fRec1087918=(($this1+527532)|0);
 var $arrayidx7919=(($fRec1087918+4)|0);
 HEAPF32[(($arrayidx7919)>>2)]=$4338;
 var $fRec1077920=(($this1+527520)|0);
 var $arrayidx7921=(($fRec1077920+4)|0);
 var $4339=HEAPF32[(($arrayidx7921)>>2)];
 var $fRec1077922=(($this1+527520)|0);
 var $arrayidx7923=(($fRec1077922+8)|0);
 HEAPF32[(($arrayidx7923)>>2)]=$4339;
 var $fRec1077924=(($this1+527520)|0);
 var $arrayidx7925=(($fRec1077924)|0);
 var $4340=HEAPF32[(($arrayidx7925)>>2)];
 var $fRec1077926=(($this1+527520)|0);
 var $arrayidx7927=(($fRec1077926+4)|0);
 HEAPF32[(($arrayidx7927)>>2)]=$4340;
 var $fRec1067928=(($this1+527508)|0);
 var $arrayidx7929=(($fRec1067928+4)|0);
 var $4341=HEAPF32[(($arrayidx7929)>>2)];
 var $fRec1067930=(($this1+527508)|0);
 var $arrayidx7931=(($fRec1067930+8)|0);
 HEAPF32[(($arrayidx7931)>>2)]=$4341;
 var $fRec1067932=(($this1+527508)|0);
 var $arrayidx7933=(($fRec1067932)|0);
 var $4342=HEAPF32[(($arrayidx7933)>>2)];
 var $fRec1067934=(($this1+527508)|0);
 var $arrayidx7935=(($fRec1067934+4)|0);
 HEAPF32[(($arrayidx7935)>>2)]=$4342;
 var $fRec1167936=(($this1+527500)|0);
 var $arrayidx7937=(($fRec1167936)|0);
 var $4343=HEAPF32[(($arrayidx7937)>>2)];
 var $fRec1167938=(($this1+527500)|0);
 var $arrayidx7939=(($fRec1167938+4)|0);
 HEAPF32[(($arrayidx7939)>>2)]=$4343;
 var $fRec1157940=(($this1+527488)|0);
 var $arrayidx7941=(($fRec1157940+4)|0);
 var $4344=HEAPF32[(($arrayidx7941)>>2)];
 var $fRec1157942=(($this1+527488)|0);
 var $arrayidx7943=(($fRec1157942+8)|0);
 HEAPF32[(($arrayidx7943)>>2)]=$4344;
 var $fRec1157944=(($this1+527488)|0);
 var $arrayidx7945=(($fRec1157944)|0);
 var $4345=HEAPF32[(($arrayidx7945)>>2)];
 var $fRec1157946=(($this1+527488)|0);
 var $arrayidx7947=(($fRec1157946+4)|0);
 HEAPF32[(($arrayidx7947)>>2)]=$4345;
 var $fVec147948=(($this1+527480)|0);
 var $arrayidx7949=(($fVec147948)|0);
 var $4346=HEAPF32[(($arrayidx7949)>>2)];
 var $fVec147950=(($this1+527480)|0);
 var $arrayidx7951=(($fVec147950+4)|0);
 HEAPF32[(($arrayidx7951)>>2)]=$4346;
 var $fRec1147952=(($this1+527472)|0);
 var $arrayidx7953=(($fRec1147952)|0);
 var $4347=HEAPF32[(($arrayidx7953)>>2)];
 var $fRec1147954=(($this1+527472)|0);
 var $arrayidx7955=(($fRec1147954+4)|0);
 HEAPF32[(($arrayidx7955)>>2)]=$4347;
 var $fRec1137956=(($this1+527460)|0);
 var $arrayidx7957=(($fRec1137956+4)|0);
 var $4348=HEAPF32[(($arrayidx7957)>>2)];
 var $fRec1137958=(($this1+527460)|0);
 var $arrayidx7959=(($fRec1137958+8)|0);
 HEAPF32[(($arrayidx7959)>>2)]=$4348;
 var $fRec1137960=(($this1+527460)|0);
 var $arrayidx7961=(($fRec1137960)|0);
 var $4349=HEAPF32[(($arrayidx7961)>>2)];
 var $fRec1137962=(($this1+527460)|0);
 var $arrayidx7963=(($fRec1137962+4)|0);
 HEAPF32[(($arrayidx7963)>>2)]=$4349;
 var $fRec1127964=(($this1+527448)|0);
 var $arrayidx7965=(($fRec1127964+4)|0);
 var $4350=HEAPF32[(($arrayidx7965)>>2)];
 var $fRec1127966=(($this1+527448)|0);
 var $arrayidx7967=(($fRec1127966+8)|0);
 HEAPF32[(($arrayidx7967)>>2)]=$4350;
 var $fRec1127968=(($this1+527448)|0);
 var $arrayidx7969=(($fRec1127968)|0);
 var $4351=HEAPF32[(($arrayidx7969)>>2)];
 var $fRec1127970=(($this1+527448)|0);
 var $arrayidx7971=(($fRec1127970+4)|0);
 HEAPF32[(($arrayidx7971)>>2)]=$4351;
 var $fRec1117972=(($this1+527436)|0);
 var $arrayidx7973=(($fRec1117972+4)|0);
 var $4352=HEAPF32[(($arrayidx7973)>>2)];
 var $fRec1117974=(($this1+527436)|0);
 var $arrayidx7975=(($fRec1117974+8)|0);
 HEAPF32[(($arrayidx7975)>>2)]=$4352;
 var $fRec1117976=(($this1+527436)|0);
 var $arrayidx7977=(($fRec1117976)|0);
 var $4353=HEAPF32[(($arrayidx7977)>>2)];
 var $fRec1117978=(($this1+527436)|0);
 var $arrayidx7979=(($fRec1117978+4)|0);
 HEAPF32[(($arrayidx7979)>>2)]=$4353;
 var $fRec1217980=(($this1+527428)|0);
 var $arrayidx7981=(($fRec1217980)|0);
 var $4354=HEAPF32[(($arrayidx7981)>>2)];
 var $fRec1217982=(($this1+527428)|0);
 var $arrayidx7983=(($fRec1217982+4)|0);
 HEAPF32[(($arrayidx7983)>>2)]=$4354;
 var $fRec1207984=(($this1+527416)|0);
 var $arrayidx7985=(($fRec1207984+4)|0);
 var $4355=HEAPF32[(($arrayidx7985)>>2)];
 var $fRec1207986=(($this1+527416)|0);
 var $arrayidx7987=(($fRec1207986+8)|0);
 HEAPF32[(($arrayidx7987)>>2)]=$4355;
 var $fRec1207988=(($this1+527416)|0);
 var $arrayidx7989=(($fRec1207988)|0);
 var $4356=HEAPF32[(($arrayidx7989)>>2)];
 var $fRec1207990=(($this1+527416)|0);
 var $arrayidx7991=(($fRec1207990+4)|0);
 HEAPF32[(($arrayidx7991)>>2)]=$4356;
 var $fVec157992=(($this1+527408)|0);
 var $arrayidx7993=(($fVec157992)|0);
 var $4357=HEAPF32[(($arrayidx7993)>>2)];
 var $fVec157994=(($this1+527408)|0);
 var $arrayidx7995=(($fVec157994+4)|0);
 HEAPF32[(($arrayidx7995)>>2)]=$4357;
 var $fRec1197996=(($this1+527400)|0);
 var $arrayidx7997=(($fRec1197996)|0);
 var $4358=HEAPF32[(($arrayidx7997)>>2)];
 var $fRec1197998=(($this1+527400)|0);
 var $arrayidx7999=(($fRec1197998+4)|0);
 HEAPF32[(($arrayidx7999)>>2)]=$4358;
 var $fRec1188000=(($this1+527388)|0);
 var $arrayidx8001=(($fRec1188000+4)|0);
 var $4359=HEAPF32[(($arrayidx8001)>>2)];
 var $fRec1188002=(($this1+527388)|0);
 var $arrayidx8003=(($fRec1188002+8)|0);
 HEAPF32[(($arrayidx8003)>>2)]=$4359;
 var $fRec1188004=(($this1+527388)|0);
 var $arrayidx8005=(($fRec1188004)|0);
 var $4360=HEAPF32[(($arrayidx8005)>>2)];
 var $fRec1188006=(($this1+527388)|0);
 var $arrayidx8007=(($fRec1188006+4)|0);
 HEAPF32[(($arrayidx8007)>>2)]=$4360;
 var $fRec1178008=(($this1+527376)|0);
 var $arrayidx8009=(($fRec1178008+4)|0);
 var $4361=HEAPF32[(($arrayidx8009)>>2)];
 var $fRec1178010=(($this1+527376)|0);
 var $arrayidx8011=(($fRec1178010+8)|0);
 HEAPF32[(($arrayidx8011)>>2)]=$4361;
 var $fRec1178012=(($this1+527376)|0);
 var $arrayidx8013=(($fRec1178012)|0);
 var $4362=HEAPF32[(($arrayidx8013)>>2)];
 var $fRec1178014=(($this1+527376)|0);
 var $arrayidx8015=(($fRec1178014+4)|0);
 HEAPF32[(($arrayidx8015)>>2)]=$4362;
 var $fRec1258016=(($this1+527368)|0);
 var $arrayidx8017=(($fRec1258016)|0);
 var $4363=HEAPF32[(($arrayidx8017)>>2)];
 var $fRec1258018=(($this1+527368)|0);
 var $arrayidx8019=(($fRec1258018+4)|0);
 HEAPF32[(($arrayidx8019)>>2)]=$4363;
 var $fRec1248020=(($this1+527356)|0);
 var $arrayidx8021=(($fRec1248020+4)|0);
 var $4364=HEAPF32[(($arrayidx8021)>>2)];
 var $fRec1248022=(($this1+527356)|0);
 var $arrayidx8023=(($fRec1248022+8)|0);
 HEAPF32[(($arrayidx8023)>>2)]=$4364;
 var $fRec1248024=(($this1+527356)|0);
 var $arrayidx8025=(($fRec1248024)|0);
 var $4365=HEAPF32[(($arrayidx8025)>>2)];
 var $fRec1248026=(($this1+527356)|0);
 var $arrayidx8027=(($fRec1248026+4)|0);
 HEAPF32[(($arrayidx8027)>>2)]=$4365;
 var $fVec168028=(($this1+527348)|0);
 var $arrayidx8029=(($fVec168028)|0);
 var $4366=HEAPF32[(($arrayidx8029)>>2)];
 var $fVec168030=(($this1+527348)|0);
 var $arrayidx8031=(($fVec168030+4)|0);
 HEAPF32[(($arrayidx8031)>>2)]=$4366;
 var $fRec1238032=(($this1+527340)|0);
 var $arrayidx8033=(($fRec1238032)|0);
 var $4367=HEAPF32[(($arrayidx8033)>>2)];
 var $fRec1238034=(($this1+527340)|0);
 var $arrayidx8035=(($fRec1238034+4)|0);
 HEAPF32[(($arrayidx8035)>>2)]=$4367;
 var $fRec1228036=(($this1+527328)|0);
 var $arrayidx8037=(($fRec1228036+4)|0);
 var $4368=HEAPF32[(($arrayidx8037)>>2)];
 var $fRec1228038=(($this1+527328)|0);
 var $arrayidx8039=(($fRec1228038+8)|0);
 HEAPF32[(($arrayidx8039)>>2)]=$4368;
 var $fRec1228040=(($this1+527328)|0);
 var $arrayidx8041=(($fRec1228040)|0);
 var $4369=HEAPF32[(($arrayidx8041)>>2)];
 var $fRec1228042=(($this1+527328)|0);
 var $arrayidx8043=(($fRec1228042+4)|0);
 HEAPF32[(($arrayidx8043)>>2)]=$4369;
 var $fRec1278044=(($this1+527320)|0);
 var $arrayidx8045=(($fRec1278044)|0);
 var $4370=HEAPF32[(($arrayidx8045)>>2)];
 var $fRec1278046=(($this1+527320)|0);
 var $arrayidx8047=(($fRec1278046+4)|0);
 HEAPF32[(($arrayidx8047)>>2)]=$4370;
 var $fRec1268048=(($this1+527308)|0);
 var $arrayidx8049=(($fRec1268048+4)|0);
 var $4371=HEAPF32[(($arrayidx8049)>>2)];
 var $fRec1268050=(($this1+527308)|0);
 var $arrayidx8051=(($fRec1268050+8)|0);
 HEAPF32[(($arrayidx8051)>>2)]=$4371;
 var $fRec1268052=(($this1+527308)|0);
 var $arrayidx8053=(($fRec1268052)|0);
 var $4372=HEAPF32[(($arrayidx8053)>>2)];
 var $fRec1268054=(($this1+527308)|0);
 var $arrayidx8055=(($fRec1268054+4)|0);
 HEAPF32[(($arrayidx8055)>>2)]=$4372;
 var $fRec1328056=(($this1+527300)|0);
 var $arrayidx8057=(($fRec1328056)|0);
 var $4373=HEAPF32[(($arrayidx8057)>>2)];
 var $fRec1328058=(($this1+527300)|0);
 var $arrayidx8059=(($fRec1328058+4)|0);
 HEAPF32[(($arrayidx8059)>>2)]=$4373;
 var $fRec1318060=(($this1+527288)|0);
 var $arrayidx8061=(($fRec1318060+4)|0);
 var $4374=HEAPF32[(($arrayidx8061)>>2)];
 var $fRec1318062=(($this1+527288)|0);
 var $arrayidx8063=(($fRec1318062+8)|0);
 HEAPF32[(($arrayidx8063)>>2)]=$4374;
 var $fRec1318064=(($this1+527288)|0);
 var $arrayidx8065=(($fRec1318064)|0);
 var $4375=HEAPF32[(($arrayidx8065)>>2)];
 var $fRec1318066=(($this1+527288)|0);
 var $arrayidx8067=(($fRec1318066+4)|0);
 HEAPF32[(($arrayidx8067)>>2)]=$4375;
 var $fRec1308068=(($this1+527276)|0);
 var $arrayidx8069=(($fRec1308068+4)|0);
 var $4376=HEAPF32[(($arrayidx8069)>>2)];
 var $fRec1308070=(($this1+527276)|0);
 var $arrayidx8071=(($fRec1308070+8)|0);
 HEAPF32[(($arrayidx8071)>>2)]=$4376;
 var $fRec1308072=(($this1+527276)|0);
 var $arrayidx8073=(($fRec1308072)|0);
 var $4377=HEAPF32[(($arrayidx8073)>>2)];
 var $fRec1308074=(($this1+527276)|0);
 var $arrayidx8075=(($fRec1308074+4)|0);
 HEAPF32[(($arrayidx8075)>>2)]=$4377;
 var $fRec1298076=(($this1+527264)|0);
 var $arrayidx8077=(($fRec1298076+4)|0);
 var $4378=HEAPF32[(($arrayidx8077)>>2)];
 var $fRec1298078=(($this1+527264)|0);
 var $arrayidx8079=(($fRec1298078+8)|0);
 HEAPF32[(($arrayidx8079)>>2)]=$4378;
 var $fRec1298080=(($this1+527264)|0);
 var $arrayidx8081=(($fRec1298080)|0);
 var $4379=HEAPF32[(($arrayidx8081)>>2)];
 var $fRec1298082=(($this1+527264)|0);
 var $arrayidx8083=(($fRec1298082+4)|0);
 HEAPF32[(($arrayidx8083)>>2)]=$4379;
 var $fRec1288084=(($this1+527252)|0);
 var $arrayidx8085=(($fRec1288084+4)|0);
 var $4380=HEAPF32[(($arrayidx8085)>>2)];
 var $fRec1288086=(($this1+527252)|0);
 var $arrayidx8087=(($fRec1288086+8)|0);
 HEAPF32[(($arrayidx8087)>>2)]=$4380;
 var $fRec1288088=(($this1+527252)|0);
 var $arrayidx8089=(($fRec1288088)|0);
 var $4381=HEAPF32[(($arrayidx8089)>>2)];
 var $fRec1288090=(($this1+527252)|0);
 var $arrayidx8091=(($fRec1288090+4)|0);
 HEAPF32[(($arrayidx8091)>>2)]=$4381;
 var $fRec1388092=(($this1+527244)|0);
 var $arrayidx8093=(($fRec1388092)|0);
 var $4382=HEAPF32[(($arrayidx8093)>>2)];
 var $fRec1388094=(($this1+527244)|0);
 var $arrayidx8095=(($fRec1388094+4)|0);
 HEAPF32[(($arrayidx8095)>>2)]=$4382;
 var $fRec1378096=(($this1+527232)|0);
 var $arrayidx8097=(($fRec1378096+4)|0);
 var $4383=HEAPF32[(($arrayidx8097)>>2)];
 var $fRec1378098=(($this1+527232)|0);
 var $arrayidx8099=(($fRec1378098+8)|0);
 HEAPF32[(($arrayidx8099)>>2)]=$4383;
 var $fRec1378100=(($this1+527232)|0);
 var $arrayidx8101=(($fRec1378100)|0);
 var $4384=HEAPF32[(($arrayidx8101)>>2)];
 var $fRec1378102=(($this1+527232)|0);
 var $arrayidx8103=(($fRec1378102+4)|0);
 HEAPF32[(($arrayidx8103)>>2)]=$4384;
 var $fVec178104=(($this1+527224)|0);
 var $arrayidx8105=(($fVec178104)|0);
 var $4385=HEAPF32[(($arrayidx8105)>>2)];
 var $fVec178106=(($this1+527224)|0);
 var $arrayidx8107=(($fVec178106+4)|0);
 HEAPF32[(($arrayidx8107)>>2)]=$4385;
 var $fRec1368108=(($this1+527216)|0);
 var $arrayidx8109=(($fRec1368108)|0);
 var $4386=HEAPF32[(($arrayidx8109)>>2)];
 var $fRec1368110=(($this1+527216)|0);
 var $arrayidx8111=(($fRec1368110+4)|0);
 HEAPF32[(($arrayidx8111)>>2)]=$4386;
 var $fRec1358112=(($this1+527204)|0);
 var $arrayidx8113=(($fRec1358112+4)|0);
 var $4387=HEAPF32[(($arrayidx8113)>>2)];
 var $fRec1358114=(($this1+527204)|0);
 var $arrayidx8115=(($fRec1358114+8)|0);
 HEAPF32[(($arrayidx8115)>>2)]=$4387;
 var $fRec1358116=(($this1+527204)|0);
 var $arrayidx8117=(($fRec1358116)|0);
 var $4388=HEAPF32[(($arrayidx8117)>>2)];
 var $fRec1358118=(($this1+527204)|0);
 var $arrayidx8119=(($fRec1358118+4)|0);
 HEAPF32[(($arrayidx8119)>>2)]=$4388;
 var $fRec1348120=(($this1+527192)|0);
 var $arrayidx8121=(($fRec1348120+4)|0);
 var $4389=HEAPF32[(($arrayidx8121)>>2)];
 var $fRec1348122=(($this1+527192)|0);
 var $arrayidx8123=(($fRec1348122+8)|0);
 HEAPF32[(($arrayidx8123)>>2)]=$4389;
 var $fRec1348124=(($this1+527192)|0);
 var $arrayidx8125=(($fRec1348124)|0);
 var $4390=HEAPF32[(($arrayidx8125)>>2)];
 var $fRec1348126=(($this1+527192)|0);
 var $arrayidx8127=(($fRec1348126+4)|0);
 HEAPF32[(($arrayidx8127)>>2)]=$4390;
 var $fRec1338128=(($this1+527180)|0);
 var $arrayidx8129=(($fRec1338128+4)|0);
 var $4391=HEAPF32[(($arrayidx8129)>>2)];
 var $fRec1338130=(($this1+527180)|0);
 var $arrayidx8131=(($fRec1338130+8)|0);
 HEAPF32[(($arrayidx8131)>>2)]=$4391;
 var $fRec1338132=(($this1+527180)|0);
 var $arrayidx8133=(($fRec1338132)|0);
 var $4392=HEAPF32[(($arrayidx8133)>>2)];
 var $fRec1338134=(($this1+527180)|0);
 var $arrayidx8135=(($fRec1338134+4)|0);
 HEAPF32[(($arrayidx8135)>>2)]=$4392;
 var $fRec1438136=(($this1+527172)|0);
 var $arrayidx8137=(($fRec1438136)|0);
 var $4393=HEAPF32[(($arrayidx8137)>>2)];
 var $fRec1438138=(($this1+527172)|0);
 var $arrayidx8139=(($fRec1438138+4)|0);
 HEAPF32[(($arrayidx8139)>>2)]=$4393;
 var $fRec1428140=(($this1+527160)|0);
 var $arrayidx8141=(($fRec1428140+4)|0);
 var $4394=HEAPF32[(($arrayidx8141)>>2)];
 var $fRec1428142=(($this1+527160)|0);
 var $arrayidx8143=(($fRec1428142+8)|0);
 HEAPF32[(($arrayidx8143)>>2)]=$4394;
 var $fRec1428144=(($this1+527160)|0);
 var $arrayidx8145=(($fRec1428144)|0);
 var $4395=HEAPF32[(($arrayidx8145)>>2)];
 var $fRec1428146=(($this1+527160)|0);
 var $arrayidx8147=(($fRec1428146+4)|0);
 HEAPF32[(($arrayidx8147)>>2)]=$4395;
 var $fVec188148=(($this1+527152)|0);
 var $arrayidx8149=(($fVec188148)|0);
 var $4396=HEAPF32[(($arrayidx8149)>>2)];
 var $fVec188150=(($this1+527152)|0);
 var $arrayidx8151=(($fVec188150+4)|0);
 HEAPF32[(($arrayidx8151)>>2)]=$4396;
 var $fRec1418152=(($this1+527144)|0);
 var $arrayidx8153=(($fRec1418152)|0);
 var $4397=HEAPF32[(($arrayidx8153)>>2)];
 var $fRec1418154=(($this1+527144)|0);
 var $arrayidx8155=(($fRec1418154+4)|0);
 HEAPF32[(($arrayidx8155)>>2)]=$4397;
 var $fRec1408156=(($this1+527132)|0);
 var $arrayidx8157=(($fRec1408156+4)|0);
 var $4398=HEAPF32[(($arrayidx8157)>>2)];
 var $fRec1408158=(($this1+527132)|0);
 var $arrayidx8159=(($fRec1408158+8)|0);
 HEAPF32[(($arrayidx8159)>>2)]=$4398;
 var $fRec1408160=(($this1+527132)|0);
 var $arrayidx8161=(($fRec1408160)|0);
 var $4399=HEAPF32[(($arrayidx8161)>>2)];
 var $fRec1408162=(($this1+527132)|0);
 var $arrayidx8163=(($fRec1408162+4)|0);
 HEAPF32[(($arrayidx8163)>>2)]=$4399;
 var $fRec1398164=(($this1+527120)|0);
 var $arrayidx8165=(($fRec1398164+4)|0);
 var $4400=HEAPF32[(($arrayidx8165)>>2)];
 var $fRec1398166=(($this1+527120)|0);
 var $arrayidx8167=(($fRec1398166+8)|0);
 HEAPF32[(($arrayidx8167)>>2)]=$4400;
 var $fRec1398168=(($this1+527120)|0);
 var $arrayidx8169=(($fRec1398168)|0);
 var $4401=HEAPF32[(($arrayidx8169)>>2)];
 var $fRec1398170=(($this1+527120)|0);
 var $arrayidx8171=(($fRec1398170+4)|0);
 HEAPF32[(($arrayidx8171)>>2)]=$4401;
 var $fRec1478172=(($this1+527112)|0);
 var $arrayidx8173=(($fRec1478172)|0);
 var $4402=HEAPF32[(($arrayidx8173)>>2)];
 var $fRec1478174=(($this1+527112)|0);
 var $arrayidx8175=(($fRec1478174+4)|0);
 HEAPF32[(($arrayidx8175)>>2)]=$4402;
 var $fRec1468176=(($this1+527100)|0);
 var $arrayidx8177=(($fRec1468176+4)|0);
 var $4403=HEAPF32[(($arrayidx8177)>>2)];
 var $fRec1468178=(($this1+527100)|0);
 var $arrayidx8179=(($fRec1468178+8)|0);
 HEAPF32[(($arrayidx8179)>>2)]=$4403;
 var $fRec1468180=(($this1+527100)|0);
 var $arrayidx8181=(($fRec1468180)|0);
 var $4404=HEAPF32[(($arrayidx8181)>>2)];
 var $fRec1468182=(($this1+527100)|0);
 var $arrayidx8183=(($fRec1468182+4)|0);
 HEAPF32[(($arrayidx8183)>>2)]=$4404;
 var $fVec198184=(($this1+527092)|0);
 var $arrayidx8185=(($fVec198184)|0);
 var $4405=HEAPF32[(($arrayidx8185)>>2)];
 var $fVec198186=(($this1+527092)|0);
 var $arrayidx8187=(($fVec198186+4)|0);
 HEAPF32[(($arrayidx8187)>>2)]=$4405;
 var $fRec1458188=(($this1+527084)|0);
 var $arrayidx8189=(($fRec1458188)|0);
 var $4406=HEAPF32[(($arrayidx8189)>>2)];
 var $fRec1458190=(($this1+527084)|0);
 var $arrayidx8191=(($fRec1458190+4)|0);
 HEAPF32[(($arrayidx8191)>>2)]=$4406;
 var $fRec1448192=(($this1+527072)|0);
 var $arrayidx8193=(($fRec1448192+4)|0);
 var $4407=HEAPF32[(($arrayidx8193)>>2)];
 var $fRec1448194=(($this1+527072)|0);
 var $arrayidx8195=(($fRec1448194+8)|0);
 HEAPF32[(($arrayidx8195)>>2)]=$4407;
 var $fRec1448196=(($this1+527072)|0);
 var $arrayidx8197=(($fRec1448196)|0);
 var $4408=HEAPF32[(($arrayidx8197)>>2)];
 var $fRec1448198=(($this1+527072)|0);
 var $arrayidx8199=(($fRec1448198+4)|0);
 HEAPF32[(($arrayidx8199)>>2)]=$4408;
 var $fRec1498200=(($this1+527064)|0);
 var $arrayidx8201=(($fRec1498200)|0);
 var $4409=HEAPF32[(($arrayidx8201)>>2)];
 var $fRec1498202=(($this1+527064)|0);
 var $arrayidx8203=(($fRec1498202+4)|0);
 HEAPF32[(($arrayidx8203)>>2)]=$4409;
 var $fRec1488204=(($this1+527052)|0);
 var $arrayidx8205=(($fRec1488204+4)|0);
 var $4410=HEAPF32[(($arrayidx8205)>>2)];
 var $fRec1488206=(($this1+527052)|0);
 var $arrayidx8207=(($fRec1488206+8)|0);
 HEAPF32[(($arrayidx8207)>>2)]=$4410;
 var $fRec1488208=(($this1+527052)|0);
 var $arrayidx8209=(($fRec1488208)|0);
 var $4411=HEAPF32[(($arrayidx8209)>>2)];
 var $fRec1488210=(($this1+527052)|0);
 var $arrayidx8211=(($fRec1488210+4)|0);
 HEAPF32[(($arrayidx8211)>>2)]=$4411;
 var $fRec1548212=(($this1+527044)|0);
 var $arrayidx8213=(($fRec1548212)|0);
 var $4412=HEAPF32[(($arrayidx8213)>>2)];
 var $fRec1548214=(($this1+527044)|0);
 var $arrayidx8215=(($fRec1548214+4)|0);
 HEAPF32[(($arrayidx8215)>>2)]=$4412;
 var $fRec1538216=(($this1+527032)|0);
 var $arrayidx8217=(($fRec1538216+4)|0);
 var $4413=HEAPF32[(($arrayidx8217)>>2)];
 var $fRec1538218=(($this1+527032)|0);
 var $arrayidx8219=(($fRec1538218+8)|0);
 HEAPF32[(($arrayidx8219)>>2)]=$4413;
 var $fRec1538220=(($this1+527032)|0);
 var $arrayidx8221=(($fRec1538220)|0);
 var $4414=HEAPF32[(($arrayidx8221)>>2)];
 var $fRec1538222=(($this1+527032)|0);
 var $arrayidx8223=(($fRec1538222+4)|0);
 HEAPF32[(($arrayidx8223)>>2)]=$4414;
 var $fRec1528224=(($this1+527020)|0);
 var $arrayidx8225=(($fRec1528224+4)|0);
 var $4415=HEAPF32[(($arrayidx8225)>>2)];
 var $fRec1528226=(($this1+527020)|0);
 var $arrayidx8227=(($fRec1528226+8)|0);
 HEAPF32[(($arrayidx8227)>>2)]=$4415;
 var $fRec1528228=(($this1+527020)|0);
 var $arrayidx8229=(($fRec1528228)|0);
 var $4416=HEAPF32[(($arrayidx8229)>>2)];
 var $fRec1528230=(($this1+527020)|0);
 var $arrayidx8231=(($fRec1528230+4)|0);
 HEAPF32[(($arrayidx8231)>>2)]=$4416;
 var $fRec1518232=(($this1+527008)|0);
 var $arrayidx8233=(($fRec1518232+4)|0);
 var $4417=HEAPF32[(($arrayidx8233)>>2)];
 var $fRec1518234=(($this1+527008)|0);
 var $arrayidx8235=(($fRec1518234+8)|0);
 HEAPF32[(($arrayidx8235)>>2)]=$4417;
 var $fRec1518236=(($this1+527008)|0);
 var $arrayidx8237=(($fRec1518236)|0);
 var $4418=HEAPF32[(($arrayidx8237)>>2)];
 var $fRec1518238=(($this1+527008)|0);
 var $arrayidx8239=(($fRec1518238+4)|0);
 HEAPF32[(($arrayidx8239)>>2)]=$4418;
 var $fRec1508240=(($this1+526996)|0);
 var $arrayidx8241=(($fRec1508240+4)|0);
 var $4419=HEAPF32[(($arrayidx8241)>>2)];
 var $fRec1508242=(($this1+526996)|0);
 var $arrayidx8243=(($fRec1508242+8)|0);
 HEAPF32[(($arrayidx8243)>>2)]=$4419;
 var $fRec1508244=(($this1+526996)|0);
 var $arrayidx8245=(($fRec1508244)|0);
 var $4420=HEAPF32[(($arrayidx8245)>>2)];
 var $fRec1508246=(($this1+526996)|0);
 var $arrayidx8247=(($fRec1508246+4)|0);
 HEAPF32[(($arrayidx8247)>>2)]=$4420;
 var $fRec1608248=(($this1+526988)|0);
 var $arrayidx8249=(($fRec1608248)|0);
 var $4421=HEAPF32[(($arrayidx8249)>>2)];
 var $fRec1608250=(($this1+526988)|0);
 var $arrayidx8251=(($fRec1608250+4)|0);
 HEAPF32[(($arrayidx8251)>>2)]=$4421;
 var $fRec1598252=(($this1+526976)|0);
 var $arrayidx8253=(($fRec1598252+4)|0);
 var $4422=HEAPF32[(($arrayidx8253)>>2)];
 var $fRec1598254=(($this1+526976)|0);
 var $arrayidx8255=(($fRec1598254+8)|0);
 HEAPF32[(($arrayidx8255)>>2)]=$4422;
 var $fRec1598256=(($this1+526976)|0);
 var $arrayidx8257=(($fRec1598256)|0);
 var $4423=HEAPF32[(($arrayidx8257)>>2)];
 var $fRec1598258=(($this1+526976)|0);
 var $arrayidx8259=(($fRec1598258+4)|0);
 HEAPF32[(($arrayidx8259)>>2)]=$4423;
 var $fVec208260=(($this1+526968)|0);
 var $arrayidx8261=(($fVec208260)|0);
 var $4424=HEAPF32[(($arrayidx8261)>>2)];
 var $fVec208262=(($this1+526968)|0);
 var $arrayidx8263=(($fVec208262+4)|0);
 HEAPF32[(($arrayidx8263)>>2)]=$4424;
 var $fRec1588264=(($this1+526960)|0);
 var $arrayidx8265=(($fRec1588264)|0);
 var $4425=HEAPF32[(($arrayidx8265)>>2)];
 var $fRec1588266=(($this1+526960)|0);
 var $arrayidx8267=(($fRec1588266+4)|0);
 HEAPF32[(($arrayidx8267)>>2)]=$4425;
 var $fRec1578268=(($this1+526948)|0);
 var $arrayidx8269=(($fRec1578268+4)|0);
 var $4426=HEAPF32[(($arrayidx8269)>>2)];
 var $fRec1578270=(($this1+526948)|0);
 var $arrayidx8271=(($fRec1578270+8)|0);
 HEAPF32[(($arrayidx8271)>>2)]=$4426;
 var $fRec1578272=(($this1+526948)|0);
 var $arrayidx8273=(($fRec1578272)|0);
 var $4427=HEAPF32[(($arrayidx8273)>>2)];
 var $fRec1578274=(($this1+526948)|0);
 var $arrayidx8275=(($fRec1578274+4)|0);
 HEAPF32[(($arrayidx8275)>>2)]=$4427;
 var $fRec1568276=(($this1+526936)|0);
 var $arrayidx8277=(($fRec1568276+4)|0);
 var $4428=HEAPF32[(($arrayidx8277)>>2)];
 var $fRec1568278=(($this1+526936)|0);
 var $arrayidx8279=(($fRec1568278+8)|0);
 HEAPF32[(($arrayidx8279)>>2)]=$4428;
 var $fRec1568280=(($this1+526936)|0);
 var $arrayidx8281=(($fRec1568280)|0);
 var $4429=HEAPF32[(($arrayidx8281)>>2)];
 var $fRec1568282=(($this1+526936)|0);
 var $arrayidx8283=(($fRec1568282+4)|0);
 HEAPF32[(($arrayidx8283)>>2)]=$4429;
 var $fRec1558284=(($this1+526924)|0);
 var $arrayidx8285=(($fRec1558284+4)|0);
 var $4430=HEAPF32[(($arrayidx8285)>>2)];
 var $fRec1558286=(($this1+526924)|0);
 var $arrayidx8287=(($fRec1558286+8)|0);
 HEAPF32[(($arrayidx8287)>>2)]=$4430;
 var $fRec1558288=(($this1+526924)|0);
 var $arrayidx8289=(($fRec1558288)|0);
 var $4431=HEAPF32[(($arrayidx8289)>>2)];
 var $fRec1558290=(($this1+526924)|0);
 var $arrayidx8291=(($fRec1558290+4)|0);
 HEAPF32[(($arrayidx8291)>>2)]=$4431;
 var $fRec1658292=(($this1+526916)|0);
 var $arrayidx8293=(($fRec1658292)|0);
 var $4432=HEAPF32[(($arrayidx8293)>>2)];
 var $fRec1658294=(($this1+526916)|0);
 var $arrayidx8295=(($fRec1658294+4)|0);
 HEAPF32[(($arrayidx8295)>>2)]=$4432;
 var $fRec1648296=(($this1+526904)|0);
 var $arrayidx8297=(($fRec1648296+4)|0);
 var $4433=HEAPF32[(($arrayidx8297)>>2)];
 var $fRec1648298=(($this1+526904)|0);
 var $arrayidx8299=(($fRec1648298+8)|0);
 HEAPF32[(($arrayidx8299)>>2)]=$4433;
 var $fRec1648300=(($this1+526904)|0);
 var $arrayidx8301=(($fRec1648300)|0);
 var $4434=HEAPF32[(($arrayidx8301)>>2)];
 var $fRec1648302=(($this1+526904)|0);
 var $arrayidx8303=(($fRec1648302+4)|0);
 HEAPF32[(($arrayidx8303)>>2)]=$4434;
 var $fVec218304=(($this1+526896)|0);
 var $arrayidx8305=(($fVec218304)|0);
 var $4435=HEAPF32[(($arrayidx8305)>>2)];
 var $fVec218306=(($this1+526896)|0);
 var $arrayidx8307=(($fVec218306+4)|0);
 HEAPF32[(($arrayidx8307)>>2)]=$4435;
 var $fRec1638308=(($this1+526888)|0);
 var $arrayidx8309=(($fRec1638308)|0);
 var $4436=HEAPF32[(($arrayidx8309)>>2)];
 var $fRec1638310=(($this1+526888)|0);
 var $arrayidx8311=(($fRec1638310+4)|0);
 HEAPF32[(($arrayidx8311)>>2)]=$4436;
 var $fRec1628312=(($this1+526876)|0);
 var $arrayidx8313=(($fRec1628312+4)|0);
 var $4437=HEAPF32[(($arrayidx8313)>>2)];
 var $fRec1628314=(($this1+526876)|0);
 var $arrayidx8315=(($fRec1628314+8)|0);
 HEAPF32[(($arrayidx8315)>>2)]=$4437;
 var $fRec1628316=(($this1+526876)|0);
 var $arrayidx8317=(($fRec1628316)|0);
 var $4438=HEAPF32[(($arrayidx8317)>>2)];
 var $fRec1628318=(($this1+526876)|0);
 var $arrayidx8319=(($fRec1628318+4)|0);
 HEAPF32[(($arrayidx8319)>>2)]=$4438;
 var $fRec1618320=(($this1+526864)|0);
 var $arrayidx8321=(($fRec1618320+4)|0);
 var $4439=HEAPF32[(($arrayidx8321)>>2)];
 var $fRec1618322=(($this1+526864)|0);
 var $arrayidx8323=(($fRec1618322+8)|0);
 HEAPF32[(($arrayidx8323)>>2)]=$4439;
 var $fRec1618324=(($this1+526864)|0);
 var $arrayidx8325=(($fRec1618324)|0);
 var $4440=HEAPF32[(($arrayidx8325)>>2)];
 var $fRec1618326=(($this1+526864)|0);
 var $arrayidx8327=(($fRec1618326+4)|0);
 HEAPF32[(($arrayidx8327)>>2)]=$4440;
 var $fRec1698328=(($this1+526856)|0);
 var $arrayidx8329=(($fRec1698328)|0);
 var $4441=HEAPF32[(($arrayidx8329)>>2)];
 var $fRec1698330=(($this1+526856)|0);
 var $arrayidx8331=(($fRec1698330+4)|0);
 HEAPF32[(($arrayidx8331)>>2)]=$4441;
 var $fRec1688332=(($this1+526844)|0);
 var $arrayidx8333=(($fRec1688332+4)|0);
 var $4442=HEAPF32[(($arrayidx8333)>>2)];
 var $fRec1688334=(($this1+526844)|0);
 var $arrayidx8335=(($fRec1688334+8)|0);
 HEAPF32[(($arrayidx8335)>>2)]=$4442;
 var $fRec1688336=(($this1+526844)|0);
 var $arrayidx8337=(($fRec1688336)|0);
 var $4443=HEAPF32[(($arrayidx8337)>>2)];
 var $fRec1688338=(($this1+526844)|0);
 var $arrayidx8339=(($fRec1688338+4)|0);
 HEAPF32[(($arrayidx8339)>>2)]=$4443;
 var $fVec228340=(($this1+526836)|0);
 var $arrayidx8341=(($fVec228340)|0);
 var $4444=HEAPF32[(($arrayidx8341)>>2)];
 var $fVec228342=(($this1+526836)|0);
 var $arrayidx8343=(($fVec228342+4)|0);
 HEAPF32[(($arrayidx8343)>>2)]=$4444;
 var $fRec1678344=(($this1+526828)|0);
 var $arrayidx8345=(($fRec1678344)|0);
 var $4445=HEAPF32[(($arrayidx8345)>>2)];
 var $fRec1678346=(($this1+526828)|0);
 var $arrayidx8347=(($fRec1678346+4)|0);
 HEAPF32[(($arrayidx8347)>>2)]=$4445;
 var $fRec1668348=(($this1+526816)|0);
 var $arrayidx8349=(($fRec1668348+4)|0);
 var $4446=HEAPF32[(($arrayidx8349)>>2)];
 var $fRec1668350=(($this1+526816)|0);
 var $arrayidx8351=(($fRec1668350+8)|0);
 HEAPF32[(($arrayidx8351)>>2)]=$4446;
 var $fRec1668352=(($this1+526816)|0);
 var $arrayidx8353=(($fRec1668352)|0);
 var $4447=HEAPF32[(($arrayidx8353)>>2)];
 var $fRec1668354=(($this1+526816)|0);
 var $arrayidx8355=(($fRec1668354+4)|0);
 HEAPF32[(($arrayidx8355)>>2)]=$4447;
 var $fRec1718356=(($this1+526808)|0);
 var $arrayidx8357=(($fRec1718356)|0);
 var $4448=HEAPF32[(($arrayidx8357)>>2)];
 var $fRec1718358=(($this1+526808)|0);
 var $arrayidx8359=(($fRec1718358+4)|0);
 HEAPF32[(($arrayidx8359)>>2)]=$4448;
 var $fRec1708360=(($this1+526796)|0);
 var $arrayidx8361=(($fRec1708360+4)|0);
 var $4449=HEAPF32[(($arrayidx8361)>>2)];
 var $fRec1708362=(($this1+526796)|0);
 var $arrayidx8363=(($fRec1708362+8)|0);
 HEAPF32[(($arrayidx8363)>>2)]=$4449;
 var $fRec1708364=(($this1+526796)|0);
 var $arrayidx8365=(($fRec1708364)|0);
 var $4450=HEAPF32[(($arrayidx8365)>>2)];
 var $fRec1708366=(($this1+526796)|0);
 var $arrayidx8367=(($fRec1708366+4)|0);
 HEAPF32[(($arrayidx8367)>>2)]=$4450;
 var $fRec1768368=(($this1+526788)|0);
 var $arrayidx8369=(($fRec1768368)|0);
 var $4451=HEAPF32[(($arrayidx8369)>>2)];
 var $fRec1768370=(($this1+526788)|0);
 var $arrayidx8371=(($fRec1768370+4)|0);
 HEAPF32[(($arrayidx8371)>>2)]=$4451;
 var $fRec1758372=(($this1+526776)|0);
 var $arrayidx8373=(($fRec1758372+4)|0);
 var $4452=HEAPF32[(($arrayidx8373)>>2)];
 var $fRec1758374=(($this1+526776)|0);
 var $arrayidx8375=(($fRec1758374+8)|0);
 HEAPF32[(($arrayidx8375)>>2)]=$4452;
 var $fRec1758376=(($this1+526776)|0);
 var $arrayidx8377=(($fRec1758376)|0);
 var $4453=HEAPF32[(($arrayidx8377)>>2)];
 var $fRec1758378=(($this1+526776)|0);
 var $arrayidx8379=(($fRec1758378+4)|0);
 HEAPF32[(($arrayidx8379)>>2)]=$4453;
 var $fRec1748380=(($this1+526764)|0);
 var $arrayidx8381=(($fRec1748380+4)|0);
 var $4454=HEAPF32[(($arrayidx8381)>>2)];
 var $fRec1748382=(($this1+526764)|0);
 var $arrayidx8383=(($fRec1748382+8)|0);
 HEAPF32[(($arrayidx8383)>>2)]=$4454;
 var $fRec1748384=(($this1+526764)|0);
 var $arrayidx8385=(($fRec1748384)|0);
 var $4455=HEAPF32[(($arrayidx8385)>>2)];
 var $fRec1748386=(($this1+526764)|0);
 var $arrayidx8387=(($fRec1748386+4)|0);
 HEAPF32[(($arrayidx8387)>>2)]=$4455;
 var $fRec1738388=(($this1+526752)|0);
 var $arrayidx8389=(($fRec1738388+4)|0);
 var $4456=HEAPF32[(($arrayidx8389)>>2)];
 var $fRec1738390=(($this1+526752)|0);
 var $arrayidx8391=(($fRec1738390+8)|0);
 HEAPF32[(($arrayidx8391)>>2)]=$4456;
 var $fRec1738392=(($this1+526752)|0);
 var $arrayidx8393=(($fRec1738392)|0);
 var $4457=HEAPF32[(($arrayidx8393)>>2)];
 var $fRec1738394=(($this1+526752)|0);
 var $arrayidx8395=(($fRec1738394+4)|0);
 HEAPF32[(($arrayidx8395)>>2)]=$4457;
 var $fRec1728396=(($this1+526740)|0);
 var $arrayidx8397=(($fRec1728396+4)|0);
 var $4458=HEAPF32[(($arrayidx8397)>>2)];
 var $fRec1728398=(($this1+526740)|0);
 var $arrayidx8399=(($fRec1728398+8)|0);
 HEAPF32[(($arrayidx8399)>>2)]=$4458;
 var $fRec1728400=(($this1+526740)|0);
 var $arrayidx8401=(($fRec1728400)|0);
 var $4459=HEAPF32[(($arrayidx8401)>>2)];
 var $fRec1728402=(($this1+526740)|0);
 var $arrayidx8403=(($fRec1728402+4)|0);
 HEAPF32[(($arrayidx8403)>>2)]=$4459;
 var $fRec1828404=(($this1+526732)|0);
 var $arrayidx8405=(($fRec1828404)|0);
 var $4460=HEAPF32[(($arrayidx8405)>>2)];
 var $fRec1828406=(($this1+526732)|0);
 var $arrayidx8407=(($fRec1828406+4)|0);
 HEAPF32[(($arrayidx8407)>>2)]=$4460;
 var $fRec1818408=(($this1+526720)|0);
 var $arrayidx8409=(($fRec1818408+4)|0);
 var $4461=HEAPF32[(($arrayidx8409)>>2)];
 var $fRec1818410=(($this1+526720)|0);
 var $arrayidx8411=(($fRec1818410+8)|0);
 HEAPF32[(($arrayidx8411)>>2)]=$4461;
 var $fRec1818412=(($this1+526720)|0);
 var $arrayidx8413=(($fRec1818412)|0);
 var $4462=HEAPF32[(($arrayidx8413)>>2)];
 var $fRec1818414=(($this1+526720)|0);
 var $arrayidx8415=(($fRec1818414+4)|0);
 HEAPF32[(($arrayidx8415)>>2)]=$4462;
 var $fVec238416=(($this1+526712)|0);
 var $arrayidx8417=(($fVec238416)|0);
 var $4463=HEAPF32[(($arrayidx8417)>>2)];
 var $fVec238418=(($this1+526712)|0);
 var $arrayidx8419=(($fVec238418+4)|0);
 HEAPF32[(($arrayidx8419)>>2)]=$4463;
 var $fRec1808420=(($this1+526704)|0);
 var $arrayidx8421=(($fRec1808420)|0);
 var $4464=HEAPF32[(($arrayidx8421)>>2)];
 var $fRec1808422=(($this1+526704)|0);
 var $arrayidx8423=(($fRec1808422+4)|0);
 HEAPF32[(($arrayidx8423)>>2)]=$4464;
 var $fRec1798424=(($this1+526692)|0);
 var $arrayidx8425=(($fRec1798424+4)|0);
 var $4465=HEAPF32[(($arrayidx8425)>>2)];
 var $fRec1798426=(($this1+526692)|0);
 var $arrayidx8427=(($fRec1798426+8)|0);
 HEAPF32[(($arrayidx8427)>>2)]=$4465;
 var $fRec1798428=(($this1+526692)|0);
 var $arrayidx8429=(($fRec1798428)|0);
 var $4466=HEAPF32[(($arrayidx8429)>>2)];
 var $fRec1798430=(($this1+526692)|0);
 var $arrayidx8431=(($fRec1798430+4)|0);
 HEAPF32[(($arrayidx8431)>>2)]=$4466;
 var $fRec1788432=(($this1+526680)|0);
 var $arrayidx8433=(($fRec1788432+4)|0);
 var $4467=HEAPF32[(($arrayidx8433)>>2)];
 var $fRec1788434=(($this1+526680)|0);
 var $arrayidx8435=(($fRec1788434+8)|0);
 HEAPF32[(($arrayidx8435)>>2)]=$4467;
 var $fRec1788436=(($this1+526680)|0);
 var $arrayidx8437=(($fRec1788436)|0);
 var $4468=HEAPF32[(($arrayidx8437)>>2)];
 var $fRec1788438=(($this1+526680)|0);
 var $arrayidx8439=(($fRec1788438+4)|0);
 HEAPF32[(($arrayidx8439)>>2)]=$4468;
 var $fRec1778440=(($this1+526668)|0);
 var $arrayidx8441=(($fRec1778440+4)|0);
 var $4469=HEAPF32[(($arrayidx8441)>>2)];
 var $fRec1778442=(($this1+526668)|0);
 var $arrayidx8443=(($fRec1778442+8)|0);
 HEAPF32[(($arrayidx8443)>>2)]=$4469;
 var $fRec1778444=(($this1+526668)|0);
 var $arrayidx8445=(($fRec1778444)|0);
 var $4470=HEAPF32[(($arrayidx8445)>>2)];
 var $fRec1778446=(($this1+526668)|0);
 var $arrayidx8447=(($fRec1778446+4)|0);
 HEAPF32[(($arrayidx8447)>>2)]=$4470;
 var $fRec1878448=(($this1+526660)|0);
 var $arrayidx8449=(($fRec1878448)|0);
 var $4471=HEAPF32[(($arrayidx8449)>>2)];
 var $fRec1878450=(($this1+526660)|0);
 var $arrayidx8451=(($fRec1878450+4)|0);
 HEAPF32[(($arrayidx8451)>>2)]=$4471;
 var $fRec1868452=(($this1+526648)|0);
 var $arrayidx8453=(($fRec1868452+4)|0);
 var $4472=HEAPF32[(($arrayidx8453)>>2)];
 var $fRec1868454=(($this1+526648)|0);
 var $arrayidx8455=(($fRec1868454+8)|0);
 HEAPF32[(($arrayidx8455)>>2)]=$4472;
 var $fRec1868456=(($this1+526648)|0);
 var $arrayidx8457=(($fRec1868456)|0);
 var $4473=HEAPF32[(($arrayidx8457)>>2)];
 var $fRec1868458=(($this1+526648)|0);
 var $arrayidx8459=(($fRec1868458+4)|0);
 HEAPF32[(($arrayidx8459)>>2)]=$4473;
 var $fVec248460=(($this1+526640)|0);
 var $arrayidx8461=(($fVec248460)|0);
 var $4474=HEAPF32[(($arrayidx8461)>>2)];
 var $fVec248462=(($this1+526640)|0);
 var $arrayidx8463=(($fVec248462+4)|0);
 HEAPF32[(($arrayidx8463)>>2)]=$4474;
 var $fRec1858464=(($this1+526632)|0);
 var $arrayidx8465=(($fRec1858464)|0);
 var $4475=HEAPF32[(($arrayidx8465)>>2)];
 var $fRec1858466=(($this1+526632)|0);
 var $arrayidx8467=(($fRec1858466+4)|0);
 HEAPF32[(($arrayidx8467)>>2)]=$4475;
 var $fRec1848468=(($this1+526620)|0);
 var $arrayidx8469=(($fRec1848468+4)|0);
 var $4476=HEAPF32[(($arrayidx8469)>>2)];
 var $fRec1848470=(($this1+526620)|0);
 var $arrayidx8471=(($fRec1848470+8)|0);
 HEAPF32[(($arrayidx8471)>>2)]=$4476;
 var $fRec1848472=(($this1+526620)|0);
 var $arrayidx8473=(($fRec1848472)|0);
 var $4477=HEAPF32[(($arrayidx8473)>>2)];
 var $fRec1848474=(($this1+526620)|0);
 var $arrayidx8475=(($fRec1848474+4)|0);
 HEAPF32[(($arrayidx8475)>>2)]=$4477;
 var $fRec1838476=(($this1+526608)|0);
 var $arrayidx8477=(($fRec1838476+4)|0);
 var $4478=HEAPF32[(($arrayidx8477)>>2)];
 var $fRec1838478=(($this1+526608)|0);
 var $arrayidx8479=(($fRec1838478+8)|0);
 HEAPF32[(($arrayidx8479)>>2)]=$4478;
 var $fRec1838480=(($this1+526608)|0);
 var $arrayidx8481=(($fRec1838480)|0);
 var $4479=HEAPF32[(($arrayidx8481)>>2)];
 var $fRec1838482=(($this1+526608)|0);
 var $arrayidx8483=(($fRec1838482+4)|0);
 HEAPF32[(($arrayidx8483)>>2)]=$4479;
 var $fRec1918484=(($this1+526600)|0);
 var $arrayidx8485=(($fRec1918484)|0);
 var $4480=HEAPF32[(($arrayidx8485)>>2)];
 var $fRec1918486=(($this1+526600)|0);
 var $arrayidx8487=(($fRec1918486+4)|0);
 HEAPF32[(($arrayidx8487)>>2)]=$4480;
 var $fRec1908488=(($this1+526588)|0);
 var $arrayidx8489=(($fRec1908488+4)|0);
 var $4481=HEAPF32[(($arrayidx8489)>>2)];
 var $fRec1908490=(($this1+526588)|0);
 var $arrayidx8491=(($fRec1908490+8)|0);
 HEAPF32[(($arrayidx8491)>>2)]=$4481;
 var $fRec1908492=(($this1+526588)|0);
 var $arrayidx8493=(($fRec1908492)|0);
 var $4482=HEAPF32[(($arrayidx8493)>>2)];
 var $fRec1908494=(($this1+526588)|0);
 var $arrayidx8495=(($fRec1908494+4)|0);
 HEAPF32[(($arrayidx8495)>>2)]=$4482;
 var $fVec258496=(($this1+526580)|0);
 var $arrayidx8497=(($fVec258496)|0);
 var $4483=HEAPF32[(($arrayidx8497)>>2)];
 var $fVec258498=(($this1+526580)|0);
 var $arrayidx8499=(($fVec258498+4)|0);
 HEAPF32[(($arrayidx8499)>>2)]=$4483;
 var $fRec1898500=(($this1+526572)|0);
 var $arrayidx8501=(($fRec1898500)|0);
 var $4484=HEAPF32[(($arrayidx8501)>>2)];
 var $fRec1898502=(($this1+526572)|0);
 var $arrayidx8503=(($fRec1898502+4)|0);
 HEAPF32[(($arrayidx8503)>>2)]=$4484;
 var $fRec1888504=(($this1+526560)|0);
 var $arrayidx8505=(($fRec1888504+4)|0);
 var $4485=HEAPF32[(($arrayidx8505)>>2)];
 var $fRec1888506=(($this1+526560)|0);
 var $arrayidx8507=(($fRec1888506+8)|0);
 HEAPF32[(($arrayidx8507)>>2)]=$4485;
 var $fRec1888508=(($this1+526560)|0);
 var $arrayidx8509=(($fRec1888508)|0);
 var $4486=HEAPF32[(($arrayidx8509)>>2)];
 var $fRec1888510=(($this1+526560)|0);
 var $arrayidx8511=(($fRec1888510+4)|0);
 HEAPF32[(($arrayidx8511)>>2)]=$4486;
 var $fRec1938512=(($this1+526552)|0);
 var $arrayidx8513=(($fRec1938512)|0);
 var $4487=HEAPF32[(($arrayidx8513)>>2)];
 var $fRec1938514=(($this1+526552)|0);
 var $arrayidx8515=(($fRec1938514+4)|0);
 HEAPF32[(($arrayidx8515)>>2)]=$4487;
 var $fRec1928516=(($this1+526540)|0);
 var $arrayidx8517=(($fRec1928516+4)|0);
 var $4488=HEAPF32[(($arrayidx8517)>>2)];
 var $fRec1928518=(($this1+526540)|0);
 var $arrayidx8519=(($fRec1928518+8)|0);
 HEAPF32[(($arrayidx8519)>>2)]=$4488;
 var $fRec1928520=(($this1+526540)|0);
 var $arrayidx8521=(($fRec1928520)|0);
 var $4489=HEAPF32[(($arrayidx8521)>>2)];
 var $fRec1928522=(($this1+526540)|0);
 var $arrayidx8523=(($fRec1928522+4)|0);
 HEAPF32[(($arrayidx8523)>>2)]=$4489;
 var $fRec1988524=(($this1+526532)|0);
 var $arrayidx8525=(($fRec1988524)|0);
 var $4490=HEAPF32[(($arrayidx8525)>>2)];
 var $fRec1988526=(($this1+526532)|0);
 var $arrayidx8527=(($fRec1988526+4)|0);
 HEAPF32[(($arrayidx8527)>>2)]=$4490;
 var $fRec1978528=(($this1+526520)|0);
 var $arrayidx8529=(($fRec1978528+4)|0);
 var $4491=HEAPF32[(($arrayidx8529)>>2)];
 var $fRec1978530=(($this1+526520)|0);
 var $arrayidx8531=(($fRec1978530+8)|0);
 HEAPF32[(($arrayidx8531)>>2)]=$4491;
 var $fRec1978532=(($this1+526520)|0);
 var $arrayidx8533=(($fRec1978532)|0);
 var $4492=HEAPF32[(($arrayidx8533)>>2)];
 var $fRec1978534=(($this1+526520)|0);
 var $arrayidx8535=(($fRec1978534+4)|0);
 HEAPF32[(($arrayidx8535)>>2)]=$4492;
 var $fRec1968536=(($this1+526508)|0);
 var $arrayidx8537=(($fRec1968536+4)|0);
 var $4493=HEAPF32[(($arrayidx8537)>>2)];
 var $fRec1968538=(($this1+526508)|0);
 var $arrayidx8539=(($fRec1968538+8)|0);
 HEAPF32[(($arrayidx8539)>>2)]=$4493;
 var $fRec1968540=(($this1+526508)|0);
 var $arrayidx8541=(($fRec1968540)|0);
 var $4494=HEAPF32[(($arrayidx8541)>>2)];
 var $fRec1968542=(($this1+526508)|0);
 var $arrayidx8543=(($fRec1968542+4)|0);
 HEAPF32[(($arrayidx8543)>>2)]=$4494;
 var $fRec1958544=(($this1+526496)|0);
 var $arrayidx8545=(($fRec1958544+4)|0);
 var $4495=HEAPF32[(($arrayidx8545)>>2)];
 var $fRec1958546=(($this1+526496)|0);
 var $arrayidx8547=(($fRec1958546+8)|0);
 HEAPF32[(($arrayidx8547)>>2)]=$4495;
 var $fRec1958548=(($this1+526496)|0);
 var $arrayidx8549=(($fRec1958548)|0);
 var $4496=HEAPF32[(($arrayidx8549)>>2)];
 var $fRec1958550=(($this1+526496)|0);
 var $arrayidx8551=(($fRec1958550+4)|0);
 HEAPF32[(($arrayidx8551)>>2)]=$4496;
 var $fRec1948552=(($this1+526484)|0);
 var $arrayidx8553=(($fRec1948552+4)|0);
 var $4497=HEAPF32[(($arrayidx8553)>>2)];
 var $fRec1948554=(($this1+526484)|0);
 var $arrayidx8555=(($fRec1948554+8)|0);
 HEAPF32[(($arrayidx8555)>>2)]=$4497;
 var $fRec1948556=(($this1+526484)|0);
 var $arrayidx8557=(($fRec1948556)|0);
 var $4498=HEAPF32[(($arrayidx8557)>>2)];
 var $fRec1948558=(($this1+526484)|0);
 var $arrayidx8559=(($fRec1948558+4)|0);
 HEAPF32[(($arrayidx8559)>>2)]=$4498;
 var $fRec2048560=(($this1+526476)|0);
 var $arrayidx8561=(($fRec2048560)|0);
 var $4499=HEAPF32[(($arrayidx8561)>>2)];
 var $fRec2048562=(($this1+526476)|0);
 var $arrayidx8563=(($fRec2048562+4)|0);
 HEAPF32[(($arrayidx8563)>>2)]=$4499;
 var $fRec2038564=(($this1+526464)|0);
 var $arrayidx8565=(($fRec2038564+4)|0);
 var $4500=HEAPF32[(($arrayidx8565)>>2)];
 var $fRec2038566=(($this1+526464)|0);
 var $arrayidx8567=(($fRec2038566+8)|0);
 HEAPF32[(($arrayidx8567)>>2)]=$4500;
 var $fRec2038568=(($this1+526464)|0);
 var $arrayidx8569=(($fRec2038568)|0);
 var $4501=HEAPF32[(($arrayidx8569)>>2)];
 var $fRec2038570=(($this1+526464)|0);
 var $arrayidx8571=(($fRec2038570+4)|0);
 HEAPF32[(($arrayidx8571)>>2)]=$4501;
 var $fVec268572=(($this1+526456)|0);
 var $arrayidx8573=(($fVec268572)|0);
 var $4502=HEAPF32[(($arrayidx8573)>>2)];
 var $fVec268574=(($this1+526456)|0);
 var $arrayidx8575=(($fVec268574+4)|0);
 HEAPF32[(($arrayidx8575)>>2)]=$4502;
 var $fRec2028576=(($this1+526448)|0);
 var $arrayidx8577=(($fRec2028576)|0);
 var $4503=HEAPF32[(($arrayidx8577)>>2)];
 var $fRec2028578=(($this1+526448)|0);
 var $arrayidx8579=(($fRec2028578+4)|0);
 HEAPF32[(($arrayidx8579)>>2)]=$4503;
 var $fRec2018580=(($this1+526436)|0);
 var $arrayidx8581=(($fRec2018580+4)|0);
 var $4504=HEAPF32[(($arrayidx8581)>>2)];
 var $fRec2018582=(($this1+526436)|0);
 var $arrayidx8583=(($fRec2018582+8)|0);
 HEAPF32[(($arrayidx8583)>>2)]=$4504;
 var $fRec2018584=(($this1+526436)|0);
 var $arrayidx8585=(($fRec2018584)|0);
 var $4505=HEAPF32[(($arrayidx8585)>>2)];
 var $fRec2018586=(($this1+526436)|0);
 var $arrayidx8587=(($fRec2018586+4)|0);
 HEAPF32[(($arrayidx8587)>>2)]=$4505;
 var $fRec2008588=(($this1+526424)|0);
 var $arrayidx8589=(($fRec2008588+4)|0);
 var $4506=HEAPF32[(($arrayidx8589)>>2)];
 var $fRec2008590=(($this1+526424)|0);
 var $arrayidx8591=(($fRec2008590+8)|0);
 HEAPF32[(($arrayidx8591)>>2)]=$4506;
 var $fRec2008592=(($this1+526424)|0);
 var $arrayidx8593=(($fRec2008592)|0);
 var $4507=HEAPF32[(($arrayidx8593)>>2)];
 var $fRec2008594=(($this1+526424)|0);
 var $arrayidx8595=(($fRec2008594+4)|0);
 HEAPF32[(($arrayidx8595)>>2)]=$4507;
 var $fRec1998596=(($this1+526412)|0);
 var $arrayidx8597=(($fRec1998596+4)|0);
 var $4508=HEAPF32[(($arrayidx8597)>>2)];
 var $fRec1998598=(($this1+526412)|0);
 var $arrayidx8599=(($fRec1998598+8)|0);
 HEAPF32[(($arrayidx8599)>>2)]=$4508;
 var $fRec1998600=(($this1+526412)|0);
 var $arrayidx8601=(($fRec1998600)|0);
 var $4509=HEAPF32[(($arrayidx8601)>>2)];
 var $fRec1998602=(($this1+526412)|0);
 var $arrayidx8603=(($fRec1998602+4)|0);
 HEAPF32[(($arrayidx8603)>>2)]=$4509;
 var $fRec2098604=(($this1+526404)|0);
 var $arrayidx8605=(($fRec2098604)|0);
 var $4510=HEAPF32[(($arrayidx8605)>>2)];
 var $fRec2098606=(($this1+526404)|0);
 var $arrayidx8607=(($fRec2098606+4)|0);
 HEAPF32[(($arrayidx8607)>>2)]=$4510;
 var $fRec2088608=(($this1+526392)|0);
 var $arrayidx8609=(($fRec2088608+4)|0);
 var $4511=HEAPF32[(($arrayidx8609)>>2)];
 var $fRec2088610=(($this1+526392)|0);
 var $arrayidx8611=(($fRec2088610+8)|0);
 HEAPF32[(($arrayidx8611)>>2)]=$4511;
 var $fRec2088612=(($this1+526392)|0);
 var $arrayidx8613=(($fRec2088612)|0);
 var $4512=HEAPF32[(($arrayidx8613)>>2)];
 var $fRec2088614=(($this1+526392)|0);
 var $arrayidx8615=(($fRec2088614+4)|0);
 HEAPF32[(($arrayidx8615)>>2)]=$4512;
 var $fVec278616=(($this1+526384)|0);
 var $arrayidx8617=(($fVec278616)|0);
 var $4513=HEAPF32[(($arrayidx8617)>>2)];
 var $fVec278618=(($this1+526384)|0);
 var $arrayidx8619=(($fVec278618+4)|0);
 HEAPF32[(($arrayidx8619)>>2)]=$4513;
 var $fRec2078620=(($this1+526376)|0);
 var $arrayidx8621=(($fRec2078620)|0);
 var $4514=HEAPF32[(($arrayidx8621)>>2)];
 var $fRec2078622=(($this1+526376)|0);
 var $arrayidx8623=(($fRec2078622+4)|0);
 HEAPF32[(($arrayidx8623)>>2)]=$4514;
 var $fRec2068624=(($this1+526364)|0);
 var $arrayidx8625=(($fRec2068624+4)|0);
 var $4515=HEAPF32[(($arrayidx8625)>>2)];
 var $fRec2068626=(($this1+526364)|0);
 var $arrayidx8627=(($fRec2068626+8)|0);
 HEAPF32[(($arrayidx8627)>>2)]=$4515;
 var $fRec2068628=(($this1+526364)|0);
 var $arrayidx8629=(($fRec2068628)|0);
 var $4516=HEAPF32[(($arrayidx8629)>>2)];
 var $fRec2068630=(($this1+526364)|0);
 var $arrayidx8631=(($fRec2068630+4)|0);
 HEAPF32[(($arrayidx8631)>>2)]=$4516;
 var $fRec2058632=(($this1+526352)|0);
 var $arrayidx8633=(($fRec2058632+4)|0);
 var $4517=HEAPF32[(($arrayidx8633)>>2)];
 var $fRec2058634=(($this1+526352)|0);
 var $arrayidx8635=(($fRec2058634+8)|0);
 HEAPF32[(($arrayidx8635)>>2)]=$4517;
 var $fRec2058636=(($this1+526352)|0);
 var $arrayidx8637=(($fRec2058636)|0);
 var $4518=HEAPF32[(($arrayidx8637)>>2)];
 var $fRec2058638=(($this1+526352)|0);
 var $arrayidx8639=(($fRec2058638+4)|0);
 HEAPF32[(($arrayidx8639)>>2)]=$4518;
 var $fRec2138640=(($this1+526344)|0);
 var $arrayidx8641=(($fRec2138640)|0);
 var $4519=HEAPF32[(($arrayidx8641)>>2)];
 var $fRec2138642=(($this1+526344)|0);
 var $arrayidx8643=(($fRec2138642+4)|0);
 HEAPF32[(($arrayidx8643)>>2)]=$4519;
 var $fRec2128644=(($this1+526332)|0);
 var $arrayidx8645=(($fRec2128644+4)|0);
 var $4520=HEAPF32[(($arrayidx8645)>>2)];
 var $fRec2128646=(($this1+526332)|0);
 var $arrayidx8647=(($fRec2128646+8)|0);
 HEAPF32[(($arrayidx8647)>>2)]=$4520;
 var $fRec2128648=(($this1+526332)|0);
 var $arrayidx8649=(($fRec2128648)|0);
 var $4521=HEAPF32[(($arrayidx8649)>>2)];
 var $fRec2128650=(($this1+526332)|0);
 var $arrayidx8651=(($fRec2128650+4)|0);
 HEAPF32[(($arrayidx8651)>>2)]=$4521;
 var $fVec288652=(($this1+526324)|0);
 var $arrayidx8653=(($fVec288652)|0);
 var $4522=HEAPF32[(($arrayidx8653)>>2)];
 var $fVec288654=(($this1+526324)|0);
 var $arrayidx8655=(($fVec288654+4)|0);
 HEAPF32[(($arrayidx8655)>>2)]=$4522;
 var $fRec2118656=(($this1+526316)|0);
 var $arrayidx8657=(($fRec2118656)|0);
 var $4523=HEAPF32[(($arrayidx8657)>>2)];
 var $fRec2118658=(($this1+526316)|0);
 var $arrayidx8659=(($fRec2118658+4)|0);
 HEAPF32[(($arrayidx8659)>>2)]=$4523;
 var $fRec2108660=(($this1+526304)|0);
 var $arrayidx8661=(($fRec2108660+4)|0);
 var $4524=HEAPF32[(($arrayidx8661)>>2)];
 var $fRec2108662=(($this1+526304)|0);
 var $arrayidx8663=(($fRec2108662+8)|0);
 HEAPF32[(($arrayidx8663)>>2)]=$4524;
 var $fRec2108664=(($this1+526304)|0);
 var $arrayidx8665=(($fRec2108664)|0);
 var $4525=HEAPF32[(($arrayidx8665)>>2)];
 var $fRec2108666=(($this1+526304)|0);
 var $arrayidx8667=(($fRec2108666+4)|0);
 HEAPF32[(($arrayidx8667)>>2)]=$4525;
 var $fRec2158668=(($this1+526296)|0);
 var $arrayidx8669=(($fRec2158668)|0);
 var $4526=HEAPF32[(($arrayidx8669)>>2)];
 var $fRec2158670=(($this1+526296)|0);
 var $arrayidx8671=(($fRec2158670+4)|0);
 HEAPF32[(($arrayidx8671)>>2)]=$4526;
 var $fRec2148672=(($this1+526284)|0);
 var $arrayidx8673=(($fRec2148672+4)|0);
 var $4527=HEAPF32[(($arrayidx8673)>>2)];
 var $fRec2148674=(($this1+526284)|0);
 var $arrayidx8675=(($fRec2148674+8)|0);
 HEAPF32[(($arrayidx8675)>>2)]=$4527;
 var $fRec2148676=(($this1+526284)|0);
 var $arrayidx8677=(($fRec2148676)|0);
 var $4528=HEAPF32[(($arrayidx8677)>>2)];
 var $fRec2148678=(($this1+526284)|0);
 var $arrayidx8679=(($fRec2148678+4)|0);
 HEAPF32[(($arrayidx8679)>>2)]=$4528;
 var $fRec2208680=(($this1+526276)|0);
 var $arrayidx8681=(($fRec2208680)|0);
 var $4529=HEAPF32[(($arrayidx8681)>>2)];
 var $fRec2208682=(($this1+526276)|0);
 var $arrayidx8683=(($fRec2208682+4)|0);
 HEAPF32[(($arrayidx8683)>>2)]=$4529;
 var $fRec2198684=(($this1+526264)|0);
 var $arrayidx8685=(($fRec2198684+4)|0);
 var $4530=HEAPF32[(($arrayidx8685)>>2)];
 var $fRec2198686=(($this1+526264)|0);
 var $arrayidx8687=(($fRec2198686+8)|0);
 HEAPF32[(($arrayidx8687)>>2)]=$4530;
 var $fRec2198688=(($this1+526264)|0);
 var $arrayidx8689=(($fRec2198688)|0);
 var $4531=HEAPF32[(($arrayidx8689)>>2)];
 var $fRec2198690=(($this1+526264)|0);
 var $arrayidx8691=(($fRec2198690+4)|0);
 HEAPF32[(($arrayidx8691)>>2)]=$4531;
 var $fRec2188692=(($this1+526252)|0);
 var $arrayidx8693=(($fRec2188692+4)|0);
 var $4532=HEAPF32[(($arrayidx8693)>>2)];
 var $fRec2188694=(($this1+526252)|0);
 var $arrayidx8695=(($fRec2188694+8)|0);
 HEAPF32[(($arrayidx8695)>>2)]=$4532;
 var $fRec2188696=(($this1+526252)|0);
 var $arrayidx8697=(($fRec2188696)|0);
 var $4533=HEAPF32[(($arrayidx8697)>>2)];
 var $fRec2188698=(($this1+526252)|0);
 var $arrayidx8699=(($fRec2188698+4)|0);
 HEAPF32[(($arrayidx8699)>>2)]=$4533;
 var $fRec2178700=(($this1+526240)|0);
 var $arrayidx8701=(($fRec2178700+4)|0);
 var $4534=HEAPF32[(($arrayidx8701)>>2)];
 var $fRec2178702=(($this1+526240)|0);
 var $arrayidx8703=(($fRec2178702+8)|0);
 HEAPF32[(($arrayidx8703)>>2)]=$4534;
 var $fRec2178704=(($this1+526240)|0);
 var $arrayidx8705=(($fRec2178704)|0);
 var $4535=HEAPF32[(($arrayidx8705)>>2)];
 var $fRec2178706=(($this1+526240)|0);
 var $arrayidx8707=(($fRec2178706+4)|0);
 HEAPF32[(($arrayidx8707)>>2)]=$4535;
 var $fRec2168708=(($this1+526228)|0);
 var $arrayidx8709=(($fRec2168708+4)|0);
 var $4536=HEAPF32[(($arrayidx8709)>>2)];
 var $fRec2168710=(($this1+526228)|0);
 var $arrayidx8711=(($fRec2168710+8)|0);
 HEAPF32[(($arrayidx8711)>>2)]=$4536;
 var $fRec2168712=(($this1+526228)|0);
 var $arrayidx8713=(($fRec2168712)|0);
 var $4537=HEAPF32[(($arrayidx8713)>>2)];
 var $fRec2168714=(($this1+526228)|0);
 var $arrayidx8715=(($fRec2168714+4)|0);
 HEAPF32[(($arrayidx8715)>>2)]=$4537;
 var $fRec2268716=(($this1+526220)|0);
 var $arrayidx8717=(($fRec2268716)|0);
 var $4538=HEAPF32[(($arrayidx8717)>>2)];
 var $fRec2268718=(($this1+526220)|0);
 var $arrayidx8719=(($fRec2268718+4)|0);
 HEAPF32[(($arrayidx8719)>>2)]=$4538;
 var $fRec2258720=(($this1+526208)|0);
 var $arrayidx8721=(($fRec2258720+4)|0);
 var $4539=HEAPF32[(($arrayidx8721)>>2)];
 var $fRec2258722=(($this1+526208)|0);
 var $arrayidx8723=(($fRec2258722+8)|0);
 HEAPF32[(($arrayidx8723)>>2)]=$4539;
 var $fRec2258724=(($this1+526208)|0);
 var $arrayidx8725=(($fRec2258724)|0);
 var $4540=HEAPF32[(($arrayidx8725)>>2)];
 var $fRec2258726=(($this1+526208)|0);
 var $arrayidx8727=(($fRec2258726+4)|0);
 HEAPF32[(($arrayidx8727)>>2)]=$4540;
 var $fVec298728=(($this1+526200)|0);
 var $arrayidx8729=(($fVec298728)|0);
 var $4541=HEAPF32[(($arrayidx8729)>>2)];
 var $fVec298730=(($this1+526200)|0);
 var $arrayidx8731=(($fVec298730+4)|0);
 HEAPF32[(($arrayidx8731)>>2)]=$4541;
 var $fRec2248732=(($this1+526192)|0);
 var $arrayidx8733=(($fRec2248732)|0);
 var $4542=HEAPF32[(($arrayidx8733)>>2)];
 var $fRec2248734=(($this1+526192)|0);
 var $arrayidx8735=(($fRec2248734+4)|0);
 HEAPF32[(($arrayidx8735)>>2)]=$4542;
 var $fRec2238736=(($this1+526180)|0);
 var $arrayidx8737=(($fRec2238736+4)|0);
 var $4543=HEAPF32[(($arrayidx8737)>>2)];
 var $fRec2238738=(($this1+526180)|0);
 var $arrayidx8739=(($fRec2238738+8)|0);
 HEAPF32[(($arrayidx8739)>>2)]=$4543;
 var $fRec2238740=(($this1+526180)|0);
 var $arrayidx8741=(($fRec2238740)|0);
 var $4544=HEAPF32[(($arrayidx8741)>>2)];
 var $fRec2238742=(($this1+526180)|0);
 var $arrayidx8743=(($fRec2238742+4)|0);
 HEAPF32[(($arrayidx8743)>>2)]=$4544;
 var $fRec2228744=(($this1+526168)|0);
 var $arrayidx8745=(($fRec2228744+4)|0);
 var $4545=HEAPF32[(($arrayidx8745)>>2)];
 var $fRec2228746=(($this1+526168)|0);
 var $arrayidx8747=(($fRec2228746+8)|0);
 HEAPF32[(($arrayidx8747)>>2)]=$4545;
 var $fRec2228748=(($this1+526168)|0);
 var $arrayidx8749=(($fRec2228748)|0);
 var $4546=HEAPF32[(($arrayidx8749)>>2)];
 var $fRec2228750=(($this1+526168)|0);
 var $arrayidx8751=(($fRec2228750+4)|0);
 HEAPF32[(($arrayidx8751)>>2)]=$4546;
 var $fRec2218752=(($this1+526156)|0);
 var $arrayidx8753=(($fRec2218752+4)|0);
 var $4547=HEAPF32[(($arrayidx8753)>>2)];
 var $fRec2218754=(($this1+526156)|0);
 var $arrayidx8755=(($fRec2218754+8)|0);
 HEAPF32[(($arrayidx8755)>>2)]=$4547;
 var $fRec2218756=(($this1+526156)|0);
 var $arrayidx8757=(($fRec2218756)|0);
 var $4548=HEAPF32[(($arrayidx8757)>>2)];
 var $fRec2218758=(($this1+526156)|0);
 var $arrayidx8759=(($fRec2218758+4)|0);
 HEAPF32[(($arrayidx8759)>>2)]=$4548;
 var $fRec2318760=(($this1+526148)|0);
 var $arrayidx8761=(($fRec2318760)|0);
 var $4549=HEAPF32[(($arrayidx8761)>>2)];
 var $fRec2318762=(($this1+526148)|0);
 var $arrayidx8763=(($fRec2318762+4)|0);
 HEAPF32[(($arrayidx8763)>>2)]=$4549;
 var $fRec2308764=(($this1+526136)|0);
 var $arrayidx8765=(($fRec2308764+4)|0);
 var $4550=HEAPF32[(($arrayidx8765)>>2)];
 var $fRec2308766=(($this1+526136)|0);
 var $arrayidx8767=(($fRec2308766+8)|0);
 HEAPF32[(($arrayidx8767)>>2)]=$4550;
 var $fRec2308768=(($this1+526136)|0);
 var $arrayidx8769=(($fRec2308768)|0);
 var $4551=HEAPF32[(($arrayidx8769)>>2)];
 var $fRec2308770=(($this1+526136)|0);
 var $arrayidx8771=(($fRec2308770+4)|0);
 HEAPF32[(($arrayidx8771)>>2)]=$4551;
 var $fVec308772=(($this1+526128)|0);
 var $arrayidx8773=(($fVec308772)|0);
 var $4552=HEAPF32[(($arrayidx8773)>>2)];
 var $fVec308774=(($this1+526128)|0);
 var $arrayidx8775=(($fVec308774+4)|0);
 HEAPF32[(($arrayidx8775)>>2)]=$4552;
 var $fRec2298776=(($this1+526120)|0);
 var $arrayidx8777=(($fRec2298776)|0);
 var $4553=HEAPF32[(($arrayidx8777)>>2)];
 var $fRec2298778=(($this1+526120)|0);
 var $arrayidx8779=(($fRec2298778+4)|0);
 HEAPF32[(($arrayidx8779)>>2)]=$4553;
 var $fRec2288780=(($this1+526108)|0);
 var $arrayidx8781=(($fRec2288780+4)|0);
 var $4554=HEAPF32[(($arrayidx8781)>>2)];
 var $fRec2288782=(($this1+526108)|0);
 var $arrayidx8783=(($fRec2288782+8)|0);
 HEAPF32[(($arrayidx8783)>>2)]=$4554;
 var $fRec2288784=(($this1+526108)|0);
 var $arrayidx8785=(($fRec2288784)|0);
 var $4555=HEAPF32[(($arrayidx8785)>>2)];
 var $fRec2288786=(($this1+526108)|0);
 var $arrayidx8787=(($fRec2288786+4)|0);
 HEAPF32[(($arrayidx8787)>>2)]=$4555;
 var $fRec2278788=(($this1+526096)|0);
 var $arrayidx8789=(($fRec2278788+4)|0);
 var $4556=HEAPF32[(($arrayidx8789)>>2)];
 var $fRec2278790=(($this1+526096)|0);
 var $arrayidx8791=(($fRec2278790+8)|0);
 HEAPF32[(($arrayidx8791)>>2)]=$4556;
 var $fRec2278792=(($this1+526096)|0);
 var $arrayidx8793=(($fRec2278792)|0);
 var $4557=HEAPF32[(($arrayidx8793)>>2)];
 var $fRec2278794=(($this1+526096)|0);
 var $arrayidx8795=(($fRec2278794+4)|0);
 HEAPF32[(($arrayidx8795)>>2)]=$4557;
 var $fRec2358796=(($this1+526088)|0);
 var $arrayidx8797=(($fRec2358796)|0);
 var $4558=HEAPF32[(($arrayidx8797)>>2)];
 var $fRec2358798=(($this1+526088)|0);
 var $arrayidx8799=(($fRec2358798+4)|0);
 HEAPF32[(($arrayidx8799)>>2)]=$4558;
 var $fRec2348800=(($this1+526076)|0);
 var $arrayidx8801=(($fRec2348800+4)|0);
 var $4559=HEAPF32[(($arrayidx8801)>>2)];
 var $fRec2348802=(($this1+526076)|0);
 var $arrayidx8803=(($fRec2348802+8)|0);
 HEAPF32[(($arrayidx8803)>>2)]=$4559;
 var $fRec2348804=(($this1+526076)|0);
 var $arrayidx8805=(($fRec2348804)|0);
 var $4560=HEAPF32[(($arrayidx8805)>>2)];
 var $fRec2348806=(($this1+526076)|0);
 var $arrayidx8807=(($fRec2348806+4)|0);
 HEAPF32[(($arrayidx8807)>>2)]=$4560;
 var $fVec318808=(($this1+526068)|0);
 var $arrayidx8809=(($fVec318808)|0);
 var $4561=HEAPF32[(($arrayidx8809)>>2)];
 var $fVec318810=(($this1+526068)|0);
 var $arrayidx8811=(($fVec318810+4)|0);
 HEAPF32[(($arrayidx8811)>>2)]=$4561;
 var $fRec2338812=(($this1+526060)|0);
 var $arrayidx8813=(($fRec2338812)|0);
 var $4562=HEAPF32[(($arrayidx8813)>>2)];
 var $fRec2338814=(($this1+526060)|0);
 var $arrayidx8815=(($fRec2338814+4)|0);
 HEAPF32[(($arrayidx8815)>>2)]=$4562;
 var $fRec2328816=(($this1+526048)|0);
 var $arrayidx8817=(($fRec2328816+4)|0);
 var $4563=HEAPF32[(($arrayidx8817)>>2)];
 var $fRec2328818=(($this1+526048)|0);
 var $arrayidx8819=(($fRec2328818+8)|0);
 HEAPF32[(($arrayidx8819)>>2)]=$4563;
 var $fRec2328820=(($this1+526048)|0);
 var $arrayidx8821=(($fRec2328820)|0);
 var $4564=HEAPF32[(($arrayidx8821)>>2)];
 var $fRec2328822=(($this1+526048)|0);
 var $arrayidx8823=(($fRec2328822+4)|0);
 HEAPF32[(($arrayidx8823)>>2)]=$4564;
 var $fRec2378824=(($this1+526040)|0);
 var $arrayidx8825=(($fRec2378824)|0);
 var $4565=HEAPF32[(($arrayidx8825)>>2)];
 var $fRec2378826=(($this1+526040)|0);
 var $arrayidx8827=(($fRec2378826+4)|0);
 HEAPF32[(($arrayidx8827)>>2)]=$4565;
 var $fRec2368828=(($this1+526028)|0);
 var $arrayidx8829=(($fRec2368828+4)|0);
 var $4566=HEAPF32[(($arrayidx8829)>>2)];
 var $fRec2368830=(($this1+526028)|0);
 var $arrayidx8831=(($fRec2368830+8)|0);
 HEAPF32[(($arrayidx8831)>>2)]=$4566;
 var $fRec2368832=(($this1+526028)|0);
 var $arrayidx8833=(($fRec2368832)|0);
 var $4567=HEAPF32[(($arrayidx8833)>>2)];
 var $fRec2368834=(($this1+526028)|0);
 var $arrayidx8835=(($fRec2368834+4)|0);
 HEAPF32[(($arrayidx8835)>>2)]=$4567;
 var $fRec2428836=(($this1+526020)|0);
 var $arrayidx8837=(($fRec2428836)|0);
 var $4568=HEAPF32[(($arrayidx8837)>>2)];
 var $fRec2428838=(($this1+526020)|0);
 var $arrayidx8839=(($fRec2428838+4)|0);
 HEAPF32[(($arrayidx8839)>>2)]=$4568;
 var $fRec2418840=(($this1+526008)|0);
 var $arrayidx8841=(($fRec2418840+4)|0);
 var $4569=HEAPF32[(($arrayidx8841)>>2)];
 var $fRec2418842=(($this1+526008)|0);
 var $arrayidx8843=(($fRec2418842+8)|0);
 HEAPF32[(($arrayidx8843)>>2)]=$4569;
 var $fRec2418844=(($this1+526008)|0);
 var $arrayidx8845=(($fRec2418844)|0);
 var $4570=HEAPF32[(($arrayidx8845)>>2)];
 var $fRec2418846=(($this1+526008)|0);
 var $arrayidx8847=(($fRec2418846+4)|0);
 HEAPF32[(($arrayidx8847)>>2)]=$4570;
 var $fRec2408848=(($this1+525996)|0);
 var $arrayidx8849=(($fRec2408848+4)|0);
 var $4571=HEAPF32[(($arrayidx8849)>>2)];
 var $fRec2408850=(($this1+525996)|0);
 var $arrayidx8851=(($fRec2408850+8)|0);
 HEAPF32[(($arrayidx8851)>>2)]=$4571;
 var $fRec2408852=(($this1+525996)|0);
 var $arrayidx8853=(($fRec2408852)|0);
 var $4572=HEAPF32[(($arrayidx8853)>>2)];
 var $fRec2408854=(($this1+525996)|0);
 var $arrayidx8855=(($fRec2408854+4)|0);
 HEAPF32[(($arrayidx8855)>>2)]=$4572;
 var $fRec2398856=(($this1+525984)|0);
 var $arrayidx8857=(($fRec2398856+4)|0);
 var $4573=HEAPF32[(($arrayidx8857)>>2)];
 var $fRec2398858=(($this1+525984)|0);
 var $arrayidx8859=(($fRec2398858+8)|0);
 HEAPF32[(($arrayidx8859)>>2)]=$4573;
 var $fRec2398860=(($this1+525984)|0);
 var $arrayidx8861=(($fRec2398860)|0);
 var $4574=HEAPF32[(($arrayidx8861)>>2)];
 var $fRec2398862=(($this1+525984)|0);
 var $arrayidx8863=(($fRec2398862+4)|0);
 HEAPF32[(($arrayidx8863)>>2)]=$4574;
 var $fRec2388864=(($this1+525972)|0);
 var $arrayidx8865=(($fRec2388864+4)|0);
 var $4575=HEAPF32[(($arrayidx8865)>>2)];
 var $fRec2388866=(($this1+525972)|0);
 var $arrayidx8867=(($fRec2388866+8)|0);
 HEAPF32[(($arrayidx8867)>>2)]=$4575;
 var $fRec2388868=(($this1+525972)|0);
 var $arrayidx8869=(($fRec2388868)|0);
 var $4576=HEAPF32[(($arrayidx8869)>>2)];
 var $fRec2388870=(($this1+525972)|0);
 var $arrayidx8871=(($fRec2388870+4)|0);
 HEAPF32[(($arrayidx8871)>>2)]=$4576;
 var $fRec2488872=(($this1+525964)|0);
 var $arrayidx8873=(($fRec2488872)|0);
 var $4577=HEAPF32[(($arrayidx8873)>>2)];
 var $fRec2488874=(($this1+525964)|0);
 var $arrayidx8875=(($fRec2488874+4)|0);
 HEAPF32[(($arrayidx8875)>>2)]=$4577;
 var $fRec2478876=(($this1+525952)|0);
 var $arrayidx8877=(($fRec2478876+4)|0);
 var $4578=HEAPF32[(($arrayidx8877)>>2)];
 var $fRec2478878=(($this1+525952)|0);
 var $arrayidx8879=(($fRec2478878+8)|0);
 HEAPF32[(($arrayidx8879)>>2)]=$4578;
 var $fRec2478880=(($this1+525952)|0);
 var $arrayidx8881=(($fRec2478880)|0);
 var $4579=HEAPF32[(($arrayidx8881)>>2)];
 var $fRec2478882=(($this1+525952)|0);
 var $arrayidx8883=(($fRec2478882+4)|0);
 HEAPF32[(($arrayidx8883)>>2)]=$4579;
 var $fVec328884=(($this1+525944)|0);
 var $arrayidx8885=(($fVec328884)|0);
 var $4580=HEAPF32[(($arrayidx8885)>>2)];
 var $fVec328886=(($this1+525944)|0);
 var $arrayidx8887=(($fVec328886+4)|0);
 HEAPF32[(($arrayidx8887)>>2)]=$4580;
 var $fRec2468888=(($this1+525936)|0);
 var $arrayidx8889=(($fRec2468888)|0);
 var $4581=HEAPF32[(($arrayidx8889)>>2)];
 var $fRec2468890=(($this1+525936)|0);
 var $arrayidx8891=(($fRec2468890+4)|0);
 HEAPF32[(($arrayidx8891)>>2)]=$4581;
 var $fRec2458892=(($this1+525924)|0);
 var $arrayidx8893=(($fRec2458892+4)|0);
 var $4582=HEAPF32[(($arrayidx8893)>>2)];
 var $fRec2458894=(($this1+525924)|0);
 var $arrayidx8895=(($fRec2458894+8)|0);
 HEAPF32[(($arrayidx8895)>>2)]=$4582;
 var $fRec2458896=(($this1+525924)|0);
 var $arrayidx8897=(($fRec2458896)|0);
 var $4583=HEAPF32[(($arrayidx8897)>>2)];
 var $fRec2458898=(($this1+525924)|0);
 var $arrayidx8899=(($fRec2458898+4)|0);
 HEAPF32[(($arrayidx8899)>>2)]=$4583;
 var $fRec2448900=(($this1+525912)|0);
 var $arrayidx8901=(($fRec2448900+4)|0);
 var $4584=HEAPF32[(($arrayidx8901)>>2)];
 var $fRec2448902=(($this1+525912)|0);
 var $arrayidx8903=(($fRec2448902+8)|0);
 HEAPF32[(($arrayidx8903)>>2)]=$4584;
 var $fRec2448904=(($this1+525912)|0);
 var $arrayidx8905=(($fRec2448904)|0);
 var $4585=HEAPF32[(($arrayidx8905)>>2)];
 var $fRec2448906=(($this1+525912)|0);
 var $arrayidx8907=(($fRec2448906+4)|0);
 HEAPF32[(($arrayidx8907)>>2)]=$4585;
 var $fRec2438908=(($this1+525900)|0);
 var $arrayidx8909=(($fRec2438908+4)|0);
 var $4586=HEAPF32[(($arrayidx8909)>>2)];
 var $fRec2438910=(($this1+525900)|0);
 var $arrayidx8911=(($fRec2438910+8)|0);
 HEAPF32[(($arrayidx8911)>>2)]=$4586;
 var $fRec2438912=(($this1+525900)|0);
 var $arrayidx8913=(($fRec2438912)|0);
 var $4587=HEAPF32[(($arrayidx8913)>>2)];
 var $fRec2438914=(($this1+525900)|0);
 var $arrayidx8915=(($fRec2438914+4)|0);
 HEAPF32[(($arrayidx8915)>>2)]=$4587;
 var $fRec2538916=(($this1+525892)|0);
 var $arrayidx8917=(($fRec2538916)|0);
 var $4588=HEAPF32[(($arrayidx8917)>>2)];
 var $fRec2538918=(($this1+525892)|0);
 var $arrayidx8919=(($fRec2538918+4)|0);
 HEAPF32[(($arrayidx8919)>>2)]=$4588;
 var $fRec2528920=(($this1+525880)|0);
 var $arrayidx8921=(($fRec2528920+4)|0);
 var $4589=HEAPF32[(($arrayidx8921)>>2)];
 var $fRec2528922=(($this1+525880)|0);
 var $arrayidx8923=(($fRec2528922+8)|0);
 HEAPF32[(($arrayidx8923)>>2)]=$4589;
 var $fRec2528924=(($this1+525880)|0);
 var $arrayidx8925=(($fRec2528924)|0);
 var $4590=HEAPF32[(($arrayidx8925)>>2)];
 var $fRec2528926=(($this1+525880)|0);
 var $arrayidx8927=(($fRec2528926+4)|0);
 HEAPF32[(($arrayidx8927)>>2)]=$4590;
 var $fVec338928=(($this1+525872)|0);
 var $arrayidx8929=(($fVec338928)|0);
 var $4591=HEAPF32[(($arrayidx8929)>>2)];
 var $fVec338930=(($this1+525872)|0);
 var $arrayidx8931=(($fVec338930+4)|0);
 HEAPF32[(($arrayidx8931)>>2)]=$4591;
 var $fRec2518932=(($this1+525864)|0);
 var $arrayidx8933=(($fRec2518932)|0);
 var $4592=HEAPF32[(($arrayidx8933)>>2)];
 var $fRec2518934=(($this1+525864)|0);
 var $arrayidx8935=(($fRec2518934+4)|0);
 HEAPF32[(($arrayidx8935)>>2)]=$4592;
 var $fRec2508936=(($this1+525852)|0);
 var $arrayidx8937=(($fRec2508936+4)|0);
 var $4593=HEAPF32[(($arrayidx8937)>>2)];
 var $fRec2508938=(($this1+525852)|0);
 var $arrayidx8939=(($fRec2508938+8)|0);
 HEAPF32[(($arrayidx8939)>>2)]=$4593;
 var $fRec2508940=(($this1+525852)|0);
 var $arrayidx8941=(($fRec2508940)|0);
 var $4594=HEAPF32[(($arrayidx8941)>>2)];
 var $fRec2508942=(($this1+525852)|0);
 var $arrayidx8943=(($fRec2508942+4)|0);
 HEAPF32[(($arrayidx8943)>>2)]=$4594;
 var $fRec2498944=(($this1+525840)|0);
 var $arrayidx8945=(($fRec2498944+4)|0);
 var $4595=HEAPF32[(($arrayidx8945)>>2)];
 var $fRec2498946=(($this1+525840)|0);
 var $arrayidx8947=(($fRec2498946+8)|0);
 HEAPF32[(($arrayidx8947)>>2)]=$4595;
 var $fRec2498948=(($this1+525840)|0);
 var $arrayidx8949=(($fRec2498948)|0);
 var $4596=HEAPF32[(($arrayidx8949)>>2)];
 var $fRec2498950=(($this1+525840)|0);
 var $arrayidx8951=(($fRec2498950+4)|0);
 HEAPF32[(($arrayidx8951)>>2)]=$4596;
 var $fRec2578952=(($this1+525832)|0);
 var $arrayidx8953=(($fRec2578952)|0);
 var $4597=HEAPF32[(($arrayidx8953)>>2)];
 var $fRec2578954=(($this1+525832)|0);
 var $arrayidx8955=(($fRec2578954+4)|0);
 HEAPF32[(($arrayidx8955)>>2)]=$4597;
 var $fRec2568956=(($this1+525820)|0);
 var $arrayidx8957=(($fRec2568956+4)|0);
 var $4598=HEAPF32[(($arrayidx8957)>>2)];
 var $fRec2568958=(($this1+525820)|0);
 var $arrayidx8959=(($fRec2568958+8)|0);
 HEAPF32[(($arrayidx8959)>>2)]=$4598;
 var $fRec2568960=(($this1+525820)|0);
 var $arrayidx8961=(($fRec2568960)|0);
 var $4599=HEAPF32[(($arrayidx8961)>>2)];
 var $fRec2568962=(($this1+525820)|0);
 var $arrayidx8963=(($fRec2568962+4)|0);
 HEAPF32[(($arrayidx8963)>>2)]=$4599;
 var $fVec348964=(($this1+525812)|0);
 var $arrayidx8965=(($fVec348964)|0);
 var $4600=HEAPF32[(($arrayidx8965)>>2)];
 var $fVec348966=(($this1+525812)|0);
 var $arrayidx8967=(($fVec348966+4)|0);
 HEAPF32[(($arrayidx8967)>>2)]=$4600;
 var $fRec2558968=(($this1+525804)|0);
 var $arrayidx8969=(($fRec2558968)|0);
 var $4601=HEAPF32[(($arrayidx8969)>>2)];
 var $fRec2558970=(($this1+525804)|0);
 var $arrayidx8971=(($fRec2558970+4)|0);
 HEAPF32[(($arrayidx8971)>>2)]=$4601;
 var $fRec2548972=(($this1+525792)|0);
 var $arrayidx8973=(($fRec2548972+4)|0);
 var $4602=HEAPF32[(($arrayidx8973)>>2)];
 var $fRec2548974=(($this1+525792)|0);
 var $arrayidx8975=(($fRec2548974+8)|0);
 HEAPF32[(($arrayidx8975)>>2)]=$4602;
 var $fRec2548976=(($this1+525792)|0);
 var $arrayidx8977=(($fRec2548976)|0);
 var $4603=HEAPF32[(($arrayidx8977)>>2)];
 var $fRec2548978=(($this1+525792)|0);
 var $arrayidx8979=(($fRec2548978+4)|0);
 HEAPF32[(($arrayidx8979)>>2)]=$4603;
 var $fRec2598980=(($this1+525784)|0);
 var $arrayidx8981=(($fRec2598980)|0);
 var $4604=HEAPF32[(($arrayidx8981)>>2)];
 var $fRec2598982=(($this1+525784)|0);
 var $arrayidx8983=(($fRec2598982+4)|0);
 HEAPF32[(($arrayidx8983)>>2)]=$4604;
 var $fRec2588984=(($this1+525772)|0);
 var $arrayidx8985=(($fRec2588984+4)|0);
 var $4605=HEAPF32[(($arrayidx8985)>>2)];
 var $fRec2588986=(($this1+525772)|0);
 var $arrayidx8987=(($fRec2588986+8)|0);
 HEAPF32[(($arrayidx8987)>>2)]=$4605;
 var $fRec2588988=(($this1+525772)|0);
 var $arrayidx8989=(($fRec2588988)|0);
 var $4606=HEAPF32[(($arrayidx8989)>>2)];
 var $fRec2588990=(($this1+525772)|0);
 var $arrayidx8991=(($fRec2588990+4)|0);
 HEAPF32[(($arrayidx8991)>>2)]=$4606;
 var $fRec2648992=(($this1+525764)|0);
 var $arrayidx8993=(($fRec2648992)|0);
 var $4607=HEAPF32[(($arrayidx8993)>>2)];
 var $fRec2648994=(($this1+525764)|0);
 var $arrayidx8995=(($fRec2648994+4)|0);
 HEAPF32[(($arrayidx8995)>>2)]=$4607;
 var $fRec2638996=(($this1+525752)|0);
 var $arrayidx8997=(($fRec2638996+4)|0);
 var $4608=HEAPF32[(($arrayidx8997)>>2)];
 var $fRec2638998=(($this1+525752)|0);
 var $arrayidx8999=(($fRec2638998+8)|0);
 HEAPF32[(($arrayidx8999)>>2)]=$4608;
 var $fRec2639000=(($this1+525752)|0);
 var $arrayidx9001=(($fRec2639000)|0);
 var $4609=HEAPF32[(($arrayidx9001)>>2)];
 var $fRec2639002=(($this1+525752)|0);
 var $arrayidx9003=(($fRec2639002+4)|0);
 HEAPF32[(($arrayidx9003)>>2)]=$4609;
 var $fRec2629004=(($this1+525740)|0);
 var $arrayidx9005=(($fRec2629004+4)|0);
 var $4610=HEAPF32[(($arrayidx9005)>>2)];
 var $fRec2629006=(($this1+525740)|0);
 var $arrayidx9007=(($fRec2629006+8)|0);
 HEAPF32[(($arrayidx9007)>>2)]=$4610;
 var $fRec2629008=(($this1+525740)|0);
 var $arrayidx9009=(($fRec2629008)|0);
 var $4611=HEAPF32[(($arrayidx9009)>>2)];
 var $fRec2629010=(($this1+525740)|0);
 var $arrayidx9011=(($fRec2629010+4)|0);
 HEAPF32[(($arrayidx9011)>>2)]=$4611;
 var $fRec2619012=(($this1+525728)|0);
 var $arrayidx9013=(($fRec2619012+4)|0);
 var $4612=HEAPF32[(($arrayidx9013)>>2)];
 var $fRec2619014=(($this1+525728)|0);
 var $arrayidx9015=(($fRec2619014+8)|0);
 HEAPF32[(($arrayidx9015)>>2)]=$4612;
 var $fRec2619016=(($this1+525728)|0);
 var $arrayidx9017=(($fRec2619016)|0);
 var $4613=HEAPF32[(($arrayidx9017)>>2)];
 var $fRec2619018=(($this1+525728)|0);
 var $arrayidx9019=(($fRec2619018+4)|0);
 HEAPF32[(($arrayidx9019)>>2)]=$4613;
 var $fRec2609020=(($this1+525716)|0);
 var $arrayidx9021=(($fRec2609020+4)|0);
 var $4614=HEAPF32[(($arrayidx9021)>>2)];
 var $fRec2609022=(($this1+525716)|0);
 var $arrayidx9023=(($fRec2609022+8)|0);
 HEAPF32[(($arrayidx9023)>>2)]=$4614;
 var $fRec2609024=(($this1+525716)|0);
 var $arrayidx9025=(($fRec2609024)|0);
 var $4615=HEAPF32[(($arrayidx9025)>>2)];
 var $fRec2609026=(($this1+525716)|0);
 var $arrayidx9027=(($fRec2609026+4)|0);
 HEAPF32[(($arrayidx9027)>>2)]=$4615;
 var $fRec2709028=(($this1+525708)|0);
 var $arrayidx9029=(($fRec2709028)|0);
 var $4616=HEAPF32[(($arrayidx9029)>>2)];
 var $fRec2709030=(($this1+525708)|0);
 var $arrayidx9031=(($fRec2709030+4)|0);
 HEAPF32[(($arrayidx9031)>>2)]=$4616;
 var $fRec2699032=(($this1+525696)|0);
 var $arrayidx9033=(($fRec2699032+4)|0);
 var $4617=HEAPF32[(($arrayidx9033)>>2)];
 var $fRec2699034=(($this1+525696)|0);
 var $arrayidx9035=(($fRec2699034+8)|0);
 HEAPF32[(($arrayidx9035)>>2)]=$4617;
 var $fRec2699036=(($this1+525696)|0);
 var $arrayidx9037=(($fRec2699036)|0);
 var $4618=HEAPF32[(($arrayidx9037)>>2)];
 var $fRec2699038=(($this1+525696)|0);
 var $arrayidx9039=(($fRec2699038+4)|0);
 HEAPF32[(($arrayidx9039)>>2)]=$4618;
 var $fVec359040=(($this1+525688)|0);
 var $arrayidx9041=(($fVec359040)|0);
 var $4619=HEAPF32[(($arrayidx9041)>>2)];
 var $fVec359042=(($this1+525688)|0);
 var $arrayidx9043=(($fVec359042+4)|0);
 HEAPF32[(($arrayidx9043)>>2)]=$4619;
 var $fRec2689044=(($this1+525680)|0);
 var $arrayidx9045=(($fRec2689044)|0);
 var $4620=HEAPF32[(($arrayidx9045)>>2)];
 var $fRec2689046=(($this1+525680)|0);
 var $arrayidx9047=(($fRec2689046+4)|0);
 HEAPF32[(($arrayidx9047)>>2)]=$4620;
 var $fRec2679048=(($this1+525668)|0);
 var $arrayidx9049=(($fRec2679048+4)|0);
 var $4621=HEAPF32[(($arrayidx9049)>>2)];
 var $fRec2679050=(($this1+525668)|0);
 var $arrayidx9051=(($fRec2679050+8)|0);
 HEAPF32[(($arrayidx9051)>>2)]=$4621;
 var $fRec2679052=(($this1+525668)|0);
 var $arrayidx9053=(($fRec2679052)|0);
 var $4622=HEAPF32[(($arrayidx9053)>>2)];
 var $fRec2679054=(($this1+525668)|0);
 var $arrayidx9055=(($fRec2679054+4)|0);
 HEAPF32[(($arrayidx9055)>>2)]=$4622;
 var $fRec2669056=(($this1+525656)|0);
 var $arrayidx9057=(($fRec2669056+4)|0);
 var $4623=HEAPF32[(($arrayidx9057)>>2)];
 var $fRec2669058=(($this1+525656)|0);
 var $arrayidx9059=(($fRec2669058+8)|0);
 HEAPF32[(($arrayidx9059)>>2)]=$4623;
 var $fRec2669060=(($this1+525656)|0);
 var $arrayidx9061=(($fRec2669060)|0);
 var $4624=HEAPF32[(($arrayidx9061)>>2)];
 var $fRec2669062=(($this1+525656)|0);
 var $arrayidx9063=(($fRec2669062+4)|0);
 HEAPF32[(($arrayidx9063)>>2)]=$4624;
 var $fRec2659064=(($this1+525644)|0);
 var $arrayidx9065=(($fRec2659064+4)|0);
 var $4625=HEAPF32[(($arrayidx9065)>>2)];
 var $fRec2659066=(($this1+525644)|0);
 var $arrayidx9067=(($fRec2659066+8)|0);
 HEAPF32[(($arrayidx9067)>>2)]=$4625;
 var $fRec2659068=(($this1+525644)|0);
 var $arrayidx9069=(($fRec2659068)|0);
 var $4626=HEAPF32[(($arrayidx9069)>>2)];
 var $fRec2659070=(($this1+525644)|0);
 var $arrayidx9071=(($fRec2659070+4)|0);
 HEAPF32[(($arrayidx9071)>>2)]=$4626;
 var $fRec2759072=(($this1+525636)|0);
 var $arrayidx9073=(($fRec2759072)|0);
 var $4627=HEAPF32[(($arrayidx9073)>>2)];
 var $fRec2759074=(($this1+525636)|0);
 var $arrayidx9075=(($fRec2759074+4)|0);
 HEAPF32[(($arrayidx9075)>>2)]=$4627;
 var $fRec2749076=(($this1+525624)|0);
 var $arrayidx9077=(($fRec2749076+4)|0);
 var $4628=HEAPF32[(($arrayidx9077)>>2)];
 var $fRec2749078=(($this1+525624)|0);
 var $arrayidx9079=(($fRec2749078+8)|0);
 HEAPF32[(($arrayidx9079)>>2)]=$4628;
 var $fRec2749080=(($this1+525624)|0);
 var $arrayidx9081=(($fRec2749080)|0);
 var $4629=HEAPF32[(($arrayidx9081)>>2)];
 var $fRec2749082=(($this1+525624)|0);
 var $arrayidx9083=(($fRec2749082+4)|0);
 HEAPF32[(($arrayidx9083)>>2)]=$4629;
 var $fVec369084=(($this1+525616)|0);
 var $arrayidx9085=(($fVec369084)|0);
 var $4630=HEAPF32[(($arrayidx9085)>>2)];
 var $fVec369086=(($this1+525616)|0);
 var $arrayidx9087=(($fVec369086+4)|0);
 HEAPF32[(($arrayidx9087)>>2)]=$4630;
 var $fRec2739088=(($this1+525608)|0);
 var $arrayidx9089=(($fRec2739088)|0);
 var $4631=HEAPF32[(($arrayidx9089)>>2)];
 var $fRec2739090=(($this1+525608)|0);
 var $arrayidx9091=(($fRec2739090+4)|0);
 HEAPF32[(($arrayidx9091)>>2)]=$4631;
 var $fRec2729092=(($this1+525596)|0);
 var $arrayidx9093=(($fRec2729092+4)|0);
 var $4632=HEAPF32[(($arrayidx9093)>>2)];
 var $fRec2729094=(($this1+525596)|0);
 var $arrayidx9095=(($fRec2729094+8)|0);
 HEAPF32[(($arrayidx9095)>>2)]=$4632;
 var $fRec2729096=(($this1+525596)|0);
 var $arrayidx9097=(($fRec2729096)|0);
 var $4633=HEAPF32[(($arrayidx9097)>>2)];
 var $fRec2729098=(($this1+525596)|0);
 var $arrayidx9099=(($fRec2729098+4)|0);
 HEAPF32[(($arrayidx9099)>>2)]=$4633;
 var $fRec2719100=(($this1+525584)|0);
 var $arrayidx9101=(($fRec2719100+4)|0);
 var $4634=HEAPF32[(($arrayidx9101)>>2)];
 var $fRec2719102=(($this1+525584)|0);
 var $arrayidx9103=(($fRec2719102+8)|0);
 HEAPF32[(($arrayidx9103)>>2)]=$4634;
 var $fRec2719104=(($this1+525584)|0);
 var $arrayidx9105=(($fRec2719104)|0);
 var $4635=HEAPF32[(($arrayidx9105)>>2)];
 var $fRec2719106=(($this1+525584)|0);
 var $arrayidx9107=(($fRec2719106+4)|0);
 HEAPF32[(($arrayidx9107)>>2)]=$4635;
 var $fRec2799108=(($this1+525576)|0);
 var $arrayidx9109=(($fRec2799108)|0);
 var $4636=HEAPF32[(($arrayidx9109)>>2)];
 var $fRec2799110=(($this1+525576)|0);
 var $arrayidx9111=(($fRec2799110+4)|0);
 HEAPF32[(($arrayidx9111)>>2)]=$4636;
 var $fRec2789112=(($this1+525564)|0);
 var $arrayidx9113=(($fRec2789112+4)|0);
 var $4637=HEAPF32[(($arrayidx9113)>>2)];
 var $fRec2789114=(($this1+525564)|0);
 var $arrayidx9115=(($fRec2789114+8)|0);
 HEAPF32[(($arrayidx9115)>>2)]=$4637;
 var $fRec2789116=(($this1+525564)|0);
 var $arrayidx9117=(($fRec2789116)|0);
 var $4638=HEAPF32[(($arrayidx9117)>>2)];
 var $fRec2789118=(($this1+525564)|0);
 var $arrayidx9119=(($fRec2789118+4)|0);
 HEAPF32[(($arrayidx9119)>>2)]=$4638;
 var $fVec379120=(($this1+525556)|0);
 var $arrayidx9121=(($fVec379120)|0);
 var $4639=HEAPF32[(($arrayidx9121)>>2)];
 var $fVec379122=(($this1+525556)|0);
 var $arrayidx9123=(($fVec379122+4)|0);
 HEAPF32[(($arrayidx9123)>>2)]=$4639;
 var $fRec2779124=(($this1+525548)|0);
 var $arrayidx9125=(($fRec2779124)|0);
 var $4640=HEAPF32[(($arrayidx9125)>>2)];
 var $fRec2779126=(($this1+525548)|0);
 var $arrayidx9127=(($fRec2779126+4)|0);
 HEAPF32[(($arrayidx9127)>>2)]=$4640;
 var $fRec2769128=(($this1+525536)|0);
 var $arrayidx9129=(($fRec2769128+4)|0);
 var $4641=HEAPF32[(($arrayidx9129)>>2)];
 var $fRec2769130=(($this1+525536)|0);
 var $arrayidx9131=(($fRec2769130+8)|0);
 HEAPF32[(($arrayidx9131)>>2)]=$4641;
 var $fRec2769132=(($this1+525536)|0);
 var $arrayidx9133=(($fRec2769132)|0);
 var $4642=HEAPF32[(($arrayidx9133)>>2)];
 var $fRec2769134=(($this1+525536)|0);
 var $arrayidx9135=(($fRec2769134+4)|0);
 HEAPF32[(($arrayidx9135)>>2)]=$4642;
 var $fRec2819136=(($this1+525528)|0);
 var $arrayidx9137=(($fRec2819136)|0);
 var $4643=HEAPF32[(($arrayidx9137)>>2)];
 var $fRec2819138=(($this1+525528)|0);
 var $arrayidx9139=(($fRec2819138+4)|0);
 HEAPF32[(($arrayidx9139)>>2)]=$4643;
 var $fRec2809140=(($this1+525516)|0);
 var $arrayidx9141=(($fRec2809140+4)|0);
 var $4644=HEAPF32[(($arrayidx9141)>>2)];
 var $fRec2809142=(($this1+525516)|0);
 var $arrayidx9143=(($fRec2809142+8)|0);
 HEAPF32[(($arrayidx9143)>>2)]=$4644;
 var $fRec2809144=(($this1+525516)|0);
 var $arrayidx9145=(($fRec2809144)|0);
 var $4645=HEAPF32[(($arrayidx9145)>>2)];
 var $fRec2809146=(($this1+525516)|0);
 var $arrayidx9147=(($fRec2809146+4)|0);
 HEAPF32[(($arrayidx9147)>>2)]=$4645;
 var $fRec2869148=(($this1+525508)|0);
 var $arrayidx9149=(($fRec2869148)|0);
 var $4646=HEAPF32[(($arrayidx9149)>>2)];
 var $fRec2869150=(($this1+525508)|0);
 var $arrayidx9151=(($fRec2869150+4)|0);
 HEAPF32[(($arrayidx9151)>>2)]=$4646;
 var $fRec2859152=(($this1+525496)|0);
 var $arrayidx9153=(($fRec2859152+4)|0);
 var $4647=HEAPF32[(($arrayidx9153)>>2)];
 var $fRec2859154=(($this1+525496)|0);
 var $arrayidx9155=(($fRec2859154+8)|0);
 HEAPF32[(($arrayidx9155)>>2)]=$4647;
 var $fRec2859156=(($this1+525496)|0);
 var $arrayidx9157=(($fRec2859156)|0);
 var $4648=HEAPF32[(($arrayidx9157)>>2)];
 var $fRec2859158=(($this1+525496)|0);
 var $arrayidx9159=(($fRec2859158+4)|0);
 HEAPF32[(($arrayidx9159)>>2)]=$4648;
 var $fRec2849160=(($this1+525484)|0);
 var $arrayidx9161=(($fRec2849160+4)|0);
 var $4649=HEAPF32[(($arrayidx9161)>>2)];
 var $fRec2849162=(($this1+525484)|0);
 var $arrayidx9163=(($fRec2849162+8)|0);
 HEAPF32[(($arrayidx9163)>>2)]=$4649;
 var $fRec2849164=(($this1+525484)|0);
 var $arrayidx9165=(($fRec2849164)|0);
 var $4650=HEAPF32[(($arrayidx9165)>>2)];
 var $fRec2849166=(($this1+525484)|0);
 var $arrayidx9167=(($fRec2849166+4)|0);
 HEAPF32[(($arrayidx9167)>>2)]=$4650;
 var $fRec2839168=(($this1+525472)|0);
 var $arrayidx9169=(($fRec2839168+4)|0);
 var $4651=HEAPF32[(($arrayidx9169)>>2)];
 var $fRec2839170=(($this1+525472)|0);
 var $arrayidx9171=(($fRec2839170+8)|0);
 HEAPF32[(($arrayidx9171)>>2)]=$4651;
 var $fRec2839172=(($this1+525472)|0);
 var $arrayidx9173=(($fRec2839172)|0);
 var $4652=HEAPF32[(($arrayidx9173)>>2)];
 var $fRec2839174=(($this1+525472)|0);
 var $arrayidx9175=(($fRec2839174+4)|0);
 HEAPF32[(($arrayidx9175)>>2)]=$4652;
 var $fRec2829176=(($this1+525460)|0);
 var $arrayidx9177=(($fRec2829176+4)|0);
 var $4653=HEAPF32[(($arrayidx9177)>>2)];
 var $fRec2829178=(($this1+525460)|0);
 var $arrayidx9179=(($fRec2829178+8)|0);
 HEAPF32[(($arrayidx9179)>>2)]=$4653;
 var $fRec2829180=(($this1+525460)|0);
 var $arrayidx9181=(($fRec2829180)|0);
 var $4654=HEAPF32[(($arrayidx9181)>>2)];
 var $fRec2829182=(($this1+525460)|0);
 var $arrayidx9183=(($fRec2829182+4)|0);
 HEAPF32[(($arrayidx9183)>>2)]=$4654;
 var $fRec2929184=(($this1+525452)|0);
 var $arrayidx9185=(($fRec2929184)|0);
 var $4655=HEAPF32[(($arrayidx9185)>>2)];
 var $fRec2929186=(($this1+525452)|0);
 var $arrayidx9187=(($fRec2929186+4)|0);
 HEAPF32[(($arrayidx9187)>>2)]=$4655;
 var $fRec2919188=(($this1+525440)|0);
 var $arrayidx9189=(($fRec2919188+4)|0);
 var $4656=HEAPF32[(($arrayidx9189)>>2)];
 var $fRec2919190=(($this1+525440)|0);
 var $arrayidx9191=(($fRec2919190+8)|0);
 HEAPF32[(($arrayidx9191)>>2)]=$4656;
 var $fRec2919192=(($this1+525440)|0);
 var $arrayidx9193=(($fRec2919192)|0);
 var $4657=HEAPF32[(($arrayidx9193)>>2)];
 var $fRec2919194=(($this1+525440)|0);
 var $arrayidx9195=(($fRec2919194+4)|0);
 HEAPF32[(($arrayidx9195)>>2)]=$4657;
 var $fVec389196=(($this1+525432)|0);
 var $arrayidx9197=(($fVec389196)|0);
 var $4658=HEAPF32[(($arrayidx9197)>>2)];
 var $fVec389198=(($this1+525432)|0);
 var $arrayidx9199=(($fVec389198+4)|0);
 HEAPF32[(($arrayidx9199)>>2)]=$4658;
 var $fRec2909200=(($this1+525424)|0);
 var $arrayidx9201=(($fRec2909200)|0);
 var $4659=HEAPF32[(($arrayidx9201)>>2)];
 var $fRec2909202=(($this1+525424)|0);
 var $arrayidx9203=(($fRec2909202+4)|0);
 HEAPF32[(($arrayidx9203)>>2)]=$4659;
 var $fRec2899204=(($this1+525412)|0);
 var $arrayidx9205=(($fRec2899204+4)|0);
 var $4660=HEAPF32[(($arrayidx9205)>>2)];
 var $fRec2899206=(($this1+525412)|0);
 var $arrayidx9207=(($fRec2899206+8)|0);
 HEAPF32[(($arrayidx9207)>>2)]=$4660;
 var $fRec2899208=(($this1+525412)|0);
 var $arrayidx9209=(($fRec2899208)|0);
 var $4661=HEAPF32[(($arrayidx9209)>>2)];
 var $fRec2899210=(($this1+525412)|0);
 var $arrayidx9211=(($fRec2899210+4)|0);
 HEAPF32[(($arrayidx9211)>>2)]=$4661;
 var $fRec2889212=(($this1+525400)|0);
 var $arrayidx9213=(($fRec2889212+4)|0);
 var $4662=HEAPF32[(($arrayidx9213)>>2)];
 var $fRec2889214=(($this1+525400)|0);
 var $arrayidx9215=(($fRec2889214+8)|0);
 HEAPF32[(($arrayidx9215)>>2)]=$4662;
 var $fRec2889216=(($this1+525400)|0);
 var $arrayidx9217=(($fRec2889216)|0);
 var $4663=HEAPF32[(($arrayidx9217)>>2)];
 var $fRec2889218=(($this1+525400)|0);
 var $arrayidx9219=(($fRec2889218+4)|0);
 HEAPF32[(($arrayidx9219)>>2)]=$4663;
 var $fRec2879220=(($this1+525388)|0);
 var $arrayidx9221=(($fRec2879220+4)|0);
 var $4664=HEAPF32[(($arrayidx9221)>>2)];
 var $fRec2879222=(($this1+525388)|0);
 var $arrayidx9223=(($fRec2879222+8)|0);
 HEAPF32[(($arrayidx9223)>>2)]=$4664;
 var $fRec2879224=(($this1+525388)|0);
 var $arrayidx9225=(($fRec2879224)|0);
 var $4665=HEAPF32[(($arrayidx9225)>>2)];
 var $fRec2879226=(($this1+525388)|0);
 var $arrayidx9227=(($fRec2879226+4)|0);
 HEAPF32[(($arrayidx9227)>>2)]=$4665;
 var $fRec2979228=(($this1+525380)|0);
 var $arrayidx9229=(($fRec2979228)|0);
 var $4666=HEAPF32[(($arrayidx9229)>>2)];
 var $fRec2979230=(($this1+525380)|0);
 var $arrayidx9231=(($fRec2979230+4)|0);
 HEAPF32[(($arrayidx9231)>>2)]=$4666;
 var $fRec2969232=(($this1+525368)|0);
 var $arrayidx9233=(($fRec2969232+4)|0);
 var $4667=HEAPF32[(($arrayidx9233)>>2)];
 var $fRec2969234=(($this1+525368)|0);
 var $arrayidx9235=(($fRec2969234+8)|0);
 HEAPF32[(($arrayidx9235)>>2)]=$4667;
 var $fRec2969236=(($this1+525368)|0);
 var $arrayidx9237=(($fRec2969236)|0);
 var $4668=HEAPF32[(($arrayidx9237)>>2)];
 var $fRec2969238=(($this1+525368)|0);
 var $arrayidx9239=(($fRec2969238+4)|0);
 HEAPF32[(($arrayidx9239)>>2)]=$4668;
 var $fVec399240=(($this1+525360)|0);
 var $arrayidx9241=(($fVec399240)|0);
 var $4669=HEAPF32[(($arrayidx9241)>>2)];
 var $fVec399242=(($this1+525360)|0);
 var $arrayidx9243=(($fVec399242+4)|0);
 HEAPF32[(($arrayidx9243)>>2)]=$4669;
 var $fRec2959244=(($this1+525352)|0);
 var $arrayidx9245=(($fRec2959244)|0);
 var $4670=HEAPF32[(($arrayidx9245)>>2)];
 var $fRec2959246=(($this1+525352)|0);
 var $arrayidx9247=(($fRec2959246+4)|0);
 HEAPF32[(($arrayidx9247)>>2)]=$4670;
 var $fRec2949248=(($this1+525340)|0);
 var $arrayidx9249=(($fRec2949248+4)|0);
 var $4671=HEAPF32[(($arrayidx9249)>>2)];
 var $fRec2949250=(($this1+525340)|0);
 var $arrayidx9251=(($fRec2949250+8)|0);
 HEAPF32[(($arrayidx9251)>>2)]=$4671;
 var $fRec2949252=(($this1+525340)|0);
 var $arrayidx9253=(($fRec2949252)|0);
 var $4672=HEAPF32[(($arrayidx9253)>>2)];
 var $fRec2949254=(($this1+525340)|0);
 var $arrayidx9255=(($fRec2949254+4)|0);
 HEAPF32[(($arrayidx9255)>>2)]=$4672;
 var $fRec2939256=(($this1+525328)|0);
 var $arrayidx9257=(($fRec2939256+4)|0);
 var $4673=HEAPF32[(($arrayidx9257)>>2)];
 var $fRec2939258=(($this1+525328)|0);
 var $arrayidx9259=(($fRec2939258+8)|0);
 HEAPF32[(($arrayidx9259)>>2)]=$4673;
 var $fRec2939260=(($this1+525328)|0);
 var $arrayidx9261=(($fRec2939260)|0);
 var $4674=HEAPF32[(($arrayidx9261)>>2)];
 var $fRec2939262=(($this1+525328)|0);
 var $arrayidx9263=(($fRec2939262+4)|0);
 HEAPF32[(($arrayidx9263)>>2)]=$4674;
 var $fRec3019264=(($this1+525320)|0);
 var $arrayidx9265=(($fRec3019264)|0);
 var $4675=HEAPF32[(($arrayidx9265)>>2)];
 var $fRec3019266=(($this1+525320)|0);
 var $arrayidx9267=(($fRec3019266+4)|0);
 HEAPF32[(($arrayidx9267)>>2)]=$4675;
 var $fRec3009268=(($this1+525308)|0);
 var $arrayidx9269=(($fRec3009268+4)|0);
 var $4676=HEAPF32[(($arrayidx9269)>>2)];
 var $fRec3009270=(($this1+525308)|0);
 var $arrayidx9271=(($fRec3009270+8)|0);
 HEAPF32[(($arrayidx9271)>>2)]=$4676;
 var $fRec3009272=(($this1+525308)|0);
 var $arrayidx9273=(($fRec3009272)|0);
 var $4677=HEAPF32[(($arrayidx9273)>>2)];
 var $fRec3009274=(($this1+525308)|0);
 var $arrayidx9275=(($fRec3009274+4)|0);
 HEAPF32[(($arrayidx9275)>>2)]=$4677;
 var $fVec409276=(($this1+525300)|0);
 var $arrayidx9277=(($fVec409276)|0);
 var $4678=HEAPF32[(($arrayidx9277)>>2)];
 var $fVec409278=(($this1+525300)|0);
 var $arrayidx9279=(($fVec409278+4)|0);
 HEAPF32[(($arrayidx9279)>>2)]=$4678;
 var $fRec2999280=(($this1+525292)|0);
 var $arrayidx9281=(($fRec2999280)|0);
 var $4679=HEAPF32[(($arrayidx9281)>>2)];
 var $fRec2999282=(($this1+525292)|0);
 var $arrayidx9283=(($fRec2999282+4)|0);
 HEAPF32[(($arrayidx9283)>>2)]=$4679;
 var $fRec2989284=(($this1+525280)|0);
 var $arrayidx9285=(($fRec2989284+4)|0);
 var $4680=HEAPF32[(($arrayidx9285)>>2)];
 var $fRec2989286=(($this1+525280)|0);
 var $arrayidx9287=(($fRec2989286+8)|0);
 HEAPF32[(($arrayidx9287)>>2)]=$4680;
 var $fRec2989288=(($this1+525280)|0);
 var $arrayidx9289=(($fRec2989288)|0);
 var $4681=HEAPF32[(($arrayidx9289)>>2)];
 var $fRec2989290=(($this1+525280)|0);
 var $arrayidx9291=(($fRec2989290+4)|0);
 HEAPF32[(($arrayidx9291)>>2)]=$4681;
 var $fRec3039292=(($this1+525272)|0);
 var $arrayidx9293=(($fRec3039292)|0);
 var $4682=HEAPF32[(($arrayidx9293)>>2)];
 var $fRec3039294=(($this1+525272)|0);
 var $arrayidx9295=(($fRec3039294+4)|0);
 HEAPF32[(($arrayidx9295)>>2)]=$4682;
 var $fRec3029296=(($this1+525260)|0);
 var $arrayidx9297=(($fRec3029296+4)|0);
 var $4683=HEAPF32[(($arrayidx9297)>>2)];
 var $fRec3029298=(($this1+525260)|0);
 var $arrayidx9299=(($fRec3029298+8)|0);
 HEAPF32[(($arrayidx9299)>>2)]=$4683;
 var $fRec3029300=(($this1+525260)|0);
 var $arrayidx9301=(($fRec3029300)|0);
 var $4684=HEAPF32[(($arrayidx9301)>>2)];
 var $fRec3029302=(($this1+525260)|0);
 var $arrayidx9303=(($fRec3029302+4)|0);
 HEAPF32[(($arrayidx9303)>>2)]=$4684;
 var $fRec3089304=(($this1+525252)|0);
 var $arrayidx9305=(($fRec3089304)|0);
 var $4685=HEAPF32[(($arrayidx9305)>>2)];
 var $fRec3089306=(($this1+525252)|0);
 var $arrayidx9307=(($fRec3089306+4)|0);
 HEAPF32[(($arrayidx9307)>>2)]=$4685;
 var $fRec3079308=(($this1+525240)|0);
 var $arrayidx9309=(($fRec3079308+4)|0);
 var $4686=HEAPF32[(($arrayidx9309)>>2)];
 var $fRec3079310=(($this1+525240)|0);
 var $arrayidx9311=(($fRec3079310+8)|0);
 HEAPF32[(($arrayidx9311)>>2)]=$4686;
 var $fRec3079312=(($this1+525240)|0);
 var $arrayidx9313=(($fRec3079312)|0);
 var $4687=HEAPF32[(($arrayidx9313)>>2)];
 var $fRec3079314=(($this1+525240)|0);
 var $arrayidx9315=(($fRec3079314+4)|0);
 HEAPF32[(($arrayidx9315)>>2)]=$4687;
 var $fRec3069316=(($this1+525228)|0);
 var $arrayidx9317=(($fRec3069316+4)|0);
 var $4688=HEAPF32[(($arrayidx9317)>>2)];
 var $fRec3069318=(($this1+525228)|0);
 var $arrayidx9319=(($fRec3069318+8)|0);
 HEAPF32[(($arrayidx9319)>>2)]=$4688;
 var $fRec3069320=(($this1+525228)|0);
 var $arrayidx9321=(($fRec3069320)|0);
 var $4689=HEAPF32[(($arrayidx9321)>>2)];
 var $fRec3069322=(($this1+525228)|0);
 var $arrayidx9323=(($fRec3069322+4)|0);
 HEAPF32[(($arrayidx9323)>>2)]=$4689;
 var $fRec3059324=(($this1+525216)|0);
 var $arrayidx9325=(($fRec3059324+4)|0);
 var $4690=HEAPF32[(($arrayidx9325)>>2)];
 var $fRec3059326=(($this1+525216)|0);
 var $arrayidx9327=(($fRec3059326+8)|0);
 HEAPF32[(($arrayidx9327)>>2)]=$4690;
 var $fRec3059328=(($this1+525216)|0);
 var $arrayidx9329=(($fRec3059328)|0);
 var $4691=HEAPF32[(($arrayidx9329)>>2)];
 var $fRec3059330=(($this1+525216)|0);
 var $arrayidx9331=(($fRec3059330+4)|0);
 HEAPF32[(($arrayidx9331)>>2)]=$4691;
 var $fRec3049332=(($this1+525204)|0);
 var $arrayidx9333=(($fRec3049332+4)|0);
 var $4692=HEAPF32[(($arrayidx9333)>>2)];
 var $fRec3049334=(($this1+525204)|0);
 var $arrayidx9335=(($fRec3049334+8)|0);
 HEAPF32[(($arrayidx9335)>>2)]=$4692;
 var $fRec3049336=(($this1+525204)|0);
 var $arrayidx9337=(($fRec3049336)|0);
 var $4693=HEAPF32[(($arrayidx9337)>>2)];
 var $fRec3049338=(($this1+525204)|0);
 var $arrayidx9339=(($fRec3049338+4)|0);
 HEAPF32[(($arrayidx9339)>>2)]=$4693;
 var $fRec3149340=(($this1+525196)|0);
 var $arrayidx9341=(($fRec3149340)|0);
 var $4694=HEAPF32[(($arrayidx9341)>>2)];
 var $fRec3149342=(($this1+525196)|0);
 var $arrayidx9343=(($fRec3149342+4)|0);
 HEAPF32[(($arrayidx9343)>>2)]=$4694;
 var $fRec3139344=(($this1+525184)|0);
 var $arrayidx9345=(($fRec3139344+4)|0);
 var $4695=HEAPF32[(($arrayidx9345)>>2)];
 var $fRec3139346=(($this1+525184)|0);
 var $arrayidx9347=(($fRec3139346+8)|0);
 HEAPF32[(($arrayidx9347)>>2)]=$4695;
 var $fRec3139348=(($this1+525184)|0);
 var $arrayidx9349=(($fRec3139348)|0);
 var $4696=HEAPF32[(($arrayidx9349)>>2)];
 var $fRec3139350=(($this1+525184)|0);
 var $arrayidx9351=(($fRec3139350+4)|0);
 HEAPF32[(($arrayidx9351)>>2)]=$4696;
 var $fVec419352=(($this1+525176)|0);
 var $arrayidx9353=(($fVec419352)|0);
 var $4697=HEAPF32[(($arrayidx9353)>>2)];
 var $fVec419354=(($this1+525176)|0);
 var $arrayidx9355=(($fVec419354+4)|0);
 HEAPF32[(($arrayidx9355)>>2)]=$4697;
 var $fRec3129356=(($this1+525168)|0);
 var $arrayidx9357=(($fRec3129356)|0);
 var $4698=HEAPF32[(($arrayidx9357)>>2)];
 var $fRec3129358=(($this1+525168)|0);
 var $arrayidx9359=(($fRec3129358+4)|0);
 HEAPF32[(($arrayidx9359)>>2)]=$4698;
 var $fRec3119360=(($this1+525156)|0);
 var $arrayidx9361=(($fRec3119360+4)|0);
 var $4699=HEAPF32[(($arrayidx9361)>>2)];
 var $fRec3119362=(($this1+525156)|0);
 var $arrayidx9363=(($fRec3119362+8)|0);
 HEAPF32[(($arrayidx9363)>>2)]=$4699;
 var $fRec3119364=(($this1+525156)|0);
 var $arrayidx9365=(($fRec3119364)|0);
 var $4700=HEAPF32[(($arrayidx9365)>>2)];
 var $fRec3119366=(($this1+525156)|0);
 var $arrayidx9367=(($fRec3119366+4)|0);
 HEAPF32[(($arrayidx9367)>>2)]=$4700;
 var $fRec3109368=(($this1+525144)|0);
 var $arrayidx9369=(($fRec3109368+4)|0);
 var $4701=HEAPF32[(($arrayidx9369)>>2)];
 var $fRec3109370=(($this1+525144)|0);
 var $arrayidx9371=(($fRec3109370+8)|0);
 HEAPF32[(($arrayidx9371)>>2)]=$4701;
 var $fRec3109372=(($this1+525144)|0);
 var $arrayidx9373=(($fRec3109372)|0);
 var $4702=HEAPF32[(($arrayidx9373)>>2)];
 var $fRec3109374=(($this1+525144)|0);
 var $arrayidx9375=(($fRec3109374+4)|0);
 HEAPF32[(($arrayidx9375)>>2)]=$4702;
 var $fRec3099376=(($this1+525132)|0);
 var $arrayidx9377=(($fRec3099376+4)|0);
 var $4703=HEAPF32[(($arrayidx9377)>>2)];
 var $fRec3099378=(($this1+525132)|0);
 var $arrayidx9379=(($fRec3099378+8)|0);
 HEAPF32[(($arrayidx9379)>>2)]=$4703;
 var $fRec3099380=(($this1+525132)|0);
 var $arrayidx9381=(($fRec3099380)|0);
 var $4704=HEAPF32[(($arrayidx9381)>>2)];
 var $fRec3099382=(($this1+525132)|0);
 var $arrayidx9383=(($fRec3099382+4)|0);
 HEAPF32[(($arrayidx9383)>>2)]=$4704;
 var $fRec3199384=(($this1+525124)|0);
 var $arrayidx9385=(($fRec3199384)|0);
 var $4705=HEAPF32[(($arrayidx9385)>>2)];
 var $fRec3199386=(($this1+525124)|0);
 var $arrayidx9387=(($fRec3199386+4)|0);
 HEAPF32[(($arrayidx9387)>>2)]=$4705;
 var $fRec3189388=(($this1+525112)|0);
 var $arrayidx9389=(($fRec3189388+4)|0);
 var $4706=HEAPF32[(($arrayidx9389)>>2)];
 var $fRec3189390=(($this1+525112)|0);
 var $arrayidx9391=(($fRec3189390+8)|0);
 HEAPF32[(($arrayidx9391)>>2)]=$4706;
 var $fRec3189392=(($this1+525112)|0);
 var $arrayidx9393=(($fRec3189392)|0);
 var $4707=HEAPF32[(($arrayidx9393)>>2)];
 var $fRec3189394=(($this1+525112)|0);
 var $arrayidx9395=(($fRec3189394+4)|0);
 HEAPF32[(($arrayidx9395)>>2)]=$4707;
 var $fVec429396=(($this1+525104)|0);
 var $arrayidx9397=(($fVec429396)|0);
 var $4708=HEAPF32[(($arrayidx9397)>>2)];
 var $fVec429398=(($this1+525104)|0);
 var $arrayidx9399=(($fVec429398+4)|0);
 HEAPF32[(($arrayidx9399)>>2)]=$4708;
 var $fRec3179400=(($this1+525096)|0);
 var $arrayidx9401=(($fRec3179400)|0);
 var $4709=HEAPF32[(($arrayidx9401)>>2)];
 var $fRec3179402=(($this1+525096)|0);
 var $arrayidx9403=(($fRec3179402+4)|0);
 HEAPF32[(($arrayidx9403)>>2)]=$4709;
 var $fRec3169404=(($this1+525084)|0);
 var $arrayidx9405=(($fRec3169404+4)|0);
 var $4710=HEAPF32[(($arrayidx9405)>>2)];
 var $fRec3169406=(($this1+525084)|0);
 var $arrayidx9407=(($fRec3169406+8)|0);
 HEAPF32[(($arrayidx9407)>>2)]=$4710;
 var $fRec3169408=(($this1+525084)|0);
 var $arrayidx9409=(($fRec3169408)|0);
 var $4711=HEAPF32[(($arrayidx9409)>>2)];
 var $fRec3169410=(($this1+525084)|0);
 var $arrayidx9411=(($fRec3169410+4)|0);
 HEAPF32[(($arrayidx9411)>>2)]=$4711;
 var $fRec3159412=(($this1+525072)|0);
 var $arrayidx9413=(($fRec3159412+4)|0);
 var $4712=HEAPF32[(($arrayidx9413)>>2)];
 var $fRec3159414=(($this1+525072)|0);
 var $arrayidx9415=(($fRec3159414+8)|0);
 HEAPF32[(($arrayidx9415)>>2)]=$4712;
 var $fRec3159416=(($this1+525072)|0);
 var $arrayidx9417=(($fRec3159416)|0);
 var $4713=HEAPF32[(($arrayidx9417)>>2)];
 var $fRec3159418=(($this1+525072)|0);
 var $arrayidx9419=(($fRec3159418+4)|0);
 HEAPF32[(($arrayidx9419)>>2)]=$4713;
 var $fRec3239420=(($this1+525064)|0);
 var $arrayidx9421=(($fRec3239420)|0);
 var $4714=HEAPF32[(($arrayidx9421)>>2)];
 var $fRec3239422=(($this1+525064)|0);
 var $arrayidx9423=(($fRec3239422+4)|0);
 HEAPF32[(($arrayidx9423)>>2)]=$4714;
 var $fRec3229424=(($this1+525052)|0);
 var $arrayidx9425=(($fRec3229424+4)|0);
 var $4715=HEAPF32[(($arrayidx9425)>>2)];
 var $fRec3229426=(($this1+525052)|0);
 var $arrayidx9427=(($fRec3229426+8)|0);
 HEAPF32[(($arrayidx9427)>>2)]=$4715;
 var $fRec3229428=(($this1+525052)|0);
 var $arrayidx9429=(($fRec3229428)|0);
 var $4716=HEAPF32[(($arrayidx9429)>>2)];
 var $fRec3229430=(($this1+525052)|0);
 var $arrayidx9431=(($fRec3229430+4)|0);
 HEAPF32[(($arrayidx9431)>>2)]=$4716;
 var $fVec439432=(($this1+525044)|0);
 var $arrayidx9433=(($fVec439432)|0);
 var $4717=HEAPF32[(($arrayidx9433)>>2)];
 var $fVec439434=(($this1+525044)|0);
 var $arrayidx9435=(($fVec439434+4)|0);
 HEAPF32[(($arrayidx9435)>>2)]=$4717;
 var $fRec3219436=(($this1+525036)|0);
 var $arrayidx9437=(($fRec3219436)|0);
 var $4718=HEAPF32[(($arrayidx9437)>>2)];
 var $fRec3219438=(($this1+525036)|0);
 var $arrayidx9439=(($fRec3219438+4)|0);
 HEAPF32[(($arrayidx9439)>>2)]=$4718;
 var $fRec3209440=(($this1+525024)|0);
 var $arrayidx9441=(($fRec3209440+4)|0);
 var $4719=HEAPF32[(($arrayidx9441)>>2)];
 var $fRec3209442=(($this1+525024)|0);
 var $arrayidx9443=(($fRec3209442+8)|0);
 HEAPF32[(($arrayidx9443)>>2)]=$4719;
 var $fRec3209444=(($this1+525024)|0);
 var $arrayidx9445=(($fRec3209444)|0);
 var $4720=HEAPF32[(($arrayidx9445)>>2)];
 var $fRec3209446=(($this1+525024)|0);
 var $arrayidx9447=(($fRec3209446+4)|0);
 HEAPF32[(($arrayidx9447)>>2)]=$4720;
 var $fRec3259448=(($this1+525016)|0);
 var $arrayidx9449=(($fRec3259448)|0);
 var $4721=HEAPF32[(($arrayidx9449)>>2)];
 var $fRec3259450=(($this1+525016)|0);
 var $arrayidx9451=(($fRec3259450+4)|0);
 HEAPF32[(($arrayidx9451)>>2)]=$4721;
 var $fRec3249452=(($this1+525004)|0);
 var $arrayidx9453=(($fRec3249452+4)|0);
 var $4722=HEAPF32[(($arrayidx9453)>>2)];
 var $fRec3249454=(($this1+525004)|0);
 var $arrayidx9455=(($fRec3249454+8)|0);
 HEAPF32[(($arrayidx9455)>>2)]=$4722;
 var $fRec3249456=(($this1+525004)|0);
 var $arrayidx9457=(($fRec3249456)|0);
 var $4723=HEAPF32[(($arrayidx9457)>>2)];
 var $fRec3249458=(($this1+525004)|0);
 var $arrayidx9459=(($fRec3249458+4)|0);
 HEAPF32[(($arrayidx9459)>>2)]=$4723;
 var $fRec3309460=(($this1+524996)|0);
 var $arrayidx9461=(($fRec3309460)|0);
 var $4724=HEAPF32[(($arrayidx9461)>>2)];
 var $fRec3309462=(($this1+524996)|0);
 var $arrayidx9463=(($fRec3309462+4)|0);
 HEAPF32[(($arrayidx9463)>>2)]=$4724;
 var $fRec3299464=(($this1+524984)|0);
 var $arrayidx9465=(($fRec3299464+4)|0);
 var $4725=HEAPF32[(($arrayidx9465)>>2)];
 var $fRec3299466=(($this1+524984)|0);
 var $arrayidx9467=(($fRec3299466+8)|0);
 HEAPF32[(($arrayidx9467)>>2)]=$4725;
 var $fRec3299468=(($this1+524984)|0);
 var $arrayidx9469=(($fRec3299468)|0);
 var $4726=HEAPF32[(($arrayidx9469)>>2)];
 var $fRec3299470=(($this1+524984)|0);
 var $arrayidx9471=(($fRec3299470+4)|0);
 HEAPF32[(($arrayidx9471)>>2)]=$4726;
 var $fRec3289472=(($this1+524972)|0);
 var $arrayidx9473=(($fRec3289472+4)|0);
 var $4727=HEAPF32[(($arrayidx9473)>>2)];
 var $fRec3289474=(($this1+524972)|0);
 var $arrayidx9475=(($fRec3289474+8)|0);
 HEAPF32[(($arrayidx9475)>>2)]=$4727;
 var $fRec3289476=(($this1+524972)|0);
 var $arrayidx9477=(($fRec3289476)|0);
 var $4728=HEAPF32[(($arrayidx9477)>>2)];
 var $fRec3289478=(($this1+524972)|0);
 var $arrayidx9479=(($fRec3289478+4)|0);
 HEAPF32[(($arrayidx9479)>>2)]=$4728;
 var $fRec3279480=(($this1+524960)|0);
 var $arrayidx9481=(($fRec3279480+4)|0);
 var $4729=HEAPF32[(($arrayidx9481)>>2)];
 var $fRec3279482=(($this1+524960)|0);
 var $arrayidx9483=(($fRec3279482+8)|0);
 HEAPF32[(($arrayidx9483)>>2)]=$4729;
 var $fRec3279484=(($this1+524960)|0);
 var $arrayidx9485=(($fRec3279484)|0);
 var $4730=HEAPF32[(($arrayidx9485)>>2)];
 var $fRec3279486=(($this1+524960)|0);
 var $arrayidx9487=(($fRec3279486+4)|0);
 HEAPF32[(($arrayidx9487)>>2)]=$4730;
 var $fRec3269488=(($this1+524948)|0);
 var $arrayidx9489=(($fRec3269488+4)|0);
 var $4731=HEAPF32[(($arrayidx9489)>>2)];
 var $fRec3269490=(($this1+524948)|0);
 var $arrayidx9491=(($fRec3269490+8)|0);
 HEAPF32[(($arrayidx9491)>>2)]=$4731;
 var $fRec3269492=(($this1+524948)|0);
 var $arrayidx9493=(($fRec3269492)|0);
 var $4732=HEAPF32[(($arrayidx9493)>>2)];
 var $fRec3269494=(($this1+524948)|0);
 var $arrayidx9495=(($fRec3269494+4)|0);
 HEAPF32[(($arrayidx9495)>>2)]=$4732;
 var $fRec3369496=(($this1+524940)|0);
 var $arrayidx9497=(($fRec3369496)|0);
 var $4733=HEAPF32[(($arrayidx9497)>>2)];
 var $fRec3369498=(($this1+524940)|0);
 var $arrayidx9499=(($fRec3369498+4)|0);
 HEAPF32[(($arrayidx9499)>>2)]=$4733;
 var $fRec3359500=(($this1+524928)|0);
 var $arrayidx9501=(($fRec3359500+4)|0);
 var $4734=HEAPF32[(($arrayidx9501)>>2)];
 var $fRec3359502=(($this1+524928)|0);
 var $arrayidx9503=(($fRec3359502+8)|0);
 HEAPF32[(($arrayidx9503)>>2)]=$4734;
 var $fRec3359504=(($this1+524928)|0);
 var $arrayidx9505=(($fRec3359504)|0);
 var $4735=HEAPF32[(($arrayidx9505)>>2)];
 var $fRec3359506=(($this1+524928)|0);
 var $arrayidx9507=(($fRec3359506+4)|0);
 HEAPF32[(($arrayidx9507)>>2)]=$4735;
 var $fVec449508=(($this1+524920)|0);
 var $arrayidx9509=(($fVec449508)|0);
 var $4736=HEAPF32[(($arrayidx9509)>>2)];
 var $fVec449510=(($this1+524920)|0);
 var $arrayidx9511=(($fVec449510+4)|0);
 HEAPF32[(($arrayidx9511)>>2)]=$4736;
 var $fRec3349512=(($this1+524912)|0);
 var $arrayidx9513=(($fRec3349512)|0);
 var $4737=HEAPF32[(($arrayidx9513)>>2)];
 var $fRec3349514=(($this1+524912)|0);
 var $arrayidx9515=(($fRec3349514+4)|0);
 HEAPF32[(($arrayidx9515)>>2)]=$4737;
 var $fRec3339516=(($this1+524900)|0);
 var $arrayidx9517=(($fRec3339516+4)|0);
 var $4738=HEAPF32[(($arrayidx9517)>>2)];
 var $fRec3339518=(($this1+524900)|0);
 var $arrayidx9519=(($fRec3339518+8)|0);
 HEAPF32[(($arrayidx9519)>>2)]=$4738;
 var $fRec3339520=(($this1+524900)|0);
 var $arrayidx9521=(($fRec3339520)|0);
 var $4739=HEAPF32[(($arrayidx9521)>>2)];
 var $fRec3339522=(($this1+524900)|0);
 var $arrayidx9523=(($fRec3339522+4)|0);
 HEAPF32[(($arrayidx9523)>>2)]=$4739;
 var $fRec3329524=(($this1+524888)|0);
 var $arrayidx9525=(($fRec3329524+4)|0);
 var $4740=HEAPF32[(($arrayidx9525)>>2)];
 var $fRec3329526=(($this1+524888)|0);
 var $arrayidx9527=(($fRec3329526+8)|0);
 HEAPF32[(($arrayidx9527)>>2)]=$4740;
 var $fRec3329528=(($this1+524888)|0);
 var $arrayidx9529=(($fRec3329528)|0);
 var $4741=HEAPF32[(($arrayidx9529)>>2)];
 var $fRec3329530=(($this1+524888)|0);
 var $arrayidx9531=(($fRec3329530+4)|0);
 HEAPF32[(($arrayidx9531)>>2)]=$4741;
 var $fRec3319532=(($this1+524876)|0);
 var $arrayidx9533=(($fRec3319532+4)|0);
 var $4742=HEAPF32[(($arrayidx9533)>>2)];
 var $fRec3319534=(($this1+524876)|0);
 var $arrayidx9535=(($fRec3319534+8)|0);
 HEAPF32[(($arrayidx9535)>>2)]=$4742;
 var $fRec3319536=(($this1+524876)|0);
 var $arrayidx9537=(($fRec3319536)|0);
 var $4743=HEAPF32[(($arrayidx9537)>>2)];
 var $fRec3319538=(($this1+524876)|0);
 var $arrayidx9539=(($fRec3319538+4)|0);
 HEAPF32[(($arrayidx9539)>>2)]=$4743;
 var $fRec3419540=(($this1+524868)|0);
 var $arrayidx9541=(($fRec3419540)|0);
 var $4744=HEAPF32[(($arrayidx9541)>>2)];
 var $fRec3419542=(($this1+524868)|0);
 var $arrayidx9543=(($fRec3419542+4)|0);
 HEAPF32[(($arrayidx9543)>>2)]=$4744;
 var $fRec3409544=(($this1+524856)|0);
 var $arrayidx9545=(($fRec3409544+4)|0);
 var $4745=HEAPF32[(($arrayidx9545)>>2)];
 var $fRec3409546=(($this1+524856)|0);
 var $arrayidx9547=(($fRec3409546+8)|0);
 HEAPF32[(($arrayidx9547)>>2)]=$4745;
 var $fRec3409548=(($this1+524856)|0);
 var $arrayidx9549=(($fRec3409548)|0);
 var $4746=HEAPF32[(($arrayidx9549)>>2)];
 var $fRec3409550=(($this1+524856)|0);
 var $arrayidx9551=(($fRec3409550+4)|0);
 HEAPF32[(($arrayidx9551)>>2)]=$4746;
 var $fVec459552=(($this1+524848)|0);
 var $arrayidx9553=(($fVec459552)|0);
 var $4747=HEAPF32[(($arrayidx9553)>>2)];
 var $fVec459554=(($this1+524848)|0);
 var $arrayidx9555=(($fVec459554+4)|0);
 HEAPF32[(($arrayidx9555)>>2)]=$4747;
 var $fRec3399556=(($this1+524840)|0);
 var $arrayidx9557=(($fRec3399556)|0);
 var $4748=HEAPF32[(($arrayidx9557)>>2)];
 var $fRec3399558=(($this1+524840)|0);
 var $arrayidx9559=(($fRec3399558+4)|0);
 HEAPF32[(($arrayidx9559)>>2)]=$4748;
 var $fRec3389560=(($this1+524828)|0);
 var $arrayidx9561=(($fRec3389560+4)|0);
 var $4749=HEAPF32[(($arrayidx9561)>>2)];
 var $fRec3389562=(($this1+524828)|0);
 var $arrayidx9563=(($fRec3389562+8)|0);
 HEAPF32[(($arrayidx9563)>>2)]=$4749;
 var $fRec3389564=(($this1+524828)|0);
 var $arrayidx9565=(($fRec3389564)|0);
 var $4750=HEAPF32[(($arrayidx9565)>>2)];
 var $fRec3389566=(($this1+524828)|0);
 var $arrayidx9567=(($fRec3389566+4)|0);
 HEAPF32[(($arrayidx9567)>>2)]=$4750;
 var $fRec3379568=(($this1+524816)|0);
 var $arrayidx9569=(($fRec3379568+4)|0);
 var $4751=HEAPF32[(($arrayidx9569)>>2)];
 var $fRec3379570=(($this1+524816)|0);
 var $arrayidx9571=(($fRec3379570+8)|0);
 HEAPF32[(($arrayidx9571)>>2)]=$4751;
 var $fRec3379572=(($this1+524816)|0);
 var $arrayidx9573=(($fRec3379572)|0);
 var $4752=HEAPF32[(($arrayidx9573)>>2)];
 var $fRec3379574=(($this1+524816)|0);
 var $arrayidx9575=(($fRec3379574+4)|0);
 HEAPF32[(($arrayidx9575)>>2)]=$4752;
 var $fRec3459576=(($this1+524808)|0);
 var $arrayidx9577=(($fRec3459576)|0);
 var $4753=HEAPF32[(($arrayidx9577)>>2)];
 var $fRec3459578=(($this1+524808)|0);
 var $arrayidx9579=(($fRec3459578+4)|0);
 HEAPF32[(($arrayidx9579)>>2)]=$4753;
 var $fRec3449580=(($this1+524796)|0);
 var $arrayidx9581=(($fRec3449580+4)|0);
 var $4754=HEAPF32[(($arrayidx9581)>>2)];
 var $fRec3449582=(($this1+524796)|0);
 var $arrayidx9583=(($fRec3449582+8)|0);
 HEAPF32[(($arrayidx9583)>>2)]=$4754;
 var $fRec3449584=(($this1+524796)|0);
 var $arrayidx9585=(($fRec3449584)|0);
 var $4755=HEAPF32[(($arrayidx9585)>>2)];
 var $fRec3449586=(($this1+524796)|0);
 var $arrayidx9587=(($fRec3449586+4)|0);
 HEAPF32[(($arrayidx9587)>>2)]=$4755;
 var $fVec469588=(($this1+524788)|0);
 var $arrayidx9589=(($fVec469588)|0);
 var $4756=HEAPF32[(($arrayidx9589)>>2)];
 var $fVec469590=(($this1+524788)|0);
 var $arrayidx9591=(($fVec469590+4)|0);
 HEAPF32[(($arrayidx9591)>>2)]=$4756;
 var $fRec3439592=(($this1+524780)|0);
 var $arrayidx9593=(($fRec3439592)|0);
 var $4757=HEAPF32[(($arrayidx9593)>>2)];
 var $fRec3439594=(($this1+524780)|0);
 var $arrayidx9595=(($fRec3439594+4)|0);
 HEAPF32[(($arrayidx9595)>>2)]=$4757;
 var $fRec3429596=(($this1+524768)|0);
 var $arrayidx9597=(($fRec3429596+4)|0);
 var $4758=HEAPF32[(($arrayidx9597)>>2)];
 var $fRec3429598=(($this1+524768)|0);
 var $arrayidx9599=(($fRec3429598+8)|0);
 HEAPF32[(($arrayidx9599)>>2)]=$4758;
 var $fRec3429600=(($this1+524768)|0);
 var $arrayidx9601=(($fRec3429600)|0);
 var $4759=HEAPF32[(($arrayidx9601)>>2)];
 var $fRec3429602=(($this1+524768)|0);
 var $arrayidx9603=(($fRec3429602+4)|0);
 HEAPF32[(($arrayidx9603)>>2)]=$4759;
 var $fRec3479604=(($this1+524760)|0);
 var $arrayidx9605=(($fRec3479604)|0);
 var $4760=HEAPF32[(($arrayidx9605)>>2)];
 var $fRec3479606=(($this1+524760)|0);
 var $arrayidx9607=(($fRec3479606+4)|0);
 HEAPF32[(($arrayidx9607)>>2)]=$4760;
 var $fRec3469608=(($this1+524748)|0);
 var $arrayidx9609=(($fRec3469608+4)|0);
 var $4761=HEAPF32[(($arrayidx9609)>>2)];
 var $fRec3469610=(($this1+524748)|0);
 var $arrayidx9611=(($fRec3469610+8)|0);
 HEAPF32[(($arrayidx9611)>>2)]=$4761;
 var $fRec3469612=(($this1+524748)|0);
 var $arrayidx9613=(($fRec3469612)|0);
 var $4762=HEAPF32[(($arrayidx9613)>>2)];
 var $fRec3469614=(($this1+524748)|0);
 var $arrayidx9615=(($fRec3469614+4)|0);
 HEAPF32[(($arrayidx9615)>>2)]=$4762;
 var $fRec3529616=(($this1+524740)|0);
 var $arrayidx9617=(($fRec3529616)|0);
 var $4763=HEAPF32[(($arrayidx9617)>>2)];
 var $fRec3529618=(($this1+524740)|0);
 var $arrayidx9619=(($fRec3529618+4)|0);
 HEAPF32[(($arrayidx9619)>>2)]=$4763;
 var $fRec3519620=(($this1+524728)|0);
 var $arrayidx9621=(($fRec3519620+4)|0);
 var $4764=HEAPF32[(($arrayidx9621)>>2)];
 var $fRec3519622=(($this1+524728)|0);
 var $arrayidx9623=(($fRec3519622+8)|0);
 HEAPF32[(($arrayidx9623)>>2)]=$4764;
 var $fRec3519624=(($this1+524728)|0);
 var $arrayidx9625=(($fRec3519624)|0);
 var $4765=HEAPF32[(($arrayidx9625)>>2)];
 var $fRec3519626=(($this1+524728)|0);
 var $arrayidx9627=(($fRec3519626+4)|0);
 HEAPF32[(($arrayidx9627)>>2)]=$4765;
 var $fRec3509628=(($this1+524716)|0);
 var $arrayidx9629=(($fRec3509628+4)|0);
 var $4766=HEAPF32[(($arrayidx9629)>>2)];
 var $fRec3509630=(($this1+524716)|0);
 var $arrayidx9631=(($fRec3509630+8)|0);
 HEAPF32[(($arrayidx9631)>>2)]=$4766;
 var $fRec3509632=(($this1+524716)|0);
 var $arrayidx9633=(($fRec3509632)|0);
 var $4767=HEAPF32[(($arrayidx9633)>>2)];
 var $fRec3509634=(($this1+524716)|0);
 var $arrayidx9635=(($fRec3509634+4)|0);
 HEAPF32[(($arrayidx9635)>>2)]=$4767;
 var $fRec3499636=(($this1+524704)|0);
 var $arrayidx9637=(($fRec3499636+4)|0);
 var $4768=HEAPF32[(($arrayidx9637)>>2)];
 var $fRec3499638=(($this1+524704)|0);
 var $arrayidx9639=(($fRec3499638+8)|0);
 HEAPF32[(($arrayidx9639)>>2)]=$4768;
 var $fRec3499640=(($this1+524704)|0);
 var $arrayidx9641=(($fRec3499640)|0);
 var $4769=HEAPF32[(($arrayidx9641)>>2)];
 var $fRec3499642=(($this1+524704)|0);
 var $arrayidx9643=(($fRec3499642+4)|0);
 HEAPF32[(($arrayidx9643)>>2)]=$4769;
 var $fRec3489644=(($this1+524692)|0);
 var $arrayidx9645=(($fRec3489644+4)|0);
 var $4770=HEAPF32[(($arrayidx9645)>>2)];
 var $fRec3489646=(($this1+524692)|0);
 var $arrayidx9647=(($fRec3489646+8)|0);
 HEAPF32[(($arrayidx9647)>>2)]=$4770;
 var $fRec3489648=(($this1+524692)|0);
 var $arrayidx9649=(($fRec3489648)|0);
 var $4771=HEAPF32[(($arrayidx9649)>>2)];
 var $fRec3489650=(($this1+524692)|0);
 var $arrayidx9651=(($fRec3489650+4)|0);
 HEAPF32[(($arrayidx9651)>>2)]=$4771;
 var $fRec3589652=(($this1+524684)|0);
 var $arrayidx9653=(($fRec3589652)|0);
 var $4772=HEAPF32[(($arrayidx9653)>>2)];
 var $fRec3589654=(($this1+524684)|0);
 var $arrayidx9655=(($fRec3589654+4)|0);
 HEAPF32[(($arrayidx9655)>>2)]=$4772;
 var $fRec3579656=(($this1+524672)|0);
 var $arrayidx9657=(($fRec3579656+4)|0);
 var $4773=HEAPF32[(($arrayidx9657)>>2)];
 var $fRec3579658=(($this1+524672)|0);
 var $arrayidx9659=(($fRec3579658+8)|0);
 HEAPF32[(($arrayidx9659)>>2)]=$4773;
 var $fRec3579660=(($this1+524672)|0);
 var $arrayidx9661=(($fRec3579660)|0);
 var $4774=HEAPF32[(($arrayidx9661)>>2)];
 var $fRec3579662=(($this1+524672)|0);
 var $arrayidx9663=(($fRec3579662+4)|0);
 HEAPF32[(($arrayidx9663)>>2)]=$4774;
 var $fVec479664=(($this1+524664)|0);
 var $arrayidx9665=(($fVec479664)|0);
 var $4775=HEAPF32[(($arrayidx9665)>>2)];
 var $fVec479666=(($this1+524664)|0);
 var $arrayidx9667=(($fVec479666+4)|0);
 HEAPF32[(($arrayidx9667)>>2)]=$4775;
 var $fRec3569668=(($this1+524656)|0);
 var $arrayidx9669=(($fRec3569668)|0);
 var $4776=HEAPF32[(($arrayidx9669)>>2)];
 var $fRec3569670=(($this1+524656)|0);
 var $arrayidx9671=(($fRec3569670+4)|0);
 HEAPF32[(($arrayidx9671)>>2)]=$4776;
 var $fRec3559672=(($this1+524644)|0);
 var $arrayidx9673=(($fRec3559672+4)|0);
 var $4777=HEAPF32[(($arrayidx9673)>>2)];
 var $fRec3559674=(($this1+524644)|0);
 var $arrayidx9675=(($fRec3559674+8)|0);
 HEAPF32[(($arrayidx9675)>>2)]=$4777;
 var $fRec3559676=(($this1+524644)|0);
 var $arrayidx9677=(($fRec3559676)|0);
 var $4778=HEAPF32[(($arrayidx9677)>>2)];
 var $fRec3559678=(($this1+524644)|0);
 var $arrayidx9679=(($fRec3559678+4)|0);
 HEAPF32[(($arrayidx9679)>>2)]=$4778;
 var $fRec3549680=(($this1+524632)|0);
 var $arrayidx9681=(($fRec3549680+4)|0);
 var $4779=HEAPF32[(($arrayidx9681)>>2)];
 var $fRec3549682=(($this1+524632)|0);
 var $arrayidx9683=(($fRec3549682+8)|0);
 HEAPF32[(($arrayidx9683)>>2)]=$4779;
 var $fRec3549684=(($this1+524632)|0);
 var $arrayidx9685=(($fRec3549684)|0);
 var $4780=HEAPF32[(($arrayidx9685)>>2)];
 var $fRec3549686=(($this1+524632)|0);
 var $arrayidx9687=(($fRec3549686+4)|0);
 HEAPF32[(($arrayidx9687)>>2)]=$4780;
 var $fRec3539688=(($this1+524620)|0);
 var $arrayidx9689=(($fRec3539688+4)|0);
 var $4781=HEAPF32[(($arrayidx9689)>>2)];
 var $fRec3539690=(($this1+524620)|0);
 var $arrayidx9691=(($fRec3539690+8)|0);
 HEAPF32[(($arrayidx9691)>>2)]=$4781;
 var $fRec3539692=(($this1+524620)|0);
 var $arrayidx9693=(($fRec3539692)|0);
 var $4782=HEAPF32[(($arrayidx9693)>>2)];
 var $fRec3539694=(($this1+524620)|0);
 var $arrayidx9695=(($fRec3539694+4)|0);
 HEAPF32[(($arrayidx9695)>>2)]=$4782;
 var $fRec3639696=(($this1+524612)|0);
 var $arrayidx9697=(($fRec3639696)|0);
 var $4783=HEAPF32[(($arrayidx9697)>>2)];
 var $fRec3639698=(($this1+524612)|0);
 var $arrayidx9699=(($fRec3639698+4)|0);
 HEAPF32[(($arrayidx9699)>>2)]=$4783;
 var $fRec3629700=(($this1+524600)|0);
 var $arrayidx9701=(($fRec3629700+4)|0);
 var $4784=HEAPF32[(($arrayidx9701)>>2)];
 var $fRec3629702=(($this1+524600)|0);
 var $arrayidx9703=(($fRec3629702+8)|0);
 HEAPF32[(($arrayidx9703)>>2)]=$4784;
 var $fRec3629704=(($this1+524600)|0);
 var $arrayidx9705=(($fRec3629704)|0);
 var $4785=HEAPF32[(($arrayidx9705)>>2)];
 var $fRec3629706=(($this1+524600)|0);
 var $arrayidx9707=(($fRec3629706+4)|0);
 HEAPF32[(($arrayidx9707)>>2)]=$4785;
 var $fVec489708=(($this1+524592)|0);
 var $arrayidx9709=(($fVec489708)|0);
 var $4786=HEAPF32[(($arrayidx9709)>>2)];
 var $fVec489710=(($this1+524592)|0);
 var $arrayidx9711=(($fVec489710+4)|0);
 HEAPF32[(($arrayidx9711)>>2)]=$4786;
 var $fRec3619712=(($this1+524584)|0);
 var $arrayidx9713=(($fRec3619712)|0);
 var $4787=HEAPF32[(($arrayidx9713)>>2)];
 var $fRec3619714=(($this1+524584)|0);
 var $arrayidx9715=(($fRec3619714+4)|0);
 HEAPF32[(($arrayidx9715)>>2)]=$4787;
 var $fRec3609716=(($this1+524572)|0);
 var $arrayidx9717=(($fRec3609716+4)|0);
 var $4788=HEAPF32[(($arrayidx9717)>>2)];
 var $fRec3609718=(($this1+524572)|0);
 var $arrayidx9719=(($fRec3609718+8)|0);
 HEAPF32[(($arrayidx9719)>>2)]=$4788;
 var $fRec3609720=(($this1+524572)|0);
 var $arrayidx9721=(($fRec3609720)|0);
 var $4789=HEAPF32[(($arrayidx9721)>>2)];
 var $fRec3609722=(($this1+524572)|0);
 var $arrayidx9723=(($fRec3609722+4)|0);
 HEAPF32[(($arrayidx9723)>>2)]=$4789;
 var $fRec3599724=(($this1+524560)|0);
 var $arrayidx9725=(($fRec3599724+4)|0);
 var $4790=HEAPF32[(($arrayidx9725)>>2)];
 var $fRec3599726=(($this1+524560)|0);
 var $arrayidx9727=(($fRec3599726+8)|0);
 HEAPF32[(($arrayidx9727)>>2)]=$4790;
 var $fRec3599728=(($this1+524560)|0);
 var $arrayidx9729=(($fRec3599728)|0);
 var $4791=HEAPF32[(($arrayidx9729)>>2)];
 var $fRec3599730=(($this1+524560)|0);
 var $arrayidx9731=(($fRec3599730+4)|0);
 HEAPF32[(($arrayidx9731)>>2)]=$4791;
 var $fRec3679732=(($this1+524552)|0);
 var $arrayidx9733=(($fRec3679732)|0);
 var $4792=HEAPF32[(($arrayidx9733)>>2)];
 var $fRec3679734=(($this1+524552)|0);
 var $arrayidx9735=(($fRec3679734+4)|0);
 HEAPF32[(($arrayidx9735)>>2)]=$4792;
 var $fRec3669736=(($this1+524540)|0);
 var $arrayidx9737=(($fRec3669736+4)|0);
 var $4793=HEAPF32[(($arrayidx9737)>>2)];
 var $fRec3669738=(($this1+524540)|0);
 var $arrayidx9739=(($fRec3669738+8)|0);
 HEAPF32[(($arrayidx9739)>>2)]=$4793;
 var $fRec3669740=(($this1+524540)|0);
 var $arrayidx9741=(($fRec3669740)|0);
 var $4794=HEAPF32[(($arrayidx9741)>>2)];
 var $fRec3669742=(($this1+524540)|0);
 var $arrayidx9743=(($fRec3669742+4)|0);
 HEAPF32[(($arrayidx9743)>>2)]=$4794;
 var $fVec499744=(($this1+524532)|0);
 var $arrayidx9745=(($fVec499744)|0);
 var $4795=HEAPF32[(($arrayidx9745)>>2)];
 var $fVec499746=(($this1+524532)|0);
 var $arrayidx9747=(($fVec499746+4)|0);
 HEAPF32[(($arrayidx9747)>>2)]=$4795;
 var $fRec3659748=(($this1+524524)|0);
 var $arrayidx9749=(($fRec3659748)|0);
 var $4796=HEAPF32[(($arrayidx9749)>>2)];
 var $fRec3659750=(($this1+524524)|0);
 var $arrayidx9751=(($fRec3659750+4)|0);
 HEAPF32[(($arrayidx9751)>>2)]=$4796;
 var $fRec3649752=(($this1+524512)|0);
 var $arrayidx9753=(($fRec3649752+4)|0);
 var $4797=HEAPF32[(($arrayidx9753)>>2)];
 var $fRec3649754=(($this1+524512)|0);
 var $arrayidx9755=(($fRec3649754+8)|0);
 HEAPF32[(($arrayidx9755)>>2)]=$4797;
 var $fRec3649756=(($this1+524512)|0);
 var $arrayidx9757=(($fRec3649756)|0);
 var $4798=HEAPF32[(($arrayidx9757)>>2)];
 var $fRec3649758=(($this1+524512)|0);
 var $arrayidx9759=(($fRec3649758+4)|0);
 HEAPF32[(($arrayidx9759)>>2)]=$4798;
 var $fRec3699760=(($this1+524504)|0);
 var $arrayidx9761=(($fRec3699760)|0);
 var $4799=HEAPF32[(($arrayidx9761)>>2)];
 var $fRec3699762=(($this1+524504)|0);
 var $arrayidx9763=(($fRec3699762+4)|0);
 HEAPF32[(($arrayidx9763)>>2)]=$4799;
 var $fRec3689764=(($this1+524492)|0);
 var $arrayidx9765=(($fRec3689764+4)|0);
 var $4800=HEAPF32[(($arrayidx9765)>>2)];
 var $fRec3689766=(($this1+524492)|0);
 var $arrayidx9767=(($fRec3689766+8)|0);
 HEAPF32[(($arrayidx9767)>>2)]=$4800;
 var $fRec3689768=(($this1+524492)|0);
 var $arrayidx9769=(($fRec3689768)|0);
 var $4801=HEAPF32[(($arrayidx9769)>>2)];
 var $fRec3689770=(($this1+524492)|0);
 var $arrayidx9771=(($fRec3689770+4)|0);
 HEAPF32[(($arrayidx9771)>>2)]=$4801;
 var $IOTA9772=(($this1+528716)|0);
 var $4802=HEAP32[(($IOTA9772)>>2)];
 var $add9773=((($4802)+(1))|0);
 var $IOTA9774=(($this1+528716)|0);
 HEAP32[(($IOTA9774)>>2)]=$add9773;
 var $fRec09775=(($this1+491712)|0);
 var $arrayidx9776=(($fRec09775+4)|0);
 var $4803=HEAPF32[(($arrayidx9776)>>2)];
 var $fRec09777=(($this1+491712)|0);
 var $arrayidx9778=(($fRec09777+8)|0);
 HEAPF32[(($arrayidx9778)>>2)]=$4803;
 var $fRec09779=(($this1+491712)|0);
 var $arrayidx9780=(($fRec09779)|0);
 var $4804=HEAPF32[(($arrayidx9780)>>2)];
 var $fRec09781=(($this1+491712)|0);
 var $arrayidx9782=(($fRec09781+4)|0);
 HEAPF32[(($arrayidx9782)>>2)]=$4804;
 var $fVec519783=(($this1+491704)|0);
 var $arrayidx9784=(($fVec519783)|0);
 var $4805=HEAPF32[(($arrayidx9784)>>2)];
 var $fVec519785=(($this1+491704)|0);
 var $arrayidx9786=(($fVec519785+4)|0);
 HEAPF32[(($arrayidx9786)>>2)]=$4805;
 var $fRec19787=(($this1+458924)|0);
 var $arrayidx9788=(($fRec19787+4)|0);
 var $4806=HEAPF32[(($arrayidx9788)>>2)];
 var $fRec19789=(($this1+458924)|0);
 var $arrayidx9790=(($fRec19789+8)|0);
 HEAPF32[(($arrayidx9790)>>2)]=$4806;
 var $fRec19791=(($this1+458924)|0);
 var $arrayidx9792=(($fRec19791)|0);
 var $4807=HEAPF32[(($arrayidx9792)>>2)];
 var $fRec19793=(($this1+458924)|0);
 var $arrayidx9794=(($fRec19793+4)|0);
 HEAPF32[(($arrayidx9794)>>2)]=$4807;
 var $fRec29795=(($this1+426144)|0);
 var $arrayidx9796=(($fRec29795+4)|0);
 var $4808=HEAPF32[(($arrayidx9796)>>2)];
 var $fRec29797=(($this1+426144)|0);
 var $arrayidx9798=(($fRec29797+8)|0);
 HEAPF32[(($arrayidx9798)>>2)]=$4808;
 var $fRec29799=(($this1+426144)|0);
 var $arrayidx9800=(($fRec29799)|0);
 var $4809=HEAPF32[(($arrayidx9800)>>2)];
 var $fRec29801=(($this1+426144)|0);
 var $arrayidx9802=(($fRec29801+4)|0);
 HEAPF32[(($arrayidx9802)>>2)]=$4809;
 var $fRec39803=(($this1+393364)|0);
 var $arrayidx9804=(($fRec39803+4)|0);
 var $4810=HEAPF32[(($arrayidx9804)>>2)];
 var $fRec39805=(($this1+393364)|0);
 var $arrayidx9806=(($fRec39805+8)|0);
 HEAPF32[(($arrayidx9806)>>2)]=$4810;
 var $fRec39807=(($this1+393364)|0);
 var $arrayidx9808=(($fRec39807)|0);
 var $4811=HEAPF32[(($arrayidx9808)>>2)];
 var $fRec39809=(($this1+393364)|0);
 var $arrayidx9810=(($fRec39809+4)|0);
 HEAPF32[(($arrayidx9810)>>2)]=$4811;
 var $fRec49811=(($this1+360584)|0);
 var $arrayidx9812=(($fRec49811+4)|0);
 var $4812=HEAPF32[(($arrayidx9812)>>2)];
 var $fRec49813=(($this1+360584)|0);
 var $arrayidx9814=(($fRec49813+8)|0);
 HEAPF32[(($arrayidx9814)>>2)]=$4812;
 var $fRec49815=(($this1+360584)|0);
 var $arrayidx9816=(($fRec49815)|0);
 var $4813=HEAPF32[(($arrayidx9816)>>2)];
 var $fRec49817=(($this1+360584)|0);
 var $arrayidx9818=(($fRec49817+4)|0);
 HEAPF32[(($arrayidx9818)>>2)]=$4813;
 var $fRec59819=(($this1+327804)|0);
 var $arrayidx9820=(($fRec59819+4)|0);
 var $4814=HEAPF32[(($arrayidx9820)>>2)];
 var $fRec59821=(($this1+327804)|0);
 var $arrayidx9822=(($fRec59821+8)|0);
 HEAPF32[(($arrayidx9822)>>2)]=$4814;
 var $fRec59823=(($this1+327804)|0);
 var $arrayidx9824=(($fRec59823)|0);
 var $4815=HEAPF32[(($arrayidx9824)>>2)];
 var $fRec59825=(($this1+327804)|0);
 var $arrayidx9826=(($fRec59825+4)|0);
 HEAPF32[(($arrayidx9826)>>2)]=$4815;
 var $fRec69827=(($this1+295024)|0);
 var $arrayidx9828=(($fRec69827+4)|0);
 var $4816=HEAPF32[(($arrayidx9828)>>2)];
 var $fRec69829=(($this1+295024)|0);
 var $arrayidx9830=(($fRec69829+8)|0);
 HEAPF32[(($arrayidx9830)>>2)]=$4816;
 var $fRec69831=(($this1+295024)|0);
 var $arrayidx9832=(($fRec69831)|0);
 var $4817=HEAPF32[(($arrayidx9832)>>2)];
 var $fRec69833=(($this1+295024)|0);
 var $arrayidx9834=(($fRec69833+4)|0);
 HEAPF32[(($arrayidx9834)>>2)]=$4817;
 var $fRec79835=(($this1+262244)|0);
 var $arrayidx9836=(($fRec79835+4)|0);
 var $4818=HEAPF32[(($arrayidx9836)>>2)];
 var $fRec79837=(($this1+262244)|0);
 var $arrayidx9838=(($fRec79837+8)|0);
 HEAPF32[(($arrayidx9838)>>2)]=$4818;
 var $fRec79839=(($this1+262244)|0);
 var $arrayidx9840=(($fRec79839)|0);
 var $4819=HEAPF32[(($arrayidx9840)>>2)];
 var $fRec79841=(($this1+262244)|0);
 var $arrayidx9842=(($fRec79841+4)|0);
 HEAPF32[(($arrayidx9842)>>2)]=$4819;
 var $fRec89843=(($this1+229464)|0);
 var $arrayidx9844=(($fRec89843+4)|0);
 var $4820=HEAPF32[(($arrayidx9844)>>2)];
 var $fRec89845=(($this1+229464)|0);
 var $arrayidx9846=(($fRec89845+8)|0);
 HEAPF32[(($arrayidx9846)>>2)]=$4820;
 var $fRec89847=(($this1+229464)|0);
 var $arrayidx9848=(($fRec89847)|0);
 var $4821=HEAPF32[(($arrayidx9848)>>2)];
 var $fRec89849=(($this1+229464)|0);
 var $arrayidx9850=(($fRec89849+4)|0);
 HEAPF32[(($arrayidx9850)>>2)]=$4821;
 var $fRec99851=(($this1+196684)|0);
 var $arrayidx9852=(($fRec99851+4)|0);
 var $4822=HEAPF32[(($arrayidx9852)>>2)];
 var $fRec99853=(($this1+196684)|0);
 var $arrayidx9854=(($fRec99853+8)|0);
 HEAPF32[(($arrayidx9854)>>2)]=$4822;
 var $fRec99855=(($this1+196684)|0);
 var $arrayidx9856=(($fRec99855)|0);
 var $4823=HEAPF32[(($arrayidx9856)>>2)];
 var $fRec99857=(($this1+196684)|0);
 var $arrayidx9858=(($fRec99857+4)|0);
 HEAPF32[(($arrayidx9858)>>2)]=$4823;
 var $fRec109859=(($this1+163904)|0);
 var $arrayidx9860=(($fRec109859+4)|0);
 var $4824=HEAPF32[(($arrayidx9860)>>2)];
 var $fRec109861=(($this1+163904)|0);
 var $arrayidx9862=(($fRec109861+8)|0);
 HEAPF32[(($arrayidx9862)>>2)]=$4824;
 var $fRec109863=(($this1+163904)|0);
 var $arrayidx9864=(($fRec109863)|0);
 var $4825=HEAPF32[(($arrayidx9864)>>2)];
 var $fRec109865=(($this1+163904)|0);
 var $arrayidx9866=(($fRec109865+4)|0);
 HEAPF32[(($arrayidx9866)>>2)]=$4825;
 var $fRec119867=(($this1+131124)|0);
 var $arrayidx9868=(($fRec119867+4)|0);
 var $4826=HEAPF32[(($arrayidx9868)>>2)];
 var $fRec119869=(($this1+131124)|0);
 var $arrayidx9870=(($fRec119869+8)|0);
 HEAPF32[(($arrayidx9870)>>2)]=$4826;
 var $fRec119871=(($this1+131124)|0);
 var $arrayidx9872=(($fRec119871)|0);
 var $4827=HEAPF32[(($arrayidx9872)>>2)];
 var $fRec119873=(($this1+131124)|0);
 var $arrayidx9874=(($fRec119873+4)|0);
 HEAPF32[(($arrayidx9874)>>2)]=$4827;
 var $fRec129875=(($this1+98344)|0);
 var $arrayidx9876=(($fRec129875+4)|0);
 var $4828=HEAPF32[(($arrayidx9876)>>2)];
 var $fRec129877=(($this1+98344)|0);
 var $arrayidx9878=(($fRec129877+8)|0);
 HEAPF32[(($arrayidx9878)>>2)]=$4828;
 var $fRec129879=(($this1+98344)|0);
 var $arrayidx9880=(($fRec129879)|0);
 var $4829=HEAPF32[(($arrayidx9880)>>2)];
 var $fRec129881=(($this1+98344)|0);
 var $arrayidx9882=(($fRec129881+4)|0);
 HEAPF32[(($arrayidx9882)>>2)]=$4829;
 var $fRec139883=(($this1+65564)|0);
 var $arrayidx9884=(($fRec139883+4)|0);
 var $4830=HEAPF32[(($arrayidx9884)>>2)];
 var $fRec139885=(($this1+65564)|0);
 var $arrayidx9886=(($fRec139885+8)|0);
 HEAPF32[(($arrayidx9886)>>2)]=$4830;
 var $fRec139887=(($this1+65564)|0);
 var $arrayidx9888=(($fRec139887)|0);
 var $4831=HEAPF32[(($arrayidx9888)>>2)];
 var $fRec139889=(($this1+65564)|0);
 var $arrayidx9890=(($fRec139889+4)|0);
 HEAPF32[(($arrayidx9890)>>2)]=$4831;
 var $fRec149891=(($this1+32784)|0);
 var $arrayidx9892=(($fRec149891+4)|0);
 var $4832=HEAPF32[(($arrayidx9892)>>2)];
 var $fRec149893=(($this1+32784)|0);
 var $arrayidx9894=(($fRec149893+8)|0);
 HEAPF32[(($arrayidx9894)>>2)]=$4832;
 var $fRec149895=(($this1+32784)|0);
 var $arrayidx9896=(($fRec149895)|0);
 var $4833=HEAPF32[(($arrayidx9896)>>2)];
 var $fRec149897=(($this1+32784)|0);
 var $arrayidx9898=(($fRec149897+4)|0);
 HEAPF32[(($arrayidx9898)>>2)]=$4833;
 var $fRec159899=(($this1+4)|0);
 var $arrayidx9900=(($fRec159899+4)|0);
 var $4834=HEAPF32[(($arrayidx9900)>>2)];
 var $fRec159901=(($this1+4)|0);
 var $arrayidx9902=(($fRec159901+8)|0);
 HEAPF32[(($arrayidx9902)>>2)]=$4834;
 var $fRec159903=(($this1+4)|0);
 var $arrayidx9904=(($fRec159903)|0);
 var $4835=HEAPF32[(($arrayidx9904)>>2)];
 var $fRec159905=(($this1+4)|0);
 var $arrayidx9906=(($fRec159905+4)|0);
 HEAPF32[(($arrayidx9906)>>2)]=$4835;
 label=8;break;
 case 8: 
 var $4836=$i;
 var $add9908=((($4836)+(1))|0);
 $i=$add9908;
 label=2;break;
 case 9: 
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZN14ReverbDesigner12getInputRateEi($this,$channel){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $this_addr;
 var $channel_addr;
 var $rate;
 $this_addr=$this;
 $channel_addr=$channel;
 var $this1=$this_addr;
 var $0=$channel_addr;
 if(($0|0)==0){ label=2;break;}else if(($0|0)==1){ label=3;break;}else{label=4;break;}
 case 2: 
 $rate=1;
 label=5;break;
 case 3: 
 $rate=1;
 label=5;break;
 case 4: 
 $rate=-1;
 label=5;break;
 case 5: 
 var $1=$rate;
 return $1;
  default: assert(0, "bad label: " + label);
 }
}
function __ZN14ReverbDesigner13getOutputRateEi($this,$channel){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $this_addr;
 var $channel_addr;
 var $rate;
 $this_addr=$this;
 $channel_addr=$channel;
 var $this1=$this_addr;
 var $0=$channel_addr;
 if(($0|0)==0){ label=2;break;}else if(($0|0)==1){ label=3;break;}else{label=4;break;}
 case 2: 
 $rate=1;
 label=5;break;
 case 3: 
 $rate=1;
 label=5;break;
 case 4: 
 $rate=-1;
 label=5;break;
 case 5: 
 var $1=$rate;
 return $1;
  default: assert(0, "bad label: " + label);
 }
}
function __ZN14ReverbDesigner12instanceInitEi($this,$samplingFreq){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $this_addr;
 var $samplingFreq_addr;
 var $i;
 var $i2;
 var $i10;
 var $i18;
 var $i36;
 var $i44;
 var $i52;
 var $i60;
 var $i68;
 var $i76;
 var $i84;
 var $i92;
 var $i100;
 var $i108;
 var $i116;
 var $i124;
 var $i132;
 var $i140;
 var $i148;
 var $i156;
 var $i164;
 var $i172;
 var $i180;
 var $i188;
 var $i196;
 var $i204;
 var $i212;
 var $i220;
 var $i228;
 var $i236;
 var $i244;
 var $i252;
 var $i260;
 var $i268;
 var $i276;
 var $i284;
 var $i292;
 var $i300;
 var $i308;
 var $i316;
 var $i324;
 var $i332;
 var $i340;
 var $i348;
 var $i356;
 var $i364;
 var $i372;
 var $i380;
 var $i388;
 var $i396;
 var $i404;
 var $i412;
 var $i420;
 var $i428;
 var $i436;
 var $i444;
 var $i452;
 var $i460;
 var $i468;
 var $i476;
 var $i484;
 var $i492;
 var $i500;
 var $i508;
 var $i516;
 var $i524;
 var $i532;
 var $i540;
 var $i548;
 var $i556;
 var $i564;
 var $i572;
 var $i580;
 var $i588;
 var $i596;
 var $i604;
 var $i612;
 var $i620;
 var $i628;
 var $i636;
 var $i644;
 var $i652;
 var $i660;
 var $i668;
 var $i676;
 var $i684;
 var $i692;
 var $i700;
 var $i708;
 var $i716;
 var $i724;
 var $i732;
 var $i740;
 var $i748;
 var $i756;
 var $i764;
 var $i772;
 var $i780;
 var $i788;
 var $i796;
 var $i804;
 var $i812;
 var $i820;
 var $i828;
 var $i836;
 var $i844;
 var $i852;
 var $i860;
 var $i868;
 var $i876;
 var $i884;
 var $i892;
 var $i900;
 var $i908;
 var $i916;
 var $i924;
 var $i932;
 var $i940;
 var $i948;
 var $i956;
 var $i964;
 var $i972;
 var $i980;
 var $i988;
 var $i996;
 var $i1004;
 var $i1012;
 var $i1020;
 var $i1028;
 var $i1036;
 var $i1044;
 var $i1052;
 var $i1060;
 var $i1068;
 var $i1076;
 var $i1084;
 var $i1092;
 var $i1100;
 var $i1108;
 var $i1116;
 var $i1124;
 var $i1132;
 var $i1140;
 var $i1148;
 var $i1156;
 var $i1164;
 var $i1172;
 var $i1180;
 var $i1188;
 var $i1196;
 var $i1204;
 var $i1212;
 var $i1220;
 var $i1228;
 var $i1236;
 var $i1244;
 var $i1252;
 var $i1260;
 var $i1268;
 var $i1276;
 var $i1284;
 var $i1292;
 var $i1300;
 var $i1308;
 var $i1316;
 var $i1324;
 var $i1332;
 var $i1340;
 var $i1348;
 var $i1356;
 var $i1364;
 var $i1372;
 var $i1380;
 var $i1388;
 var $i1396;
 var $i1404;
 var $i1412;
 var $i1420;
 var $i1428;
 var $i1436;
 var $i1444;
 var $i1452;
 var $i1460;
 var $i1468;
 var $i1476;
 var $i1484;
 var $i1492;
 var $i1500;
 var $i1508;
 var $i1516;
 var $i1524;
 var $i1532;
 var $i1540;
 var $i1548;
 var $i1556;
 var $i1564;
 var $i1572;
 var $i1580;
 var $i1588;
 var $i1596;
 var $i1604;
 var $i1612;
 var $i1620;
 var $i1628;
 var $i1636;
 var $i1644;
 var $i1652;
 var $i1660;
 var $i1668;
 var $i1676;
 var $i1684;
 var $i1692;
 var $i1700;
 var $i1708;
 var $i1716;
 var $i1724;
 var $i1732;
 var $i1740;
 var $i1748;
 var $i1756;
 var $i1764;
 var $i1772;
 var $i1780;
 var $i1788;
 var $i1796;
 var $i1804;
 var $i1812;
 var $i1820;
 var $i1828;
 var $i1836;
 var $i1844;
 var $i1852;
 var $i1860;
 var $i1868;
 var $i1876;
 var $i1884;
 var $i1892;
 var $i1900;
 var $i1908;
 var $i1916;
 var $i1924;
 var $i1932;
 var $i1940;
 var $i1948;
 var $i1956;
 var $i1964;
 var $i1972;
 var $i1980;
 var $i1988;
 var $i1996;
 var $i2004;
 var $i2012;
 var $i2020;
 var $i2028;
 var $i2036;
 var $i2044;
 var $i2052;
 var $i2060;
 var $i2068;
 var $i2076;
 var $i2084;
 var $i2092;
 var $i2100;
 var $i2108;
 var $i2116;
 var $i2124;
 var $i2132;
 var $i2140;
 var $i2148;
 var $i2156;
 var $i2164;
 var $i2172;
 var $i2180;
 var $i2188;
 var $i2196;
 var $i2204;
 var $i2212;
 var $i2220;
 var $i2228;
 var $i2236;
 var $i2244;
 var $i2252;
 var $i2260;
 var $i2268;
 var $i2276;
 var $i2284;
 var $i2292;
 var $i2300;
 var $i2308;
 var $i2316;
 var $i2324;
 var $i2332;
 var $i2340;
 var $i2348;
 var $i2356;
 var $i2364;
 var $i2372;
 var $i2380;
 var $i2388;
 var $i2396;
 var $i2404;
 var $i2412;
 var $i2420;
 var $i2428;
 var $i2436;
 var $i2444;
 var $i2452;
 var $i2460;
 var $i2468;
 var $i2476;
 var $i2484;
 var $i2492;
 var $i2500;
 var $i2508;
 var $i2516;
 var $i2524;
 var $i2532;
 var $i2540;
 var $i2548;
 var $i2556;
 var $i2564;
 var $i2572;
 var $i2580;
 var $i2588;
 var $i2596;
 var $i2604;
 var $i2612;
 var $i2620;
 var $i2628;
 var $i2636;
 var $i2644;
 var $i2652;
 var $i2660;
 var $i2668;
 var $i2676;
 var $i2684;
 var $i2692;
 var $i2700;
 var $i2708;
 var $i2716;
 var $i2724;
 var $i2732;
 var $i2740;
 var $i2748;
 var $i2756;
 var $i2764;
 var $i2772;
 var $i2780;
 var $i2788;
 var $i2796;
 var $i2804;
 var $i2812;
 var $i2820;
 var $i2828;
 var $i2836;
 var $i2844;
 var $i2852;
 var $i2860;
 var $i2868;
 var $i2876;
 var $i2884;
 var $i2892;
 var $i2900;
 var $i2908;
 var $i2916;
 var $i2924;
 var $i2932;
 var $i2940;
 var $i2948;
 var $i2956;
 var $i2964;
 var $i2972;
 var $i2980;
 var $i2988;
 var $i2996;
 var $i3004;
 var $i3012;
 var $i3020;
 var $i3028;
 var $i3036;
 var $i3044;
 var $i3052;
 var $i3060;
 var $i3068;
 var $i3076;
 var $i3084;
 var $i3092;
 var $i3100;
 var $i3108;
 var $i3116;
 var $i3124;
 var $i3132;
 var $i3140;
 var $i3148;
 var $i3156;
 var $i3164;
 var $i3172;
 var $i3180;
 var $i3188;
 var $i3196;
 var $i3204;
 var $i3212;
 var $i3220;
 var $i3228;
 var $i3236;
 var $i3244;
 var $i3252;
 var $i3260;
 var $i3268;
 var $i3276;
 var $i3284;
 var $i3292;
 var $i3300;
 var $i3308;
 var $i3316;
 var $i3324;
 var $i3332;
 var $i3340;
 var $i3348;
 var $i3356;
 var $i3364;
 var $i3372;
 var $i3380;
 var $i3388;
 var $i3396;
 var $i3404;
 var $i3412;
 var $i3420;
 var $i3428;
 var $i3436;
 var $i3444;
 var $i3452;
 var $i3460;
 var $i3468;
 var $i3476;
 var $i3484;
 var $i3492;
 $this_addr=$this;
 $samplingFreq_addr=$samplingFreq;
 var $this1=$this_addr;
 var $0=$samplingFreq_addr;
 var $fSamplingFreq=(($this1+528652)|0);
 HEAP32[(($fSamplingFreq)>>2)]=$0;
 var $fhslider0=(($this1+528628)|0);
 HEAPF32[(($fhslider0)>>2)]=-40;
 var $fcheckbox0=(($this1+528632)|0);
 HEAPF32[(($fcheckbox0)>>2)]=0;
 $i=0;
 label=2;break;
 case 2: 
 var $1=$i;
 var $cmp=($1|0)<2;
 if($cmp){label=3;break;}else{label=5;break;}
 case 3: 
 var $2=$i;
 var $iRec17=(($this1+528620)|0);
 var $arrayidx=(($iRec17+($2<<2))|0);
 HEAP32[(($arrayidx)>>2)]=0;
 label=4;break;
 case 4: 
 var $3=$i;
 var $add=((($3)+(1))|0);
 $i=$add;
 label=2;break;
 case 5: 
 $i2=0;
 label=6;break;
 case 6: 
 var $4=$i2;
 var $cmp4=($4|0)<4;
 if($cmp4){label=7;break;}else{label=9;break;}
 case 7: 
 var $5=$i2;
 var $fRec16=(($this1+528604)|0);
 var $arrayidx6=(($fRec16+($5<<2))|0);
 HEAPF32[(($arrayidx6)>>2)]=0;
 label=8;break;
 case 8: 
 var $6=$i2;
 var $add8=((($6)+(1))|0);
 $i2=$add8;
 label=6;break;
 case 9: 
 var $fbutton0=(($this1+528636)|0);
 HEAPF32[(($fbutton0)>>2)]=0;
 $i10=0;
 label=10;break;
 case 10: 
 var $7=$i10;
 var $cmp12=($7|0)<2;
 if($cmp12){label=11;break;}else{label=13;break;}
 case 11: 
 var $8=$i10;
 var $fVec0=(($this1+528596)|0);
 var $arrayidx14=(($fVec0+($8<<2))|0);
 HEAPF32[(($arrayidx14)>>2)]=0;
 label=12;break;
 case 12: 
 var $9=$i10;
 var $add16=((($9)+(1))|0);
 $i10=$add16;
 label=10;break;
 case 13: 
 var $fbutton1=(($this1+528640)|0);
 HEAPF32[(($fbutton1)>>2)]=0;
 $i18=0;
 label=14;break;
 case 14: 
 var $10=$i18;
 var $cmp20=($10|0)<2;
 if($cmp20){label=15;break;}else{label=17;break;}
 case 15: 
 var $11=$i18;
 var $fVec1=(($this1+528588)|0);
 var $arrayidx22=(($fVec1+($11<<2))|0);
 HEAPF32[(($arrayidx22)>>2)]=0;
 label=16;break;
 case 16: 
 var $12=$i18;
 var $add24=((($12)+(1))|0);
 $i18=$add24;
 label=14;break;
 case 17: 
 var $fcheckbox1=(($this1+528644)|0);
 HEAPF32[(($fcheckbox1)>>2)]=0;
 var $fbutton2=(($this1+528648)|0);
 HEAPF32[(($fbutton2)>>2)]=0;
 var $fSamplingFreq26=(($this1+528652)|0);
 var $13=HEAP32[(($fSamplingFreq26)>>2)];
 var $conv=($13|0);
 var $call=_fmax(1,$conv);
 var $call27=_fmin(192000,$call);
 var $conv28=(($call27)&-1);
 var $iConst0=(($this1+528656)|0);
 HEAP32[(($iConst0)>>2)]=$conv28;
 var $iConst029=(($this1+528656)|0);
 var $14=HEAP32[(($iConst029)>>2)];
 var $conv30=($14|0);
 var $div=(1)/($conv30);
 var $fConst1=(($this1+528660)|0);
 HEAPF32[(($fConst1)>>2)]=$div;
 var $iConst031=(($this1+528656)|0);
 var $15=HEAP32[(($iConst031)>>2)];
 var $conv32=($15|0);
 var $mul=((0.002915449906140566))*($conv32);
 var $fConst2=(($this1+528664)|0);
 HEAPF32[(($fConst2)>>2)]=$mul;
 var $fhslider1=(($this1+528668)|0);
 HEAPF32[(($fhslider1)>>2)]=46;
 var $fhslider2=(($this1+528672)|0);
 HEAPF32[(($fhslider2)>>2)]=63;
 var $fvslider0=(($this1+528676)|0);
 HEAPF32[(($fvslider0)>>2)]=2.700000047683716;
 var $iConst033=(($this1+528656)|0);
 var $16=HEAP32[(($iConst033)>>2)];
 var $conv34=($16|0);
 var $div35=((3.141590118408203))/($conv34);
 var $fConst3=(($this1+528680)|0);
 HEAPF32[(($fConst3)>>2)]=$div35;
 var $fhslider3=(($this1+528684)|0);
 HEAPF32[(($fhslider3)>>2)]=4000;
 $i36=0;
 label=18;break;
 case 18: 
 var $17=$i36;
 var $cmp38=($17|0)<2;
 if($cmp38){label=19;break;}else{label=21;break;}
 case 19: 
 var $18=$i36;
 var $fRec22=(($this1+528580)|0);
 var $arrayidx40=(($fRec22+($18<<2))|0);
 HEAPF32[(($arrayidx40)>>2)]=0;
 label=20;break;
 case 20: 
 var $19=$i36;
 var $add42=((($19)+(1))|0);
 $i36=$add42;
 label=18;break;
 case 21: 
 $i44=0;
 label=22;break;
 case 22: 
 var $20=$i44;
 var $cmp46=($20|0)<3;
 if($cmp46){label=23;break;}else{label=25;break;}
 case 23: 
 var $21=$i44;
 var $fRec21=(($this1+528568)|0);
 var $arrayidx48=(($fRec21+($21<<2))|0);
 HEAPF32[(($arrayidx48)>>2)]=0;
 label=24;break;
 case 24: 
 var $22=$i44;
 var $add50=((($22)+(1))|0);
 $i44=$add50;
 label=22;break;
 case 25: 
 var $fhslider4=(($this1+528688)|0);
 HEAPF32[(($fhslider4)>>2)]=2000;
 $i52=0;
 label=26;break;
 case 26: 
 var $23=$i52;
 var $cmp54=($23|0)<3;
 if($cmp54){label=27;break;}else{label=29;break;}
 case 27: 
 var $24=$i52;
 var $fRec20=(($this1+528556)|0);
 var $arrayidx56=(($fRec20+($24<<2))|0);
 HEAPF32[(($arrayidx56)>>2)]=0;
 label=28;break;
 case 28: 
 var $25=$i52;
 var $add58=((($25)+(1))|0);
 $i52=$add58;
 label=26;break;
 case 29: 
 var $fhslider5=(($this1+528692)|0);
 HEAPF32[(($fhslider5)>>2)]=1000;
 $i60=0;
 label=30;break;
 case 30: 
 var $26=$i60;
 var $cmp62=($26|0)<3;
 if($cmp62){label=31;break;}else{label=33;break;}
 case 31: 
 var $27=$i60;
 var $fRec19=(($this1+528544)|0);
 var $arrayidx64=(($fRec19+($27<<2))|0);
 HEAPF32[(($arrayidx64)>>2)]=0;
 label=32;break;
 case 32: 
 var $28=$i60;
 var $add66=((($28)+(1))|0);
 $i60=$add66;
 label=30;break;
 case 33: 
 var $fhslider6=(($this1+528696)|0);
 HEAPF32[(($fhslider6)>>2)]=500;
 $i68=0;
 label=34;break;
 case 34: 
 var $29=$i68;
 var $cmp70=($29|0)<3;
 if($cmp70){label=35;break;}else{label=37;break;}
 case 35: 
 var $30=$i68;
 var $fRec18=(($this1+528532)|0);
 var $arrayidx72=(($fRec18+($30<<2))|0);
 HEAPF32[(($arrayidx72)>>2)]=0;
 label=36;break;
 case 36: 
 var $31=$i68;
 var $add74=((($31)+(1))|0);
 $i68=$add74;
 label=34;break;
 case 37: 
 var $fvslider1=(($this1+528700)|0);
 HEAPF32[(($fvslider1)>>2)]=3.799999952316284;
 $i76=0;
 label=38;break;
 case 38: 
 var $32=$i76;
 var $cmp78=($32|0)<2;
 if($cmp78){label=39;break;}else{label=41;break;}
 case 39: 
 var $33=$i76;
 var $fRec28=(($this1+528524)|0);
 var $arrayidx80=(($fRec28+($33<<2))|0);
 HEAPF32[(($arrayidx80)>>2)]=0;
 label=40;break;
 case 40: 
 var $34=$i76;
 var $add82=((($34)+(1))|0);
 $i76=$add82;
 label=38;break;
 case 41: 
 $i84=0;
 label=42;break;
 case 42: 
 var $35=$i84;
 var $cmp86=($35|0)<3;
 if($cmp86){label=43;break;}else{label=45;break;}
 case 43: 
 var $36=$i84;
 var $fRec27=(($this1+528512)|0);
 var $arrayidx88=(($fRec27+($36<<2))|0);
 HEAPF32[(($arrayidx88)>>2)]=0;
 label=44;break;
 case 44: 
 var $37=$i84;
 var $add90=((($37)+(1))|0);
 $i84=$add90;
 label=42;break;
 case 45: 
 $i92=0;
 label=46;break;
 case 46: 
 var $38=$i92;
 var $cmp94=($38|0)<2;
 if($cmp94){label=47;break;}else{label=49;break;}
 case 47: 
 var $39=$i92;
 var $fVec2=(($this1+528504)|0);
 var $arrayidx96=(($fVec2+($39<<2))|0);
 HEAPF32[(($arrayidx96)>>2)]=0;
 label=48;break;
 case 48: 
 var $40=$i92;
 var $add98=((($40)+(1))|0);
 $i92=$add98;
 label=46;break;
 case 49: 
 $i100=0;
 label=50;break;
 case 50: 
 var $41=$i100;
 var $cmp102=($41|0)<2;
 if($cmp102){label=51;break;}else{label=53;break;}
 case 51: 
 var $42=$i100;
 var $fRec26=(($this1+528496)|0);
 var $arrayidx104=(($fRec26+($42<<2))|0);
 HEAPF32[(($arrayidx104)>>2)]=0;
 label=52;break;
 case 52: 
 var $43=$i100;
 var $add106=((($43)+(1))|0);
 $i100=$add106;
 label=50;break;
 case 53: 
 $i108=0;
 label=54;break;
 case 54: 
 var $44=$i108;
 var $cmp110=($44|0)<3;
 if($cmp110){label=55;break;}else{label=57;break;}
 case 55: 
 var $45=$i108;
 var $fRec25=(($this1+528484)|0);
 var $arrayidx112=(($fRec25+($45<<2))|0);
 HEAPF32[(($arrayidx112)>>2)]=0;
 label=56;break;
 case 56: 
 var $46=$i108;
 var $add114=((($46)+(1))|0);
 $i108=$add114;
 label=54;break;
 case 57: 
 $i116=0;
 label=58;break;
 case 58: 
 var $47=$i116;
 var $cmp118=($47|0)<3;
 if($cmp118){label=59;break;}else{label=61;break;}
 case 59: 
 var $48=$i116;
 var $fRec24=(($this1+528472)|0);
 var $arrayidx120=(($fRec24+($48<<2))|0);
 HEAPF32[(($arrayidx120)>>2)]=0;
 label=60;break;
 case 60: 
 var $49=$i116;
 var $add122=((($49)+(1))|0);
 $i116=$add122;
 label=58;break;
 case 61: 
 $i124=0;
 label=62;break;
 case 62: 
 var $50=$i124;
 var $cmp126=($50|0)<3;
 if($cmp126){label=63;break;}else{label=65;break;}
 case 63: 
 var $51=$i124;
 var $fRec23=(($this1+528460)|0);
 var $arrayidx128=(($fRec23+($51<<2))|0);
 HEAPF32[(($arrayidx128)>>2)]=0;
 label=64;break;
 case 64: 
 var $52=$i124;
 var $add130=((($52)+(1))|0);
 $i124=$add130;
 label=62;break;
 case 65: 
 var $fvslider2=(($this1+528704)|0);
 HEAPF32[(($fvslider2)>>2)]=5;
 $i132=0;
 label=66;break;
 case 66: 
 var $53=$i132;
 var $cmp134=($53|0)<2;
 if($cmp134){label=67;break;}else{label=69;break;}
 case 67: 
 var $54=$i132;
 var $fRec33=(($this1+528452)|0);
 var $arrayidx136=(($fRec33+($54<<2))|0);
 HEAPF32[(($arrayidx136)>>2)]=0;
 label=68;break;
 case 68: 
 var $55=$i132;
 var $add138=((($55)+(1))|0);
 $i132=$add138;
 label=66;break;
 case 69: 
 $i140=0;
 label=70;break;
 case 70: 
 var $56=$i140;
 var $cmp142=($56|0)<3;
 if($cmp142){label=71;break;}else{label=73;break;}
 case 71: 
 var $57=$i140;
 var $fRec32=(($this1+528440)|0);
 var $arrayidx144=(($fRec32+($57<<2))|0);
 HEAPF32[(($arrayidx144)>>2)]=0;
 label=72;break;
 case 72: 
 var $58=$i140;
 var $add146=((($58)+(1))|0);
 $i140=$add146;
 label=70;break;
 case 73: 
 $i148=0;
 label=74;break;
 case 74: 
 var $59=$i148;
 var $cmp150=($59|0)<2;
 if($cmp150){label=75;break;}else{label=77;break;}
 case 75: 
 var $60=$i148;
 var $fVec3=(($this1+528432)|0);
 var $arrayidx152=(($fVec3+($60<<2))|0);
 HEAPF32[(($arrayidx152)>>2)]=0;
 label=76;break;
 case 76: 
 var $61=$i148;
 var $add154=((($61)+(1))|0);
 $i148=$add154;
 label=74;break;
 case 77: 
 $i156=0;
 label=78;break;
 case 78: 
 var $62=$i156;
 var $cmp158=($62|0)<2;
 if($cmp158){label=79;break;}else{label=81;break;}
 case 79: 
 var $63=$i156;
 var $fRec31=(($this1+528424)|0);
 var $arrayidx160=(($fRec31+($63<<2))|0);
 HEAPF32[(($arrayidx160)>>2)]=0;
 label=80;break;
 case 80: 
 var $64=$i156;
 var $add162=((($64)+(1))|0);
 $i156=$add162;
 label=78;break;
 case 81: 
 $i164=0;
 label=82;break;
 case 82: 
 var $65=$i164;
 var $cmp166=($65|0)<3;
 if($cmp166){label=83;break;}else{label=85;break;}
 case 83: 
 var $66=$i164;
 var $fRec30=(($this1+528412)|0);
 var $arrayidx168=(($fRec30+($66<<2))|0);
 HEAPF32[(($arrayidx168)>>2)]=0;
 label=84;break;
 case 84: 
 var $67=$i164;
 var $add170=((($67)+(1))|0);
 $i164=$add170;
 label=82;break;
 case 85: 
 $i172=0;
 label=86;break;
 case 86: 
 var $68=$i172;
 var $cmp174=($68|0)<3;
 if($cmp174){label=87;break;}else{label=89;break;}
 case 87: 
 var $69=$i172;
 var $fRec29=(($this1+528400)|0);
 var $arrayidx176=(($fRec29+($69<<2))|0);
 HEAPF32[(($arrayidx176)>>2)]=0;
 label=88;break;
 case 88: 
 var $70=$i172;
 var $add178=((($70)+(1))|0);
 $i172=$add178;
 label=86;break;
 case 89: 
 var $fvslider3=(($this1+528708)|0);
 HEAPF32[(($fvslider3)>>2)]=8.399999618530273;
 $i180=0;
 label=90;break;
 case 90: 
 var $71=$i180;
 var $cmp182=($71|0)<2;
 if($cmp182){label=91;break;}else{label=93;break;}
 case 91: 
 var $72=$i180;
 var $fRec37=(($this1+528392)|0);
 var $arrayidx184=(($fRec37+($72<<2))|0);
 HEAPF32[(($arrayidx184)>>2)]=0;
 label=92;break;
 case 92: 
 var $73=$i180;
 var $add186=((($73)+(1))|0);
 $i180=$add186;
 label=90;break;
 case 93: 
 $i188=0;
 label=94;break;
 case 94: 
 var $74=$i188;
 var $cmp190=($74|0)<3;
 if($cmp190){label=95;break;}else{label=97;break;}
 case 95: 
 var $75=$i188;
 var $fRec36=(($this1+528380)|0);
 var $arrayidx192=(($fRec36+($75<<2))|0);
 HEAPF32[(($arrayidx192)>>2)]=0;
 label=96;break;
 case 96: 
 var $76=$i188;
 var $add194=((($76)+(1))|0);
 $i188=$add194;
 label=94;break;
 case 97: 
 $i196=0;
 label=98;break;
 case 98: 
 var $77=$i196;
 var $cmp198=($77|0)<2;
 if($cmp198){label=99;break;}else{label=101;break;}
 case 99: 
 var $78=$i196;
 var $fVec4=(($this1+528372)|0);
 var $arrayidx200=(($fVec4+($78<<2))|0);
 HEAPF32[(($arrayidx200)>>2)]=0;
 label=100;break;
 case 100: 
 var $79=$i196;
 var $add202=((($79)+(1))|0);
 $i196=$add202;
 label=98;break;
 case 101: 
 $i204=0;
 label=102;break;
 case 102: 
 var $80=$i204;
 var $cmp206=($80|0)<2;
 if($cmp206){label=103;break;}else{label=105;break;}
 case 103: 
 var $81=$i204;
 var $fRec35=(($this1+528364)|0);
 var $arrayidx208=(($fRec35+($81<<2))|0);
 HEAPF32[(($arrayidx208)>>2)]=0;
 label=104;break;
 case 104: 
 var $82=$i204;
 var $add210=((($82)+(1))|0);
 $i204=$add210;
 label=102;break;
 case 105: 
 $i212=0;
 label=106;break;
 case 106: 
 var $83=$i212;
 var $cmp214=($83|0)<3;
 if($cmp214){label=107;break;}else{label=109;break;}
 case 107: 
 var $84=$i212;
 var $fRec34=(($this1+528352)|0);
 var $arrayidx216=(($fRec34+($84<<2))|0);
 HEAPF32[(($arrayidx216)>>2)]=0;
 label=108;break;
 case 108: 
 var $85=$i212;
 var $add218=((($85)+(1))|0);
 $i212=$add218;
 label=106;break;
 case 109: 
 var $fvslider4=(($this1+528712)|0);
 HEAPF32[(($fvslider4)>>2)]=6.5;
 $i220=0;
 label=110;break;
 case 110: 
 var $86=$i220;
 var $cmp222=($86|0)<2;
 if($cmp222){label=111;break;}else{label=113;break;}
 case 111: 
 var $87=$i220;
 var $fRec39=(($this1+528344)|0);
 var $arrayidx224=(($fRec39+($87<<2))|0);
 HEAPF32[(($arrayidx224)>>2)]=0;
 label=112;break;
 case 112: 
 var $88=$i220;
 var $add226=((($88)+(1))|0);
 $i220=$add226;
 label=110;break;
 case 113: 
 $i228=0;
 label=114;break;
 case 114: 
 var $89=$i228;
 var $cmp230=($89|0)<3;
 if($cmp230){label=115;break;}else{label=117;break;}
 case 115: 
 var $90=$i228;
 var $fRec38=(($this1+528332)|0);
 var $arrayidx232=(($fRec38+($90<<2))|0);
 HEAPF32[(($arrayidx232)>>2)]=0;
 label=116;break;
 case 116: 
 var $91=$i228;
 var $add234=((($91)+(1))|0);
 $i228=$add234;
 label=114;break;
 case 117: 
 $i236=0;
 label=118;break;
 case 118: 
 var $92=$i236;
 var $cmp238=($92|0)<2;
 if($cmp238){label=119;break;}else{label=121;break;}
 case 119: 
 var $93=$i236;
 var $fRec44=(($this1+528324)|0);
 var $arrayidx240=(($fRec44+($93<<2))|0);
 HEAPF32[(($arrayidx240)>>2)]=0;
 label=120;break;
 case 120: 
 var $94=$i236;
 var $add242=((($94)+(1))|0);
 $i236=$add242;
 label=118;break;
 case 121: 
 $i244=0;
 label=122;break;
 case 122: 
 var $95=$i244;
 var $cmp246=($95|0)<3;
 if($cmp246){label=123;break;}else{label=125;break;}
 case 123: 
 var $96=$i244;
 var $fRec43=(($this1+528312)|0);
 var $arrayidx248=(($fRec43+($96<<2))|0);
 HEAPF32[(($arrayidx248)>>2)]=0;
 label=124;break;
 case 124: 
 var $97=$i244;
 var $add250=((($97)+(1))|0);
 $i244=$add250;
 label=122;break;
 case 125: 
 $i252=0;
 label=126;break;
 case 126: 
 var $98=$i252;
 var $cmp254=($98|0)<3;
 if($cmp254){label=127;break;}else{label=129;break;}
 case 127: 
 var $99=$i252;
 var $fRec42=(($this1+528300)|0);
 var $arrayidx256=(($fRec42+($99<<2))|0);
 HEAPF32[(($arrayidx256)>>2)]=0;
 label=128;break;
 case 128: 
 var $100=$i252;
 var $add258=((($100)+(1))|0);
 $i252=$add258;
 label=126;break;
 case 129: 
 $i260=0;
 label=130;break;
 case 130: 
 var $101=$i260;
 var $cmp262=($101|0)<3;
 if($cmp262){label=131;break;}else{label=133;break;}
 case 131: 
 var $102=$i260;
 var $fRec41=(($this1+528288)|0);
 var $arrayidx264=(($fRec41+($102<<2))|0);
 HEAPF32[(($arrayidx264)>>2)]=0;
 label=132;break;
 case 132: 
 var $103=$i260;
 var $add266=((($103)+(1))|0);
 $i260=$add266;
 label=130;break;
 case 133: 
 $i268=0;
 label=134;break;
 case 134: 
 var $104=$i268;
 var $cmp270=($104|0)<3;
 if($cmp270){label=135;break;}else{label=137;break;}
 case 135: 
 var $105=$i268;
 var $fRec40=(($this1+528276)|0);
 var $arrayidx272=(($fRec40+($105<<2))|0);
 HEAPF32[(($arrayidx272)>>2)]=0;
 label=136;break;
 case 136: 
 var $106=$i268;
 var $add274=((($106)+(1))|0);
 $i268=$add274;
 label=134;break;
 case 137: 
 $i276=0;
 label=138;break;
 case 138: 
 var $107=$i276;
 var $cmp278=($107|0)<2;
 if($cmp278){label=139;break;}else{label=141;break;}
 case 139: 
 var $108=$i276;
 var $fRec50=(($this1+528268)|0);
 var $arrayidx280=(($fRec50+($108<<2))|0);
 HEAPF32[(($arrayidx280)>>2)]=0;
 label=140;break;
 case 140: 
 var $109=$i276;
 var $add282=((($109)+(1))|0);
 $i276=$add282;
 label=138;break;
 case 141: 
 $i284=0;
 label=142;break;
 case 142: 
 var $110=$i284;
 var $cmp286=($110|0)<3;
 if($cmp286){label=143;break;}else{label=145;break;}
 case 143: 
 var $111=$i284;
 var $fRec49=(($this1+528256)|0);
 var $arrayidx288=(($fRec49+($111<<2))|0);
 HEAPF32[(($arrayidx288)>>2)]=0;
 label=144;break;
 case 144: 
 var $112=$i284;
 var $add290=((($112)+(1))|0);
 $i284=$add290;
 label=142;break;
 case 145: 
 $i292=0;
 label=146;break;
 case 146: 
 var $113=$i292;
 var $cmp294=($113|0)<2;
 if($cmp294){label=147;break;}else{label=149;break;}
 case 147: 
 var $114=$i292;
 var $fVec5=(($this1+528248)|0);
 var $arrayidx296=(($fVec5+($114<<2))|0);
 HEAPF32[(($arrayidx296)>>2)]=0;
 label=148;break;
 case 148: 
 var $115=$i292;
 var $add298=((($115)+(1))|0);
 $i292=$add298;
 label=146;break;
 case 149: 
 $i300=0;
 label=150;break;
 case 150: 
 var $116=$i300;
 var $cmp302=($116|0)<2;
 if($cmp302){label=151;break;}else{label=153;break;}
 case 151: 
 var $117=$i300;
 var $fRec48=(($this1+528240)|0);
 var $arrayidx304=(($fRec48+($117<<2))|0);
 HEAPF32[(($arrayidx304)>>2)]=0;
 label=152;break;
 case 152: 
 var $118=$i300;
 var $add306=((($118)+(1))|0);
 $i300=$add306;
 label=150;break;
 case 153: 
 $i308=0;
 label=154;break;
 case 154: 
 var $119=$i308;
 var $cmp310=($119|0)<3;
 if($cmp310){label=155;break;}else{label=157;break;}
 case 155: 
 var $120=$i308;
 var $fRec47=(($this1+528228)|0);
 var $arrayidx312=(($fRec47+($120<<2))|0);
 HEAPF32[(($arrayidx312)>>2)]=0;
 label=156;break;
 case 156: 
 var $121=$i308;
 var $add314=((($121)+(1))|0);
 $i308=$add314;
 label=154;break;
 case 157: 
 $i316=0;
 label=158;break;
 case 158: 
 var $122=$i316;
 var $cmp318=($122|0)<3;
 if($cmp318){label=159;break;}else{label=161;break;}
 case 159: 
 var $123=$i316;
 var $fRec46=(($this1+528216)|0);
 var $arrayidx320=(($fRec46+($123<<2))|0);
 HEAPF32[(($arrayidx320)>>2)]=0;
 label=160;break;
 case 160: 
 var $124=$i316;
 var $add322=((($124)+(1))|0);
 $i316=$add322;
 label=158;break;
 case 161: 
 $i324=0;
 label=162;break;
 case 162: 
 var $125=$i324;
 var $cmp326=($125|0)<3;
 if($cmp326){label=163;break;}else{label=165;break;}
 case 163: 
 var $126=$i324;
 var $fRec45=(($this1+528204)|0);
 var $arrayidx328=(($fRec45+($126<<2))|0);
 HEAPF32[(($arrayidx328)>>2)]=0;
 label=164;break;
 case 164: 
 var $127=$i324;
 var $add330=((($127)+(1))|0);
 $i324=$add330;
 label=162;break;
 case 165: 
 $i332=0;
 label=166;break;
 case 166: 
 var $128=$i332;
 var $cmp334=($128|0)<2;
 if($cmp334){label=167;break;}else{label=169;break;}
 case 167: 
 var $129=$i332;
 var $fRec55=(($this1+528196)|0);
 var $arrayidx336=(($fRec55+($129<<2))|0);
 HEAPF32[(($arrayidx336)>>2)]=0;
 label=168;break;
 case 168: 
 var $130=$i332;
 var $add338=((($130)+(1))|0);
 $i332=$add338;
 label=166;break;
 case 169: 
 $i340=0;
 label=170;break;
 case 170: 
 var $131=$i340;
 var $cmp342=($131|0)<3;
 if($cmp342){label=171;break;}else{label=173;break;}
 case 171: 
 var $132=$i340;
 var $fRec54=(($this1+528184)|0);
 var $arrayidx344=(($fRec54+($132<<2))|0);
 HEAPF32[(($arrayidx344)>>2)]=0;
 label=172;break;
 case 172: 
 var $133=$i340;
 var $add346=((($133)+(1))|0);
 $i340=$add346;
 label=170;break;
 case 173: 
 $i348=0;
 label=174;break;
 case 174: 
 var $134=$i348;
 var $cmp350=($134|0)<2;
 if($cmp350){label=175;break;}else{label=177;break;}
 case 175: 
 var $135=$i348;
 var $fVec6=(($this1+528176)|0);
 var $arrayidx352=(($fVec6+($135<<2))|0);
 HEAPF32[(($arrayidx352)>>2)]=0;
 label=176;break;
 case 176: 
 var $136=$i348;
 var $add354=((($136)+(1))|0);
 $i348=$add354;
 label=174;break;
 case 177: 
 $i356=0;
 label=178;break;
 case 178: 
 var $137=$i356;
 var $cmp358=($137|0)<2;
 if($cmp358){label=179;break;}else{label=181;break;}
 case 179: 
 var $138=$i356;
 var $fRec53=(($this1+528168)|0);
 var $arrayidx360=(($fRec53+($138<<2))|0);
 HEAPF32[(($arrayidx360)>>2)]=0;
 label=180;break;
 case 180: 
 var $139=$i356;
 var $add362=((($139)+(1))|0);
 $i356=$add362;
 label=178;break;
 case 181: 
 $i364=0;
 label=182;break;
 case 182: 
 var $140=$i364;
 var $cmp366=($140|0)<3;
 if($cmp366){label=183;break;}else{label=185;break;}
 case 183: 
 var $141=$i364;
 var $fRec52=(($this1+528156)|0);
 var $arrayidx368=(($fRec52+($141<<2))|0);
 HEAPF32[(($arrayidx368)>>2)]=0;
 label=184;break;
 case 184: 
 var $142=$i364;
 var $add370=((($142)+(1))|0);
 $i364=$add370;
 label=182;break;
 case 185: 
 $i372=0;
 label=186;break;
 case 186: 
 var $143=$i372;
 var $cmp374=($143|0)<3;
 if($cmp374){label=187;break;}else{label=189;break;}
 case 187: 
 var $144=$i372;
 var $fRec51=(($this1+528144)|0);
 var $arrayidx376=(($fRec51+($144<<2))|0);
 HEAPF32[(($arrayidx376)>>2)]=0;
 label=188;break;
 case 188: 
 var $145=$i372;
 var $add378=((($145)+(1))|0);
 $i372=$add378;
 label=186;break;
 case 189: 
 $i380=0;
 label=190;break;
 case 190: 
 var $146=$i380;
 var $cmp382=($146|0)<2;
 if($cmp382){label=191;break;}else{label=193;break;}
 case 191: 
 var $147=$i380;
 var $fRec59=(($this1+528136)|0);
 var $arrayidx384=(($fRec59+($147<<2))|0);
 HEAPF32[(($arrayidx384)>>2)]=0;
 label=192;break;
 case 192: 
 var $148=$i380;
 var $add386=((($148)+(1))|0);
 $i380=$add386;
 label=190;break;
 case 193: 
 $i388=0;
 label=194;break;
 case 194: 
 var $149=$i388;
 var $cmp390=($149|0)<3;
 if($cmp390){label=195;break;}else{label=197;break;}
 case 195: 
 var $150=$i388;
 var $fRec58=(($this1+528124)|0);
 var $arrayidx392=(($fRec58+($150<<2))|0);
 HEAPF32[(($arrayidx392)>>2)]=0;
 label=196;break;
 case 196: 
 var $151=$i388;
 var $add394=((($151)+(1))|0);
 $i388=$add394;
 label=194;break;
 case 197: 
 $i396=0;
 label=198;break;
 case 198: 
 var $152=$i396;
 var $cmp398=($152|0)<2;
 if($cmp398){label=199;break;}else{label=201;break;}
 case 199: 
 var $153=$i396;
 var $fVec7=(($this1+528116)|0);
 var $arrayidx400=(($fVec7+($153<<2))|0);
 HEAPF32[(($arrayidx400)>>2)]=0;
 label=200;break;
 case 200: 
 var $154=$i396;
 var $add402=((($154)+(1))|0);
 $i396=$add402;
 label=198;break;
 case 201: 
 $i404=0;
 label=202;break;
 case 202: 
 var $155=$i404;
 var $cmp406=($155|0)<2;
 if($cmp406){label=203;break;}else{label=205;break;}
 case 203: 
 var $156=$i404;
 var $fRec57=(($this1+528108)|0);
 var $arrayidx408=(($fRec57+($156<<2))|0);
 HEAPF32[(($arrayidx408)>>2)]=0;
 label=204;break;
 case 204: 
 var $157=$i404;
 var $add410=((($157)+(1))|0);
 $i404=$add410;
 label=202;break;
 case 205: 
 $i412=0;
 label=206;break;
 case 206: 
 var $158=$i412;
 var $cmp414=($158|0)<3;
 if($cmp414){label=207;break;}else{label=209;break;}
 case 207: 
 var $159=$i412;
 var $fRec56=(($this1+528096)|0);
 var $arrayidx416=(($fRec56+($159<<2))|0);
 HEAPF32[(($arrayidx416)>>2)]=0;
 label=208;break;
 case 208: 
 var $160=$i412;
 var $add418=((($160)+(1))|0);
 $i412=$add418;
 label=206;break;
 case 209: 
 $i420=0;
 label=210;break;
 case 210: 
 var $161=$i420;
 var $cmp422=($161|0)<2;
 if($cmp422){label=211;break;}else{label=213;break;}
 case 211: 
 var $162=$i420;
 var $fRec61=(($this1+528088)|0);
 var $arrayidx424=(($fRec61+($162<<2))|0);
 HEAPF32[(($arrayidx424)>>2)]=0;
 label=212;break;
 case 212: 
 var $163=$i420;
 var $add426=((($163)+(1))|0);
 $i420=$add426;
 label=210;break;
 case 213: 
 $i428=0;
 label=214;break;
 case 214: 
 var $164=$i428;
 var $cmp430=($164|0)<3;
 if($cmp430){label=215;break;}else{label=217;break;}
 case 215: 
 var $165=$i428;
 var $fRec60=(($this1+528076)|0);
 var $arrayidx432=(($fRec60+($165<<2))|0);
 HEAPF32[(($arrayidx432)>>2)]=0;
 label=216;break;
 case 216: 
 var $166=$i428;
 var $add434=((($166)+(1))|0);
 $i428=$add434;
 label=214;break;
 case 217: 
 $i436=0;
 label=218;break;
 case 218: 
 var $167=$i436;
 var $cmp438=($167|0)<2;
 if($cmp438){label=219;break;}else{label=221;break;}
 case 219: 
 var $168=$i436;
 var $fRec66=(($this1+528068)|0);
 var $arrayidx440=(($fRec66+($168<<2))|0);
 HEAPF32[(($arrayidx440)>>2)]=0;
 label=220;break;
 case 220: 
 var $169=$i436;
 var $add442=((($169)+(1))|0);
 $i436=$add442;
 label=218;break;
 case 221: 
 $i444=0;
 label=222;break;
 case 222: 
 var $170=$i444;
 var $cmp446=($170|0)<3;
 if($cmp446){label=223;break;}else{label=225;break;}
 case 223: 
 var $171=$i444;
 var $fRec65=(($this1+528056)|0);
 var $arrayidx448=(($fRec65+($171<<2))|0);
 HEAPF32[(($arrayidx448)>>2)]=0;
 label=224;break;
 case 224: 
 var $172=$i444;
 var $add450=((($172)+(1))|0);
 $i444=$add450;
 label=222;break;
 case 225: 
 $i452=0;
 label=226;break;
 case 226: 
 var $173=$i452;
 var $cmp454=($173|0)<3;
 if($cmp454){label=227;break;}else{label=229;break;}
 case 227: 
 var $174=$i452;
 var $fRec64=(($this1+528044)|0);
 var $arrayidx456=(($fRec64+($174<<2))|0);
 HEAPF32[(($arrayidx456)>>2)]=0;
 label=228;break;
 case 228: 
 var $175=$i452;
 var $add458=((($175)+(1))|0);
 $i452=$add458;
 label=226;break;
 case 229: 
 $i460=0;
 label=230;break;
 case 230: 
 var $176=$i460;
 var $cmp462=($176|0)<3;
 if($cmp462){label=231;break;}else{label=233;break;}
 case 231: 
 var $177=$i460;
 var $fRec63=(($this1+528032)|0);
 var $arrayidx464=(($fRec63+($177<<2))|0);
 HEAPF32[(($arrayidx464)>>2)]=0;
 label=232;break;
 case 232: 
 var $178=$i460;
 var $add466=((($178)+(1))|0);
 $i460=$add466;
 label=230;break;
 case 233: 
 $i468=0;
 label=234;break;
 case 234: 
 var $179=$i468;
 var $cmp470=($179|0)<3;
 if($cmp470){label=235;break;}else{label=237;break;}
 case 235: 
 var $180=$i468;
 var $fRec62=(($this1+528020)|0);
 var $arrayidx472=(($fRec62+($180<<2))|0);
 HEAPF32[(($arrayidx472)>>2)]=0;
 label=236;break;
 case 236: 
 var $181=$i468;
 var $add474=((($181)+(1))|0);
 $i468=$add474;
 label=234;break;
 case 237: 
 $i476=0;
 label=238;break;
 case 238: 
 var $182=$i476;
 var $cmp478=($182|0)<2;
 if($cmp478){label=239;break;}else{label=241;break;}
 case 239: 
 var $183=$i476;
 var $fRec72=(($this1+528012)|0);
 var $arrayidx480=(($fRec72+($183<<2))|0);
 HEAPF32[(($arrayidx480)>>2)]=0;
 label=240;break;
 case 240: 
 var $184=$i476;
 var $add482=((($184)+(1))|0);
 $i476=$add482;
 label=238;break;
 case 241: 
 $i484=0;
 label=242;break;
 case 242: 
 var $185=$i484;
 var $cmp486=($185|0)<3;
 if($cmp486){label=243;break;}else{label=245;break;}
 case 243: 
 var $186=$i484;
 var $fRec71=(($this1+528000)|0);
 var $arrayidx488=(($fRec71+($186<<2))|0);
 HEAPF32[(($arrayidx488)>>2)]=0;
 label=244;break;
 case 244: 
 var $187=$i484;
 var $add490=((($187)+(1))|0);
 $i484=$add490;
 label=242;break;
 case 245: 
 $i492=0;
 label=246;break;
 case 246: 
 var $188=$i492;
 var $cmp494=($188|0)<2;
 if($cmp494){label=247;break;}else{label=249;break;}
 case 247: 
 var $189=$i492;
 var $fVec8=(($this1+527992)|0);
 var $arrayidx496=(($fVec8+($189<<2))|0);
 HEAPF32[(($arrayidx496)>>2)]=0;
 label=248;break;
 case 248: 
 var $190=$i492;
 var $add498=((($190)+(1))|0);
 $i492=$add498;
 label=246;break;
 case 249: 
 $i500=0;
 label=250;break;
 case 250: 
 var $191=$i500;
 var $cmp502=($191|0)<2;
 if($cmp502){label=251;break;}else{label=253;break;}
 case 251: 
 var $192=$i500;
 var $fRec70=(($this1+527984)|0);
 var $arrayidx504=(($fRec70+($192<<2))|0);
 HEAPF32[(($arrayidx504)>>2)]=0;
 label=252;break;
 case 252: 
 var $193=$i500;
 var $add506=((($193)+(1))|0);
 $i500=$add506;
 label=250;break;
 case 253: 
 $i508=0;
 label=254;break;
 case 254: 
 var $194=$i508;
 var $cmp510=($194|0)<3;
 if($cmp510){label=255;break;}else{label=257;break;}
 case 255: 
 var $195=$i508;
 var $fRec69=(($this1+527972)|0);
 var $arrayidx512=(($fRec69+($195<<2))|0);
 HEAPF32[(($arrayidx512)>>2)]=0;
 label=256;break;
 case 256: 
 var $196=$i508;
 var $add514=((($196)+(1))|0);
 $i508=$add514;
 label=254;break;
 case 257: 
 $i516=0;
 label=258;break;
 case 258: 
 var $197=$i516;
 var $cmp518=($197|0)<3;
 if($cmp518){label=259;break;}else{label=261;break;}
 case 259: 
 var $198=$i516;
 var $fRec68=(($this1+527960)|0);
 var $arrayidx520=(($fRec68+($198<<2))|0);
 HEAPF32[(($arrayidx520)>>2)]=0;
 label=260;break;
 case 260: 
 var $199=$i516;
 var $add522=((($199)+(1))|0);
 $i516=$add522;
 label=258;break;
 case 261: 
 $i524=0;
 label=262;break;
 case 262: 
 var $200=$i524;
 var $cmp526=($200|0)<3;
 if($cmp526){label=263;break;}else{label=265;break;}
 case 263: 
 var $201=$i524;
 var $fRec67=(($this1+527948)|0);
 var $arrayidx528=(($fRec67+($201<<2))|0);
 HEAPF32[(($arrayidx528)>>2)]=0;
 label=264;break;
 case 264: 
 var $202=$i524;
 var $add530=((($202)+(1))|0);
 $i524=$add530;
 label=262;break;
 case 265: 
 $i532=0;
 label=266;break;
 case 266: 
 var $203=$i532;
 var $cmp534=($203|0)<2;
 if($cmp534){label=267;break;}else{label=269;break;}
 case 267: 
 var $204=$i532;
 var $fRec77=(($this1+527940)|0);
 var $arrayidx536=(($fRec77+($204<<2))|0);
 HEAPF32[(($arrayidx536)>>2)]=0;
 label=268;break;
 case 268: 
 var $205=$i532;
 var $add538=((($205)+(1))|0);
 $i532=$add538;
 label=266;break;
 case 269: 
 $i540=0;
 label=270;break;
 case 270: 
 var $206=$i540;
 var $cmp542=($206|0)<3;
 if($cmp542){label=271;break;}else{label=273;break;}
 case 271: 
 var $207=$i540;
 var $fRec76=(($this1+527928)|0);
 var $arrayidx544=(($fRec76+($207<<2))|0);
 HEAPF32[(($arrayidx544)>>2)]=0;
 label=272;break;
 case 272: 
 var $208=$i540;
 var $add546=((($208)+(1))|0);
 $i540=$add546;
 label=270;break;
 case 273: 
 $i548=0;
 label=274;break;
 case 274: 
 var $209=$i548;
 var $cmp550=($209|0)<2;
 if($cmp550){label=275;break;}else{label=277;break;}
 case 275: 
 var $210=$i548;
 var $fVec9=(($this1+527920)|0);
 var $arrayidx552=(($fVec9+($210<<2))|0);
 HEAPF32[(($arrayidx552)>>2)]=0;
 label=276;break;
 case 276: 
 var $211=$i548;
 var $add554=((($211)+(1))|0);
 $i548=$add554;
 label=274;break;
 case 277: 
 $i556=0;
 label=278;break;
 case 278: 
 var $212=$i556;
 var $cmp558=($212|0)<2;
 if($cmp558){label=279;break;}else{label=281;break;}
 case 279: 
 var $213=$i556;
 var $fRec75=(($this1+527912)|0);
 var $arrayidx560=(($fRec75+($213<<2))|0);
 HEAPF32[(($arrayidx560)>>2)]=0;
 label=280;break;
 case 280: 
 var $214=$i556;
 var $add562=((($214)+(1))|0);
 $i556=$add562;
 label=278;break;
 case 281: 
 $i564=0;
 label=282;break;
 case 282: 
 var $215=$i564;
 var $cmp566=($215|0)<3;
 if($cmp566){label=283;break;}else{label=285;break;}
 case 283: 
 var $216=$i564;
 var $fRec74=(($this1+527900)|0);
 var $arrayidx568=(($fRec74+($216<<2))|0);
 HEAPF32[(($arrayidx568)>>2)]=0;
 label=284;break;
 case 284: 
 var $217=$i564;
 var $add570=((($217)+(1))|0);
 $i564=$add570;
 label=282;break;
 case 285: 
 $i572=0;
 label=286;break;
 case 286: 
 var $218=$i572;
 var $cmp574=($218|0)<3;
 if($cmp574){label=287;break;}else{label=289;break;}
 case 287: 
 var $219=$i572;
 var $fRec73=(($this1+527888)|0);
 var $arrayidx576=(($fRec73+($219<<2))|0);
 HEAPF32[(($arrayidx576)>>2)]=0;
 label=288;break;
 case 288: 
 var $220=$i572;
 var $add578=((($220)+(1))|0);
 $i572=$add578;
 label=286;break;
 case 289: 
 $i580=0;
 label=290;break;
 case 290: 
 var $221=$i580;
 var $cmp582=($221|0)<2;
 if($cmp582){label=291;break;}else{label=293;break;}
 case 291: 
 var $222=$i580;
 var $fRec81=(($this1+527880)|0);
 var $arrayidx584=(($fRec81+($222<<2))|0);
 HEAPF32[(($arrayidx584)>>2)]=0;
 label=292;break;
 case 292: 
 var $223=$i580;
 var $add586=((($223)+(1))|0);
 $i580=$add586;
 label=290;break;
 case 293: 
 $i588=0;
 label=294;break;
 case 294: 
 var $224=$i588;
 var $cmp590=($224|0)<3;
 if($cmp590){label=295;break;}else{label=297;break;}
 case 295: 
 var $225=$i588;
 var $fRec80=(($this1+527868)|0);
 var $arrayidx592=(($fRec80+($225<<2))|0);
 HEAPF32[(($arrayidx592)>>2)]=0;
 label=296;break;
 case 296: 
 var $226=$i588;
 var $add594=((($226)+(1))|0);
 $i588=$add594;
 label=294;break;
 case 297: 
 $i596=0;
 label=298;break;
 case 298: 
 var $227=$i596;
 var $cmp598=($227|0)<2;
 if($cmp598){label=299;break;}else{label=301;break;}
 case 299: 
 var $228=$i596;
 var $fVec10=(($this1+527860)|0);
 var $arrayidx600=(($fVec10+($228<<2))|0);
 HEAPF32[(($arrayidx600)>>2)]=0;
 label=300;break;
 case 300: 
 var $229=$i596;
 var $add602=((($229)+(1))|0);
 $i596=$add602;
 label=298;break;
 case 301: 
 $i604=0;
 label=302;break;
 case 302: 
 var $230=$i604;
 var $cmp606=($230|0)<2;
 if($cmp606){label=303;break;}else{label=305;break;}
 case 303: 
 var $231=$i604;
 var $fRec79=(($this1+527852)|0);
 var $arrayidx608=(($fRec79+($231<<2))|0);
 HEAPF32[(($arrayidx608)>>2)]=0;
 label=304;break;
 case 304: 
 var $232=$i604;
 var $add610=((($232)+(1))|0);
 $i604=$add610;
 label=302;break;
 case 305: 
 $i612=0;
 label=306;break;
 case 306: 
 var $233=$i612;
 var $cmp614=($233|0)<3;
 if($cmp614){label=307;break;}else{label=309;break;}
 case 307: 
 var $234=$i612;
 var $fRec78=(($this1+527840)|0);
 var $arrayidx616=(($fRec78+($234<<2))|0);
 HEAPF32[(($arrayidx616)>>2)]=0;
 label=308;break;
 case 308: 
 var $235=$i612;
 var $add618=((($235)+(1))|0);
 $i612=$add618;
 label=306;break;
 case 309: 
 $i620=0;
 label=310;break;
 case 310: 
 var $236=$i620;
 var $cmp622=($236|0)<2;
 if($cmp622){label=311;break;}else{label=313;break;}
 case 311: 
 var $237=$i620;
 var $fRec83=(($this1+527832)|0);
 var $arrayidx624=(($fRec83+($237<<2))|0);
 HEAPF32[(($arrayidx624)>>2)]=0;
 label=312;break;
 case 312: 
 var $238=$i620;
 var $add626=((($238)+(1))|0);
 $i620=$add626;
 label=310;break;
 case 313: 
 $i628=0;
 label=314;break;
 case 314: 
 var $239=$i628;
 var $cmp630=($239|0)<3;
 if($cmp630){label=315;break;}else{label=317;break;}
 case 315: 
 var $240=$i628;
 var $fRec82=(($this1+527820)|0);
 var $arrayidx632=(($fRec82+($240<<2))|0);
 HEAPF32[(($arrayidx632)>>2)]=0;
 label=316;break;
 case 316: 
 var $241=$i628;
 var $add634=((($241)+(1))|0);
 $i628=$add634;
 label=314;break;
 case 317: 
 $i636=0;
 label=318;break;
 case 318: 
 var $242=$i636;
 var $cmp638=($242|0)<2;
 if($cmp638){label=319;break;}else{label=321;break;}
 case 319: 
 var $243=$i636;
 var $fRec88=(($this1+527812)|0);
 var $arrayidx640=(($fRec88+($243<<2))|0);
 HEAPF32[(($arrayidx640)>>2)]=0;
 label=320;break;
 case 320: 
 var $244=$i636;
 var $add642=((($244)+(1))|0);
 $i636=$add642;
 label=318;break;
 case 321: 
 $i644=0;
 label=322;break;
 case 322: 
 var $245=$i644;
 var $cmp646=($245|0)<3;
 if($cmp646){label=323;break;}else{label=325;break;}
 case 323: 
 var $246=$i644;
 var $fRec87=(($this1+527800)|0);
 var $arrayidx648=(($fRec87+($246<<2))|0);
 HEAPF32[(($arrayidx648)>>2)]=0;
 label=324;break;
 case 324: 
 var $247=$i644;
 var $add650=((($247)+(1))|0);
 $i644=$add650;
 label=322;break;
 case 325: 
 $i652=0;
 label=326;break;
 case 326: 
 var $248=$i652;
 var $cmp654=($248|0)<3;
 if($cmp654){label=327;break;}else{label=329;break;}
 case 327: 
 var $249=$i652;
 var $fRec86=(($this1+527788)|0);
 var $arrayidx656=(($fRec86+($249<<2))|0);
 HEAPF32[(($arrayidx656)>>2)]=0;
 label=328;break;
 case 328: 
 var $250=$i652;
 var $add658=((($250)+(1))|0);
 $i652=$add658;
 label=326;break;
 case 329: 
 $i660=0;
 label=330;break;
 case 330: 
 var $251=$i660;
 var $cmp662=($251|0)<3;
 if($cmp662){label=331;break;}else{label=333;break;}
 case 331: 
 var $252=$i660;
 var $fRec85=(($this1+527776)|0);
 var $arrayidx664=(($fRec85+($252<<2))|0);
 HEAPF32[(($arrayidx664)>>2)]=0;
 label=332;break;
 case 332: 
 var $253=$i660;
 var $add666=((($253)+(1))|0);
 $i660=$add666;
 label=330;break;
 case 333: 
 $i668=0;
 label=334;break;
 case 334: 
 var $254=$i668;
 var $cmp670=($254|0)<3;
 if($cmp670){label=335;break;}else{label=337;break;}
 case 335: 
 var $255=$i668;
 var $fRec84=(($this1+527764)|0);
 var $arrayidx672=(($fRec84+($255<<2))|0);
 HEAPF32[(($arrayidx672)>>2)]=0;
 label=336;break;
 case 336: 
 var $256=$i668;
 var $add674=((($256)+(1))|0);
 $i668=$add674;
 label=334;break;
 case 337: 
 $i676=0;
 label=338;break;
 case 338: 
 var $257=$i676;
 var $cmp678=($257|0)<2;
 if($cmp678){label=339;break;}else{label=341;break;}
 case 339: 
 var $258=$i676;
 var $fRec94=(($this1+527756)|0);
 var $arrayidx680=(($fRec94+($258<<2))|0);
 HEAPF32[(($arrayidx680)>>2)]=0;
 label=340;break;
 case 340: 
 var $259=$i676;
 var $add682=((($259)+(1))|0);
 $i676=$add682;
 label=338;break;
 case 341: 
 $i684=0;
 label=342;break;
 case 342: 
 var $260=$i684;
 var $cmp686=($260|0)<3;
 if($cmp686){label=343;break;}else{label=345;break;}
 case 343: 
 var $261=$i684;
 var $fRec93=(($this1+527744)|0);
 var $arrayidx688=(($fRec93+($261<<2))|0);
 HEAPF32[(($arrayidx688)>>2)]=0;
 label=344;break;
 case 344: 
 var $262=$i684;
 var $add690=((($262)+(1))|0);
 $i684=$add690;
 label=342;break;
 case 345: 
 $i692=0;
 label=346;break;
 case 346: 
 var $263=$i692;
 var $cmp694=($263|0)<2;
 if($cmp694){label=347;break;}else{label=349;break;}
 case 347: 
 var $264=$i692;
 var $fVec11=(($this1+527736)|0);
 var $arrayidx696=(($fVec11+($264<<2))|0);
 HEAPF32[(($arrayidx696)>>2)]=0;
 label=348;break;
 case 348: 
 var $265=$i692;
 var $add698=((($265)+(1))|0);
 $i692=$add698;
 label=346;break;
 case 349: 
 $i700=0;
 label=350;break;
 case 350: 
 var $266=$i700;
 var $cmp702=($266|0)<2;
 if($cmp702){label=351;break;}else{label=353;break;}
 case 351: 
 var $267=$i700;
 var $fRec92=(($this1+527728)|0);
 var $arrayidx704=(($fRec92+($267<<2))|0);
 HEAPF32[(($arrayidx704)>>2)]=0;
 label=352;break;
 case 352: 
 var $268=$i700;
 var $add706=((($268)+(1))|0);
 $i700=$add706;
 label=350;break;
 case 353: 
 $i708=0;
 label=354;break;
 case 354: 
 var $269=$i708;
 var $cmp710=($269|0)<3;
 if($cmp710){label=355;break;}else{label=357;break;}
 case 355: 
 var $270=$i708;
 var $fRec91=(($this1+527716)|0);
 var $arrayidx712=(($fRec91+($270<<2))|0);
 HEAPF32[(($arrayidx712)>>2)]=0;
 label=356;break;
 case 356: 
 var $271=$i708;
 var $add714=((($271)+(1))|0);
 $i708=$add714;
 label=354;break;
 case 357: 
 $i716=0;
 label=358;break;
 case 358: 
 var $272=$i716;
 var $cmp718=($272|0)<3;
 if($cmp718){label=359;break;}else{label=361;break;}
 case 359: 
 var $273=$i716;
 var $fRec90=(($this1+527704)|0);
 var $arrayidx720=(($fRec90+($273<<2))|0);
 HEAPF32[(($arrayidx720)>>2)]=0;
 label=360;break;
 case 360: 
 var $274=$i716;
 var $add722=((($274)+(1))|0);
 $i716=$add722;
 label=358;break;
 case 361: 
 $i724=0;
 label=362;break;
 case 362: 
 var $275=$i724;
 var $cmp726=($275|0)<3;
 if($cmp726){label=363;break;}else{label=365;break;}
 case 363: 
 var $276=$i724;
 var $fRec89=(($this1+527692)|0);
 var $arrayidx728=(($fRec89+($276<<2))|0);
 HEAPF32[(($arrayidx728)>>2)]=0;
 label=364;break;
 case 364: 
 var $277=$i724;
 var $add730=((($277)+(1))|0);
 $i724=$add730;
 label=362;break;
 case 365: 
 $i732=0;
 label=366;break;
 case 366: 
 var $278=$i732;
 var $cmp734=($278|0)<2;
 if($cmp734){label=367;break;}else{label=369;break;}
 case 367: 
 var $279=$i732;
 var $fRec99=(($this1+527684)|0);
 var $arrayidx736=(($fRec99+($279<<2))|0);
 HEAPF32[(($arrayidx736)>>2)]=0;
 label=368;break;
 case 368: 
 var $280=$i732;
 var $add738=((($280)+(1))|0);
 $i732=$add738;
 label=366;break;
 case 369: 
 $i740=0;
 label=370;break;
 case 370: 
 var $281=$i740;
 var $cmp742=($281|0)<3;
 if($cmp742){label=371;break;}else{label=373;break;}
 case 371: 
 var $282=$i740;
 var $fRec98=(($this1+527672)|0);
 var $arrayidx744=(($fRec98+($282<<2))|0);
 HEAPF32[(($arrayidx744)>>2)]=0;
 label=372;break;
 case 372: 
 var $283=$i740;
 var $add746=((($283)+(1))|0);
 $i740=$add746;
 label=370;break;
 case 373: 
 $i748=0;
 label=374;break;
 case 374: 
 var $284=$i748;
 var $cmp750=($284|0)<2;
 if($cmp750){label=375;break;}else{label=377;break;}
 case 375: 
 var $285=$i748;
 var $fVec12=(($this1+527664)|0);
 var $arrayidx752=(($fVec12+($285<<2))|0);
 HEAPF32[(($arrayidx752)>>2)]=0;
 label=376;break;
 case 376: 
 var $286=$i748;
 var $add754=((($286)+(1))|0);
 $i748=$add754;
 label=374;break;
 case 377: 
 $i756=0;
 label=378;break;
 case 378: 
 var $287=$i756;
 var $cmp758=($287|0)<2;
 if($cmp758){label=379;break;}else{label=381;break;}
 case 379: 
 var $288=$i756;
 var $fRec97=(($this1+527656)|0);
 var $arrayidx760=(($fRec97+($288<<2))|0);
 HEAPF32[(($arrayidx760)>>2)]=0;
 label=380;break;
 case 380: 
 var $289=$i756;
 var $add762=((($289)+(1))|0);
 $i756=$add762;
 label=378;break;
 case 381: 
 $i764=0;
 label=382;break;
 case 382: 
 var $290=$i764;
 var $cmp766=($290|0)<3;
 if($cmp766){label=383;break;}else{label=385;break;}
 case 383: 
 var $291=$i764;
 var $fRec96=(($this1+527644)|0);
 var $arrayidx768=(($fRec96+($291<<2))|0);
 HEAPF32[(($arrayidx768)>>2)]=0;
 label=384;break;
 case 384: 
 var $292=$i764;
 var $add770=((($292)+(1))|0);
 $i764=$add770;
 label=382;break;
 case 385: 
 $i772=0;
 label=386;break;
 case 386: 
 var $293=$i772;
 var $cmp774=($293|0)<3;
 if($cmp774){label=387;break;}else{label=389;break;}
 case 387: 
 var $294=$i772;
 var $fRec95=(($this1+527632)|0);
 var $arrayidx776=(($fRec95+($294<<2))|0);
 HEAPF32[(($arrayidx776)>>2)]=0;
 label=388;break;
 case 388: 
 var $295=$i772;
 var $add778=((($295)+(1))|0);
 $i772=$add778;
 label=386;break;
 case 389: 
 $i780=0;
 label=390;break;
 case 390: 
 var $296=$i780;
 var $cmp782=($296|0)<2;
 if($cmp782){label=391;break;}else{label=393;break;}
 case 391: 
 var $297=$i780;
 var $fRec103=(($this1+527624)|0);
 var $arrayidx784=(($fRec103+($297<<2))|0);
 HEAPF32[(($arrayidx784)>>2)]=0;
 label=392;break;
 case 392: 
 var $298=$i780;
 var $add786=((($298)+(1))|0);
 $i780=$add786;
 label=390;break;
 case 393: 
 $i788=0;
 label=394;break;
 case 394: 
 var $299=$i788;
 var $cmp790=($299|0)<3;
 if($cmp790){label=395;break;}else{label=397;break;}
 case 395: 
 var $300=$i788;
 var $fRec102=(($this1+527612)|0);
 var $arrayidx792=(($fRec102+($300<<2))|0);
 HEAPF32[(($arrayidx792)>>2)]=0;
 label=396;break;
 case 396: 
 var $301=$i788;
 var $add794=((($301)+(1))|0);
 $i788=$add794;
 label=394;break;
 case 397: 
 $i796=0;
 label=398;break;
 case 398: 
 var $302=$i796;
 var $cmp798=($302|0)<2;
 if($cmp798){label=399;break;}else{label=401;break;}
 case 399: 
 var $303=$i796;
 var $fVec13=(($this1+527604)|0);
 var $arrayidx800=(($fVec13+($303<<2))|0);
 HEAPF32[(($arrayidx800)>>2)]=0;
 label=400;break;
 case 400: 
 var $304=$i796;
 var $add802=((($304)+(1))|0);
 $i796=$add802;
 label=398;break;
 case 401: 
 $i804=0;
 label=402;break;
 case 402: 
 var $305=$i804;
 var $cmp806=($305|0)<2;
 if($cmp806){label=403;break;}else{label=405;break;}
 case 403: 
 var $306=$i804;
 var $fRec101=(($this1+527596)|0);
 var $arrayidx808=(($fRec101+($306<<2))|0);
 HEAPF32[(($arrayidx808)>>2)]=0;
 label=404;break;
 case 404: 
 var $307=$i804;
 var $add810=((($307)+(1))|0);
 $i804=$add810;
 label=402;break;
 case 405: 
 $i812=0;
 label=406;break;
 case 406: 
 var $308=$i812;
 var $cmp814=($308|0)<3;
 if($cmp814){label=407;break;}else{label=409;break;}
 case 407: 
 var $309=$i812;
 var $fRec100=(($this1+527584)|0);
 var $arrayidx816=(($fRec100+($309<<2))|0);
 HEAPF32[(($arrayidx816)>>2)]=0;
 label=408;break;
 case 408: 
 var $310=$i812;
 var $add818=((($310)+(1))|0);
 $i812=$add818;
 label=406;break;
 case 409: 
 $i820=0;
 label=410;break;
 case 410: 
 var $311=$i820;
 var $cmp822=($311|0)<2;
 if($cmp822){label=411;break;}else{label=413;break;}
 case 411: 
 var $312=$i820;
 var $fRec105=(($this1+527576)|0);
 var $arrayidx824=(($fRec105+($312<<2))|0);
 HEAPF32[(($arrayidx824)>>2)]=0;
 label=412;break;
 case 412: 
 var $313=$i820;
 var $add826=((($313)+(1))|0);
 $i820=$add826;
 label=410;break;
 case 413: 
 $i828=0;
 label=414;break;
 case 414: 
 var $314=$i828;
 var $cmp830=($314|0)<3;
 if($cmp830){label=415;break;}else{label=417;break;}
 case 415: 
 var $315=$i828;
 var $fRec104=(($this1+527564)|0);
 var $arrayidx832=(($fRec104+($315<<2))|0);
 HEAPF32[(($arrayidx832)>>2)]=0;
 label=416;break;
 case 416: 
 var $316=$i828;
 var $add834=((($316)+(1))|0);
 $i828=$add834;
 label=414;break;
 case 417: 
 $i836=0;
 label=418;break;
 case 418: 
 var $317=$i836;
 var $cmp838=($317|0)<2;
 if($cmp838){label=419;break;}else{label=421;break;}
 case 419: 
 var $318=$i836;
 var $fRec110=(($this1+527556)|0);
 var $arrayidx840=(($fRec110+($318<<2))|0);
 HEAPF32[(($arrayidx840)>>2)]=0;
 label=420;break;
 case 420: 
 var $319=$i836;
 var $add842=((($319)+(1))|0);
 $i836=$add842;
 label=418;break;
 case 421: 
 $i844=0;
 label=422;break;
 case 422: 
 var $320=$i844;
 var $cmp846=($320|0)<3;
 if($cmp846){label=423;break;}else{label=425;break;}
 case 423: 
 var $321=$i844;
 var $fRec109=(($this1+527544)|0);
 var $arrayidx848=(($fRec109+($321<<2))|0);
 HEAPF32[(($arrayidx848)>>2)]=0;
 label=424;break;
 case 424: 
 var $322=$i844;
 var $add850=((($322)+(1))|0);
 $i844=$add850;
 label=422;break;
 case 425: 
 $i852=0;
 label=426;break;
 case 426: 
 var $323=$i852;
 var $cmp854=($323|0)<3;
 if($cmp854){label=427;break;}else{label=429;break;}
 case 427: 
 var $324=$i852;
 var $fRec108=(($this1+527532)|0);
 var $arrayidx856=(($fRec108+($324<<2))|0);
 HEAPF32[(($arrayidx856)>>2)]=0;
 label=428;break;
 case 428: 
 var $325=$i852;
 var $add858=((($325)+(1))|0);
 $i852=$add858;
 label=426;break;
 case 429: 
 $i860=0;
 label=430;break;
 case 430: 
 var $326=$i860;
 var $cmp862=($326|0)<3;
 if($cmp862){label=431;break;}else{label=433;break;}
 case 431: 
 var $327=$i860;
 var $fRec107=(($this1+527520)|0);
 var $arrayidx864=(($fRec107+($327<<2))|0);
 HEAPF32[(($arrayidx864)>>2)]=0;
 label=432;break;
 case 432: 
 var $328=$i860;
 var $add866=((($328)+(1))|0);
 $i860=$add866;
 label=430;break;
 case 433: 
 $i868=0;
 label=434;break;
 case 434: 
 var $329=$i868;
 var $cmp870=($329|0)<3;
 if($cmp870){label=435;break;}else{label=437;break;}
 case 435: 
 var $330=$i868;
 var $fRec106=(($this1+527508)|0);
 var $arrayidx872=(($fRec106+($330<<2))|0);
 HEAPF32[(($arrayidx872)>>2)]=0;
 label=436;break;
 case 436: 
 var $331=$i868;
 var $add874=((($331)+(1))|0);
 $i868=$add874;
 label=434;break;
 case 437: 
 $i876=0;
 label=438;break;
 case 438: 
 var $332=$i876;
 var $cmp878=($332|0)<2;
 if($cmp878){label=439;break;}else{label=441;break;}
 case 439: 
 var $333=$i876;
 var $fRec116=(($this1+527500)|0);
 var $arrayidx880=(($fRec116+($333<<2))|0);
 HEAPF32[(($arrayidx880)>>2)]=0;
 label=440;break;
 case 440: 
 var $334=$i876;
 var $add882=((($334)+(1))|0);
 $i876=$add882;
 label=438;break;
 case 441: 
 $i884=0;
 label=442;break;
 case 442: 
 var $335=$i884;
 var $cmp886=($335|0)<3;
 if($cmp886){label=443;break;}else{label=445;break;}
 case 443: 
 var $336=$i884;
 var $fRec115=(($this1+527488)|0);
 var $arrayidx888=(($fRec115+($336<<2))|0);
 HEAPF32[(($arrayidx888)>>2)]=0;
 label=444;break;
 case 444: 
 var $337=$i884;
 var $add890=((($337)+(1))|0);
 $i884=$add890;
 label=442;break;
 case 445: 
 $i892=0;
 label=446;break;
 case 446: 
 var $338=$i892;
 var $cmp894=($338|0)<2;
 if($cmp894){label=447;break;}else{label=449;break;}
 case 447: 
 var $339=$i892;
 var $fVec14=(($this1+527480)|0);
 var $arrayidx896=(($fVec14+($339<<2))|0);
 HEAPF32[(($arrayidx896)>>2)]=0;
 label=448;break;
 case 448: 
 var $340=$i892;
 var $add898=((($340)+(1))|0);
 $i892=$add898;
 label=446;break;
 case 449: 
 $i900=0;
 label=450;break;
 case 450: 
 var $341=$i900;
 var $cmp902=($341|0)<2;
 if($cmp902){label=451;break;}else{label=453;break;}
 case 451: 
 var $342=$i900;
 var $fRec114=(($this1+527472)|0);
 var $arrayidx904=(($fRec114+($342<<2))|0);
 HEAPF32[(($arrayidx904)>>2)]=0;
 label=452;break;
 case 452: 
 var $343=$i900;
 var $add906=((($343)+(1))|0);
 $i900=$add906;
 label=450;break;
 case 453: 
 $i908=0;
 label=454;break;
 case 454: 
 var $344=$i908;
 var $cmp910=($344|0)<3;
 if($cmp910){label=455;break;}else{label=457;break;}
 case 455: 
 var $345=$i908;
 var $fRec113=(($this1+527460)|0);
 var $arrayidx912=(($fRec113+($345<<2))|0);
 HEAPF32[(($arrayidx912)>>2)]=0;
 label=456;break;
 case 456: 
 var $346=$i908;
 var $add914=((($346)+(1))|0);
 $i908=$add914;
 label=454;break;
 case 457: 
 $i916=0;
 label=458;break;
 case 458: 
 var $347=$i916;
 var $cmp918=($347|0)<3;
 if($cmp918){label=459;break;}else{label=461;break;}
 case 459: 
 var $348=$i916;
 var $fRec112=(($this1+527448)|0);
 var $arrayidx920=(($fRec112+($348<<2))|0);
 HEAPF32[(($arrayidx920)>>2)]=0;
 label=460;break;
 case 460: 
 var $349=$i916;
 var $add922=((($349)+(1))|0);
 $i916=$add922;
 label=458;break;
 case 461: 
 $i924=0;
 label=462;break;
 case 462: 
 var $350=$i924;
 var $cmp926=($350|0)<3;
 if($cmp926){label=463;break;}else{label=465;break;}
 case 463: 
 var $351=$i924;
 var $fRec111=(($this1+527436)|0);
 var $arrayidx928=(($fRec111+($351<<2))|0);
 HEAPF32[(($arrayidx928)>>2)]=0;
 label=464;break;
 case 464: 
 var $352=$i924;
 var $add930=((($352)+(1))|0);
 $i924=$add930;
 label=462;break;
 case 465: 
 $i932=0;
 label=466;break;
 case 466: 
 var $353=$i932;
 var $cmp934=($353|0)<2;
 if($cmp934){label=467;break;}else{label=469;break;}
 case 467: 
 var $354=$i932;
 var $fRec121=(($this1+527428)|0);
 var $arrayidx936=(($fRec121+($354<<2))|0);
 HEAPF32[(($arrayidx936)>>2)]=0;
 label=468;break;
 case 468: 
 var $355=$i932;
 var $add938=((($355)+(1))|0);
 $i932=$add938;
 label=466;break;
 case 469: 
 $i940=0;
 label=470;break;
 case 470: 
 var $356=$i940;
 var $cmp942=($356|0)<3;
 if($cmp942){label=471;break;}else{label=473;break;}
 case 471: 
 var $357=$i940;
 var $fRec120=(($this1+527416)|0);
 var $arrayidx944=(($fRec120+($357<<2))|0);
 HEAPF32[(($arrayidx944)>>2)]=0;
 label=472;break;
 case 472: 
 var $358=$i940;
 var $add946=((($358)+(1))|0);
 $i940=$add946;
 label=470;break;
 case 473: 
 $i948=0;
 label=474;break;
 case 474: 
 var $359=$i948;
 var $cmp950=($359|0)<2;
 if($cmp950){label=475;break;}else{label=477;break;}
 case 475: 
 var $360=$i948;
 var $fVec15=(($this1+527408)|0);
 var $arrayidx952=(($fVec15+($360<<2))|0);
 HEAPF32[(($arrayidx952)>>2)]=0;
 label=476;break;
 case 476: 
 var $361=$i948;
 var $add954=((($361)+(1))|0);
 $i948=$add954;
 label=474;break;
 case 477: 
 $i956=0;
 label=478;break;
 case 478: 
 var $362=$i956;
 var $cmp958=($362|0)<2;
 if($cmp958){label=479;break;}else{label=481;break;}
 case 479: 
 var $363=$i956;
 var $fRec119=(($this1+527400)|0);
 var $arrayidx960=(($fRec119+($363<<2))|0);
 HEAPF32[(($arrayidx960)>>2)]=0;
 label=480;break;
 case 480: 
 var $364=$i956;
 var $add962=((($364)+(1))|0);
 $i956=$add962;
 label=478;break;
 case 481: 
 $i964=0;
 label=482;break;
 case 482: 
 var $365=$i964;
 var $cmp966=($365|0)<3;
 if($cmp966){label=483;break;}else{label=485;break;}
 case 483: 
 var $366=$i964;
 var $fRec118=(($this1+527388)|0);
 var $arrayidx968=(($fRec118+($366<<2))|0);
 HEAPF32[(($arrayidx968)>>2)]=0;
 label=484;break;
 case 484: 
 var $367=$i964;
 var $add970=((($367)+(1))|0);
 $i964=$add970;
 label=482;break;
 case 485: 
 $i972=0;
 label=486;break;
 case 486: 
 var $368=$i972;
 var $cmp974=($368|0)<3;
 if($cmp974){label=487;break;}else{label=489;break;}
 case 487: 
 var $369=$i972;
 var $fRec117=(($this1+527376)|0);
 var $arrayidx976=(($fRec117+($369<<2))|0);
 HEAPF32[(($arrayidx976)>>2)]=0;
 label=488;break;
 case 488: 
 var $370=$i972;
 var $add978=((($370)+(1))|0);
 $i972=$add978;
 label=486;break;
 case 489: 
 $i980=0;
 label=490;break;
 case 490: 
 var $371=$i980;
 var $cmp982=($371|0)<2;
 if($cmp982){label=491;break;}else{label=493;break;}
 case 491: 
 var $372=$i980;
 var $fRec125=(($this1+527368)|0);
 var $arrayidx984=(($fRec125+($372<<2))|0);
 HEAPF32[(($arrayidx984)>>2)]=0;
 label=492;break;
 case 492: 
 var $373=$i980;
 var $add986=((($373)+(1))|0);
 $i980=$add986;
 label=490;break;
 case 493: 
 $i988=0;
 label=494;break;
 case 494: 
 var $374=$i988;
 var $cmp990=($374|0)<3;
 if($cmp990){label=495;break;}else{label=497;break;}
 case 495: 
 var $375=$i988;
 var $fRec124=(($this1+527356)|0);
 var $arrayidx992=(($fRec124+($375<<2))|0);
 HEAPF32[(($arrayidx992)>>2)]=0;
 label=496;break;
 case 496: 
 var $376=$i988;
 var $add994=((($376)+(1))|0);
 $i988=$add994;
 label=494;break;
 case 497: 
 $i996=0;
 label=498;break;
 case 498: 
 var $377=$i996;
 var $cmp998=($377|0)<2;
 if($cmp998){label=499;break;}else{label=501;break;}
 case 499: 
 var $378=$i996;
 var $fVec16=(($this1+527348)|0);
 var $arrayidx1000=(($fVec16+($378<<2))|0);
 HEAPF32[(($arrayidx1000)>>2)]=0;
 label=500;break;
 case 500: 
 var $379=$i996;
 var $add1002=((($379)+(1))|0);
 $i996=$add1002;
 label=498;break;
 case 501: 
 $i1004=0;
 label=502;break;
 case 502: 
 var $380=$i1004;
 var $cmp1006=($380|0)<2;
 if($cmp1006){label=503;break;}else{label=505;break;}
 case 503: 
 var $381=$i1004;
 var $fRec123=(($this1+527340)|0);
 var $arrayidx1008=(($fRec123+($381<<2))|0);
 HEAPF32[(($arrayidx1008)>>2)]=0;
 label=504;break;
 case 504: 
 var $382=$i1004;
 var $add1010=((($382)+(1))|0);
 $i1004=$add1010;
 label=502;break;
 case 505: 
 $i1012=0;
 label=506;break;
 case 506: 
 var $383=$i1012;
 var $cmp1014=($383|0)<3;
 if($cmp1014){label=507;break;}else{label=509;break;}
 case 507: 
 var $384=$i1012;
 var $fRec122=(($this1+527328)|0);
 var $arrayidx1016=(($fRec122+($384<<2))|0);
 HEAPF32[(($arrayidx1016)>>2)]=0;
 label=508;break;
 case 508: 
 var $385=$i1012;
 var $add1018=((($385)+(1))|0);
 $i1012=$add1018;
 label=506;break;
 case 509: 
 $i1020=0;
 label=510;break;
 case 510: 
 var $386=$i1020;
 var $cmp1022=($386|0)<2;
 if($cmp1022){label=511;break;}else{label=513;break;}
 case 511: 
 var $387=$i1020;
 var $fRec127=(($this1+527320)|0);
 var $arrayidx1024=(($fRec127+($387<<2))|0);
 HEAPF32[(($arrayidx1024)>>2)]=0;
 label=512;break;
 case 512: 
 var $388=$i1020;
 var $add1026=((($388)+(1))|0);
 $i1020=$add1026;
 label=510;break;
 case 513: 
 $i1028=0;
 label=514;break;
 case 514: 
 var $389=$i1028;
 var $cmp1030=($389|0)<3;
 if($cmp1030){label=515;break;}else{label=517;break;}
 case 515: 
 var $390=$i1028;
 var $fRec126=(($this1+527308)|0);
 var $arrayidx1032=(($fRec126+($390<<2))|0);
 HEAPF32[(($arrayidx1032)>>2)]=0;
 label=516;break;
 case 516: 
 var $391=$i1028;
 var $add1034=((($391)+(1))|0);
 $i1028=$add1034;
 label=514;break;
 case 517: 
 $i1036=0;
 label=518;break;
 case 518: 
 var $392=$i1036;
 var $cmp1038=($392|0)<2;
 if($cmp1038){label=519;break;}else{label=521;break;}
 case 519: 
 var $393=$i1036;
 var $fRec132=(($this1+527300)|0);
 var $arrayidx1040=(($fRec132+($393<<2))|0);
 HEAPF32[(($arrayidx1040)>>2)]=0;
 label=520;break;
 case 520: 
 var $394=$i1036;
 var $add1042=((($394)+(1))|0);
 $i1036=$add1042;
 label=518;break;
 case 521: 
 $i1044=0;
 label=522;break;
 case 522: 
 var $395=$i1044;
 var $cmp1046=($395|0)<3;
 if($cmp1046){label=523;break;}else{label=525;break;}
 case 523: 
 var $396=$i1044;
 var $fRec131=(($this1+527288)|0);
 var $arrayidx1048=(($fRec131+($396<<2))|0);
 HEAPF32[(($arrayidx1048)>>2)]=0;
 label=524;break;
 case 524: 
 var $397=$i1044;
 var $add1050=((($397)+(1))|0);
 $i1044=$add1050;
 label=522;break;
 case 525: 
 $i1052=0;
 label=526;break;
 case 526: 
 var $398=$i1052;
 var $cmp1054=($398|0)<3;
 if($cmp1054){label=527;break;}else{label=529;break;}
 case 527: 
 var $399=$i1052;
 var $fRec130=(($this1+527276)|0);
 var $arrayidx1056=(($fRec130+($399<<2))|0);
 HEAPF32[(($arrayidx1056)>>2)]=0;
 label=528;break;
 case 528: 
 var $400=$i1052;
 var $add1058=((($400)+(1))|0);
 $i1052=$add1058;
 label=526;break;
 case 529: 
 $i1060=0;
 label=530;break;
 case 530: 
 var $401=$i1060;
 var $cmp1062=($401|0)<3;
 if($cmp1062){label=531;break;}else{label=533;break;}
 case 531: 
 var $402=$i1060;
 var $fRec129=(($this1+527264)|0);
 var $arrayidx1064=(($fRec129+($402<<2))|0);
 HEAPF32[(($arrayidx1064)>>2)]=0;
 label=532;break;
 case 532: 
 var $403=$i1060;
 var $add1066=((($403)+(1))|0);
 $i1060=$add1066;
 label=530;break;
 case 533: 
 $i1068=0;
 label=534;break;
 case 534: 
 var $404=$i1068;
 var $cmp1070=($404|0)<3;
 if($cmp1070){label=535;break;}else{label=537;break;}
 case 535: 
 var $405=$i1068;
 var $fRec128=(($this1+527252)|0);
 var $arrayidx1072=(($fRec128+($405<<2))|0);
 HEAPF32[(($arrayidx1072)>>2)]=0;
 label=536;break;
 case 536: 
 var $406=$i1068;
 var $add1074=((($406)+(1))|0);
 $i1068=$add1074;
 label=534;break;
 case 537: 
 $i1076=0;
 label=538;break;
 case 538: 
 var $407=$i1076;
 var $cmp1078=($407|0)<2;
 if($cmp1078){label=539;break;}else{label=541;break;}
 case 539: 
 var $408=$i1076;
 var $fRec138=(($this1+527244)|0);
 var $arrayidx1080=(($fRec138+($408<<2))|0);
 HEAPF32[(($arrayidx1080)>>2)]=0;
 label=540;break;
 case 540: 
 var $409=$i1076;
 var $add1082=((($409)+(1))|0);
 $i1076=$add1082;
 label=538;break;
 case 541: 
 $i1084=0;
 label=542;break;
 case 542: 
 var $410=$i1084;
 var $cmp1086=($410|0)<3;
 if($cmp1086){label=543;break;}else{label=545;break;}
 case 543: 
 var $411=$i1084;
 var $fRec137=(($this1+527232)|0);
 var $arrayidx1088=(($fRec137+($411<<2))|0);
 HEAPF32[(($arrayidx1088)>>2)]=0;
 label=544;break;
 case 544: 
 var $412=$i1084;
 var $add1090=((($412)+(1))|0);
 $i1084=$add1090;
 label=542;break;
 case 545: 
 $i1092=0;
 label=546;break;
 case 546: 
 var $413=$i1092;
 var $cmp1094=($413|0)<2;
 if($cmp1094){label=547;break;}else{label=549;break;}
 case 547: 
 var $414=$i1092;
 var $fVec17=(($this1+527224)|0);
 var $arrayidx1096=(($fVec17+($414<<2))|0);
 HEAPF32[(($arrayidx1096)>>2)]=0;
 label=548;break;
 case 548: 
 var $415=$i1092;
 var $add1098=((($415)+(1))|0);
 $i1092=$add1098;
 label=546;break;
 case 549: 
 $i1100=0;
 label=550;break;
 case 550: 
 var $416=$i1100;
 var $cmp1102=($416|0)<2;
 if($cmp1102){label=551;break;}else{label=553;break;}
 case 551: 
 var $417=$i1100;
 var $fRec136=(($this1+527216)|0);
 var $arrayidx1104=(($fRec136+($417<<2))|0);
 HEAPF32[(($arrayidx1104)>>2)]=0;
 label=552;break;
 case 552: 
 var $418=$i1100;
 var $add1106=((($418)+(1))|0);
 $i1100=$add1106;
 label=550;break;
 case 553: 
 $i1108=0;
 label=554;break;
 case 554: 
 var $419=$i1108;
 var $cmp1110=($419|0)<3;
 if($cmp1110){label=555;break;}else{label=557;break;}
 case 555: 
 var $420=$i1108;
 var $fRec135=(($this1+527204)|0);
 var $arrayidx1112=(($fRec135+($420<<2))|0);
 HEAPF32[(($arrayidx1112)>>2)]=0;
 label=556;break;
 case 556: 
 var $421=$i1108;
 var $add1114=((($421)+(1))|0);
 $i1108=$add1114;
 label=554;break;
 case 557: 
 $i1116=0;
 label=558;break;
 case 558: 
 var $422=$i1116;
 var $cmp1118=($422|0)<3;
 if($cmp1118){label=559;break;}else{label=561;break;}
 case 559: 
 var $423=$i1116;
 var $fRec134=(($this1+527192)|0);
 var $arrayidx1120=(($fRec134+($423<<2))|0);
 HEAPF32[(($arrayidx1120)>>2)]=0;
 label=560;break;
 case 560: 
 var $424=$i1116;
 var $add1122=((($424)+(1))|0);
 $i1116=$add1122;
 label=558;break;
 case 561: 
 $i1124=0;
 label=562;break;
 case 562: 
 var $425=$i1124;
 var $cmp1126=($425|0)<3;
 if($cmp1126){label=563;break;}else{label=565;break;}
 case 563: 
 var $426=$i1124;
 var $fRec133=(($this1+527180)|0);
 var $arrayidx1128=(($fRec133+($426<<2))|0);
 HEAPF32[(($arrayidx1128)>>2)]=0;
 label=564;break;
 case 564: 
 var $427=$i1124;
 var $add1130=((($427)+(1))|0);
 $i1124=$add1130;
 label=562;break;
 case 565: 
 $i1132=0;
 label=566;break;
 case 566: 
 var $428=$i1132;
 var $cmp1134=($428|0)<2;
 if($cmp1134){label=567;break;}else{label=569;break;}
 case 567: 
 var $429=$i1132;
 var $fRec143=(($this1+527172)|0);
 var $arrayidx1136=(($fRec143+($429<<2))|0);
 HEAPF32[(($arrayidx1136)>>2)]=0;
 label=568;break;
 case 568: 
 var $430=$i1132;
 var $add1138=((($430)+(1))|0);
 $i1132=$add1138;
 label=566;break;
 case 569: 
 $i1140=0;
 label=570;break;
 case 570: 
 var $431=$i1140;
 var $cmp1142=($431|0)<3;
 if($cmp1142){label=571;break;}else{label=573;break;}
 case 571: 
 var $432=$i1140;
 var $fRec142=(($this1+527160)|0);
 var $arrayidx1144=(($fRec142+($432<<2))|0);
 HEAPF32[(($arrayidx1144)>>2)]=0;
 label=572;break;
 case 572: 
 var $433=$i1140;
 var $add1146=((($433)+(1))|0);
 $i1140=$add1146;
 label=570;break;
 case 573: 
 $i1148=0;
 label=574;break;
 case 574: 
 var $434=$i1148;
 var $cmp1150=($434|0)<2;
 if($cmp1150){label=575;break;}else{label=577;break;}
 case 575: 
 var $435=$i1148;
 var $fVec18=(($this1+527152)|0);
 var $arrayidx1152=(($fVec18+($435<<2))|0);
 HEAPF32[(($arrayidx1152)>>2)]=0;
 label=576;break;
 case 576: 
 var $436=$i1148;
 var $add1154=((($436)+(1))|0);
 $i1148=$add1154;
 label=574;break;
 case 577: 
 $i1156=0;
 label=578;break;
 case 578: 
 var $437=$i1156;
 var $cmp1158=($437|0)<2;
 if($cmp1158){label=579;break;}else{label=581;break;}
 case 579: 
 var $438=$i1156;
 var $fRec141=(($this1+527144)|0);
 var $arrayidx1160=(($fRec141+($438<<2))|0);
 HEAPF32[(($arrayidx1160)>>2)]=0;
 label=580;break;
 case 580: 
 var $439=$i1156;
 var $add1162=((($439)+(1))|0);
 $i1156=$add1162;
 label=578;break;
 case 581: 
 $i1164=0;
 label=582;break;
 case 582: 
 var $440=$i1164;
 var $cmp1166=($440|0)<3;
 if($cmp1166){label=583;break;}else{label=585;break;}
 case 583: 
 var $441=$i1164;
 var $fRec140=(($this1+527132)|0);
 var $arrayidx1168=(($fRec140+($441<<2))|0);
 HEAPF32[(($arrayidx1168)>>2)]=0;
 label=584;break;
 case 584: 
 var $442=$i1164;
 var $add1170=((($442)+(1))|0);
 $i1164=$add1170;
 label=582;break;
 case 585: 
 $i1172=0;
 label=586;break;
 case 586: 
 var $443=$i1172;
 var $cmp1174=($443|0)<3;
 if($cmp1174){label=587;break;}else{label=589;break;}
 case 587: 
 var $444=$i1172;
 var $fRec139=(($this1+527120)|0);
 var $arrayidx1176=(($fRec139+($444<<2))|0);
 HEAPF32[(($arrayidx1176)>>2)]=0;
 label=588;break;
 case 588: 
 var $445=$i1172;
 var $add1178=((($445)+(1))|0);
 $i1172=$add1178;
 label=586;break;
 case 589: 
 $i1180=0;
 label=590;break;
 case 590: 
 var $446=$i1180;
 var $cmp1182=($446|0)<2;
 if($cmp1182){label=591;break;}else{label=593;break;}
 case 591: 
 var $447=$i1180;
 var $fRec147=(($this1+527112)|0);
 var $arrayidx1184=(($fRec147+($447<<2))|0);
 HEAPF32[(($arrayidx1184)>>2)]=0;
 label=592;break;
 case 592: 
 var $448=$i1180;
 var $add1186=((($448)+(1))|0);
 $i1180=$add1186;
 label=590;break;
 case 593: 
 $i1188=0;
 label=594;break;
 case 594: 
 var $449=$i1188;
 var $cmp1190=($449|0)<3;
 if($cmp1190){label=595;break;}else{label=597;break;}
 case 595: 
 var $450=$i1188;
 var $fRec146=(($this1+527100)|0);
 var $arrayidx1192=(($fRec146+($450<<2))|0);
 HEAPF32[(($arrayidx1192)>>2)]=0;
 label=596;break;
 case 596: 
 var $451=$i1188;
 var $add1194=((($451)+(1))|0);
 $i1188=$add1194;
 label=594;break;
 case 597: 
 $i1196=0;
 label=598;break;
 case 598: 
 var $452=$i1196;
 var $cmp1198=($452|0)<2;
 if($cmp1198){label=599;break;}else{label=601;break;}
 case 599: 
 var $453=$i1196;
 var $fVec19=(($this1+527092)|0);
 var $arrayidx1200=(($fVec19+($453<<2))|0);
 HEAPF32[(($arrayidx1200)>>2)]=0;
 label=600;break;
 case 600: 
 var $454=$i1196;
 var $add1202=((($454)+(1))|0);
 $i1196=$add1202;
 label=598;break;
 case 601: 
 $i1204=0;
 label=602;break;
 case 602: 
 var $455=$i1204;
 var $cmp1206=($455|0)<2;
 if($cmp1206){label=603;break;}else{label=605;break;}
 case 603: 
 var $456=$i1204;
 var $fRec145=(($this1+527084)|0);
 var $arrayidx1208=(($fRec145+($456<<2))|0);
 HEAPF32[(($arrayidx1208)>>2)]=0;
 label=604;break;
 case 604: 
 var $457=$i1204;
 var $add1210=((($457)+(1))|0);
 $i1204=$add1210;
 label=602;break;
 case 605: 
 $i1212=0;
 label=606;break;
 case 606: 
 var $458=$i1212;
 var $cmp1214=($458|0)<3;
 if($cmp1214){label=607;break;}else{label=609;break;}
 case 607: 
 var $459=$i1212;
 var $fRec144=(($this1+527072)|0);
 var $arrayidx1216=(($fRec144+($459<<2))|0);
 HEAPF32[(($arrayidx1216)>>2)]=0;
 label=608;break;
 case 608: 
 var $460=$i1212;
 var $add1218=((($460)+(1))|0);
 $i1212=$add1218;
 label=606;break;
 case 609: 
 $i1220=0;
 label=610;break;
 case 610: 
 var $461=$i1220;
 var $cmp1222=($461|0)<2;
 if($cmp1222){label=611;break;}else{label=613;break;}
 case 611: 
 var $462=$i1220;
 var $fRec149=(($this1+527064)|0);
 var $arrayidx1224=(($fRec149+($462<<2))|0);
 HEAPF32[(($arrayidx1224)>>2)]=0;
 label=612;break;
 case 612: 
 var $463=$i1220;
 var $add1226=((($463)+(1))|0);
 $i1220=$add1226;
 label=610;break;
 case 613: 
 $i1228=0;
 label=614;break;
 case 614: 
 var $464=$i1228;
 var $cmp1230=($464|0)<3;
 if($cmp1230){label=615;break;}else{label=617;break;}
 case 615: 
 var $465=$i1228;
 var $fRec148=(($this1+527052)|0);
 var $arrayidx1232=(($fRec148+($465<<2))|0);
 HEAPF32[(($arrayidx1232)>>2)]=0;
 label=616;break;
 case 616: 
 var $466=$i1228;
 var $add1234=((($466)+(1))|0);
 $i1228=$add1234;
 label=614;break;
 case 617: 
 $i1236=0;
 label=618;break;
 case 618: 
 var $467=$i1236;
 var $cmp1238=($467|0)<2;
 if($cmp1238){label=619;break;}else{label=621;break;}
 case 619: 
 var $468=$i1236;
 var $fRec154=(($this1+527044)|0);
 var $arrayidx1240=(($fRec154+($468<<2))|0);
 HEAPF32[(($arrayidx1240)>>2)]=0;
 label=620;break;
 case 620: 
 var $469=$i1236;
 var $add1242=((($469)+(1))|0);
 $i1236=$add1242;
 label=618;break;
 case 621: 
 $i1244=0;
 label=622;break;
 case 622: 
 var $470=$i1244;
 var $cmp1246=($470|0)<3;
 if($cmp1246){label=623;break;}else{label=625;break;}
 case 623: 
 var $471=$i1244;
 var $fRec153=(($this1+527032)|0);
 var $arrayidx1248=(($fRec153+($471<<2))|0);
 HEAPF32[(($arrayidx1248)>>2)]=0;
 label=624;break;
 case 624: 
 var $472=$i1244;
 var $add1250=((($472)+(1))|0);
 $i1244=$add1250;
 label=622;break;
 case 625: 
 $i1252=0;
 label=626;break;
 case 626: 
 var $473=$i1252;
 var $cmp1254=($473|0)<3;
 if($cmp1254){label=627;break;}else{label=629;break;}
 case 627: 
 var $474=$i1252;
 var $fRec152=(($this1+527020)|0);
 var $arrayidx1256=(($fRec152+($474<<2))|0);
 HEAPF32[(($arrayidx1256)>>2)]=0;
 label=628;break;
 case 628: 
 var $475=$i1252;
 var $add1258=((($475)+(1))|0);
 $i1252=$add1258;
 label=626;break;
 case 629: 
 $i1260=0;
 label=630;break;
 case 630: 
 var $476=$i1260;
 var $cmp1262=($476|0)<3;
 if($cmp1262){label=631;break;}else{label=633;break;}
 case 631: 
 var $477=$i1260;
 var $fRec151=(($this1+527008)|0);
 var $arrayidx1264=(($fRec151+($477<<2))|0);
 HEAPF32[(($arrayidx1264)>>2)]=0;
 label=632;break;
 case 632: 
 var $478=$i1260;
 var $add1266=((($478)+(1))|0);
 $i1260=$add1266;
 label=630;break;
 case 633: 
 $i1268=0;
 label=634;break;
 case 634: 
 var $479=$i1268;
 var $cmp1270=($479|0)<3;
 if($cmp1270){label=635;break;}else{label=637;break;}
 case 635: 
 var $480=$i1268;
 var $fRec150=(($this1+526996)|0);
 var $arrayidx1272=(($fRec150+($480<<2))|0);
 HEAPF32[(($arrayidx1272)>>2)]=0;
 label=636;break;
 case 636: 
 var $481=$i1268;
 var $add1274=((($481)+(1))|0);
 $i1268=$add1274;
 label=634;break;
 case 637: 
 $i1276=0;
 label=638;break;
 case 638: 
 var $482=$i1276;
 var $cmp1278=($482|0)<2;
 if($cmp1278){label=639;break;}else{label=641;break;}
 case 639: 
 var $483=$i1276;
 var $fRec160=(($this1+526988)|0);
 var $arrayidx1280=(($fRec160+($483<<2))|0);
 HEAPF32[(($arrayidx1280)>>2)]=0;
 label=640;break;
 case 640: 
 var $484=$i1276;
 var $add1282=((($484)+(1))|0);
 $i1276=$add1282;
 label=638;break;
 case 641: 
 $i1284=0;
 label=642;break;
 case 642: 
 var $485=$i1284;
 var $cmp1286=($485|0)<3;
 if($cmp1286){label=643;break;}else{label=645;break;}
 case 643: 
 var $486=$i1284;
 var $fRec159=(($this1+526976)|0);
 var $arrayidx1288=(($fRec159+($486<<2))|0);
 HEAPF32[(($arrayidx1288)>>2)]=0;
 label=644;break;
 case 644: 
 var $487=$i1284;
 var $add1290=((($487)+(1))|0);
 $i1284=$add1290;
 label=642;break;
 case 645: 
 $i1292=0;
 label=646;break;
 case 646: 
 var $488=$i1292;
 var $cmp1294=($488|0)<2;
 if($cmp1294){label=647;break;}else{label=649;break;}
 case 647: 
 var $489=$i1292;
 var $fVec20=(($this1+526968)|0);
 var $arrayidx1296=(($fVec20+($489<<2))|0);
 HEAPF32[(($arrayidx1296)>>2)]=0;
 label=648;break;
 case 648: 
 var $490=$i1292;
 var $add1298=((($490)+(1))|0);
 $i1292=$add1298;
 label=646;break;
 case 649: 
 $i1300=0;
 label=650;break;
 case 650: 
 var $491=$i1300;
 var $cmp1302=($491|0)<2;
 if($cmp1302){label=651;break;}else{label=653;break;}
 case 651: 
 var $492=$i1300;
 var $fRec158=(($this1+526960)|0);
 var $arrayidx1304=(($fRec158+($492<<2))|0);
 HEAPF32[(($arrayidx1304)>>2)]=0;
 label=652;break;
 case 652: 
 var $493=$i1300;
 var $add1306=((($493)+(1))|0);
 $i1300=$add1306;
 label=650;break;
 case 653: 
 $i1308=0;
 label=654;break;
 case 654: 
 var $494=$i1308;
 var $cmp1310=($494|0)<3;
 if($cmp1310){label=655;break;}else{label=657;break;}
 case 655: 
 var $495=$i1308;
 var $fRec157=(($this1+526948)|0);
 var $arrayidx1312=(($fRec157+($495<<2))|0);
 HEAPF32[(($arrayidx1312)>>2)]=0;
 label=656;break;
 case 656: 
 var $496=$i1308;
 var $add1314=((($496)+(1))|0);
 $i1308=$add1314;
 label=654;break;
 case 657: 
 $i1316=0;
 label=658;break;
 case 658: 
 var $497=$i1316;
 var $cmp1318=($497|0)<3;
 if($cmp1318){label=659;break;}else{label=661;break;}
 case 659: 
 var $498=$i1316;
 var $fRec156=(($this1+526936)|0);
 var $arrayidx1320=(($fRec156+($498<<2))|0);
 HEAPF32[(($arrayidx1320)>>2)]=0;
 label=660;break;
 case 660: 
 var $499=$i1316;
 var $add1322=((($499)+(1))|0);
 $i1316=$add1322;
 label=658;break;
 case 661: 
 $i1324=0;
 label=662;break;
 case 662: 
 var $500=$i1324;
 var $cmp1326=($500|0)<3;
 if($cmp1326){label=663;break;}else{label=665;break;}
 case 663: 
 var $501=$i1324;
 var $fRec155=(($this1+526924)|0);
 var $arrayidx1328=(($fRec155+($501<<2))|0);
 HEAPF32[(($arrayidx1328)>>2)]=0;
 label=664;break;
 case 664: 
 var $502=$i1324;
 var $add1330=((($502)+(1))|0);
 $i1324=$add1330;
 label=662;break;
 case 665: 
 $i1332=0;
 label=666;break;
 case 666: 
 var $503=$i1332;
 var $cmp1334=($503|0)<2;
 if($cmp1334){label=667;break;}else{label=669;break;}
 case 667: 
 var $504=$i1332;
 var $fRec165=(($this1+526916)|0);
 var $arrayidx1336=(($fRec165+($504<<2))|0);
 HEAPF32[(($arrayidx1336)>>2)]=0;
 label=668;break;
 case 668: 
 var $505=$i1332;
 var $add1338=((($505)+(1))|0);
 $i1332=$add1338;
 label=666;break;
 case 669: 
 $i1340=0;
 label=670;break;
 case 670: 
 var $506=$i1340;
 var $cmp1342=($506|0)<3;
 if($cmp1342){label=671;break;}else{label=673;break;}
 case 671: 
 var $507=$i1340;
 var $fRec164=(($this1+526904)|0);
 var $arrayidx1344=(($fRec164+($507<<2))|0);
 HEAPF32[(($arrayidx1344)>>2)]=0;
 label=672;break;
 case 672: 
 var $508=$i1340;
 var $add1346=((($508)+(1))|0);
 $i1340=$add1346;
 label=670;break;
 case 673: 
 $i1348=0;
 label=674;break;
 case 674: 
 var $509=$i1348;
 var $cmp1350=($509|0)<2;
 if($cmp1350){label=675;break;}else{label=677;break;}
 case 675: 
 var $510=$i1348;
 var $fVec21=(($this1+526896)|0);
 var $arrayidx1352=(($fVec21+($510<<2))|0);
 HEAPF32[(($arrayidx1352)>>2)]=0;
 label=676;break;
 case 676: 
 var $511=$i1348;
 var $add1354=((($511)+(1))|0);
 $i1348=$add1354;
 label=674;break;
 case 677: 
 $i1356=0;
 label=678;break;
 case 678: 
 var $512=$i1356;
 var $cmp1358=($512|0)<2;
 if($cmp1358){label=679;break;}else{label=681;break;}
 case 679: 
 var $513=$i1356;
 var $fRec163=(($this1+526888)|0);
 var $arrayidx1360=(($fRec163+($513<<2))|0);
 HEAPF32[(($arrayidx1360)>>2)]=0;
 label=680;break;
 case 680: 
 var $514=$i1356;
 var $add1362=((($514)+(1))|0);
 $i1356=$add1362;
 label=678;break;
 case 681: 
 $i1364=0;
 label=682;break;
 case 682: 
 var $515=$i1364;
 var $cmp1366=($515|0)<3;
 if($cmp1366){label=683;break;}else{label=685;break;}
 case 683: 
 var $516=$i1364;
 var $fRec162=(($this1+526876)|0);
 var $arrayidx1368=(($fRec162+($516<<2))|0);
 HEAPF32[(($arrayidx1368)>>2)]=0;
 label=684;break;
 case 684: 
 var $517=$i1364;
 var $add1370=((($517)+(1))|0);
 $i1364=$add1370;
 label=682;break;
 case 685: 
 $i1372=0;
 label=686;break;
 case 686: 
 var $518=$i1372;
 var $cmp1374=($518|0)<3;
 if($cmp1374){label=687;break;}else{label=689;break;}
 case 687: 
 var $519=$i1372;
 var $fRec161=(($this1+526864)|0);
 var $arrayidx1376=(($fRec161+($519<<2))|0);
 HEAPF32[(($arrayidx1376)>>2)]=0;
 label=688;break;
 case 688: 
 var $520=$i1372;
 var $add1378=((($520)+(1))|0);
 $i1372=$add1378;
 label=686;break;
 case 689: 
 $i1380=0;
 label=690;break;
 case 690: 
 var $521=$i1380;
 var $cmp1382=($521|0)<2;
 if($cmp1382){label=691;break;}else{label=693;break;}
 case 691: 
 var $522=$i1380;
 var $fRec169=(($this1+526856)|0);
 var $arrayidx1384=(($fRec169+($522<<2))|0);
 HEAPF32[(($arrayidx1384)>>2)]=0;
 label=692;break;
 case 692: 
 var $523=$i1380;
 var $add1386=((($523)+(1))|0);
 $i1380=$add1386;
 label=690;break;
 case 693: 
 $i1388=0;
 label=694;break;
 case 694: 
 var $524=$i1388;
 var $cmp1390=($524|0)<3;
 if($cmp1390){label=695;break;}else{label=697;break;}
 case 695: 
 var $525=$i1388;
 var $fRec168=(($this1+526844)|0);
 var $arrayidx1392=(($fRec168+($525<<2))|0);
 HEAPF32[(($arrayidx1392)>>2)]=0;
 label=696;break;
 case 696: 
 var $526=$i1388;
 var $add1394=((($526)+(1))|0);
 $i1388=$add1394;
 label=694;break;
 case 697: 
 $i1396=0;
 label=698;break;
 case 698: 
 var $527=$i1396;
 var $cmp1398=($527|0)<2;
 if($cmp1398){label=699;break;}else{label=701;break;}
 case 699: 
 var $528=$i1396;
 var $fVec22=(($this1+526836)|0);
 var $arrayidx1400=(($fVec22+($528<<2))|0);
 HEAPF32[(($arrayidx1400)>>2)]=0;
 label=700;break;
 case 700: 
 var $529=$i1396;
 var $add1402=((($529)+(1))|0);
 $i1396=$add1402;
 label=698;break;
 case 701: 
 $i1404=0;
 label=702;break;
 case 702: 
 var $530=$i1404;
 var $cmp1406=($530|0)<2;
 if($cmp1406){label=703;break;}else{label=705;break;}
 case 703: 
 var $531=$i1404;
 var $fRec167=(($this1+526828)|0);
 var $arrayidx1408=(($fRec167+($531<<2))|0);
 HEAPF32[(($arrayidx1408)>>2)]=0;
 label=704;break;
 case 704: 
 var $532=$i1404;
 var $add1410=((($532)+(1))|0);
 $i1404=$add1410;
 label=702;break;
 case 705: 
 $i1412=0;
 label=706;break;
 case 706: 
 var $533=$i1412;
 var $cmp1414=($533|0)<3;
 if($cmp1414){label=707;break;}else{label=709;break;}
 case 707: 
 var $534=$i1412;
 var $fRec166=(($this1+526816)|0);
 var $arrayidx1416=(($fRec166+($534<<2))|0);
 HEAPF32[(($arrayidx1416)>>2)]=0;
 label=708;break;
 case 708: 
 var $535=$i1412;
 var $add1418=((($535)+(1))|0);
 $i1412=$add1418;
 label=706;break;
 case 709: 
 $i1420=0;
 label=710;break;
 case 710: 
 var $536=$i1420;
 var $cmp1422=($536|0)<2;
 if($cmp1422){label=711;break;}else{label=713;break;}
 case 711: 
 var $537=$i1420;
 var $fRec171=(($this1+526808)|0);
 var $arrayidx1424=(($fRec171+($537<<2))|0);
 HEAPF32[(($arrayidx1424)>>2)]=0;
 label=712;break;
 case 712: 
 var $538=$i1420;
 var $add1426=((($538)+(1))|0);
 $i1420=$add1426;
 label=710;break;
 case 713: 
 $i1428=0;
 label=714;break;
 case 714: 
 var $539=$i1428;
 var $cmp1430=($539|0)<3;
 if($cmp1430){label=715;break;}else{label=717;break;}
 case 715: 
 var $540=$i1428;
 var $fRec170=(($this1+526796)|0);
 var $arrayidx1432=(($fRec170+($540<<2))|0);
 HEAPF32[(($arrayidx1432)>>2)]=0;
 label=716;break;
 case 716: 
 var $541=$i1428;
 var $add1434=((($541)+(1))|0);
 $i1428=$add1434;
 label=714;break;
 case 717: 
 $i1436=0;
 label=718;break;
 case 718: 
 var $542=$i1436;
 var $cmp1438=($542|0)<2;
 if($cmp1438){label=719;break;}else{label=721;break;}
 case 719: 
 var $543=$i1436;
 var $fRec176=(($this1+526788)|0);
 var $arrayidx1440=(($fRec176+($543<<2))|0);
 HEAPF32[(($arrayidx1440)>>2)]=0;
 label=720;break;
 case 720: 
 var $544=$i1436;
 var $add1442=((($544)+(1))|0);
 $i1436=$add1442;
 label=718;break;
 case 721: 
 $i1444=0;
 label=722;break;
 case 722: 
 var $545=$i1444;
 var $cmp1446=($545|0)<3;
 if($cmp1446){label=723;break;}else{label=725;break;}
 case 723: 
 var $546=$i1444;
 var $fRec175=(($this1+526776)|0);
 var $arrayidx1448=(($fRec175+($546<<2))|0);
 HEAPF32[(($arrayidx1448)>>2)]=0;
 label=724;break;
 case 724: 
 var $547=$i1444;
 var $add1450=((($547)+(1))|0);
 $i1444=$add1450;
 label=722;break;
 case 725: 
 $i1452=0;
 label=726;break;
 case 726: 
 var $548=$i1452;
 var $cmp1454=($548|0)<3;
 if($cmp1454){label=727;break;}else{label=729;break;}
 case 727: 
 var $549=$i1452;
 var $fRec174=(($this1+526764)|0);
 var $arrayidx1456=(($fRec174+($549<<2))|0);
 HEAPF32[(($arrayidx1456)>>2)]=0;
 label=728;break;
 case 728: 
 var $550=$i1452;
 var $add1458=((($550)+(1))|0);
 $i1452=$add1458;
 label=726;break;
 case 729: 
 $i1460=0;
 label=730;break;
 case 730: 
 var $551=$i1460;
 var $cmp1462=($551|0)<3;
 if($cmp1462){label=731;break;}else{label=733;break;}
 case 731: 
 var $552=$i1460;
 var $fRec173=(($this1+526752)|0);
 var $arrayidx1464=(($fRec173+($552<<2))|0);
 HEAPF32[(($arrayidx1464)>>2)]=0;
 label=732;break;
 case 732: 
 var $553=$i1460;
 var $add1466=((($553)+(1))|0);
 $i1460=$add1466;
 label=730;break;
 case 733: 
 $i1468=0;
 label=734;break;
 case 734: 
 var $554=$i1468;
 var $cmp1470=($554|0)<3;
 if($cmp1470){label=735;break;}else{label=737;break;}
 case 735: 
 var $555=$i1468;
 var $fRec172=(($this1+526740)|0);
 var $arrayidx1472=(($fRec172+($555<<2))|0);
 HEAPF32[(($arrayidx1472)>>2)]=0;
 label=736;break;
 case 736: 
 var $556=$i1468;
 var $add1474=((($556)+(1))|0);
 $i1468=$add1474;
 label=734;break;
 case 737: 
 $i1476=0;
 label=738;break;
 case 738: 
 var $557=$i1476;
 var $cmp1478=($557|0)<2;
 if($cmp1478){label=739;break;}else{label=741;break;}
 case 739: 
 var $558=$i1476;
 var $fRec182=(($this1+526732)|0);
 var $arrayidx1480=(($fRec182+($558<<2))|0);
 HEAPF32[(($arrayidx1480)>>2)]=0;
 label=740;break;
 case 740: 
 var $559=$i1476;
 var $add1482=((($559)+(1))|0);
 $i1476=$add1482;
 label=738;break;
 case 741: 
 $i1484=0;
 label=742;break;
 case 742: 
 var $560=$i1484;
 var $cmp1486=($560|0)<3;
 if($cmp1486){label=743;break;}else{label=745;break;}
 case 743: 
 var $561=$i1484;
 var $fRec181=(($this1+526720)|0);
 var $arrayidx1488=(($fRec181+($561<<2))|0);
 HEAPF32[(($arrayidx1488)>>2)]=0;
 label=744;break;
 case 744: 
 var $562=$i1484;
 var $add1490=((($562)+(1))|0);
 $i1484=$add1490;
 label=742;break;
 case 745: 
 $i1492=0;
 label=746;break;
 case 746: 
 var $563=$i1492;
 var $cmp1494=($563|0)<2;
 if($cmp1494){label=747;break;}else{label=749;break;}
 case 747: 
 var $564=$i1492;
 var $fVec23=(($this1+526712)|0);
 var $arrayidx1496=(($fVec23+($564<<2))|0);
 HEAPF32[(($arrayidx1496)>>2)]=0;
 label=748;break;
 case 748: 
 var $565=$i1492;
 var $add1498=((($565)+(1))|0);
 $i1492=$add1498;
 label=746;break;
 case 749: 
 $i1500=0;
 label=750;break;
 case 750: 
 var $566=$i1500;
 var $cmp1502=($566|0)<2;
 if($cmp1502){label=751;break;}else{label=753;break;}
 case 751: 
 var $567=$i1500;
 var $fRec180=(($this1+526704)|0);
 var $arrayidx1504=(($fRec180+($567<<2))|0);
 HEAPF32[(($arrayidx1504)>>2)]=0;
 label=752;break;
 case 752: 
 var $568=$i1500;
 var $add1506=((($568)+(1))|0);
 $i1500=$add1506;
 label=750;break;
 case 753: 
 $i1508=0;
 label=754;break;
 case 754: 
 var $569=$i1508;
 var $cmp1510=($569|0)<3;
 if($cmp1510){label=755;break;}else{label=757;break;}
 case 755: 
 var $570=$i1508;
 var $fRec179=(($this1+526692)|0);
 var $arrayidx1512=(($fRec179+($570<<2))|0);
 HEAPF32[(($arrayidx1512)>>2)]=0;
 label=756;break;
 case 756: 
 var $571=$i1508;
 var $add1514=((($571)+(1))|0);
 $i1508=$add1514;
 label=754;break;
 case 757: 
 $i1516=0;
 label=758;break;
 case 758: 
 var $572=$i1516;
 var $cmp1518=($572|0)<3;
 if($cmp1518){label=759;break;}else{label=761;break;}
 case 759: 
 var $573=$i1516;
 var $fRec178=(($this1+526680)|0);
 var $arrayidx1520=(($fRec178+($573<<2))|0);
 HEAPF32[(($arrayidx1520)>>2)]=0;
 label=760;break;
 case 760: 
 var $574=$i1516;
 var $add1522=((($574)+(1))|0);
 $i1516=$add1522;
 label=758;break;
 case 761: 
 $i1524=0;
 label=762;break;
 case 762: 
 var $575=$i1524;
 var $cmp1526=($575|0)<3;
 if($cmp1526){label=763;break;}else{label=765;break;}
 case 763: 
 var $576=$i1524;
 var $fRec177=(($this1+526668)|0);
 var $arrayidx1528=(($fRec177+($576<<2))|0);
 HEAPF32[(($arrayidx1528)>>2)]=0;
 label=764;break;
 case 764: 
 var $577=$i1524;
 var $add1530=((($577)+(1))|0);
 $i1524=$add1530;
 label=762;break;
 case 765: 
 $i1532=0;
 label=766;break;
 case 766: 
 var $578=$i1532;
 var $cmp1534=($578|0)<2;
 if($cmp1534){label=767;break;}else{label=769;break;}
 case 767: 
 var $579=$i1532;
 var $fRec187=(($this1+526660)|0);
 var $arrayidx1536=(($fRec187+($579<<2))|0);
 HEAPF32[(($arrayidx1536)>>2)]=0;
 label=768;break;
 case 768: 
 var $580=$i1532;
 var $add1538=((($580)+(1))|0);
 $i1532=$add1538;
 label=766;break;
 case 769: 
 $i1540=0;
 label=770;break;
 case 770: 
 var $581=$i1540;
 var $cmp1542=($581|0)<3;
 if($cmp1542){label=771;break;}else{label=773;break;}
 case 771: 
 var $582=$i1540;
 var $fRec186=(($this1+526648)|0);
 var $arrayidx1544=(($fRec186+($582<<2))|0);
 HEAPF32[(($arrayidx1544)>>2)]=0;
 label=772;break;
 case 772: 
 var $583=$i1540;
 var $add1546=((($583)+(1))|0);
 $i1540=$add1546;
 label=770;break;
 case 773: 
 $i1548=0;
 label=774;break;
 case 774: 
 var $584=$i1548;
 var $cmp1550=($584|0)<2;
 if($cmp1550){label=775;break;}else{label=777;break;}
 case 775: 
 var $585=$i1548;
 var $fVec24=(($this1+526640)|0);
 var $arrayidx1552=(($fVec24+($585<<2))|0);
 HEAPF32[(($arrayidx1552)>>2)]=0;
 label=776;break;
 case 776: 
 var $586=$i1548;
 var $add1554=((($586)+(1))|0);
 $i1548=$add1554;
 label=774;break;
 case 777: 
 $i1556=0;
 label=778;break;
 case 778: 
 var $587=$i1556;
 var $cmp1558=($587|0)<2;
 if($cmp1558){label=779;break;}else{label=781;break;}
 case 779: 
 var $588=$i1556;
 var $fRec185=(($this1+526632)|0);
 var $arrayidx1560=(($fRec185+($588<<2))|0);
 HEAPF32[(($arrayidx1560)>>2)]=0;
 label=780;break;
 case 780: 
 var $589=$i1556;
 var $add1562=((($589)+(1))|0);
 $i1556=$add1562;
 label=778;break;
 case 781: 
 $i1564=0;
 label=782;break;
 case 782: 
 var $590=$i1564;
 var $cmp1566=($590|0)<3;
 if($cmp1566){label=783;break;}else{label=785;break;}
 case 783: 
 var $591=$i1564;
 var $fRec184=(($this1+526620)|0);
 var $arrayidx1568=(($fRec184+($591<<2))|0);
 HEAPF32[(($arrayidx1568)>>2)]=0;
 label=784;break;
 case 784: 
 var $592=$i1564;
 var $add1570=((($592)+(1))|0);
 $i1564=$add1570;
 label=782;break;
 case 785: 
 $i1572=0;
 label=786;break;
 case 786: 
 var $593=$i1572;
 var $cmp1574=($593|0)<3;
 if($cmp1574){label=787;break;}else{label=789;break;}
 case 787: 
 var $594=$i1572;
 var $fRec183=(($this1+526608)|0);
 var $arrayidx1576=(($fRec183+($594<<2))|0);
 HEAPF32[(($arrayidx1576)>>2)]=0;
 label=788;break;
 case 788: 
 var $595=$i1572;
 var $add1578=((($595)+(1))|0);
 $i1572=$add1578;
 label=786;break;
 case 789: 
 $i1580=0;
 label=790;break;
 case 790: 
 var $596=$i1580;
 var $cmp1582=($596|0)<2;
 if($cmp1582){label=791;break;}else{label=793;break;}
 case 791: 
 var $597=$i1580;
 var $fRec191=(($this1+526600)|0);
 var $arrayidx1584=(($fRec191+($597<<2))|0);
 HEAPF32[(($arrayidx1584)>>2)]=0;
 label=792;break;
 case 792: 
 var $598=$i1580;
 var $add1586=((($598)+(1))|0);
 $i1580=$add1586;
 label=790;break;
 case 793: 
 $i1588=0;
 label=794;break;
 case 794: 
 var $599=$i1588;
 var $cmp1590=($599|0)<3;
 if($cmp1590){label=795;break;}else{label=797;break;}
 case 795: 
 var $600=$i1588;
 var $fRec190=(($this1+526588)|0);
 var $arrayidx1592=(($fRec190+($600<<2))|0);
 HEAPF32[(($arrayidx1592)>>2)]=0;
 label=796;break;
 case 796: 
 var $601=$i1588;
 var $add1594=((($601)+(1))|0);
 $i1588=$add1594;
 label=794;break;
 case 797: 
 $i1596=0;
 label=798;break;
 case 798: 
 var $602=$i1596;
 var $cmp1598=($602|0)<2;
 if($cmp1598){label=799;break;}else{label=801;break;}
 case 799: 
 var $603=$i1596;
 var $fVec25=(($this1+526580)|0);
 var $arrayidx1600=(($fVec25+($603<<2))|0);
 HEAPF32[(($arrayidx1600)>>2)]=0;
 label=800;break;
 case 800: 
 var $604=$i1596;
 var $add1602=((($604)+(1))|0);
 $i1596=$add1602;
 label=798;break;
 case 801: 
 $i1604=0;
 label=802;break;
 case 802: 
 var $605=$i1604;
 var $cmp1606=($605|0)<2;
 if($cmp1606){label=803;break;}else{label=805;break;}
 case 803: 
 var $606=$i1604;
 var $fRec189=(($this1+526572)|0);
 var $arrayidx1608=(($fRec189+($606<<2))|0);
 HEAPF32[(($arrayidx1608)>>2)]=0;
 label=804;break;
 case 804: 
 var $607=$i1604;
 var $add1610=((($607)+(1))|0);
 $i1604=$add1610;
 label=802;break;
 case 805: 
 $i1612=0;
 label=806;break;
 case 806: 
 var $608=$i1612;
 var $cmp1614=($608|0)<3;
 if($cmp1614){label=807;break;}else{label=809;break;}
 case 807: 
 var $609=$i1612;
 var $fRec188=(($this1+526560)|0);
 var $arrayidx1616=(($fRec188+($609<<2))|0);
 HEAPF32[(($arrayidx1616)>>2)]=0;
 label=808;break;
 case 808: 
 var $610=$i1612;
 var $add1618=((($610)+(1))|0);
 $i1612=$add1618;
 label=806;break;
 case 809: 
 $i1620=0;
 label=810;break;
 case 810: 
 var $611=$i1620;
 var $cmp1622=($611|0)<2;
 if($cmp1622){label=811;break;}else{label=813;break;}
 case 811: 
 var $612=$i1620;
 var $fRec193=(($this1+526552)|0);
 var $arrayidx1624=(($fRec193+($612<<2))|0);
 HEAPF32[(($arrayidx1624)>>2)]=0;
 label=812;break;
 case 812: 
 var $613=$i1620;
 var $add1626=((($613)+(1))|0);
 $i1620=$add1626;
 label=810;break;
 case 813: 
 $i1628=0;
 label=814;break;
 case 814: 
 var $614=$i1628;
 var $cmp1630=($614|0)<3;
 if($cmp1630){label=815;break;}else{label=817;break;}
 case 815: 
 var $615=$i1628;
 var $fRec192=(($this1+526540)|0);
 var $arrayidx1632=(($fRec192+($615<<2))|0);
 HEAPF32[(($arrayidx1632)>>2)]=0;
 label=816;break;
 case 816: 
 var $616=$i1628;
 var $add1634=((($616)+(1))|0);
 $i1628=$add1634;
 label=814;break;
 case 817: 
 $i1636=0;
 label=818;break;
 case 818: 
 var $617=$i1636;
 var $cmp1638=($617|0)<2;
 if($cmp1638){label=819;break;}else{label=821;break;}
 case 819: 
 var $618=$i1636;
 var $fRec198=(($this1+526532)|0);
 var $arrayidx1640=(($fRec198+($618<<2))|0);
 HEAPF32[(($arrayidx1640)>>2)]=0;
 label=820;break;
 case 820: 
 var $619=$i1636;
 var $add1642=((($619)+(1))|0);
 $i1636=$add1642;
 label=818;break;
 case 821: 
 $i1644=0;
 label=822;break;
 case 822: 
 var $620=$i1644;
 var $cmp1646=($620|0)<3;
 if($cmp1646){label=823;break;}else{label=825;break;}
 case 823: 
 var $621=$i1644;
 var $fRec197=(($this1+526520)|0);
 var $arrayidx1648=(($fRec197+($621<<2))|0);
 HEAPF32[(($arrayidx1648)>>2)]=0;
 label=824;break;
 case 824: 
 var $622=$i1644;
 var $add1650=((($622)+(1))|0);
 $i1644=$add1650;
 label=822;break;
 case 825: 
 $i1652=0;
 label=826;break;
 case 826: 
 var $623=$i1652;
 var $cmp1654=($623|0)<3;
 if($cmp1654){label=827;break;}else{label=829;break;}
 case 827: 
 var $624=$i1652;
 var $fRec196=(($this1+526508)|0);
 var $arrayidx1656=(($fRec196+($624<<2))|0);
 HEAPF32[(($arrayidx1656)>>2)]=0;
 label=828;break;
 case 828: 
 var $625=$i1652;
 var $add1658=((($625)+(1))|0);
 $i1652=$add1658;
 label=826;break;
 case 829: 
 $i1660=0;
 label=830;break;
 case 830: 
 var $626=$i1660;
 var $cmp1662=($626|0)<3;
 if($cmp1662){label=831;break;}else{label=833;break;}
 case 831: 
 var $627=$i1660;
 var $fRec195=(($this1+526496)|0);
 var $arrayidx1664=(($fRec195+($627<<2))|0);
 HEAPF32[(($arrayidx1664)>>2)]=0;
 label=832;break;
 case 832: 
 var $628=$i1660;
 var $add1666=((($628)+(1))|0);
 $i1660=$add1666;
 label=830;break;
 case 833: 
 $i1668=0;
 label=834;break;
 case 834: 
 var $629=$i1668;
 var $cmp1670=($629|0)<3;
 if($cmp1670){label=835;break;}else{label=837;break;}
 case 835: 
 var $630=$i1668;
 var $fRec194=(($this1+526484)|0);
 var $arrayidx1672=(($fRec194+($630<<2))|0);
 HEAPF32[(($arrayidx1672)>>2)]=0;
 label=836;break;
 case 836: 
 var $631=$i1668;
 var $add1674=((($631)+(1))|0);
 $i1668=$add1674;
 label=834;break;
 case 837: 
 $i1676=0;
 label=838;break;
 case 838: 
 var $632=$i1676;
 var $cmp1678=($632|0)<2;
 if($cmp1678){label=839;break;}else{label=841;break;}
 case 839: 
 var $633=$i1676;
 var $fRec204=(($this1+526476)|0);
 var $arrayidx1680=(($fRec204+($633<<2))|0);
 HEAPF32[(($arrayidx1680)>>2)]=0;
 label=840;break;
 case 840: 
 var $634=$i1676;
 var $add1682=((($634)+(1))|0);
 $i1676=$add1682;
 label=838;break;
 case 841: 
 $i1684=0;
 label=842;break;
 case 842: 
 var $635=$i1684;
 var $cmp1686=($635|0)<3;
 if($cmp1686){label=843;break;}else{label=845;break;}
 case 843: 
 var $636=$i1684;
 var $fRec203=(($this1+526464)|0);
 var $arrayidx1688=(($fRec203+($636<<2))|0);
 HEAPF32[(($arrayidx1688)>>2)]=0;
 label=844;break;
 case 844: 
 var $637=$i1684;
 var $add1690=((($637)+(1))|0);
 $i1684=$add1690;
 label=842;break;
 case 845: 
 $i1692=0;
 label=846;break;
 case 846: 
 var $638=$i1692;
 var $cmp1694=($638|0)<2;
 if($cmp1694){label=847;break;}else{label=849;break;}
 case 847: 
 var $639=$i1692;
 var $fVec26=(($this1+526456)|0);
 var $arrayidx1696=(($fVec26+($639<<2))|0);
 HEAPF32[(($arrayidx1696)>>2)]=0;
 label=848;break;
 case 848: 
 var $640=$i1692;
 var $add1698=((($640)+(1))|0);
 $i1692=$add1698;
 label=846;break;
 case 849: 
 $i1700=0;
 label=850;break;
 case 850: 
 var $641=$i1700;
 var $cmp1702=($641|0)<2;
 if($cmp1702){label=851;break;}else{label=853;break;}
 case 851: 
 var $642=$i1700;
 var $fRec202=(($this1+526448)|0);
 var $arrayidx1704=(($fRec202+($642<<2))|0);
 HEAPF32[(($arrayidx1704)>>2)]=0;
 label=852;break;
 case 852: 
 var $643=$i1700;
 var $add1706=((($643)+(1))|0);
 $i1700=$add1706;
 label=850;break;
 case 853: 
 $i1708=0;
 label=854;break;
 case 854: 
 var $644=$i1708;
 var $cmp1710=($644|0)<3;
 if($cmp1710){label=855;break;}else{label=857;break;}
 case 855: 
 var $645=$i1708;
 var $fRec201=(($this1+526436)|0);
 var $arrayidx1712=(($fRec201+($645<<2))|0);
 HEAPF32[(($arrayidx1712)>>2)]=0;
 label=856;break;
 case 856: 
 var $646=$i1708;
 var $add1714=((($646)+(1))|0);
 $i1708=$add1714;
 label=854;break;
 case 857: 
 $i1716=0;
 label=858;break;
 case 858: 
 var $647=$i1716;
 var $cmp1718=($647|0)<3;
 if($cmp1718){label=859;break;}else{label=861;break;}
 case 859: 
 var $648=$i1716;
 var $fRec200=(($this1+526424)|0);
 var $arrayidx1720=(($fRec200+($648<<2))|0);
 HEAPF32[(($arrayidx1720)>>2)]=0;
 label=860;break;
 case 860: 
 var $649=$i1716;
 var $add1722=((($649)+(1))|0);
 $i1716=$add1722;
 label=858;break;
 case 861: 
 $i1724=0;
 label=862;break;
 case 862: 
 var $650=$i1724;
 var $cmp1726=($650|0)<3;
 if($cmp1726){label=863;break;}else{label=865;break;}
 case 863: 
 var $651=$i1724;
 var $fRec199=(($this1+526412)|0);
 var $arrayidx1728=(($fRec199+($651<<2))|0);
 HEAPF32[(($arrayidx1728)>>2)]=0;
 label=864;break;
 case 864: 
 var $652=$i1724;
 var $add1730=((($652)+(1))|0);
 $i1724=$add1730;
 label=862;break;
 case 865: 
 $i1732=0;
 label=866;break;
 case 866: 
 var $653=$i1732;
 var $cmp1734=($653|0)<2;
 if($cmp1734){label=867;break;}else{label=869;break;}
 case 867: 
 var $654=$i1732;
 var $fRec209=(($this1+526404)|0);
 var $arrayidx1736=(($fRec209+($654<<2))|0);
 HEAPF32[(($arrayidx1736)>>2)]=0;
 label=868;break;
 case 868: 
 var $655=$i1732;
 var $add1738=((($655)+(1))|0);
 $i1732=$add1738;
 label=866;break;
 case 869: 
 $i1740=0;
 label=870;break;
 case 870: 
 var $656=$i1740;
 var $cmp1742=($656|0)<3;
 if($cmp1742){label=871;break;}else{label=873;break;}
 case 871: 
 var $657=$i1740;
 var $fRec208=(($this1+526392)|0);
 var $arrayidx1744=(($fRec208+($657<<2))|0);
 HEAPF32[(($arrayidx1744)>>2)]=0;
 label=872;break;
 case 872: 
 var $658=$i1740;
 var $add1746=((($658)+(1))|0);
 $i1740=$add1746;
 label=870;break;
 case 873: 
 $i1748=0;
 label=874;break;
 case 874: 
 var $659=$i1748;
 var $cmp1750=($659|0)<2;
 if($cmp1750){label=875;break;}else{label=877;break;}
 case 875: 
 var $660=$i1748;
 var $fVec27=(($this1+526384)|0);
 var $arrayidx1752=(($fVec27+($660<<2))|0);
 HEAPF32[(($arrayidx1752)>>2)]=0;
 label=876;break;
 case 876: 
 var $661=$i1748;
 var $add1754=((($661)+(1))|0);
 $i1748=$add1754;
 label=874;break;
 case 877: 
 $i1756=0;
 label=878;break;
 case 878: 
 var $662=$i1756;
 var $cmp1758=($662|0)<2;
 if($cmp1758){label=879;break;}else{label=881;break;}
 case 879: 
 var $663=$i1756;
 var $fRec207=(($this1+526376)|0);
 var $arrayidx1760=(($fRec207+($663<<2))|0);
 HEAPF32[(($arrayidx1760)>>2)]=0;
 label=880;break;
 case 880: 
 var $664=$i1756;
 var $add1762=((($664)+(1))|0);
 $i1756=$add1762;
 label=878;break;
 case 881: 
 $i1764=0;
 label=882;break;
 case 882: 
 var $665=$i1764;
 var $cmp1766=($665|0)<3;
 if($cmp1766){label=883;break;}else{label=885;break;}
 case 883: 
 var $666=$i1764;
 var $fRec206=(($this1+526364)|0);
 var $arrayidx1768=(($fRec206+($666<<2))|0);
 HEAPF32[(($arrayidx1768)>>2)]=0;
 label=884;break;
 case 884: 
 var $667=$i1764;
 var $add1770=((($667)+(1))|0);
 $i1764=$add1770;
 label=882;break;
 case 885: 
 $i1772=0;
 label=886;break;
 case 886: 
 var $668=$i1772;
 var $cmp1774=($668|0)<3;
 if($cmp1774){label=887;break;}else{label=889;break;}
 case 887: 
 var $669=$i1772;
 var $fRec205=(($this1+526352)|0);
 var $arrayidx1776=(($fRec205+($669<<2))|0);
 HEAPF32[(($arrayidx1776)>>2)]=0;
 label=888;break;
 case 888: 
 var $670=$i1772;
 var $add1778=((($670)+(1))|0);
 $i1772=$add1778;
 label=886;break;
 case 889: 
 $i1780=0;
 label=890;break;
 case 890: 
 var $671=$i1780;
 var $cmp1782=($671|0)<2;
 if($cmp1782){label=891;break;}else{label=893;break;}
 case 891: 
 var $672=$i1780;
 var $fRec213=(($this1+526344)|0);
 var $arrayidx1784=(($fRec213+($672<<2))|0);
 HEAPF32[(($arrayidx1784)>>2)]=0;
 label=892;break;
 case 892: 
 var $673=$i1780;
 var $add1786=((($673)+(1))|0);
 $i1780=$add1786;
 label=890;break;
 case 893: 
 $i1788=0;
 label=894;break;
 case 894: 
 var $674=$i1788;
 var $cmp1790=($674|0)<3;
 if($cmp1790){label=895;break;}else{label=897;break;}
 case 895: 
 var $675=$i1788;
 var $fRec212=(($this1+526332)|0);
 var $arrayidx1792=(($fRec212+($675<<2))|0);
 HEAPF32[(($arrayidx1792)>>2)]=0;
 label=896;break;
 case 896: 
 var $676=$i1788;
 var $add1794=((($676)+(1))|0);
 $i1788=$add1794;
 label=894;break;
 case 897: 
 $i1796=0;
 label=898;break;
 case 898: 
 var $677=$i1796;
 var $cmp1798=($677|0)<2;
 if($cmp1798){label=899;break;}else{label=901;break;}
 case 899: 
 var $678=$i1796;
 var $fVec28=(($this1+526324)|0);
 var $arrayidx1800=(($fVec28+($678<<2))|0);
 HEAPF32[(($arrayidx1800)>>2)]=0;
 label=900;break;
 case 900: 
 var $679=$i1796;
 var $add1802=((($679)+(1))|0);
 $i1796=$add1802;
 label=898;break;
 case 901: 
 $i1804=0;
 label=902;break;
 case 902: 
 var $680=$i1804;
 var $cmp1806=($680|0)<2;
 if($cmp1806){label=903;break;}else{label=905;break;}
 case 903: 
 var $681=$i1804;
 var $fRec211=(($this1+526316)|0);
 var $arrayidx1808=(($fRec211+($681<<2))|0);
 HEAPF32[(($arrayidx1808)>>2)]=0;
 label=904;break;
 case 904: 
 var $682=$i1804;
 var $add1810=((($682)+(1))|0);
 $i1804=$add1810;
 label=902;break;
 case 905: 
 $i1812=0;
 label=906;break;
 case 906: 
 var $683=$i1812;
 var $cmp1814=($683|0)<3;
 if($cmp1814){label=907;break;}else{label=909;break;}
 case 907: 
 var $684=$i1812;
 var $fRec210=(($this1+526304)|0);
 var $arrayidx1816=(($fRec210+($684<<2))|0);
 HEAPF32[(($arrayidx1816)>>2)]=0;
 label=908;break;
 case 908: 
 var $685=$i1812;
 var $add1818=((($685)+(1))|0);
 $i1812=$add1818;
 label=906;break;
 case 909: 
 $i1820=0;
 label=910;break;
 case 910: 
 var $686=$i1820;
 var $cmp1822=($686|0)<2;
 if($cmp1822){label=911;break;}else{label=913;break;}
 case 911: 
 var $687=$i1820;
 var $fRec215=(($this1+526296)|0);
 var $arrayidx1824=(($fRec215+($687<<2))|0);
 HEAPF32[(($arrayidx1824)>>2)]=0;
 label=912;break;
 case 912: 
 var $688=$i1820;
 var $add1826=((($688)+(1))|0);
 $i1820=$add1826;
 label=910;break;
 case 913: 
 $i1828=0;
 label=914;break;
 case 914: 
 var $689=$i1828;
 var $cmp1830=($689|0)<3;
 if($cmp1830){label=915;break;}else{label=917;break;}
 case 915: 
 var $690=$i1828;
 var $fRec214=(($this1+526284)|0);
 var $arrayidx1832=(($fRec214+($690<<2))|0);
 HEAPF32[(($arrayidx1832)>>2)]=0;
 label=916;break;
 case 916: 
 var $691=$i1828;
 var $add1834=((($691)+(1))|0);
 $i1828=$add1834;
 label=914;break;
 case 917: 
 $i1836=0;
 label=918;break;
 case 918: 
 var $692=$i1836;
 var $cmp1838=($692|0)<2;
 if($cmp1838){label=919;break;}else{label=921;break;}
 case 919: 
 var $693=$i1836;
 var $fRec220=(($this1+526276)|0);
 var $arrayidx1840=(($fRec220+($693<<2))|0);
 HEAPF32[(($arrayidx1840)>>2)]=0;
 label=920;break;
 case 920: 
 var $694=$i1836;
 var $add1842=((($694)+(1))|0);
 $i1836=$add1842;
 label=918;break;
 case 921: 
 $i1844=0;
 label=922;break;
 case 922: 
 var $695=$i1844;
 var $cmp1846=($695|0)<3;
 if($cmp1846){label=923;break;}else{label=925;break;}
 case 923: 
 var $696=$i1844;
 var $fRec219=(($this1+526264)|0);
 var $arrayidx1848=(($fRec219+($696<<2))|0);
 HEAPF32[(($arrayidx1848)>>2)]=0;
 label=924;break;
 case 924: 
 var $697=$i1844;
 var $add1850=((($697)+(1))|0);
 $i1844=$add1850;
 label=922;break;
 case 925: 
 $i1852=0;
 label=926;break;
 case 926: 
 var $698=$i1852;
 var $cmp1854=($698|0)<3;
 if($cmp1854){label=927;break;}else{label=929;break;}
 case 927: 
 var $699=$i1852;
 var $fRec218=(($this1+526252)|0);
 var $arrayidx1856=(($fRec218+($699<<2))|0);
 HEAPF32[(($arrayidx1856)>>2)]=0;
 label=928;break;
 case 928: 
 var $700=$i1852;
 var $add1858=((($700)+(1))|0);
 $i1852=$add1858;
 label=926;break;
 case 929: 
 $i1860=0;
 label=930;break;
 case 930: 
 var $701=$i1860;
 var $cmp1862=($701|0)<3;
 if($cmp1862){label=931;break;}else{label=933;break;}
 case 931: 
 var $702=$i1860;
 var $fRec217=(($this1+526240)|0);
 var $arrayidx1864=(($fRec217+($702<<2))|0);
 HEAPF32[(($arrayidx1864)>>2)]=0;
 label=932;break;
 case 932: 
 var $703=$i1860;
 var $add1866=((($703)+(1))|0);
 $i1860=$add1866;
 label=930;break;
 case 933: 
 $i1868=0;
 label=934;break;
 case 934: 
 var $704=$i1868;
 var $cmp1870=($704|0)<3;
 if($cmp1870){label=935;break;}else{label=937;break;}
 case 935: 
 var $705=$i1868;
 var $fRec216=(($this1+526228)|0);
 var $arrayidx1872=(($fRec216+($705<<2))|0);
 HEAPF32[(($arrayidx1872)>>2)]=0;
 label=936;break;
 case 936: 
 var $706=$i1868;
 var $add1874=((($706)+(1))|0);
 $i1868=$add1874;
 label=934;break;
 case 937: 
 $i1876=0;
 label=938;break;
 case 938: 
 var $707=$i1876;
 var $cmp1878=($707|0)<2;
 if($cmp1878){label=939;break;}else{label=941;break;}
 case 939: 
 var $708=$i1876;
 var $fRec226=(($this1+526220)|0);
 var $arrayidx1880=(($fRec226+($708<<2))|0);
 HEAPF32[(($arrayidx1880)>>2)]=0;
 label=940;break;
 case 940: 
 var $709=$i1876;
 var $add1882=((($709)+(1))|0);
 $i1876=$add1882;
 label=938;break;
 case 941: 
 $i1884=0;
 label=942;break;
 case 942: 
 var $710=$i1884;
 var $cmp1886=($710|0)<3;
 if($cmp1886){label=943;break;}else{label=945;break;}
 case 943: 
 var $711=$i1884;
 var $fRec225=(($this1+526208)|0);
 var $arrayidx1888=(($fRec225+($711<<2))|0);
 HEAPF32[(($arrayidx1888)>>2)]=0;
 label=944;break;
 case 944: 
 var $712=$i1884;
 var $add1890=((($712)+(1))|0);
 $i1884=$add1890;
 label=942;break;
 case 945: 
 $i1892=0;
 label=946;break;
 case 946: 
 var $713=$i1892;
 var $cmp1894=($713|0)<2;
 if($cmp1894){label=947;break;}else{label=949;break;}
 case 947: 
 var $714=$i1892;
 var $fVec29=(($this1+526200)|0);
 var $arrayidx1896=(($fVec29+($714<<2))|0);
 HEAPF32[(($arrayidx1896)>>2)]=0;
 label=948;break;
 case 948: 
 var $715=$i1892;
 var $add1898=((($715)+(1))|0);
 $i1892=$add1898;
 label=946;break;
 case 949: 
 $i1900=0;
 label=950;break;
 case 950: 
 var $716=$i1900;
 var $cmp1902=($716|0)<2;
 if($cmp1902){label=951;break;}else{label=953;break;}
 case 951: 
 var $717=$i1900;
 var $fRec224=(($this1+526192)|0);
 var $arrayidx1904=(($fRec224+($717<<2))|0);
 HEAPF32[(($arrayidx1904)>>2)]=0;
 label=952;break;
 case 952: 
 var $718=$i1900;
 var $add1906=((($718)+(1))|0);
 $i1900=$add1906;
 label=950;break;
 case 953: 
 $i1908=0;
 label=954;break;
 case 954: 
 var $719=$i1908;
 var $cmp1910=($719|0)<3;
 if($cmp1910){label=955;break;}else{label=957;break;}
 case 955: 
 var $720=$i1908;
 var $fRec223=(($this1+526180)|0);
 var $arrayidx1912=(($fRec223+($720<<2))|0);
 HEAPF32[(($arrayidx1912)>>2)]=0;
 label=956;break;
 case 956: 
 var $721=$i1908;
 var $add1914=((($721)+(1))|0);
 $i1908=$add1914;
 label=954;break;
 case 957: 
 $i1916=0;
 label=958;break;
 case 958: 
 var $722=$i1916;
 var $cmp1918=($722|0)<3;
 if($cmp1918){label=959;break;}else{label=961;break;}
 case 959: 
 var $723=$i1916;
 var $fRec222=(($this1+526168)|0);
 var $arrayidx1920=(($fRec222+($723<<2))|0);
 HEAPF32[(($arrayidx1920)>>2)]=0;
 label=960;break;
 case 960: 
 var $724=$i1916;
 var $add1922=((($724)+(1))|0);
 $i1916=$add1922;
 label=958;break;
 case 961: 
 $i1924=0;
 label=962;break;
 case 962: 
 var $725=$i1924;
 var $cmp1926=($725|0)<3;
 if($cmp1926){label=963;break;}else{label=965;break;}
 case 963: 
 var $726=$i1924;
 var $fRec221=(($this1+526156)|0);
 var $arrayidx1928=(($fRec221+($726<<2))|0);
 HEAPF32[(($arrayidx1928)>>2)]=0;
 label=964;break;
 case 964: 
 var $727=$i1924;
 var $add1930=((($727)+(1))|0);
 $i1924=$add1930;
 label=962;break;
 case 965: 
 $i1932=0;
 label=966;break;
 case 966: 
 var $728=$i1932;
 var $cmp1934=($728|0)<2;
 if($cmp1934){label=967;break;}else{label=969;break;}
 case 967: 
 var $729=$i1932;
 var $fRec231=(($this1+526148)|0);
 var $arrayidx1936=(($fRec231+($729<<2))|0);
 HEAPF32[(($arrayidx1936)>>2)]=0;
 label=968;break;
 case 968: 
 var $730=$i1932;
 var $add1938=((($730)+(1))|0);
 $i1932=$add1938;
 label=966;break;
 case 969: 
 $i1940=0;
 label=970;break;
 case 970: 
 var $731=$i1940;
 var $cmp1942=($731|0)<3;
 if($cmp1942){label=971;break;}else{label=973;break;}
 case 971: 
 var $732=$i1940;
 var $fRec230=(($this1+526136)|0);
 var $arrayidx1944=(($fRec230+($732<<2))|0);
 HEAPF32[(($arrayidx1944)>>2)]=0;
 label=972;break;
 case 972: 
 var $733=$i1940;
 var $add1946=((($733)+(1))|0);
 $i1940=$add1946;
 label=970;break;
 case 973: 
 $i1948=0;
 label=974;break;
 case 974: 
 var $734=$i1948;
 var $cmp1950=($734|0)<2;
 if($cmp1950){label=975;break;}else{label=977;break;}
 case 975: 
 var $735=$i1948;
 var $fVec30=(($this1+526128)|0);
 var $arrayidx1952=(($fVec30+($735<<2))|0);
 HEAPF32[(($arrayidx1952)>>2)]=0;
 label=976;break;
 case 976: 
 var $736=$i1948;
 var $add1954=((($736)+(1))|0);
 $i1948=$add1954;
 label=974;break;
 case 977: 
 $i1956=0;
 label=978;break;
 case 978: 
 var $737=$i1956;
 var $cmp1958=($737|0)<2;
 if($cmp1958){label=979;break;}else{label=981;break;}
 case 979: 
 var $738=$i1956;
 var $fRec229=(($this1+526120)|0);
 var $arrayidx1960=(($fRec229+($738<<2))|0);
 HEAPF32[(($arrayidx1960)>>2)]=0;
 label=980;break;
 case 980: 
 var $739=$i1956;
 var $add1962=((($739)+(1))|0);
 $i1956=$add1962;
 label=978;break;
 case 981: 
 $i1964=0;
 label=982;break;
 case 982: 
 var $740=$i1964;
 var $cmp1966=($740|0)<3;
 if($cmp1966){label=983;break;}else{label=985;break;}
 case 983: 
 var $741=$i1964;
 var $fRec228=(($this1+526108)|0);
 var $arrayidx1968=(($fRec228+($741<<2))|0);
 HEAPF32[(($arrayidx1968)>>2)]=0;
 label=984;break;
 case 984: 
 var $742=$i1964;
 var $add1970=((($742)+(1))|0);
 $i1964=$add1970;
 label=982;break;
 case 985: 
 $i1972=0;
 label=986;break;
 case 986: 
 var $743=$i1972;
 var $cmp1974=($743|0)<3;
 if($cmp1974){label=987;break;}else{label=989;break;}
 case 987: 
 var $744=$i1972;
 var $fRec227=(($this1+526096)|0);
 var $arrayidx1976=(($fRec227+($744<<2))|0);
 HEAPF32[(($arrayidx1976)>>2)]=0;
 label=988;break;
 case 988: 
 var $745=$i1972;
 var $add1978=((($745)+(1))|0);
 $i1972=$add1978;
 label=986;break;
 case 989: 
 $i1980=0;
 label=990;break;
 case 990: 
 var $746=$i1980;
 var $cmp1982=($746|0)<2;
 if($cmp1982){label=991;break;}else{label=993;break;}
 case 991: 
 var $747=$i1980;
 var $fRec235=(($this1+526088)|0);
 var $arrayidx1984=(($fRec235+($747<<2))|0);
 HEAPF32[(($arrayidx1984)>>2)]=0;
 label=992;break;
 case 992: 
 var $748=$i1980;
 var $add1986=((($748)+(1))|0);
 $i1980=$add1986;
 label=990;break;
 case 993: 
 $i1988=0;
 label=994;break;
 case 994: 
 var $749=$i1988;
 var $cmp1990=($749|0)<3;
 if($cmp1990){label=995;break;}else{label=997;break;}
 case 995: 
 var $750=$i1988;
 var $fRec234=(($this1+526076)|0);
 var $arrayidx1992=(($fRec234+($750<<2))|0);
 HEAPF32[(($arrayidx1992)>>2)]=0;
 label=996;break;
 case 996: 
 var $751=$i1988;
 var $add1994=((($751)+(1))|0);
 $i1988=$add1994;
 label=994;break;
 case 997: 
 $i1996=0;
 label=998;break;
 case 998: 
 var $752=$i1996;
 var $cmp1998=($752|0)<2;
 if($cmp1998){label=999;break;}else{label=1001;break;}
 case 999: 
 var $753=$i1996;
 var $fVec31=(($this1+526068)|0);
 var $arrayidx2000=(($fVec31+($753<<2))|0);
 HEAPF32[(($arrayidx2000)>>2)]=0;
 label=1000;break;
 case 1000: 
 var $754=$i1996;
 var $add2002=((($754)+(1))|0);
 $i1996=$add2002;
 label=998;break;
 case 1001: 
 $i2004=0;
 label=1002;break;
 case 1002: 
 var $755=$i2004;
 var $cmp2006=($755|0)<2;
 if($cmp2006){label=1003;break;}else{label=1005;break;}
 case 1003: 
 var $756=$i2004;
 var $fRec233=(($this1+526060)|0);
 var $arrayidx2008=(($fRec233+($756<<2))|0);
 HEAPF32[(($arrayidx2008)>>2)]=0;
 label=1004;break;
 case 1004: 
 var $757=$i2004;
 var $add2010=((($757)+(1))|0);
 $i2004=$add2010;
 label=1002;break;
 case 1005: 
 $i2012=0;
 label=1006;break;
 case 1006: 
 var $758=$i2012;
 var $cmp2014=($758|0)<3;
 if($cmp2014){label=1007;break;}else{label=1009;break;}
 case 1007: 
 var $759=$i2012;
 var $fRec232=(($this1+526048)|0);
 var $arrayidx2016=(($fRec232+($759<<2))|0);
 HEAPF32[(($arrayidx2016)>>2)]=0;
 label=1008;break;
 case 1008: 
 var $760=$i2012;
 var $add2018=((($760)+(1))|0);
 $i2012=$add2018;
 label=1006;break;
 case 1009: 
 $i2020=0;
 label=1010;break;
 case 1010: 
 var $761=$i2020;
 var $cmp2022=($761|0)<2;
 if($cmp2022){label=1011;break;}else{label=1013;break;}
 case 1011: 
 var $762=$i2020;
 var $fRec237=(($this1+526040)|0);
 var $arrayidx2024=(($fRec237+($762<<2))|0);
 HEAPF32[(($arrayidx2024)>>2)]=0;
 label=1012;break;
 case 1012: 
 var $763=$i2020;
 var $add2026=((($763)+(1))|0);
 $i2020=$add2026;
 label=1010;break;
 case 1013: 
 $i2028=0;
 label=1014;break;
 case 1014: 
 var $764=$i2028;
 var $cmp2030=($764|0)<3;
 if($cmp2030){label=1015;break;}else{label=1017;break;}
 case 1015: 
 var $765=$i2028;
 var $fRec236=(($this1+526028)|0);
 var $arrayidx2032=(($fRec236+($765<<2))|0);
 HEAPF32[(($arrayidx2032)>>2)]=0;
 label=1016;break;
 case 1016: 
 var $766=$i2028;
 var $add2034=((($766)+(1))|0);
 $i2028=$add2034;
 label=1014;break;
 case 1017: 
 $i2036=0;
 label=1018;break;
 case 1018: 
 var $767=$i2036;
 var $cmp2038=($767|0)<2;
 if($cmp2038){label=1019;break;}else{label=1021;break;}
 case 1019: 
 var $768=$i2036;
 var $fRec242=(($this1+526020)|0);
 var $arrayidx2040=(($fRec242+($768<<2))|0);
 HEAPF32[(($arrayidx2040)>>2)]=0;
 label=1020;break;
 case 1020: 
 var $769=$i2036;
 var $add2042=((($769)+(1))|0);
 $i2036=$add2042;
 label=1018;break;
 case 1021: 
 $i2044=0;
 label=1022;break;
 case 1022: 
 var $770=$i2044;
 var $cmp2046=($770|0)<3;
 if($cmp2046){label=1023;break;}else{label=1025;break;}
 case 1023: 
 var $771=$i2044;
 var $fRec241=(($this1+526008)|0);
 var $arrayidx2048=(($fRec241+($771<<2))|0);
 HEAPF32[(($arrayidx2048)>>2)]=0;
 label=1024;break;
 case 1024: 
 var $772=$i2044;
 var $add2050=((($772)+(1))|0);
 $i2044=$add2050;
 label=1022;break;
 case 1025: 
 $i2052=0;
 label=1026;break;
 case 1026: 
 var $773=$i2052;
 var $cmp2054=($773|0)<3;
 if($cmp2054){label=1027;break;}else{label=1029;break;}
 case 1027: 
 var $774=$i2052;
 var $fRec240=(($this1+525996)|0);
 var $arrayidx2056=(($fRec240+($774<<2))|0);
 HEAPF32[(($arrayidx2056)>>2)]=0;
 label=1028;break;
 case 1028: 
 var $775=$i2052;
 var $add2058=((($775)+(1))|0);
 $i2052=$add2058;
 label=1026;break;
 case 1029: 
 $i2060=0;
 label=1030;break;
 case 1030: 
 var $776=$i2060;
 var $cmp2062=($776|0)<3;
 if($cmp2062){label=1031;break;}else{label=1033;break;}
 case 1031: 
 var $777=$i2060;
 var $fRec239=(($this1+525984)|0);
 var $arrayidx2064=(($fRec239+($777<<2))|0);
 HEAPF32[(($arrayidx2064)>>2)]=0;
 label=1032;break;
 case 1032: 
 var $778=$i2060;
 var $add2066=((($778)+(1))|0);
 $i2060=$add2066;
 label=1030;break;
 case 1033: 
 $i2068=0;
 label=1034;break;
 case 1034: 
 var $779=$i2068;
 var $cmp2070=($779|0)<3;
 if($cmp2070){label=1035;break;}else{label=1037;break;}
 case 1035: 
 var $780=$i2068;
 var $fRec238=(($this1+525972)|0);
 var $arrayidx2072=(($fRec238+($780<<2))|0);
 HEAPF32[(($arrayidx2072)>>2)]=0;
 label=1036;break;
 case 1036: 
 var $781=$i2068;
 var $add2074=((($781)+(1))|0);
 $i2068=$add2074;
 label=1034;break;
 case 1037: 
 $i2076=0;
 label=1038;break;
 case 1038: 
 var $782=$i2076;
 var $cmp2078=($782|0)<2;
 if($cmp2078){label=1039;break;}else{label=1041;break;}
 case 1039: 
 var $783=$i2076;
 var $fRec248=(($this1+525964)|0);
 var $arrayidx2080=(($fRec248+($783<<2))|0);
 HEAPF32[(($arrayidx2080)>>2)]=0;
 label=1040;break;
 case 1040: 
 var $784=$i2076;
 var $add2082=((($784)+(1))|0);
 $i2076=$add2082;
 label=1038;break;
 case 1041: 
 $i2084=0;
 label=1042;break;
 case 1042: 
 var $785=$i2084;
 var $cmp2086=($785|0)<3;
 if($cmp2086){label=1043;break;}else{label=1045;break;}
 case 1043: 
 var $786=$i2084;
 var $fRec247=(($this1+525952)|0);
 var $arrayidx2088=(($fRec247+($786<<2))|0);
 HEAPF32[(($arrayidx2088)>>2)]=0;
 label=1044;break;
 case 1044: 
 var $787=$i2084;
 var $add2090=((($787)+(1))|0);
 $i2084=$add2090;
 label=1042;break;
 case 1045: 
 $i2092=0;
 label=1046;break;
 case 1046: 
 var $788=$i2092;
 var $cmp2094=($788|0)<2;
 if($cmp2094){label=1047;break;}else{label=1049;break;}
 case 1047: 
 var $789=$i2092;
 var $fVec32=(($this1+525944)|0);
 var $arrayidx2096=(($fVec32+($789<<2))|0);
 HEAPF32[(($arrayidx2096)>>2)]=0;
 label=1048;break;
 case 1048: 
 var $790=$i2092;
 var $add2098=((($790)+(1))|0);
 $i2092=$add2098;
 label=1046;break;
 case 1049: 
 $i2100=0;
 label=1050;break;
 case 1050: 
 var $791=$i2100;
 var $cmp2102=($791|0)<2;
 if($cmp2102){label=1051;break;}else{label=1053;break;}
 case 1051: 
 var $792=$i2100;
 var $fRec246=(($this1+525936)|0);
 var $arrayidx2104=(($fRec246+($792<<2))|0);
 HEAPF32[(($arrayidx2104)>>2)]=0;
 label=1052;break;
 case 1052: 
 var $793=$i2100;
 var $add2106=((($793)+(1))|0);
 $i2100=$add2106;
 label=1050;break;
 case 1053: 
 $i2108=0;
 label=1054;break;
 case 1054: 
 var $794=$i2108;
 var $cmp2110=($794|0)<3;
 if($cmp2110){label=1055;break;}else{label=1057;break;}
 case 1055: 
 var $795=$i2108;
 var $fRec245=(($this1+525924)|0);
 var $arrayidx2112=(($fRec245+($795<<2))|0);
 HEAPF32[(($arrayidx2112)>>2)]=0;
 label=1056;break;
 case 1056: 
 var $796=$i2108;
 var $add2114=((($796)+(1))|0);
 $i2108=$add2114;
 label=1054;break;
 case 1057: 
 $i2116=0;
 label=1058;break;
 case 1058: 
 var $797=$i2116;
 var $cmp2118=($797|0)<3;
 if($cmp2118){label=1059;break;}else{label=1061;break;}
 case 1059: 
 var $798=$i2116;
 var $fRec244=(($this1+525912)|0);
 var $arrayidx2120=(($fRec244+($798<<2))|0);
 HEAPF32[(($arrayidx2120)>>2)]=0;
 label=1060;break;
 case 1060: 
 var $799=$i2116;
 var $add2122=((($799)+(1))|0);
 $i2116=$add2122;
 label=1058;break;
 case 1061: 
 $i2124=0;
 label=1062;break;
 case 1062: 
 var $800=$i2124;
 var $cmp2126=($800|0)<3;
 if($cmp2126){label=1063;break;}else{label=1065;break;}
 case 1063: 
 var $801=$i2124;
 var $fRec243=(($this1+525900)|0);
 var $arrayidx2128=(($fRec243+($801<<2))|0);
 HEAPF32[(($arrayidx2128)>>2)]=0;
 label=1064;break;
 case 1064: 
 var $802=$i2124;
 var $add2130=((($802)+(1))|0);
 $i2124=$add2130;
 label=1062;break;
 case 1065: 
 $i2132=0;
 label=1066;break;
 case 1066: 
 var $803=$i2132;
 var $cmp2134=($803|0)<2;
 if($cmp2134){label=1067;break;}else{label=1069;break;}
 case 1067: 
 var $804=$i2132;
 var $fRec253=(($this1+525892)|0);
 var $arrayidx2136=(($fRec253+($804<<2))|0);
 HEAPF32[(($arrayidx2136)>>2)]=0;
 label=1068;break;
 case 1068: 
 var $805=$i2132;
 var $add2138=((($805)+(1))|0);
 $i2132=$add2138;
 label=1066;break;
 case 1069: 
 $i2140=0;
 label=1070;break;
 case 1070: 
 var $806=$i2140;
 var $cmp2142=($806|0)<3;
 if($cmp2142){label=1071;break;}else{label=1073;break;}
 case 1071: 
 var $807=$i2140;
 var $fRec252=(($this1+525880)|0);
 var $arrayidx2144=(($fRec252+($807<<2))|0);
 HEAPF32[(($arrayidx2144)>>2)]=0;
 label=1072;break;
 case 1072: 
 var $808=$i2140;
 var $add2146=((($808)+(1))|0);
 $i2140=$add2146;
 label=1070;break;
 case 1073: 
 $i2148=0;
 label=1074;break;
 case 1074: 
 var $809=$i2148;
 var $cmp2150=($809|0)<2;
 if($cmp2150){label=1075;break;}else{label=1077;break;}
 case 1075: 
 var $810=$i2148;
 var $fVec33=(($this1+525872)|0);
 var $arrayidx2152=(($fVec33+($810<<2))|0);
 HEAPF32[(($arrayidx2152)>>2)]=0;
 label=1076;break;
 case 1076: 
 var $811=$i2148;
 var $add2154=((($811)+(1))|0);
 $i2148=$add2154;
 label=1074;break;
 case 1077: 
 $i2156=0;
 label=1078;break;
 case 1078: 
 var $812=$i2156;
 var $cmp2158=($812|0)<2;
 if($cmp2158){label=1079;break;}else{label=1081;break;}
 case 1079: 
 var $813=$i2156;
 var $fRec251=(($this1+525864)|0);
 var $arrayidx2160=(($fRec251+($813<<2))|0);
 HEAPF32[(($arrayidx2160)>>2)]=0;
 label=1080;break;
 case 1080: 
 var $814=$i2156;
 var $add2162=((($814)+(1))|0);
 $i2156=$add2162;
 label=1078;break;
 case 1081: 
 $i2164=0;
 label=1082;break;
 case 1082: 
 var $815=$i2164;
 var $cmp2166=($815|0)<3;
 if($cmp2166){label=1083;break;}else{label=1085;break;}
 case 1083: 
 var $816=$i2164;
 var $fRec250=(($this1+525852)|0);
 var $arrayidx2168=(($fRec250+($816<<2))|0);
 HEAPF32[(($arrayidx2168)>>2)]=0;
 label=1084;break;
 case 1084: 
 var $817=$i2164;
 var $add2170=((($817)+(1))|0);
 $i2164=$add2170;
 label=1082;break;
 case 1085: 
 $i2172=0;
 label=1086;break;
 case 1086: 
 var $818=$i2172;
 var $cmp2174=($818|0)<3;
 if($cmp2174){label=1087;break;}else{label=1089;break;}
 case 1087: 
 var $819=$i2172;
 var $fRec249=(($this1+525840)|0);
 var $arrayidx2176=(($fRec249+($819<<2))|0);
 HEAPF32[(($arrayidx2176)>>2)]=0;
 label=1088;break;
 case 1088: 
 var $820=$i2172;
 var $add2178=((($820)+(1))|0);
 $i2172=$add2178;
 label=1086;break;
 case 1089: 
 $i2180=0;
 label=1090;break;
 case 1090: 
 var $821=$i2180;
 var $cmp2182=($821|0)<2;
 if($cmp2182){label=1091;break;}else{label=1093;break;}
 case 1091: 
 var $822=$i2180;
 var $fRec257=(($this1+525832)|0);
 var $arrayidx2184=(($fRec257+($822<<2))|0);
 HEAPF32[(($arrayidx2184)>>2)]=0;
 label=1092;break;
 case 1092: 
 var $823=$i2180;
 var $add2186=((($823)+(1))|0);
 $i2180=$add2186;
 label=1090;break;
 case 1093: 
 $i2188=0;
 label=1094;break;
 case 1094: 
 var $824=$i2188;
 var $cmp2190=($824|0)<3;
 if($cmp2190){label=1095;break;}else{label=1097;break;}
 case 1095: 
 var $825=$i2188;
 var $fRec256=(($this1+525820)|0);
 var $arrayidx2192=(($fRec256+($825<<2))|0);
 HEAPF32[(($arrayidx2192)>>2)]=0;
 label=1096;break;
 case 1096: 
 var $826=$i2188;
 var $add2194=((($826)+(1))|0);
 $i2188=$add2194;
 label=1094;break;
 case 1097: 
 $i2196=0;
 label=1098;break;
 case 1098: 
 var $827=$i2196;
 var $cmp2198=($827|0)<2;
 if($cmp2198){label=1099;break;}else{label=1101;break;}
 case 1099: 
 var $828=$i2196;
 var $fVec34=(($this1+525812)|0);
 var $arrayidx2200=(($fVec34+($828<<2))|0);
 HEAPF32[(($arrayidx2200)>>2)]=0;
 label=1100;break;
 case 1100: 
 var $829=$i2196;
 var $add2202=((($829)+(1))|0);
 $i2196=$add2202;
 label=1098;break;
 case 1101: 
 $i2204=0;
 label=1102;break;
 case 1102: 
 var $830=$i2204;
 var $cmp2206=($830|0)<2;
 if($cmp2206){label=1103;break;}else{label=1105;break;}
 case 1103: 
 var $831=$i2204;
 var $fRec255=(($this1+525804)|0);
 var $arrayidx2208=(($fRec255+($831<<2))|0);
 HEAPF32[(($arrayidx2208)>>2)]=0;
 label=1104;break;
 case 1104: 
 var $832=$i2204;
 var $add2210=((($832)+(1))|0);
 $i2204=$add2210;
 label=1102;break;
 case 1105: 
 $i2212=0;
 label=1106;break;
 case 1106: 
 var $833=$i2212;
 var $cmp2214=($833|0)<3;
 if($cmp2214){label=1107;break;}else{label=1109;break;}
 case 1107: 
 var $834=$i2212;
 var $fRec254=(($this1+525792)|0);
 var $arrayidx2216=(($fRec254+($834<<2))|0);
 HEAPF32[(($arrayidx2216)>>2)]=0;
 label=1108;break;
 case 1108: 
 var $835=$i2212;
 var $add2218=((($835)+(1))|0);
 $i2212=$add2218;
 label=1106;break;
 case 1109: 
 $i2220=0;
 label=1110;break;
 case 1110: 
 var $836=$i2220;
 var $cmp2222=($836|0)<2;
 if($cmp2222){label=1111;break;}else{label=1113;break;}
 case 1111: 
 var $837=$i2220;
 var $fRec259=(($this1+525784)|0);
 var $arrayidx2224=(($fRec259+($837<<2))|0);
 HEAPF32[(($arrayidx2224)>>2)]=0;
 label=1112;break;
 case 1112: 
 var $838=$i2220;
 var $add2226=((($838)+(1))|0);
 $i2220=$add2226;
 label=1110;break;
 case 1113: 
 $i2228=0;
 label=1114;break;
 case 1114: 
 var $839=$i2228;
 var $cmp2230=($839|0)<3;
 if($cmp2230){label=1115;break;}else{label=1117;break;}
 case 1115: 
 var $840=$i2228;
 var $fRec258=(($this1+525772)|0);
 var $arrayidx2232=(($fRec258+($840<<2))|0);
 HEAPF32[(($arrayidx2232)>>2)]=0;
 label=1116;break;
 case 1116: 
 var $841=$i2228;
 var $add2234=((($841)+(1))|0);
 $i2228=$add2234;
 label=1114;break;
 case 1117: 
 $i2236=0;
 label=1118;break;
 case 1118: 
 var $842=$i2236;
 var $cmp2238=($842|0)<2;
 if($cmp2238){label=1119;break;}else{label=1121;break;}
 case 1119: 
 var $843=$i2236;
 var $fRec264=(($this1+525764)|0);
 var $arrayidx2240=(($fRec264+($843<<2))|0);
 HEAPF32[(($arrayidx2240)>>2)]=0;
 label=1120;break;
 case 1120: 
 var $844=$i2236;
 var $add2242=((($844)+(1))|0);
 $i2236=$add2242;
 label=1118;break;
 case 1121: 
 $i2244=0;
 label=1122;break;
 case 1122: 
 var $845=$i2244;
 var $cmp2246=($845|0)<3;
 if($cmp2246){label=1123;break;}else{label=1125;break;}
 case 1123: 
 var $846=$i2244;
 var $fRec263=(($this1+525752)|0);
 var $arrayidx2248=(($fRec263+($846<<2))|0);
 HEAPF32[(($arrayidx2248)>>2)]=0;
 label=1124;break;
 case 1124: 
 var $847=$i2244;
 var $add2250=((($847)+(1))|0);
 $i2244=$add2250;
 label=1122;break;
 case 1125: 
 $i2252=0;
 label=1126;break;
 case 1126: 
 var $848=$i2252;
 var $cmp2254=($848|0)<3;
 if($cmp2254){label=1127;break;}else{label=1129;break;}
 case 1127: 
 var $849=$i2252;
 var $fRec262=(($this1+525740)|0);
 var $arrayidx2256=(($fRec262+($849<<2))|0);
 HEAPF32[(($arrayidx2256)>>2)]=0;
 label=1128;break;
 case 1128: 
 var $850=$i2252;
 var $add2258=((($850)+(1))|0);
 $i2252=$add2258;
 label=1126;break;
 case 1129: 
 $i2260=0;
 label=1130;break;
 case 1130: 
 var $851=$i2260;
 var $cmp2262=($851|0)<3;
 if($cmp2262){label=1131;break;}else{label=1133;break;}
 case 1131: 
 var $852=$i2260;
 var $fRec261=(($this1+525728)|0);
 var $arrayidx2264=(($fRec261+($852<<2))|0);
 HEAPF32[(($arrayidx2264)>>2)]=0;
 label=1132;break;
 case 1132: 
 var $853=$i2260;
 var $add2266=((($853)+(1))|0);
 $i2260=$add2266;
 label=1130;break;
 case 1133: 
 $i2268=0;
 label=1134;break;
 case 1134: 
 var $854=$i2268;
 var $cmp2270=($854|0)<3;
 if($cmp2270){label=1135;break;}else{label=1137;break;}
 case 1135: 
 var $855=$i2268;
 var $fRec260=(($this1+525716)|0);
 var $arrayidx2272=(($fRec260+($855<<2))|0);
 HEAPF32[(($arrayidx2272)>>2)]=0;
 label=1136;break;
 case 1136: 
 var $856=$i2268;
 var $add2274=((($856)+(1))|0);
 $i2268=$add2274;
 label=1134;break;
 case 1137: 
 $i2276=0;
 label=1138;break;
 case 1138: 
 var $857=$i2276;
 var $cmp2278=($857|0)<2;
 if($cmp2278){label=1139;break;}else{label=1141;break;}
 case 1139: 
 var $858=$i2276;
 var $fRec270=(($this1+525708)|0);
 var $arrayidx2280=(($fRec270+($858<<2))|0);
 HEAPF32[(($arrayidx2280)>>2)]=0;
 label=1140;break;
 case 1140: 
 var $859=$i2276;
 var $add2282=((($859)+(1))|0);
 $i2276=$add2282;
 label=1138;break;
 case 1141: 
 $i2284=0;
 label=1142;break;
 case 1142: 
 var $860=$i2284;
 var $cmp2286=($860|0)<3;
 if($cmp2286){label=1143;break;}else{label=1145;break;}
 case 1143: 
 var $861=$i2284;
 var $fRec269=(($this1+525696)|0);
 var $arrayidx2288=(($fRec269+($861<<2))|0);
 HEAPF32[(($arrayidx2288)>>2)]=0;
 label=1144;break;
 case 1144: 
 var $862=$i2284;
 var $add2290=((($862)+(1))|0);
 $i2284=$add2290;
 label=1142;break;
 case 1145: 
 $i2292=0;
 label=1146;break;
 case 1146: 
 var $863=$i2292;
 var $cmp2294=($863|0)<2;
 if($cmp2294){label=1147;break;}else{label=1149;break;}
 case 1147: 
 var $864=$i2292;
 var $fVec35=(($this1+525688)|0);
 var $arrayidx2296=(($fVec35+($864<<2))|0);
 HEAPF32[(($arrayidx2296)>>2)]=0;
 label=1148;break;
 case 1148: 
 var $865=$i2292;
 var $add2298=((($865)+(1))|0);
 $i2292=$add2298;
 label=1146;break;
 case 1149: 
 $i2300=0;
 label=1150;break;
 case 1150: 
 var $866=$i2300;
 var $cmp2302=($866|0)<2;
 if($cmp2302){label=1151;break;}else{label=1153;break;}
 case 1151: 
 var $867=$i2300;
 var $fRec268=(($this1+525680)|0);
 var $arrayidx2304=(($fRec268+($867<<2))|0);
 HEAPF32[(($arrayidx2304)>>2)]=0;
 label=1152;break;
 case 1152: 
 var $868=$i2300;
 var $add2306=((($868)+(1))|0);
 $i2300=$add2306;
 label=1150;break;
 case 1153: 
 $i2308=0;
 label=1154;break;
 case 1154: 
 var $869=$i2308;
 var $cmp2310=($869|0)<3;
 if($cmp2310){label=1155;break;}else{label=1157;break;}
 case 1155: 
 var $870=$i2308;
 var $fRec267=(($this1+525668)|0);
 var $arrayidx2312=(($fRec267+($870<<2))|0);
 HEAPF32[(($arrayidx2312)>>2)]=0;
 label=1156;break;
 case 1156: 
 var $871=$i2308;
 var $add2314=((($871)+(1))|0);
 $i2308=$add2314;
 label=1154;break;
 case 1157: 
 $i2316=0;
 label=1158;break;
 case 1158: 
 var $872=$i2316;
 var $cmp2318=($872|0)<3;
 if($cmp2318){label=1159;break;}else{label=1161;break;}
 case 1159: 
 var $873=$i2316;
 var $fRec266=(($this1+525656)|0);
 var $arrayidx2320=(($fRec266+($873<<2))|0);
 HEAPF32[(($arrayidx2320)>>2)]=0;
 label=1160;break;
 case 1160: 
 var $874=$i2316;
 var $add2322=((($874)+(1))|0);
 $i2316=$add2322;
 label=1158;break;
 case 1161: 
 $i2324=0;
 label=1162;break;
 case 1162: 
 var $875=$i2324;
 var $cmp2326=($875|0)<3;
 if($cmp2326){label=1163;break;}else{label=1165;break;}
 case 1163: 
 var $876=$i2324;
 var $fRec265=(($this1+525644)|0);
 var $arrayidx2328=(($fRec265+($876<<2))|0);
 HEAPF32[(($arrayidx2328)>>2)]=0;
 label=1164;break;
 case 1164: 
 var $877=$i2324;
 var $add2330=((($877)+(1))|0);
 $i2324=$add2330;
 label=1162;break;
 case 1165: 
 $i2332=0;
 label=1166;break;
 case 1166: 
 var $878=$i2332;
 var $cmp2334=($878|0)<2;
 if($cmp2334){label=1167;break;}else{label=1169;break;}
 case 1167: 
 var $879=$i2332;
 var $fRec275=(($this1+525636)|0);
 var $arrayidx2336=(($fRec275+($879<<2))|0);
 HEAPF32[(($arrayidx2336)>>2)]=0;
 label=1168;break;
 case 1168: 
 var $880=$i2332;
 var $add2338=((($880)+(1))|0);
 $i2332=$add2338;
 label=1166;break;
 case 1169: 
 $i2340=0;
 label=1170;break;
 case 1170: 
 var $881=$i2340;
 var $cmp2342=($881|0)<3;
 if($cmp2342){label=1171;break;}else{label=1173;break;}
 case 1171: 
 var $882=$i2340;
 var $fRec274=(($this1+525624)|0);
 var $arrayidx2344=(($fRec274+($882<<2))|0);
 HEAPF32[(($arrayidx2344)>>2)]=0;
 label=1172;break;
 case 1172: 
 var $883=$i2340;
 var $add2346=((($883)+(1))|0);
 $i2340=$add2346;
 label=1170;break;
 case 1173: 
 $i2348=0;
 label=1174;break;
 case 1174: 
 var $884=$i2348;
 var $cmp2350=($884|0)<2;
 if($cmp2350){label=1175;break;}else{label=1177;break;}
 case 1175: 
 var $885=$i2348;
 var $fVec36=(($this1+525616)|0);
 var $arrayidx2352=(($fVec36+($885<<2))|0);
 HEAPF32[(($arrayidx2352)>>2)]=0;
 label=1176;break;
 case 1176: 
 var $886=$i2348;
 var $add2354=((($886)+(1))|0);
 $i2348=$add2354;
 label=1174;break;
 case 1177: 
 $i2356=0;
 label=1178;break;
 case 1178: 
 var $887=$i2356;
 var $cmp2358=($887|0)<2;
 if($cmp2358){label=1179;break;}else{label=1181;break;}
 case 1179: 
 var $888=$i2356;
 var $fRec273=(($this1+525608)|0);
 var $arrayidx2360=(($fRec273+($888<<2))|0);
 HEAPF32[(($arrayidx2360)>>2)]=0;
 label=1180;break;
 case 1180: 
 var $889=$i2356;
 var $add2362=((($889)+(1))|0);
 $i2356=$add2362;
 label=1178;break;
 case 1181: 
 $i2364=0;
 label=1182;break;
 case 1182: 
 var $890=$i2364;
 var $cmp2366=($890|0)<3;
 if($cmp2366){label=1183;break;}else{label=1185;break;}
 case 1183: 
 var $891=$i2364;
 var $fRec272=(($this1+525596)|0);
 var $arrayidx2368=(($fRec272+($891<<2))|0);
 HEAPF32[(($arrayidx2368)>>2)]=0;
 label=1184;break;
 case 1184: 
 var $892=$i2364;
 var $add2370=((($892)+(1))|0);
 $i2364=$add2370;
 label=1182;break;
 case 1185: 
 $i2372=0;
 label=1186;break;
 case 1186: 
 var $893=$i2372;
 var $cmp2374=($893|0)<3;
 if($cmp2374){label=1187;break;}else{label=1189;break;}
 case 1187: 
 var $894=$i2372;
 var $fRec271=(($this1+525584)|0);
 var $arrayidx2376=(($fRec271+($894<<2))|0);
 HEAPF32[(($arrayidx2376)>>2)]=0;
 label=1188;break;
 case 1188: 
 var $895=$i2372;
 var $add2378=((($895)+(1))|0);
 $i2372=$add2378;
 label=1186;break;
 case 1189: 
 $i2380=0;
 label=1190;break;
 case 1190: 
 var $896=$i2380;
 var $cmp2382=($896|0)<2;
 if($cmp2382){label=1191;break;}else{label=1193;break;}
 case 1191: 
 var $897=$i2380;
 var $fRec279=(($this1+525576)|0);
 var $arrayidx2384=(($fRec279+($897<<2))|0);
 HEAPF32[(($arrayidx2384)>>2)]=0;
 label=1192;break;
 case 1192: 
 var $898=$i2380;
 var $add2386=((($898)+(1))|0);
 $i2380=$add2386;
 label=1190;break;
 case 1193: 
 $i2388=0;
 label=1194;break;
 case 1194: 
 var $899=$i2388;
 var $cmp2390=($899|0)<3;
 if($cmp2390){label=1195;break;}else{label=1197;break;}
 case 1195: 
 var $900=$i2388;
 var $fRec278=(($this1+525564)|0);
 var $arrayidx2392=(($fRec278+($900<<2))|0);
 HEAPF32[(($arrayidx2392)>>2)]=0;
 label=1196;break;
 case 1196: 
 var $901=$i2388;
 var $add2394=((($901)+(1))|0);
 $i2388=$add2394;
 label=1194;break;
 case 1197: 
 $i2396=0;
 label=1198;break;
 case 1198: 
 var $902=$i2396;
 var $cmp2398=($902|0)<2;
 if($cmp2398){label=1199;break;}else{label=1201;break;}
 case 1199: 
 var $903=$i2396;
 var $fVec37=(($this1+525556)|0);
 var $arrayidx2400=(($fVec37+($903<<2))|0);
 HEAPF32[(($arrayidx2400)>>2)]=0;
 label=1200;break;
 case 1200: 
 var $904=$i2396;
 var $add2402=((($904)+(1))|0);
 $i2396=$add2402;
 label=1198;break;
 case 1201: 
 $i2404=0;
 label=1202;break;
 case 1202: 
 var $905=$i2404;
 var $cmp2406=($905|0)<2;
 if($cmp2406){label=1203;break;}else{label=1205;break;}
 case 1203: 
 var $906=$i2404;
 var $fRec277=(($this1+525548)|0);
 var $arrayidx2408=(($fRec277+($906<<2))|0);
 HEAPF32[(($arrayidx2408)>>2)]=0;
 label=1204;break;
 case 1204: 
 var $907=$i2404;
 var $add2410=((($907)+(1))|0);
 $i2404=$add2410;
 label=1202;break;
 case 1205: 
 $i2412=0;
 label=1206;break;
 case 1206: 
 var $908=$i2412;
 var $cmp2414=($908|0)<3;
 if($cmp2414){label=1207;break;}else{label=1209;break;}
 case 1207: 
 var $909=$i2412;
 var $fRec276=(($this1+525536)|0);
 var $arrayidx2416=(($fRec276+($909<<2))|0);
 HEAPF32[(($arrayidx2416)>>2)]=0;
 label=1208;break;
 case 1208: 
 var $910=$i2412;
 var $add2418=((($910)+(1))|0);
 $i2412=$add2418;
 label=1206;break;
 case 1209: 
 $i2420=0;
 label=1210;break;
 case 1210: 
 var $911=$i2420;
 var $cmp2422=($911|0)<2;
 if($cmp2422){label=1211;break;}else{label=1213;break;}
 case 1211: 
 var $912=$i2420;
 var $fRec281=(($this1+525528)|0);
 var $arrayidx2424=(($fRec281+($912<<2))|0);
 HEAPF32[(($arrayidx2424)>>2)]=0;
 label=1212;break;
 case 1212: 
 var $913=$i2420;
 var $add2426=((($913)+(1))|0);
 $i2420=$add2426;
 label=1210;break;
 case 1213: 
 $i2428=0;
 label=1214;break;
 case 1214: 
 var $914=$i2428;
 var $cmp2430=($914|0)<3;
 if($cmp2430){label=1215;break;}else{label=1217;break;}
 case 1215: 
 var $915=$i2428;
 var $fRec280=(($this1+525516)|0);
 var $arrayidx2432=(($fRec280+($915<<2))|0);
 HEAPF32[(($arrayidx2432)>>2)]=0;
 label=1216;break;
 case 1216: 
 var $916=$i2428;
 var $add2434=((($916)+(1))|0);
 $i2428=$add2434;
 label=1214;break;
 case 1217: 
 $i2436=0;
 label=1218;break;
 case 1218: 
 var $917=$i2436;
 var $cmp2438=($917|0)<2;
 if($cmp2438){label=1219;break;}else{label=1221;break;}
 case 1219: 
 var $918=$i2436;
 var $fRec286=(($this1+525508)|0);
 var $arrayidx2440=(($fRec286+($918<<2))|0);
 HEAPF32[(($arrayidx2440)>>2)]=0;
 label=1220;break;
 case 1220: 
 var $919=$i2436;
 var $add2442=((($919)+(1))|0);
 $i2436=$add2442;
 label=1218;break;
 case 1221: 
 $i2444=0;
 label=1222;break;
 case 1222: 
 var $920=$i2444;
 var $cmp2446=($920|0)<3;
 if($cmp2446){label=1223;break;}else{label=1225;break;}
 case 1223: 
 var $921=$i2444;
 var $fRec285=(($this1+525496)|0);
 var $arrayidx2448=(($fRec285+($921<<2))|0);
 HEAPF32[(($arrayidx2448)>>2)]=0;
 label=1224;break;
 case 1224: 
 var $922=$i2444;
 var $add2450=((($922)+(1))|0);
 $i2444=$add2450;
 label=1222;break;
 case 1225: 
 $i2452=0;
 label=1226;break;
 case 1226: 
 var $923=$i2452;
 var $cmp2454=($923|0)<3;
 if($cmp2454){label=1227;break;}else{label=1229;break;}
 case 1227: 
 var $924=$i2452;
 var $fRec284=(($this1+525484)|0);
 var $arrayidx2456=(($fRec284+($924<<2))|0);
 HEAPF32[(($arrayidx2456)>>2)]=0;
 label=1228;break;
 case 1228: 
 var $925=$i2452;
 var $add2458=((($925)+(1))|0);
 $i2452=$add2458;
 label=1226;break;
 case 1229: 
 $i2460=0;
 label=1230;break;
 case 1230: 
 var $926=$i2460;
 var $cmp2462=($926|0)<3;
 if($cmp2462){label=1231;break;}else{label=1233;break;}
 case 1231: 
 var $927=$i2460;
 var $fRec283=(($this1+525472)|0);
 var $arrayidx2464=(($fRec283+($927<<2))|0);
 HEAPF32[(($arrayidx2464)>>2)]=0;
 label=1232;break;
 case 1232: 
 var $928=$i2460;
 var $add2466=((($928)+(1))|0);
 $i2460=$add2466;
 label=1230;break;
 case 1233: 
 $i2468=0;
 label=1234;break;
 case 1234: 
 var $929=$i2468;
 var $cmp2470=($929|0)<3;
 if($cmp2470){label=1235;break;}else{label=1237;break;}
 case 1235: 
 var $930=$i2468;
 var $fRec282=(($this1+525460)|0);
 var $arrayidx2472=(($fRec282+($930<<2))|0);
 HEAPF32[(($arrayidx2472)>>2)]=0;
 label=1236;break;
 case 1236: 
 var $931=$i2468;
 var $add2474=((($931)+(1))|0);
 $i2468=$add2474;
 label=1234;break;
 case 1237: 
 $i2476=0;
 label=1238;break;
 case 1238: 
 var $932=$i2476;
 var $cmp2478=($932|0)<2;
 if($cmp2478){label=1239;break;}else{label=1241;break;}
 case 1239: 
 var $933=$i2476;
 var $fRec292=(($this1+525452)|0);
 var $arrayidx2480=(($fRec292+($933<<2))|0);
 HEAPF32[(($arrayidx2480)>>2)]=0;
 label=1240;break;
 case 1240: 
 var $934=$i2476;
 var $add2482=((($934)+(1))|0);
 $i2476=$add2482;
 label=1238;break;
 case 1241: 
 $i2484=0;
 label=1242;break;
 case 1242: 
 var $935=$i2484;
 var $cmp2486=($935|0)<3;
 if($cmp2486){label=1243;break;}else{label=1245;break;}
 case 1243: 
 var $936=$i2484;
 var $fRec291=(($this1+525440)|0);
 var $arrayidx2488=(($fRec291+($936<<2))|0);
 HEAPF32[(($arrayidx2488)>>2)]=0;
 label=1244;break;
 case 1244: 
 var $937=$i2484;
 var $add2490=((($937)+(1))|0);
 $i2484=$add2490;
 label=1242;break;
 case 1245: 
 $i2492=0;
 label=1246;break;
 case 1246: 
 var $938=$i2492;
 var $cmp2494=($938|0)<2;
 if($cmp2494){label=1247;break;}else{label=1249;break;}
 case 1247: 
 var $939=$i2492;
 var $fVec38=(($this1+525432)|0);
 var $arrayidx2496=(($fVec38+($939<<2))|0);
 HEAPF32[(($arrayidx2496)>>2)]=0;
 label=1248;break;
 case 1248: 
 var $940=$i2492;
 var $add2498=((($940)+(1))|0);
 $i2492=$add2498;
 label=1246;break;
 case 1249: 
 $i2500=0;
 label=1250;break;
 case 1250: 
 var $941=$i2500;
 var $cmp2502=($941|0)<2;
 if($cmp2502){label=1251;break;}else{label=1253;break;}
 case 1251: 
 var $942=$i2500;
 var $fRec290=(($this1+525424)|0);
 var $arrayidx2504=(($fRec290+($942<<2))|0);
 HEAPF32[(($arrayidx2504)>>2)]=0;
 label=1252;break;
 case 1252: 
 var $943=$i2500;
 var $add2506=((($943)+(1))|0);
 $i2500=$add2506;
 label=1250;break;
 case 1253: 
 $i2508=0;
 label=1254;break;
 case 1254: 
 var $944=$i2508;
 var $cmp2510=($944|0)<3;
 if($cmp2510){label=1255;break;}else{label=1257;break;}
 case 1255: 
 var $945=$i2508;
 var $fRec289=(($this1+525412)|0);
 var $arrayidx2512=(($fRec289+($945<<2))|0);
 HEAPF32[(($arrayidx2512)>>2)]=0;
 label=1256;break;
 case 1256: 
 var $946=$i2508;
 var $add2514=((($946)+(1))|0);
 $i2508=$add2514;
 label=1254;break;
 case 1257: 
 $i2516=0;
 label=1258;break;
 case 1258: 
 var $947=$i2516;
 var $cmp2518=($947|0)<3;
 if($cmp2518){label=1259;break;}else{label=1261;break;}
 case 1259: 
 var $948=$i2516;
 var $fRec288=(($this1+525400)|0);
 var $arrayidx2520=(($fRec288+($948<<2))|0);
 HEAPF32[(($arrayidx2520)>>2)]=0;
 label=1260;break;
 case 1260: 
 var $949=$i2516;
 var $add2522=((($949)+(1))|0);
 $i2516=$add2522;
 label=1258;break;
 case 1261: 
 $i2524=0;
 label=1262;break;
 case 1262: 
 var $950=$i2524;
 var $cmp2526=($950|0)<3;
 if($cmp2526){label=1263;break;}else{label=1265;break;}
 case 1263: 
 var $951=$i2524;
 var $fRec287=(($this1+525388)|0);
 var $arrayidx2528=(($fRec287+($951<<2))|0);
 HEAPF32[(($arrayidx2528)>>2)]=0;
 label=1264;break;
 case 1264: 
 var $952=$i2524;
 var $add2530=((($952)+(1))|0);
 $i2524=$add2530;
 label=1262;break;
 case 1265: 
 $i2532=0;
 label=1266;break;
 case 1266: 
 var $953=$i2532;
 var $cmp2534=($953|0)<2;
 if($cmp2534){label=1267;break;}else{label=1269;break;}
 case 1267: 
 var $954=$i2532;
 var $fRec297=(($this1+525380)|0);
 var $arrayidx2536=(($fRec297+($954<<2))|0);
 HEAPF32[(($arrayidx2536)>>2)]=0;
 label=1268;break;
 case 1268: 
 var $955=$i2532;
 var $add2538=((($955)+(1))|0);
 $i2532=$add2538;
 label=1266;break;
 case 1269: 
 $i2540=0;
 label=1270;break;
 case 1270: 
 var $956=$i2540;
 var $cmp2542=($956|0)<3;
 if($cmp2542){label=1271;break;}else{label=1273;break;}
 case 1271: 
 var $957=$i2540;
 var $fRec296=(($this1+525368)|0);
 var $arrayidx2544=(($fRec296+($957<<2))|0);
 HEAPF32[(($arrayidx2544)>>2)]=0;
 label=1272;break;
 case 1272: 
 var $958=$i2540;
 var $add2546=((($958)+(1))|0);
 $i2540=$add2546;
 label=1270;break;
 case 1273: 
 $i2548=0;
 label=1274;break;
 case 1274: 
 var $959=$i2548;
 var $cmp2550=($959|0)<2;
 if($cmp2550){label=1275;break;}else{label=1277;break;}
 case 1275: 
 var $960=$i2548;
 var $fVec39=(($this1+525360)|0);
 var $arrayidx2552=(($fVec39+($960<<2))|0);
 HEAPF32[(($arrayidx2552)>>2)]=0;
 label=1276;break;
 case 1276: 
 var $961=$i2548;
 var $add2554=((($961)+(1))|0);
 $i2548=$add2554;
 label=1274;break;
 case 1277: 
 $i2556=0;
 label=1278;break;
 case 1278: 
 var $962=$i2556;
 var $cmp2558=($962|0)<2;
 if($cmp2558){label=1279;break;}else{label=1281;break;}
 case 1279: 
 var $963=$i2556;
 var $fRec295=(($this1+525352)|0);
 var $arrayidx2560=(($fRec295+($963<<2))|0);
 HEAPF32[(($arrayidx2560)>>2)]=0;
 label=1280;break;
 case 1280: 
 var $964=$i2556;
 var $add2562=((($964)+(1))|0);
 $i2556=$add2562;
 label=1278;break;
 case 1281: 
 $i2564=0;
 label=1282;break;
 case 1282: 
 var $965=$i2564;
 var $cmp2566=($965|0)<3;
 if($cmp2566){label=1283;break;}else{label=1285;break;}
 case 1283: 
 var $966=$i2564;
 var $fRec294=(($this1+525340)|0);
 var $arrayidx2568=(($fRec294+($966<<2))|0);
 HEAPF32[(($arrayidx2568)>>2)]=0;
 label=1284;break;
 case 1284: 
 var $967=$i2564;
 var $add2570=((($967)+(1))|0);
 $i2564=$add2570;
 label=1282;break;
 case 1285: 
 $i2572=0;
 label=1286;break;
 case 1286: 
 var $968=$i2572;
 var $cmp2574=($968|0)<3;
 if($cmp2574){label=1287;break;}else{label=1289;break;}
 case 1287: 
 var $969=$i2572;
 var $fRec293=(($this1+525328)|0);
 var $arrayidx2576=(($fRec293+($969<<2))|0);
 HEAPF32[(($arrayidx2576)>>2)]=0;
 label=1288;break;
 case 1288: 
 var $970=$i2572;
 var $add2578=((($970)+(1))|0);
 $i2572=$add2578;
 label=1286;break;
 case 1289: 
 $i2580=0;
 label=1290;break;
 case 1290: 
 var $971=$i2580;
 var $cmp2582=($971|0)<2;
 if($cmp2582){label=1291;break;}else{label=1293;break;}
 case 1291: 
 var $972=$i2580;
 var $fRec301=(($this1+525320)|0);
 var $arrayidx2584=(($fRec301+($972<<2))|0);
 HEAPF32[(($arrayidx2584)>>2)]=0;
 label=1292;break;
 case 1292: 
 var $973=$i2580;
 var $add2586=((($973)+(1))|0);
 $i2580=$add2586;
 label=1290;break;
 case 1293: 
 $i2588=0;
 label=1294;break;
 case 1294: 
 var $974=$i2588;
 var $cmp2590=($974|0)<3;
 if($cmp2590){label=1295;break;}else{label=1297;break;}
 case 1295: 
 var $975=$i2588;
 var $fRec300=(($this1+525308)|0);
 var $arrayidx2592=(($fRec300+($975<<2))|0);
 HEAPF32[(($arrayidx2592)>>2)]=0;
 label=1296;break;
 case 1296: 
 var $976=$i2588;
 var $add2594=((($976)+(1))|0);
 $i2588=$add2594;
 label=1294;break;
 case 1297: 
 $i2596=0;
 label=1298;break;
 case 1298: 
 var $977=$i2596;
 var $cmp2598=($977|0)<2;
 if($cmp2598){label=1299;break;}else{label=1301;break;}
 case 1299: 
 var $978=$i2596;
 var $fVec40=(($this1+525300)|0);
 var $arrayidx2600=(($fVec40+($978<<2))|0);
 HEAPF32[(($arrayidx2600)>>2)]=0;
 label=1300;break;
 case 1300: 
 var $979=$i2596;
 var $add2602=((($979)+(1))|0);
 $i2596=$add2602;
 label=1298;break;
 case 1301: 
 $i2604=0;
 label=1302;break;
 case 1302: 
 var $980=$i2604;
 var $cmp2606=($980|0)<2;
 if($cmp2606){label=1303;break;}else{label=1305;break;}
 case 1303: 
 var $981=$i2604;
 var $fRec299=(($this1+525292)|0);
 var $arrayidx2608=(($fRec299+($981<<2))|0);
 HEAPF32[(($arrayidx2608)>>2)]=0;
 label=1304;break;
 case 1304: 
 var $982=$i2604;
 var $add2610=((($982)+(1))|0);
 $i2604=$add2610;
 label=1302;break;
 case 1305: 
 $i2612=0;
 label=1306;break;
 case 1306: 
 var $983=$i2612;
 var $cmp2614=($983|0)<3;
 if($cmp2614){label=1307;break;}else{label=1309;break;}
 case 1307: 
 var $984=$i2612;
 var $fRec298=(($this1+525280)|0);
 var $arrayidx2616=(($fRec298+($984<<2))|0);
 HEAPF32[(($arrayidx2616)>>2)]=0;
 label=1308;break;
 case 1308: 
 var $985=$i2612;
 var $add2618=((($985)+(1))|0);
 $i2612=$add2618;
 label=1306;break;
 case 1309: 
 $i2620=0;
 label=1310;break;
 case 1310: 
 var $986=$i2620;
 var $cmp2622=($986|0)<2;
 if($cmp2622){label=1311;break;}else{label=1313;break;}
 case 1311: 
 var $987=$i2620;
 var $fRec303=(($this1+525272)|0);
 var $arrayidx2624=(($fRec303+($987<<2))|0);
 HEAPF32[(($arrayidx2624)>>2)]=0;
 label=1312;break;
 case 1312: 
 var $988=$i2620;
 var $add2626=((($988)+(1))|0);
 $i2620=$add2626;
 label=1310;break;
 case 1313: 
 $i2628=0;
 label=1314;break;
 case 1314: 
 var $989=$i2628;
 var $cmp2630=($989|0)<3;
 if($cmp2630){label=1315;break;}else{label=1317;break;}
 case 1315: 
 var $990=$i2628;
 var $fRec302=(($this1+525260)|0);
 var $arrayidx2632=(($fRec302+($990<<2))|0);
 HEAPF32[(($arrayidx2632)>>2)]=0;
 label=1316;break;
 case 1316: 
 var $991=$i2628;
 var $add2634=((($991)+(1))|0);
 $i2628=$add2634;
 label=1314;break;
 case 1317: 
 $i2636=0;
 label=1318;break;
 case 1318: 
 var $992=$i2636;
 var $cmp2638=($992|0)<2;
 if($cmp2638){label=1319;break;}else{label=1321;break;}
 case 1319: 
 var $993=$i2636;
 var $fRec308=(($this1+525252)|0);
 var $arrayidx2640=(($fRec308+($993<<2))|0);
 HEAPF32[(($arrayidx2640)>>2)]=0;
 label=1320;break;
 case 1320: 
 var $994=$i2636;
 var $add2642=((($994)+(1))|0);
 $i2636=$add2642;
 label=1318;break;
 case 1321: 
 $i2644=0;
 label=1322;break;
 case 1322: 
 var $995=$i2644;
 var $cmp2646=($995|0)<3;
 if($cmp2646){label=1323;break;}else{label=1325;break;}
 case 1323: 
 var $996=$i2644;
 var $fRec307=(($this1+525240)|0);
 var $arrayidx2648=(($fRec307+($996<<2))|0);
 HEAPF32[(($arrayidx2648)>>2)]=0;
 label=1324;break;
 case 1324: 
 var $997=$i2644;
 var $add2650=((($997)+(1))|0);
 $i2644=$add2650;
 label=1322;break;
 case 1325: 
 $i2652=0;
 label=1326;break;
 case 1326: 
 var $998=$i2652;
 var $cmp2654=($998|0)<3;
 if($cmp2654){label=1327;break;}else{label=1329;break;}
 case 1327: 
 var $999=$i2652;
 var $fRec306=(($this1+525228)|0);
 var $arrayidx2656=(($fRec306+($999<<2))|0);
 HEAPF32[(($arrayidx2656)>>2)]=0;
 label=1328;break;
 case 1328: 
 var $1000=$i2652;
 var $add2658=((($1000)+(1))|0);
 $i2652=$add2658;
 label=1326;break;
 case 1329: 
 $i2660=0;
 label=1330;break;
 case 1330: 
 var $1001=$i2660;
 var $cmp2662=($1001|0)<3;
 if($cmp2662){label=1331;break;}else{label=1333;break;}
 case 1331: 
 var $1002=$i2660;
 var $fRec305=(($this1+525216)|0);
 var $arrayidx2664=(($fRec305+($1002<<2))|0);
 HEAPF32[(($arrayidx2664)>>2)]=0;
 label=1332;break;
 case 1332: 
 var $1003=$i2660;
 var $add2666=((($1003)+(1))|0);
 $i2660=$add2666;
 label=1330;break;
 case 1333: 
 $i2668=0;
 label=1334;break;
 case 1334: 
 var $1004=$i2668;
 var $cmp2670=($1004|0)<3;
 if($cmp2670){label=1335;break;}else{label=1337;break;}
 case 1335: 
 var $1005=$i2668;
 var $fRec304=(($this1+525204)|0);
 var $arrayidx2672=(($fRec304+($1005<<2))|0);
 HEAPF32[(($arrayidx2672)>>2)]=0;
 label=1336;break;
 case 1336: 
 var $1006=$i2668;
 var $add2674=((($1006)+(1))|0);
 $i2668=$add2674;
 label=1334;break;
 case 1337: 
 $i2676=0;
 label=1338;break;
 case 1338: 
 var $1007=$i2676;
 var $cmp2678=($1007|0)<2;
 if($cmp2678){label=1339;break;}else{label=1341;break;}
 case 1339: 
 var $1008=$i2676;
 var $fRec314=(($this1+525196)|0);
 var $arrayidx2680=(($fRec314+($1008<<2))|0);
 HEAPF32[(($arrayidx2680)>>2)]=0;
 label=1340;break;
 case 1340: 
 var $1009=$i2676;
 var $add2682=((($1009)+(1))|0);
 $i2676=$add2682;
 label=1338;break;
 case 1341: 
 $i2684=0;
 label=1342;break;
 case 1342: 
 var $1010=$i2684;
 var $cmp2686=($1010|0)<3;
 if($cmp2686){label=1343;break;}else{label=1345;break;}
 case 1343: 
 var $1011=$i2684;
 var $fRec313=(($this1+525184)|0);
 var $arrayidx2688=(($fRec313+($1011<<2))|0);
 HEAPF32[(($arrayidx2688)>>2)]=0;
 label=1344;break;
 case 1344: 
 var $1012=$i2684;
 var $add2690=((($1012)+(1))|0);
 $i2684=$add2690;
 label=1342;break;
 case 1345: 
 $i2692=0;
 label=1346;break;
 case 1346: 
 var $1013=$i2692;
 var $cmp2694=($1013|0)<2;
 if($cmp2694){label=1347;break;}else{label=1349;break;}
 case 1347: 
 var $1014=$i2692;
 var $fVec41=(($this1+525176)|0);
 var $arrayidx2696=(($fVec41+($1014<<2))|0);
 HEAPF32[(($arrayidx2696)>>2)]=0;
 label=1348;break;
 case 1348: 
 var $1015=$i2692;
 var $add2698=((($1015)+(1))|0);
 $i2692=$add2698;
 label=1346;break;
 case 1349: 
 $i2700=0;
 label=1350;break;
 case 1350: 
 var $1016=$i2700;
 var $cmp2702=($1016|0)<2;
 if($cmp2702){label=1351;break;}else{label=1353;break;}
 case 1351: 
 var $1017=$i2700;
 var $fRec312=(($this1+525168)|0);
 var $arrayidx2704=(($fRec312+($1017<<2))|0);
 HEAPF32[(($arrayidx2704)>>2)]=0;
 label=1352;break;
 case 1352: 
 var $1018=$i2700;
 var $add2706=((($1018)+(1))|0);
 $i2700=$add2706;
 label=1350;break;
 case 1353: 
 $i2708=0;
 label=1354;break;
 case 1354: 
 var $1019=$i2708;
 var $cmp2710=($1019|0)<3;
 if($cmp2710){label=1355;break;}else{label=1357;break;}
 case 1355: 
 var $1020=$i2708;
 var $fRec311=(($this1+525156)|0);
 var $arrayidx2712=(($fRec311+($1020<<2))|0);
 HEAPF32[(($arrayidx2712)>>2)]=0;
 label=1356;break;
 case 1356: 
 var $1021=$i2708;
 var $add2714=((($1021)+(1))|0);
 $i2708=$add2714;
 label=1354;break;
 case 1357: 
 $i2716=0;
 label=1358;break;
 case 1358: 
 var $1022=$i2716;
 var $cmp2718=($1022|0)<3;
 if($cmp2718){label=1359;break;}else{label=1361;break;}
 case 1359: 
 var $1023=$i2716;
 var $fRec310=(($this1+525144)|0);
 var $arrayidx2720=(($fRec310+($1023<<2))|0);
 HEAPF32[(($arrayidx2720)>>2)]=0;
 label=1360;break;
 case 1360: 
 var $1024=$i2716;
 var $add2722=((($1024)+(1))|0);
 $i2716=$add2722;
 label=1358;break;
 case 1361: 
 $i2724=0;
 label=1362;break;
 case 1362: 
 var $1025=$i2724;
 var $cmp2726=($1025|0)<3;
 if($cmp2726){label=1363;break;}else{label=1365;break;}
 case 1363: 
 var $1026=$i2724;
 var $fRec309=(($this1+525132)|0);
 var $arrayidx2728=(($fRec309+($1026<<2))|0);
 HEAPF32[(($arrayidx2728)>>2)]=0;
 label=1364;break;
 case 1364: 
 var $1027=$i2724;
 var $add2730=((($1027)+(1))|0);
 $i2724=$add2730;
 label=1362;break;
 case 1365: 
 $i2732=0;
 label=1366;break;
 case 1366: 
 var $1028=$i2732;
 var $cmp2734=($1028|0)<2;
 if($cmp2734){label=1367;break;}else{label=1369;break;}
 case 1367: 
 var $1029=$i2732;
 var $fRec319=(($this1+525124)|0);
 var $arrayidx2736=(($fRec319+($1029<<2))|0);
 HEAPF32[(($arrayidx2736)>>2)]=0;
 label=1368;break;
 case 1368: 
 var $1030=$i2732;
 var $add2738=((($1030)+(1))|0);
 $i2732=$add2738;
 label=1366;break;
 case 1369: 
 $i2740=0;
 label=1370;break;
 case 1370: 
 var $1031=$i2740;
 var $cmp2742=($1031|0)<3;
 if($cmp2742){label=1371;break;}else{label=1373;break;}
 case 1371: 
 var $1032=$i2740;
 var $fRec318=(($this1+525112)|0);
 var $arrayidx2744=(($fRec318+($1032<<2))|0);
 HEAPF32[(($arrayidx2744)>>2)]=0;
 label=1372;break;
 case 1372: 
 var $1033=$i2740;
 var $add2746=((($1033)+(1))|0);
 $i2740=$add2746;
 label=1370;break;
 case 1373: 
 $i2748=0;
 label=1374;break;
 case 1374: 
 var $1034=$i2748;
 var $cmp2750=($1034|0)<2;
 if($cmp2750){label=1375;break;}else{label=1377;break;}
 case 1375: 
 var $1035=$i2748;
 var $fVec42=(($this1+525104)|0);
 var $arrayidx2752=(($fVec42+($1035<<2))|0);
 HEAPF32[(($arrayidx2752)>>2)]=0;
 label=1376;break;
 case 1376: 
 var $1036=$i2748;
 var $add2754=((($1036)+(1))|0);
 $i2748=$add2754;
 label=1374;break;
 case 1377: 
 $i2756=0;
 label=1378;break;
 case 1378: 
 var $1037=$i2756;
 var $cmp2758=($1037|0)<2;
 if($cmp2758){label=1379;break;}else{label=1381;break;}
 case 1379: 
 var $1038=$i2756;
 var $fRec317=(($this1+525096)|0);
 var $arrayidx2760=(($fRec317+($1038<<2))|0);
 HEAPF32[(($arrayidx2760)>>2)]=0;
 label=1380;break;
 case 1380: 
 var $1039=$i2756;
 var $add2762=((($1039)+(1))|0);
 $i2756=$add2762;
 label=1378;break;
 case 1381: 
 $i2764=0;
 label=1382;break;
 case 1382: 
 var $1040=$i2764;
 var $cmp2766=($1040|0)<3;
 if($cmp2766){label=1383;break;}else{label=1385;break;}
 case 1383: 
 var $1041=$i2764;
 var $fRec316=(($this1+525084)|0);
 var $arrayidx2768=(($fRec316+($1041<<2))|0);
 HEAPF32[(($arrayidx2768)>>2)]=0;
 label=1384;break;
 case 1384: 
 var $1042=$i2764;
 var $add2770=((($1042)+(1))|0);
 $i2764=$add2770;
 label=1382;break;
 case 1385: 
 $i2772=0;
 label=1386;break;
 case 1386: 
 var $1043=$i2772;
 var $cmp2774=($1043|0)<3;
 if($cmp2774){label=1387;break;}else{label=1389;break;}
 case 1387: 
 var $1044=$i2772;
 var $fRec315=(($this1+525072)|0);
 var $arrayidx2776=(($fRec315+($1044<<2))|0);
 HEAPF32[(($arrayidx2776)>>2)]=0;
 label=1388;break;
 case 1388: 
 var $1045=$i2772;
 var $add2778=((($1045)+(1))|0);
 $i2772=$add2778;
 label=1386;break;
 case 1389: 
 $i2780=0;
 label=1390;break;
 case 1390: 
 var $1046=$i2780;
 var $cmp2782=($1046|0)<2;
 if($cmp2782){label=1391;break;}else{label=1393;break;}
 case 1391: 
 var $1047=$i2780;
 var $fRec323=(($this1+525064)|0);
 var $arrayidx2784=(($fRec323+($1047<<2))|0);
 HEAPF32[(($arrayidx2784)>>2)]=0;
 label=1392;break;
 case 1392: 
 var $1048=$i2780;
 var $add2786=((($1048)+(1))|0);
 $i2780=$add2786;
 label=1390;break;
 case 1393: 
 $i2788=0;
 label=1394;break;
 case 1394: 
 var $1049=$i2788;
 var $cmp2790=($1049|0)<3;
 if($cmp2790){label=1395;break;}else{label=1397;break;}
 case 1395: 
 var $1050=$i2788;
 var $fRec322=(($this1+525052)|0);
 var $arrayidx2792=(($fRec322+($1050<<2))|0);
 HEAPF32[(($arrayidx2792)>>2)]=0;
 label=1396;break;
 case 1396: 
 var $1051=$i2788;
 var $add2794=((($1051)+(1))|0);
 $i2788=$add2794;
 label=1394;break;
 case 1397: 
 $i2796=0;
 label=1398;break;
 case 1398: 
 var $1052=$i2796;
 var $cmp2798=($1052|0)<2;
 if($cmp2798){label=1399;break;}else{label=1401;break;}
 case 1399: 
 var $1053=$i2796;
 var $fVec43=(($this1+525044)|0);
 var $arrayidx2800=(($fVec43+($1053<<2))|0);
 HEAPF32[(($arrayidx2800)>>2)]=0;
 label=1400;break;
 case 1400: 
 var $1054=$i2796;
 var $add2802=((($1054)+(1))|0);
 $i2796=$add2802;
 label=1398;break;
 case 1401: 
 $i2804=0;
 label=1402;break;
 case 1402: 
 var $1055=$i2804;
 var $cmp2806=($1055|0)<2;
 if($cmp2806){label=1403;break;}else{label=1405;break;}
 case 1403: 
 var $1056=$i2804;
 var $fRec321=(($this1+525036)|0);
 var $arrayidx2808=(($fRec321+($1056<<2))|0);
 HEAPF32[(($arrayidx2808)>>2)]=0;
 label=1404;break;
 case 1404: 
 var $1057=$i2804;
 var $add2810=((($1057)+(1))|0);
 $i2804=$add2810;
 label=1402;break;
 case 1405: 
 $i2812=0;
 label=1406;break;
 case 1406: 
 var $1058=$i2812;
 var $cmp2814=($1058|0)<3;
 if($cmp2814){label=1407;break;}else{label=1409;break;}
 case 1407: 
 var $1059=$i2812;
 var $fRec320=(($this1+525024)|0);
 var $arrayidx2816=(($fRec320+($1059<<2))|0);
 HEAPF32[(($arrayidx2816)>>2)]=0;
 label=1408;break;
 case 1408: 
 var $1060=$i2812;
 var $add2818=((($1060)+(1))|0);
 $i2812=$add2818;
 label=1406;break;
 case 1409: 
 $i2820=0;
 label=1410;break;
 case 1410: 
 var $1061=$i2820;
 var $cmp2822=($1061|0)<2;
 if($cmp2822){label=1411;break;}else{label=1413;break;}
 case 1411: 
 var $1062=$i2820;
 var $fRec325=(($this1+525016)|0);
 var $arrayidx2824=(($fRec325+($1062<<2))|0);
 HEAPF32[(($arrayidx2824)>>2)]=0;
 label=1412;break;
 case 1412: 
 var $1063=$i2820;
 var $add2826=((($1063)+(1))|0);
 $i2820=$add2826;
 label=1410;break;
 case 1413: 
 $i2828=0;
 label=1414;break;
 case 1414: 
 var $1064=$i2828;
 var $cmp2830=($1064|0)<3;
 if($cmp2830){label=1415;break;}else{label=1417;break;}
 case 1415: 
 var $1065=$i2828;
 var $fRec324=(($this1+525004)|0);
 var $arrayidx2832=(($fRec324+($1065<<2))|0);
 HEAPF32[(($arrayidx2832)>>2)]=0;
 label=1416;break;
 case 1416: 
 var $1066=$i2828;
 var $add2834=((($1066)+(1))|0);
 $i2828=$add2834;
 label=1414;break;
 case 1417: 
 $i2836=0;
 label=1418;break;
 case 1418: 
 var $1067=$i2836;
 var $cmp2838=($1067|0)<2;
 if($cmp2838){label=1419;break;}else{label=1421;break;}
 case 1419: 
 var $1068=$i2836;
 var $fRec330=(($this1+524996)|0);
 var $arrayidx2840=(($fRec330+($1068<<2))|0);
 HEAPF32[(($arrayidx2840)>>2)]=0;
 label=1420;break;
 case 1420: 
 var $1069=$i2836;
 var $add2842=((($1069)+(1))|0);
 $i2836=$add2842;
 label=1418;break;
 case 1421: 
 $i2844=0;
 label=1422;break;
 case 1422: 
 var $1070=$i2844;
 var $cmp2846=($1070|0)<3;
 if($cmp2846){label=1423;break;}else{label=1425;break;}
 case 1423: 
 var $1071=$i2844;
 var $fRec329=(($this1+524984)|0);
 var $arrayidx2848=(($fRec329+($1071<<2))|0);
 HEAPF32[(($arrayidx2848)>>2)]=0;
 label=1424;break;
 case 1424: 
 var $1072=$i2844;
 var $add2850=((($1072)+(1))|0);
 $i2844=$add2850;
 label=1422;break;
 case 1425: 
 $i2852=0;
 label=1426;break;
 case 1426: 
 var $1073=$i2852;
 var $cmp2854=($1073|0)<3;
 if($cmp2854){label=1427;break;}else{label=1429;break;}
 case 1427: 
 var $1074=$i2852;
 var $fRec328=(($this1+524972)|0);
 var $arrayidx2856=(($fRec328+($1074<<2))|0);
 HEAPF32[(($arrayidx2856)>>2)]=0;
 label=1428;break;
 case 1428: 
 var $1075=$i2852;
 var $add2858=((($1075)+(1))|0);
 $i2852=$add2858;
 label=1426;break;
 case 1429: 
 $i2860=0;
 label=1430;break;
 case 1430: 
 var $1076=$i2860;
 var $cmp2862=($1076|0)<3;
 if($cmp2862){label=1431;break;}else{label=1433;break;}
 case 1431: 
 var $1077=$i2860;
 var $fRec327=(($this1+524960)|0);
 var $arrayidx2864=(($fRec327+($1077<<2))|0);
 HEAPF32[(($arrayidx2864)>>2)]=0;
 label=1432;break;
 case 1432: 
 var $1078=$i2860;
 var $add2866=((($1078)+(1))|0);
 $i2860=$add2866;
 label=1430;break;
 case 1433: 
 $i2868=0;
 label=1434;break;
 case 1434: 
 var $1079=$i2868;
 var $cmp2870=($1079|0)<3;
 if($cmp2870){label=1435;break;}else{label=1437;break;}
 case 1435: 
 var $1080=$i2868;
 var $fRec326=(($this1+524948)|0);
 var $arrayidx2872=(($fRec326+($1080<<2))|0);
 HEAPF32[(($arrayidx2872)>>2)]=0;
 label=1436;break;
 case 1436: 
 var $1081=$i2868;
 var $add2874=((($1081)+(1))|0);
 $i2868=$add2874;
 label=1434;break;
 case 1437: 
 $i2876=0;
 label=1438;break;
 case 1438: 
 var $1082=$i2876;
 var $cmp2878=($1082|0)<2;
 if($cmp2878){label=1439;break;}else{label=1441;break;}
 case 1439: 
 var $1083=$i2876;
 var $fRec336=(($this1+524940)|0);
 var $arrayidx2880=(($fRec336+($1083<<2))|0);
 HEAPF32[(($arrayidx2880)>>2)]=0;
 label=1440;break;
 case 1440: 
 var $1084=$i2876;
 var $add2882=((($1084)+(1))|0);
 $i2876=$add2882;
 label=1438;break;
 case 1441: 
 $i2884=0;
 label=1442;break;
 case 1442: 
 var $1085=$i2884;
 var $cmp2886=($1085|0)<3;
 if($cmp2886){label=1443;break;}else{label=1445;break;}
 case 1443: 
 var $1086=$i2884;
 var $fRec335=(($this1+524928)|0);
 var $arrayidx2888=(($fRec335+($1086<<2))|0);
 HEAPF32[(($arrayidx2888)>>2)]=0;
 label=1444;break;
 case 1444: 
 var $1087=$i2884;
 var $add2890=((($1087)+(1))|0);
 $i2884=$add2890;
 label=1442;break;
 case 1445: 
 $i2892=0;
 label=1446;break;
 case 1446: 
 var $1088=$i2892;
 var $cmp2894=($1088|0)<2;
 if($cmp2894){label=1447;break;}else{label=1449;break;}
 case 1447: 
 var $1089=$i2892;
 var $fVec44=(($this1+524920)|0);
 var $arrayidx2896=(($fVec44+($1089<<2))|0);
 HEAPF32[(($arrayidx2896)>>2)]=0;
 label=1448;break;
 case 1448: 
 var $1090=$i2892;
 var $add2898=((($1090)+(1))|0);
 $i2892=$add2898;
 label=1446;break;
 case 1449: 
 $i2900=0;
 label=1450;break;
 case 1450: 
 var $1091=$i2900;
 var $cmp2902=($1091|0)<2;
 if($cmp2902){label=1451;break;}else{label=1453;break;}
 case 1451: 
 var $1092=$i2900;
 var $fRec334=(($this1+524912)|0);
 var $arrayidx2904=(($fRec334+($1092<<2))|0);
 HEAPF32[(($arrayidx2904)>>2)]=0;
 label=1452;break;
 case 1452: 
 var $1093=$i2900;
 var $add2906=((($1093)+(1))|0);
 $i2900=$add2906;
 label=1450;break;
 case 1453: 
 $i2908=0;
 label=1454;break;
 case 1454: 
 var $1094=$i2908;
 var $cmp2910=($1094|0)<3;
 if($cmp2910){label=1455;break;}else{label=1457;break;}
 case 1455: 
 var $1095=$i2908;
 var $fRec333=(($this1+524900)|0);
 var $arrayidx2912=(($fRec333+($1095<<2))|0);
 HEAPF32[(($arrayidx2912)>>2)]=0;
 label=1456;break;
 case 1456: 
 var $1096=$i2908;
 var $add2914=((($1096)+(1))|0);
 $i2908=$add2914;
 label=1454;break;
 case 1457: 
 $i2916=0;
 label=1458;break;
 case 1458: 
 var $1097=$i2916;
 var $cmp2918=($1097|0)<3;
 if($cmp2918){label=1459;break;}else{label=1461;break;}
 case 1459: 
 var $1098=$i2916;
 var $fRec332=(($this1+524888)|0);
 var $arrayidx2920=(($fRec332+($1098<<2))|0);
 HEAPF32[(($arrayidx2920)>>2)]=0;
 label=1460;break;
 case 1460: 
 var $1099=$i2916;
 var $add2922=((($1099)+(1))|0);
 $i2916=$add2922;
 label=1458;break;
 case 1461: 
 $i2924=0;
 label=1462;break;
 case 1462: 
 var $1100=$i2924;
 var $cmp2926=($1100|0)<3;
 if($cmp2926){label=1463;break;}else{label=1465;break;}
 case 1463: 
 var $1101=$i2924;
 var $fRec331=(($this1+524876)|0);
 var $arrayidx2928=(($fRec331+($1101<<2))|0);
 HEAPF32[(($arrayidx2928)>>2)]=0;
 label=1464;break;
 case 1464: 
 var $1102=$i2924;
 var $add2930=((($1102)+(1))|0);
 $i2924=$add2930;
 label=1462;break;
 case 1465: 
 $i2932=0;
 label=1466;break;
 case 1466: 
 var $1103=$i2932;
 var $cmp2934=($1103|0)<2;
 if($cmp2934){label=1467;break;}else{label=1469;break;}
 case 1467: 
 var $1104=$i2932;
 var $fRec341=(($this1+524868)|0);
 var $arrayidx2936=(($fRec341+($1104<<2))|0);
 HEAPF32[(($arrayidx2936)>>2)]=0;
 label=1468;break;
 case 1468: 
 var $1105=$i2932;
 var $add2938=((($1105)+(1))|0);
 $i2932=$add2938;
 label=1466;break;
 case 1469: 
 $i2940=0;
 label=1470;break;
 case 1470: 
 var $1106=$i2940;
 var $cmp2942=($1106|0)<3;
 if($cmp2942){label=1471;break;}else{label=1473;break;}
 case 1471: 
 var $1107=$i2940;
 var $fRec340=(($this1+524856)|0);
 var $arrayidx2944=(($fRec340+($1107<<2))|0);
 HEAPF32[(($arrayidx2944)>>2)]=0;
 label=1472;break;
 case 1472: 
 var $1108=$i2940;
 var $add2946=((($1108)+(1))|0);
 $i2940=$add2946;
 label=1470;break;
 case 1473: 
 $i2948=0;
 label=1474;break;
 case 1474: 
 var $1109=$i2948;
 var $cmp2950=($1109|0)<2;
 if($cmp2950){label=1475;break;}else{label=1477;break;}
 case 1475: 
 var $1110=$i2948;
 var $fVec45=(($this1+524848)|0);
 var $arrayidx2952=(($fVec45+($1110<<2))|0);
 HEAPF32[(($arrayidx2952)>>2)]=0;
 label=1476;break;
 case 1476: 
 var $1111=$i2948;
 var $add2954=((($1111)+(1))|0);
 $i2948=$add2954;
 label=1474;break;
 case 1477: 
 $i2956=0;
 label=1478;break;
 case 1478: 
 var $1112=$i2956;
 var $cmp2958=($1112|0)<2;
 if($cmp2958){label=1479;break;}else{label=1481;break;}
 case 1479: 
 var $1113=$i2956;
 var $fRec339=(($this1+524840)|0);
 var $arrayidx2960=(($fRec339+($1113<<2))|0);
 HEAPF32[(($arrayidx2960)>>2)]=0;
 label=1480;break;
 case 1480: 
 var $1114=$i2956;
 var $add2962=((($1114)+(1))|0);
 $i2956=$add2962;
 label=1478;break;
 case 1481: 
 $i2964=0;
 label=1482;break;
 case 1482: 
 var $1115=$i2964;
 var $cmp2966=($1115|0)<3;
 if($cmp2966){label=1483;break;}else{label=1485;break;}
 case 1483: 
 var $1116=$i2964;
 var $fRec338=(($this1+524828)|0);
 var $arrayidx2968=(($fRec338+($1116<<2))|0);
 HEAPF32[(($arrayidx2968)>>2)]=0;
 label=1484;break;
 case 1484: 
 var $1117=$i2964;
 var $add2970=((($1117)+(1))|0);
 $i2964=$add2970;
 label=1482;break;
 case 1485: 
 $i2972=0;
 label=1486;break;
 case 1486: 
 var $1118=$i2972;
 var $cmp2974=($1118|0)<3;
 if($cmp2974){label=1487;break;}else{label=1489;break;}
 case 1487: 
 var $1119=$i2972;
 var $fRec337=(($this1+524816)|0);
 var $arrayidx2976=(($fRec337+($1119<<2))|0);
 HEAPF32[(($arrayidx2976)>>2)]=0;
 label=1488;break;
 case 1488: 
 var $1120=$i2972;
 var $add2978=((($1120)+(1))|0);
 $i2972=$add2978;
 label=1486;break;
 case 1489: 
 $i2980=0;
 label=1490;break;
 case 1490: 
 var $1121=$i2980;
 var $cmp2982=($1121|0)<2;
 if($cmp2982){label=1491;break;}else{label=1493;break;}
 case 1491: 
 var $1122=$i2980;
 var $fRec345=(($this1+524808)|0);
 var $arrayidx2984=(($fRec345+($1122<<2))|0);
 HEAPF32[(($arrayidx2984)>>2)]=0;
 label=1492;break;
 case 1492: 
 var $1123=$i2980;
 var $add2986=((($1123)+(1))|0);
 $i2980=$add2986;
 label=1490;break;
 case 1493: 
 $i2988=0;
 label=1494;break;
 case 1494: 
 var $1124=$i2988;
 var $cmp2990=($1124|0)<3;
 if($cmp2990){label=1495;break;}else{label=1497;break;}
 case 1495: 
 var $1125=$i2988;
 var $fRec344=(($this1+524796)|0);
 var $arrayidx2992=(($fRec344+($1125<<2))|0);
 HEAPF32[(($arrayidx2992)>>2)]=0;
 label=1496;break;
 case 1496: 
 var $1126=$i2988;
 var $add2994=((($1126)+(1))|0);
 $i2988=$add2994;
 label=1494;break;
 case 1497: 
 $i2996=0;
 label=1498;break;
 case 1498: 
 var $1127=$i2996;
 var $cmp2998=($1127|0)<2;
 if($cmp2998){label=1499;break;}else{label=1501;break;}
 case 1499: 
 var $1128=$i2996;
 var $fVec46=(($this1+524788)|0);
 var $arrayidx3000=(($fVec46+($1128<<2))|0);
 HEAPF32[(($arrayidx3000)>>2)]=0;
 label=1500;break;
 case 1500: 
 var $1129=$i2996;
 var $add3002=((($1129)+(1))|0);
 $i2996=$add3002;
 label=1498;break;
 case 1501: 
 $i3004=0;
 label=1502;break;
 case 1502: 
 var $1130=$i3004;
 var $cmp3006=($1130|0)<2;
 if($cmp3006){label=1503;break;}else{label=1505;break;}
 case 1503: 
 var $1131=$i3004;
 var $fRec343=(($this1+524780)|0);
 var $arrayidx3008=(($fRec343+($1131<<2))|0);
 HEAPF32[(($arrayidx3008)>>2)]=0;
 label=1504;break;
 case 1504: 
 var $1132=$i3004;
 var $add3010=((($1132)+(1))|0);
 $i3004=$add3010;
 label=1502;break;
 case 1505: 
 $i3012=0;
 label=1506;break;
 case 1506: 
 var $1133=$i3012;
 var $cmp3014=($1133|0)<3;
 if($cmp3014){label=1507;break;}else{label=1509;break;}
 case 1507: 
 var $1134=$i3012;
 var $fRec342=(($this1+524768)|0);
 var $arrayidx3016=(($fRec342+($1134<<2))|0);
 HEAPF32[(($arrayidx3016)>>2)]=0;
 label=1508;break;
 case 1508: 
 var $1135=$i3012;
 var $add3018=((($1135)+(1))|0);
 $i3012=$add3018;
 label=1506;break;
 case 1509: 
 $i3020=0;
 label=1510;break;
 case 1510: 
 var $1136=$i3020;
 var $cmp3022=($1136|0)<2;
 if($cmp3022){label=1511;break;}else{label=1513;break;}
 case 1511: 
 var $1137=$i3020;
 var $fRec347=(($this1+524760)|0);
 var $arrayidx3024=(($fRec347+($1137<<2))|0);
 HEAPF32[(($arrayidx3024)>>2)]=0;
 label=1512;break;
 case 1512: 
 var $1138=$i3020;
 var $add3026=((($1138)+(1))|0);
 $i3020=$add3026;
 label=1510;break;
 case 1513: 
 $i3028=0;
 label=1514;break;
 case 1514: 
 var $1139=$i3028;
 var $cmp3030=($1139|0)<3;
 if($cmp3030){label=1515;break;}else{label=1517;break;}
 case 1515: 
 var $1140=$i3028;
 var $fRec346=(($this1+524748)|0);
 var $arrayidx3032=(($fRec346+($1140<<2))|0);
 HEAPF32[(($arrayidx3032)>>2)]=0;
 label=1516;break;
 case 1516: 
 var $1141=$i3028;
 var $add3034=((($1141)+(1))|0);
 $i3028=$add3034;
 label=1514;break;
 case 1517: 
 $i3036=0;
 label=1518;break;
 case 1518: 
 var $1142=$i3036;
 var $cmp3038=($1142|0)<2;
 if($cmp3038){label=1519;break;}else{label=1521;break;}
 case 1519: 
 var $1143=$i3036;
 var $fRec352=(($this1+524740)|0);
 var $arrayidx3040=(($fRec352+($1143<<2))|0);
 HEAPF32[(($arrayidx3040)>>2)]=0;
 label=1520;break;
 case 1520: 
 var $1144=$i3036;
 var $add3042=((($1144)+(1))|0);
 $i3036=$add3042;
 label=1518;break;
 case 1521: 
 $i3044=0;
 label=1522;break;
 case 1522: 
 var $1145=$i3044;
 var $cmp3046=($1145|0)<3;
 if($cmp3046){label=1523;break;}else{label=1525;break;}
 case 1523: 
 var $1146=$i3044;
 var $fRec351=(($this1+524728)|0);
 var $arrayidx3048=(($fRec351+($1146<<2))|0);
 HEAPF32[(($arrayidx3048)>>2)]=0;
 label=1524;break;
 case 1524: 
 var $1147=$i3044;
 var $add3050=((($1147)+(1))|0);
 $i3044=$add3050;
 label=1522;break;
 case 1525: 
 $i3052=0;
 label=1526;break;
 case 1526: 
 var $1148=$i3052;
 var $cmp3054=($1148|0)<3;
 if($cmp3054){label=1527;break;}else{label=1529;break;}
 case 1527: 
 var $1149=$i3052;
 var $fRec350=(($this1+524716)|0);
 var $arrayidx3056=(($fRec350+($1149<<2))|0);
 HEAPF32[(($arrayidx3056)>>2)]=0;
 label=1528;break;
 case 1528: 
 var $1150=$i3052;
 var $add3058=((($1150)+(1))|0);
 $i3052=$add3058;
 label=1526;break;
 case 1529: 
 $i3060=0;
 label=1530;break;
 case 1530: 
 var $1151=$i3060;
 var $cmp3062=($1151|0)<3;
 if($cmp3062){label=1531;break;}else{label=1533;break;}
 case 1531: 
 var $1152=$i3060;
 var $fRec349=(($this1+524704)|0);
 var $arrayidx3064=(($fRec349+($1152<<2))|0);
 HEAPF32[(($arrayidx3064)>>2)]=0;
 label=1532;break;
 case 1532: 
 var $1153=$i3060;
 var $add3066=((($1153)+(1))|0);
 $i3060=$add3066;
 label=1530;break;
 case 1533: 
 $i3068=0;
 label=1534;break;
 case 1534: 
 var $1154=$i3068;
 var $cmp3070=($1154|0)<3;
 if($cmp3070){label=1535;break;}else{label=1537;break;}
 case 1535: 
 var $1155=$i3068;
 var $fRec348=(($this1+524692)|0);
 var $arrayidx3072=(($fRec348+($1155<<2))|0);
 HEAPF32[(($arrayidx3072)>>2)]=0;
 label=1536;break;
 case 1536: 
 var $1156=$i3068;
 var $add3074=((($1156)+(1))|0);
 $i3068=$add3074;
 label=1534;break;
 case 1537: 
 $i3076=0;
 label=1538;break;
 case 1538: 
 var $1157=$i3076;
 var $cmp3078=($1157|0)<2;
 if($cmp3078){label=1539;break;}else{label=1541;break;}
 case 1539: 
 var $1158=$i3076;
 var $fRec358=(($this1+524684)|0);
 var $arrayidx3080=(($fRec358+($1158<<2))|0);
 HEAPF32[(($arrayidx3080)>>2)]=0;
 label=1540;break;
 case 1540: 
 var $1159=$i3076;
 var $add3082=((($1159)+(1))|0);
 $i3076=$add3082;
 label=1538;break;
 case 1541: 
 $i3084=0;
 label=1542;break;
 case 1542: 
 var $1160=$i3084;
 var $cmp3086=($1160|0)<3;
 if($cmp3086){label=1543;break;}else{label=1545;break;}
 case 1543: 
 var $1161=$i3084;
 var $fRec357=(($this1+524672)|0);
 var $arrayidx3088=(($fRec357+($1161<<2))|0);
 HEAPF32[(($arrayidx3088)>>2)]=0;
 label=1544;break;
 case 1544: 
 var $1162=$i3084;
 var $add3090=((($1162)+(1))|0);
 $i3084=$add3090;
 label=1542;break;
 case 1545: 
 $i3092=0;
 label=1546;break;
 case 1546: 
 var $1163=$i3092;
 var $cmp3094=($1163|0)<2;
 if($cmp3094){label=1547;break;}else{label=1549;break;}
 case 1547: 
 var $1164=$i3092;
 var $fVec47=(($this1+524664)|0);
 var $arrayidx3096=(($fVec47+($1164<<2))|0);
 HEAPF32[(($arrayidx3096)>>2)]=0;
 label=1548;break;
 case 1548: 
 var $1165=$i3092;
 var $add3098=((($1165)+(1))|0);
 $i3092=$add3098;
 label=1546;break;
 case 1549: 
 $i3100=0;
 label=1550;break;
 case 1550: 
 var $1166=$i3100;
 var $cmp3102=($1166|0)<2;
 if($cmp3102){label=1551;break;}else{label=1553;break;}
 case 1551: 
 var $1167=$i3100;
 var $fRec356=(($this1+524656)|0);
 var $arrayidx3104=(($fRec356+($1167<<2))|0);
 HEAPF32[(($arrayidx3104)>>2)]=0;
 label=1552;break;
 case 1552: 
 var $1168=$i3100;
 var $add3106=((($1168)+(1))|0);
 $i3100=$add3106;
 label=1550;break;
 case 1553: 
 $i3108=0;
 label=1554;break;
 case 1554: 
 var $1169=$i3108;
 var $cmp3110=($1169|0)<3;
 if($cmp3110){label=1555;break;}else{label=1557;break;}
 case 1555: 
 var $1170=$i3108;
 var $fRec355=(($this1+524644)|0);
 var $arrayidx3112=(($fRec355+($1170<<2))|0);
 HEAPF32[(($arrayidx3112)>>2)]=0;
 label=1556;break;
 case 1556: 
 var $1171=$i3108;
 var $add3114=((($1171)+(1))|0);
 $i3108=$add3114;
 label=1554;break;
 case 1557: 
 $i3116=0;
 label=1558;break;
 case 1558: 
 var $1172=$i3116;
 var $cmp3118=($1172|0)<3;
 if($cmp3118){label=1559;break;}else{label=1561;break;}
 case 1559: 
 var $1173=$i3116;
 var $fRec354=(($this1+524632)|0);
 var $arrayidx3120=(($fRec354+($1173<<2))|0);
 HEAPF32[(($arrayidx3120)>>2)]=0;
 label=1560;break;
 case 1560: 
 var $1174=$i3116;
 var $add3122=((($1174)+(1))|0);
 $i3116=$add3122;
 label=1558;break;
 case 1561: 
 $i3124=0;
 label=1562;break;
 case 1562: 
 var $1175=$i3124;
 var $cmp3126=($1175|0)<3;
 if($cmp3126){label=1563;break;}else{label=1565;break;}
 case 1563: 
 var $1176=$i3124;
 var $fRec353=(($this1+524620)|0);
 var $arrayidx3128=(($fRec353+($1176<<2))|0);
 HEAPF32[(($arrayidx3128)>>2)]=0;
 label=1564;break;
 case 1564: 
 var $1177=$i3124;
 var $add3130=((($1177)+(1))|0);
 $i3124=$add3130;
 label=1562;break;
 case 1565: 
 $i3132=0;
 label=1566;break;
 case 1566: 
 var $1178=$i3132;
 var $cmp3134=($1178|0)<2;
 if($cmp3134){label=1567;break;}else{label=1569;break;}
 case 1567: 
 var $1179=$i3132;
 var $fRec363=(($this1+524612)|0);
 var $arrayidx3136=(($fRec363+($1179<<2))|0);
 HEAPF32[(($arrayidx3136)>>2)]=0;
 label=1568;break;
 case 1568: 
 var $1180=$i3132;
 var $add3138=((($1180)+(1))|0);
 $i3132=$add3138;
 label=1566;break;
 case 1569: 
 $i3140=0;
 label=1570;break;
 case 1570: 
 var $1181=$i3140;
 var $cmp3142=($1181|0)<3;
 if($cmp3142){label=1571;break;}else{label=1573;break;}
 case 1571: 
 var $1182=$i3140;
 var $fRec362=(($this1+524600)|0);
 var $arrayidx3144=(($fRec362+($1182<<2))|0);
 HEAPF32[(($arrayidx3144)>>2)]=0;
 label=1572;break;
 case 1572: 
 var $1183=$i3140;
 var $add3146=((($1183)+(1))|0);
 $i3140=$add3146;
 label=1570;break;
 case 1573: 
 $i3148=0;
 label=1574;break;
 case 1574: 
 var $1184=$i3148;
 var $cmp3150=($1184|0)<2;
 if($cmp3150){label=1575;break;}else{label=1577;break;}
 case 1575: 
 var $1185=$i3148;
 var $fVec48=(($this1+524592)|0);
 var $arrayidx3152=(($fVec48+($1185<<2))|0);
 HEAPF32[(($arrayidx3152)>>2)]=0;
 label=1576;break;
 case 1576: 
 var $1186=$i3148;
 var $add3154=((($1186)+(1))|0);
 $i3148=$add3154;
 label=1574;break;
 case 1577: 
 $i3156=0;
 label=1578;break;
 case 1578: 
 var $1187=$i3156;
 var $cmp3158=($1187|0)<2;
 if($cmp3158){label=1579;break;}else{label=1581;break;}
 case 1579: 
 var $1188=$i3156;
 var $fRec361=(($this1+524584)|0);
 var $arrayidx3160=(($fRec361+($1188<<2))|0);
 HEAPF32[(($arrayidx3160)>>2)]=0;
 label=1580;break;
 case 1580: 
 var $1189=$i3156;
 var $add3162=((($1189)+(1))|0);
 $i3156=$add3162;
 label=1578;break;
 case 1581: 
 $i3164=0;
 label=1582;break;
 case 1582: 
 var $1190=$i3164;
 var $cmp3166=($1190|0)<3;
 if($cmp3166){label=1583;break;}else{label=1585;break;}
 case 1583: 
 var $1191=$i3164;
 var $fRec360=(($this1+524572)|0);
 var $arrayidx3168=(($fRec360+($1191<<2))|0);
 HEAPF32[(($arrayidx3168)>>2)]=0;
 label=1584;break;
 case 1584: 
 var $1192=$i3164;
 var $add3170=((($1192)+(1))|0);
 $i3164=$add3170;
 label=1582;break;
 case 1585: 
 $i3172=0;
 label=1586;break;
 case 1586: 
 var $1193=$i3172;
 var $cmp3174=($1193|0)<3;
 if($cmp3174){label=1587;break;}else{label=1589;break;}
 case 1587: 
 var $1194=$i3172;
 var $fRec359=(($this1+524560)|0);
 var $arrayidx3176=(($fRec359+($1194<<2))|0);
 HEAPF32[(($arrayidx3176)>>2)]=0;
 label=1588;break;
 case 1588: 
 var $1195=$i3172;
 var $add3178=((($1195)+(1))|0);
 $i3172=$add3178;
 label=1586;break;
 case 1589: 
 $i3180=0;
 label=1590;break;
 case 1590: 
 var $1196=$i3180;
 var $cmp3182=($1196|0)<2;
 if($cmp3182){label=1591;break;}else{label=1593;break;}
 case 1591: 
 var $1197=$i3180;
 var $fRec367=(($this1+524552)|0);
 var $arrayidx3184=(($fRec367+($1197<<2))|0);
 HEAPF32[(($arrayidx3184)>>2)]=0;
 label=1592;break;
 case 1592: 
 var $1198=$i3180;
 var $add3186=((($1198)+(1))|0);
 $i3180=$add3186;
 label=1590;break;
 case 1593: 
 $i3188=0;
 label=1594;break;
 case 1594: 
 var $1199=$i3188;
 var $cmp3190=($1199|0)<3;
 if($cmp3190){label=1595;break;}else{label=1597;break;}
 case 1595: 
 var $1200=$i3188;
 var $fRec366=(($this1+524540)|0);
 var $arrayidx3192=(($fRec366+($1200<<2))|0);
 HEAPF32[(($arrayidx3192)>>2)]=0;
 label=1596;break;
 case 1596: 
 var $1201=$i3188;
 var $add3194=((($1201)+(1))|0);
 $i3188=$add3194;
 label=1594;break;
 case 1597: 
 $i3196=0;
 label=1598;break;
 case 1598: 
 var $1202=$i3196;
 var $cmp3198=($1202|0)<2;
 if($cmp3198){label=1599;break;}else{label=1601;break;}
 case 1599: 
 var $1203=$i3196;
 var $fVec49=(($this1+524532)|0);
 var $arrayidx3200=(($fVec49+($1203<<2))|0);
 HEAPF32[(($arrayidx3200)>>2)]=0;
 label=1600;break;
 case 1600: 
 var $1204=$i3196;
 var $add3202=((($1204)+(1))|0);
 $i3196=$add3202;
 label=1598;break;
 case 1601: 
 $i3204=0;
 label=1602;break;
 case 1602: 
 var $1205=$i3204;
 var $cmp3206=($1205|0)<2;
 if($cmp3206){label=1603;break;}else{label=1605;break;}
 case 1603: 
 var $1206=$i3204;
 var $fRec365=(($this1+524524)|0);
 var $arrayidx3208=(($fRec365+($1206<<2))|0);
 HEAPF32[(($arrayidx3208)>>2)]=0;
 label=1604;break;
 case 1604: 
 var $1207=$i3204;
 var $add3210=((($1207)+(1))|0);
 $i3204=$add3210;
 label=1602;break;
 case 1605: 
 $i3212=0;
 label=1606;break;
 case 1606: 
 var $1208=$i3212;
 var $cmp3214=($1208|0)<3;
 if($cmp3214){label=1607;break;}else{label=1609;break;}
 case 1607: 
 var $1209=$i3212;
 var $fRec364=(($this1+524512)|0);
 var $arrayidx3216=(($fRec364+($1209<<2))|0);
 HEAPF32[(($arrayidx3216)>>2)]=0;
 label=1608;break;
 case 1608: 
 var $1210=$i3212;
 var $add3218=((($1210)+(1))|0);
 $i3212=$add3218;
 label=1606;break;
 case 1609: 
 $i3220=0;
 label=1610;break;
 case 1610: 
 var $1211=$i3220;
 var $cmp3222=($1211|0)<2;
 if($cmp3222){label=1611;break;}else{label=1613;break;}
 case 1611: 
 var $1212=$i3220;
 var $fRec369=(($this1+524504)|0);
 var $arrayidx3224=(($fRec369+($1212<<2))|0);
 HEAPF32[(($arrayidx3224)>>2)]=0;
 label=1612;break;
 case 1612: 
 var $1213=$i3220;
 var $add3226=((($1213)+(1))|0);
 $i3220=$add3226;
 label=1610;break;
 case 1613: 
 $i3228=0;
 label=1614;break;
 case 1614: 
 var $1214=$i3228;
 var $cmp3230=($1214|0)<3;
 if($cmp3230){label=1615;break;}else{label=1617;break;}
 case 1615: 
 var $1215=$i3228;
 var $fRec368=(($this1+524492)|0);
 var $arrayidx3232=(($fRec368+($1215<<2))|0);
 HEAPF32[(($arrayidx3232)>>2)]=0;
 label=1616;break;
 case 1616: 
 var $1216=$i3228;
 var $add3234=((($1216)+(1))|0);
 $i3228=$add3234;
 label=1614;break;
 case 1617: 
 var $IOTA=(($this1+528716)|0);
 HEAP32[(($IOTA)>>2)]=0;
 $i3236=0;
 label=1618;break;
 case 1618: 
 var $1217=$i3236;
 var $cmp3238=($1217|0)<8192;
 if($cmp3238){label=1619;break;}else{label=1621;break;}
 case 1619: 
 var $1218=$i3236;
 var $fVec50=(($this1+491724)|0);
 var $arrayidx3240=(($fVec50+($1218<<2))|0);
 HEAPF32[(($arrayidx3240)>>2)]=0;
 label=1620;break;
 case 1620: 
 var $1219=$i3236;
 var $add3242=((($1219)+(1))|0);
 $i3236=$add3242;
 label=1618;break;
 case 1621: 
 $i3244=0;
 label=1622;break;
 case 1622: 
 var $1220=$i3244;
 var $cmp3246=($1220|0)<3;
 if($cmp3246){label=1623;break;}else{label=1625;break;}
 case 1623: 
 var $1221=$i3244;
 var $fRec0=(($this1+491712)|0);
 var $arrayidx3248=(($fRec0+($1221<<2))|0);
 HEAPF32[(($arrayidx3248)>>2)]=0;
 label=1624;break;
 case 1624: 
 var $1222=$i3244;
 var $add3250=((($1222)+(1))|0);
 $i3244=$add3250;
 label=1622;break;
 case 1625: 
 var $fbutton3=(($this1+528720)|0);
 HEAPF32[(($fbutton3)>>2)]=0;
 $i3252=0;
 label=1626;break;
 case 1626: 
 var $1223=$i3252;
 var $cmp3254=($1223|0)<2;
 if($cmp3254){label=1627;break;}else{label=1629;break;}
 case 1627: 
 var $1224=$i3252;
 var $fVec51=(($this1+491704)|0);
 var $arrayidx3256=(($fVec51+($1224<<2))|0);
 HEAPF32[(($arrayidx3256)>>2)]=0;
 label=1628;break;
 case 1628: 
 var $1225=$i3252;
 var $add3258=((($1225)+(1))|0);
 $i3252=$add3258;
 label=1626;break;
 case 1629: 
 $i3260=0;
 label=1630;break;
 case 1630: 
 var $1226=$i3260;
 var $cmp3262=($1226|0)<8192;
 if($cmp3262){label=1631;break;}else{label=1633;break;}
 case 1631: 
 var $1227=$i3260;
 var $fVec52=(($this1+458936)|0);
 var $arrayidx3264=(($fVec52+($1227<<2))|0);
 HEAPF32[(($arrayidx3264)>>2)]=0;
 label=1632;break;
 case 1632: 
 var $1228=$i3260;
 var $add3266=((($1228)+(1))|0);
 $i3260=$add3266;
 label=1630;break;
 case 1633: 
 $i3268=0;
 label=1634;break;
 case 1634: 
 var $1229=$i3268;
 var $cmp3270=($1229|0)<3;
 if($cmp3270){label=1635;break;}else{label=1637;break;}
 case 1635: 
 var $1230=$i3268;
 var $fRec1=(($this1+458924)|0);
 var $arrayidx3272=(($fRec1+($1230<<2))|0);
 HEAPF32[(($arrayidx3272)>>2)]=0;
 label=1636;break;
 case 1636: 
 var $1231=$i3268;
 var $add3274=((($1231)+(1))|0);
 $i3268=$add3274;
 label=1634;break;
 case 1637: 
 $i3276=0;
 label=1638;break;
 case 1638: 
 var $1232=$i3276;
 var $cmp3278=($1232|0)<8192;
 if($cmp3278){label=1639;break;}else{label=1641;break;}
 case 1639: 
 var $1233=$i3276;
 var $fVec53=(($this1+426156)|0);
 var $arrayidx3280=(($fVec53+($1233<<2))|0);
 HEAPF32[(($arrayidx3280)>>2)]=0;
 label=1640;break;
 case 1640: 
 var $1234=$i3276;
 var $add3282=((($1234)+(1))|0);
 $i3276=$add3282;
 label=1638;break;
 case 1641: 
 $i3284=0;
 label=1642;break;
 case 1642: 
 var $1235=$i3284;
 var $cmp3286=($1235|0)<3;
 if($cmp3286){label=1643;break;}else{label=1645;break;}
 case 1643: 
 var $1236=$i3284;
 var $fRec2=(($this1+426144)|0);
 var $arrayidx3288=(($fRec2+($1236<<2))|0);
 HEAPF32[(($arrayidx3288)>>2)]=0;
 label=1644;break;
 case 1644: 
 var $1237=$i3284;
 var $add3290=((($1237)+(1))|0);
 $i3284=$add3290;
 label=1642;break;
 case 1645: 
 $i3292=0;
 label=1646;break;
 case 1646: 
 var $1238=$i3292;
 var $cmp3294=($1238|0)<8192;
 if($cmp3294){label=1647;break;}else{label=1649;break;}
 case 1647: 
 var $1239=$i3292;
 var $fVec54=(($this1+393376)|0);
 var $arrayidx3296=(($fVec54+($1239<<2))|0);
 HEAPF32[(($arrayidx3296)>>2)]=0;
 label=1648;break;
 case 1648: 
 var $1240=$i3292;
 var $add3298=((($1240)+(1))|0);
 $i3292=$add3298;
 label=1646;break;
 case 1649: 
 $i3300=0;
 label=1650;break;
 case 1650: 
 var $1241=$i3300;
 var $cmp3302=($1241|0)<3;
 if($cmp3302){label=1651;break;}else{label=1653;break;}
 case 1651: 
 var $1242=$i3300;
 var $fRec3=(($this1+393364)|0);
 var $arrayidx3304=(($fRec3+($1242<<2))|0);
 HEAPF32[(($arrayidx3304)>>2)]=0;
 label=1652;break;
 case 1652: 
 var $1243=$i3300;
 var $add3306=((($1243)+(1))|0);
 $i3300=$add3306;
 label=1650;break;
 case 1653: 
 $i3308=0;
 label=1654;break;
 case 1654: 
 var $1244=$i3308;
 var $cmp3310=($1244|0)<8192;
 if($cmp3310){label=1655;break;}else{label=1657;break;}
 case 1655: 
 var $1245=$i3308;
 var $fVec55=(($this1+360596)|0);
 var $arrayidx3312=(($fVec55+($1245<<2))|0);
 HEAPF32[(($arrayidx3312)>>2)]=0;
 label=1656;break;
 case 1656: 
 var $1246=$i3308;
 var $add3314=((($1246)+(1))|0);
 $i3308=$add3314;
 label=1654;break;
 case 1657: 
 $i3316=0;
 label=1658;break;
 case 1658: 
 var $1247=$i3316;
 var $cmp3318=($1247|0)<3;
 if($cmp3318){label=1659;break;}else{label=1661;break;}
 case 1659: 
 var $1248=$i3316;
 var $fRec4=(($this1+360584)|0);
 var $arrayidx3320=(($fRec4+($1248<<2))|0);
 HEAPF32[(($arrayidx3320)>>2)]=0;
 label=1660;break;
 case 1660: 
 var $1249=$i3316;
 var $add3322=((($1249)+(1))|0);
 $i3316=$add3322;
 label=1658;break;
 case 1661: 
 $i3324=0;
 label=1662;break;
 case 1662: 
 var $1250=$i3324;
 var $cmp3326=($1250|0)<8192;
 if($cmp3326){label=1663;break;}else{label=1665;break;}
 case 1663: 
 var $1251=$i3324;
 var $fVec56=(($this1+327816)|0);
 var $arrayidx3328=(($fVec56+($1251<<2))|0);
 HEAPF32[(($arrayidx3328)>>2)]=0;
 label=1664;break;
 case 1664: 
 var $1252=$i3324;
 var $add3330=((($1252)+(1))|0);
 $i3324=$add3330;
 label=1662;break;
 case 1665: 
 $i3332=0;
 label=1666;break;
 case 1666: 
 var $1253=$i3332;
 var $cmp3334=($1253|0)<3;
 if($cmp3334){label=1667;break;}else{label=1669;break;}
 case 1667: 
 var $1254=$i3332;
 var $fRec5=(($this1+327804)|0);
 var $arrayidx3336=(($fRec5+($1254<<2))|0);
 HEAPF32[(($arrayidx3336)>>2)]=0;
 label=1668;break;
 case 1668: 
 var $1255=$i3332;
 var $add3338=((($1255)+(1))|0);
 $i3332=$add3338;
 label=1666;break;
 case 1669: 
 $i3340=0;
 label=1670;break;
 case 1670: 
 var $1256=$i3340;
 var $cmp3342=($1256|0)<8192;
 if($cmp3342){label=1671;break;}else{label=1673;break;}
 case 1671: 
 var $1257=$i3340;
 var $fVec57=(($this1+295036)|0);
 var $arrayidx3344=(($fVec57+($1257<<2))|0);
 HEAPF32[(($arrayidx3344)>>2)]=0;
 label=1672;break;
 case 1672: 
 var $1258=$i3340;
 var $add3346=((($1258)+(1))|0);
 $i3340=$add3346;
 label=1670;break;
 case 1673: 
 $i3348=0;
 label=1674;break;
 case 1674: 
 var $1259=$i3348;
 var $cmp3350=($1259|0)<3;
 if($cmp3350){label=1675;break;}else{label=1677;break;}
 case 1675: 
 var $1260=$i3348;
 var $fRec6=(($this1+295024)|0);
 var $arrayidx3352=(($fRec6+($1260<<2))|0);
 HEAPF32[(($arrayidx3352)>>2)]=0;
 label=1676;break;
 case 1676: 
 var $1261=$i3348;
 var $add3354=((($1261)+(1))|0);
 $i3348=$add3354;
 label=1674;break;
 case 1677: 
 $i3356=0;
 label=1678;break;
 case 1678: 
 var $1262=$i3356;
 var $cmp3358=($1262|0)<8192;
 if($cmp3358){label=1679;break;}else{label=1681;break;}
 case 1679: 
 var $1263=$i3356;
 var $fVec58=(($this1+262256)|0);
 var $arrayidx3360=(($fVec58+($1263<<2))|0);
 HEAPF32[(($arrayidx3360)>>2)]=0;
 label=1680;break;
 case 1680: 
 var $1264=$i3356;
 var $add3362=((($1264)+(1))|0);
 $i3356=$add3362;
 label=1678;break;
 case 1681: 
 $i3364=0;
 label=1682;break;
 case 1682: 
 var $1265=$i3364;
 var $cmp3366=($1265|0)<3;
 if($cmp3366){label=1683;break;}else{label=1685;break;}
 case 1683: 
 var $1266=$i3364;
 var $fRec7=(($this1+262244)|0);
 var $arrayidx3368=(($fRec7+($1266<<2))|0);
 HEAPF32[(($arrayidx3368)>>2)]=0;
 label=1684;break;
 case 1684: 
 var $1267=$i3364;
 var $add3370=((($1267)+(1))|0);
 $i3364=$add3370;
 label=1682;break;
 case 1685: 
 $i3372=0;
 label=1686;break;
 case 1686: 
 var $1268=$i3372;
 var $cmp3374=($1268|0)<8192;
 if($cmp3374){label=1687;break;}else{label=1689;break;}
 case 1687: 
 var $1269=$i3372;
 var $fVec59=(($this1+229476)|0);
 var $arrayidx3376=(($fVec59+($1269<<2))|0);
 HEAPF32[(($arrayidx3376)>>2)]=0;
 label=1688;break;
 case 1688: 
 var $1270=$i3372;
 var $add3378=((($1270)+(1))|0);
 $i3372=$add3378;
 label=1686;break;
 case 1689: 
 $i3380=0;
 label=1690;break;
 case 1690: 
 var $1271=$i3380;
 var $cmp3382=($1271|0)<3;
 if($cmp3382){label=1691;break;}else{label=1693;break;}
 case 1691: 
 var $1272=$i3380;
 var $fRec8=(($this1+229464)|0);
 var $arrayidx3384=(($fRec8+($1272<<2))|0);
 HEAPF32[(($arrayidx3384)>>2)]=0;
 label=1692;break;
 case 1692: 
 var $1273=$i3380;
 var $add3386=((($1273)+(1))|0);
 $i3380=$add3386;
 label=1690;break;
 case 1693: 
 $i3388=0;
 label=1694;break;
 case 1694: 
 var $1274=$i3388;
 var $cmp3390=($1274|0)<8192;
 if($cmp3390){label=1695;break;}else{label=1697;break;}
 case 1695: 
 var $1275=$i3388;
 var $fVec60=(($this1+196696)|0);
 var $arrayidx3392=(($fVec60+($1275<<2))|0);
 HEAPF32[(($arrayidx3392)>>2)]=0;
 label=1696;break;
 case 1696: 
 var $1276=$i3388;
 var $add3394=((($1276)+(1))|0);
 $i3388=$add3394;
 label=1694;break;
 case 1697: 
 $i3396=0;
 label=1698;break;
 case 1698: 
 var $1277=$i3396;
 var $cmp3398=($1277|0)<3;
 if($cmp3398){label=1699;break;}else{label=1701;break;}
 case 1699: 
 var $1278=$i3396;
 var $fRec9=(($this1+196684)|0);
 var $arrayidx3400=(($fRec9+($1278<<2))|0);
 HEAPF32[(($arrayidx3400)>>2)]=0;
 label=1700;break;
 case 1700: 
 var $1279=$i3396;
 var $add3402=((($1279)+(1))|0);
 $i3396=$add3402;
 label=1698;break;
 case 1701: 
 $i3404=0;
 label=1702;break;
 case 1702: 
 var $1280=$i3404;
 var $cmp3406=($1280|0)<8192;
 if($cmp3406){label=1703;break;}else{label=1705;break;}
 case 1703: 
 var $1281=$i3404;
 var $fVec61=(($this1+163916)|0);
 var $arrayidx3408=(($fVec61+($1281<<2))|0);
 HEAPF32[(($arrayidx3408)>>2)]=0;
 label=1704;break;
 case 1704: 
 var $1282=$i3404;
 var $add3410=((($1282)+(1))|0);
 $i3404=$add3410;
 label=1702;break;
 case 1705: 
 $i3412=0;
 label=1706;break;
 case 1706: 
 var $1283=$i3412;
 var $cmp3414=($1283|0)<3;
 if($cmp3414){label=1707;break;}else{label=1709;break;}
 case 1707: 
 var $1284=$i3412;
 var $fRec10=(($this1+163904)|0);
 var $arrayidx3416=(($fRec10+($1284<<2))|0);
 HEAPF32[(($arrayidx3416)>>2)]=0;
 label=1708;break;
 case 1708: 
 var $1285=$i3412;
 var $add3418=((($1285)+(1))|0);
 $i3412=$add3418;
 label=1706;break;
 case 1709: 
 $i3420=0;
 label=1710;break;
 case 1710: 
 var $1286=$i3420;
 var $cmp3422=($1286|0)<8192;
 if($cmp3422){label=1711;break;}else{label=1713;break;}
 case 1711: 
 var $1287=$i3420;
 var $fVec62=(($this1+131136)|0);
 var $arrayidx3424=(($fVec62+($1287<<2))|0);
 HEAPF32[(($arrayidx3424)>>2)]=0;
 label=1712;break;
 case 1712: 
 var $1288=$i3420;
 var $add3426=((($1288)+(1))|0);
 $i3420=$add3426;
 label=1710;break;
 case 1713: 
 $i3428=0;
 label=1714;break;
 case 1714: 
 var $1289=$i3428;
 var $cmp3430=($1289|0)<3;
 if($cmp3430){label=1715;break;}else{label=1717;break;}
 case 1715: 
 var $1290=$i3428;
 var $fRec11=(($this1+131124)|0);
 var $arrayidx3432=(($fRec11+($1290<<2))|0);
 HEAPF32[(($arrayidx3432)>>2)]=0;
 label=1716;break;
 case 1716: 
 var $1291=$i3428;
 var $add3434=((($1291)+(1))|0);
 $i3428=$add3434;
 label=1714;break;
 case 1717: 
 $i3436=0;
 label=1718;break;
 case 1718: 
 var $1292=$i3436;
 var $cmp3438=($1292|0)<8192;
 if($cmp3438){label=1719;break;}else{label=1721;break;}
 case 1719: 
 var $1293=$i3436;
 var $fVec63=(($this1+98356)|0);
 var $arrayidx3440=(($fVec63+($1293<<2))|0);
 HEAPF32[(($arrayidx3440)>>2)]=0;
 label=1720;break;
 case 1720: 
 var $1294=$i3436;
 var $add3442=((($1294)+(1))|0);
 $i3436=$add3442;
 label=1718;break;
 case 1721: 
 $i3444=0;
 label=1722;break;
 case 1722: 
 var $1295=$i3444;
 var $cmp3446=($1295|0)<3;
 if($cmp3446){label=1723;break;}else{label=1725;break;}
 case 1723: 
 var $1296=$i3444;
 var $fRec12=(($this1+98344)|0);
 var $arrayidx3448=(($fRec12+($1296<<2))|0);
 HEAPF32[(($arrayidx3448)>>2)]=0;
 label=1724;break;
 case 1724: 
 var $1297=$i3444;
 var $add3450=((($1297)+(1))|0);
 $i3444=$add3450;
 label=1722;break;
 case 1725: 
 $i3452=0;
 label=1726;break;
 case 1726: 
 var $1298=$i3452;
 var $cmp3454=($1298|0)<8192;
 if($cmp3454){label=1727;break;}else{label=1729;break;}
 case 1727: 
 var $1299=$i3452;
 var $fVec64=(($this1+65576)|0);
 var $arrayidx3456=(($fVec64+($1299<<2))|0);
 HEAPF32[(($arrayidx3456)>>2)]=0;
 label=1728;break;
 case 1728: 
 var $1300=$i3452;
 var $add3458=((($1300)+(1))|0);
 $i3452=$add3458;
 label=1726;break;
 case 1729: 
 $i3460=0;
 label=1730;break;
 case 1730: 
 var $1301=$i3460;
 var $cmp3462=($1301|0)<3;
 if($cmp3462){label=1731;break;}else{label=1733;break;}
 case 1731: 
 var $1302=$i3460;
 var $fRec13=(($this1+65564)|0);
 var $arrayidx3464=(($fRec13+($1302<<2))|0);
 HEAPF32[(($arrayidx3464)>>2)]=0;
 label=1732;break;
 case 1732: 
 var $1303=$i3460;
 var $add3466=((($1303)+(1))|0);
 $i3460=$add3466;
 label=1730;break;
 case 1733: 
 $i3468=0;
 label=1734;break;
 case 1734: 
 var $1304=$i3468;
 var $cmp3470=($1304|0)<8192;
 if($cmp3470){label=1735;break;}else{label=1737;break;}
 case 1735: 
 var $1305=$i3468;
 var $fVec65=(($this1+32796)|0);
 var $arrayidx3472=(($fVec65+($1305<<2))|0);
 HEAPF32[(($arrayidx3472)>>2)]=0;
 label=1736;break;
 case 1736: 
 var $1306=$i3468;
 var $add3474=((($1306)+(1))|0);
 $i3468=$add3474;
 label=1734;break;
 case 1737: 
 $i3476=0;
 label=1738;break;
 case 1738: 
 var $1307=$i3476;
 var $cmp3478=($1307|0)<3;
 if($cmp3478){label=1739;break;}else{label=1741;break;}
 case 1739: 
 var $1308=$i3476;
 var $fRec14=(($this1+32784)|0);
 var $arrayidx3480=(($fRec14+($1308<<2))|0);
 HEAPF32[(($arrayidx3480)>>2)]=0;
 label=1740;break;
 case 1740: 
 var $1309=$i3476;
 var $add3482=((($1309)+(1))|0);
 $i3476=$add3482;
 label=1738;break;
 case 1741: 
 $i3484=0;
 label=1742;break;
 case 1742: 
 var $1310=$i3484;
 var $cmp3486=($1310|0)<8192;
 if($cmp3486){label=1743;break;}else{label=1745;break;}
 case 1743: 
 var $1311=$i3484;
 var $fVec66=(($this1+16)|0);
 var $arrayidx3488=(($fVec66+($1311<<2))|0);
 HEAPF32[(($arrayidx3488)>>2)]=0;
 label=1744;break;
 case 1744: 
 var $1312=$i3484;
 var $add3490=((($1312)+(1))|0);
 $i3484=$add3490;
 label=1742;break;
 case 1745: 
 $i3492=0;
 label=1746;break;
 case 1746: 
 var $1313=$i3492;
 var $cmp3494=($1313|0)<3;
 if($cmp3494){label=1747;break;}else{label=1749;break;}
 case 1747: 
 var $1314=$i3492;
 var $fRec15=(($this1+4)|0);
 var $arrayidx3496=(($fRec15+($1314<<2))|0);
 HEAPF32[(($arrayidx3496)>>2)]=0;
 label=1748;break;
 case 1748: 
 var $1315=$i3492;
 var $add3498=((($1315)+(1))|0);
 $i3492=$add3498;
 label=1746;break;
 case 1749: 
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZN14ReverbDesigner9classInitEi($samplingFreq){
 var label=0;
 var $samplingFreq_addr;
 $samplingFreq_addr=$samplingFreq;
 return;
}
function __ZN19ReverbDesigner_wrapD2Ev($this){
 var label=0;
 var $this_addr;
 $this_addr=$this;
 var $this1=$this_addr;
 var $0=$this1;
 __ZN14ReverbDesignerD2Ev($0);
 return;
}
function __ZN14ReverbDesignerD2Ev($this){
 var label=0;
 var $this_addr;
 $this_addr=$this;
 var $this1=$this_addr;
 var $0=$this1;
 __ZN3dspD2Ev($0);
 return;
}
function __ZN3dspD2Ev($this){
 var label=0;
 var $this_addr;
 $this_addr=$this;
 var $this1=$this_addr;
 return;
}
function __ZN3dspC2Ev($this){
 var label=0;
 var $this_addr;
 $this_addr=$this;
 var $this1=$this_addr;
 var $0=$this1;
 HEAP32[(($0)>>2)]=6952;
 return;
}
function __ZN14ReverbDesignerD0Ev($this){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $this_addr;
 var $exn_slot;
 var $ehselector_slot;
 $this_addr=$this;
 var $this1=$this_addr;
 (function() { try { __THREW__ = 0; return __ZN14ReverbDesignerD1Ev($this1) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=3;break; }
 case 2: 
 var $0=$this1;
 __ZdlPv($0);
 return;
 case 3: 
 var $1$0 = ___cxa_find_matching_catch(-1, -1); var $1$1 = tempRet0;
 var $2=$1$0;
 $exn_slot=$2;
 var $3=$1$1;
 $ehselector_slot=$3;
 var $4=$this1;
 __ZdlPv($4);
 label=4;break;
 case 4: 
 var $exn=$exn_slot;
 var $sel=$ehselector_slot;
 var $lpad_val$0=$exn;
 var $lpad_val$1=0;
 var $lpad_val2$0=$lpad_val$0;
 var $lpad_val2$1=$sel;
 ___resumeException($lpad_val2$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZN3dspD1Ev($this){
 var label=0;
 var $this_addr;
 $this_addr=$this;
 var $this1=$this_addr;
 __ZN3dspD2Ev($this1);
 return;
}
function __ZN3dspD0Ev($this){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $this_addr;
 var $exn_slot;
 var $ehselector_slot;
 $this_addr=$this;
 var $this1=$this_addr;
 (function() { try { __THREW__ = 0; return __ZN3dspD1Ev($this1) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=3;break; }
 case 2: 
 var $0=$this1;
 __ZdlPv($0);
 return;
 case 3: 
 var $1$0 = ___cxa_find_matching_catch(-1, -1); var $1$1 = tempRet0;
 var $2=$1$0;
 $exn_slot=$2;
 var $3=$1$1;
 $ehselector_slot=$3;
 var $4=$this1;
 __ZdlPv($4);
 label=4;break;
 case 4: 
 var $exn=$exn_slot;
 var $sel=$ehselector_slot;
 var $lpad_val$0=$exn;
 var $lpad_val$1=0;
 var $lpad_val2$0=$lpad_val$0;
 var $lpad_val2$1=$sel;
 ___resumeException($lpad_val2$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__18ios_base4InitC2Ev($this){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+32)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $ref_tmp_i_i32=sp;
 var $ref_tmp_i_i25=(sp)+(8);
 var $ref_tmp_i_i17=(sp)+(16);
 var $ref_tmp_i_i=(sp)+(24);
 var $0=HEAP32[((_stdin)>>2)];
 __ZNSt3__110__stdinbufIcEC2EP8_IO_FILEP11__mbstate_t(14752,$0,14880);
 HEAP32[((15744)>>2)]=6212;
 HEAP32[((15752)>>2)]=6232;
 HEAP32[((15748)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__18ios_base4initEPv(15752,14752) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=3;break; } else { label=2;break; }
 case 2: 
 var $1$0 = ___cxa_find_matching_catch(-1, -1); var $1$1 = tempRet0;
 __ZNSt3__18ios_baseD2Ev(15752);
 ___resumeException($1$0)
 case 3: 
 HEAP32[((15824)>>2)]=0;
 HEAP32[((15828)>>2)]=-1;
 var $2=HEAP32[((_stdout)>>2)];
 var $3=$ref_tmp_i_i;
 HEAP32[((14656)>>2)]=5992;
 __ZNSt3__16localeC2Ev(14660);
 HEAP32[((14664)>>2)]=0; HEAP32[((14668)>>2)]=0; HEAP32[((14672)>>2)]=0; HEAP32[((14676)>>2)]=0; HEAP32[((14680)>>2)]=0; HEAP32[((14684)>>2)]=0;
 HEAP32[((14656)>>2)]=6360;
 HEAP32[((14688)>>2)]=$2;
 __ZNSt3__16localeC2ERKS0_($ref_tmp_i_i,14660);
 var $call_i7_i_i=(function() { try { __THREW__ = 0; return __ZNKSt3__16locale9use_facetERNS0_2idE($ref_tmp_i_i,15080) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=5;break; } else { label=4;break; }
 case 4: 
 var $4$0 = ___cxa_find_matching_catch(-1, -1); var $4$1 = tempRet0;
 __ZNSt3__16localeD2Ev($ref_tmp_i_i);
 HEAP32[((14656)>>2)]=5992;
 __ZNSt3__16localeD2Ev(14660);
 ___resumeException($4$0)
 case 5: 
 var $5=$call_i7_i_i;
 __ZNSt3__16localeD2Ev($ref_tmp_i_i);
 HEAP32[((14692)>>2)]=$5;
 HEAP32[((14696)>>2)]=14888;
 var $6=$call_i7_i_i;
 var $vtable_i_i_i=HEAP32[(($6)>>2)];
 var $vfn_i_i_i=(($vtable_i_i_i+28)|0);
 var $7=HEAP32[(($vfn_i_i_i)>>2)];
 var $call_i_i_i=FUNCTION_TABLE[$7]($5);
 var $frombool_i_i=($call_i_i_i&1);
 HEAP8[(14700)]=$frombool_i_i;
 HEAP32[((15480)>>2)]=6116;
 HEAP32[((15484)>>2)]=6136;
 (function() { try { __THREW__ = 0; return __ZNSt3__18ios_base4initEPv(15484,14656) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=7;break; } else { label=6;break; }
 case 6: 
 var $8$0 = ___cxa_find_matching_catch(-1, -1); var $8$1 = tempRet0;
 __ZNSt3__18ios_baseD2Ev(15484);
 ___resumeException($8$0)
 case 7: 
 HEAP32[((15556)>>2)]=0;
 HEAP32[((15560)>>2)]=-1;
 var $9=HEAP32[((_stderr)>>2)];
 var $10=$ref_tmp_i_i17;
 HEAP32[((14704)>>2)]=5992;
 __ZNSt3__16localeC2Ev(14708);
 HEAP32[((14712)>>2)]=0; HEAP32[((14716)>>2)]=0; HEAP32[((14720)>>2)]=0; HEAP32[((14724)>>2)]=0; HEAP32[((14728)>>2)]=0; HEAP32[((14732)>>2)]=0;
 HEAP32[((14704)>>2)]=6360;
 HEAP32[((14736)>>2)]=$9;
 __ZNSt3__16localeC2ERKS0_($ref_tmp_i_i17,14708);
 var $call_i7_i_i18=(function() { try { __THREW__ = 0; return __ZNKSt3__16locale9use_facetERNS0_2idE($ref_tmp_i_i17,15080) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=9;break; } else { label=8;break; }
 case 8: 
 var $11$0 = ___cxa_find_matching_catch(-1, -1); var $11$1 = tempRet0;
 __ZNSt3__16localeD2Ev($ref_tmp_i_i17);
 HEAP32[((14704)>>2)]=5992;
 __ZNSt3__16localeD2Ev(14708);
 ___resumeException($11$0)
 case 9: 
 var $12=$call_i7_i_i18;
 __ZNSt3__16localeD2Ev($ref_tmp_i_i17);
 HEAP32[((14740)>>2)]=$12;
 HEAP32[((14744)>>2)]=14896;
 var $13=$call_i7_i_i18;
 var $vtable_i_i_i20=HEAP32[(($13)>>2)];
 var $vfn_i_i_i21=(($vtable_i_i_i20+28)|0);
 var $14=HEAP32[(($vfn_i_i_i21)>>2)];
 var $call_i_i_i22=FUNCTION_TABLE[$14]($12);
 var $frombool_i_i23=($call_i_i_i22&1);
 HEAP8[(14748)]=$frombool_i_i23;
 HEAP32[((15656)>>2)]=6116;
 HEAP32[((15660)>>2)]=6136;
 (function() { try { __THREW__ = 0; return __ZNSt3__18ios_base4initEPv(15660,14704) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=11;break; } else { label=10;break; }
 case 10: 
 var $15$0 = ___cxa_find_matching_catch(-1, -1); var $15$1 = tempRet0;
 __ZNSt3__18ios_baseD2Ev(15660);
 ___resumeException($15$0)
 case 11: 
 HEAP32[((15732)>>2)]=0;
 HEAP32[((15736)>>2)]=-1;
 var $vtable=HEAP32[((15656)>>2)];
 var $vbase_offset_ptr=((($vtable)-(12))|0);
 var $16=$vbase_offset_ptr;
 var $vbase_offset=HEAP32[(($16)>>2)];
 var $add_ptr_sum=((($vbase_offset)+(24))|0);
 var $__rdbuf__i_i=((15656+$add_ptr_sum)|0);
 var $17=$__rdbuf__i_i;
 var $18=HEAP32[(($17)>>2)];
 HEAP32[((15568)>>2)]=6116;
 HEAP32[((15572)>>2)]=6136;
 (function() { try { __THREW__ = 0; return __ZNSt3__18ios_base4initEPv(15572,$18) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=13;break; } else { label=12;break; }
 case 12: 
 var $19$0 = ___cxa_find_matching_catch(-1, -1); var $19$1 = tempRet0;
 __ZNSt3__18ios_baseD2Ev(15572);
 ___resumeException($19$0)
 case 13: 
 HEAP32[((15644)>>2)]=0;
 HEAP32[((15648)>>2)]=-1;
 var $vtable14=HEAP32[((15744)>>2)];
 var $vbase_offset_ptr15=((($vtable14)-(12))|0);
 var $20=$vbase_offset_ptr15;
 var $vbase_offset16=HEAP32[(($20)>>2)];
 var $add_ptr17_sum=((($vbase_offset16)+(72))|0);
 var $__tie__i=((15744+$add_ptr17_sum)|0);
 var $21=$__tie__i;
 HEAP32[(($21)>>2)]=15480;
 var $vtable19=HEAP32[((15656)>>2)];
 var $vbase_offset_ptr20=((($vtable19)-(12))|0);
 var $22=$vbase_offset_ptr20;
 var $vbase_offset21=HEAP32[(($22)>>2)];
 var $add_ptr22_sum=((($vbase_offset21)+(4))|0);
 var $__fmtflags__i_i=((15656+$add_ptr22_sum)|0);
 var $23=$__fmtflags__i_i;
 var $24=HEAP32[(($23)>>2)];
 var $or_i_i=$24|8192;
 HEAP32[(($23)>>2)]=$or_i_i;
 var $vtable24=HEAP32[((15656)>>2)];
 var $vbase_offset_ptr25=((($vtable24)-(12))|0);
 var $25=$vbase_offset_ptr25;
 var $vbase_offset26=HEAP32[(($25)>>2)];
 var $add_ptr27_sum=((($vbase_offset26)+(72))|0);
 var $__tie__i149=((15656+$add_ptr27_sum)|0);
 var $26=$__tie__i149;
 HEAP32[(($26)>>2)]=15480;
 __ZNSt3__110__stdinbufIwEC2EP8_IO_FILEP11__mbstate_t(14600,$0,14904);
 HEAP32[((15392)>>2)]=6164;
 HEAP32[((15400)>>2)]=6184;
 HEAP32[((15396)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__18ios_base4initEPv(15400,14600) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=15;break; } else { label=14;break; }
 case 14: 
 var $27$0 = ___cxa_find_matching_catch(-1, -1); var $27$1 = tempRet0;
 __ZNSt3__18ios_baseD2Ev(15400);
 ___resumeException($27$0)
 case 15: 
 HEAP32[((15472)>>2)]=0;
 HEAP32[((15476)>>2)]=-1;
 var $28=$ref_tmp_i_i25;
 HEAP32[((14504)>>2)]=5920;
 __ZNSt3__16localeC2Ev(14508);
 HEAP32[((14512)>>2)]=0; HEAP32[((14516)>>2)]=0; HEAP32[((14520)>>2)]=0; HEAP32[((14524)>>2)]=0; HEAP32[((14528)>>2)]=0; HEAP32[((14532)>>2)]=0;
 HEAP32[((14504)>>2)]=6288;
 HEAP32[((14536)>>2)]=$2;
 __ZNSt3__16localeC2ERKS0_($ref_tmp_i_i25,14508);
 var $call_i7_i_i26=(function() { try { __THREW__ = 0; return __ZNKSt3__16locale9use_facetERNS0_2idE($ref_tmp_i_i25,15072) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=17;break; } else { label=16;break; }
 case 16: 
 var $29$0 = ___cxa_find_matching_catch(-1, -1); var $29$1 = tempRet0;
 __ZNSt3__16localeD2Ev($ref_tmp_i_i25);
 HEAP32[((14504)>>2)]=5920;
 __ZNSt3__16localeD2Ev(14508);
 ___resumeException($29$0)
 case 17: 
 var $30=$call_i7_i_i26;
 __ZNSt3__16localeD2Ev($ref_tmp_i_i25);
 HEAP32[((14540)>>2)]=$30;
 HEAP32[((14544)>>2)]=14912;
 var $31=$call_i7_i_i26;
 var $vtable_i_i_i28=HEAP32[(($31)>>2)];
 var $vfn_i_i_i29=(($vtable_i_i_i28+28)|0);
 var $32=HEAP32[(($vfn_i_i_i29)>>2)];
 var $call_i_i_i30=FUNCTION_TABLE[$32]($30);
 var $frombool_i_i31=($call_i_i_i30&1);
 HEAP8[(14548)]=$frombool_i_i31;
 HEAP32[((15112)>>2)]=6068;
 HEAP32[((15116)>>2)]=6088;
 (function() { try { __THREW__ = 0; return __ZNSt3__18ios_base4initEPv(15116,14504) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=19;break; } else { label=18;break; }
 case 18: 
 var $33$0 = ___cxa_find_matching_catch(-1, -1); var $33$1 = tempRet0;
 __ZNSt3__18ios_baseD2Ev(15116);
 ___resumeException($33$0)
 case 19: 
 HEAP32[((15188)>>2)]=0;
 HEAP32[((15192)>>2)]=-1;
 var $34=$ref_tmp_i_i32;
 HEAP32[((14552)>>2)]=5920;
 __ZNSt3__16localeC2Ev(14556);
 HEAP32[((14560)>>2)]=0; HEAP32[((14564)>>2)]=0; HEAP32[((14568)>>2)]=0; HEAP32[((14572)>>2)]=0; HEAP32[((14576)>>2)]=0; HEAP32[((14580)>>2)]=0;
 HEAP32[((14552)>>2)]=6288;
 HEAP32[((14584)>>2)]=$9;
 __ZNSt3__16localeC2ERKS0_($ref_tmp_i_i32,14556);
 var $call_i7_i_i33=(function() { try { __THREW__ = 0; return __ZNKSt3__16locale9use_facetERNS0_2idE($ref_tmp_i_i32,15072) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=21;break; } else { label=20;break; }
 case 20: 
 var $35$0 = ___cxa_find_matching_catch(-1, -1); var $35$1 = tempRet0;
 __ZNSt3__16localeD2Ev($ref_tmp_i_i32);
 HEAP32[((14552)>>2)]=5920;
 __ZNSt3__16localeD2Ev(14556);
 ___resumeException($35$0)
 case 21: 
 var $36=$call_i7_i_i33;
 __ZNSt3__16localeD2Ev($ref_tmp_i_i32);
 HEAP32[((14588)>>2)]=$36;
 HEAP32[((14592)>>2)]=14920;
 var $37=$call_i7_i_i33;
 var $vtable_i_i_i35=HEAP32[(($37)>>2)];
 var $vfn_i_i_i36=(($vtable_i_i_i35+28)|0);
 var $38=HEAP32[(($vfn_i_i_i36)>>2)];
 var $call_i_i_i37=FUNCTION_TABLE[$38]($36);
 var $frombool_i_i38=($call_i_i_i37&1);
 HEAP8[(14596)]=$frombool_i_i38;
 HEAP32[((15288)>>2)]=6068;
 HEAP32[((15292)>>2)]=6088;
 (function() { try { __THREW__ = 0; return __ZNSt3__18ios_base4initEPv(15292,14552) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=23;break; } else { label=22;break; }
 case 22: 
 var $39$0 = ___cxa_find_matching_catch(-1, -1); var $39$1 = tempRet0;
 __ZNSt3__18ios_baseD2Ev(15292);
 ___resumeException($39$0)
 case 23: 
 HEAP32[((15364)>>2)]=0;
 HEAP32[((15368)>>2)]=-1;
 var $vtable42=HEAP32[((15288)>>2)];
 var $vbase_offset_ptr43=((($vtable42)-(12))|0);
 var $40=$vbase_offset_ptr43;
 var $vbase_offset44=HEAP32[(($40)>>2)];
 var $add_ptr45_sum=((($vbase_offset44)+(24))|0);
 var $__rdbuf__i_i229=((15288+$add_ptr45_sum)|0);
 var $41=$__rdbuf__i_i229;
 var $42=HEAP32[(($41)>>2)];
 HEAP32[((15200)>>2)]=6068;
 HEAP32[((15204)>>2)]=6088;
 (function() { try { __THREW__ = 0; return __ZNSt3__18ios_base4initEPv(15204,$42) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=25;break; } else { label=24;break; }
 case 24: 
 var $43$0 = ___cxa_find_matching_catch(-1, -1); var $43$1 = tempRet0;
 __ZNSt3__18ios_baseD2Ev(15204);
 ___resumeException($43$0)
 case 25: 
 HEAP32[((15276)>>2)]=0;
 HEAP32[((15280)>>2)]=-1;
 var $vtable48=HEAP32[((15392)>>2)];
 var $vbase_offset_ptr49=((($vtable48)-(12))|0);
 var $44=$vbase_offset_ptr49;
 var $vbase_offset50=HEAP32[(($44)>>2)];
 var $add_ptr51_sum=((($vbase_offset50)+(72))|0);
 var $__tie__i259=((15392+$add_ptr51_sum)|0);
 var $45=$__tie__i259;
 HEAP32[(($45)>>2)]=15112;
 var $vtable53=HEAP32[((15288)>>2)];
 var $vbase_offset_ptr54=((($vtable53)-(12))|0);
 var $46=$vbase_offset_ptr54;
 var $vbase_offset55=HEAP32[(($46)>>2)];
 var $add_ptr56_sum=((($vbase_offset55)+(4))|0);
 var $__fmtflags__i_i266=((15288+$add_ptr56_sum)|0);
 var $47=$__fmtflags__i_i266;
 var $48=HEAP32[(($47)>>2)];
 var $or_i_i268=$48|8192;
 HEAP32[(($47)>>2)]=$or_i_i268;
 var $vtable58=HEAP32[((15288)>>2)];
 var $vbase_offset_ptr59=((($vtable58)-(12))|0);
 var $49=$vbase_offset_ptr59;
 var $vbase_offset60=HEAP32[(($49)>>2)];
 var $add_ptr61_sum=((($vbase_offset60)+(72))|0);
 var $__tie__i273=((15288+$add_ptr61_sum)|0);
 var $50=$__tie__i273;
 HEAP32[(($50)>>2)]=15112;
 STACKTOP=sp;return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__18ios_base4InitD2Ev($this){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $call=(function() { try { __THREW__ = 0; return __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(15480) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=6;break; }
 case 2: 
 var $call3=(function() { try { __THREW__ = 0; return __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(15568) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=3;break; } else { label=6;break; }
 case 3: 
 var $call5=(function() { try { __THREW__ = 0; return __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE5flushEv(15112) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=4;break; } else { label=6;break; }
 case 4: 
 var $call7=(function() { try { __THREW__ = 0; return __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE5flushEv(15200) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=5;break; } else { label=6;break; }
 case 5: 
 return;
 case 6: 
 var $0$0 = ___cxa_find_matching_catch(-1, -1,0); var $0$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__111__stdoutbufIwED1Ev($this){
 var label=0;
 var $0=(($this)|0);
 HEAP32[(($0)>>2)]=5920;
 var $__loc__i_i=(($this+4)|0);
 __ZNSt3__16localeD2Ev($__loc__i_i);
 return;
}
function __ZNSt3__111__stdoutbufIwED0Ev($this){
 var label=0;
 var $0=(($this)|0);
 HEAP32[(($0)>>2)]=5920;
 var $__loc__i_i_i=(($this+4)|0);
 __ZNSt3__16localeD2Ev($__loc__i_i_i);
 var $1=$this;
 __ZdlPv($1);
 return;
}
function __ZNSt3__111__stdoutbufIwE5imbueERKNS_6localeE($this,$__loc){
 var label=0;
 var $0=$this;
 var $vtable=HEAP32[(($0)>>2)];
 var $vfn=(($vtable+24)|0);
 var $1=HEAP32[(($vfn)>>2)];
 var $call=FUNCTION_TABLE[$1]($this);
 var $call_i=__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,15072);
 var $2=$call_i;
 var $__cv_=(($this+36)|0);
 HEAP32[(($__cv_)>>2)]=$2;
 var $3=$call_i;
 var $vtable_i=HEAP32[(($3)>>2)];
 var $vfn_i=(($vtable_i+28)|0);
 var $4=HEAP32[(($vfn_i)>>2)];
 var $call_i5=FUNCTION_TABLE[$4]($2);
 var $__always_noconv_=(($this+44)|0);
 var $frombool=($call_i5&1);
 HEAP8[($__always_noconv_)]=$frombool;
 return;
}
function __ZNSt3__111__stdoutbufIwE4syncEv($this){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__extbuf=sp;
 var $__extbe=(sp)+(8);
 var $__cv_=(($this+36)|0);
 var $__st_=(($this+40)|0);
 var $arraydecay=(($__extbuf)|0);
 var $add_ptr=(($__extbuf+8)|0);
 var $sub_ptr_rhs_cast=$__extbuf;
 var $__file_=(($this+32)|0);
 label=2;break;
 case 2: 
 var $0=HEAP32[(($__cv_)>>2)];
 var $1=HEAP32[(($__st_)>>2)];
 var $2=$0;
 var $vtable_i=HEAP32[(($2)>>2)];
 var $vfn_i=(($vtable_i+20)|0);
 var $3=HEAP32[(($vfn_i)>>2)];
 var $call_i=FUNCTION_TABLE[$3]($0,$1,$arraydecay,$add_ptr,$__extbe);
 var $4=HEAP32[(($__extbe)>>2)];
 var $sub_ptr_lhs_cast=$4;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $5=HEAP32[(($__file_)>>2)];
 var $call5=_fwrite($arraydecay,1,$sub_ptr_sub,$5);
 var $cmp=($call5|0)==($sub_ptr_sub|0);
 if($cmp){label=3;break;}else{var $retval_0=-1;label=5;break;}
 case 3: 
 if(($call_i|0)==1){ label=2;break;}else if(($call_i|0)==2){ var $retval_0=-1;label=5;break;}else{label=4;break;}
 case 4: 
 var $6=HEAP32[(($__file_)>>2)];
 var $call11=_fflush($6);
 var $not_tobool=($call11|0)!=0;
 var $_=(($not_tobool<<31)>>31);
 var $retval_0=$_;label=5;break;
 case 5: 
 var $retval_0;
 STACKTOP=sp;return $retval_0;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__111__stdoutbufIwE6xsputnEPKwi($this,$__s,$__n){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__always_noconv_=(($this+44)|0);
 var $0=HEAP8[($__always_noconv_)];
 var $1=$0&1;
 var $tobool=(($1<<24)>>24)==0;
 if($tobool){label=2;break;}else{label=3;break;}
 case 2: 
 var $2=$this;
 var $cmp6=($__n|0)>0;
 if($cmp6){var $__s_addr_07=$__s;var $__i_08=0;label=4;break;}else{var $retval_0=0;label=6;break;}
 case 3: 
 var $3=$__s;
 var $__file_=(($this+32)|0);
 var $4=HEAP32[(($__file_)>>2)];
 var $call=_fwrite($3,4,$__n,$4);
 var $retval_0=$call;label=6;break;
 case 4: 
 var $__i_08;
 var $__s_addr_07;
 var $vtable=HEAP32[(($2)>>2)];
 var $vfn=(($vtable+52)|0);
 var $5=HEAP32[(($vfn)>>2)];
 var $6=HEAP32[(($__s_addr_07)>>2)];
 var $call3=FUNCTION_TABLE[$5]($this,$6);
 var $cmp5=($call3|0)==-1;
 if($cmp5){var $retval_0=$__i_08;label=6;break;}else{label=5;break;}
 case 5: 
 var $inc=((($__i_08)+(1))|0);
 var $incdec_ptr=(($__s_addr_07+4)|0);
 var $cmp=($inc|0)<($__n|0);
 if($cmp){var $__s_addr_07=$incdec_ptr;var $__i_08=$inc;label=4;break;}else{var $retval_0=$inc;label=6;break;}
 case 6: 
 var $retval_0;
 return $retval_0;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__111__stdoutbufIwE8overflowEj($this,$__c){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+32)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__extbuf=sp;
 var $__1buf=(sp)+(8);
 var $__extbe=(sp)+(16);
 var $__e=(sp)+(24);
 var $cmp_i=($__c|0)==-1;
 if($cmp_i){label=11;break;}else{label=2;break;}
 case 2: 
 HEAP32[(($__1buf)>>2)]=$__c;
 var $__always_noconv_=(($this+44)|0);
 var $0=HEAP8[($__always_noconv_)];
 var $1=$0&1;
 var $tobool=(($1<<24)>>24)==0;
 if($tobool){label=4;break;}else{label=3;break;}
 case 3: 
 var $2=$__1buf;
 var $__file_=(($this+32)|0);
 var $3=HEAP32[(($__file_)>>2)];
 var $call5=_fwrite($2,4,1,$3);
 var $cmp=($call5|0)==1;
 if($cmp){label=11;break;}else{var $retval_0=-1;label=12;break;}
 case 4: 
 var $arraydecay=(($__extbuf)|0);
 HEAP32[(($__extbe)>>2)]=$arraydecay;
 var $add_ptr=(($__1buf+4)|0);
 var $__cv_=(($this+36)|0);
 var $__st_=(($this+40)|0);
 var $add_ptr10=(($__extbuf+8)|0);
 var $sub_ptr_rhs_cast=$__extbuf;
 var $__file_30=(($this+32)|0);
 var $pbase_0=$__1buf;label=5;break;
 case 5: 
 var $pbase_0;
 var $4=HEAP32[(($__cv_)>>2)];
 var $5=HEAP32[(($__st_)>>2)];
 var $6=$4;
 var $vtable_i=HEAP32[(($6)>>2)];
 var $vfn_i=(($vtable_i+12)|0);
 var $7=HEAP32[(($vfn_i)>>2)];
 var $call_i=FUNCTION_TABLE[$7]($4,$5,$pbase_0,$add_ptr,$__e,$arraydecay,$add_ptr10,$__extbe);
 var $8=HEAP32[(($__e)>>2)];
 var $cmp12=($8|0)==($pbase_0|0);
 if($cmp12){var $retval_0=-1;label=12;break;}else{label=6;break;}
 case 6: 
 var $cmp16=($call_i|0)==3;
 if($cmp16){label=7;break;}else{label=8;break;}
 case 7: 
 var $9=$pbase_0;
 var $10=HEAP32[(($__file_30)>>2)];
 var $call19=_fwrite($9,1,1,$10);
 var $cmp20=($call19|0)==1;
 if($cmp20){label=11;break;}else{var $retval_0=-1;label=12;break;}
 case 8: 
 var $cmp26=($call_i|0)==1;
 var $11=($call_i>>>0)<2;
 if($11){label=9;break;}else{var $retval_0=-1;label=12;break;}
 case 9: 
 var $12=HEAP32[(($__extbe)>>2)];
 var $sub_ptr_lhs_cast=$12;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $13=HEAP32[(($__file_30)>>2)];
 var $call31=_fwrite($arraydecay,1,$sub_ptr_sub,$13);
 var $cmp32=($call31|0)==($sub_ptr_sub|0);
 if($cmp32){label=10;break;}else{var $retval_0=-1;label=12;break;}
 case 10: 
 var $14=HEAP32[(($__e)>>2)];
 var $_pbase_0=($cmp26?$14:$pbase_0);
 if($cmp26){var $pbase_0=$_pbase_0;label=5;break;}else{label=11;break;}
 case 11: 
 var $cond_i=($cmp_i?0:$__c);
 var $retval_0=$cond_i;label=12;break;
 case 12: 
 var $retval_0;
 STACKTOP=sp;return $retval_0;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__110__stdinbufIwEC2EP8_IO_FILEP11__mbstate_t($this,$__fp,$__st){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $ref_tmp=sp;
 var $0=(($this)|0);
 HEAP32[(($0)>>2)]=5920;
 var $__loc__i1=(($this+4)|0);
 __ZNSt3__16localeC2Ev($__loc__i1);
 var $__binp__i=(($this+8)|0);
 var $1=$__binp__i;
 HEAP32[(($1)>>2)]=0; HEAP32[((($1)+(4))>>2)]=0; HEAP32[((($1)+(8))>>2)]=0; HEAP32[((($1)+(12))>>2)]=0; HEAP32[((($1)+(16))>>2)]=0; HEAP32[((($1)+(20))>>2)]=0;
 HEAP32[(($0)>>2)]=6688;
 var $__file_=(($this+32)|0);
 HEAP32[(($__file_)>>2)]=$__fp;
 var $__st_=(($this+40)|0);
 HEAP32[(($__st_)>>2)]=$__st;
 var $__last_consumed_=(($this+48)|0);
 HEAP32[(($__last_consumed_)>>2)]=-1;
 var $__last_consumed_is_next_=(($this+52)|0);
 HEAP8[($__last_consumed_is_next_)]=0;
 __ZNSt3__16localeC2ERKS0_($ref_tmp,$__loc__i1);
 var $call_i_i3=(function() { try { __THREW__ = 0; return __ZNKSt3__16locale9use_facetERNS0_2idE($ref_tmp,15072) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=5;break; }
 case 2: 
 var $2=$call_i_i3;
 var $__cv__i=(($this+36)|0);
 HEAP32[(($__cv__i)>>2)]=$2;
 var $3=$call_i_i3;
 var $vtable_i_i=HEAP32[(($3)>>2)];
 var $vfn_i_i=(($vtable_i_i+24)|0);
 var $4=HEAP32[(($vfn_i_i)>>2)];
 var $call_i7_i=FUNCTION_TABLE[$4]($2);
 var $__encoding__i=(($this+44)|0);
 HEAP32[(($__encoding__i)>>2)]=$call_i7_i;
 var $5=HEAP32[(($__cv__i)>>2)];
 var $6=$5;
 var $vtable_i10_i=HEAP32[(($6)>>2)];
 var $vfn_i11_i=(($vtable_i10_i+28)|0);
 var $7=HEAP32[(($vfn_i11_i)>>2)];
 var $call_i12_i=FUNCTION_TABLE[$7]($5);
 var $__always_noconv__i=(($this+53)|0);
 var $frombool_i=($call_i12_i&1);
 HEAP8[($__always_noconv__i)]=$frombool_i;
 var $8=HEAP32[(($__encoding__i)>>2)];
 var $cmp_i=($8|0)>8;
 if($cmp_i){label=3;break;}else{label=4;break;}
 case 3: 
 (function() { try { __THREW__ = 0; return __ZNSt3__121__throw_runtime_errorEPKc(112) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=4;break; } else { label=5;break; }
 case 4: 
 __ZNSt3__16localeD2Ev($ref_tmp);
 STACKTOP=sp;return;
 case 5: 
 var $9$0 = ___cxa_find_matching_catch(-1, -1); var $9$1 = tempRet0;
 __ZNSt3__16localeD2Ev($ref_tmp);
 HEAP32[(($0)>>2)]=5920;
 __ZNSt3__16localeD2Ev($__loc__i1);
 ___resumeException($9$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__110__stdinbufIwED1Ev($this){
 var label=0;
 var $0=(($this)|0);
 HEAP32[(($0)>>2)]=5920;
 var $__loc__i_i=(($this+4)|0);
 __ZNSt3__16localeD2Ev($__loc__i_i);
 return;
}
function __ZNSt3__110__stdinbufIwED0Ev($this){
 var label=0;
 var $0=(($this)|0);
 HEAP32[(($0)>>2)]=5920;
 var $__loc__i_i_i=(($this+4)|0);
 __ZNSt3__16localeD2Ev($__loc__i_i_i);
 var $1=$this;
 __ZdlPv($1);
 return;
}
function __ZNSt3__110__stdinbufIwE5imbueERKNS_6localeE($this,$__loc){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $call_i=__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,15072);
 var $0=$call_i;
 var $__cv_=(($this+36)|0);
 HEAP32[(($__cv_)>>2)]=$0;
 var $1=$call_i;
 var $vtable_i=HEAP32[(($1)>>2)];
 var $vfn_i=(($vtable_i+24)|0);
 var $2=HEAP32[(($vfn_i)>>2)];
 var $call_i7=FUNCTION_TABLE[$2]($0);
 var $__encoding_=(($this+44)|0);
 HEAP32[(($__encoding_)>>2)]=$call_i7;
 var $3=HEAP32[(($__cv_)>>2)];
 var $4=$3;
 var $vtable_i10=HEAP32[(($4)>>2)];
 var $vfn_i11=(($vtable_i10+28)|0);
 var $5=HEAP32[(($vfn_i11)>>2)];
 var $call_i12=FUNCTION_TABLE[$5]($3);
 var $__always_noconv_=(($this+53)|0);
 var $frombool=($call_i12&1);
 HEAP8[($__always_noconv_)]=$frombool;
 var $6=HEAP32[(($__encoding_)>>2)];
 var $cmp=($6|0)>8;
 if($cmp){label=2;break;}else{label=3;break;}
 case 2: 
 __ZNSt3__121__throw_runtime_errorEPKc(112);
 label=3;break;
 case 3: 
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__110__stdinbufIwE9underflowEv($this){
 var label=0;
 var $call=__ZNSt3__110__stdinbufIwE9__getcharEb($this,0);
 return $call;
}
function __ZNSt3__110__stdinbufIwE5uflowEv($this){
 var label=0;
 var $call=__ZNSt3__110__stdinbufIwE9__getcharEb($this,1);
 return $call;
}
function __ZNSt3__110__stdinbufIwE9pbackfailEj($this,$__c){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+32)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__extbuf=sp;
 var $__enxt=(sp)+(8);
 var $__ci=(sp)+(16);
 var $__inxt=(sp)+(24);
 var $cmp_i=($__c|0)==-1;
 var $__last_consumed_is_next_=(($this+52)|0);
 var $0=HEAP8[($__last_consumed_is_next_)];
 var $1=$0&1;
 var $tobool=(($1<<24)>>24)!=0;
 if($cmp_i){label=2;break;}else{label=4;break;}
 case 2: 
 if($tobool){var $retval_0=-1;label=11;break;}else{label=3;break;}
 case 3: 
 var $__last_consumed_=(($this+48)|0);
 var $2=HEAP32[(($__last_consumed_)>>2)];
 var $lnot=($2|0)!=-1;
 var $frombool=($lnot&1);
 HEAP8[($__last_consumed_is_next_)]=$frombool;
 var $retval_0=$2;label=11;break;
 case 4: 
 var $__last_consumed_12=(($this+48)|0);
 if($tobool){label=5;break;}else{label=10;break;}
 case 5: 
 var $3=HEAP32[(($__last_consumed_12)>>2)];
 HEAP32[(($__ci)>>2)]=$3;
 var $__cv_=(($this+36)|0);
 var $4=HEAP32[(($__cv_)>>2)];
 var $__st_=(($this+40)|0);
 var $5=HEAP32[(($__st_)>>2)];
 var $add_ptr=(($__ci+4)|0);
 var $arraydecay=(($__extbuf)|0);
 var $add_ptr15=(($__extbuf+8)|0);
 var $6=$4;
 var $vtable_i=HEAP32[(($6)>>2)];
 var $vfn_i=(($vtable_i+12)|0);
 var $7=HEAP32[(($vfn_i)>>2)];
 var $call_i=FUNCTION_TABLE[$7]($4,$5,$__ci,$add_ptr,$__inxt,$arraydecay,$add_ptr15,$__enxt);
 if(($call_i|0)==2|($call_i|0)==1){ var $retval_0=-1;label=11;break;}else if(($call_i|0)==3){ label=6;break;}else{label=7;break;}
 case 6: 
 var $8=HEAP32[(($__last_consumed_12)>>2)];
 var $conv=(($8)&255);
 HEAP8[($arraydecay)]=$conv;
 var $add_ptr20=(($__extbuf+1)|0);
 HEAP32[(($__enxt)>>2)]=$add_ptr20;
 label=7;break;
 case 7: 
 var $__file_=(($this+32)|0);
 label=8;break;
 case 8: 
 var $9=HEAP32[(($__enxt)>>2)];
 var $cmp=($9>>>0)>($arraydecay>>>0);
 if($cmp){label=9;break;}else{label=10;break;}
 case 9: 
 var $incdec_ptr=((($9)-(1))|0);
 HEAP32[(($__enxt)>>2)]=$incdec_ptr;
 var $10=HEAP8[($incdec_ptr)];
 var $conv24=(($10<<24)>>24);
 var $11=HEAP32[(($__file_)>>2)];
 var $call25=_ungetc($conv24,$11);
 var $cmp26=($call25|0)==-1;
 if($cmp26){var $retval_0=-1;label=11;break;}else{label=8;break;}
 case 10: 
 HEAP32[(($__last_consumed_12)>>2)]=$__c;
 HEAP8[($__last_consumed_is_next_)]=1;
 var $retval_0=$__c;label=11;break;
 case 11: 
 var $retval_0;
 STACKTOP=sp;return $retval_0;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__110__stdinbufIwE9__getcharEb($this,$__consume){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+32)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__extbuf=sp;
 var $__1buf=(sp)+(8);
 var $__enxt=(sp)+(16);
 var $__inxt=(sp)+(24);
 var $__last_consumed_is_next_=(($this+52)|0);
 var $0=HEAP8[($__last_consumed_is_next_)];
 var $1=$0&1;
 var $tobool=(($1<<24)>>24)==0;
 if($tobool){label=4;break;}else{label=2;break;}
 case 2: 
 var $__last_consumed_=(($this+48)|0);
 var $2=HEAP32[(($__last_consumed_)>>2)];
 if($__consume){label=3;break;}else{var $retval_0=$2;label=22;break;}
 case 3: 
 HEAP32[(($__last_consumed_)>>2)]=-1;
 HEAP8[($__last_consumed_is_next_)]=0;
 var $retval_0=$2;label=22;break;
 case 4: 
 var $__encoding_=(($this+44)|0);
 var $3=HEAP32[(($__encoding_)>>2)];
 var $cmp_i_i_i=($3|0)>1;
 var $_sroa_speculated=($cmp_i_i_i?$3:1);
 var $cmp24=($_sroa_speculated|0)>0;
 if($cmp24){label=5;break;}else{label=8;break;}
 case 5: 
 var $__file_=(($this+32)|0);
 var $__i_025=0;label=6;break;
 case 6: 
 var $__i_025;
 var $4=HEAP32[(($__file_)>>2)];
 var $call8=_fgetc($4);
 var $cmp9=($call8|0)==-1;
 if($cmp9){var $retval_0=-1;label=22;break;}else{label=7;break;}
 case 7: 
 var $conv=(($call8)&255);
 var $arrayidx=(($__extbuf+$__i_025)|0);
 HEAP8[($arrayidx)]=$conv;
 var $inc=((($__i_025)+(1))|0);
 var $cmp=($inc|0)<($_sroa_speculated|0);
 if($cmp){var $__i_025=$inc;label=6;break;}else{label=8;break;}
 case 8: 
 var $__always_noconv_=(($this+53)|0);
 var $5=HEAP8[($__always_noconv_)];
 var $6=$5&1;
 var $tobool13=(($6<<24)>>24)==0;
 if($tobool13){label=9;break;}else{label=10;break;}
 case 9: 
 var $__st_=(($this+40)|0);
 var $__cv_=(($this+36)|0);
 var $arraydecay=(($__extbuf)|0);
 var $add_ptr19=(($__1buf+4)|0);
 var $__file_28=(($this+32)|0);
 var $__nread_0=$_sroa_speculated;label=11;break;
 case 10: 
 var $arrayidx15=(($__extbuf)|0);
 var $7=HEAP8[($arrayidx15)];
 var $conv16=(($7<<24)>>24);
 HEAP32[(($__1buf)>>2)]=$conv16;
 var $__nread_2=$_sroa_speculated;label=16;break;
 case 11: 
 var $__nread_0;
 var $8=HEAP32[(($__st_)>>2)];
 var $9=$8;
 var $ld$0$0=(($9)|0);
 var $10$0=HEAP32[(($ld$0$0)>>2)];
 var $ld$1$1=(($9+4)|0);
 var $10$1=HEAP32[(($ld$1$1)>>2)];
 var $11=HEAP32[(($__cv_)>>2)];
 var $add_ptr=(($__extbuf+$__nread_0)|0);
 var $12=$11;
 var $vtable_i=HEAP32[(($12)>>2)];
 var $vfn_i=(($vtable_i+16)|0);
 var $13=HEAP32[(($vfn_i)>>2)];
 var $call_i=FUNCTION_TABLE[$13]($11,$8,$arraydecay,$add_ptr,$__enxt,$__1buf,$add_ptr19,$__inxt);
 if(($call_i|0)==1){ label=12;break;}else if(($call_i|0)==3){ label=14;break;}else if(($call_i|0)==2){ var $retval_0=-1;label=22;break;}else{var $__nread_2=$__nread_0;label=16;break;}
 case 12: 
 var $14=HEAP32[(($__st_)>>2)];
 var $15=$14;
 var $st$2$0=(($15)|0);
 HEAP32[(($st$2$0)>>2)]=$10$0;
 var $st$3$1=(($15+4)|0);
 HEAP32[(($st$3$1)>>2)]=$10$1;
 var $cmp23=($__nread_0|0)==8;
 if($cmp23){var $retval_0=-1;label=22;break;}else{label=13;break;}
 case 13: 
 var $16=HEAP32[(($__file_28)>>2)];
 var $call29=_fgetc($16);
 var $cmp30=($call29|0)==-1;
 if($cmp30){var $retval_0=-1;label=22;break;}else{label=15;break;}
 case 14: 
 var $17=HEAP8[($arraydecay)];
 var $conv41=(($17<<24)>>24);
 HEAP32[(($__1buf)>>2)]=$conv41;
 var $__nread_2=$__nread_0;label=16;break;
 case 15: 
 var $conv34=(($call29)&255);
 HEAP8[($add_ptr)]=$conv34;
 var $inc36=((($__nread_0)+(1))|0);
 var $__nread_0=$inc36;label=11;break;
 case 16: 
 var $__nread_2;
 if($__consume){label=20;break;}else{label=17;break;}
 case 17: 
 var $__file_53=(($this+32)|0);
 var $__i46_0=$__nread_2;label=18;break;
 case 18: 
 var $__i46_0;
 var $cmp48=($__i46_0|0)>0;
 if($cmp48){label=19;break;}else{label=21;break;}
 case 19: 
 var $dec=((($__i46_0)-(1))|0);
 var $arrayidx50=(($__extbuf+$dec)|0);
 var $18=HEAP8[($arrayidx50)];
 var $conv51=(($18<<24)>>24);
 var $19=HEAP32[(($__file_53)>>2)];
 var $call54=_ungetc($conv51,$19);
 var $cmp55=($call54|0)==-1;
 if($cmp55){var $retval_0=-1;label=22;break;}else{var $__i46_0=$dec;label=18;break;}
 case 20: 
 var $20=HEAP32[(($__1buf)>>2)];
 var $__last_consumed_62=(($this+48)|0);
 HEAP32[(($__last_consumed_62)>>2)]=$20;
 var $retval_0=$20;label=22;break;
 case 21: 
 var $_pre=HEAP32[(($__1buf)>>2)];
 var $retval_0=$_pre;label=22;break;
 case 22: 
 var $retval_0;
 STACKTOP=sp;return $retval_0;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__111__stdoutbufIcED1Ev($this){
 var label=0;
 var $0=(($this)|0);
 HEAP32[(($0)>>2)]=5992;
 var $__loc__i_i=(($this+4)|0);
 __ZNSt3__16localeD2Ev($__loc__i_i);
 return;
}
function __ZNSt3__111__stdoutbufIcED0Ev($this){
 var label=0;
 var $0=(($this)|0);
 HEAP32[(($0)>>2)]=5992;
 var $__loc__i_i_i=(($this+4)|0);
 __ZNSt3__16localeD2Ev($__loc__i_i_i);
 var $1=$this;
 __ZdlPv($1);
 return;
}
function __ZNSt3__111__stdoutbufIcE5imbueERKNS_6localeE($this,$__loc){
 var label=0;
 var $0=$this;
 var $vtable=HEAP32[(($0)>>2)];
 var $vfn=(($vtable+24)|0);
 var $1=HEAP32[(($vfn)>>2)];
 var $call=FUNCTION_TABLE[$1]($this);
 var $call_i=__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,15080);
 var $2=$call_i;
 var $__cv_=(($this+36)|0);
 HEAP32[(($__cv_)>>2)]=$2;
 var $3=$call_i;
 var $vtable_i=HEAP32[(($3)>>2)];
 var $vfn_i=(($vtable_i+28)|0);
 var $4=HEAP32[(($vfn_i)>>2)];
 var $call_i5=FUNCTION_TABLE[$4]($2);
 var $__always_noconv_=(($this+44)|0);
 var $frombool=($call_i5&1);
 HEAP8[($__always_noconv_)]=$frombool;
 return;
}
function __ZNSt3__111__stdoutbufIcE4syncEv($this){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__extbuf=sp;
 var $__extbe=(sp)+(8);
 var $__cv_=(($this+36)|0);
 var $__st_=(($this+40)|0);
 var $arraydecay=(($__extbuf)|0);
 var $add_ptr=(($__extbuf+8)|0);
 var $sub_ptr_rhs_cast=$__extbuf;
 var $__file_=(($this+32)|0);
 label=2;break;
 case 2: 
 var $0=HEAP32[(($__cv_)>>2)];
 var $1=HEAP32[(($__st_)>>2)];
 var $2=$0;
 var $vtable_i=HEAP32[(($2)>>2)];
 var $vfn_i=(($vtable_i+20)|0);
 var $3=HEAP32[(($vfn_i)>>2)];
 var $call_i=FUNCTION_TABLE[$3]($0,$1,$arraydecay,$add_ptr,$__extbe);
 var $4=HEAP32[(($__extbe)>>2)];
 var $sub_ptr_lhs_cast=$4;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $5=HEAP32[(($__file_)>>2)];
 var $call5=_fwrite($arraydecay,1,$sub_ptr_sub,$5);
 var $cmp=($call5|0)==($sub_ptr_sub|0);
 if($cmp){label=3;break;}else{var $retval_0=-1;label=5;break;}
 case 3: 
 if(($call_i|0)==1){ label=2;break;}else if(($call_i|0)==2){ var $retval_0=-1;label=5;break;}else{label=4;break;}
 case 4: 
 var $6=HEAP32[(($__file_)>>2)];
 var $call11=_fflush($6);
 var $not_tobool=($call11|0)!=0;
 var $_=(($not_tobool<<31)>>31);
 var $retval_0=$_;label=5;break;
 case 5: 
 var $retval_0;
 STACKTOP=sp;return $retval_0;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__111__stdoutbufIcE6xsputnEPKci($this,$__s,$__n){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__always_noconv_=(($this+44)|0);
 var $0=HEAP8[($__always_noconv_)];
 var $1=$0&1;
 var $tobool=(($1<<24)>>24)==0;
 if($tobool){label=2;break;}else{label=3;break;}
 case 2: 
 var $2=$this;
 var $cmp6=($__n|0)>0;
 if($cmp6){var $__s_addr_07=$__s;var $__i_08=0;label=4;break;}else{var $retval_0=0;label=6;break;}
 case 3: 
 var $__file_=(($this+32)|0);
 var $3=HEAP32[(($__file_)>>2)];
 var $call=_fwrite($__s,1,$__n,$3);
 var $retval_0=$call;label=6;break;
 case 4: 
 var $__i_08;
 var $__s_addr_07;
 var $vtable=HEAP32[(($2)>>2)];
 var $vfn=(($vtable+52)|0);
 var $4=HEAP32[(($vfn)>>2)];
 var $5=HEAP8[($__s_addr_07)];
 var $conv_i=($5&255);
 var $call3=FUNCTION_TABLE[$4]($this,$conv_i);
 var $cmp5=($call3|0)==-1;
 if($cmp5){var $retval_0=$__i_08;label=6;break;}else{label=5;break;}
 case 5: 
 var $inc=((($__i_08)+(1))|0);
 var $incdec_ptr=(($__s_addr_07+1)|0);
 var $cmp=($inc|0)<($__n|0);
 if($cmp){var $__s_addr_07=$incdec_ptr;var $__i_08=$inc;label=4;break;}else{var $retval_0=$inc;label=6;break;}
 case 6: 
 var $retval_0;
 return $retval_0;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__111__stdoutbufIcE8overflowEi($this,$__c){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+32)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__extbuf=sp;
 var $__1buf=(sp)+(8);
 var $__extbe=(sp)+(16);
 var $__e=(sp)+(24);
 var $cmp_i=($__c|0)==-1;
 if($cmp_i){label=11;break;}else{label=2;break;}
 case 2: 
 var $conv_i=(($__c)&255);
 HEAP8[($__1buf)]=$conv_i;
 var $__always_noconv_=(($this+44)|0);
 var $0=HEAP8[($__always_noconv_)];
 var $1=$0&1;
 var $tobool=(($1<<24)>>24)==0;
 if($tobool){label=4;break;}else{label=3;break;}
 case 3: 
 var $__file_=(($this+32)|0);
 var $2=HEAP32[(($__file_)>>2)];
 var $call5=_fwrite($__1buf,1,1,$2);
 var $cmp=($call5|0)==1;
 if($cmp){label=11;break;}else{var $retval_0=-1;label=12;break;}
 case 4: 
 var $arraydecay=(($__extbuf)|0);
 HEAP32[(($__extbe)>>2)]=$arraydecay;
 var $add_ptr=(($__1buf+1)|0);
 var $__cv_=(($this+36)|0);
 var $__st_=(($this+40)|0);
 var $add_ptr10=(($__extbuf+8)|0);
 var $sub_ptr_rhs_cast=$__extbuf;
 var $__file_30=(($this+32)|0);
 var $pbase_0=$__1buf;label=5;break;
 case 5: 
 var $pbase_0;
 var $3=HEAP32[(($__cv_)>>2)];
 var $4=HEAP32[(($__st_)>>2)];
 var $5=$3;
 var $vtable_i=HEAP32[(($5)>>2)];
 var $vfn_i=(($vtable_i+12)|0);
 var $6=HEAP32[(($vfn_i)>>2)];
 var $call_i=FUNCTION_TABLE[$6]($3,$4,$pbase_0,$add_ptr,$__e,$arraydecay,$add_ptr10,$__extbe);
 var $7=HEAP32[(($__e)>>2)];
 var $cmp12=($7|0)==($pbase_0|0);
 if($cmp12){var $retval_0=-1;label=12;break;}else{label=6;break;}
 case 6: 
 var $cmp16=($call_i|0)==3;
 if($cmp16){label=7;break;}else{label=8;break;}
 case 7: 
 var $8=HEAP32[(($__file_30)>>2)];
 var $call19=_fwrite($pbase_0,1,1,$8);
 var $cmp20=($call19|0)==1;
 if($cmp20){label=11;break;}else{var $retval_0=-1;label=12;break;}
 case 8: 
 var $cmp26=($call_i|0)==1;
 var $9=($call_i>>>0)<2;
 if($9){label=9;break;}else{var $retval_0=-1;label=12;break;}
 case 9: 
 var $10=HEAP32[(($__extbe)>>2)];
 var $sub_ptr_lhs_cast=$10;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $11=HEAP32[(($__file_30)>>2)];
 var $call31=_fwrite($arraydecay,1,$sub_ptr_sub,$11);
 var $cmp32=($call31|0)==($sub_ptr_sub|0);
 if($cmp32){label=10;break;}else{var $retval_0=-1;label=12;break;}
 case 10: 
 var $12=HEAP32[(($__e)>>2)];
 var $_pbase_0=($cmp26?$12:$pbase_0);
 if($cmp26){var $pbase_0=$_pbase_0;label=5;break;}else{label=11;break;}
 case 11: 
 var $cond_i=($cmp_i?0:$__c);
 var $retval_0=$cond_i;label=12;break;
 case 12: 
 var $retval_0;
 STACKTOP=sp;return $retval_0;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__110__stdinbufIcEC2EP8_IO_FILEP11__mbstate_t($this,$__fp,$__st){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $ref_tmp=sp;
 var $0=(($this)|0);
 HEAP32[(($0)>>2)]=5992;
 var $__loc__i1=(($this+4)|0);
 __ZNSt3__16localeC2Ev($__loc__i1);
 var $__binp__i=(($this+8)|0);
 var $1=$__binp__i;
 HEAP32[(($1)>>2)]=0; HEAP32[((($1)+(4))>>2)]=0; HEAP32[((($1)+(8))>>2)]=0; HEAP32[((($1)+(12))>>2)]=0; HEAP32[((($1)+(16))>>2)]=0; HEAP32[((($1)+(20))>>2)]=0;
 HEAP32[(($0)>>2)]=6760;
 var $__file_=(($this+32)|0);
 HEAP32[(($__file_)>>2)]=$__fp;
 var $__st_=(($this+40)|0);
 HEAP32[(($__st_)>>2)]=$__st;
 var $__last_consumed_=(($this+48)|0);
 HEAP32[(($__last_consumed_)>>2)]=-1;
 var $__last_consumed_is_next_=(($this+52)|0);
 HEAP8[($__last_consumed_is_next_)]=0;
 __ZNSt3__16localeC2ERKS0_($ref_tmp,$__loc__i1);
 var $call_i_i3=(function() { try { __THREW__ = 0; return __ZNKSt3__16locale9use_facetERNS0_2idE($ref_tmp,15080) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=5;break; }
 case 2: 
 var $2=$call_i_i3;
 var $__cv__i=(($this+36)|0);
 HEAP32[(($__cv__i)>>2)]=$2;
 var $3=$call_i_i3;
 var $vtable_i_i=HEAP32[(($3)>>2)];
 var $vfn_i_i=(($vtable_i_i+24)|0);
 var $4=HEAP32[(($vfn_i_i)>>2)];
 var $call_i7_i=FUNCTION_TABLE[$4]($2);
 var $__encoding__i=(($this+44)|0);
 HEAP32[(($__encoding__i)>>2)]=$call_i7_i;
 var $5=HEAP32[(($__cv__i)>>2)];
 var $6=$5;
 var $vtable_i10_i=HEAP32[(($6)>>2)];
 var $vfn_i11_i=(($vtable_i10_i+28)|0);
 var $7=HEAP32[(($vfn_i11_i)>>2)];
 var $call_i12_i=FUNCTION_TABLE[$7]($5);
 var $__always_noconv__i=(($this+53)|0);
 var $frombool_i=($call_i12_i&1);
 HEAP8[($__always_noconv__i)]=$frombool_i;
 var $8=HEAP32[(($__encoding__i)>>2)];
 var $cmp_i=($8|0)>8;
 if($cmp_i){label=3;break;}else{label=4;break;}
 case 3: 
 (function() { try { __THREW__ = 0; return __ZNSt3__121__throw_runtime_errorEPKc(112) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=4;break; } else { label=5;break; }
 case 4: 
 __ZNSt3__16localeD2Ev($ref_tmp);
 STACKTOP=sp;return;
 case 5: 
 var $9$0 = ___cxa_find_matching_catch(-1, -1); var $9$1 = tempRet0;
 __ZNSt3__16localeD2Ev($ref_tmp);
 HEAP32[(($0)>>2)]=5992;
 __ZNSt3__16localeD2Ev($__loc__i1);
 ___resumeException($9$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__110__stdinbufIcED1Ev($this){
 var label=0;
 var $0=(($this)|0);
 HEAP32[(($0)>>2)]=5992;
 var $__loc__i_i=(($this+4)|0);
 __ZNSt3__16localeD2Ev($__loc__i_i);
 return;
}
function __ZNSt3__110__stdinbufIcED0Ev($this){
 var label=0;
 var $0=(($this)|0);
 HEAP32[(($0)>>2)]=5992;
 var $__loc__i_i_i=(($this+4)|0);
 __ZNSt3__16localeD2Ev($__loc__i_i_i);
 var $1=$this;
 __ZdlPv($1);
 return;
}
function __ZNSt3__110__stdinbufIcE5imbueERKNS_6localeE($this,$__loc){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $call_i=__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,15080);
 var $0=$call_i;
 var $__cv_=(($this+36)|0);
 HEAP32[(($__cv_)>>2)]=$0;
 var $1=$call_i;
 var $vtable_i=HEAP32[(($1)>>2)];
 var $vfn_i=(($vtable_i+24)|0);
 var $2=HEAP32[(($vfn_i)>>2)];
 var $call_i7=FUNCTION_TABLE[$2]($0);
 var $__encoding_=(($this+44)|0);
 HEAP32[(($__encoding_)>>2)]=$call_i7;
 var $3=HEAP32[(($__cv_)>>2)];
 var $4=$3;
 var $vtable_i10=HEAP32[(($4)>>2)];
 var $vfn_i11=(($vtable_i10+28)|0);
 var $5=HEAP32[(($vfn_i11)>>2)];
 var $call_i12=FUNCTION_TABLE[$5]($3);
 var $__always_noconv_=(($this+53)|0);
 var $frombool=($call_i12&1);
 HEAP8[($__always_noconv_)]=$frombool;
 var $6=HEAP32[(($__encoding_)>>2)];
 var $cmp=($6|0)>8;
 if($cmp){label=2;break;}else{label=3;break;}
 case 2: 
 __ZNSt3__121__throw_runtime_errorEPKc(112);
 label=3;break;
 case 3: 
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__110__stdinbufIcE9underflowEv($this){
 var label=0;
 var $call=__ZNSt3__110__stdinbufIcE9__getcharEb($this,0);
 return $call;
}
function __ZNSt3__110__stdinbufIcE5uflowEv($this){
 var label=0;
 var $call=__ZNSt3__110__stdinbufIcE9__getcharEb($this,1);
 return $call;
}
function __ZNSt3__110__stdinbufIcE9pbackfailEi($this,$__c){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+32)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__extbuf=sp;
 var $__enxt=(sp)+(8);
 var $__ci=(sp)+(16);
 var $__inxt=(sp)+(24);
 var $cmp_i=($__c|0)==-1;
 var $__last_consumed_is_next_=(($this+52)|0);
 var $0=HEAP8[($__last_consumed_is_next_)];
 var $1=$0&1;
 var $tobool=(($1<<24)>>24)!=0;
 if($cmp_i){label=2;break;}else{label=4;break;}
 case 2: 
 if($tobool){var $retval_0=-1;label=11;break;}else{label=3;break;}
 case 3: 
 var $__last_consumed_=(($this+48)|0);
 var $2=HEAP32[(($__last_consumed_)>>2)];
 var $lnot=($2|0)!=-1;
 var $frombool=($lnot&1);
 HEAP8[($__last_consumed_is_next_)]=$frombool;
 var $retval_0=$2;label=11;break;
 case 4: 
 var $__last_consumed_12=(($this+48)|0);
 if($tobool){label=5;break;}else{label=10;break;}
 case 5: 
 var $3=HEAP32[(($__last_consumed_12)>>2)];
 var $conv_i=(($3)&255);
 HEAP8[($__ci)]=$conv_i;
 var $__cv_=(($this+36)|0);
 var $4=HEAP32[(($__cv_)>>2)];
 var $__st_=(($this+40)|0);
 var $5=HEAP32[(($__st_)>>2)];
 var $add_ptr=(($__ci+1)|0);
 var $arraydecay=(($__extbuf)|0);
 var $add_ptr15=(($__extbuf+8)|0);
 var $6=$4;
 var $vtable_i=HEAP32[(($6)>>2)];
 var $vfn_i=(($vtable_i+12)|0);
 var $7=HEAP32[(($vfn_i)>>2)];
 var $call_i=FUNCTION_TABLE[$7]($4,$5,$__ci,$add_ptr,$__inxt,$arraydecay,$add_ptr15,$__enxt);
 if(($call_i|0)==2|($call_i|0)==1){ var $retval_0=-1;label=11;break;}else if(($call_i|0)==3){ label=6;break;}else{label=7;break;}
 case 6: 
 var $8=HEAP32[(($__last_consumed_12)>>2)];
 var $conv=(($8)&255);
 HEAP8[($arraydecay)]=$conv;
 var $add_ptr20=(($__extbuf+1)|0);
 HEAP32[(($__enxt)>>2)]=$add_ptr20;
 label=7;break;
 case 7: 
 var $__file_=(($this+32)|0);
 label=8;break;
 case 8: 
 var $9=HEAP32[(($__enxt)>>2)];
 var $cmp=($9>>>0)>($arraydecay>>>0);
 if($cmp){label=9;break;}else{label=10;break;}
 case 9: 
 var $incdec_ptr=((($9)-(1))|0);
 HEAP32[(($__enxt)>>2)]=$incdec_ptr;
 var $10=HEAP8[($incdec_ptr)];
 var $conv24=(($10<<24)>>24);
 var $11=HEAP32[(($__file_)>>2)];
 var $call25=_ungetc($conv24,$11);
 var $cmp26=($call25|0)==-1;
 if($cmp26){var $retval_0=-1;label=11;break;}else{label=8;break;}
 case 10: 
 HEAP32[(($__last_consumed_12)>>2)]=$__c;
 HEAP8[($__last_consumed_is_next_)]=1;
 var $retval_0=$__c;label=11;break;
 case 11: 
 var $retval_0;
 STACKTOP=sp;return $retval_0;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__110__stdinbufIcE9__getcharEb($this,$__consume){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+32)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__extbuf=sp;
 var $__1buf=(sp)+(8);
 var $__enxt=(sp)+(16);
 var $__inxt=(sp)+(24);
 var $__last_consumed_is_next_=(($this+52)|0);
 var $0=HEAP8[($__last_consumed_is_next_)];
 var $1=$0&1;
 var $tobool=(($1<<24)>>24)==0;
 if($tobool){label=4;break;}else{label=2;break;}
 case 2: 
 var $__last_consumed_=(($this+48)|0);
 var $2=HEAP32[(($__last_consumed_)>>2)];
 if($__consume){label=3;break;}else{var $retval_0=$2;label=23;break;}
 case 3: 
 HEAP32[(($__last_consumed_)>>2)]=-1;
 HEAP8[($__last_consumed_is_next_)]=0;
 var $retval_0=$2;label=23;break;
 case 4: 
 var $__encoding_=(($this+44)|0);
 var $3=HEAP32[(($__encoding_)>>2)];
 var $cmp_i_i_i=($3|0)>1;
 var $_sroa_speculated=($cmp_i_i_i?$3:1);
 var $cmp23=($_sroa_speculated|0)>0;
 if($cmp23){label=5;break;}else{label=8;break;}
 case 5: 
 var $__file_=(($this+32)|0);
 var $__i_024=0;label=6;break;
 case 6: 
 var $__i_024;
 var $4=HEAP32[(($__file_)>>2)];
 var $call8=_fgetc($4);
 var $cmp9=($call8|0)==-1;
 if($cmp9){var $retval_0=-1;label=23;break;}else{label=7;break;}
 case 7: 
 var $conv=(($call8)&255);
 var $arrayidx=(($__extbuf+$__i_024)|0);
 HEAP8[($arrayidx)]=$conv;
 var $inc=((($__i_024)+(1))|0);
 var $cmp=($inc|0)<($_sroa_speculated|0);
 if($cmp){var $__i_024=$inc;label=6;break;}else{label=8;break;}
 case 8: 
 var $__always_noconv_=(($this+53)|0);
 var $5=HEAP8[($__always_noconv_)];
 var $6=$5&1;
 var $tobool13=(($6<<24)>>24)==0;
 if($tobool13){label=9;break;}else{label=10;break;}
 case 9: 
 var $__st_=(($this+40)|0);
 var $__cv_=(($this+36)|0);
 var $arraydecay=(($__extbuf)|0);
 var $add_ptr18=(($__1buf+1)|0);
 var $__file_27=(($this+32)|0);
 var $__nread_0=$_sroa_speculated;label=11;break;
 case 10: 
 var $arrayidx15=(($__extbuf)|0);
 var $7=HEAP8[($arrayidx15)];
 HEAP8[($__1buf)]=$7;
 var $__nread_2=$_sroa_speculated;label=16;break;
 case 11: 
 var $__nread_0;
 var $8=HEAP32[(($__st_)>>2)];
 var $9=$8;
 var $ld$0$0=(($9)|0);
 var $10$0=HEAP32[(($ld$0$0)>>2)];
 var $ld$1$1=(($9+4)|0);
 var $10$1=HEAP32[(($ld$1$1)>>2)];
 var $11=HEAP32[(($__cv_)>>2)];
 var $add_ptr=(($__extbuf+$__nread_0)|0);
 var $12=$11;
 var $vtable_i=HEAP32[(($12)>>2)];
 var $vfn_i=(($vtable_i+16)|0);
 var $13=HEAP32[(($vfn_i)>>2)];
 var $call_i=FUNCTION_TABLE[$13]($11,$8,$arraydecay,$add_ptr,$__enxt,$__1buf,$add_ptr18,$__inxt);
 if(($call_i|0)==1){ label=12;break;}else if(($call_i|0)==3){ label=14;break;}else if(($call_i|0)==2){ var $retval_0=-1;label=23;break;}else{var $__nread_2=$__nread_0;label=16;break;}
 case 12: 
 var $14=HEAP32[(($__st_)>>2)];
 var $15=$14;
 var $st$2$0=(($15)|0);
 HEAP32[(($st$2$0)>>2)]=$10$0;
 var $st$3$1=(($15+4)|0);
 HEAP32[(($st$3$1)>>2)]=$10$1;
 var $cmp22=($__nread_0|0)==8;
 if($cmp22){var $retval_0=-1;label=23;break;}else{label=13;break;}
 case 13: 
 var $16=HEAP32[(($__file_27)>>2)];
 var $call28=_fgetc($16);
 var $cmp29=($call28|0)==-1;
 if($cmp29){var $retval_0=-1;label=23;break;}else{label=15;break;}
 case 14: 
 var $17=HEAP8[($arraydecay)];
 HEAP8[($__1buf)]=$17;
 var $__nread_2=$__nread_0;label=16;break;
 case 15: 
 var $conv33=(($call28)&255);
 HEAP8[($add_ptr)]=$conv33;
 var $inc35=((($__nread_0)+(1))|0);
 var $__nread_0=$inc35;label=11;break;
 case 16: 
 var $__nread_2;
 if($__consume){label=20;break;}else{label=17;break;}
 case 17: 
 var $__file_50=(($this+32)|0);
 var $__i44_0=$__nread_2;label=18;break;
 case 18: 
 var $__i44_0;
 var $cmp46=($__i44_0|0)>0;
 if($cmp46){label=19;break;}else{label=21;break;}
 case 19: 
 var $dec=((($__i44_0)-(1))|0);
 var $arrayidx48=(($__extbuf+$dec)|0);
 var $18=HEAP8[($arrayidx48)];
 var $conv_i65=($18&255);
 var $19=HEAP32[(($__file_50)>>2)];
 var $call51=_ungetc($conv_i65,$19);
 var $cmp52=($call51|0)==-1;
 if($cmp52){var $retval_0=-1;label=23;break;}else{var $__i44_0=$dec;label=18;break;}
 case 20: 
 var $20=HEAP8[($__1buf)];
 var $conv_i63=($20&255);
 var $__last_consumed_59=(($this+48)|0);
 HEAP32[(($__last_consumed_59)>>2)]=$conv_i63;
 var $21=$20;label=22;break;
 case 21: 
 var $_pre=HEAP8[($__1buf)];
 var $21=$_pre;label=22;break;
 case 22: 
 var $21;
 var $conv_i=($21&255);
 var $retval_0=$conv_i;label=23;break;
 case 23: 
 var $retval_0;
 STACKTOP=sp;return $retval_0;
  default: assert(0, "bad label: " + label);
 }
}
function __GLOBAL__I_a(){
 var label=0;
 __ZNSt3__18ios_base4InitC2Ev(0);
 var $0=_atexit((390),15832,___dso_handle);
 return;
}
function __ZNSt3__114__shared_countD2Ev($this){
 var label=0;
 return;
}
function __ZNSt3__114__shared_count12__add_sharedEv($this){
 var label=0;
 var $__shared_owners_=(($this+4)|0);
 var $0=(tempValue=HEAP32[(($__shared_owners_)>>2)],HEAP32[(($__shared_owners_)>>2)]=tempValue+1,tempValue);
 return;
}
function __ZNSt3__114__shared_count16__release_sharedEv($this){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__shared_owners_=(($this+4)|0);
 var $0=(tempValue=HEAP32[(($__shared_owners_)>>2)],HEAP32[(($__shared_owners_)>>2)]=tempValue+-1,tempValue);
 var $cmp=($0|0)==0;
 if($cmp){label=2;break;}else{var $retval_0=0;label=3;break;}
 case 2: 
 var $1=$this;
 var $vtable=HEAP32[(($1)>>2)];
 var $vfn=(($vtable+8)|0);
 var $2=HEAP32[(($vfn)>>2)];
 FUNCTION_TABLE[$2]($this);
 var $retval_0=1;label=3;break;
 case 3: 
 var $retval_0;
 return $retval_0;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt11logic_errorC2EPKc($this,$msg){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $0=(($this)|0);
 HEAP32[(($0)>>2)]=4296;
 var $__imp_=(($this+4)|0);
 var $new_isnull=($__imp_|0)==0;
 if($new_isnull){label=3;break;}else{label=2;break;}
 case 2: 
 var $call_i=_strlen($msg);
 var $add_i=((($call_i)+(1))|0);
 var $add2_i=((($call_i)+(13))|0);
 var $call3_i1=__Znaj($add2_i);
 var $1=$call3_i1;
 var $arrayidx_i=(($call3_i1+4)|0);
 var $2=$arrayidx_i;
 HEAP32[(($2)>>2)]=$call_i;
 HEAP32[(($1)>>2)]=$call_i;
 var $add_ptr_i=(($call3_i1+12)|0);
 HEAP32[(($__imp_)>>2)]=$add_ptr_i;
 var $add_ptr_i_i=(($call3_i1+8)|0);
 var $3=$add_ptr_i_i;
 HEAP32[(($3)>>2)]=0;
 assert($add_i % 1 === 0);(_memcpy($add_ptr_i, $msg, $add_i)|0);
 label=3;break;
 case 3: 
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt11logic_errorD0Ev($this){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $0=(($this)|0);
 HEAP32[(($0)>>2)]=4296;
 var $__imp__i=(($this+4)|0);
 var $this_idx_val_i_i=HEAP32[(($__imp__i)>>2)];
 var $add_ptr_i_i_i=((($this_idx_val_i_i)-(4))|0);
 var $1=$add_ptr_i_i_i;
 var $2=(tempValue=HEAP32[(($1)>>2)],HEAP32[(($1)>>2)]=tempValue+-1,tempValue);
 var $3=((($2)-(1))|0);
 var $cmp_i_i=($3|0)<0;
 if($cmp_i_i){label=2;break;}else{label=4;break;}
 case 2: 
 var $4=HEAP32[(($__imp__i)>>2)];
 var $add_ptr_i_i=((($4)-(12))|0);
 var $isnull_i_i=($add_ptr_i_i|0)==0;
 if($isnull_i_i){label=4;break;}else{label=3;break;}
 case 3: 
 __ZdaPv($add_ptr_i_i);
 label=4;break;
 case 4: 
 var $5=$this;
 __ZdlPv($5);
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt11logic_errorD2Ev($this){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $0=(($this)|0);
 HEAP32[(($0)>>2)]=4296;
 var $__imp_=(($this+4)|0);
 var $this_idx_val_i=HEAP32[(($__imp_)>>2)];
 var $add_ptr_i_i=((($this_idx_val_i)-(4))|0);
 var $1=$add_ptr_i_i;
 var $2=(tempValue=HEAP32[(($1)>>2)],HEAP32[(($1)>>2)]=tempValue+-1,tempValue);
 var $3=((($2)-(1))|0);
 var $cmp_i=($3|0)<0;
 if($cmp_i){label=2;break;}else{label=4;break;}
 case 2: 
 var $4=HEAP32[(($__imp_)>>2)];
 var $add_ptr_i=((($4)-(12))|0);
 var $isnull_i=($add_ptr_i|0)==0;
 if($isnull_i){label=4;break;}else{label=3;break;}
 case 3: 
 __ZdaPv($add_ptr_i);
 label=4;break;
 case 4: 
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt11logic_error4whatEv($this){
 var label=0;
 var $__imp_=(($this+4)|0);
 var $_idx_val=HEAP32[(($__imp_)>>2)];
 return $_idx_val;
}
function __ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($this,$msg){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $0=(($this)|0);
 HEAP32[(($0)>>2)]=4232;
 var $__imp_=(($this+4)|0);
 var $new_isnull=($__imp_|0)==0;
 if($new_isnull){label=6;break;}else{label=2;break;}
 case 2: 
 var $__size__i_i_i_i=$msg;
 var $1=HEAP8[($__size__i_i_i_i)];
 var $and_i_i_i_i=$1&1;
 var $tobool_i_i_i_i=(($and_i_i_i_i<<24)>>24)==0;
 if($tobool_i_i_i_i){label=4;break;}else{label=3;break;}
 case 3: 
 var $__data__i21_i_i_i=(($msg+8)|0);
 var $2=HEAP32[(($__data__i21_i_i_i)>>2)];
 var $cond_i_i_i=$2;label=5;break;
 case 4: 
 var $__s_i_i_i_i=$msg;
 var $arrayidx_i_i_i_i=(($__s_i_i_i_i+1)|0);
 var $cond_i_i_i=$arrayidx_i_i_i_i;label=5;break;
 case 5: 
 var $cond_i_i_i;
 var $call_i=_strlen($cond_i_i_i);
 var $add_i=((($call_i)+(1))|0);
 var $add2_i=((($call_i)+(13))|0);
 var $call3_i1=__Znaj($add2_i);
 var $3=$call3_i1;
 var $arrayidx_i=(($call3_i1+4)|0);
 var $4=$arrayidx_i;
 HEAP32[(($4)>>2)]=$call_i;
 HEAP32[(($3)>>2)]=$call_i;
 var $add_ptr_i=(($call3_i1+12)|0);
 HEAP32[(($__imp_)>>2)]=$add_ptr_i;
 var $add_ptr_i_i=(($call3_i1+8)|0);
 var $5=$add_ptr_i_i;
 HEAP32[(($5)>>2)]=0;
 assert($add_i % 1 === 0);(_memcpy($add_ptr_i, $cond_i_i_i, $add_i)|0);
 label=6;break;
 case 6: 
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt13runtime_errorC2EPKc($this,$msg){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $0=(($this)|0);
 HEAP32[(($0)>>2)]=4232;
 var $__imp_=(($this+4)|0);
 var $new_isnull=($__imp_|0)==0;
 if($new_isnull){label=3;break;}else{label=2;break;}
 case 2: 
 var $call_i=_strlen($msg);
 var $add_i=((($call_i)+(1))|0);
 var $add2_i=((($call_i)+(13))|0);
 var $call3_i1=__Znaj($add2_i);
 var $1=$call3_i1;
 var $arrayidx_i=(($call3_i1+4)|0);
 var $2=$arrayidx_i;
 HEAP32[(($2)>>2)]=$call_i;
 HEAP32[(($1)>>2)]=$call_i;
 var $add_ptr_i=(($call3_i1+12)|0);
 HEAP32[(($__imp_)>>2)]=$add_ptr_i;
 var $add_ptr_i_i=(($call3_i1+8)|0);
 var $3=$add_ptr_i_i;
 HEAP32[(($3)>>2)]=0;
 assert($add_i % 1 === 0);(_memcpy($add_ptr_i, $msg, $add_i)|0);
 label=3;break;
 case 3: 
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt13runtime_errorD0Ev($this){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $0=(($this)|0);
 HEAP32[(($0)>>2)]=4232;
 var $__imp__i=(($this+4)|0);
 var $this_idx_val_i_i=HEAP32[(($__imp__i)>>2)];
 var $add_ptr_i_i_i=((($this_idx_val_i_i)-(4))|0);
 var $1=$add_ptr_i_i_i;
 var $2=(tempValue=HEAP32[(($1)>>2)],HEAP32[(($1)>>2)]=tempValue+-1,tempValue);
 var $3=((($2)-(1))|0);
 var $cmp_i_i=($3|0)<0;
 if($cmp_i_i){label=2;break;}else{label=4;break;}
 case 2: 
 var $4=HEAP32[(($__imp__i)>>2)];
 var $add_ptr_i_i=((($4)-(12))|0);
 var $isnull_i_i=($add_ptr_i_i|0)==0;
 if($isnull_i_i){label=4;break;}else{label=3;break;}
 case 3: 
 __ZdaPv($add_ptr_i_i);
 label=4;break;
 case 4: 
 var $5=$this;
 __ZdlPv($5);
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt13runtime_errorD2Ev($this){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $0=(($this)|0);
 HEAP32[(($0)>>2)]=4232;
 var $__imp_=(($this+4)|0);
 var $this_idx_val_i=HEAP32[(($__imp_)>>2)];
 var $add_ptr_i_i=((($this_idx_val_i)-(4))|0);
 var $1=$add_ptr_i_i;
 var $2=(tempValue=HEAP32[(($1)>>2)],HEAP32[(($1)>>2)]=tempValue+-1,tempValue);
 var $3=((($2)-(1))|0);
 var $cmp_i=($3|0)<0;
 if($cmp_i){label=2;break;}else{label=4;break;}
 case 2: 
 var $4=HEAP32[(($__imp_)>>2)];
 var $add_ptr_i=((($4)-(12))|0);
 var $isnull_i=($add_ptr_i|0)==0;
 if($isnull_i){label=4;break;}else{label=3;break;}
 case 3: 
 __ZdaPv($add_ptr_i);
 label=4;break;
 case 4: 
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt13runtime_error4whatEv($this){
 var label=0;
 var $__imp_=(($this+4)|0);
 var $_idx_val=HEAP32[(($__imp_)>>2)];
 return $_idx_val;
}
function __ZNSt12length_errorD0Ev($this){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $0=(($this)|0);
 HEAP32[(($0)>>2)]=4296;
 var $__imp__i=(($this+4)|0);
 var $this_idx_val_i_i=HEAP32[(($__imp__i)>>2)];
 var $add_ptr_i_i_i=((($this_idx_val_i_i)-(4))|0);
 var $1=$add_ptr_i_i_i;
 var $2=(tempValue=HEAP32[(($1)>>2)],HEAP32[(($1)>>2)]=tempValue+-1,tempValue);
 var $3=((($2)-(1))|0);
 var $cmp_i_i=($3|0)<0;
 if($cmp_i_i){label=2;break;}else{label=4;break;}
 case 2: 
 var $4=HEAP32[(($__imp__i)>>2)];
 var $add_ptr_i_i=((($4)-(12))|0);
 var $isnull_i_i=($add_ptr_i_i|0)==0;
 if($isnull_i_i){label=4;break;}else{label=3;break;}
 case 3: 
 __ZdaPv($add_ptr_i_i);
 label=4;break;
 case 4: 
 var $5=$this;
 __ZdlPv($5);
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__114error_categoryD2Ev($this){
 var label=0;
 return;
}
function __ZNKSt3__114error_category23default_error_conditionEi($agg_result,$this,$ev){
 var label=0;
 var $__val__i_i=(($agg_result)|0);
 HEAP32[(($__val__i_i)>>2)]=$ev;
 var $__cat__i_i=(($agg_result+4)|0);
 HEAP32[(($__cat__i_i)>>2)]=$this;
 return;
}
function __ZNKSt3__114error_category10equivalentEiRKNS_15error_conditionE($this,$code,$condition){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $ref_tmp=sp;
 var $0=$this;
 var $vtable=HEAP32[(($0)>>2)];
 var $vfn=(($vtable+12)|0);
 var $1=HEAP32[(($vfn)>>2)];
 FUNCTION_TABLE[$1]($ref_tmp,$this,$code);
 var $__cat__i_i=(($ref_tmp+4)|0);
 var $2=HEAP32[(($__cat__i_i)>>2)];
 var $__cat__i14_i=(($condition+4)|0);
 var $3=HEAP32[(($__cat__i14_i)>>2)];
 var $cmp_i_i=($2|0)==($3|0);
 if($cmp_i_i){label=2;break;}else{var $6=0;label=3;break;}
 case 2: 
 var $__val__i9_i=(($ref_tmp)|0);
 var $4=HEAP32[(($__val__i9_i)>>2)];
 var $__val__i_i=(($condition)|0);
 var $5=HEAP32[(($__val__i_i)>>2)];
 var $cmp_i=($4|0)==($5|0);
 var $6=$cmp_i;label=3;break;
 case 3: 
 var $6;
 STACKTOP=sp;return $6;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__114error_category10equivalentERKNS_10error_codeEi($this,$code,$condition){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__cat__i=(($code+4)|0);
 var $0=HEAP32[(($__cat__i)>>2)];
 var $cmp_i=($0|0)==($this|0);
 if($cmp_i){label=2;break;}else{var $2=0;label=3;break;}
 case 2: 
 var $__val__i=(($code)|0);
 var $1=HEAP32[(($__val__i)>>2)];
 var $cmp=($1|0)==($condition|0);
 var $2=$cmp;label=3;break;
 case 3: 
 var $2;
 return $2;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__112__do_message7messageEi($agg_result,$this,$ev){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $call=_strerror($ev);
 var $call_i_i_i=_strlen($call);
 var $cmp_i=($call_i_i_i>>>0)>4294967279;
 if($cmp_i){label=2;break;}else{label=3;break;}
 case 2: 
 __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(0);
 throw "Reached an unreachable!";
 case 3: 
 var $cmp2_i=($call_i_i_i>>>0)<11;
 if($cmp2_i){label=4;break;}else{label=5;break;}
 case 4: 
 var $shl_i_i=$call_i_i_i<<1;
 var $conv_i_i=(($shl_i_i)&255);
 var $__s2_i_i=$agg_result;
 var $__size__i50_i=$agg_result;
 HEAP8[($__size__i50_i)]=$conv_i_i;
 var $arrayidx_i_i=(($__s2_i_i+1)|0);
 var $__p_0_i=$arrayidx_i_i;label=6;break;
 case 5: 
 var $add_i_i_i=((($call_i_i_i)+(16))|0);
 var $and_i_i_i=$add_i_i_i&-16;
 var $call_i_i_i2=__Znwj($and_i_i_i);
 var $__data__i_i=(($agg_result+8)|0);
 HEAP32[(($__data__i_i)>>2)]=$call_i_i_i2;
 var $or_i_i=$and_i_i_i|1;
 var $__cap__i_i=(($agg_result)|0);
 HEAP32[(($__cap__i_i)>>2)]=$or_i_i;
 var $__size__i_i=(($agg_result+4)|0);
 HEAP32[(($__size__i_i)>>2)]=$call_i_i_i;
 var $__p_0_i=$call_i_i_i2;label=6;break;
 case 6: 
 var $__p_0_i;
 assert($call_i_i_i % 1 === 0);(_memcpy($__p_0_i, $call, $call_i_i_i)|0);
 var $arrayidx_i=(($__p_0_i+$call_i_i_i)|0);
 HEAP8[($arrayidx_i)]=0;
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__112system_error6__initERKNS_10error_codeENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($agg_result,$ec,$what_arg){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__size__i_i_i=$what_arg;
 var $ref_tmp=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__val__i=(($ec)|0);
 var $0=HEAP32[(($__val__i)>>2)];
 var $cmp_i=($0|0)==0;
 if($cmp_i){label=19;break;}else{label=2;break;}
 case 2: 
 var $1=HEAP8[($__size__i_i_i)];
 var $conv_i_i_i=($1&255);
 var $and_i_i_i=$conv_i_i_i&1;
 var $tobool_i_i_i=($and_i_i_i|0)==0;
 if($tobool_i_i_i){label=4;break;}else{label=3;break;}
 case 3: 
 var $__size__i23_i_i=(($what_arg+4)|0);
 var $2=HEAP32[(($__size__i23_i_i)>>2)];
 var $cond_i_i=$2;label=5;break;
 case 4: 
 var $shr_i_i_i6=$conv_i_i_i>>>1;
 var $cond_i_i=$shr_i_i_i6;label=5;break;
 case 5: 
 var $cond_i_i;
 var $cmp_i22=($cond_i_i|0)==0;
 if($cmp_i22){var $3=$0;label=7;break;}else{label=6;break;}
 case 6: 
 var $call2_i=__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($what_arg,2384,2);
 var $_pre=HEAP32[(($__val__i)>>2)];
 var $3=$_pre;label=7;break;
 case 7: 
 var $3;
 var $__cat__i=(($ec+4)|0);
 var $4=HEAP32[(($__cat__i)>>2)];
 var $5=$4;
 var $vtable_i=HEAP32[(($5)>>2)];
 var $vfn_i=(($vtable_i+24)|0);
 var $6=HEAP32[(($vfn_i)>>2)];
 FUNCTION_TABLE[$6]($ref_tmp,$4,$3);
 var $__size__i_i_i_i_i=$ref_tmp;
 var $7=HEAP8[($__size__i_i_i_i_i)];
 var $and_i_i_i_i_i=$7&1;
 var $tobool_i_i_i_i_i=(($and_i_i_i_i_i<<24)>>24)==0;
 if($tobool_i_i_i_i_i){label=9;break;}else{label=8;break;}
 case 8: 
 var $__data__i21_i_i_i_i=(($ref_tmp+8)|0);
 var $8=HEAP32[(($__data__i21_i_i_i_i)>>2)];
 var $cond_i_i_i_i=$8;label=10;break;
 case 9: 
 var $__s_i_i_i_i_i=$ref_tmp;
 var $arrayidx_i_i_i_i_i=(($__s_i_i_i_i_i+1)|0);
 var $cond_i_i_i_i=$arrayidx_i_i_i_i_i;label=10;break;
 case 10: 
 var $cond_i_i_i_i;
 var $conv_i_i_i_i=($7&255);
 var $and_i_i_i_i=$conv_i_i_i_i&1;
 var $tobool_i_i_i_i=($and_i_i_i_i|0)==0;
 if($tobool_i_i_i_i){label=12;break;}else{label=11;break;}
 case 11: 
 var $__size__i23_i_i_i=(($ref_tmp+4)|0);
 var $9=HEAP32[(($__size__i23_i_i_i)>>2)];
 var $cond_i_i_i=$9;label=13;break;
 case 12: 
 var $shr_i_i_i_i7=$conv_i_i_i_i>>>1;
 var $cond_i_i_i=$shr_i_i_i_i7;label=13;break;
 case 13: 
 var $cond_i_i_i;
 var $call3_i_i39=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($what_arg,$cond_i_i_i_i,$cond_i_i_i) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=14;break; } else { label=16;break; }
 case 14: 
 var $10=HEAP8[($__size__i_i_i_i_i)];
 var $and_i_i_i10=$10&1;
 var $tobool_i_i_i11=(($and_i_i_i10<<24)>>24)==0;
 if($tobool_i_i_i11){label=19;break;}else{label=15;break;}
 case 15: 
 var $__data__i_i_i=(($ref_tmp+8)|0);
 var $11=HEAP32[(($__data__i_i_i)>>2)];
 __ZdlPv($11);
 label=19;break;
 case 16: 
 var $12$0 = ___cxa_find_matching_catch(-1, -1); var $12$1 = tempRet0;
 var $13=HEAP8[($__size__i_i_i_i_i)];
 var $and_i_i_i13=$13&1;
 var $tobool_i_i_i14=(($and_i_i_i13<<24)>>24)==0;
 if($tobool_i_i_i14){label=18;break;}else{label=17;break;}
 case 17: 
 var $__data__i_i_i15=(($ref_tmp+8)|0);
 var $14=HEAP32[(($__data__i_i_i15)>>2)];
 __ZdlPv($14);
 label=18;break;
 case 18: 
 ___resumeException($12$0)
 case 19: 
 var $15=$agg_result;
 assert(12 % 1 === 0);HEAP32[(($15)>>2)]=HEAP32[(($__size__i_i_i)>>2)];HEAP32[((($15)+(4))>>2)]=HEAP32[((($__size__i_i_i)+(4))>>2)];HEAP32[((($15)+(8))>>2)]=HEAP32[((($__size__i_i_i)+(8))>>2)];
 HEAP32[(($__size__i_i_i)>>2)]=0; HEAP32[((($__size__i_i_i)+(4))>>2)]=0; HEAP32[((($__size__i_i_i)+(8))>>2)]=0;
 STACKTOP=sp;return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__112system_errorC2ENS_10error_codeEPKc($this,$ec,$what_arg){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+32)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $ec; $ec=STACKTOP;STACKTOP = (STACKTOP + 8)|0;(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($ec)>>2)]=HEAP32[((tempParam)>>2)];HEAP32[((($ec)+(4))>>2)]=HEAP32[(((tempParam)+(4))>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $ref_tmp=sp;
 var $agg_tmp=(sp)+(16);
 var $call_i_i_i=_strlen($what_arg);
 var $cmp_i=($call_i_i_i>>>0)>4294967279;
 if($cmp_i){label=2;break;}else{label=3;break;}
 case 2: 
 __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(0);
 throw "Reached an unreachable!";
 case 3: 
 var $cmp2_i=($call_i_i_i>>>0)<11;
 if($cmp2_i){label=4;break;}else{label=5;break;}
 case 4: 
 var $shl_i_i=$call_i_i_i<<1;
 var $conv_i_i=(($shl_i_i)&255);
 var $__s2_i_i=$agg_tmp;
 var $__size__i50_i=$agg_tmp;
 HEAP8[($__size__i50_i)]=$conv_i_i;
 var $arrayidx_i_i=(($__s2_i_i+1)|0);
 var $__p_0_i=$arrayidx_i_i;label=6;break;
 case 5: 
 var $add_i_i_i=((($call_i_i_i)+(16))|0);
 var $and_i_i_i=$add_i_i_i&-16;
 var $call_i_i_i2=__Znwj($and_i_i_i);
 var $__data__i_i=(($agg_tmp+8)|0);
 HEAP32[(($__data__i_i)>>2)]=$call_i_i_i2;
 var $or_i_i=$and_i_i_i|1;
 var $__cap__i_i=(($agg_tmp)|0);
 HEAP32[(($__cap__i_i)>>2)]=$or_i_i;
 var $__size__i_i=(($agg_tmp+4)|0);
 HEAP32[(($__size__i_i)>>2)]=$call_i_i_i;
 var $__p_0_i=$call_i_i_i2;label=6;break;
 case 6: 
 var $__p_0_i;
 assert($call_i_i_i % 1 === 0);(_memcpy($__p_0_i, $what_arg, $call_i_i_i)|0);
 var $arrayidx_i=(($__p_0_i+$call_i_i_i)|0);
 HEAP8[($arrayidx_i)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__112system_error6__initERKNS_10error_codeENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($ref_tmp,$ec,$agg_tmp) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=7;break; } else { label=13;break; }
 case 7: 
 var $0=(($this)|0);
 (function() { try { __THREW__ = 0; return __ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($0,$ref_tmp) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=8;break; } else { label=14;break; }
 case 8: 
 var $__size__i_i_i=$ref_tmp;
 var $1=HEAP8[($__size__i_i_i)];
 var $and_i_i_i3=$1&1;
 var $tobool_i_i_i=(($and_i_i_i3<<24)>>24)==0;
 if($tobool_i_i_i){label=10;break;}else{label=9;break;}
 case 9: 
 var $__data__i_i_i=(($ref_tmp+8)|0);
 var $2=HEAP32[(($__data__i_i_i)>>2)];
 __ZdlPv($2);
 label=10;break;
 case 10: 
 var $__size__i_i_i4=$agg_tmp;
 var $3=HEAP8[($__size__i_i_i4)];
 var $and_i_i_i5=$3&1;
 var $tobool_i_i_i6=(($and_i_i_i5<<24)>>24)==0;
 if($tobool_i_i_i6){label=12;break;}else{label=11;break;}
 case 11: 
 var $__data__i_i_i7=(($agg_tmp+8)|0);
 var $4=HEAP32[(($__data__i_i_i7)>>2)];
 __ZdlPv($4);
 label=12;break;
 case 12: 
 var $5=(($this)|0);
 HEAP32[(($5)>>2)]=6256;
 var $__ec_=(($this+8)|0);
 var $6=$ec;
 var $7=$__ec_;
 var $ld$0$0=(($6)|0);
 var $8$0=HEAP32[(($ld$0$0)>>2)];
 var $ld$1$1=(($6+4)|0);
 var $8$1=HEAP32[(($ld$1$1)>>2)];
 var $st$2$0=(($7)|0);
 HEAP32[(($st$2$0)>>2)]=$8$0;
 var $st$3$1=(($7+4)|0);
 HEAP32[(($st$3$1)>>2)]=$8$1;
 STACKTOP=sp;return;
 case 13: 
 var $9$0 = ___cxa_find_matching_catch(-1, -1); var $9$1 = tempRet0;
 var $10=$9$0;
 var $11=$9$1;
 var $ehselector_slot_0=$11;var $exn_slot_0=$10;label=16;break;
 case 14: 
 var $12$0 = ___cxa_find_matching_catch(-1, -1); var $12$1 = tempRet0;
 var $13=$12$0;
 var $14=$12$1;
 var $__size__i_i_i10=$ref_tmp;
 var $15=HEAP8[($__size__i_i_i10)];
 var $and_i_i_i11=$15&1;
 var $tobool_i_i_i12=(($and_i_i_i11<<24)>>24)==0;
 if($tobool_i_i_i12){var $ehselector_slot_0=$14;var $exn_slot_0=$13;label=16;break;}else{label=15;break;}
 case 15: 
 var $__data__i_i_i13=(($ref_tmp+8)|0);
 var $16=HEAP32[(($__data__i_i_i13)>>2)];
 __ZdlPv($16);
 var $ehselector_slot_0=$14;var $exn_slot_0=$13;label=16;break;
 case 16: 
 var $exn_slot_0;
 var $ehselector_slot_0;
 var $__size__i_i_i16=$agg_tmp;
 var $17=HEAP8[($__size__i_i_i16)];
 var $and_i_i_i17=$17&1;
 var $tobool_i_i_i18=(($and_i_i_i17<<24)>>24)==0;
 if($tobool_i_i_i18){label=18;break;}else{label=17;break;}
 case 17: 
 var $__data__i_i_i19=(($agg_tmp+8)|0);
 var $18=HEAP32[(($__data__i_i_i19)>>2)];
 __ZdlPv($18);
 label=18;break;
 case 18: 
 var $lpad_val$0=$exn_slot_0;
 var $lpad_val$1=0;
 var $lpad_val4$0=$lpad_val$0;
 var $lpad_val4$1=$ehselector_slot_0;
 ___resumeException($lpad_val4$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__112system_errorD0Ev($this){
 var label=0;
 var $0=(($this)|0);
 __ZNSt13runtime_errorD2Ev($0);
 var $1=$this;
 __ZdlPv($1);
 return;
}
function __ZNSt3__112system_errorD2Ev($this){
 var label=0;
 var $0=(($this)|0);
 __ZNSt13runtime_errorD2Ev($0);
 return;
}
function __ZNSt3__111__call_onceERVmPvPFvS2_E($flag,$arg,$func){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $call;
 var $0=HEAP32[(($flag)>>2)];
 var $cmp6=($0|0)==1;
 if($cmp6){label=2;break;}else{label=3;break;}
 case 2: 
 var $call1=_pthread_cond_wait(14832,14808);
 var $1=HEAP32[(($flag)>>2)];
 var $cmp=($1|0)==1;
 if($cmp){label=2;break;}else{label=3;break;}
 case 3: 
 var $2=HEAP32[(($flag)>>2)];
 var $cmp2=($2|0)==0;
 if($cmp2){label=4;break;}else{label=14;break;}
 case 4: 
 HEAP32[(($flag)>>2)]=1;
 var $call3=(function() { try { __THREW__ = 0; return _pthread_mutex_unlock(14808) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=5;break; } else { label=9;break; }
 case 5: 
 (function() { try { __THREW__ = 0; return FUNCTION_TABLE[$func]($arg) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=6;break; } else { label=9;break; }
 case 6: 
 var $call6=(function() { try { __THREW__ = 0; return _pthread_mutex_lock(14808) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=7;break; } else { label=9;break; }
 case 7: 
 HEAP32[(($flag)>>2)]=-1;
 var $call8=(function() { try { __THREW__ = 0; return _pthread_mutex_unlock(14808) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=8;break; } else { label=9;break; }
 case 8: 
 var $call10=(function() { try { __THREW__ = 0; return _pthread_cond_broadcast(14832) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=15;break; } else { label=9;break; }
 case 9: 
 var $3$0 = ___cxa_find_matching_catch(-1, -1,0); var $3$1 = tempRet0;
 var $4=$3$0;
 var $5=___cxa_begin_catch($4);
 var $call13=(function() { try { __THREW__ = 0; return _pthread_mutex_lock(14808) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=10;break; } else { label=13;break; }
 case 10: 
 HEAP32[(($flag)>>2)]=0;
 var $call15=(function() { try { __THREW__ = 0; return _pthread_mutex_unlock(14808) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=11;break; } else { label=13;break; }
 case 11: 
 var $call17=(function() { try { __THREW__ = 0; return _pthread_cond_broadcast(14832) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=12;break; } else { label=13;break; }
 case 12: 
 (function() { try { __THREW__ = 0; return ___cxa_rethrow() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=18;break; } else { label=13;break; }
 case 13: 
 var $6$0 = ___cxa_find_matching_catch(-1, -1); var $6$1 = tempRet0;
 (function() { try { __THREW__ = 0; return ___cxa_end_catch() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=16;break; } else { label=17;break; }
 case 14: 
 var $call19;
 label=15;break;
 case 15: 
 return;
 case 16: 
 ___resumeException($6$0)
 case 17: 
 var $7$0 = ___cxa_find_matching_catch(-1, -1,0); var $7$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 18: 
 throw "Reached an unreachable!";
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $exception=___cxa_allocate_exception(8);
 var $0=$exception;
 (function() { try { __THREW__ = 0; return __ZNSt11logic_errorC2EPKc($0,400) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=3;break; }
 case 2: 
 var $1=$exception;
 HEAP32[(($1)>>2)]=4264;
 ___cxa_throw($exception,10296,(78));
 throw "Reached an unreachable!";
 case 3: 
 var $2$0 = ___cxa_find_matching_catch(-1, -1); var $2$1 = tempRet0;
 ___cxa_free_exception($exception);
 ___resumeException($2$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_($this,$__str){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__size__i44_i=$__str;
 var $0=HEAP8[($__size__i44_i)];
 var $and_i_i=$0&1;
 var $tobool_i_i=(($and_i_i<<24)>>24)==0;
 if($tobool_i_i){label=2;break;}else{label=3;break;}
 case 2: 
 var $1=$this;
 assert(12 % 1 === 0);HEAP32[(($1)>>2)]=HEAP32[(($__size__i44_i)>>2)];HEAP32[((($1)+(4))>>2)]=HEAP32[((($__size__i44_i)+(4))>>2)];HEAP32[((($1)+(8))>>2)]=HEAP32[((($__size__i44_i)+(8))>>2)];
 label=9;break;
 case 3: 
 var $__data__i_i=(($__str+8)|0);
 var $2=HEAP32[(($__data__i_i)>>2)];
 var $__size__i_i=(($__str+4)|0);
 var $3=HEAP32[(($__size__i_i)>>2)];
 var $cmp_i_i=($3>>>0)>4294967279;
 if($cmp_i_i){label=4;break;}else{label=5;break;}
 case 4: 
 __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(0);
 throw "Reached an unreachable!";
 case 5: 
 var $cmp2_i_i=($3>>>0)<11;
 if($cmp2_i_i){label=6;break;}else{label=7;break;}
 case 6: 
 var $shl_i_i_i=$3<<1;
 var $conv_i_i_i=(($shl_i_i_i)&255);
 var $__s2_i_i_i=$this;
 var $__size__i50_i_i=$this;
 HEAP8[($__size__i50_i_i)]=$conv_i_i_i;
 var $arrayidx_i_i_i=(($__s2_i_i_i+1)|0);
 var $__p_0_i_i=$arrayidx_i_i_i;label=8;break;
 case 7: 
 var $add_i_i_i_i=((($3)+(16))|0);
 var $and_i_i_i_i=$add_i_i_i_i&-16;
 var $call_i_i_i_i=__Znwj($and_i_i_i_i);
 var $__data__i_i_i=(($this+8)|0);
 HEAP32[(($__data__i_i_i)>>2)]=$call_i_i_i_i;
 var $or_i_i_i=$and_i_i_i_i|1;
 var $__cap__i_i_i=(($this)|0);
 HEAP32[(($__cap__i_i_i)>>2)]=$or_i_i_i;
 var $__size__i_i_i=(($this+4)|0);
 HEAP32[(($__size__i_i_i)>>2)]=$3;
 var $__p_0_i_i=$call_i_i_i_i;label=8;break;
 case 8: 
 var $__p_0_i_i;
 assert($3 % 1 === 0);(_memcpy($__p_0_i_i, $2, $3)|0);
 var $arrayidx_i_i=(($__p_0_i_i+$3)|0);
 HEAP8[($arrayidx_i_i)]=0;
 label=9;break;
 case 9: 
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($this,$__s,$__sz){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $cmp=($__sz>>>0)>4294967279;
 if($cmp){label=2;break;}else{label=3;break;}
 case 2: 
 __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(0);
 throw "Reached an unreachable!";
 case 3: 
 var $cmp2=($__sz>>>0)<11;
 if($cmp2){label=4;break;}else{label=5;break;}
 case 4: 
 var $shl_i=$__sz<<1;
 var $conv_i=(($shl_i)&255);
 var $__s2_i=$this;
 var $__size__i50=$this;
 HEAP8[($__size__i50)]=$conv_i;
 var $arrayidx_i=(($__s2_i+1)|0);
 var $__p_0=$arrayidx_i;label=6;break;
 case 5: 
 var $add_i_i=((($__sz)+(16))|0);
 var $and_i_i=$add_i_i&-16;
 var $call_i_i=__Znwj($and_i_i);
 var $__data__i=(($this+8)|0);
 HEAP32[(($__data__i)>>2)]=$call_i_i;
 var $or_i=$and_i_i|1;
 var $__cap__i=(($this)|0);
 HEAP32[(($__cap__i)>>2)]=$or_i;
 var $__size__i=(($this+4)|0);
 HEAP32[(($__size__i)>>2)]=$__sz;
 var $__p_0=$call_i_i;label=6;break;
 case 6: 
 var $__p_0;
 assert($__sz % 1 === 0);(_memcpy($__p_0, $__s, $__sz)|0);
 var $arrayidx=(($__p_0+$__sz)|0);
 HEAP8[($arrayidx)]=0;
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($this,$__n,$__c){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $cmp=($__n>>>0)>4294967279;
 if($cmp){label=2;break;}else{label=3;break;}
 case 2: 
 __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(0);
 throw "Reached an unreachable!";
 case 3: 
 var $cmp2=($__n>>>0)<11;
 if($cmp2){label=4;break;}else{label=5;break;}
 case 4: 
 var $shl_i=$__n<<1;
 var $conv_i=(($shl_i)&255);
 var $__s2_i=$this;
 var $__size__i52=$this;
 HEAP8[($__size__i52)]=$conv_i;
 var $arrayidx_i=(($__s2_i+1)|0);
 var $__p_0=$arrayidx_i;label=6;break;
 case 5: 
 var $add_i_i=((($__n)+(16))|0);
 var $and_i_i=$add_i_i&-16;
 var $call_i_i=__Znwj($and_i_i);
 var $__data__i=(($this+8)|0);
 HEAP32[(($__data__i)>>2)]=$call_i_i;
 var $or_i=$and_i_i|1;
 var $__cap__i=(($this)|0);
 HEAP32[(($__cap__i)>>2)]=$or_i;
 var $__size__i=(($this+4)|0);
 HEAP32[(($__size__i)>>2)]=$__n;
 var $__p_0=$call_i_i;label=6;break;
 case 6: 
 var $__p_0;
 _memset($__p_0, $__c, $__n)|0;
 var $arrayidx=(($__p_0+$__n)|0);
 HEAP8[($arrayidx)]=0;
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__size__i_i=$this;
 var $0=HEAP8[($__size__i_i)];
 var $and_i_i=$0&1;
 var $tobool_i_i=(($and_i_i<<24)>>24)==0;
 if($tobool_i_i){label=3;break;}else{label=2;break;}
 case 2: 
 var $__data__i_i=(($this+8)|0);
 var $1=HEAP32[(($__data__i_i)>>2)];
 __ZdlPv($1);
 label=3;break;
 case 3: 
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc($this,$__s){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $call_i=_strlen($__s);
 var $__s_i_i_i=$this;
 var $__size__i_i_i=$this;
 var $0=HEAP8[($__size__i_i_i)];
 var $and_i_i_i=$0&1;
 var $tobool_i_i_i=(($and_i_i_i<<24)>>24)==0;
 if($tobool_i_i_i){var $cond_i_i=10;var $3=$0;label=3;break;}else{label=2;break;}
 case 2: 
 var $__cap__i_i_i=(($this)|0);
 var $1=HEAP32[(($__cap__i_i_i)>>2)];
 var $and_i11_i_i=$1&-2;
 var $phitmp_i=((($and_i11_i_i)-(1))|0);
 var $2=(($1)&255);
 var $cond_i_i=$phitmp_i;var $3=$2;label=3;break;
 case 3: 
 var $3;
 var $cond_i_i;
 var $cmp_i=($cond_i_i>>>0)<($call_i>>>0);
 if($cmp_i){label=10;break;}else{label=4;break;}
 case 4: 
 var $and_i_i19_i=$3&1;
 var $tobool_i_i20_i=(($and_i_i19_i<<24)>>24)==0;
 if($tobool_i_i20_i){label=6;break;}else{label=5;break;}
 case 5: 
 var $__data__i21_i_i=(($this+8)|0);
 var $4=HEAP32[(($__data__i21_i_i)>>2)];
 var $cond_i24_i=$4;label=7;break;
 case 6: 
 var $arrayidx_i_i_i=(($__s_i_i_i+1)|0);
 var $cond_i24_i=$arrayidx_i_i_i;label=7;break;
 case 7: 
 var $cond_i24_i;
 _memmove($cond_i24_i,$__s,$call_i,1,0);
 var $arrayidx_i=(($cond_i24_i+$call_i)|0);
 HEAP8[($arrayidx_i)]=0;
 var $5=HEAP8[($__size__i_i_i)];
 var $and_i_i68_i=$5&1;
 var $tobool_i_i69_i=(($and_i_i68_i<<24)>>24)==0;
 if($tobool_i_i69_i){label=9;break;}else{label=8;break;}
 case 8: 
 var $__size__i21_i_i=(($this+4)|0);
 HEAP32[(($__size__i21_i_i)>>2)]=$call_i;
 label=14;break;
 case 9: 
 var $shl_i_i_i=$call_i<<1;
 var $conv_i6_i_i=(($shl_i_i_i)&255);
 HEAP8[($__size__i_i_i)]=$conv_i6_i_i;
 label=14;break;
 case 10: 
 var $conv_i_i40_i=($3&255);
 var $and_i_i41_i=$conv_i_i40_i&1;
 var $tobool_i_i42_i=($and_i_i41_i|0)==0;
 if($tobool_i_i42_i){label=12;break;}else{label=11;break;}
 case 11: 
 var $__size__i23_i_i=(($this+4)|0);
 var $6=HEAP32[(($__size__i23_i_i)>>2)];
 var $cond_i52_i=$6;label=13;break;
 case 12: 
 var $shr_i_i12_i=$conv_i_i40_i>>>1;
 var $cond_i52_i=$shr_i_i12_i;label=13;break;
 case 13: 
 var $cond_i52_i;
 var $sub_i=((($call_i)-($cond_i_i))|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($this,$cond_i_i,$sub_i,$cond_i52_i,0,$cond_i52_i,$call_i,$__s);
 label=14;break;
 case 14: 
 return $this;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($this,$__n,$__c){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__s_i_i=$this;
 var $__size__i_i=$this;
 var $0=HEAP8[($__size__i_i)];
 var $conv_i_i=($0&255);
 var $and_i_i=$conv_i_i&1;
 var $tobool_i_i=($and_i_i|0)==0;
 if($tobool_i_i){label=3;break;}else{label=2;break;}
 case 2: 
 var $__size__i23_i=(($this+4)|0);
 var $1=HEAP32[(($__size__i23_i)>>2)];
 var $cond_i=$1;label=4;break;
 case 3: 
 var $shr_i_i7=$conv_i_i>>>1;
 var $cond_i=$shr_i_i7;label=4;break;
 case 4: 
 var $cond_i;
 var $cmp=($cond_i>>>0)<($__n>>>0);
 if($cmp){label=5;break;}else{label=6;break;}
 case 5: 
 var $sub=((($__n)-($cond_i))|0);
 var $call2=__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEjc($this,$sub,$__c);
 label=9;break;
 case 6: 
 var $and_i_i17=$0&1;
 var $tobool_i_i18=(($and_i_i17<<24)>>24)==0;
 if($tobool_i_i18){label=8;break;}else{label=7;break;}
 case 7: 
 var $__data__i48_i=(($this+8)|0);
 var $2=HEAP32[(($__data__i48_i)>>2)];
 var $add_ptr_i=(($2+$__n)|0);
 HEAP8[($add_ptr_i)]=0;
 var $__size__i36_i=(($this+4)|0);
 HEAP32[(($__size__i36_i)>>2)]=$__n;
 label=9;break;
 case 8: 
 var $add_ptr4_i=(($__s_i_i+1+$__n)|0);
 HEAP8[($add_ptr4_i)]=0;
 var $shl_i_i=$__n<<1;
 var $conv_i12_i=(($shl_i_i)&255);
 HEAP8[($__size__i_i)]=$conv_i12_i;
 label=9;break;
 case 9: 
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEjc($this,$__n,$__c){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $tobool=($__n|0)==0;
 if($tobool){label=16;break;}else{label=2;break;}
 case 2: 
 var $__s_i_i=$this;
 var $__size__i_i=$this;
 var $0=HEAP8[($__size__i_i)];
 var $and_i_i=$0&1;
 var $tobool_i_i=(($and_i_i<<24)>>24)==0;
 if($tobool_i_i){var $cond_i=10;var $3=$0;label=4;break;}else{label=3;break;}
 case 3: 
 var $__cap__i_i=(($this)|0);
 var $1=HEAP32[(($__cap__i_i)>>2)];
 var $and_i11_i=$1&-2;
 var $phitmp=((($and_i11_i)-(1))|0);
 var $2=(($1)&255);
 var $cond_i=$phitmp;var $3=$2;label=4;break;
 case 4: 
 var $3;
 var $cond_i;
 var $conv_i_i71=($3&255);
 var $and_i_i72=$conv_i_i71&1;
 var $tobool_i_i73=($and_i_i72|0)==0;
 if($tobool_i_i73){label=6;break;}else{label=5;break;}
 case 5: 
 var $__size__i23_i=(($this+4)|0);
 var $4=HEAP32[(($__size__i23_i)>>2)];
 var $cond_i83=$4;label=7;break;
 case 6: 
 var $shr_i_i15=$conv_i_i71>>>1;
 var $cond_i83=$shr_i_i15;label=7;break;
 case 7: 
 var $cond_i83;
 var $sub=((($cond_i)-($cond_i83))|0);
 var $cmp=($sub>>>0)<($__n>>>0);
 if($cmp){label=8;break;}else{var $5=$3;label=9;break;}
 case 8: 
 var $add=((($__n)-($cond_i))|0);
 var $sub4=((($add)+($cond_i83))|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this,$cond_i,$sub4,$cond_i83,$cond_i83,0,0);
 var $_pre=HEAP8[($__size__i_i)];
 var $5=$_pre;label=9;break;
 case 9: 
 var $5;
 var $and_i_i45=$5&1;
 var $tobool_i_i46=(($and_i_i45<<24)>>24)==0;
 if($tobool_i_i46){label=11;break;}else{label=10;break;}
 case 10: 
 var $__data__i21_i=(($this+8)|0);
 var $6=HEAP32[(($__data__i21_i)>>2)];
 var $cond_i55=$6;label=12;break;
 case 11: 
 var $arrayidx_i_i=(($__s_i_i+1)|0);
 var $cond_i55=$arrayidx_i_i;label=12;break;
 case 12: 
 var $cond_i55;
 var $add_ptr=(($cond_i55+$cond_i83)|0);
 _memset($add_ptr, $__c, $__n)|0;
 var $add8=((($cond_i83)+($__n))|0);
 var $7=HEAP8[($__size__i_i)];
 var $and_i_i23=$7&1;
 var $tobool_i_i24=(($and_i_i23<<24)>>24)==0;
 if($tobool_i_i24){label=14;break;}else{label=13;break;}
 case 13: 
 var $__size__i21_i=(($this+4)|0);
 HEAP32[(($__size__i21_i)>>2)]=$add8;
 label=15;break;
 case 14: 
 var $shl_i_i=$add8<<1;
 var $conv_i6_i=(($shl_i_i)&255);
 HEAP8[($__size__i_i)]=$conv_i6_i;
 label=15;break;
 case 15: 
 var $arrayidx=(($cond_i55+$add8)|0);
 HEAP8[($arrayidx)]=0;
 label=16;break;
 case 16: 
 return $this;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($this,$__res_arg){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $cmp=($__res_arg>>>0)>4294967279;
 if($cmp){label=2;break;}else{label=3;break;}
 case 2: 
 __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(0);
 throw "Reached an unreachable!";
 case 3: 
 var $__s_i_i=$this;
 var $__size__i_i=$this;
 var $0=HEAP8[($__size__i_i)];
 var $and_i_i=$0&1;
 var $tobool_i_i=(($and_i_i<<24)>>24)==0;
 if($tobool_i_i){var $cond_i=10;var $3=$0;label=5;break;}else{label=4;break;}
 case 4: 
 var $__cap__i_i=(($this)|0);
 var $1=HEAP32[(($__cap__i_i)>>2)];
 var $and_i11_i=$1&-2;
 var $phitmp=((($and_i11_i)-(1))|0);
 var $2=(($1)&255);
 var $cond_i=$phitmp;var $3=$2;label=5;break;
 case 5: 
 var $3;
 var $cond_i;
 var $conv_i_i181=($3&255);
 var $and_i_i182=$conv_i_i181&1;
 var $tobool_i_i183=($and_i_i182|0)==0;
 if($tobool_i_i183){label=7;break;}else{label=6;break;}
 case 6: 
 var $__size__i23_i190=(($this+4)|0);
 var $4=HEAP32[(($__size__i23_i190)>>2)];
 var $cond_i202=$4;label=8;break;
 case 7: 
 var $shr_i_i20020=$conv_i_i181>>>1;
 var $cond_i202=$shr_i_i20020;label=8;break;
 case 8: 
 var $cond_i202;
 var $cmp_i_i_i=($cond_i202>>>0)>($__res_arg>>>0);
 var $_sroa_speculated=($cmp_i_i_i?$cond_i202:$__res_arg);
 var $cmp_i=($_sroa_speculated>>>0)<11;
 if($cmp_i){var $cond_i253=11;label=10;break;}else{label=9;break;}
 case 9: 
 var $add_i_i=((($_sroa_speculated)+(16))|0);
 var $and_i_i251=$add_i_i&-16;
 var $cond_i253=$and_i_i251;label=10;break;
 case 10: 
 var $cond_i253;
 var $sub_i254=((($cond_i253)-(1))|0);
 var $cmp6=($sub_i254|0)==($cond_i|0);
 if($cmp6){label=29;break;}else{label=11;break;}
 case 11: 
 var $cmp8=($sub_i254|0)==10;
 if($cmp8){label=12;break;}else{label=13;break;}
 case 12: 
 var $arrayidx_i=(($__s_i_i+1)|0);
 var $__data__i237=(($this+8)|0);
 var $5=HEAP32[(($__data__i237)>>2)];
 var $__new_data_1=$arrayidx_i;var $__p_0=$5;var $__was_long_0_off0=1;var $__now_long_0_off0=0;label=21;break;
 case 13: 
 var $cmp12=($sub_i254>>>0)>($cond_i>>>0);
 if($cmp12){label=14;break;}else{label=15;break;}
 case 14: 
 var $call_i_i=__Znwj($cond_i253);
 var $__new_data_0=$call_i_i;label=17;break;
 case 15: 
 var $call_i_i162=(function() { try { __THREW__ = 0; return __Znwj($cond_i253) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $__new_data_0=$call_i_i162;label=17;break; } else { label=16;break; }
 case 16: 
 var $6$0 = ___cxa_find_matching_catch(-1, -1,0); var $6$1 = tempRet0;
 var $7=$6$0;
 var $8=___cxa_begin_catch($7);
 ___cxa_end_catch();
 label=29;break;
 case 17: 
 var $__new_data_0;
 var $and_i=$3&1;
 var $tobool_i=(($and_i<<24)>>24)==0;
 if($tobool_i){label=19;break;}else{label=18;break;}
 case 18: 
 var $__data__i21_i=(($this+8)|0);
 var $9=HEAP32[(($__data__i21_i)>>2)];
 var $cond_i146=$9;label=20;break;
 case 19: 
 var $arrayidx_i_i=(($__s_i_i+1)|0);
 var $cond_i146=$arrayidx_i_i;label=20;break;
 case 20: 
 var $cond_i146;
 var $extract_t=(($and_i<<24)>>24)!=0;
 var $__new_data_1=$__new_data_0;var $__p_0=$cond_i146;var $__was_long_0_off0=$extract_t;var $__now_long_0_off0=1;label=21;break;
 case 21: 
 var $__now_long_0_off0;
 var $__was_long_0_off0;
 var $__p_0;
 var $__new_data_1;
 var $conv_i_i110=($3&255);
 var $and_i_i111=$conv_i_i110&1;
 var $tobool_i_i112=($and_i_i111|0)==0;
 if($tobool_i_i112){label=23;break;}else{label=22;break;}
 case 22: 
 var $__size__i23_i=(($this+4)|0);
 var $10=HEAP32[(($__size__i23_i)>>2)];
 var $cond_i116=$10;label=24;break;
 case 23: 
 var $shr_i_i21=$conv_i_i110>>>1;
 var $cond_i116=$shr_i_i21;label=24;break;
 case 24: 
 var $cond_i116;
 var $add27=((($cond_i116)+(1))|0);
 assert($add27 % 1 === 0);(_memcpy($__new_data_1, $__p_0, $add27)|0);
 if($__was_long_0_off0){label=25;break;}else{label=26;break;}
 case 25: 
 __ZdlPv($__p_0);
 label=26;break;
 case 26: 
 if($__now_long_0_off0){label=27;break;}else{label=28;break;}
 case 27: 
 var $or_i=$cond_i253|1;
 var $__cap__i=(($this)|0);
 HEAP32[(($__cap__i)>>2)]=$or_i;
 var $__size__i65=(($this+4)|0);
 HEAP32[(($__size__i65)>>2)]=$cond_i202;
 var $__data__i=(($this+8)|0);
 HEAP32[(($__data__i)>>2)]=$__new_data_1;
 label=29;break;
 case 28: 
 var $shl_i=$cond_i202<<1;
 var $conv_i=(($shl_i)&255);
 HEAP8[($__size__i_i)]=$conv_i;
 label=29;break;
 case 29: 
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($this,$__c){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__s_i=$this;
 var $__size__i=$this;
 var $0=HEAP8[($__size__i)];
 var $and_i=$0&1;
 var $tobool=(($and_i<<24)>>24)==0;
 if($tobool){label=2;break;}else{label=3;break;}
 case 2: 
 var $conv_i=($0&255);
 var $shr_i11=$conv_i>>>1;
 var $__sz_0=$shr_i11;var $__cap_0=10;label=4;break;
 case 3: 
 var $__cap__i=(($this)|0);
 var $1=HEAP32[(($__cap__i)>>2)];
 var $and_i102=$1&-2;
 var $sub=((($and_i102)-(1))|0);
 var $__size__i92=(($this+4)|0);
 var $2=HEAP32[(($__size__i92)>>2)];
 var $__sz_0=$2;var $__cap_0=$sub;label=4;break;
 case 4: 
 var $__cap_0;
 var $__sz_0;
 var $cmp=($__sz_0|0)==($__cap_0|0);
 if($cmp){label=5;break;}else{var $__is_short_0_off0_in_in=$0;label=6;break;}
 case 5: 
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this,$__cap_0,1,$__cap_0,$__cap_0,0,0);
 var $3=HEAP8[($__size__i)];
 var $__is_short_0_off0_in_in=$3;label=6;break;
 case 6: 
 var $__is_short_0_off0_in_in;
 var $__is_short_0_off0_in=$__is_short_0_off0_in_in&1;
 var $__is_short_0_off0=(($__is_short_0_off0_in<<24)>>24)==0;
 if($__is_short_0_off0){label=7;break;}else{label=8;break;}
 case 7: 
 var $arrayidx_i=(($__s_i+1)|0);
 var $add=$__sz_0<<1;
 var $shl_i=((($add)+(2))|0);
 var $conv_i43=(($shl_i)&255);
 HEAP8[($__size__i)]=$conv_i43;
 var $__p_0_sum_pre=((($__sz_0)+(1))|0);
 var $arrayidx_i_pn=$arrayidx_i;var $__p_0_sum_pre_phi=$__p_0_sum_pre;label=9;break;
 case 8: 
 var $__data__i=(($this+8)|0);
 var $4=HEAP32[(($__data__i)>>2)];
 var $add16=((($__sz_0)+(1))|0);
 var $__size__i28=(($this+4)|0);
 HEAP32[(($__size__i28)>>2)]=$add16;
 var $arrayidx_i_pn=$4;var $__p_0_sum_pre_phi=$add16;label=9;break;
 case 9: 
 var $__p_0_sum_pre_phi;
 var $arrayidx_i_pn;
 var $__p_0=(($arrayidx_i_pn+$__sz_0)|0);
 HEAP8[($__p_0)]=$__c;
 var $incdec_ptr=(($arrayidx_i_pn+$__p_0_sum_pre_phi)|0);
 HEAP8[($incdec_ptr)]=0;
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($this,$__s,$__n){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__s_i_i=$this;
 var $__size__i_i=$this;
 var $0=HEAP8[($__size__i_i)];
 var $and_i_i=$0&1;
 var $tobool_i_i=(($and_i_i<<24)>>24)==0;
 if($tobool_i_i){var $cond_i=10;var $3=$0;label=3;break;}else{label=2;break;}
 case 2: 
 var $__cap__i_i=(($this)|0);
 var $1=HEAP32[(($__cap__i_i)>>2)];
 var $and_i11_i=$1&-2;
 var $phitmp=((($and_i11_i)-(1))|0);
 var $2=(($1)&255);
 var $cond_i=$phitmp;var $3=$2;label=3;break;
 case 3: 
 var $3;
 var $cond_i;
 var $conv_i_i22=($3&255);
 var $and_i_i23=$conv_i_i22&1;
 var $tobool_i_i24=($and_i_i23|0)==0;
 if($tobool_i_i24){label=5;break;}else{label=4;break;}
 case 4: 
 var $__size__i23_i=(($this+4)|0);
 var $4=HEAP32[(($__size__i23_i)>>2)];
 var $cond_i28=$4;label=6;break;
 case 5: 
 var $shr_i_i17=$conv_i_i22>>>1;
 var $cond_i28=$shr_i_i17;label=6;break;
 case 6: 
 var $cond_i28;
 var $sub=((($cond_i)-($cond_i28))|0);
 var $cmp=($sub>>>0)<($__n>>>0);
 if($cmp){label=15;break;}else{label=7;break;}
 case 7: 
 var $tobool=($__n|0)==0;
 if($tobool){label=16;break;}else{label=8;break;}
 case 8: 
 var $and_i_i65=$3&1;
 var $tobool_i_i66=(($and_i_i65<<24)>>24)==0;
 if($tobool_i_i66){label=10;break;}else{label=9;break;}
 case 9: 
 var $__data__i21_i=(($this+8)|0);
 var $5=HEAP32[(($__data__i21_i)>>2)];
 var $cond_i81=$5;label=11;break;
 case 10: 
 var $arrayidx_i_i=(($__s_i_i+1)|0);
 var $cond_i81=$arrayidx_i_i;label=11;break;
 case 11: 
 var $cond_i81;
 var $add_ptr=(($cond_i81+$cond_i28)|0);
 assert($__n % 1 === 0);(_memcpy($add_ptr, $__s, $__n)|0);
 var $add=((($cond_i28)+($__n))|0);
 var $6=HEAP8[($__size__i_i)];
 var $and_i_i42=$6&1;
 var $tobool_i_i43=(($and_i_i42<<24)>>24)==0;
 if($tobool_i_i43){label=13;break;}else{label=12;break;}
 case 12: 
 var $__size__i21_i=(($this+4)|0);
 HEAP32[(($__size__i21_i)>>2)]=$add;
 label=14;break;
 case 13: 
 var $shl_i_i=$add<<1;
 var $conv_i6_i=(($shl_i_i)&255);
 HEAP8[($__size__i_i)]=$conv_i6_i;
 label=14;break;
 case 14: 
 var $arrayidx=(($cond_i81+$add)|0);
 HEAP8[($arrayidx)]=0;
 label=16;break;
 case 15: 
 var $add7=((($__n)-($cond_i))|0);
 var $sub8=((($add7)+($cond_i28))|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($this,$cond_i,$sub8,$cond_i28,$cond_i28,0,$__n,$__s);
 label=16;break;
 case 16: 
 return $this;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($this,$__old_cap,$__delta_cap,$__old_sz,$__n_copy,$__n_del,$__n_add,$__p_new_stuff){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $sub2=(((-18)-($__old_cap))|0);
 var $cmp=($sub2>>>0)<($__delta_cap>>>0);
 if($cmp){label=2;break;}else{label=3;break;}
 case 2: 
 __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(0);
 throw "Reached an unreachable!";
 case 3: 
 var $__size__i_i=$this;
 var $0=HEAP8[($__size__i_i)];
 var $and_i_i=$0&1;
 var $tobool_i_i=(($and_i_i<<24)>>24)==0;
 if($tobool_i_i){label=5;break;}else{label=4;break;}
 case 4: 
 var $__data__i21_i=(($this+8)|0);
 var $1=HEAP32[(($__data__i21_i)>>2)];
 var $cond_i=$1;label=6;break;
 case 5: 
 var $__s_i_i=$this;
 var $arrayidx_i_i=(($__s_i_i+1)|0);
 var $cond_i=$arrayidx_i_i;label=6;break;
 case 6: 
 var $cond_i;
 var $cmp5=($__old_cap>>>0)<2147483623;
 if($cmp5){label=7;break;}else{var $cond_i124_sink=-17;label=9;break;}
 case 7: 
 var $add=((($__delta_cap)+($__old_cap))|0);
 var $mul=$__old_cap<<1;
 var $cmp_i_i_i=($add>>>0)<($mul>>>0);
 var $_sroa_speculated=($cmp_i_i_i?$mul:$add);
 var $cmp_i=($_sroa_speculated>>>0)<11;
 if($cmp_i){var $cond_i124_sink=11;label=9;break;}else{label=8;break;}
 case 8: 
 var $add_i_i=((($_sroa_speculated)+(16))|0);
 var $and_i_i122=$add_i_i&-16;
 var $cond_i124_sink=$and_i_i122;label=9;break;
 case 9: 
 var $cond_i124_sink;
 var $call_i_i=__Znwj($cond_i124_sink);
 var $cmp13=($__n_copy|0)==0;
 if($cmp13){label=11;break;}else{label=10;break;}
 case 10: 
 assert($__n_copy % 1 === 0);(_memcpy($call_i_i, $cond_i, $__n_copy)|0);
 label=11;break;
 case 11: 
 var $cmp19=($__n_add|0)==0;
 if($cmp19){label=13;break;}else{label=12;break;}
 case 12: 
 var $add_ptr=(($call_i_i+$__n_copy)|0);
 assert($__n_add % 1 === 0);(_memcpy($add_ptr, $__p_new_stuff, $__n_add)|0);
 label=13;break;
 case 13: 
 var $sub24=((($__old_sz)-($__n_del))|0);
 var $cmp26=($sub24|0)==($__n_copy|0);
 if($cmp26){label=15;break;}else{label=14;break;}
 case 14: 
 var $sub25=((($sub24)-($__n_copy))|0);
 var $add_ptr29_sum=((($__n_add)+($__n_copy))|0);
 var $add_ptr30=(($call_i_i+$add_ptr29_sum)|0);
 var $add_ptr32_sum=((($__n_del)+($__n_copy))|0);
 var $add_ptr33=(($cond_i+$add_ptr32_sum)|0);
 assert($sub25 % 1 === 0);(_memcpy($add_ptr30, $add_ptr33, $sub25)|0);
 label=15;break;
 case 15: 
 var $cmp37=($__old_cap|0)==10;
 if($cmp37){label=17;break;}else{label=16;break;}
 case 16: 
 __ZdlPv($cond_i);
 label=17;break;
 case 17: 
 var $__data__i=(($this+8)|0);
 HEAP32[(($__data__i)>>2)]=$call_i_i;
 var $or_i=$cond_i124_sink|1;
 var $__cap__i=(($this)|0);
 HEAP32[(($__cap__i)>>2)]=$or_i;
 var $add44=((($sub24)+($__n_add))|0);
 var $__size__i=(($this+4)|0);
 HEAP32[(($__size__i)>>2)]=$add44;
 var $arrayidx=(($call_i_i+$add44)|0);
 HEAP8[($arrayidx)]=0;
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this,$__old_cap,$__delta_cap,$__old_sz,$__n_copy,$__n_del,$__n_add){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $sub=(((-17)-($__old_cap))|0);
 var $cmp=($sub>>>0)<($__delta_cap>>>0);
 if($cmp){label=2;break;}else{label=3;break;}
 case 2: 
 __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(0);
 throw "Reached an unreachable!";
 case 3: 
 var $__size__i_i=$this;
 var $0=HEAP8[($__size__i_i)];
 var $and_i_i=$0&1;
 var $tobool_i_i=(($and_i_i<<24)>>24)==0;
 if($tobool_i_i){label=5;break;}else{label=4;break;}
 case 4: 
 var $__data__i21_i=(($this+8)|0);
 var $1=HEAP32[(($__data__i21_i)>>2)];
 var $cond_i=$1;label=6;break;
 case 5: 
 var $__s_i_i=$this;
 var $arrayidx_i_i=(($__s_i_i+1)|0);
 var $cond_i=$arrayidx_i_i;label=6;break;
 case 6: 
 var $cond_i;
 var $cmp4=($__old_cap>>>0)<2147483623;
 if($cmp4){label=7;break;}else{var $cond_i100_sink=-17;label=9;break;}
 case 7: 
 var $add=((($__delta_cap)+($__old_cap))|0);
 var $mul=$__old_cap<<1;
 var $cmp_i_i_i=($add>>>0)<($mul>>>0);
 var $_sroa_speculated=($cmp_i_i_i?$mul:$add);
 var $cmp_i=($_sroa_speculated>>>0)<11;
 if($cmp_i){var $cond_i100_sink=11;label=9;break;}else{label=8;break;}
 case 8: 
 var $add_i_i=((($_sroa_speculated)+(16))|0);
 var $and_i_i98=$add_i_i&-16;
 var $cond_i100_sink=$and_i_i98;label=9;break;
 case 9: 
 var $cond_i100_sink;
 var $call_i_i=__Znwj($cond_i100_sink);
 var $cmp12=($__n_copy|0)==0;
 if($cmp12){label=11;break;}else{label=10;break;}
 case 10: 
 assert($__n_copy % 1 === 0);(_memcpy($call_i_i, $cond_i, $__n_copy)|0);
 label=11;break;
 case 11: 
 var $sub18=((($__old_sz)-($__n_del))|0);
 var $cmp20=($sub18|0)==($__n_copy|0);
 if($cmp20){label=13;break;}else{label=12;break;}
 case 12: 
 var $sub19=((($sub18)-($__n_copy))|0);
 var $add_ptr_sum=((($__n_add)+($__n_copy))|0);
 var $add_ptr23=(($call_i_i+$add_ptr_sum)|0);
 var $add_ptr25_sum=((($__n_del)+($__n_copy))|0);
 var $add_ptr26=(($cond_i+$add_ptr25_sum)|0);
 assert($sub19 % 1 === 0);(_memcpy($add_ptr23, $add_ptr26, $sub19)|0);
 label=13;break;
 case 13: 
 var $cmp30=($__old_cap|0)==10;
 if($cmp30){label=15;break;}else{label=14;break;}
 case 14: 
 __ZdlPv($cond_i);
 label=15;break;
 case 15: 
 var $__data__i=(($this+8)|0);
 HEAP32[(($__data__i)>>2)]=$call_i_i;
 var $or_i=$cond_i100_sink|1;
 var $__cap__i=(($this)|0);
 HEAP32[(($__cap__i)>>2)]=$or_i;
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj($this,$__s,$__sz){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $cmp=($__sz>>>0)>1073741807;
 if($cmp){label=2;break;}else{label=3;break;}
 case 2: 
 __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(0);
 throw "Reached an unreachable!";
 case 3: 
 var $cmp2=($__sz>>>0)<2;
 if($cmp2){label=4;break;}else{label=5;break;}
 case 4: 
 var $shl_i=$__sz<<1;
 var $conv_i=(($shl_i)&255);
 var $__size__i=$this;
 HEAP8[($__size__i)]=$conv_i;
 var $__data__i59=(($this+4)|0);
 var $__p_0=$__data__i59;label=6;break;
 case 5: 
 var $add_i_i=((($__sz)+(4))|0);
 var $and_i_i=$add_i_i&-4;
 var $mul_i_i=$and_i_i<<2;
 var $call_i_i=__Znwj($mul_i_i);
 var $0=$call_i_i;
 var $__data__i=(($this+8)|0);
 HEAP32[(($__data__i)>>2)]=$0;
 var $or_i=$and_i_i|1;
 var $__cap__i=(($this)|0);
 HEAP32[(($__cap__i)>>2)]=$or_i;
 var $__size__i27=(($this+4)|0);
 HEAP32[(($__size__i27)>>2)]=$__sz;
 var $__p_0=$0;label=6;break;
 case 6: 
 var $__p_0;
 var $call_i=_wmemcpy($__p_0,$__s,$__sz);
 var $arrayidx=(($__p_0+($__sz<<2))|0);
 HEAP32[(($arrayidx)>>2)]=0;
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($this,$__n,$__c){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $cmp=($__n>>>0)>1073741807;
 if($cmp){label=2;break;}else{label=3;break;}
 case 2: 
 __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(0);
 throw "Reached an unreachable!";
 case 3: 
 var $cmp2=($__n>>>0)<2;
 if($cmp2){label=4;break;}else{label=5;break;}
 case 4: 
 var $shl_i=$__n<<1;
 var $conv_i=(($shl_i)&255);
 var $__size__i=$this;
 HEAP8[($__size__i)]=$conv_i;
 var $__data__i61=(($this+4)|0);
 var $__p_0=$__data__i61;label=6;break;
 case 5: 
 var $add_i_i=((($__n)+(4))|0);
 var $and_i_i=$add_i_i&-4;
 var $mul_i_i=$and_i_i<<2;
 var $call_i_i=__Znwj($mul_i_i);
 var $0=$call_i_i;
 var $__data__i=(($this+8)|0);
 HEAP32[(($__data__i)>>2)]=$0;
 var $or_i=$and_i_i|1;
 var $__cap__i=(($this)|0);
 HEAP32[(($__cap__i)>>2)]=$or_i;
 var $__size__i28=(($this+4)|0);
 HEAP32[(($__size__i28)>>2)]=$__n;
 var $__p_0=$0;label=6;break;
 case 6: 
 var $__p_0;
 var $call_i=_wmemset($__p_0,$__c,$__n);
 var $arrayidx=(($__p_0+($__n<<2))|0);
 HEAP32[(($arrayidx)>>2)]=0;
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($this){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__size__i_i=$this;
 var $0=HEAP8[($__size__i_i)];
 var $and_i_i=$0&1;
 var $tobool_i_i=(($and_i_i<<24)>>24)==0;
 if($tobool_i_i){label=3;break;}else{label=2;break;}
 case 2: 
 var $__data__i_i=(($this+8)|0);
 var $1=HEAP32[(($__data__i_i)>>2)];
 var $2=$1;
 __ZdlPv($2);
 label=3;break;
 case 3: 
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw($this,$__s){
 var label=0;
 var $call_i=_wcslen($__s);
 var $call2=__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj($this,$__s,$call_i);
 return $call2;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj($this,$__s,$__n){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__size__i_i=$this;
 var $0=HEAP8[($__size__i_i)];
 var $and_i_i=$0&1;
 var $tobool_i_i=(($and_i_i<<24)>>24)==0;
 if($tobool_i_i){var $cond_i=1;var $3=$0;label=3;break;}else{label=2;break;}
 case 2: 
 var $__cap__i_i=(($this)|0);
 var $1=HEAP32[(($__cap__i_i)>>2)];
 var $and_i11_i=$1&-2;
 var $phitmp=((($and_i11_i)-(1))|0);
 var $2=(($1)&255);
 var $cond_i=$phitmp;var $3=$2;label=3;break;
 case 3: 
 var $3;
 var $cond_i;
 var $cmp=($cond_i>>>0)<($__n>>>0);
 if($cmp){label=10;break;}else{label=4;break;}
 case 4: 
 var $and_i_i19=$3&1;
 var $tobool_i_i20=(($and_i_i19<<24)>>24)==0;
 if($tobool_i_i20){label=6;break;}else{label=5;break;}
 case 5: 
 var $__data__i21_i=(($this+8)|0);
 var $4=HEAP32[(($__data__i21_i)>>2)];
 var $cond_i24=$4;label=7;break;
 case 6: 
 var $__data__i_i=(($this+4)|0);
 var $cond_i24=$__data__i_i;label=7;break;
 case 7: 
 var $cond_i24;
 var $call_i=_wmemmove($cond_i24,$__s,$__n);
 var $arrayidx=(($cond_i24+($__n<<2))|0);
 HEAP32[(($arrayidx)>>2)]=0;
 var $5=HEAP8[($__size__i_i)];
 var $and_i_i68=$5&1;
 var $tobool_i_i69=(($and_i_i68<<24)>>24)==0;
 if($tobool_i_i69){label=9;break;}else{label=8;break;}
 case 8: 
 var $__size__i21_i=(($this+4)|0);
 HEAP32[(($__size__i21_i)>>2)]=$__n;
 label=14;break;
 case 9: 
 var $shl_i_i=$__n<<1;
 var $conv_i6_i=(($shl_i_i)&255);
 HEAP8[($__size__i_i)]=$conv_i6_i;
 label=14;break;
 case 10: 
 var $conv_i_i40=($3&255);
 var $and_i_i41=$conv_i_i40&1;
 var $tobool_i_i42=($and_i_i41|0)==0;
 if($tobool_i_i42){label=12;break;}else{label=11;break;}
 case 11: 
 var $__size__i23_i=(($this+4)|0);
 var $6=HEAP32[(($__size__i23_i)>>2)];
 var $cond_i52=$6;label=13;break;
 case 12: 
 var $shr_i_i12=$conv_i_i40>>>1;
 var $cond_i52=$shr_i_i12;label=13;break;
 case 13: 
 var $cond_i52;
 var $sub=((($__n)-($cond_i))|0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEjjjjjjPKw($this,$cond_i,$sub,$cond_i52,0,$cond_i52,$__n,$__s);
 label=14;break;
 case 14: 
 return $this;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($this,$__res_arg){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $cmp=($__res_arg>>>0)>1073741807;
 if($cmp){label=2;break;}else{label=3;break;}
 case 2: 
 __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(0);
 throw "Reached an unreachable!";
 case 3: 
 var $__size__i_i=$this;
 var $0=HEAP8[($__size__i_i)];
 var $and_i_i=$0&1;
 var $tobool_i_i=(($and_i_i<<24)>>24)==0;
 if($tobool_i_i){var $cond_i=1;var $3=$0;label=5;break;}else{label=4;break;}
 case 4: 
 var $__cap__i_i=(($this)|0);
 var $1=HEAP32[(($__cap__i_i)>>2)];
 var $and_i11_i=$1&-2;
 var $phitmp=((($and_i11_i)-(1))|0);
 var $2=(($1)&255);
 var $cond_i=$phitmp;var $3=$2;label=5;break;
 case 5: 
 var $3;
 var $cond_i;
 var $conv_i_i110=($3&255);
 var $and_i_i111=$conv_i_i110&1;
 var $tobool_i_i112=($and_i_i111|0)==0;
 if($tobool_i_i112){label=7;break;}else{label=6;break;}
 case 6: 
 var $__size__i23_i=(($this+4)|0);
 var $4=HEAP32[(($__size__i23_i)>>2)];
 var $cond_i116=$4;label=8;break;
 case 7: 
 var $shr_i_i20=$conv_i_i110>>>1;
 var $cond_i116=$shr_i_i20;label=8;break;
 case 8: 
 var $cond_i116;
 var $cmp_i_i_i=($cond_i116>>>0)>($__res_arg>>>0);
 var $_sroa_speculated=($cmp_i_i_i?$cond_i116:$__res_arg);
 var $cmp_i=($_sroa_speculated>>>0)<2;
 if($cmp_i){var $cond_i226=2;label=10;break;}else{label=9;break;}
 case 9: 
 var $add_i_i=((($_sroa_speculated)+(4))|0);
 var $and_i_i224=$add_i_i&-4;
 var $cond_i226=$and_i_i224;label=10;break;
 case 10: 
 var $cond_i226;
 var $sub_i227=((($cond_i226)-(1))|0);
 var $cmp6=($sub_i227|0)==($cond_i|0);
 if($cmp6){label=29;break;}else{label=11;break;}
 case 11: 
 var $cmp8=($sub_i227|0)==1;
 if($cmp8){label=12;break;}else{label=13;break;}
 case 12: 
 var $__data__i255=(($this+4)|0);
 var $5=$__data__i255;
 var $__data__i244=(($this+8)|0);
 var $6=HEAP32[(($__data__i244)>>2)];
 var $__new_data_1_in=$5;var $__p_0=$6;var $__was_long_0_off0=1;var $__now_long_0_off0=0;label=21;break;
 case 13: 
 var $cmp12=($sub_i227>>>0)>($cond_i>>>0);
 var $mul_i_i221=$cond_i226<<2;
 if($cmp12){label=14;break;}else{label=15;break;}
 case 14: 
 var $call_i_i=__Znwj($mul_i_i221);
 var $__new_data_0_in=$call_i_i;label=17;break;
 case 15: 
 var $call_i_i203=(function() { try { __THREW__ = 0; return __Znwj($mul_i_i221) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $__new_data_0_in=$call_i_i203;label=17;break; } else { label=16;break; }
 case 16: 
 var $7$0 = ___cxa_find_matching_catch(-1, -1,0); var $7$1 = tempRet0;
 var $8=$7$0;
 var $9=___cxa_begin_catch($8);
 ___cxa_end_catch();
 label=29;break;
 case 17: 
 var $__new_data_0_in;
 var $and_i=$3&1;
 var $tobool_i=(($and_i<<24)>>24)==0;
 if($tobool_i){label=19;break;}else{label=18;break;}
 case 18: 
 var $__data__i21_i=(($this+8)|0);
 var $10=HEAP32[(($__data__i21_i)>>2)];
 var $cond_i187=$10;label=20;break;
 case 19: 
 var $__data__i_i=(($this+4)|0);
 var $cond_i187=$__data__i_i;label=20;break;
 case 20: 
 var $cond_i187;
 var $extract_t=(($and_i<<24)>>24)!=0;
 var $__new_data_1_in=$__new_data_0_in;var $__p_0=$cond_i187;var $__was_long_0_off0=$extract_t;var $__now_long_0_off0=1;label=21;break;
 case 21: 
 var $__now_long_0_off0;
 var $__was_long_0_off0;
 var $__p_0;
 var $__new_data_1_in;
 var $__new_data_1=$__new_data_1_in;
 var $conv_i_i135=($3&255);
 var $and_i_i136=$conv_i_i135&1;
 var $tobool_i_i137=($and_i_i136|0)==0;
 if($tobool_i_i137){label=23;break;}else{label=22;break;}
 case 22: 
 var $__size__i23_i144=(($this+4)|0);
 var $11=HEAP32[(($__size__i23_i144)>>2)];
 var $cond_i156=$11;label=24;break;
 case 23: 
 var $shr_i_i15421=$conv_i_i135>>>1;
 var $cond_i156=$shr_i_i15421;label=24;break;
 case 24: 
 var $cond_i156;
 var $add27=((($cond_i156)+(1))|0);
 var $call_i=_wmemcpy($__new_data_1,$__p_0,$add27);
 if($__was_long_0_off0){label=25;break;}else{label=26;break;}
 case 25: 
 var $12=$__p_0;
 __ZdlPv($12);
 label=26;break;
 case 26: 
 if($__now_long_0_off0){label=27;break;}else{label=28;break;}
 case 27: 
 var $or_i=$cond_i226|1;
 var $__cap__i=(($this)|0);
 HEAP32[(($__cap__i)>>2)]=$or_i;
 var $__size__i65=(($this+4)|0);
 HEAP32[(($__size__i65)>>2)]=$cond_i116;
 var $__data__i=(($this+8)|0);
 HEAP32[(($__data__i)>>2)]=$__new_data_1;
 label=29;break;
 case 28: 
 var $shl_i=$cond_i116<<1;
 var $conv_i=(($shl_i)&255);
 HEAP8[($__size__i_i)]=$conv_i;
 label=29;break;
 case 29: 
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($this,$__c){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__size__i=$this;
 var $0=HEAP8[($__size__i)];
 var $and_i=$0&1;
 var $tobool=(($and_i<<24)>>24)==0;
 if($tobool){label=2;break;}else{label=3;break;}
 case 2: 
 var $conv_i=($0&255);
 var $shr_i11=$conv_i>>>1;
 var $__sz_0=$shr_i11;var $__cap_0=1;label=4;break;
 case 3: 
 var $__cap__i=(($this)|0);
 var $1=HEAP32[(($__cap__i)>>2)];
 var $and_i102=$1&-2;
 var $sub=((($and_i102)-(1))|0);
 var $__size__i92=(($this+4)|0);
 var $2=HEAP32[(($__size__i92)>>2)];
 var $__sz_0=$2;var $__cap_0=$sub;label=4;break;
 case 4: 
 var $__cap_0;
 var $__sz_0;
 var $cmp=($__sz_0|0)==($__cap_0|0);
 if($cmp){label=5;break;}else{var $__is_short_0_off0_in_in=$0;label=6;break;}
 case 5: 
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($this,$__cap_0,1,$__cap_0,$__cap_0,0,0);
 var $3=HEAP8[($__size__i)];
 var $__is_short_0_off0_in_in=$3;label=6;break;
 case 6: 
 var $__is_short_0_off0_in_in;
 var $__is_short_0_off0_in=$__is_short_0_off0_in_in&1;
 var $__is_short_0_off0=(($__is_short_0_off0_in<<24)>>24)==0;
 if($__is_short_0_off0){label=7;break;}else{label=8;break;}
 case 7: 
 var $__data__i58=(($this+4)|0);
 var $add=$__sz_0<<1;
 var $shl_i=((($add)+(2))|0);
 var $conv_i43=(($shl_i)&255);
 HEAP8[($__size__i)]=$conv_i43;
 var $__p_0_sum_pre=((($__sz_0)+(1))|0);
 var $_pn=$__data__i58;var $__p_0_sum_pre_phi=$__p_0_sum_pre;label=9;break;
 case 8: 
 var $__data__i=(($this+8)|0);
 var $4=HEAP32[(($__data__i)>>2)];
 var $add16=((($__sz_0)+(1))|0);
 var $__size__i28=(($this+4)|0);
 HEAP32[(($__size__i28)>>2)]=$add16;
 var $_pn=$4;var $__p_0_sum_pre_phi=$add16;label=9;break;
 case 9: 
 var $__p_0_sum_pre_phi;
 var $_pn;
 var $__p_0=(($_pn+($__sz_0<<2))|0);
 HEAP32[(($__p_0)>>2)]=$__c;
 var $incdec_ptr=(($_pn+($__p_0_sum_pre_phi<<2))|0);
 HEAP32[(($incdec_ptr)>>2)]=0;
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEjjjjjjPKw($this,$__old_cap,$__delta_cap,$__old_sz,$__n_copy,$__n_del,$__n_add,$__p_new_stuff){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $sub2=(((1073741806)-($__old_cap))|0);
 var $cmp=($sub2>>>0)<($__delta_cap>>>0);
 if($cmp){label=2;break;}else{label=3;break;}
 case 2: 
 __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(0);
 throw "Reached an unreachable!";
 case 3: 
 var $__size__i_i=$this;
 var $0=HEAP8[($__size__i_i)];
 var $and_i_i=$0&1;
 var $tobool_i_i=(($and_i_i<<24)>>24)==0;
 if($tobool_i_i){label=5;break;}else{label=4;break;}
 case 4: 
 var $__data__i21_i=(($this+8)|0);
 var $1=HEAP32[(($__data__i21_i)>>2)];
 var $cond_i=$1;label=6;break;
 case 5: 
 var $__data__i_i=(($this+4)|0);
 var $cond_i=$__data__i_i;label=6;break;
 case 6: 
 var $cond_i;
 var $cmp5=($__old_cap>>>0)<536870887;
 if($cmp5){label=7;break;}else{var $cond_i105_sink=1073741807;label=9;break;}
 case 7: 
 var $add=((($__delta_cap)+($__old_cap))|0);
 var $mul=$__old_cap<<1;
 var $cmp_i_i_i=($add>>>0)<($mul>>>0);
 var $_sroa_speculated=($cmp_i_i_i?$mul:$add);
 var $cmp_i=($_sroa_speculated>>>0)<2;
 if($cmp_i){var $cond_i105_sink=2;label=9;break;}else{label=8;break;}
 case 8: 
 var $add_i_i=((($_sroa_speculated)+(4))|0);
 var $and_i_i103=$add_i_i&-4;
 var $cond_i105_sink=$and_i_i103;label=9;break;
 case 9: 
 var $cond_i105_sink;
 var $mul_i_i=$cond_i105_sink<<2;
 var $call_i_i=__Znwj($mul_i_i);
 var $2=$call_i_i;
 var $cmp13=($__n_copy|0)==0;
 if($cmp13){label=11;break;}else{label=10;break;}
 case 10: 
 var $call_i111=_wmemcpy($2,$cond_i,$__n_copy);
 label=11;break;
 case 11: 
 var $cmp19=($__n_add|0)==0;
 if($cmp19){label=13;break;}else{label=12;break;}
 case 12: 
 var $add_ptr=(($2+($__n_copy<<2))|0);
 var $call_i100=_wmemcpy($add_ptr,$__p_new_stuff,$__n_add);
 label=13;break;
 case 13: 
 var $sub24=((($__old_sz)-($__n_del))|0);
 var $cmp26=($sub24|0)==($__n_copy|0);
 if($cmp26){label=15;break;}else{label=14;break;}
 case 14: 
 var $sub25=((($sub24)-($__n_copy))|0);
 var $add_ptr29_sum=((($__n_add)+($__n_copy))|0);
 var $add_ptr30=(($2+($add_ptr29_sum<<2))|0);
 var $add_ptr32_sum=((($__n_del)+($__n_copy))|0);
 var $add_ptr33=(($cond_i+($add_ptr32_sum<<2))|0);
 var $call_i=_wmemcpy($add_ptr30,$add_ptr33,$sub25);
 label=15;break;
 case 15: 
 var $cmp37=($__old_cap|0)==1;
 if($cmp37){label=17;break;}else{label=16;break;}
 case 16: 
 var $3=$cond_i;
 __ZdlPv($3);
 label=17;break;
 case 17: 
 var $__data__i=(($this+8)|0);
 HEAP32[(($__data__i)>>2)]=$2;
 var $or_i=$cond_i105_sink|1;
 var $__cap__i=(($this)|0);
 HEAP32[(($__cap__i)>>2)]=$or_i;
 var $add44=((($sub24)+($__n_add))|0);
 var $__size__i=(($this+4)|0);
 HEAP32[(($__size__i)>>2)]=$add44;
 var $arrayidx=(($2+($add44<<2))|0);
 HEAP32[(($arrayidx)>>2)]=0;
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($this,$__old_cap,$__delta_cap,$__old_sz,$__n_copy,$__n_del,$__n_add){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $sub=(((1073741807)-($__old_cap))|0);
 var $cmp=($sub>>>0)<($__delta_cap>>>0);
 if($cmp){label=2;break;}else{label=3;break;}
 case 2: 
 __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(0);
 throw "Reached an unreachable!";
 case 3: 
 var $__size__i_i=$this;
 var $0=HEAP8[($__size__i_i)];
 var $and_i_i=$0&1;
 var $tobool_i_i=(($and_i_i<<24)>>24)==0;
 if($tobool_i_i){label=5;break;}else{label=4;break;}
 case 4: 
 var $__data__i21_i=(($this+8)|0);
 var $1=HEAP32[(($__data__i21_i)>>2)];
 var $cond_i=$1;label=6;break;
 case 5: 
 var $__data__i_i=(($this+4)|0);
 var $cond_i=$__data__i_i;label=6;break;
 case 6: 
 var $cond_i;
 var $cmp4=($__old_cap>>>0)<536870887;
 if($cmp4){label=7;break;}else{var $cond_i85_sink=1073741807;label=9;break;}
 case 7: 
 var $add=((($__delta_cap)+($__old_cap))|0);
 var $mul=$__old_cap<<1;
 var $cmp_i_i_i=($add>>>0)<($mul>>>0);
 var $_sroa_speculated=($cmp_i_i_i?$mul:$add);
 var $cmp_i=($_sroa_speculated>>>0)<2;
 if($cmp_i){var $cond_i85_sink=2;label=9;break;}else{label=8;break;}
 case 8: 
 var $add_i_i=((($_sroa_speculated)+(4))|0);
 var $and_i_i83=$add_i_i&-4;
 var $cond_i85_sink=$and_i_i83;label=9;break;
 case 9: 
 var $cond_i85_sink;
 var $mul_i_i=$cond_i85_sink<<2;
 var $call_i_i=__Znwj($mul_i_i);
 var $2=$call_i_i;
 var $cmp12=($__n_copy|0)==0;
 if($cmp12){label=11;break;}else{label=10;break;}
 case 10: 
 var $call_i80=_wmemcpy($2,$cond_i,$__n_copy);
 label=11;break;
 case 11: 
 var $sub18=((($__old_sz)-($__n_del))|0);
 var $cmp20=($sub18|0)==($__n_copy|0);
 if($cmp20){label=13;break;}else{label=12;break;}
 case 12: 
 var $sub19=((($sub18)-($__n_copy))|0);
 var $add_ptr_sum=((($__n_add)+($__n_copy))|0);
 var $add_ptr23=(($2+($add_ptr_sum<<2))|0);
 var $add_ptr25_sum=((($__n_del)+($__n_copy))|0);
 var $add_ptr26=(($cond_i+($add_ptr25_sum<<2))|0);
 var $call_i=_wmemcpy($add_ptr23,$add_ptr26,$sub19);
 label=13;break;
 case 13: 
 var $cmp30=($__old_cap|0)==1;
 if($cmp30){label=15;break;}else{label=14;break;}
 case 14: 
 var $3=$cond_i;
 __ZdlPv($3);
 label=15;break;
 case 15: 
 var $__data__i=(($this+8)|0);
 HEAP32[(($__data__i)>>2)]=$2;
 var $or_i=$cond_i85_sink|1;
 var $__cap__i=(($this)|0);
 HEAP32[(($__cap__i)>>2)]=$or_i;
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__18ios_base5clearEj($this,$state){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $agg_tmp_i=sp;
 var $__rdbuf_=(($this+24)|0);
 var $0=HEAP32[(($__rdbuf_)>>2)];
 var $tobool=($0|0)==0;
 if($tobool){label=3;break;}else{label=2;break;}
 case 2: 
 var $__rdstate_=(($this+16)|0);
 HEAP32[(($__rdstate_)>>2)]=$state;
 label=4;break;
 case 3: 
 var $or=$state|1;
 var $__rdstate_2=(($this+16)|0);
 HEAP32[(($__rdstate_2)>>2)]=$or;
 label=4;break;
 case 4: 
 var $cond=($tobool&1);
 var $or5=$cond|$state;
 var $__exceptions_=(($this+20)|0);
 var $1=HEAP32[(($__exceptions_)>>2)];
 var $and=$or5&$1;
 var $cmp=($and|0)==0;
 if($cmp){label=11;break;}else{label=5;break;}
 case 5: 
 var $exception=___cxa_allocate_exception(16);
 var $2=HEAP8[(15952)];
 var $guard_uninitialized_i=(($2<<24)>>24)==0;
 if($guard_uninitialized_i){label=6;break;}else{label=8;break;}
 case 6: 
 var $3=___cxa_guard_acquire(15952);
 var $tobool_i=($3|0)==0;
 if($tobool_i){label=8;break;}else{label=7;break;}
 case 7: 
 HEAP32[((13960)>>2)]=5760;
 var $4=_atexit((194),13960,___dso_handle);
 label=8;break;
 case 8: 
 var $5=$agg_tmp_i;
 var $tmpcast_i=$agg_tmp_i;
 var $6=$exception;
 var $$etemp$2$0=1;
 var $$etemp$2$1=0;
 var $$etemp$4$0=0;
 var $$etemp$4$1=-1;
 var $$etemp$6$0=32;
 var $$etemp$6$1=0;
 var $$etemp$7=13960;
 var $$etemp$5$0=$$etemp$7;
 var $$etemp$5$1=0;
 var $$etemp$3$0=_bitshift64Shl($$etemp$5$0,$$etemp$5$1,$$etemp$6$0);var $$etemp$3$1=tempRet0;
 var $$etemp$1$0=$$etemp$3$0&$$etemp$4$0;
 var $$etemp$1$1=$$etemp$3$1&$$etemp$4$1;
 var $$etemp$0$0=$$etemp$1$0|$$etemp$2$0;
 var $$etemp$0$1=$$etemp$1$1|$$etemp$2$1;
 var $st$8$0=(($agg_tmp_i)|0);
 HEAP32[(($st$8$0)>>2)]=$$etemp$0$0;
 var $st$9$1=(($agg_tmp_i+4)|0);
 HEAP32[(($st$9$1)>>2)]=$$etemp$0$1;
 (function() { try { __THREW__ = 0; return __ZNSt3__112system_errorC2ENS_10error_codeEPKc($6,$tmpcast_i,2600) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=9;break; } else { label=10;break; }
 case 9: 
 var $7=$exception;
 HEAP32[(($7)>>2)]=4944;
 ___cxa_throw($exception,10840,(70));
 throw "Reached an unreachable!";
 case 10: 
 var $8$0 = ___cxa_find_matching_catch(-1, -1); var $8$1 = tempRet0;
 ___cxa_free_exception($exception);
 ___resumeException($8$0)
 case 11: 
 STACKTOP=sp;return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__18ios_baseD2Ev($this){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $0=(($this)|0);
 HEAP32[(($0)>>2)]=4920;
 var $__event_size__i=(($this+40)|0);
 var $1=HEAP32[(($__event_size__i)>>2)];
 var $tobool4_i=($1|0)==0;
 var $__fn__pre=(($this+32)|0);
 var $__index__pre=(($this+36)|0);
 if($tobool4_i){label=4;break;}else{var $i_05_i=$1;label=2;break;}
 case 2: 
 var $i_05_i;
 var $dec_i=((($i_05_i)-(1))|0);
 var $2=HEAP32[(($__fn__pre)>>2)];
 var $arrayidx_i=(($2+($dec_i<<2))|0);
 var $3=HEAP32[(($arrayidx_i)>>2)];
 var $4=HEAP32[(($__index__pre)>>2)];
 var $arrayidx2_i=(($4+($dec_i<<2))|0);
 var $5=HEAP32[(($arrayidx2_i)>>2)];
 (function() { try { __THREW__ = 0; return FUNCTION_TABLE[$3](0,$this,$5) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=3;break; } else { label=5;break; }
 case 3: 
 var $tobool_i=($dec_i|0)==0;
 if($tobool_i){label=4;break;}else{var $i_05_i=$dec_i;label=2;break;}
 case 4: 
 var $__loc_=(($this+28)|0);
 var $6=$__loc_;
 __ZNSt3__16localeD2Ev($6);
 var $7=HEAP32[(($__fn__pre)>>2)];
 var $8=$7;
 _free($8);
 var $9=HEAP32[(($__index__pre)>>2)];
 var $10=$9;
 _free($10);
 var $__iarray_=(($this+48)|0);
 var $11=HEAP32[(($__iarray_)>>2)];
 var $12=$11;
 _free($12);
 var $__parray_=(($this+60)|0);
 var $13=HEAP32[(($__parray_)>>2)];
 var $14=$13;
 _free($14);
 return;
 case 5: 
 var $15$0 = ___cxa_find_matching_catch(-1, -1,0); var $15$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__18ios_base6getlocEv($agg_result,$this){
 var label=0;
 var $__loc_=(($this+28)|0);
 var $0=$__loc_;
 __ZNSt3__16localeC2ERKS0_($agg_result,$0);
 return;
}
function __ZNSt3__18ios_base4initEPv($this,$sb){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__rdbuf_=(($this+24)|0);
 HEAP32[(($__rdbuf_)>>2)]=$sb;
 var $not_tobool=($sb|0)==0;
 var $cond=($not_tobool&1);
 var $__rdstate_=(($this+16)|0);
 HEAP32[(($__rdstate_)>>2)]=$cond;
 var $__exceptions_=(($this+20)|0);
 HEAP32[(($__exceptions_)>>2)]=0;
 var $__fmtflags_=(($this+4)|0);
 HEAP32[(($__fmtflags_)>>2)]=4098;
 var $__width_=(($this+12)|0);
 HEAP32[(($__width_)>>2)]=0;
 var $__precision_=(($this+8)|0);
 HEAP32[(($__precision_)>>2)]=6;
 var $__fn_=(($this+32)|0);
 var $__loc_=(($this+28)|0);
 var $new_isnull=($__loc_|0)==0;
 var $0=$__fn_;
 _memset($0, 0, 40)|0;
 if($new_isnull){label=3;break;}else{label=2;break;}
 case 2: 
 var $1=$__loc_;
 __ZNSt3__16localeC2Ev($1);
 label=3;break;
 case 3: 
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED0Ev($this){
 var label=0;
 var $0=(($this)|0);
 HEAP32[(($0)>>2)]=5992;
 var $__loc__i_i=(($this+4)|0);
 __ZNSt3__16localeD2Ev($__loc__i_i);
 var $1=$this;
 __ZdlPv($1);
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED1Ev($this){
 var label=0;
 var $0=(($this)|0);
 HEAP32[(($0)>>2)]=5992;
 var $__loc__i=(($this+4)|0);
 __ZNSt3__16localeD2Ev($__loc__i);
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE($this,$0){
 var label=0;
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPci($this,$0,$1){
 var label=0;
 return $this;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj($agg_result,$this,$0$0,$0$1,$1,$2){
 var label=0;
 var $3=$agg_result;
 var $$etemp$0$0=0;
 var $$etemp$0$1=0;
 var $st$1$0=(($3)|0);
 HEAP32[(($st$1$0)>>2)]=$$etemp$0$0;
 var $st$2$1=(($3+4)|0);
 HEAP32[(($st$2$1)>>2)]=$$etemp$0$1;
 var $__off__i_i=(($agg_result+8)|0);
 var $$etemp$3$0=-1;
 var $$etemp$3$1=-1;
 var $st$4$0=(($__off__i_i)|0);
 HEAP32[(($st$4$0)>>2)]=$$etemp$3$0;
 var $st$5$1=(($__off__i_i+4)|0);
 HEAP32[(($st$5$1)>>2)]=$$etemp$3$1;
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj($agg_result,$this,$0,$1){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $0; $0=STACKTOP;STACKTOP = (STACKTOP + 16)|0;(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($0)>>2)]=HEAP32[((tempParam)>>2)];HEAP32[((($0)+(4))>>2)]=HEAP32[(((tempParam)+(4))>>2)];HEAP32[((($0)+(8))>>2)]=HEAP32[(((tempParam)+(8))>>2)];HEAP32[((($0)+(12))>>2)]=HEAP32[(((tempParam)+(12))>>2)];
 var $2=$agg_result;
 var $$etemp$0$0=0;
 var $$etemp$0$1=0;
 var $st$1$0=(($2)|0);
 HEAP32[(($st$1$0)>>2)]=$$etemp$0$0;
 var $st$2$1=(($2+4)|0);
 HEAP32[(($st$2$1)>>2)]=$$etemp$0$1;
 var $__off__i_i=(($agg_result+8)|0);
 var $$etemp$3$0=-1;
 var $$etemp$3$1=-1;
 var $st$4$0=(($__off__i_i)|0);
 HEAP32[(($st$4$0)>>2)]=$$etemp$3$0;
 var $st$5$1=(($__off__i_i+4)|0);
 HEAP32[(($st$5$1)>>2)]=$$etemp$3$1;
 STACKTOP=sp;return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv($this){
 var label=0;
 return 0;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv($this){
 var label=0;
 return 0;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci($this,$__s,$__n){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $0=$this;
 var $cmp6=($__n|0)>0;
 if($cmp6){label=2;break;}else{var $__i_0_lcssa=0;label=8;break;}
 case 2: 
 var $__ninp_=(($this+12)|0);
 var $__einp_=(($this+16)|0);
 var $__s_addr_07=$__s;var $__i_08=0;label=3;break;
 case 3: 
 var $__i_08;
 var $__s_addr_07;
 var $1=HEAP32[(($__ninp_)>>2)];
 var $2=HEAP32[(($__einp_)>>2)];
 var $cmp2=($1>>>0)<($2>>>0);
 if($cmp2){label=4;break;}else{label=5;break;}
 case 4: 
 var $incdec_ptr=(($1+1)|0);
 HEAP32[(($__ninp_)>>2)]=$incdec_ptr;
 var $3=HEAP8[($1)];
 var $storemerge=$3;label=7;break;
 case 5: 
 var $vtable=HEAP32[(($0)>>2)];
 var $vfn=(($vtable+40)|0);
 var $4=HEAP32[(($vfn)>>2)];
 var $call4=FUNCTION_TABLE[$4]($this);
 var $cmp5=($call4|0)==-1;
 if($cmp5){var $__i_0_lcssa=$__i_08;label=8;break;}else{label=6;break;}
 case 6: 
 var $conv_i=(($call4)&255);
 var $storemerge=$conv_i;label=7;break;
 case 7: 
 var $storemerge;
 HEAP8[($__s_addr_07)]=$storemerge;
 var $inc=((($__i_08)+(1))|0);
 var $incdec_ptr10=(($__s_addr_07+1)|0);
 var $cmp=($inc|0)<($__n|0);
 if($cmp){var $__s_addr_07=$incdec_ptr10;var $__i_08=$inc;label=3;break;}else{var $__i_0_lcssa=$inc;label=8;break;}
 case 8: 
 var $__i_0_lcssa;
 return $__i_0_lcssa;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9underflowEv($this){
 var label=0;
 return -1;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv($this){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $0=$this;
 var $vtable=HEAP32[(($0)>>2)];
 var $vfn=(($vtable+36)|0);
 var $1=HEAP32[(($vfn)>>2)];
 var $call=FUNCTION_TABLE[$1]($this);
 var $cmp=($call|0)==-1;
 if($cmp){var $retval_0=-1;label=3;break;}else{label=2;break;}
 case 2: 
 var $__ninp_=(($this+12)|0);
 var $2=HEAP32[(($__ninp_)>>2)];
 var $incdec_ptr=(($2+1)|0);
 HEAP32[(($__ninp_)>>2)]=$incdec_ptr;
 var $3=HEAP8[($2)];
 var $conv_i=($3&255);
 var $retval_0=$conv_i;label=3;break;
 case 3: 
 var $retval_0;
 return $retval_0;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi($this,$0){
 var label=0;
 return -1;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci($this,$__s,$__n){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $0=$this;
 var $cmp5=($__n|0)>0;
 if($cmp5){label=2;break;}else{var $__i_0_lcssa=0;label=7;break;}
 case 2: 
 var $__nout_=(($this+24)|0);
 var $__eout_=(($this+28)|0);
 var $__i_06=0;var $__s_addr_07=$__s;label=3;break;
 case 3: 
 var $__s_addr_07;
 var $__i_06;
 var $1=HEAP32[(($__nout_)>>2)];
 var $2=HEAP32[(($__eout_)>>2)];
 var $cmp2=($1>>>0)<($2>>>0);
 if($cmp2){label=4;break;}else{label=5;break;}
 case 4: 
 var $3=HEAP8[($__s_addr_07)];
 var $incdec_ptr=(($1+1)|0);
 HEAP32[(($__nout_)>>2)]=$incdec_ptr;
 HEAP8[($1)]=$3;
 label=6;break;
 case 5: 
 var $vtable=HEAP32[(($0)>>2)];
 var $vfn=(($vtable+52)|0);
 var $4=HEAP32[(($vfn)>>2)];
 var $5=HEAP8[($__s_addr_07)];
 var $conv_i=($5&255);
 var $call5=FUNCTION_TABLE[$4]($this,$conv_i);
 var $cmp6=($call5|0)==-1;
 if($cmp6){var $__i_0_lcssa=$__i_06;label=7;break;}else{label=6;break;}
 case 6: 
 var $incdec_ptr9=(($__s_addr_07+1)|0);
 var $inc=((($__i_06)+(1))|0);
 var $cmp=($inc|0)<($__n|0);
 if($cmp){var $__i_06=$inc;var $__s_addr_07=$incdec_ptr9;label=3;break;}else{var $__i_0_lcssa=$inc;label=7;break;}
 case 7: 
 var $__i_0_lcssa;
 return $__i_0_lcssa;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8overflowEi($this,$0){
 var label=0;
 return -1;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED0Ev($this){
 var label=0;
 var $0=(($this)|0);
 HEAP32[(($0)>>2)]=5920;
 var $__loc__i_i=(($this+4)|0);
 __ZNSt3__16localeD2Ev($__loc__i_i);
 var $1=$this;
 __ZdlPv($1);
 return;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED1Ev($this){
 var label=0;
 var $0=(($this)|0);
 HEAP32[(($0)>>2)]=5920;
 var $__loc__i=(($this+4)|0);
 __ZNSt3__16localeD2Ev($__loc__i);
 return;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5imbueERKNS_6localeE($this,$0){
 var label=0;
 return;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6setbufEPwi($this,$0,$1){
 var label=0;
 return $this;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekoffExNS_8ios_base7seekdirEj($agg_result,$this,$0$0,$0$1,$1,$2){
 var label=0;
 var $3=$agg_result;
 var $$etemp$0$0=0;
 var $$etemp$0$1=0;
 var $st$1$0=(($3)|0);
 HEAP32[(($st$1$0)>>2)]=$$etemp$0$0;
 var $st$2$1=(($3+4)|0);
 HEAP32[(($st$2$1)>>2)]=$$etemp$0$1;
 var $__off__i_i=(($agg_result+8)|0);
 var $$etemp$3$0=-1;
 var $$etemp$3$1=-1;
 var $st$4$0=(($__off__i_i)|0);
 HEAP32[(($st$4$0)>>2)]=$$etemp$3$0;
 var $st$5$1=(($__off__i_i+4)|0);
 HEAP32[(($st$5$1)>>2)]=$$etemp$3$1;
 return;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekposENS_4fposI11__mbstate_tEEj($agg_result,$this,$0,$1){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $0; $0=STACKTOP;STACKTOP = (STACKTOP + 16)|0;(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($0)>>2)]=HEAP32[((tempParam)>>2)];HEAP32[((($0)+(4))>>2)]=HEAP32[(((tempParam)+(4))>>2)];HEAP32[((($0)+(8))>>2)]=HEAP32[(((tempParam)+(8))>>2)];HEAP32[((($0)+(12))>>2)]=HEAP32[(((tempParam)+(12))>>2)];
 var $2=$agg_result;
 var $$etemp$0$0=0;
 var $$etemp$0$1=0;
 var $st$1$0=(($2)|0);
 HEAP32[(($st$1$0)>>2)]=$$etemp$0$0;
 var $st$2$1=(($2+4)|0);
 HEAP32[(($st$2$1)>>2)]=$$etemp$0$1;
 var $__off__i_i=(($agg_result+8)|0);
 var $$etemp$3$0=-1;
 var $$etemp$3$1=-1;
 var $st$4$0=(($__off__i_i)|0);
 HEAP32[(($st$4$0)>>2)]=$$etemp$3$0;
 var $st$5$1=(($__off__i_i+4)|0);
 HEAP32[(($st$5$1)>>2)]=$$etemp$3$1;
 STACKTOP=sp;return;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE4syncEv($this){
 var label=0;
 return 0;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9showmanycEv($this){
 var label=0;
 return 0;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsgetnEPwi($this,$__s,$__n){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $0=$this;
 var $cmp6=($__n|0)>0;
 if($cmp6){label=2;break;}else{var $__i_0_lcssa=0;label=7;break;}
 case 2: 
 var $__ninp_=(($this+12)|0);
 var $__einp_=(($this+16)|0);
 var $__s_addr_07=$__s;var $__i_08=0;label=3;break;
 case 3: 
 var $__i_08;
 var $__s_addr_07;
 var $1=HEAP32[(($__ninp_)>>2)];
 var $2=HEAP32[(($__einp_)>>2)];
 var $cmp2=($1>>>0)<($2>>>0);
 if($cmp2){label=4;break;}else{label=5;break;}
 case 4: 
 var $incdec_ptr=(($1+4)|0);
 HEAP32[(($__ninp_)>>2)]=$incdec_ptr;
 var $3=HEAP32[(($1)>>2)];
 var $storemerge=$3;label=6;break;
 case 5: 
 var $vtable=HEAP32[(($0)>>2)];
 var $vfn=(($vtable+40)|0);
 var $4=HEAP32[(($vfn)>>2)];
 var $call4=FUNCTION_TABLE[$4]($this);
 var $cmp5=($call4|0)==-1;
 if($cmp5){var $__i_0_lcssa=$__i_08;label=7;break;}else{var $storemerge=$call4;label=6;break;}
 case 6: 
 var $storemerge;
 HEAP32[(($__s_addr_07)>>2)]=$storemerge;
 var $inc=((($__i_08)+(1))|0);
 var $incdec_ptr10=(($__s_addr_07+4)|0);
 var $cmp=($inc|0)<($__n|0);
 if($cmp){var $__s_addr_07=$incdec_ptr10;var $__i_08=$inc;label=3;break;}else{var $__i_0_lcssa=$inc;label=7;break;}
 case 7: 
 var $__i_0_lcssa;
 return $__i_0_lcssa;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9underflowEv($this){
 var label=0;
 return -1;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5uflowEv($this){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $0=$this;
 var $vtable=HEAP32[(($0)>>2)];
 var $vfn=(($vtable+36)|0);
 var $1=HEAP32[(($vfn)>>2)];
 var $call=FUNCTION_TABLE[$1]($this);
 var $cmp=($call|0)==-1;
 if($cmp){var $retval_0=-1;label=3;break;}else{label=2;break;}
 case 2: 
 var $__ninp_=(($this+12)|0);
 var $2=HEAP32[(($__ninp_)>>2)];
 var $incdec_ptr=(($2+4)|0);
 HEAP32[(($__ninp_)>>2)]=$incdec_ptr;
 var $3=HEAP32[(($2)>>2)];
 var $retval_0=$3;label=3;break;
 case 3: 
 var $retval_0;
 return $retval_0;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9pbackfailEj($this,$0){
 var label=0;
 return -1;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsputnEPKwi($this,$__s,$__n){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $0=$this;
 var $cmp5=($__n|0)>0;
 if($cmp5){label=2;break;}else{var $__i_0_lcssa=0;label=7;break;}
 case 2: 
 var $__nout_=(($this+24)|0);
 var $__eout_=(($this+28)|0);
 var $__i_06=0;var $__s_addr_07=$__s;label=3;break;
 case 3: 
 var $__s_addr_07;
 var $__i_06;
 var $1=HEAP32[(($__nout_)>>2)];
 var $2=HEAP32[(($__eout_)>>2)];
 var $cmp2=($1>>>0)<($2>>>0);
 if($cmp2){label=4;break;}else{label=5;break;}
 case 4: 
 var $3=HEAP32[(($__s_addr_07)>>2)];
 var $incdec_ptr=(($1+4)|0);
 HEAP32[(($__nout_)>>2)]=$incdec_ptr;
 HEAP32[(($1)>>2)]=$3;
 label=6;break;
 case 5: 
 var $vtable=HEAP32[(($0)>>2)];
 var $vfn=(($vtable+52)|0);
 var $4=HEAP32[(($vfn)>>2)];
 var $5=HEAP32[(($__s_addr_07)>>2)];
 var $call5=FUNCTION_TABLE[$4]($this,$5);
 var $cmp6=($call5|0)==-1;
 if($cmp6){var $__i_0_lcssa=$__i_06;label=7;break;}else{label=6;break;}
 case 6: 
 var $incdec_ptr9=(($__s_addr_07+4)|0);
 var $inc=((($__i_06)+(1))|0);
 var $cmp=($inc|0)<($__n|0);
 if($cmp){var $__i_06=$inc;var $__s_addr_07=$incdec_ptr9;label=3;break;}else{var $__i_0_lcssa=$inc;label=7;break;}
 case 7: 
 var $__i_0_lcssa;
 return $__i_0_lcssa;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE8overflowEj($this,$0){
 var label=0;
 return -1;
}
function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev($this){
 var label=0;
 var $0=(($this+8)|0);
 __ZNSt3__18ios_baseD2Ev($0);
 var $1=$this;
 __ZdlPv($1);
 return;
}
function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev($this){
 var label=0;
 var $0=(($this+8)|0);
 __ZNSt3__18ios_baseD2Ev($0);
 return;
}
function __ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev($this){
 var label=0;
 var $0=$this;
 var $1=$this;
 var $2=HEAP32[(($1)>>2)];
 var $3=((($2)-(12))|0);
 var $4=$3;
 var $5=HEAP32[(($4)>>2)];
 var $6=(($0+$5)|0);
 var $_sum=((($5)+(8))|0);
 var $7=(($0+$_sum)|0);
 var $8=$7;
 __ZNSt3__18ios_baseD2Ev($8);
 __ZdlPv($6);
 return;
}
function __ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev($this){
 var label=0;
 var $0=$this;
 var $1=$this;
 var $2=HEAP32[(($1)>>2)];
 var $3=((($2)-(12))|0);
 var $4=$3;
 var $5=HEAP32[(($4)>>2)];
 var $_sum=((($5)+(8))|0);
 var $6=(($0+$_sum)|0);
 var $7=$6;
 __ZNSt3__18ios_baseD2Ev($7);
 return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($this){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__s=sp;
 var $0=$this;
 var $vtable=HEAP32[(($0)>>2)];
 var $vbase_offset_ptr=((($vtable)-(12))|0);
 var $1=$vbase_offset_ptr;
 var $vbase_offset=HEAP32[(($1)>>2)];
 var $2=$this;
 var $add_ptr_sum=((($vbase_offset)+(24))|0);
 var $__rdbuf__i_i=(($2+$add_ptr_sum)|0);
 var $3=$__rdbuf__i_i;
 var $4=HEAP32[(($3)>>2)];
 var $tobool=($4|0)==0;
 if($tobool){label=14;break;}else{label=2;break;}
 case 2: 
 var $__ok__i4=(($__s)|0);
 HEAP8[($__ok__i4)]=0;
 var $5=(($__s+4)|0);
 HEAP32[(($5)>>2)]=$this;
 var $add_ptr_sum_i=((($vbase_offset)+(16))|0);
 var $__rdstate__i_i_i=(($2+$add_ptr_sum_i)|0);
 var $6=$__rdstate__i_i_i;
 var $7=HEAP32[(($6)>>2)];
 var $cmp_i_i_i=($7|0)==0;
 if($cmp_i_i_i){label=3;break;}else{label=15;break;}
 case 3: 
 var $add_ptr_sum4_i=((($vbase_offset)+(72))|0);
 var $__tie__i_i=(($2+$add_ptr_sum4_i)|0);
 var $8=$__tie__i_i;
 var $9=HEAP32[(($8)>>2)];
 var $tobool_i6=($9|0)==0;
 if($tobool_i6){label=5;break;}else{label=4;break;}
 case 4: 
 var $call13_i8=(function() { try { __THREW__ = 0; return __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($9) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=5;break; } else { label=8;break; }
 case 5: 
 HEAP8[($__ok__i4)]=1;
 var $vtable7=HEAP32[(($0)>>2)];
 var $vbase_offset_ptr8=((($vtable7)-(12))|0);
 var $10=$vbase_offset_ptr8;
 var $vbase_offset9=HEAP32[(($10)>>2)];
 var $add_ptr10_sum=((($vbase_offset9)+(24))|0);
 var $__rdbuf__i_i38=(($2+$add_ptr10_sum)|0);
 var $11=$__rdbuf__i_i38;
 var $12=HEAP32[(($11)>>2)];
 var $13=$12;
 var $14=$12;
 var $vtable_i=HEAP32[(($14)>>2)];
 var $vfn_i=(($vtable_i+24)|0);
 var $15=HEAP32[(($vfn_i)>>2)];
 var $call_i41=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$15]($13) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=6;break; } else { label=9;break; }
 case 6: 
 var $cmp=($call_i41|0)==-1;
 if($cmp){label=7;break;}else{label=15;break;}
 case 7: 
 var $vtable16=HEAP32[(($0)>>2)];
 var $vbase_offset_ptr17=((($vtable16)-(12))|0);
 var $16=$vbase_offset_ptr17;
 var $vbase_offset18=HEAP32[(($16)>>2)];
 var $add_ptr19=(($2+$vbase_offset18)|0);
 var $17=$add_ptr19;
 var $add_ptr19_sum=((($vbase_offset18)+(16))|0);
 var $__rdstate__i_i=(($2+$add_ptr19_sum)|0);
 var $18=$__rdstate__i_i;
 var $19=HEAP32[(($18)>>2)];
 var $or_i_i=$19|1;
 (function() { try { __THREW__ = 0; return __ZNSt3__18ios_base5clearEj($17,$or_i_i) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=15;break; } else { label=9;break; }
 case 8: 
 var $20$0 = ___cxa_find_matching_catch(-1, -1,0); var $20$1 = tempRet0;
 var $21=$20$0;
 var $exn_slot_0=$21;label=10;break;
 case 9: 
 var $22$0 = ___cxa_find_matching_catch(-1, -1,0); var $22$1 = tempRet0;
 var $23=$22$0;
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
 var $exn_slot_0=$23;label=10;break;
 case 10: 
 var $exn_slot_0;
 var $24=___cxa_begin_catch($exn_slot_0);
 var $vtable23=HEAP32[(($0)>>2)];
 var $vbase_offset_ptr24=((($vtable23)-(12))|0);
 var $25=$vbase_offset_ptr24;
 var $vbase_offset25=HEAP32[(($25)>>2)];
 var $add_ptr26_sum=((($vbase_offset25)+(16))|0);
 var $__rdstate__i=(($2+$add_ptr26_sum)|0);
 var $26=$__rdstate__i;
 var $27=HEAP32[(($26)>>2)];
 var $or_i=$27|1;
 HEAP32[(($26)>>2)]=$or_i;
 var $add_ptr26_sum9=((($vbase_offset25)+(20))|0);
 var $__exceptions__i=(($2+$add_ptr26_sum9)|0);
 var $28=$__exceptions__i;
 var $29=HEAP32[(($28)>>2)];
 var $and_i=$29&1;
 var $tobool_i2=($and_i|0)==0;
 if($tobool_i2){label=13;break;}else{label=11;break;}
 case 11: 
 (function() { try { __THREW__ = 0; return ___cxa_rethrow() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=12;break; } else { label=16;break; }
 case 12: 
 throw "Reached an unreachable!";
 case 13: 
 ___cxa_end_catch();
 label=14;break;
 case 14: 
 STACKTOP=sp;return $this;
 case 15: 
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
 label=14;break;
 case 16: 
 var $30$0 = ___cxa_find_matching_catch(-1, -1); var $30$1 = tempRet0;
 (function() { try { __THREW__ = 0; return ___cxa_end_catch() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=17;break; } else { label=18;break; }
 case 17: 
 ___resumeException($30$0)
 case 18: 
 var $31$0 = ___cxa_find_matching_catch(-1, -1,0); var $31$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev($this){
 var label=0;
 var $0=(($this+8)|0);
 __ZNSt3__18ios_baseD2Ev($0);
 var $1=$this;
 __ZdlPv($1);
 return;
}
function __ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev($this){
 var label=0;
 var $0=(($this+8)|0);
 __ZNSt3__18ios_baseD2Ev($0);
 return;
}
function __ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev($this){
 var label=0;
 var $0=$this;
 var $1=$this;
 var $2=HEAP32[(($1)>>2)];
 var $3=((($2)-(12))|0);
 var $4=$3;
 var $5=HEAP32[(($4)>>2)];
 var $6=(($0+$5)|0);
 var $_sum=((($5)+(8))|0);
 var $7=(($0+$_sum)|0);
 var $8=$7;
 __ZNSt3__18ios_baseD2Ev($8);
 __ZdlPv($6);
 return;
}
function __ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev($this){
 var label=0;
 var $0=$this;
 var $1=$this;
 var $2=HEAP32[(($1)>>2)];
 var $3=((($2)-(12))|0);
 var $4=$3;
 var $5=HEAP32[(($4)>>2)];
 var $_sum=((($5)+(8))|0);
 var $6=(($0+$_sum)|0);
 var $7=$6;
 __ZNSt3__18ios_baseD2Ev($7);
 return;
}
function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE5flushEv($this){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__s=sp;
 var $0=$this;
 var $vtable=HEAP32[(($0)>>2)];
 var $vbase_offset_ptr=((($vtable)-(12))|0);
 var $1=$vbase_offset_ptr;
 var $vbase_offset=HEAP32[(($1)>>2)];
 var $2=$this;
 var $add_ptr_sum=((($vbase_offset)+(24))|0);
 var $__rdbuf__i_i=(($2+$add_ptr_sum)|0);
 var $3=$__rdbuf__i_i;
 var $4=HEAP32[(($3)>>2)];
 var $tobool=($4|0)==0;
 if($tobool){label=14;break;}else{label=2;break;}
 case 2: 
 var $__ok__i4=(($__s)|0);
 HEAP8[($__ok__i4)]=0;
 var $5=(($__s+4)|0);
 HEAP32[(($5)>>2)]=$this;
 var $add_ptr_sum_i=((($vbase_offset)+(16))|0);
 var $__rdstate__i_i_i=(($2+$add_ptr_sum_i)|0);
 var $6=$__rdstate__i_i_i;
 var $7=HEAP32[(($6)>>2)];
 var $cmp_i_i_i=($7|0)==0;
 if($cmp_i_i_i){label=3;break;}else{label=15;break;}
 case 3: 
 var $add_ptr_sum4_i=((($vbase_offset)+(72))|0);
 var $__tie__i_i=(($2+$add_ptr_sum4_i)|0);
 var $8=$__tie__i_i;
 var $9=HEAP32[(($8)>>2)];
 var $tobool_i6=($9|0)==0;
 if($tobool_i6){label=5;break;}else{label=4;break;}
 case 4: 
 var $call13_i8=(function() { try { __THREW__ = 0; return __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE5flushEv($9) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=5;break; } else { label=8;break; }
 case 5: 
 HEAP8[($__ok__i4)]=1;
 var $vtable7=HEAP32[(($0)>>2)];
 var $vbase_offset_ptr8=((($vtable7)-(12))|0);
 var $10=$vbase_offset_ptr8;
 var $vbase_offset9=HEAP32[(($10)>>2)];
 var $add_ptr10_sum=((($vbase_offset9)+(24))|0);
 var $__rdbuf__i_i38=(($2+$add_ptr10_sum)|0);
 var $11=$__rdbuf__i_i38;
 var $12=HEAP32[(($11)>>2)];
 var $13=$12;
 var $14=$12;
 var $vtable_i=HEAP32[(($14)>>2)];
 var $vfn_i=(($vtable_i+24)|0);
 var $15=HEAP32[(($vfn_i)>>2)];
 var $call_i41=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$15]($13) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=6;break; } else { label=9;break; }
 case 6: 
 var $cmp=($call_i41|0)==-1;
 if($cmp){label=7;break;}else{label=15;break;}
 case 7: 
 var $vtable16=HEAP32[(($0)>>2)];
 var $vbase_offset_ptr17=((($vtable16)-(12))|0);
 var $16=$vbase_offset_ptr17;
 var $vbase_offset18=HEAP32[(($16)>>2)];
 var $add_ptr19=(($2+$vbase_offset18)|0);
 var $17=$add_ptr19;
 var $add_ptr19_sum=((($vbase_offset18)+(16))|0);
 var $__rdstate__i_i=(($2+$add_ptr19_sum)|0);
 var $18=$__rdstate__i_i;
 var $19=HEAP32[(($18)>>2)];
 var $or_i_i=$19|1;
 (function() { try { __THREW__ = 0; return __ZNSt3__18ios_base5clearEj($17,$or_i_i) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=15;break; } else { label=9;break; }
 case 8: 
 var $20$0 = ___cxa_find_matching_catch(-1, -1,0); var $20$1 = tempRet0;
 var $21=$20$0;
 var $exn_slot_0=$21;label=10;break;
 case 9: 
 var $22$0 = ___cxa_find_matching_catch(-1, -1,0); var $22$1 = tempRet0;
 var $23=$22$0;
 __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryD2Ev($__s);
 var $exn_slot_0=$23;label=10;break;
 case 10: 
 var $exn_slot_0;
 var $24=___cxa_begin_catch($exn_slot_0);
 var $vtable23=HEAP32[(($0)>>2)];
 var $vbase_offset_ptr24=((($vtable23)-(12))|0);
 var $25=$vbase_offset_ptr24;
 var $vbase_offset25=HEAP32[(($25)>>2)];
 var $add_ptr26_sum=((($vbase_offset25)+(16))|0);
 var $__rdstate__i=(($2+$add_ptr26_sum)|0);
 var $26=$__rdstate__i;
 var $27=HEAP32[(($26)>>2)];
 var $or_i=$27|1;
 HEAP32[(($26)>>2)]=$or_i;
 var $add_ptr26_sum9=((($vbase_offset25)+(20))|0);
 var $__exceptions__i=(($2+$add_ptr26_sum9)|0);
 var $28=$__exceptions__i;
 var $29=HEAP32[(($28)>>2)];
 var $and_i=$29&1;
 var $tobool_i2=($and_i|0)==0;
 if($tobool_i2){label=13;break;}else{label=11;break;}
 case 11: 
 (function() { try { __THREW__ = 0; return ___cxa_rethrow() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=12;break; } else { label=16;break; }
 case 12: 
 throw "Reached an unreachable!";
 case 13: 
 ___cxa_end_catch();
 label=14;break;
 case 14: 
 STACKTOP=sp;return $this;
 case 15: 
 __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryD2Ev($__s);
 label=14;break;
 case 16: 
 var $30$0 = ___cxa_find_matching_catch(-1, -1); var $30$1 = tempRet0;
 (function() { try { __THREW__ = 0; return ___cxa_end_catch() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=17;break; } else { label=18;break; }
 case 17: 
 ___resumeException($30$0)
 case 18: 
 var $31$0 = ___cxa_find_matching_catch(-1, -1,0); var $31$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev($this){
 var label=0;
 var $0=(($this+4)|0);
 __ZNSt3__18ios_baseD2Ev($0);
 var $1=$this;
 __ZdlPv($1);
 return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev($this){
 var label=0;
 var $0=(($this+4)|0);
 __ZNSt3__18ios_baseD2Ev($0);
 return;
}
function __ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev($this){
 var label=0;
 var $0=$this;
 var $1=$this;
 var $2=HEAP32[(($1)>>2)];
 var $3=((($2)-(12))|0);
 var $4=$3;
 var $5=HEAP32[(($4)>>2)];
 var $6=(($0+$5)|0);
 var $_sum=((($5)+(4))|0);
 var $7=(($0+$_sum)|0);
 var $8=$7;
 __ZNSt3__18ios_baseD2Ev($8);
 __ZdlPv($6);
 return;
}
function __ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev($this){
 var label=0;
 var $0=$this;
 var $1=$this;
 var $2=HEAP32[(($1)>>2)];
 var $3=((($2)-(12))|0);
 var $4=$3;
 var $5=HEAP32[(($4)>>2)];
 var $_sum=((($5)+(4))|0);
 var $6=(($0+$_sum)|0);
 var $7=$6;
 __ZNSt3__18ios_baseD2Ev($7);
 return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($this){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__os_=(($this+4)|0);
 var $ref=HEAP32[(($__os_)>>2)];
 var $0=$ref;
 var $vtable=HEAP32[(($0)>>2)];
 var $vbase_offset_ptr=((($vtable)-(12))|0);
 var $1=$vbase_offset_ptr;
 var $vbase_offset=HEAP32[(($1)>>2)];
 var $2=$ref;
 var $add_ptr_sum=((($vbase_offset)+(24))|0);
 var $__rdbuf__i_i=(($2+$add_ptr_sum)|0);
 var $3=$__rdbuf__i_i;
 var $4=HEAP32[(($3)>>2)];
 var $tobool=($4|0)==0;
 if($tobool){label=9;break;}else{label=2;break;}
 case 2: 
 var $add_ptr_sum1=((($vbase_offset)+(16))|0);
 var $__rdstate__i_i50=(($2+$add_ptr_sum1)|0);
 var $5=$__rdstate__i_i50;
 var $6=HEAP32[(($5)>>2)];
 var $cmp_i_i=($6|0)==0;
 if($cmp_i_i){label=3;break;}else{label=9;break;}
 case 3: 
 var $add_ptr_sum2=((($vbase_offset)+(4))|0);
 var $__fmtflags__i=(($2+$add_ptr_sum2)|0);
 var $7=$__fmtflags__i;
 var $8=HEAP32[(($7)>>2)];
 var $and=$8&8192;
 var $tobool19=($and|0)==0;
 if($tobool19){label=9;break;}else{label=4;break;}
 case 4: 
 var $call21=__ZSt18uncaught_exceptionv();
 if($call21){label=9;break;}else{label=5;break;}
 case 5: 
 var $ref23=HEAP32[(($__os_)>>2)];
 var $9=$ref23;
 var $vtable24=HEAP32[(($9)>>2)];
 var $vbase_offset_ptr25=((($vtable24)-(12))|0);
 var $10=$vbase_offset_ptr25;
 var $vbase_offset26=HEAP32[(($10)>>2)];
 var $11=$ref23;
 var $add_ptr27_sum=((($vbase_offset26)+(24))|0);
 var $__rdbuf__i_i60=(($11+$add_ptr27_sum)|0);
 var $12=$__rdbuf__i_i60;
 var $13=HEAP32[(($12)>>2)];
 var $14=$13;
 var $15=$13;
 var $vtable_i=HEAP32[(($15)>>2)];
 var $vfn_i=(($vtable_i+24)|0);
 var $16=HEAP32[(($vfn_i)>>2)];
 var $call_i53=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$16]($14) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=6;break; } else { label=8;break; }
 case 6: 
 var $cmp=($call_i53|0)==-1;
 if($cmp){label=7;break;}else{label=9;break;}
 case 7: 
 var $ref34=HEAP32[(($__os_)>>2)];
 var $17=$ref34;
 var $vtable35=HEAP32[(($17)>>2)];
 var $vbase_offset_ptr36=((($vtable35)-(12))|0);
 var $18=$vbase_offset_ptr36;
 var $vbase_offset37=HEAP32[(($18)>>2)];
 var $19=$ref34;
 var $add_ptr38=(($19+$vbase_offset37)|0);
 var $20=$add_ptr38;
 var $add_ptr38_sum=((($vbase_offset37)+(16))|0);
 var $__rdstate__i_i=(($19+$add_ptr38_sum)|0);
 var $21=$__rdstate__i_i;
 var $22=HEAP32[(($21)>>2)];
 var $or_i_i=$22|1;
 (function() { try { __THREW__ = 0; return __ZNSt3__18ios_base5clearEj($20,$or_i_i) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=9;break; } else { label=8;break; }
 case 8: 
 var $23$0 = ___cxa_find_matching_catch(-1, -1,0); var $23$1 = tempRet0;
 var $24=$23$0;
 var $25=___cxa_begin_catch($24);
 (function() { try { __THREW__ = 0; return ___cxa_end_catch() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=9;break; } else { label=10;break; }
 case 9: 
 return;
 case 10: 
 var $26$0 = ___cxa_find_matching_catch(-1, -1,0); var $26$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev($this){
 var label=0;
 var $0=(($this+4)|0);
 __ZNSt3__18ios_baseD2Ev($0);
 var $1=$this;
 __ZdlPv($1);
 return;
}
function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev($this){
 var label=0;
 var $0=(($this+4)|0);
 __ZNSt3__18ios_baseD2Ev($0);
 return;
}
function __ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev($this){
 var label=0;
 var $0=$this;
 var $1=$this;
 var $2=HEAP32[(($1)>>2)];
 var $3=((($2)-(12))|0);
 var $4=$3;
 var $5=HEAP32[(($4)>>2)];
 var $6=(($0+$5)|0);
 var $_sum=((($5)+(4))|0);
 var $7=(($0+$_sum)|0);
 var $8=$7;
 __ZNSt3__18ios_baseD2Ev($8);
 __ZdlPv($6);
 return;
}
function __ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev($this){
 var label=0;
 var $0=$this;
 var $1=$this;
 var $2=HEAP32[(($1)>>2)];
 var $3=((($2)-(12))|0);
 var $4=$3;
 var $5=HEAP32[(($4)>>2)];
 var $_sum=((($5)+(4))|0);
 var $6=(($0+$_sum)|0);
 var $7=$6;
 __ZNSt3__18ios_baseD2Ev($7);
 return;
}
function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryD2Ev($this){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__os_=(($this+4)|0);
 var $ref=HEAP32[(($__os_)>>2)];
 var $0=$ref;
 var $vtable=HEAP32[(($0)>>2)];
 var $vbase_offset_ptr=((($vtable)-(12))|0);
 var $1=$vbase_offset_ptr;
 var $vbase_offset=HEAP32[(($1)>>2)];
 var $2=$ref;
 var $add_ptr_sum=((($vbase_offset)+(24))|0);
 var $__rdbuf__i_i=(($2+$add_ptr_sum)|0);
 var $3=$__rdbuf__i_i;
 var $4=HEAP32[(($3)>>2)];
 var $tobool=($4|0)==0;
 if($tobool){label=9;break;}else{label=2;break;}
 case 2: 
 var $add_ptr_sum1=((($vbase_offset)+(16))|0);
 var $__rdstate__i_i50=(($2+$add_ptr_sum1)|0);
 var $5=$__rdstate__i_i50;
 var $6=HEAP32[(($5)>>2)];
 var $cmp_i_i=($6|0)==0;
 if($cmp_i_i){label=3;break;}else{label=9;break;}
 case 3: 
 var $add_ptr_sum2=((($vbase_offset)+(4))|0);
 var $__fmtflags__i=(($2+$add_ptr_sum2)|0);
 var $7=$__fmtflags__i;
 var $8=HEAP32[(($7)>>2)];
 var $and=$8&8192;
 var $tobool19=($and|0)==0;
 if($tobool19){label=9;break;}else{label=4;break;}
 case 4: 
 var $call21=__ZSt18uncaught_exceptionv();
 if($call21){label=9;break;}else{label=5;break;}
 case 5: 
 var $ref23=HEAP32[(($__os_)>>2)];
 var $9=$ref23;
 var $vtable24=HEAP32[(($9)>>2)];
 var $vbase_offset_ptr25=((($vtable24)-(12))|0);
 var $10=$vbase_offset_ptr25;
 var $vbase_offset26=HEAP32[(($10)>>2)];
 var $11=$ref23;
 var $add_ptr27_sum=((($vbase_offset26)+(24))|0);
 var $__rdbuf__i_i60=(($11+$add_ptr27_sum)|0);
 var $12=$__rdbuf__i_i60;
 var $13=HEAP32[(($12)>>2)];
 var $14=$13;
 var $15=$13;
 var $vtable_i=HEAP32[(($15)>>2)];
 var $vfn_i=(($vtable_i+24)|0);
 var $16=HEAP32[(($vfn_i)>>2)];
 var $call_i53=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$16]($14) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=6;break; } else { label=8;break; }
 case 6: 
 var $cmp=($call_i53|0)==-1;
 if($cmp){label=7;break;}else{label=9;break;}
 case 7: 
 var $ref34=HEAP32[(($__os_)>>2)];
 var $17=$ref34;
 var $vtable35=HEAP32[(($17)>>2)];
 var $vbase_offset_ptr36=((($vtable35)-(12))|0);
 var $18=$vbase_offset_ptr36;
 var $vbase_offset37=HEAP32[(($18)>>2)];
 var $19=$ref34;
 var $add_ptr38=(($19+$vbase_offset37)|0);
 var $20=$add_ptr38;
 var $add_ptr38_sum=((($vbase_offset37)+(16))|0);
 var $__rdstate__i_i=(($19+$add_ptr38_sum)|0);
 var $21=$__rdstate__i_i;
 var $22=HEAP32[(($21)>>2)];
 var $or_i_i=$22|1;
 (function() { try { __THREW__ = 0; return __ZNSt3__18ios_base5clearEj($20,$or_i_i) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=9;break; } else { label=8;break; }
 case 8: 
 var $23$0 = ___cxa_find_matching_catch(-1, -1,0); var $23$1 = tempRet0;
 var $24=$23$0;
 var $25=___cxa_begin_catch($24);
 (function() { try { __THREW__ = 0; return ___cxa_end_catch() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=9;break; } else { label=10;break; }
 case 9: 
 return;
 case 10: 
 var $26$0 = ___cxa_find_matching_catch(-1, -1,0); var $26$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__119__iostream_category4nameEv($this){
 var label=0;
 return 3080;
}
function __ZNKSt3__119__iostream_category7messageEi($agg_result,$this,$ev){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $cmp=($ev|0)==1;
 if($cmp){label=3;break;}else{label=2;break;}
 case 2: 
 var $0=(($this)|0);
 __ZNKSt3__112__do_message7messageEi($agg_result,$0,$ev);
 label=4;break;
 case 3: 
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg_result,3368,35);
 label=4;break;
 case 4: 
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__119__iostream_categoryD1Ev($this){
 var label=0;
 var $0=(($this)|0);
 __ZNSt3__114error_categoryD2Ev($0);
 return;
}
function __ZNSt3__18ios_base7failureD0Ev($this){
 var label=0;
 var $0=(($this)|0);
 __ZNSt3__112system_errorD2Ev($0);
 var $1=$this;
 __ZdlPv($1);
 return;
}
function __ZNSt3__18ios_base7failureD2Ev($this){
 var label=0;
 var $0=(($this)|0);
 __ZNSt3__112system_errorD2Ev($0);
 return;
}
function __ZNSt3__18ios_baseD0Ev($this){
 var label=0;
 __ZNSt3__18ios_baseD2Ev($this);
 var $0=$this;
 __ZdlPv($0);
 return;
}
function __ZNSt3__119__iostream_categoryD0Ev($this){
 var label=0;
 var $0=(($this)|0);
 __ZNSt3__114error_categoryD2Ev($0);
 var $1=$this;
 __ZdlPv($1);
 return;
}
function __ZNSt3__17collateIcED0Ev($this){
 var label=0;
 var $0=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($0);
 var $1=$this;
 __ZdlPv($1);
 return;
}
function __ZNSt3__17collateIcED1Ev($this){
 var label=0;
 var $0=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($0);
 return;
}
function __ZNSt3__16locale5facetD2Ev($this){
 var label=0;
 var $0=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($0);
 return;
}
function __ZNKSt3__17collateIcE10do_compareEPKcS3_S3_S3_($this,$__lo1,$__hi1,$__lo2,$__hi2){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $cmp8=($__lo2|0)==($__hi2|0);
 if($cmp8){var $__lo1_addr_0_lcssa=$__lo1;label=6;break;}else{var $__lo1_addr_09=$__lo1;var $__lo2_addr_010=$__lo2;label=2;break;}
 case 2: 
 var $__lo2_addr_010;
 var $__lo1_addr_09;
 var $cmp2=($__lo1_addr_09|0)==($__hi1|0);
 if($cmp2){var $retval_0=-1;label=7;break;}else{label=3;break;}
 case 3: 
 var $0=HEAP8[($__lo1_addr_09)];
 var $1=HEAP8[($__lo2_addr_010)];
 var $cmp4=(($0<<24)>>24)<(($1<<24)>>24);
 if($cmp4){var $retval_0=-1;label=7;break;}else{label=4;break;}
 case 4: 
 var $cmp7=(($1<<24)>>24)<(($0<<24)>>24);
 if($cmp7){var $retval_0=1;label=7;break;}else{label=5;break;}
 case 5: 
 var $incdec_ptr=(($__lo1_addr_09+1)|0);
 var $incdec_ptr10=(($__lo2_addr_010+1)|0);
 var $cmp=($incdec_ptr10|0)==($__hi2|0);
 if($cmp){var $__lo1_addr_0_lcssa=$incdec_ptr;label=6;break;}else{var $__lo1_addr_09=$incdec_ptr;var $__lo2_addr_010=$incdec_ptr10;label=2;break;}
 case 6: 
 var $__lo1_addr_0_lcssa;
 var $cmp11=($__lo1_addr_0_lcssa|0)!=($__hi1|0);
 var $conv12=($cmp11&1);
 var $retval_0=$conv12;label=7;break;
 case 7: 
 var $retval_0;
 return $retval_0;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__17collateIcE12do_transformEPKcS3_($agg_result,$this,$__lo,$__hi){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $sub_ptr_rhs_cast_i_i_i=$__lo;
 var $sub_ptr_lhs_cast_i_i_i=$__hi;
 var $sub_ptr_sub_i_i_i=((($sub_ptr_lhs_cast_i_i_i)-($sub_ptr_rhs_cast_i_i_i))|0);
 var $cmp_i=($sub_ptr_sub_i_i_i>>>0)>4294967279;
 if($cmp_i){label=2;break;}else{label=3;break;}
 case 2: 
 var $0=$agg_result;
 __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($0);
 label=3;break;
 case 3: 
 var $cmp3_i=($sub_ptr_sub_i_i_i>>>0)<11;
 if($cmp3_i){label=4;break;}else{label=5;break;}
 case 4: 
 var $shl_i_i=$sub_ptr_sub_i_i_i<<1;
 var $conv_i_i=(($shl_i_i)&255);
 var $__s2_i_i=$agg_result;
 var $__size__i69_i=$agg_result;
 HEAP8[($__size__i69_i)]=$conv_i_i;
 var $arrayidx_i_i=(($__s2_i_i+1)|0);
 var $__p_0_ph_i=$arrayidx_i_i;label=6;break;
 case 5: 
 var $add_i_i_i=((($sub_ptr_sub_i_i_i)+(16))|0);
 var $and_i_i_i=$add_i_i_i&-16;
 var $call_i_i_i=__Znwj($and_i_i_i);
 var $__data__i_i=(($agg_result+8)|0);
 HEAP32[(($__data__i_i)>>2)]=$call_i_i_i;
 var $or_i_i=$and_i_i_i|1;
 var $__cap__i_i=(($agg_result)|0);
 HEAP32[(($__cap__i_i)>>2)]=$or_i_i;
 var $__size__i_i=(($agg_result+4)|0);
 HEAP32[(($__size__i_i)>>2)]=$sub_ptr_sub_i_i_i;
 var $__p_0_ph_i=$call_i_i_i;label=6;break;
 case 6: 
 var $__p_0_ph_i;
 var $cmp1112_i=($__lo|0)==($__hi|0);
 if($cmp1112_i){var $__p_0_lcssa_i=$__p_0_ph_i;label=10;break;}else{label=7;break;}
 case 7: 
 var $1=(((-$sub_ptr_rhs_cast_i_i_i))|0);
 var $scevgep_i=(($__hi+$1)|0);
 var $__p_013_i=$__p_0_ph_i;var $__first_addr_014_i=$__lo;label=8;break;
 case 8: 
 var $__first_addr_014_i;
 var $__p_013_i;
 var $2=HEAP8[($__first_addr_014_i)];
 HEAP8[($__p_013_i)]=$2;
 var $incdec_ptr_i=(($__first_addr_014_i+1)|0);
 var $incdec_ptr12_i=(($__p_013_i+1)|0);
 var $cmp11_i=($incdec_ptr_i|0)==($__hi|0);
 if($cmp11_i){label=9;break;}else{var $__p_013_i=$incdec_ptr12_i;var $__first_addr_014_i=$incdec_ptr_i;label=8;break;}
 case 9: 
 var $scevgep15_i=$scevgep_i;
 var $scevgep16_i=(($__p_0_ph_i+$scevgep15_i)|0);
 var $__p_0_lcssa_i=$scevgep16_i;label=10;break;
 case 10: 
 var $__p_0_lcssa_i;
 HEAP8[($__p_0_lcssa_i)]=0;
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__17collateIcE7do_hashEPKcS3_($this,$__lo,$__hi){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $cmp6=($__lo|0)==($__hi|0);
 if($cmp6){var $__h_0_lcssa=0;label=3;break;}else{var $__p_07=$__lo;var $__h_08=0;label=2;break;}
 case 2: 
 var $__h_08;
 var $__p_07;
 var $shl=$__h_08<<4;
 var $0=HEAP8[($__p_07)];
 var $conv=(($0<<24)>>24);
 var $add=((($conv)+($shl))|0);
 var $and=$add&-268435456;
 var $shr=$and>>>24;
 var $or=$shr|$and;
 var $xor=$or^$add;
 var $incdec_ptr=(($__p_07+1)|0);
 var $cmp=($incdec_ptr|0)==($__hi|0);
 if($cmp){var $__h_0_lcssa=$xor;label=3;break;}else{var $__p_07=$incdec_ptr;var $__h_08=$xor;label=2;break;}
 case 3: 
 var $__h_0_lcssa;
 return $__h_0_lcssa;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__17collateIwED0Ev($this){
 var label=0;
 var $0=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($0);
 var $1=$this;
 __ZdlPv($1);
 return;
}
function __ZNSt3__17collateIwED1Ev($this){
 var label=0;
 var $0=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($0);
 return;
}
function __ZNKSt3__17collateIwE10do_compareEPKwS3_S3_S3_($this,$__lo1,$__hi1,$__lo2,$__hi2){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $cmp9=($__lo2|0)==($__hi2|0);
 if($cmp9){var $__lo1_addr_0_lcssa=$__lo1;label=6;break;}else{var $__lo1_addr_010=$__lo1;var $__lo2_addr_011=$__lo2;label=2;break;}
 case 2: 
 var $__lo2_addr_011;
 var $__lo1_addr_010;
 var $cmp2=($__lo1_addr_010|0)==($__hi1|0);
 if($cmp2){var $retval_0=-1;label=7;break;}else{label=3;break;}
 case 3: 
 var $0=HEAP32[(($__lo1_addr_010)>>2)];
 var $1=HEAP32[(($__lo2_addr_011)>>2)];
 var $cmp3=($0|0)<($1|0);
 if($cmp3){var $retval_0=-1;label=7;break;}else{label=4;break;}
 case 4: 
 var $cmp4=($1|0)<($0|0);
 if($cmp4){var $retval_0=1;label=7;break;}else{label=5;break;}
 case 5: 
 var $incdec_ptr=(($__lo1_addr_010+4)|0);
 var $incdec_ptr7=(($__lo2_addr_011+4)|0);
 var $cmp=($incdec_ptr7|0)==($__hi2|0);
 if($cmp){var $__lo1_addr_0_lcssa=$incdec_ptr;label=6;break;}else{var $__lo1_addr_010=$incdec_ptr;var $__lo2_addr_011=$incdec_ptr7;label=2;break;}
 case 6: 
 var $__lo1_addr_0_lcssa;
 var $cmp8=($__lo1_addr_0_lcssa|0)!=($__hi1|0);
 var $conv=($cmp8&1);
 var $retval_0=$conv;label=7;break;
 case 7: 
 var $retval_0;
 return $retval_0;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__17collateIwE12do_transformEPKwS3_($agg_result,$this,$__lo,$__hi){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $sub_ptr_rhs_cast_i_i_i=$__lo;
 var $sub_ptr_lhs_cast_i_i_i=$__hi;
 var $sub_ptr_sub_i_i_i=((($sub_ptr_lhs_cast_i_i_i)-($sub_ptr_rhs_cast_i_i_i))|0);
 var $sub_ptr_div_i_i_i=$sub_ptr_sub_i_i_i>>2;
 var $cmp_i=($sub_ptr_div_i_i_i>>>0)>1073741807;
 if($cmp_i){label=2;break;}else{label=3;break;}
 case 2: 
 var $0=$agg_result;
 __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($0);
 label=3;break;
 case 3: 
 var $cmp3_i=($sub_ptr_div_i_i_i>>>0)<2;
 if($cmp3_i){label=4;break;}else{label=5;break;}
 case 4: 
 var $shl_i12_i=$sub_ptr_sub_i_i_i>>>1;
 var $conv_i_i=(($shl_i12_i)&255);
 var $__size__i69_i=$agg_result;
 HEAP8[($__size__i69_i)]=$conv_i_i;
 var $__data__i59_i=(($agg_result+4)|0);
 var $__p_0_ph_i=$__data__i59_i;label=6;break;
 case 5: 
 var $add_i_i_i=((($sub_ptr_div_i_i_i)+(4))|0);
 var $and_i_i_i=$add_i_i_i&-4;
 var $mul_i_i_i=$and_i_i_i<<2;
 var $call_i_i_i=__Znwj($mul_i_i_i);
 var $1=$call_i_i_i;
 var $__data__i_i=(($agg_result+8)|0);
 HEAP32[(($__data__i_i)>>2)]=$1;
 var $or_i_i=$and_i_i_i|1;
 var $__cap__i_i=(($agg_result)|0);
 HEAP32[(($__cap__i_i)>>2)]=$or_i_i;
 var $__size__i_i=(($agg_result+4)|0);
 HEAP32[(($__size__i_i)>>2)]=$sub_ptr_div_i_i_i;
 var $__p_0_ph_i=$1;label=6;break;
 case 6: 
 var $__p_0_ph_i;
 var $cmp1113_i=($__lo|0)==($__hi|0);
 if($cmp1113_i){var $__p_0_lcssa_i=$__p_0_ph_i;label=10;break;}else{label=7;break;}
 case 7: 
 var $scevgep_i=((($__hi)-(4))|0);
 var $scevgep16_i=$scevgep_i;
 var $2=(((-$sub_ptr_rhs_cast_i_i_i))|0);
 var $uglygep_i=(($scevgep16_i+$2)|0);
 var $uglygep17_i=$uglygep_i;
 var $3=$uglygep17_i>>>2;
 var $__p_014_i=$__p_0_ph_i;var $__first_addr_015_i=$__lo;label=8;break;
 case 8: 
 var $__first_addr_015_i;
 var $__p_014_i;
 var $4=HEAP32[(($__first_addr_015_i)>>2)];
 HEAP32[(($__p_014_i)>>2)]=$4;
 var $incdec_ptr_i=(($__first_addr_015_i+4)|0);
 var $incdec_ptr12_i=(($__p_014_i+4)|0);
 var $cmp11_i=($incdec_ptr_i|0)==($__hi|0);
 if($cmp11_i){label=9;break;}else{var $__p_014_i=$incdec_ptr12_i;var $__first_addr_015_i=$incdec_ptr_i;label=8;break;}
 case 9: 
 var $5=((($3)+(1))|0);
 var $scevgep18_i=(($__p_0_ph_i+($5<<2))|0);
 var $__p_0_lcssa_i=$scevgep18_i;label=10;break;
 case 10: 
 var $__p_0_lcssa_i;
 HEAP32[(($__p_0_lcssa_i)>>2)]=0;
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__17collateIwE7do_hashEPKwS3_($this,$__lo,$__hi){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $cmp6=($__lo|0)==($__hi|0);
 if($cmp6){var $__h_0_lcssa=0;label=3;break;}else{var $__p_07=$__lo;var $__h_08=0;label=2;break;}
 case 2: 
 var $__h_08;
 var $__p_07;
 var $shl=$__h_08<<4;
 var $0=HEAP32[(($__p_07)>>2)];
 var $add=((($0)+($shl))|0);
 var $and=$add&-268435456;
 var $shr=$and>>>24;
 var $or=$shr|$and;
 var $xor=$or^$add;
 var $incdec_ptr=(($__p_07+4)|0);
 var $cmp=($incdec_ptr|0)==($__hi|0);
 if($cmp){var $__h_0_lcssa=$xor;label=3;break;}else{var $__p_07=$incdec_ptr;var $__h_08=$xor;label=2;break;}
 case 3: 
 var $__h_0_lcssa;
 return $__h_0_lcssa;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this){
 var label=0;
 var $0=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($0);
 var $1=$this;
 __ZdlPv($1);
 return;
}
function __ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev($this){
 var label=0;
 var $0=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($0);
 return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb($agg_result,$this,$__b,$__e,$__iob,$__err,$__v){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+112)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__p_i_i_i12=sp;
 var $__p_i_i_i=(sp)+(16);
 var $__lv=(sp)+(32);
 var $ref_tmp=(sp)+(40);
 var $agg_tmp=(sp)+(48);
 var $agg_tmp2=(sp)+(56);
 var $ref_tmp4=(sp)+(64);
 var $ref_tmp6=(sp)+(72);
 var $__names=(sp)+(80);
 var $agg_tmp14=(sp)+(104);
 var $__fmtflags__i=(($__iob+4)|0);
 var $0=HEAP32[(($__fmtflags__i)>>2)];
 var $and=$0&1;
 var $cmp=($and|0)==0;
 if($cmp){label=2;break;}else{label=7;break;}
 case 2: 
 HEAP32[(($__lv)>>2)]=-1;
 var $1=$this;
 var $vtable=HEAP32[(($1)>>2)];
 var $vfn=(($vtable+16)|0);
 var $2=HEAP32[(($vfn)>>2)];
 var $3=(($__b)|0);
 var $4=HEAP32[(($3)>>2)];
 var $5=(($agg_tmp)|0);
 HEAP32[(($5)>>2)]=$4;
 var $6=(($__e)|0);
 var $7=HEAP32[(($6)>>2)];
 var $8=(($agg_tmp2)|0);
 HEAP32[(($8)>>2)]=$7;
 FUNCTION_TABLE[$2]($ref_tmp,$this,$agg_tmp,$agg_tmp2,$__iob,$__err,$__lv);
 var $9=(($ref_tmp)|0);
 var $10=HEAP32[(($9)>>2)];
 HEAP32[(($3)>>2)]=$10;
 var $11=HEAP32[(($__lv)>>2)];
 if(($11|0)==0){ label=3;break;}else if(($11|0)==1){ label=4;break;}else{label=5;break;}
 case 3: 
 HEAP8[($__v)]=0;
 label=6;break;
 case 4: 
 HEAP8[($__v)]=1;
 label=6;break;
 case 5: 
 HEAP8[($__v)]=1;
 HEAP32[(($__err)>>2)]=4;
 label=6;break;
 case 6: 
 var $12=(($agg_result)|0);
 HEAP32[(($12)>>2)]=$10;
 label=28;break;
 case 7: 
 __ZNKSt3__18ios_base6getlocEv($ref_tmp4,$__iob);
 var $__locale__i=(($ref_tmp4)|0);
 var $13=HEAP32[(($__locale__i)>>2)];
 var $14=$__p_i_i_i;
 var $15=HEAP32[((15384)>>2)];
 var $cmp_i_i_i=($15|0)==-1;
 if($cmp_i_i_i){label=9;break;}else{label=8;break;}
 case 8: 
 var $ref_tmp_i_sroa_0_0__idx_i_i=(($__p_i_i_i)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i)>>2)]=15384;
 var $ref_tmp_i_sroa_1_4__idx6_i_i=(($__p_i_i_i+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i=(($__p_i_i_i+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(15384,$14,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=9;break; } else { label=23;break; }
 case 9: 
 var $16=HEAP32[((15388)>>2)];
 var $sub_i_i=((($16)-(1))|0);
 var $__end__i_i_i_i=(($13+12)|0);
 var $17=HEAP32[(($__end__i_i_i_i)>>2)];
 var $__begin__i_i_i_i=(($13+8)|0);
 var $18=HEAP32[(($__begin__i_i_i_i)>>2)];
 var $sub_ptr_lhs_cast_i_i_i_i=$17;
 var $sub_ptr_rhs_cast_i_i_i_i=$18;
 var $sub_ptr_sub_i_i_i_i=((($sub_ptr_lhs_cast_i_i_i_i)-($sub_ptr_rhs_cast_i_i_i_i))|0);
 var $sub_ptr_div_i_i_i_i=$sub_ptr_sub_i_i_i_i>>2;
 var $cmp_i_i1_i=($sub_ptr_div_i_i_i_i>>>0)>($sub_i_i>>>0);
 if($cmp_i_i1_i){label=10;break;}else{label=11;break;}
 case 10: 
 var $arrayidx_i_i_i_i=(($18+($sub_i_i<<2))|0);
 var $19=HEAP32[(($arrayidx_i_i_i_i)>>2)];
 var $tobool_i_i_i=($19|0)==0;
 if($tobool_i_i_i){label=11;break;}else{label=13;break;}
 case 11: 
 var $exception_i_i=___cxa_allocate_exception(4);
 var $20=$exception_i_i;
 __ZNSt8bad_castC2Ev($20);
 (function() { try { __THREW__ = 0; return ___cxa_throw($exception_i_i,10264,(376)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=12;break; } else { label=23;break; }
 case 12: 
 throw "Reached an unreachable!";
 case 13: 
 var $21=$19;
 var $22=HEAP32[(($__locale__i)>>2)];
 var $23=(($22)|0);
 var $call_i=__ZNSt3__114__shared_count16__release_sharedEv($23);
 __ZNKSt3__18ios_base6getlocEv($ref_tmp6,$__iob);
 var $__locale__i13=(($ref_tmp6)|0);
 var $24=HEAP32[(($__locale__i13)>>2)];
 var $25=$__p_i_i_i12;
 var $26=HEAP32[((15000)>>2)];
 var $cmp_i_i_i14=($26|0)==-1;
 if($cmp_i_i_i14){label=15;break;}else{label=14;break;}
 case 14: 
 var $ref_tmp_i_sroa_0_0__idx_i_i15=(($__p_i_i_i12)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i15)>>2)]=15000;
 var $ref_tmp_i_sroa_1_4__idx6_i_i16=(($__p_i_i_i12+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i16)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i17=(($__p_i_i_i12+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i17)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(15000,$25,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=15;break; } else { label=24;break; }
 case 15: 
 var $27=HEAP32[((15004)>>2)];
 var $sub_i_i19=((($27)-(1))|0);
 var $__end__i_i_i_i20=(($24+12)|0);
 var $28=HEAP32[(($__end__i_i_i_i20)>>2)];
 var $__begin__i_i_i_i21=(($24+8)|0);
 var $29=HEAP32[(($__begin__i_i_i_i21)>>2)];
 var $sub_ptr_lhs_cast_i_i_i_i22=$28;
 var $sub_ptr_rhs_cast_i_i_i_i23=$29;
 var $sub_ptr_sub_i_i_i_i24=((($sub_ptr_lhs_cast_i_i_i_i22)-($sub_ptr_rhs_cast_i_i_i_i23))|0);
 var $sub_ptr_div_i_i_i_i25=$sub_ptr_sub_i_i_i_i24>>2;
 var $cmp_i_i1_i26=($sub_ptr_div_i_i_i_i25>>>0)>($sub_i_i19>>>0);
 if($cmp_i_i1_i26){label=16;break;}else{label=17;break;}
 case 16: 
 var $arrayidx_i_i_i_i28=(($29+($sub_i_i19<<2))|0);
 var $30=HEAP32[(($arrayidx_i_i_i_i28)>>2)];
 var $tobool_i_i_i29=($30|0)==0;
 if($tobool_i_i_i29){label=17;break;}else{label=19;break;}
 case 17: 
 var $exception_i_i31=___cxa_allocate_exception(4);
 var $31=$exception_i_i31;
 __ZNSt8bad_castC2Ev($31);
 (function() { try { __THREW__ = 0; return ___cxa_throw($exception_i_i31,10264,(376)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=18;break; } else { label=24;break; }
 case 18: 
 throw "Reached an unreachable!";
 case 19: 
 var $32=$30;
 var $33=HEAP32[(($__locale__i13)>>2)];
 var $34=(($33)|0);
 var $call_i37=__ZNSt3__114__shared_count16__release_sharedEv($34);
 var $arrayinit_begin=(($__names)|0);
 var $35=$30;
 var $vtable_i=HEAP32[(($35)>>2)];
 var $vfn_i=(($vtable_i+24)|0);
 var $36=HEAP32[(($vfn_i)>>2)];
 (function() { try { __THREW__ = 0; return FUNCTION_TABLE[$36]($arrayinit_begin,$32) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=20;break; } else { var $arrayinit_endOfInit_0=$arrayinit_begin;label=25;break; }
 case 20: 
 var $arrayinit_element=(($__names+12)|0);
 var $vtable_i40=HEAP32[(($35)>>2)];
 var $vfn_i41=(($vtable_i40+28)|0);
 var $37=HEAP32[(($vfn_i41)>>2)];
 (function() { try { __THREW__ = 0; return FUNCTION_TABLE[$37]($arrayinit_element,$32) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=21;break; } else { var $arrayinit_endOfInit_0=$arrayinit_element;label=25;break; }
 case 21: 
 var $38=(($__e)|0);
 var $39=HEAP32[(($38)>>2)];
 var $40=(($agg_tmp14)|0);
 HEAP32[(($40)>>2)]=$39;
 var $add_ptr=(($__names+24)|0);
 var $call18=(function() { try { __THREW__ = 0; return __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$agg_tmp14,$arrayinit_begin,$add_ptr,$21,$__err,1) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=22;break; } else { label=27;break; }
 case 22: 
 var $cmp20=($call18|0)==($arrayinit_begin|0);
 var $frombool=($cmp20&1);
 HEAP8[($__v)]=$frombool;
 var $41=(($__b)|0);
 var $42=HEAP32[(($41)>>2)];
 var $43=(($agg_result)|0);
 HEAP32[(($43)>>2)]=$42;
 var $arraydestroy_element23=(($__names+12)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($arraydestroy_element23);
 var $arraydestroy_element23_1=(($__names)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($arraydestroy_element23_1);
 label=28;break;
 case 23: 
 var $44$0 = ___cxa_find_matching_catch(-1, -1); var $44$1 = tempRet0;
 var $45=$44$0;
 var $46=$44$1;
 var $47=HEAP32[(($__locale__i)>>2)];
 var $48=(($47)|0);
 var $call_i39=__ZNSt3__114__shared_count16__release_sharedEv($48);
 var $exn_slot_0=$45;var $ehselector_slot_0=$46;label=29;break;
 case 24: 
 var $49$0 = ___cxa_find_matching_catch(-1, -1); var $49$1 = tempRet0;
 var $50=$49$0;
 var $51=$49$1;
 var $52=HEAP32[(($__locale__i13)>>2)];
 var $53=(($52)|0);
 var $call_i41=__ZNSt3__114__shared_count16__release_sharedEv($53);
 var $exn_slot_0=$50;var $ehselector_slot_0=$51;label=29;break;
 case 25: 
 var $arrayinit_endOfInit_0;
 var $54$0 = ___cxa_find_matching_catch(-1, -1); var $54$1 = tempRet0;
 var $55=$54$0;
 var $56=$54$1;
 var $arraydestroy_isempty=($arrayinit_begin|0)==($arrayinit_endOfInit_0|0);
 if($arraydestroy_isempty){var $exn_slot_0=$55;var $ehselector_slot_0=$56;label=29;break;}else{var $arraydestroy_elementPast=$arrayinit_endOfInit_0;label=26;break;}
 case 26: 
 var $arraydestroy_elementPast;
 var $arraydestroy_element=((($arraydestroy_elementPast)-(12))|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($arraydestroy_element);
 var $arraydestroy_done=($arraydestroy_element|0)==($arrayinit_begin|0);
 if($arraydestroy_done){var $exn_slot_0=$55;var $ehselector_slot_0=$56;label=29;break;}else{var $arraydestroy_elementPast=$arraydestroy_element;label=26;break;}
 case 27: 
 var $57$0 = ___cxa_find_matching_catch(-1, -1); var $57$1 = tempRet0;
 var $58=$57$0;
 var $arraydestroy_element29=(($__names+12)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($arraydestroy_element29);
 var $arraydestroy_element29_1=(($__names)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($arraydestroy_element29_1);
 var $59=$57$1;
 var $exn_slot_0=$58;var $ehselector_slot_0=$59;label=29;break;
 case 28: 
 STACKTOP=sp;return;
 case 29: 
 var $ehselector_slot_0;
 var $exn_slot_0;
 var $lpad_val$0=$exn_slot_0;
 var $lpad_val$1=0;
 var $lpad_val32$0=$lpad_val$0;
 var $lpad_val32$1=$ehselector_slot_0;
 ___resumeException($lpad_val32$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$__e,$__kb,$__ke,$__ct,$__err,$__case_sensitive){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+104)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__statbuf=sp;
 var $sub_ptr_lhs_cast_i_i=$__ke;
 var $sub_ptr_rhs_cast_i_i=$__kb;
 var $sub_ptr_sub_i_i=((($sub_ptr_lhs_cast_i_i)-($sub_ptr_rhs_cast_i_i))|0);
 var $sub_ptr_div_i_i=(((($sub_ptr_sub_i_i|0))/(12))&-1);
 var $arraydecay=(($__statbuf)|0);
 var $cmp=($sub_ptr_div_i_i>>>0)>100;
 if($cmp){label=2;break;}else{var $__status_0=$arraydecay;var $__stat_hold_sroa_0_1=0;label=10;break;}
 case 2: 
 var $call1=_malloc($sub_ptr_div_i_i);
 var $cmp2=($call1|0)==0;
 if($cmp2){label=3;break;}else{var $__status_0=$call1;var $__stat_hold_sroa_0_1=$call1;label=10;break;}
 case 3: 
 (function() { try { __THREW__ = 0; return __ZSt17__throw_bad_allocv() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $__status_0=0;var $__stat_hold_sroa_0_1=0;label=10;break; } else { label=4;break; }
 case 4: 
 var $0$0 = ___cxa_find_matching_catch(-1, -1); var $0$1 = tempRet0;
 var $57$1=$0$1;var $57$0=$0$0;label=104;break;
 case 5: 
 var $lpad_us_lcssa$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_us_lcssa$1 = tempRet0;
 var $lpad_phi$1=$lpad_us_lcssa$1;var $lpad_phi$0=$lpad_us_lcssa$0;label=8;break;
 case 6: 
 var $lpad_loopexit101$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_loopexit101$1 = tempRet0;
 var $lpad_phi$1=$lpad_loopexit101$1;var $lpad_phi$0=$lpad_loopexit101$0;label=8;break;
 case 7: 
 var $lpad_nonloopexit102$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_nonloopexit102$1 = tempRet0;
 var $lpad_phi$1=$lpad_nonloopexit102$1;var $lpad_phi$0=$lpad_nonloopexit102$0;label=8;break;
 case 8: 
 var $lpad_phi$0;
 var $lpad_phi$1;
 var $tobool_i_i_i135=($__stat_hold_sroa_0_1|0)==0;
 if($tobool_i_i_i135){var $57$1=$lpad_phi$1;var $57$0=$lpad_phi$0;label=104;break;}else{label=9;break;}
 case 9: 
 _free($__stat_hold_sroa_0_1);
 var $57$1=$lpad_phi$1;var $57$0=$lpad_phi$0;label=104;break;
 case 10: 
 var $__stat_hold_sroa_0_1;
 var $__status_0;
 var $cmp6111=($__kb|0)==($__ke|0);
 if($cmp6111){var $__n_might_match_0_lcssa=$sub_ptr_div_i_i;var $__n_does_match_0_lcssa=0;label=11;break;}else{var $__n_might_match_0112=$sub_ptr_div_i_i;var $__n_does_match_0113=0;var $__st_0114=$__status_0;var $__ky_0115=$__kb;label=12;break;}
 case 11: 
 var $__n_does_match_0_lcssa;
 var $__n_might_match_0_lcssa;
 var $__sbuf__i_i_i=(($__b)|0);
 var $__sbuf__i11_i_i=(($__e)|0);
 var $1=$__ct;
 var $__indx_0=0;var $__n_does_match_2=$__n_does_match_0_lcssa;var $__n_might_match_2=$__n_might_match_0_lcssa;label=19;break;
 case 12: 
 var $__ky_0115;
 var $__st_0114;
 var $__n_does_match_0113;
 var $__n_might_match_0112;
 var $__size__i_i_i=$__ky_0115;
 var $2=HEAP8[($__size__i_i_i)];
 var $conv_i_i_i=($2&255);
 var $and_i_i_i=$conv_i_i_i&1;
 var $tobool_i_i_i162=($and_i_i_i|0)==0;
 if($tobool_i_i_i162){label=14;break;}else{label=13;break;}
 case 13: 
 var $__size__i23_i_i=(($__ky_0115+4)|0);
 var $3=HEAP32[(($__size__i23_i_i)>>2)];
 var $cond_i_i=$3;label=15;break;
 case 14: 
 var $shr_i_i_i67=$conv_i_i_i>>>1;
 var $cond_i_i=$shr_i_i_i67;label=15;break;
 case 15: 
 var $cond_i_i;
 var $cmp_i=($cond_i_i|0)==0;
 if($cmp_i){label=17;break;}else{label=16;break;}
 case 16: 
 HEAP8[($__st_0114)]=1;
 var $__n_does_match_1=$__n_does_match_0113;var $__n_might_match_1=$__n_might_match_0112;label=18;break;
 case 17: 
 HEAP8[($__st_0114)]=2;
 var $dec=((($__n_might_match_0112)-(1))|0);
 var $inc=((($__n_does_match_0113)+(1))|0);
 var $__n_does_match_1=$inc;var $__n_might_match_1=$dec;label=18;break;
 case 18: 
 var $__n_might_match_1;
 var $__n_does_match_1;
 var $incdec_ptr=(($__ky_0115+12)|0);
 var $incdec_ptr10=(($__st_0114+1)|0);
 var $cmp6=($incdec_ptr|0)==($__ke|0);
 if($cmp6){var $__n_might_match_0_lcssa=$__n_might_match_1;var $__n_does_match_0_lcssa=$__n_does_match_1;label=11;break;}else{var $__n_might_match_0112=$__n_might_match_1;var $__n_does_match_0113=$__n_does_match_1;var $__st_0114=$incdec_ptr10;var $__ky_0115=$incdec_ptr;label=12;break;}
 case 19: 
 var $__n_might_match_2;
 var $__n_does_match_2;
 var $__indx_0;
 var $4=HEAP32[(($__sbuf__i_i_i)>>2)];
 var $tobool_i_i_i168=($4|0)==0;
 if($tobool_i_i_i168){var $9=0;label=25;break;}else{label=20;break;}
 case 20: 
 var $__ninp__i_i_i_i=(($4+12)|0);
 var $5=HEAP32[(($__ninp__i_i_i_i)>>2)];
 var $__einp__i_i_i_i=(($4+16)|0);
 var $6=HEAP32[(($__einp__i_i_i_i)>>2)];
 var $cmp_i_i_i_i=($5|0)==($6|0);
 if($cmp_i_i_i_i){label=21;break;}else{var $9=$4;label=25;break;}
 case 21: 
 var $7=$4;
 var $vtable_i_i_i_i=HEAP32[(($7)>>2)];
 var $vfn_i_i_i_i=(($vtable_i_i_i_i+36)|0);
 var $8=HEAP32[(($vfn_i_i_i_i)>>2)];
 var $call_i_i_i_i171=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$8]($4) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=22;break; } else { label=6;break; }
 case 22: 
 var $cmp_i7_i_i_i=($call_i_i_i_i171|0)==-1;
 if($cmp_i7_i_i_i){label=24;break;}else{label=23;break;}
 case 23: 
 var $_pre=HEAP32[(($__sbuf__i_i_i)>>2)];
 var $9=$_pre;label=25;break;
 case 24: 
 HEAP32[(($__sbuf__i_i_i)>>2)]=0;
 var $9=0;label=25;break;
 case 25: 
 var $9;
 var $cmp_i_i_i=($9|0)==0;
 var $10=HEAP32[(($__sbuf__i11_i_i)>>2)];
 var $tobool_i12_i_i=($10|0)==0;
 if($tobool_i12_i_i){var $17=$9;var $16=0;label=31;break;}else{label=26;break;}
 case 26: 
 var $__ninp__i_i15_i_i=(($10+12)|0);
 var $11=HEAP32[(($__ninp__i_i15_i_i)>>2)];
 var $__einp__i_i16_i_i=(($10+16)|0);
 var $12=HEAP32[(($__einp__i_i16_i_i)>>2)];
 var $cmp_i_i17_i_i=($11|0)==($12|0);
 if($cmp_i_i17_i_i){label=27;break;}else{var $15=$10;label=30;break;}
 case 27: 
 var $13=$10;
 var $vtable_i_i19_i_i=HEAP32[(($13)>>2)];
 var $vfn_i_i20_i_i=(($vtable_i_i19_i_i+36)|0);
 var $14=HEAP32[(($vfn_i_i20_i_i)>>2)];
 var $call_i_i21_i_i172=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$14]($10) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=28;break; } else { label=6;break; }
 case 28: 
 var $cmp_i7_i26_i_i=($call_i_i21_i_i172|0)==-1;
 if($cmp_i7_i26_i_i){label=29;break;}else{var $15=$10;label=30;break;}
 case 29: 
 HEAP32[(($__sbuf__i11_i_i)>>2)]=0;
 var $15=0;label=30;break;
 case 30: 
 var $15;
 var $_pr=HEAP32[(($__sbuf__i_i_i)>>2)];
 var $17=$_pr;var $16=$15;label=31;break;
 case 31: 
 var $16;
 var $17;
 var $cmp_i31_i_i=($16|0)==0;
 var $lnot_i=$cmp_i_i_i^$cmp_i31_i_i;
 var $cmp14=($__n_might_match_2|0)!=0;
 var $cmp14_=$lnot_i&$cmp14;
 if($cmp14_){label=32;break;}else{label=81;break;}
 case 32: 
 var $__ninp__i_i=(($17+12)|0);
 var $18=HEAP32[(($__ninp__i_i)>>2)];
 var $__einp__i_i=(($17+16)|0);
 var $19=HEAP32[(($__einp__i_i)>>2)];
 var $cmp_i_i177=($18|0)==($19|0);
 if($cmp_i_i177){label=33;break;}else{label=35;break;}
 case 33: 
 var $20=$17;
 var $vtable_i_i=HEAP32[(($20)>>2)];
 var $vfn_i_i=(($vtable_i_i+36)|0);
 var $21=HEAP32[(($vfn_i_i)>>2)];
 var $call_i_i179=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$21]($17) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=34;break; } else { label=6;break; }
 case 34: 
 var $extract_t=(($call_i_i179)&255);
 var $retval_i_i_0_off0=$extract_t;label=36;break;
 case 35: 
 var $22=HEAP8[($18)];
 var $retval_i_i_0_off0=$22;label=36;break;
 case 36: 
 var $retval_i_i_0_off0;
 if($__case_sensitive){var $__c_0=$retval_i_i_0_off0;label=38;break;}else{label=37;break;}
 case 37: 
 var $vtable_i=HEAP32[(($1)>>2)];
 var $vfn_i=(($vtable_i+12)|0);
 var $23=HEAP32[(($vfn_i)>>2)];
 var $call_i182=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$23]($__ct,$retval_i_i_0_off0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $__c_0=$call_i182;label=38;break; } else { label=6;break; }
 case 38: 
 var $__c_0;
 if($cmp6111){var $__n_does_match_7=$__n_does_match_2;var $__n_might_match_3_lcssa122=$__n_might_match_2;label=80;break;}else{label=39;break;}
 case 39: 
 var $add=((($__indx_0)+(1))|0);
 if($__case_sensitive){var $__n_might_match_386_us=$__n_might_match_2;var $__n_does_match_387_us=$__n_does_match_2;var $__st_188_us=$__status_0;var $__consume_0_off090_us=0;var $__ky22_091_us=$__kb;label=40;break;}else{var $__n_might_match_386=$__n_might_match_2;var $__n_does_match_387=$__n_does_match_2;var $__st_188=$__status_0;var $__consume_0_off090=0;var $__ky22_091=$__kb;label=53;break;}
 case 40: 
 var $__ky22_091_us;
 var $__consume_0_off090_us;
 var $__st_188_us;
 var $__n_does_match_387_us;
 var $__n_might_match_386_us;
 var $24=HEAP8[($__st_188_us)];
 var $cmp26_us=(($24<<24)>>24)==1;
 if($cmp26_us){label=41;break;}else{var $__consume_1_off0_us=$__consume_0_off090_us;var $__n_does_match_4_us=$__n_does_match_387_us;var $__n_might_match_4_us=$__n_might_match_386_us;label=51;break;}
 case 41: 
 var $__size__i_i_i_i_us=$__ky22_091_us;
 var $25=HEAP8[($__size__i_i_i_i_us)];
 var $and_i_i_i_i_us=$25&1;
 var $tobool_i_i_i_i_us=(($and_i_i_i_i_us<<24)>>24)==0;
 if($tobool_i_i_i_i_us){label=43;break;}else{label=42;break;}
 case 42: 
 var $__data__i21_i_i_i_us=(($__ky22_091_us+8)|0);
 var $26=HEAP32[(($__data__i21_i_i_i_us)>>2)];
 var $cond_i_i_i_us=$26;label=44;break;
 case 43: 
 var $__s_i_i_i_i_us=$__ky22_091_us;
 var $arrayidx_i_i_i_i_us=(($__s_i_i_i_i_us+1)|0);
 var $cond_i_i_i_us=$arrayidx_i_i_i_i_us;label=44;break;
 case 44: 
 var $cond_i_i_i_us;
 var $add_ptr_i_us=(($cond_i_i_i_us+$__indx_0)|0);
 var $27=HEAP8[($add_ptr_i_us)];
 var $cmp37_us=(($__c_0<<24)>>24)==(($27<<24)>>24);
 if($cmp37_us){label=46;break;}else{label=45;break;}
 case 45: 
 HEAP8[($__st_188_us)]=0;
 var $dec46_us=((($__n_might_match_386_us)-(1))|0);
 var $__consume_1_off0_us=$__consume_0_off090_us;var $__n_does_match_4_us=$__n_does_match_387_us;var $__n_might_match_4_us=$dec46_us;label=51;break;
 case 46: 
 var $28=HEAP8[($__size__i_i_i_i_us)];
 var $conv_i_i210_us=($28&255);
 var $and_i_i_us=$conv_i_i210_us&1;
 var $tobool_i_i_us=($and_i_i_us|0)==0;
 if($tobool_i_i_us){label=48;break;}else{label=47;break;}
 case 47: 
 var $__size__i23_i_us=(($__ky22_091_us+4)|0);
 var $29=HEAP32[(($__size__i23_i_us)>>2)];
 var $cond_i_us=$29;label=49;break;
 case 48: 
 var $shr_i_i66_us=$conv_i_i210_us>>>1;
 var $cond_i_us=$shr_i_i66_us;label=49;break;
 case 49: 
 var $cond_i_us;
 var $cmp40_us=($cond_i_us|0)==($add|0);
 if($cmp40_us){label=50;break;}else{var $__consume_1_off0_us=1;var $__n_does_match_4_us=$__n_does_match_387_us;var $__n_might_match_4_us=$__n_might_match_386_us;label=51;break;}
 case 50: 
 HEAP8[($__st_188_us)]=2;
 var $dec42_us=((($__n_might_match_386_us)-(1))|0);
 var $inc43_us=((($__n_does_match_387_us)+(1))|0);
 var $__consume_1_off0_us=1;var $__n_does_match_4_us=$inc43_us;var $__n_might_match_4_us=$dec42_us;label=51;break;
 case 51: 
 var $__n_might_match_4_us;
 var $__n_does_match_4_us;
 var $__consume_1_off0_us;
 var $incdec_ptr50_us=(($__ky22_091_us+12)|0);
 var $cmp24_us=($incdec_ptr50_us|0)==($__ke|0);
 if($cmp24_us){var $__n_might_match_3_lcssa=$__n_might_match_4_us;var $__n_does_match_3_lcssa=$__n_does_match_4_us;var $__consume_0_off0_lcssa=$__consume_1_off0_us;label=67;break;}else{label=52;break;}
 case 52: 
 var $incdec_ptr51_us=(($__st_188_us+1)|0);
 var $__n_might_match_386_us=$__n_might_match_4_us;var $__n_does_match_387_us=$__n_does_match_4_us;var $__st_188_us=$incdec_ptr51_us;var $__consume_0_off090_us=$__consume_1_off0_us;var $__ky22_091_us=$incdec_ptr50_us;label=40;break;
 case 53: 
 var $__ky22_091;
 var $__consume_0_off090;
 var $__st_188;
 var $__n_does_match_387;
 var $__n_might_match_386;
 var $30=HEAP8[($__st_188)];
 var $cmp26=(($30<<24)>>24)==1;
 if($cmp26){label=54;break;}else{var $__consume_1_off0=$__consume_0_off090;var $__n_does_match_4=$__n_does_match_387;var $__n_might_match_4=$__n_might_match_386;label=65;break;}
 case 54: 
 var $__size__i_i_i_i=$__ky22_091;
 var $31=HEAP8[($__size__i_i_i_i)];
 var $and_i_i_i_i=$31&1;
 var $tobool_i_i_i_i=(($and_i_i_i_i<<24)>>24)==0;
 if($tobool_i_i_i_i){label=56;break;}else{label=55;break;}
 case 55: 
 var $__data__i21_i_i_i=(($__ky22_091+8)|0);
 var $32=HEAP32[(($__data__i21_i_i_i)>>2)];
 var $cond_i_i_i=$32;label=57;break;
 case 56: 
 var $__s_i_i_i_i=$__ky22_091;
 var $arrayidx_i_i_i_i=(($__s_i_i_i_i+1)|0);
 var $cond_i_i_i=$arrayidx_i_i_i_i;label=57;break;
 case 57: 
 var $cond_i_i_i;
 var $add_ptr_i=(($cond_i_i_i+$__indx_0)|0);
 var $33=HEAP8[($add_ptr_i)];
 var $vtable_i198=HEAP32[(($1)>>2)];
 var $vfn_i199=(($vtable_i198+12)|0);
 var $34=HEAP32[(($vfn_i199)>>2)];
 var $call_i200=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$34]($__ct,$33) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=58;break; } else { label=5;break; }
 case 58: 
 var $cmp37=(($__c_0<<24)>>24)==(($call_i200<<24)>>24);
 if($cmp37){label=59;break;}else{label=64;break;}
 case 59: 
 var $35=HEAP8[($__size__i_i_i_i)];
 var $conv_i_i210=($35&255);
 var $and_i_i=$conv_i_i210&1;
 var $tobool_i_i=($and_i_i|0)==0;
 if($tobool_i_i){label=61;break;}else{label=60;break;}
 case 60: 
 var $__size__i23_i=(($__ky22_091+4)|0);
 var $36=HEAP32[(($__size__i23_i)>>2)];
 var $cond_i=$36;label=62;break;
 case 61: 
 var $shr_i_i66=$conv_i_i210>>>1;
 var $cond_i=$shr_i_i66;label=62;break;
 case 62: 
 var $cond_i;
 var $cmp40=($cond_i|0)==($add|0);
 if($cmp40){label=63;break;}else{var $__consume_1_off0=1;var $__n_does_match_4=$__n_does_match_387;var $__n_might_match_4=$__n_might_match_386;label=65;break;}
 case 63: 
 HEAP8[($__st_188)]=2;
 var $dec42=((($__n_might_match_386)-(1))|0);
 var $inc43=((($__n_does_match_387)+(1))|0);
 var $__consume_1_off0=1;var $__n_does_match_4=$inc43;var $__n_might_match_4=$dec42;label=65;break;
 case 64: 
 HEAP8[($__st_188)]=0;
 var $dec46=((($__n_might_match_386)-(1))|0);
 var $__consume_1_off0=$__consume_0_off090;var $__n_does_match_4=$__n_does_match_387;var $__n_might_match_4=$dec46;label=65;break;
 case 65: 
 var $__n_might_match_4;
 var $__n_does_match_4;
 var $__consume_1_off0;
 var $incdec_ptr50=(($__ky22_091+12)|0);
 var $cmp24=($incdec_ptr50|0)==($__ke|0);
 if($cmp24){var $__n_might_match_3_lcssa=$__n_might_match_4;var $__n_does_match_3_lcssa=$__n_does_match_4;var $__consume_0_off0_lcssa=$__consume_1_off0;label=67;break;}else{label=66;break;}
 case 66: 
 var $incdec_ptr51=(($__st_188+1)|0);
 var $__n_might_match_386=$__n_might_match_4;var $__n_does_match_387=$__n_does_match_4;var $__st_188=$incdec_ptr51;var $__consume_0_off090=$__consume_1_off0;var $__ky22_091=$incdec_ptr50;label=53;break;
 case 67: 
 var $__consume_0_off0_lcssa;
 var $__n_does_match_3_lcssa;
 var $__n_might_match_3_lcssa;
 if($__consume_0_off0_lcssa){label=68;break;}else{var $__n_does_match_7=$__n_does_match_3_lcssa;var $__n_might_match_3_lcssa122=$__n_might_match_3_lcssa;label=80;break;}
 case 68: 
 var $37=HEAP32[(($__sbuf__i_i_i)>>2)];
 var $__ninp__i_i219=(($37+12)|0);
 var $38=HEAP32[(($__ninp__i_i219)>>2)];
 var $__einp__i_i220=(($37+16)|0);
 var $39=HEAP32[(($__einp__i_i220)>>2)];
 var $cmp_i_i221=($38|0)==($39|0);
 if($cmp_i_i221){label=69;break;}else{label=70;break;}
 case 69: 
 var $40=$37;
 var $vtable_i_i222=HEAP32[(($40)>>2)];
 var $vfn_i_i223=(($vtable_i_i222+40)|0);
 var $41=HEAP32[(($vfn_i_i223)>>2)];
 var $call_i_i229=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$41]($37) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=71;break; } else { label=6;break; }
 case 70: 
 var $incdec_ptr_i_i=(($38+1)|0);
 HEAP32[(($__ninp__i_i219)>>2)]=$incdec_ptr_i_i;
 label=71;break;
 case 71: 
 var $add57=((($__n_does_match_3_lcssa)+($__n_might_match_3_lcssa))|0);
 var $cmp58_not=($add57>>>0)<2;
 var $brmerge=$cmp58_not|$cmp6111;
 if($brmerge){var $__n_does_match_7=$__n_does_match_3_lcssa;var $__n_might_match_3_lcssa122=$__n_might_match_3_lcssa;label=80;break;}else{label=72;break;}
 case 72: 
 var $add67=((($__indx_0)+(1))|0);
 var $__n_does_match_597=$__n_does_match_3_lcssa;var $__st_298=$__status_0;var $__ky60_099=$__kb;label=73;break;
 case 73: 
 var $__ky60_099;
 var $__st_298;
 var $__n_does_match_597;
 var $42=HEAP8[($__st_298)];
 var $cmp65=(($42<<24)>>24)==2;
 if($cmp65){label=74;break;}else{var $__n_does_match_6=$__n_does_match_597;label=79;break;}
 case 74: 
 var $__size__i_i247=$__ky60_099;
 var $43=HEAP8[($__size__i_i247)];
 var $conv_i_i248=($43&255);
 var $and_i_i249=$conv_i_i248&1;
 var $tobool_i_i250=($and_i_i249|0)==0;
 if($tobool_i_i250){label=76;break;}else{label=75;break;}
 case 75: 
 var $__size__i23_i257=(($__ky60_099+4)|0);
 var $44=HEAP32[(($__size__i23_i257)>>2)];
 var $cond_i269=$44;label=77;break;
 case 76: 
 var $shr_i_i26765=$conv_i_i248>>>1;
 var $cond_i269=$shr_i_i26765;label=77;break;
 case 77: 
 var $cond_i269;
 var $cmp68=($cond_i269|0)==($add67|0);
 if($cmp68){var $__n_does_match_6=$__n_does_match_597;label=79;break;}else{label=78;break;}
 case 78: 
 HEAP8[($__st_298)]=0;
 var $dec70=((($__n_does_match_597)-(1))|0);
 var $__n_does_match_6=$dec70;label=79;break;
 case 79: 
 var $__n_does_match_6;
 var $incdec_ptr73=(($__ky60_099+12)|0);
 var $incdec_ptr74=(($__st_298+1)|0);
 var $cmp62=($incdec_ptr73|0)==($__ke|0);
 if($cmp62){var $__n_does_match_7=$__n_does_match_6;var $__n_might_match_3_lcssa122=$__n_might_match_3_lcssa;label=80;break;}else{var $__n_does_match_597=$__n_does_match_6;var $__st_298=$incdec_ptr74;var $__ky60_099=$incdec_ptr73;label=73;break;}
 case 80: 
 var $__n_might_match_3_lcssa122;
 var $__n_does_match_7;
 var $inc79=((($__indx_0)+(1))|0);
 var $__indx_0=$inc79;var $__n_does_match_2=$__n_does_match_7;var $__n_might_match_2=$__n_might_match_3_lcssa122;label=19;break;
 case 81: 
 var $tobool_i_i_i290=($17|0)==0;
 if($tobool_i_i_i290){var $49=0;label=87;break;}else{label=82;break;}
 case 82: 
 var $__ninp__i_i_i_i293=(($17+12)|0);
 var $45=HEAP32[(($__ninp__i_i_i_i293)>>2)];
 var $__einp__i_i_i_i294=(($17+16)|0);
 var $46=HEAP32[(($__einp__i_i_i_i294)>>2)];
 var $cmp_i_i_i_i295=($45|0)==($46|0);
 if($cmp_i_i_i_i295){label=83;break;}else{var $49=$17;label=87;break;}
 case 83: 
 var $47=$17;
 var $vtable_i_i_i_i297=HEAP32[(($47)>>2)];
 var $vfn_i_i_i_i298=(($vtable_i_i_i_i297+36)|0);
 var $48=HEAP32[(($vfn_i_i_i_i298)>>2)];
 var $call_i_i_i_i335=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$48]($17) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=84;break; } else { label=7;break; }
 case 84: 
 var $cmp_i7_i_i_i303=($call_i_i_i_i335|0)==-1;
 if($cmp_i7_i_i_i303){label=86;break;}else{label=85;break;}
 case 85: 
 var $_pre121=HEAP32[(($__sbuf__i_i_i)>>2)];
 var $49=$_pre121;label=87;break;
 case 86: 
 HEAP32[(($__sbuf__i_i_i)>>2)]=0;
 var $49=0;label=87;break;
 case 87: 
 var $49;
 var $cmp_i_i_i308=($49|0)==0;
 if($cmp_i31_i_i){label=93;break;}else{label=88;break;}
 case 88: 
 var $__ninp__i_i15_i_i316=(($16+12)|0);
 var $50=HEAP32[(($__ninp__i_i15_i_i316)>>2)];
 var $__einp__i_i16_i_i317=(($16+16)|0);
 var $51=HEAP32[(($__einp__i_i16_i_i317)>>2)];
 var $cmp_i_i17_i_i318=($50|0)==($51|0);
 if($cmp_i_i17_i_i318){label=90;break;}else{label=89;break;}
 case 89: 
 if($cmp_i_i_i308){label=96;break;}else{label=95;break;}
 case 90: 
 var $52=$16;
 var $vtable_i_i19_i_i320=HEAP32[(($52)>>2)];
 var $vfn_i_i20_i_i321=(($vtable_i_i19_i_i320+36)|0);
 var $53=HEAP32[(($vfn_i_i20_i_i321)>>2)];
 var $call_i_i21_i_i337=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$53]($16) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=91;break; } else { label=7;break; }
 case 91: 
 var $cmp_i7_i26_i_i326=($call_i_i21_i_i337|0)==-1;
 if($cmp_i7_i26_i_i326){label=92;break;}else{label=94;break;}
 case 92: 
 HEAP32[(($__sbuf__i11_i_i)>>2)]=0;
 label=93;break;
 case 93: 
 if($cmp_i_i_i308){label=95;break;}else{label=96;break;}
 case 94: 
 var $cmp_i31_i_i331=($16|0)==0;
 var $cmp_i_i333tmp=$cmp_i_i_i308^$cmp_i31_i_i331;
 if($cmp_i_i333tmp){label=96;break;}else{label=95;break;}
 case 95: 
 var $54=HEAP32[(($__err)>>2)];
 var $or=$54|2;
 HEAP32[(($__err)>>2)]=$or;
 label=96;break;
 case 96: 
 if($cmp6111){label=100;break;}else{var $__kb_addr_077=$__kb;var $__st_378=$__status_0;label=97;break;}
 case 97: 
 var $__st_378;
 var $__kb_addr_077;
 var $55=HEAP8[($__st_378)];
 var $cmp89=(($55<<24)>>24)==2;
 if($cmp89){var $__kb_addr_075=$__kb_addr_077;label=101;break;}else{label=98;break;}
 case 98: 
 var $incdec_ptr93=(($__kb_addr_077+12)|0);
 var $cmp86=($incdec_ptr93|0)==($__ke|0);
 if($cmp86){label=100;break;}else{label=99;break;}
 case 99: 
 var $incdec_ptr94=(($__st_378+1)|0);
 var $__kb_addr_077=$incdec_ptr93;var $__st_378=$incdec_ptr94;label=97;break;
 case 100: 
 var $56=HEAP32[(($__err)>>2)];
 var $or98=$56|4;
 HEAP32[(($__err)>>2)]=$or98;
 var $__kb_addr_075=$__ke;label=101;break;
 case 101: 
 var $__kb_addr_075;
 var $tobool_i_i_i=($__stat_hold_sroa_0_1|0)==0;
 if($tobool_i_i_i){label=103;break;}else{label=102;break;}
 case 102: 
 _free($__stat_hold_sroa_0_1);
 label=103;break;
 case 103: 
 STACKTOP=sp;return $__kb_addr_075;
 case 104: 
 var $57$0;
 var $57$1;
 ___resumeException($57$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl($agg_result,$this,$__b,$__e,$__iob,$__err,$__v){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 var $agg_tmp=sp;
 var $agg_tmp2=(sp)+(8);
 var $0=(($__b)|0);
 var $1=HEAP32[(($0)>>2)];
 var $2=(($agg_tmp)|0);
 HEAP32[(($2)>>2)]=$1;
 var $3=(($__e)|0);
 var $4=HEAP32[(($3)>>2)];
 var $5=(($agg_tmp2)|0);
 HEAP32[(($5)>>2)]=$4;
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($agg_result,0,$agg_tmp,$agg_tmp2,$__iob,$__err,$__v);
 STACKTOP=sp;return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($agg_result,$this,$__b,$__e,$__iob,$__err,$__v){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+72)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__atoms=sp;
 var $__thousands_sep=(sp)+(32);
 var $__grouping=(sp)+(40);
 var $__buf=(sp)+(56);
 var $__size__i_i=$__buf;
 var $__a_end=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__g=STACKTOP;STACKTOP = (STACKTOP + 160)|0;(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__g_end=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__dc=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__fmtflags__i_i=(($__iob+4)|0);
 var $0=HEAP32[(($__fmtflags__i_i)>>2)];
 var $and_i=$0&74;
 if(($and_i|0)==8){ label=2;break;}else if(($and_i|0)==0){ label=3;break;}else if(($and_i|0)==64){ var $retval_0_i=8;label=5;break;}else{label=4;break;}
 case 2: 
 var $retval_0_i=16;label=5;break;
 case 3: 
 var $retval_0_i=0;label=5;break;
 case 4: 
 var $retval_0_i=10;label=5;break;
 case 5: 
 var $retval_0_i;
 var $arraydecay=(($__atoms)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$arraydecay,$__thousands_sep);
 HEAP32[(($__size__i_i)>>2)]=0; HEAP32[((($__size__i_i)+(4))>>2)]=0; HEAP32[((($__size__i_i)+(8))>>2)]=0;
 var $__s_i_i=$__buf;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,10,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=6;break; } else { label=35;break; }
 case 6: 
 var $1=HEAP8[($__size__i_i)];
 var $and_i_i_i=$1&1;
 var $tobool_i_i_i77=(($and_i_i_i<<24)>>24)==0;
 if($tobool_i_i_i77){label=8;break;}else{label=7;break;}
 case 7: 
 var $__data__i21_i_i=(($__buf+8)|0);
 var $2=HEAP32[(($__data__i21_i_i)>>2)];
 var $arrayidx_i_i_i375_pre=(($__s_i_i+1)|0);
 var $cond_i_i=$2;var $arrayidx_i_i_i375_pre_phi=$arrayidx_i_i_i375_pre;var $__data__i21_i_i366_pre_phi=$__data__i21_i_i;label=9;break;
 case 8: 
 var $arrayidx_i_i_i78=(($__s_i_i+1)|0);
 var $__data__i21_i_i366_pre=(($__buf+8)|0);
 var $cond_i_i=$arrayidx_i_i_i78;var $arrayidx_i_i_i375_pre_phi=$arrayidx_i_i_i78;var $__data__i21_i_i366_pre_phi=$__data__i21_i_i366_pre;label=9;break;
 case 9: 
 var $__data__i21_i_i366_pre_phi;
 var $arrayidx_i_i_i375_pre_phi;
 var $cond_i_i;
 HEAP32[(($__a_end)>>2)]=$cond_i_i;
 var $arraydecay5=(($__g)|0);
 HEAP32[(($__g_end)>>2)]=$arraydecay5;
 HEAP32[(($__dc)>>2)]=0;
 var $__sbuf__i_i_i97=(($__b)|0);
 var $__sbuf__i11_i_i119=(($__e)|0);
 var $__cap__i_i323=(($__buf)|0);
 var $__size__i23_i233=(($__buf+4)|0);
 var $3=HEAP8[($__thousands_sep)];
 var $_pre=HEAP32[(($__sbuf__i_i_i97)>>2)];
 var $__a_0=$cond_i_i;var $4=$_pre;label=10;break;
 case 10: 
 var $4;
 var $__a_0;
 var $tobool_i_i_i98=($4|0)==0;
 if($tobool_i_i_i98){var $9=0;label=15;break;}else{label=11;break;}
 case 11: 
 var $__ninp__i_i_i_i101=(($4+12)|0);
 var $5=HEAP32[(($__ninp__i_i_i_i101)>>2)];
 var $__einp__i_i_i_i102=(($4+16)|0);
 var $6=HEAP32[(($__einp__i_i_i_i102)>>2)];
 var $cmp_i_i_i_i103=($5|0)==($6|0);
 if($cmp_i_i_i_i103){label=12;break;}else{var $9=$4;label=15;break;}
 case 12: 
 var $7=$4;
 var $vtable_i_i_i_i105=HEAP32[(($7)>>2)];
 var $vfn_i_i_i_i106=(($vtable_i_i_i_i105+36)|0);
 var $8=HEAP32[(($vfn_i_i_i_i106)>>2)];
 var $call_i_i_i_i143=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$8]($4) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=13;break; } else { label=34;break; }
 case 13: 
 var $cmp_i7_i_i_i111=($call_i_i_i_i143|0)==-1;
 if($cmp_i7_i_i_i111){label=14;break;}else{var $9=$4;label=15;break;}
 case 14: 
 HEAP32[(($__sbuf__i_i_i97)>>2)]=0;
 var $9=0;label=15;break;
 case 15: 
 var $9;
 var $cmp_i_i_i116=($9|0)==0;
 var $10=HEAP32[(($__sbuf__i11_i_i119)>>2)];
 var $tobool_i12_i_i120=($10|0)==0;
 if($tobool_i12_i_i120){label=21;break;}else{label=16;break;}
 case 16: 
 var $__ninp__i_i15_i_i124=(($10+12)|0);
 var $11=HEAP32[(($__ninp__i_i15_i_i124)>>2)];
 var $__einp__i_i16_i_i125=(($10+16)|0);
 var $12=HEAP32[(($__einp__i_i16_i_i125)>>2)];
 var $cmp_i_i17_i_i126=($11|0)==($12|0);
 if($cmp_i_i17_i_i126){label=18;break;}else{label=17;break;}
 case 17: 
 if($cmp_i_i_i116){var $15=$10;var $cmp_i31_i_i13927=0;label=23;break;}else{var $__a_2=$__a_0;var $33=$10;var $cmp_i31_i_i13926=0;label=45;break;}
 case 18: 
 var $13=$10;
 var $vtable_i_i19_i_i128=HEAP32[(($13)>>2)];
 var $vfn_i_i20_i_i129=(($vtable_i_i19_i_i128+36)|0);
 var $14=HEAP32[(($vfn_i_i20_i_i129)>>2)];
 var $call_i_i21_i_i145=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$14]($10) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=19;break; } else { label=34;break; }
 case 19: 
 var $cmp_i7_i26_i_i134=($call_i_i21_i_i145|0)==-1;
 if($cmp_i7_i26_i_i134){label=20;break;}else{label=22;break;}
 case 20: 
 HEAP32[(($__sbuf__i11_i_i119)>>2)]=0;
 label=21;break;
 case 21: 
 if($cmp_i_i_i116){var $__a_2=$__a_0;var $33=0;var $cmp_i31_i_i13926=1;label=45;break;}else{var $15=0;var $cmp_i31_i_i13927=1;label=23;break;}
 case 22: 
 var $cmp_i31_i_i139=($10|0)==0;
 var $lnot_i=$cmp_i_i_i116^$cmp_i31_i_i139;
 if($lnot_i){var $15=$10;var $cmp_i31_i_i13927=$cmp_i31_i_i139;label=23;break;}else{var $__a_2=$__a_0;var $33=$10;var $cmp_i31_i_i13926=$cmp_i31_i_i139;label=45;break;}
 case 23: 
 var $cmp_i31_i_i13927;
 var $15;
 var $16=HEAP32[(($__a_end)>>2)];
 var $sub_ptr_lhs_cast=$16;
 var $sub_ptr_rhs_cast=$__a_0;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $17=HEAP8[($__size__i_i)];
 var $conv_i_i158=($17&255);
 var $and_i_i159=$conv_i_i158&1;
 var $tobool_i_i160=($and_i_i159|0)==0;
 var $18=HEAP32[(($__size__i23_i233)>>2)];
 var $shr_i_i12=$conv_i_i158>>>1;
 var $cond_i164=($tobool_i_i160?$shr_i_i12:$18);
 var $cmp=($sub_ptr_sub|0)==($cond_i164|0);
 if($cmp){label=24;break;}else{var $__a_1=$__a_0;label=37;break;}
 case 24: 
 if($tobool_i_i160){label=26;break;}else{label=25;break;}
 case 25: 
 var $19=HEAP32[(($__size__i23_i233)>>2)];
 var $cond_i245=$19;var $cond_i20430=$19;label=27;break;
 case 26: 
 var $shr_i_i20214=$conv_i_i158>>>1;
 var $shr_i_i24315=$conv_i_i158>>>1;
 var $cond_i245=$shr_i_i24315;var $cond_i20430=$shr_i_i20214;label=27;break;
 case 27: 
 var $cond_i20430;
 var $cond_i245;
 var $mul=$cond_i245<<1;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$mul,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=28;break; } else { label=34;break; }
 case 28: 
 var $20=HEAP8[($__size__i_i)];
 var $and_i_i315=$20&1;
 var $tobool_i_i316=(($and_i_i315<<24)>>24)==0;
 if($tobool_i_i316){var $cond_i327=10;label=30;break;}else{label=29;break;}
 case 29: 
 var $21=HEAP32[(($__cap__i_i323)>>2)];
 var $and_i11_i324=$21&-2;
 var $phitmp16=((($and_i11_i324)-(1))|0);
 var $cond_i327=$phitmp16;label=30;break;
 case 30: 
 var $cond_i327;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$cond_i327,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=31;break; } else { label=34;break; }
 case 31: 
 var $22=HEAP8[($__size__i_i)];
 var $and_i_i_i358=$22&1;
 var $tobool_i_i_i359=(($and_i_i_i358<<24)>>24)==0;
 if($tobool_i_i_i359){var $cond_i_i377=$arrayidx_i_i_i375_pre_phi;label=33;break;}else{label=32;break;}
 case 32: 
 var $23=HEAP32[(($__data__i21_i_i366_pre_phi)>>2)];
 var $cond_i_i377=$23;label=33;break;
 case 33: 
 var $cond_i_i377;
 var $add_ptr=(($cond_i_i377+$cond_i20430)|0);
 HEAP32[(($__a_end)>>2)]=$add_ptr;
 var $__a_1=$cond_i_i377;label=37;break;
 case 34: 
 var $lpad_loopexit21$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_loopexit21$1 = tempRet0;
 var $lpad_phi$1=$lpad_loopexit21$1;var $lpad_phi$0=$lpad_loopexit21$0;label=36;break;
 case 35: 
 var $lpad_nonloopexit22$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_nonloopexit22$1 = tempRet0;
 var $lpad_phi$1=$lpad_nonloopexit22$1;var $lpad_phi$0=$lpad_nonloopexit22$0;label=36;break;
 case 36: 
 var $lpad_phi$0;
 var $lpad_phi$1;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 ___resumeException($lpad_phi$0)
 case 37: 
 var $__a_1;
 var $__ninp__i_i387=(($9+12)|0);
 var $24=HEAP32[(($__ninp__i_i387)>>2)];
 var $__einp__i_i388=(($9+16)|0);
 var $25=HEAP32[(($__einp__i_i388)>>2)];
 var $cmp_i_i389=($24|0)==($25|0);
 if($cmp_i_i389){label=38;break;}else{label=40;break;}
 case 38: 
 var $26=$9;
 var $vtable_i_i390=HEAP32[(($26)>>2)];
 var $vfn_i_i391=(($vtable_i_i390+36)|0);
 var $27=HEAP32[(($vfn_i_i391)>>2)];
 var $call_i_i397=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$27]($9) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=39;break; } else { label=34;break; }
 case 39: 
 var $extract_t=(($call_i_i397)&255);
 var $retval_i_i381_0_off0=$extract_t;label=41;break;
 case 40: 
 var $28=HEAP8[($24)];
 var $retval_i_i381_0_off0=$28;label=41;break;
 case 41: 
 var $retval_i_i381_0_off0;
 var $call21=__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($retval_i_i381_0_off0,$retval_0_i,$__a_1,$__a_end,$__dc,$3,$__grouping,$arraydecay5,$__g_end,$arraydecay);
 var $tobool=($call21|0)==0;
 if($tobool){label=42;break;}else{var $__a_2=$__a_1;var $33=$15;var $cmp_i31_i_i13926=$cmp_i31_i_i13927;label=45;break;}
 case 42: 
 var $29=HEAP32[(($__ninp__i_i387)>>2)];
 var $30=HEAP32[(($__einp__i_i388)>>2)];
 var $cmp_i_i292=($29|0)==($30|0);
 if($cmp_i_i292){label=43;break;}else{label=44;break;}
 case 43: 
 var $31=$9;
 var $vtable_i_i=HEAP32[(($31)>>2)];
 var $vfn_i_i=(($vtable_i_i+40)|0);
 var $32=HEAP32[(($vfn_i_i)>>2)];
 var $call_i_i294=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$32]($9) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $__a_0=$__a_1;var $4=$9;label=10;break; } else { label=34;break; }
 case 44: 
 var $incdec_ptr_i_i=(($29+1)|0);
 HEAP32[(($__ninp__i_i387)>>2)]=$incdec_ptr_i_i;
 var $__a_0=$__a_1;var $4=$9;label=10;break;
 case 45: 
 var $cmp_i31_i_i13926;
 var $33;
 var $__a_2;
 var $__size__i_i264=$__grouping;
 var $34=HEAP8[($__size__i_i264)];
 var $conv_i_i265=($34&255);
 var $and_i_i266=$conv_i_i265&1;
 var $tobool_i_i267=($and_i_i266|0)==0;
 if($tobool_i_i267){label=47;break;}else{label=46;break;}
 case 46: 
 var $__size__i23_i274=(($__grouping+4)|0);
 var $35=HEAP32[(($__size__i23_i274)>>2)];
 var $cond_i286=$35;label=48;break;
 case 47: 
 var $shr_i_i28411=$conv_i_i265>>>1;
 var $cond_i286=$shr_i_i28411;label=48;break;
 case 48: 
 var $cond_i286;
 var $cmp27=($cond_i286|0)==0;
 if($cmp27){label=51;break;}else{label=49;break;}
 case 49: 
 var $36=HEAP32[(($__g_end)>>2)];
 var $sub_ptr_lhs_cast29=$36;
 var $sub_ptr_rhs_cast30=$__g;
 var $sub_ptr_sub31=((($sub_ptr_lhs_cast29)-($sub_ptr_rhs_cast30))|0);
 var $cmp32=($sub_ptr_sub31|0)<160;
 if($cmp32){label=50;break;}else{label=51;break;}
 case 50: 
 var $37=HEAP32[(($__dc)>>2)];
 var $incdec_ptr=(($36+4)|0);
 HEAP32[(($__g_end)>>2)]=$incdec_ptr;
 HEAP32[(($36)>>2)]=$37;
 label=51;break;
 case 51: 
 var $38=HEAP32[(($__a_end)>>2)];
 var $call36=(function() { try { __THREW__ = 0; return __ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji($__a_2,$38,$__err,$retval_0_i) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=52;break; } else { label=35;break; }
 case 52: 
 HEAP32[(($__v)>>2)]=$call36;
 var $39=HEAP32[(($__g_end)>>2)];
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$arraydecay5,$39,$__err);
 if($cmp_i_i_i116){var $44=0;label=57;break;}else{label=53;break;}
 case 53: 
 var $__ninp__i_i_i_i=(($9+12)|0);
 var $40=HEAP32[(($__ninp__i_i_i_i)>>2)];
 var $__einp__i_i_i_i=(($9+16)|0);
 var $41=HEAP32[(($__einp__i_i_i_i)>>2)];
 var $cmp_i_i_i_i=($40|0)==($41|0);
 if($cmp_i_i_i_i){label=54;break;}else{var $44=$9;label=57;break;}
 case 54: 
 var $42=$9;
 var $vtable_i_i_i_i=HEAP32[(($42)>>2)];
 var $vfn_i_i_i_i=(($vtable_i_i_i_i+36)|0);
 var $43=HEAP32[(($vfn_i_i_i_i)>>2)];
 var $call_i_i_i_i51=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$43]($9) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=55;break; } else { label=35;break; }
 case 55: 
 var $cmp_i7_i_i_i=($call_i_i_i_i51|0)==-1;
 if($cmp_i7_i_i_i){label=56;break;}else{var $44=$9;label=57;break;}
 case 56: 
 HEAP32[(($__sbuf__i_i_i97)>>2)]=0;
 var $44=0;label=57;break;
 case 57: 
 var $44;
 var $cmp_i_i_i50=($44|0)==0;
 if($cmp_i31_i_i13926){label=62;break;}else{label=58;break;}
 case 58: 
 var $__ninp__i_i15_i_i=(($33+12)|0);
 var $45=HEAP32[(($__ninp__i_i15_i_i)>>2)];
 var $__einp__i_i16_i_i=(($33+16)|0);
 var $46=HEAP32[(($__einp__i_i16_i_i)>>2)];
 var $cmp_i_i17_i_i=($45|0)==($46|0);
 if($cmp_i_i17_i_i){label=59;break;}else{label=63;break;}
 case 59: 
 var $47=$33;
 var $vtable_i_i19_i_i=HEAP32[(($47)>>2)];
 var $vfn_i_i20_i_i=(($vtable_i_i19_i_i+36)|0);
 var $48=HEAP32[(($vfn_i_i20_i_i)>>2)];
 var $call_i_i21_i_i52=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$48]($33) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=60;break; } else { label=35;break; }
 case 60: 
 var $cmp_i7_i26_i_i=($call_i_i21_i_i52|0)==-1;
 if($cmp_i7_i26_i_i){label=61;break;}else{label=63;break;}
 case 61: 
 HEAP32[(($__sbuf__i11_i_i119)>>2)]=0;
 label=62;break;
 case 62: 
 if($cmp_i_i_i50){label=64;break;}else{label=65;break;}
 case 63: 
 var $cmp_i31_i_i=($33|0)==0;
 var $cmp_i_itmp=$cmp_i_i_i50^$cmp_i31_i_i;
 if($cmp_i_itmp){label=65;break;}else{label=64;break;}
 case 64: 
 var $49=HEAP32[(($__err)>>2)];
 var $or=$49|2;
 HEAP32[(($__err)>>2)]=$or;
 label=65;break;
 case 65: 
 var $50=(($agg_result)|0);
 HEAP32[(($50)>>2)]=$44;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 STACKTOP=sp;return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx($agg_result,$this,$__b,$__e,$__iob,$__err,$__v){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 var $agg_tmp=sp;
 var $agg_tmp2=(sp)+(8);
 var $0=(($__b)|0);
 var $1=HEAP32[(($0)>>2)];
 var $2=(($agg_tmp)|0);
 HEAP32[(($2)>>2)]=$1;
 var $3=(($__e)|0);
 var $4=HEAP32[(($3)>>2)];
 var $5=(($agg_tmp2)|0);
 HEAP32[(($5)>>2)]=$4;
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($agg_result,0,$agg_tmp,$agg_tmp2,$__iob,$__err,$__v);
 STACKTOP=sp;return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($agg_result,$this,$__b,$__e,$__iob,$__err,$__v){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+72)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__atoms=sp;
 var $__thousands_sep=(sp)+(32);
 var $__grouping=(sp)+(40);
 var $__buf=(sp)+(56);
 var $__size__i_i=$__buf;
 var $__a_end=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__g=STACKTOP;STACKTOP = (STACKTOP + 160)|0;(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__g_end=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__dc=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__fmtflags__i_i=(($__iob+4)|0);
 var $0=HEAP32[(($__fmtflags__i_i)>>2)];
 var $and_i=$0&74;
 if(($and_i|0)==8){ label=2;break;}else if(($and_i|0)==0){ label=3;break;}else if(($and_i|0)==64){ var $retval_0_i=8;label=5;break;}else{label=4;break;}
 case 2: 
 var $retval_0_i=16;label=5;break;
 case 3: 
 var $retval_0_i=0;label=5;break;
 case 4: 
 var $retval_0_i=10;label=5;break;
 case 5: 
 var $retval_0_i;
 var $arraydecay=(($__atoms)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$arraydecay,$__thousands_sep);
 HEAP32[(($__size__i_i)>>2)]=0; HEAP32[((($__size__i_i)+(4))>>2)]=0; HEAP32[((($__size__i_i)+(8))>>2)]=0;
 var $__s_i_i=$__buf;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,10,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=6;break; } else { label=35;break; }
 case 6: 
 var $1=HEAP8[($__size__i_i)];
 var $and_i_i_i=$1&1;
 var $tobool_i_i_i77=(($and_i_i_i<<24)>>24)==0;
 if($tobool_i_i_i77){label=8;break;}else{label=7;break;}
 case 7: 
 var $__data__i21_i_i=(($__buf+8)|0);
 var $2=HEAP32[(($__data__i21_i_i)>>2)];
 var $arrayidx_i_i_i375_pre=(($__s_i_i+1)|0);
 var $cond_i_i=$2;var $arrayidx_i_i_i375_pre_phi=$arrayidx_i_i_i375_pre;var $__data__i21_i_i366_pre_phi=$__data__i21_i_i;label=9;break;
 case 8: 
 var $arrayidx_i_i_i78=(($__s_i_i+1)|0);
 var $__data__i21_i_i366_pre=(($__buf+8)|0);
 var $cond_i_i=$arrayidx_i_i_i78;var $arrayidx_i_i_i375_pre_phi=$arrayidx_i_i_i78;var $__data__i21_i_i366_pre_phi=$__data__i21_i_i366_pre;label=9;break;
 case 9: 
 var $__data__i21_i_i366_pre_phi;
 var $arrayidx_i_i_i375_pre_phi;
 var $cond_i_i;
 HEAP32[(($__a_end)>>2)]=$cond_i_i;
 var $arraydecay5=(($__g)|0);
 HEAP32[(($__g_end)>>2)]=$arraydecay5;
 HEAP32[(($__dc)>>2)]=0;
 var $__sbuf__i_i_i97=(($__b)|0);
 var $__sbuf__i11_i_i119=(($__e)|0);
 var $__cap__i_i323=(($__buf)|0);
 var $__size__i23_i233=(($__buf+4)|0);
 var $3=HEAP8[($__thousands_sep)];
 var $_pre=HEAP32[(($__sbuf__i_i_i97)>>2)];
 var $__a_0=$cond_i_i;var $4=$_pre;label=10;break;
 case 10: 
 var $4;
 var $__a_0;
 var $tobool_i_i_i98=($4|0)==0;
 if($tobool_i_i_i98){var $9=0;label=15;break;}else{label=11;break;}
 case 11: 
 var $__ninp__i_i_i_i101=(($4+12)|0);
 var $5=HEAP32[(($__ninp__i_i_i_i101)>>2)];
 var $__einp__i_i_i_i102=(($4+16)|0);
 var $6=HEAP32[(($__einp__i_i_i_i102)>>2)];
 var $cmp_i_i_i_i103=($5|0)==($6|0);
 if($cmp_i_i_i_i103){label=12;break;}else{var $9=$4;label=15;break;}
 case 12: 
 var $7=$4;
 var $vtable_i_i_i_i105=HEAP32[(($7)>>2)];
 var $vfn_i_i_i_i106=(($vtable_i_i_i_i105+36)|0);
 var $8=HEAP32[(($vfn_i_i_i_i106)>>2)];
 var $call_i_i_i_i143=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$8]($4) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=13;break; } else { label=34;break; }
 case 13: 
 var $cmp_i7_i_i_i111=($call_i_i_i_i143|0)==-1;
 if($cmp_i7_i_i_i111){label=14;break;}else{var $9=$4;label=15;break;}
 case 14: 
 HEAP32[(($__sbuf__i_i_i97)>>2)]=0;
 var $9=0;label=15;break;
 case 15: 
 var $9;
 var $cmp_i_i_i116=($9|0)==0;
 var $10=HEAP32[(($__sbuf__i11_i_i119)>>2)];
 var $tobool_i12_i_i120=($10|0)==0;
 if($tobool_i12_i_i120){label=21;break;}else{label=16;break;}
 case 16: 
 var $__ninp__i_i15_i_i124=(($10+12)|0);
 var $11=HEAP32[(($__ninp__i_i15_i_i124)>>2)];
 var $__einp__i_i16_i_i125=(($10+16)|0);
 var $12=HEAP32[(($__einp__i_i16_i_i125)>>2)];
 var $cmp_i_i17_i_i126=($11|0)==($12|0);
 if($cmp_i_i17_i_i126){label=18;break;}else{label=17;break;}
 case 17: 
 if($cmp_i_i_i116){var $15=$10;var $cmp_i31_i_i13927=0;label=23;break;}else{var $__a_2=$__a_0;var $33=$10;var $cmp_i31_i_i13926=0;label=45;break;}
 case 18: 
 var $13=$10;
 var $vtable_i_i19_i_i128=HEAP32[(($13)>>2)];
 var $vfn_i_i20_i_i129=(($vtable_i_i19_i_i128+36)|0);
 var $14=HEAP32[(($vfn_i_i20_i_i129)>>2)];
 var $call_i_i21_i_i145=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$14]($10) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=19;break; } else { label=34;break; }
 case 19: 
 var $cmp_i7_i26_i_i134=($call_i_i21_i_i145|0)==-1;
 if($cmp_i7_i26_i_i134){label=20;break;}else{label=22;break;}
 case 20: 
 HEAP32[(($__sbuf__i11_i_i119)>>2)]=0;
 label=21;break;
 case 21: 
 if($cmp_i_i_i116){var $__a_2=$__a_0;var $33=0;var $cmp_i31_i_i13926=1;label=45;break;}else{var $15=0;var $cmp_i31_i_i13927=1;label=23;break;}
 case 22: 
 var $cmp_i31_i_i139=($10|0)==0;
 var $lnot_i=$cmp_i_i_i116^$cmp_i31_i_i139;
 if($lnot_i){var $15=$10;var $cmp_i31_i_i13927=$cmp_i31_i_i139;label=23;break;}else{var $__a_2=$__a_0;var $33=$10;var $cmp_i31_i_i13926=$cmp_i31_i_i139;label=45;break;}
 case 23: 
 var $cmp_i31_i_i13927;
 var $15;
 var $16=HEAP32[(($__a_end)>>2)];
 var $sub_ptr_lhs_cast=$16;
 var $sub_ptr_rhs_cast=$__a_0;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $17=HEAP8[($__size__i_i)];
 var $conv_i_i158=($17&255);
 var $and_i_i159=$conv_i_i158&1;
 var $tobool_i_i160=($and_i_i159|0)==0;
 var $18=HEAP32[(($__size__i23_i233)>>2)];
 var $shr_i_i12=$conv_i_i158>>>1;
 var $cond_i164=($tobool_i_i160?$shr_i_i12:$18);
 var $cmp=($sub_ptr_sub|0)==($cond_i164|0);
 if($cmp){label=24;break;}else{var $__a_1=$__a_0;label=37;break;}
 case 24: 
 if($tobool_i_i160){label=26;break;}else{label=25;break;}
 case 25: 
 var $19=HEAP32[(($__size__i23_i233)>>2)];
 var $cond_i245=$19;var $cond_i20430=$19;label=27;break;
 case 26: 
 var $shr_i_i20214=$conv_i_i158>>>1;
 var $shr_i_i24315=$conv_i_i158>>>1;
 var $cond_i245=$shr_i_i24315;var $cond_i20430=$shr_i_i20214;label=27;break;
 case 27: 
 var $cond_i20430;
 var $cond_i245;
 var $mul=$cond_i245<<1;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$mul,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=28;break; } else { label=34;break; }
 case 28: 
 var $20=HEAP8[($__size__i_i)];
 var $and_i_i315=$20&1;
 var $tobool_i_i316=(($and_i_i315<<24)>>24)==0;
 if($tobool_i_i316){var $cond_i327=10;label=30;break;}else{label=29;break;}
 case 29: 
 var $21=HEAP32[(($__cap__i_i323)>>2)];
 var $and_i11_i324=$21&-2;
 var $phitmp16=((($and_i11_i324)-(1))|0);
 var $cond_i327=$phitmp16;label=30;break;
 case 30: 
 var $cond_i327;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$cond_i327,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=31;break; } else { label=34;break; }
 case 31: 
 var $22=HEAP8[($__size__i_i)];
 var $and_i_i_i358=$22&1;
 var $tobool_i_i_i359=(($and_i_i_i358<<24)>>24)==0;
 if($tobool_i_i_i359){var $cond_i_i377=$arrayidx_i_i_i375_pre_phi;label=33;break;}else{label=32;break;}
 case 32: 
 var $23=HEAP32[(($__data__i21_i_i366_pre_phi)>>2)];
 var $cond_i_i377=$23;label=33;break;
 case 33: 
 var $cond_i_i377;
 var $add_ptr=(($cond_i_i377+$cond_i20430)|0);
 HEAP32[(($__a_end)>>2)]=$add_ptr;
 var $__a_1=$cond_i_i377;label=37;break;
 case 34: 
 var $lpad_loopexit21$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_loopexit21$1 = tempRet0;
 var $lpad_phi$1=$lpad_loopexit21$1;var $lpad_phi$0=$lpad_loopexit21$0;label=36;break;
 case 35: 
 var $lpad_nonloopexit22$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_nonloopexit22$1 = tempRet0;
 var $lpad_phi$1=$lpad_nonloopexit22$1;var $lpad_phi$0=$lpad_nonloopexit22$0;label=36;break;
 case 36: 
 var $lpad_phi$0;
 var $lpad_phi$1;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 ___resumeException($lpad_phi$0)
 case 37: 
 var $__a_1;
 var $__ninp__i_i387=(($9+12)|0);
 var $24=HEAP32[(($__ninp__i_i387)>>2)];
 var $__einp__i_i388=(($9+16)|0);
 var $25=HEAP32[(($__einp__i_i388)>>2)];
 var $cmp_i_i389=($24|0)==($25|0);
 if($cmp_i_i389){label=38;break;}else{label=40;break;}
 case 38: 
 var $26=$9;
 var $vtable_i_i390=HEAP32[(($26)>>2)];
 var $vfn_i_i391=(($vtable_i_i390+36)|0);
 var $27=HEAP32[(($vfn_i_i391)>>2)];
 var $call_i_i397=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$27]($9) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=39;break; } else { label=34;break; }
 case 39: 
 var $extract_t=(($call_i_i397)&255);
 var $retval_i_i381_0_off0=$extract_t;label=41;break;
 case 40: 
 var $28=HEAP8[($24)];
 var $retval_i_i381_0_off0=$28;label=41;break;
 case 41: 
 var $retval_i_i381_0_off0;
 var $call21=__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($retval_i_i381_0_off0,$retval_0_i,$__a_1,$__a_end,$__dc,$3,$__grouping,$arraydecay5,$__g_end,$arraydecay);
 var $tobool=($call21|0)==0;
 if($tobool){label=42;break;}else{var $__a_2=$__a_1;var $33=$15;var $cmp_i31_i_i13926=$cmp_i31_i_i13927;label=45;break;}
 case 42: 
 var $29=HEAP32[(($__ninp__i_i387)>>2)];
 var $30=HEAP32[(($__einp__i_i388)>>2)];
 var $cmp_i_i292=($29|0)==($30|0);
 if($cmp_i_i292){label=43;break;}else{label=44;break;}
 case 43: 
 var $31=$9;
 var $vtable_i_i=HEAP32[(($31)>>2)];
 var $vfn_i_i=(($vtable_i_i+40)|0);
 var $32=HEAP32[(($vfn_i_i)>>2)];
 var $call_i_i294=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$32]($9) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $__a_0=$__a_1;var $4=$9;label=10;break; } else { label=34;break; }
 case 44: 
 var $incdec_ptr_i_i=(($29+1)|0);
 HEAP32[(($__ninp__i_i387)>>2)]=$incdec_ptr_i_i;
 var $__a_0=$__a_1;var $4=$9;label=10;break;
 case 45: 
 var $cmp_i31_i_i13926;
 var $33;
 var $__a_2;
 var $__size__i_i264=$__grouping;
 var $34=HEAP8[($__size__i_i264)];
 var $conv_i_i265=($34&255);
 var $and_i_i266=$conv_i_i265&1;
 var $tobool_i_i267=($and_i_i266|0)==0;
 if($tobool_i_i267){label=47;break;}else{label=46;break;}
 case 46: 
 var $__size__i23_i274=(($__grouping+4)|0);
 var $35=HEAP32[(($__size__i23_i274)>>2)];
 var $cond_i286=$35;label=48;break;
 case 47: 
 var $shr_i_i28411=$conv_i_i265>>>1;
 var $cond_i286=$shr_i_i28411;label=48;break;
 case 48: 
 var $cond_i286;
 var $cmp27=($cond_i286|0)==0;
 if($cmp27){label=51;break;}else{label=49;break;}
 case 49: 
 var $36=HEAP32[(($__g_end)>>2)];
 var $sub_ptr_lhs_cast29=$36;
 var $sub_ptr_rhs_cast30=$__g;
 var $sub_ptr_sub31=((($sub_ptr_lhs_cast29)-($sub_ptr_rhs_cast30))|0);
 var $cmp32=($sub_ptr_sub31|0)<160;
 if($cmp32){label=50;break;}else{label=51;break;}
 case 50: 
 var $37=HEAP32[(($__dc)>>2)];
 var $incdec_ptr=(($36+4)|0);
 HEAP32[(($__g_end)>>2)]=$incdec_ptr;
 HEAP32[(($36)>>2)]=$37;
 label=51;break;
 case 51: 
 var $38=HEAP32[(($__a_end)>>2)];
 var $call36$r=(function() { try { __THREW__ = 0; return __ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji($__a_2,$38,$__err,$retval_0_i) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();var $call36$0=$call36$r;var $call36$1=tempRet0;if (!__THREW__) { label=52;break; } else { label=35;break; }
 case 52: 
 var $st$0$0=(($__v)|0);
 HEAP32[(($st$0$0)>>2)]=$call36$0;
 var $st$1$1=(($__v+4)|0);
 HEAP32[(($st$1$1)>>2)]=$call36$1;
 var $39=HEAP32[(($__g_end)>>2)];
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$arraydecay5,$39,$__err);
 if($cmp_i_i_i116){var $44=0;label=57;break;}else{label=53;break;}
 case 53: 
 var $__ninp__i_i_i_i=(($9+12)|0);
 var $40=HEAP32[(($__ninp__i_i_i_i)>>2)];
 var $__einp__i_i_i_i=(($9+16)|0);
 var $41=HEAP32[(($__einp__i_i_i_i)>>2)];
 var $cmp_i_i_i_i=($40|0)==($41|0);
 if($cmp_i_i_i_i){label=54;break;}else{var $44=$9;label=57;break;}
 case 54: 
 var $42=$9;
 var $vtable_i_i_i_i=HEAP32[(($42)>>2)];
 var $vfn_i_i_i_i=(($vtable_i_i_i_i+36)|0);
 var $43=HEAP32[(($vfn_i_i_i_i)>>2)];
 var $call_i_i_i_i51=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$43]($9) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=55;break; } else { label=35;break; }
 case 55: 
 var $cmp_i7_i_i_i=($call_i_i_i_i51|0)==-1;
 if($cmp_i7_i_i_i){label=56;break;}else{var $44=$9;label=57;break;}
 case 56: 
 HEAP32[(($__sbuf__i_i_i97)>>2)]=0;
 var $44=0;label=57;break;
 case 57: 
 var $44;
 var $cmp_i_i_i50=($44|0)==0;
 if($cmp_i31_i_i13926){label=62;break;}else{label=58;break;}
 case 58: 
 var $__ninp__i_i15_i_i=(($33+12)|0);
 var $45=HEAP32[(($__ninp__i_i15_i_i)>>2)];
 var $__einp__i_i16_i_i=(($33+16)|0);
 var $46=HEAP32[(($__einp__i_i16_i_i)>>2)];
 var $cmp_i_i17_i_i=($45|0)==($46|0);
 if($cmp_i_i17_i_i){label=59;break;}else{label=63;break;}
 case 59: 
 var $47=$33;
 var $vtable_i_i19_i_i=HEAP32[(($47)>>2)];
 var $vfn_i_i20_i_i=(($vtable_i_i19_i_i+36)|0);
 var $48=HEAP32[(($vfn_i_i20_i_i)>>2)];
 var $call_i_i21_i_i52=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$48]($33) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=60;break; } else { label=35;break; }
 case 60: 
 var $cmp_i7_i26_i_i=($call_i_i21_i_i52|0)==-1;
 if($cmp_i7_i26_i_i){label=61;break;}else{label=63;break;}
 case 61: 
 HEAP32[(($__sbuf__i11_i_i119)>>2)]=0;
 label=62;break;
 case 62: 
 if($cmp_i_i_i50){label=64;break;}else{label=65;break;}
 case 63: 
 var $cmp_i31_i_i=($33|0)==0;
 var $cmp_i_itmp=$cmp_i_i_i50^$cmp_i31_i_i;
 if($cmp_i_itmp){label=65;break;}else{label=64;break;}
 case 64: 
 var $49=HEAP32[(($__err)>>2)];
 var $or=$49|2;
 HEAP32[(($__err)>>2)]=$or;
 label=65;break;
 case 65: 
 var $50=(($agg_result)|0);
 HEAP32[(($50)>>2)]=$44;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 STACKTOP=sp;return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt($agg_result,$this,$__b,$__e,$__iob,$__err,$__v){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 var $agg_tmp=sp;
 var $agg_tmp2=(sp)+(8);
 var $0=(($__b)|0);
 var $1=HEAP32[(($0)>>2)];
 var $2=(($agg_tmp)|0);
 HEAP32[(($2)>>2)]=$1;
 var $3=(($__e)|0);
 var $4=HEAP32[(($3)>>2)];
 var $5=(($agg_tmp2)|0);
 HEAP32[(($5)>>2)]=$4;
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($agg_result,0,$agg_tmp,$agg_tmp2,$__iob,$__err,$__v);
 STACKTOP=sp;return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($agg_result,$this,$__b,$__e,$__iob,$__err,$__v){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+72)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__atoms=sp;
 var $__thousands_sep=(sp)+(32);
 var $__grouping=(sp)+(40);
 var $__buf=(sp)+(56);
 var $__size__i_i=$__buf;
 var $__a_end=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__g=STACKTOP;STACKTOP = (STACKTOP + 160)|0;(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__g_end=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__dc=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__fmtflags__i_i=(($__iob+4)|0);
 var $0=HEAP32[(($__fmtflags__i_i)>>2)];
 var $and_i=$0&74;
 if(($and_i|0)==8){ label=2;break;}else if(($and_i|0)==0){ label=3;break;}else if(($and_i|0)==64){ var $retval_0_i=8;label=5;break;}else{label=4;break;}
 case 2: 
 var $retval_0_i=16;label=5;break;
 case 3: 
 var $retval_0_i=0;label=5;break;
 case 4: 
 var $retval_0_i=10;label=5;break;
 case 5: 
 var $retval_0_i;
 var $arraydecay=(($__atoms)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$arraydecay,$__thousands_sep);
 HEAP32[(($__size__i_i)>>2)]=0; HEAP32[((($__size__i_i)+(4))>>2)]=0; HEAP32[((($__size__i_i)+(8))>>2)]=0;
 var $__s_i_i=$__buf;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,10,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=6;break; } else { label=35;break; }
 case 6: 
 var $1=HEAP8[($__size__i_i)];
 var $and_i_i_i=$1&1;
 var $tobool_i_i_i77=(($and_i_i_i<<24)>>24)==0;
 if($tobool_i_i_i77){label=8;break;}else{label=7;break;}
 case 7: 
 var $__data__i21_i_i=(($__buf+8)|0);
 var $2=HEAP32[(($__data__i21_i_i)>>2)];
 var $arrayidx_i_i_i375_pre=(($__s_i_i+1)|0);
 var $cond_i_i=$2;var $arrayidx_i_i_i375_pre_phi=$arrayidx_i_i_i375_pre;var $__data__i21_i_i366_pre_phi=$__data__i21_i_i;label=9;break;
 case 8: 
 var $arrayidx_i_i_i78=(($__s_i_i+1)|0);
 var $__data__i21_i_i366_pre=(($__buf+8)|0);
 var $cond_i_i=$arrayidx_i_i_i78;var $arrayidx_i_i_i375_pre_phi=$arrayidx_i_i_i78;var $__data__i21_i_i366_pre_phi=$__data__i21_i_i366_pre;label=9;break;
 case 9: 
 var $__data__i21_i_i366_pre_phi;
 var $arrayidx_i_i_i375_pre_phi;
 var $cond_i_i;
 HEAP32[(($__a_end)>>2)]=$cond_i_i;
 var $arraydecay5=(($__g)|0);
 HEAP32[(($__g_end)>>2)]=$arraydecay5;
 HEAP32[(($__dc)>>2)]=0;
 var $__sbuf__i_i_i97=(($__b)|0);
 var $__sbuf__i11_i_i119=(($__e)|0);
 var $__cap__i_i323=(($__buf)|0);
 var $__size__i23_i233=(($__buf+4)|0);
 var $3=HEAP8[($__thousands_sep)];
 var $_pre=HEAP32[(($__sbuf__i_i_i97)>>2)];
 var $__a_0=$cond_i_i;var $4=$_pre;label=10;break;
 case 10: 
 var $4;
 var $__a_0;
 var $tobool_i_i_i98=($4|0)==0;
 if($tobool_i_i_i98){var $9=0;label=15;break;}else{label=11;break;}
 case 11: 
 var $__ninp__i_i_i_i101=(($4+12)|0);
 var $5=HEAP32[(($__ninp__i_i_i_i101)>>2)];
 var $__einp__i_i_i_i102=(($4+16)|0);
 var $6=HEAP32[(($__einp__i_i_i_i102)>>2)];
 var $cmp_i_i_i_i103=($5|0)==($6|0);
 if($cmp_i_i_i_i103){label=12;break;}else{var $9=$4;label=15;break;}
 case 12: 
 var $7=$4;
 var $vtable_i_i_i_i105=HEAP32[(($7)>>2)];
 var $vfn_i_i_i_i106=(($vtable_i_i_i_i105+36)|0);
 var $8=HEAP32[(($vfn_i_i_i_i106)>>2)];
 var $call_i_i_i_i143=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$8]($4) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=13;break; } else { label=34;break; }
 case 13: 
 var $cmp_i7_i_i_i111=($call_i_i_i_i143|0)==-1;
 if($cmp_i7_i_i_i111){label=14;break;}else{var $9=$4;label=15;break;}
 case 14: 
 HEAP32[(($__sbuf__i_i_i97)>>2)]=0;
 var $9=0;label=15;break;
 case 15: 
 var $9;
 var $cmp_i_i_i116=($9|0)==0;
 var $10=HEAP32[(($__sbuf__i11_i_i119)>>2)];
 var $tobool_i12_i_i120=($10|0)==0;
 if($tobool_i12_i_i120){label=21;break;}else{label=16;break;}
 case 16: 
 var $__ninp__i_i15_i_i124=(($10+12)|0);
 var $11=HEAP32[(($__ninp__i_i15_i_i124)>>2)];
 var $__einp__i_i16_i_i125=(($10+16)|0);
 var $12=HEAP32[(($__einp__i_i16_i_i125)>>2)];
 var $cmp_i_i17_i_i126=($11|0)==($12|0);
 if($cmp_i_i17_i_i126){label=18;break;}else{label=17;break;}
 case 17: 
 if($cmp_i_i_i116){var $15=$10;var $cmp_i31_i_i13927=0;label=23;break;}else{var $__a_2=$__a_0;var $33=$10;var $cmp_i31_i_i13926=0;label=45;break;}
 case 18: 
 var $13=$10;
 var $vtable_i_i19_i_i128=HEAP32[(($13)>>2)];
 var $vfn_i_i20_i_i129=(($vtable_i_i19_i_i128+36)|0);
 var $14=HEAP32[(($vfn_i_i20_i_i129)>>2)];
 var $call_i_i21_i_i145=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$14]($10) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=19;break; } else { label=34;break; }
 case 19: 
 var $cmp_i7_i26_i_i134=($call_i_i21_i_i145|0)==-1;
 if($cmp_i7_i26_i_i134){label=20;break;}else{label=22;break;}
 case 20: 
 HEAP32[(($__sbuf__i11_i_i119)>>2)]=0;
 label=21;break;
 case 21: 
 if($cmp_i_i_i116){var $__a_2=$__a_0;var $33=0;var $cmp_i31_i_i13926=1;label=45;break;}else{var $15=0;var $cmp_i31_i_i13927=1;label=23;break;}
 case 22: 
 var $cmp_i31_i_i139=($10|0)==0;
 var $lnot_i=$cmp_i_i_i116^$cmp_i31_i_i139;
 if($lnot_i){var $15=$10;var $cmp_i31_i_i13927=$cmp_i31_i_i139;label=23;break;}else{var $__a_2=$__a_0;var $33=$10;var $cmp_i31_i_i13926=$cmp_i31_i_i139;label=45;break;}
 case 23: 
 var $cmp_i31_i_i13927;
 var $15;
 var $16=HEAP32[(($__a_end)>>2)];
 var $sub_ptr_lhs_cast=$16;
 var $sub_ptr_rhs_cast=$__a_0;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $17=HEAP8[($__size__i_i)];
 var $conv_i_i158=($17&255);
 var $and_i_i159=$conv_i_i158&1;
 var $tobool_i_i160=($and_i_i159|0)==0;
 var $18=HEAP32[(($__size__i23_i233)>>2)];
 var $shr_i_i12=$conv_i_i158>>>1;
 var $cond_i164=($tobool_i_i160?$shr_i_i12:$18);
 var $cmp=($sub_ptr_sub|0)==($cond_i164|0);
 if($cmp){label=24;break;}else{var $__a_1=$__a_0;label=37;break;}
 case 24: 
 if($tobool_i_i160){label=26;break;}else{label=25;break;}
 case 25: 
 var $19=HEAP32[(($__size__i23_i233)>>2)];
 var $cond_i245=$19;var $cond_i20430=$19;label=27;break;
 case 26: 
 var $shr_i_i20214=$conv_i_i158>>>1;
 var $shr_i_i24315=$conv_i_i158>>>1;
 var $cond_i245=$shr_i_i24315;var $cond_i20430=$shr_i_i20214;label=27;break;
 case 27: 
 var $cond_i20430;
 var $cond_i245;
 var $mul=$cond_i245<<1;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$mul,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=28;break; } else { label=34;break; }
 case 28: 
 var $20=HEAP8[($__size__i_i)];
 var $and_i_i315=$20&1;
 var $tobool_i_i316=(($and_i_i315<<24)>>24)==0;
 if($tobool_i_i316){var $cond_i327=10;label=30;break;}else{label=29;break;}
 case 29: 
 var $21=HEAP32[(($__cap__i_i323)>>2)];
 var $and_i11_i324=$21&-2;
 var $phitmp16=((($and_i11_i324)-(1))|0);
 var $cond_i327=$phitmp16;label=30;break;
 case 30: 
 var $cond_i327;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$cond_i327,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=31;break; } else { label=34;break; }
 case 31: 
 var $22=HEAP8[($__size__i_i)];
 var $and_i_i_i358=$22&1;
 var $tobool_i_i_i359=(($and_i_i_i358<<24)>>24)==0;
 if($tobool_i_i_i359){var $cond_i_i377=$arrayidx_i_i_i375_pre_phi;label=33;break;}else{label=32;break;}
 case 32: 
 var $23=HEAP32[(($__data__i21_i_i366_pre_phi)>>2)];
 var $cond_i_i377=$23;label=33;break;
 case 33: 
 var $cond_i_i377;
 var $add_ptr=(($cond_i_i377+$cond_i20430)|0);
 HEAP32[(($__a_end)>>2)]=$add_ptr;
 var $__a_1=$cond_i_i377;label=37;break;
 case 34: 
 var $lpad_loopexit21$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_loopexit21$1 = tempRet0;
 var $lpad_phi$1=$lpad_loopexit21$1;var $lpad_phi$0=$lpad_loopexit21$0;label=36;break;
 case 35: 
 var $lpad_nonloopexit22$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_nonloopexit22$1 = tempRet0;
 var $lpad_phi$1=$lpad_nonloopexit22$1;var $lpad_phi$0=$lpad_nonloopexit22$0;label=36;break;
 case 36: 
 var $lpad_phi$0;
 var $lpad_phi$1;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 ___resumeException($lpad_phi$0)
 case 37: 
 var $__a_1;
 var $__ninp__i_i387=(($9+12)|0);
 var $24=HEAP32[(($__ninp__i_i387)>>2)];
 var $__einp__i_i388=(($9+16)|0);
 var $25=HEAP32[(($__einp__i_i388)>>2)];
 var $cmp_i_i389=($24|0)==($25|0);
 if($cmp_i_i389){label=38;break;}else{label=40;break;}
 case 38: 
 var $26=$9;
 var $vtable_i_i390=HEAP32[(($26)>>2)];
 var $vfn_i_i391=(($vtable_i_i390+36)|0);
 var $27=HEAP32[(($vfn_i_i391)>>2)];
 var $call_i_i397=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$27]($9) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=39;break; } else { label=34;break; }
 case 39: 
 var $extract_t=(($call_i_i397)&255);
 var $retval_i_i381_0_off0=$extract_t;label=41;break;
 case 40: 
 var $28=HEAP8[($24)];
 var $retval_i_i381_0_off0=$28;label=41;break;
 case 41: 
 var $retval_i_i381_0_off0;
 var $call21=__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($retval_i_i381_0_off0,$retval_0_i,$__a_1,$__a_end,$__dc,$3,$__grouping,$arraydecay5,$__g_end,$arraydecay);
 var $tobool=($call21|0)==0;
 if($tobool){label=42;break;}else{var $__a_2=$__a_1;var $33=$15;var $cmp_i31_i_i13926=$cmp_i31_i_i13927;label=45;break;}
 case 42: 
 var $29=HEAP32[(($__ninp__i_i387)>>2)];
 var $30=HEAP32[(($__einp__i_i388)>>2)];
 var $cmp_i_i292=($29|0)==($30|0);
 if($cmp_i_i292){label=43;break;}else{label=44;break;}
 case 43: 
 var $31=$9;
 var $vtable_i_i=HEAP32[(($31)>>2)];
 var $vfn_i_i=(($vtable_i_i+40)|0);
 var $32=HEAP32[(($vfn_i_i)>>2)];
 var $call_i_i294=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$32]($9) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $__a_0=$__a_1;var $4=$9;label=10;break; } else { label=34;break; }
 case 44: 
 var $incdec_ptr_i_i=(($29+1)|0);
 HEAP32[(($__ninp__i_i387)>>2)]=$incdec_ptr_i_i;
 var $__a_0=$__a_1;var $4=$9;label=10;break;
 case 45: 
 var $cmp_i31_i_i13926;
 var $33;
 var $__a_2;
 var $__size__i_i264=$__grouping;
 var $34=HEAP8[($__size__i_i264)];
 var $conv_i_i265=($34&255);
 var $and_i_i266=$conv_i_i265&1;
 var $tobool_i_i267=($and_i_i266|0)==0;
 if($tobool_i_i267){label=47;break;}else{label=46;break;}
 case 46: 
 var $__size__i23_i274=(($__grouping+4)|0);
 var $35=HEAP32[(($__size__i23_i274)>>2)];
 var $cond_i286=$35;label=48;break;
 case 47: 
 var $shr_i_i28411=$conv_i_i265>>>1;
 var $cond_i286=$shr_i_i28411;label=48;break;
 case 48: 
 var $cond_i286;
 var $cmp27=($cond_i286|0)==0;
 if($cmp27){label=51;break;}else{label=49;break;}
 case 49: 
 var $36=HEAP32[(($__g_end)>>2)];
 var $sub_ptr_lhs_cast29=$36;
 var $sub_ptr_rhs_cast30=$__g;
 var $sub_ptr_sub31=((($sub_ptr_lhs_cast29)-($sub_ptr_rhs_cast30))|0);
 var $cmp32=($sub_ptr_sub31|0)<160;
 if($cmp32){label=50;break;}else{label=51;break;}
 case 50: 
 var $37=HEAP32[(($__dc)>>2)];
 var $incdec_ptr=(($36+4)|0);
 HEAP32[(($__g_end)>>2)]=$incdec_ptr;
 HEAP32[(($36)>>2)]=$37;
 label=51;break;
 case 51: 
 var $38=HEAP32[(($__a_end)>>2)];
 var $call36=(function() { try { __THREW__ = 0; return __ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji($__a_2,$38,$__err,$retval_0_i) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=52;break; } else { label=35;break; }
 case 52: 
 HEAP16[(($__v)>>1)]=$call36;
 var $39=HEAP32[(($__g_end)>>2)];
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$arraydecay5,$39,$__err);
 if($cmp_i_i_i116){var $44=0;label=57;break;}else{label=53;break;}
 case 53: 
 var $__ninp__i_i_i_i=(($9+12)|0);
 var $40=HEAP32[(($__ninp__i_i_i_i)>>2)];
 var $__einp__i_i_i_i=(($9+16)|0);
 var $41=HEAP32[(($__einp__i_i_i_i)>>2)];
 var $cmp_i_i_i_i=($40|0)==($41|0);
 if($cmp_i_i_i_i){label=54;break;}else{var $44=$9;label=57;break;}
 case 54: 
 var $42=$9;
 var $vtable_i_i_i_i=HEAP32[(($42)>>2)];
 var $vfn_i_i_i_i=(($vtable_i_i_i_i+36)|0);
 var $43=HEAP32[(($vfn_i_i_i_i)>>2)];
 var $call_i_i_i_i51=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$43]($9) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=55;break; } else { label=35;break; }
 case 55: 
 var $cmp_i7_i_i_i=($call_i_i_i_i51|0)==-1;
 if($cmp_i7_i_i_i){label=56;break;}else{var $44=$9;label=57;break;}
 case 56: 
 HEAP32[(($__sbuf__i_i_i97)>>2)]=0;
 var $44=0;label=57;break;
 case 57: 
 var $44;
 var $cmp_i_i_i50=($44|0)==0;
 if($cmp_i31_i_i13926){label=62;break;}else{label=58;break;}
 case 58: 
 var $__ninp__i_i15_i_i=(($33+12)|0);
 var $45=HEAP32[(($__ninp__i_i15_i_i)>>2)];
 var $__einp__i_i16_i_i=(($33+16)|0);
 var $46=HEAP32[(($__einp__i_i16_i_i)>>2)];
 var $cmp_i_i17_i_i=($45|0)==($46|0);
 if($cmp_i_i17_i_i){label=59;break;}else{label=63;break;}
 case 59: 
 var $47=$33;
 var $vtable_i_i19_i_i=HEAP32[(($47)>>2)];
 var $vfn_i_i20_i_i=(($vtable_i_i19_i_i+36)|0);
 var $48=HEAP32[(($vfn_i_i20_i_i)>>2)];
 var $call_i_i21_i_i52=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$48]($33) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=60;break; } else { label=35;break; }
 case 60: 
 var $cmp_i7_i26_i_i=($call_i_i21_i_i52|0)==-1;
 if($cmp_i7_i26_i_i){label=61;break;}else{label=63;break;}
 case 61: 
 HEAP32[(($__sbuf__i11_i_i119)>>2)]=0;
 label=62;break;
 case 62: 
 if($cmp_i_i_i50){label=64;break;}else{label=65;break;}
 case 63: 
 var $cmp_i31_i_i=($33|0)==0;
 var $cmp_i_itmp=$cmp_i_i_i50^$cmp_i31_i_i;
 if($cmp_i_itmp){label=65;break;}else{label=64;break;}
 case 64: 
 var $49=HEAP32[(($__err)>>2)];
 var $or=$49|2;
 HEAP32[(($__err)>>2)]=$or;
 label=65;break;
 case 65: 
 var $50=(($agg_result)|0);
 HEAP32[(($50)>>2)]=$44;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 STACKTOP=sp;return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_($agg_result,$this,$__b,$__e,$__iob,$__err,$__v){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 var $agg_tmp=sp;
 var $agg_tmp2=(sp)+(8);
 var $0=(($__b)|0);
 var $1=HEAP32[(($0)>>2)];
 var $2=(($agg_tmp)|0);
 HEAP32[(($2)>>2)]=$1;
 var $3=(($__e)|0);
 var $4=HEAP32[(($3)>>2)];
 var $5=(($agg_tmp2)|0);
 HEAP32[(($5)>>2)]=$4;
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($agg_result,0,$agg_tmp,$agg_tmp2,$__iob,$__err,$__v);
 STACKTOP=sp;return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($agg_result,$this,$__b,$__e,$__iob,$__err,$__v){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+72)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__atoms=sp;
 var $__thousands_sep=(sp)+(32);
 var $__grouping=(sp)+(40);
 var $__buf=(sp)+(56);
 var $__size__i_i=$__buf;
 var $__a_end=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__g=STACKTOP;STACKTOP = (STACKTOP + 160)|0;(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__g_end=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__dc=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__fmtflags__i_i=(($__iob+4)|0);
 var $0=HEAP32[(($__fmtflags__i_i)>>2)];
 var $and_i=$0&74;
 if(($and_i|0)==8){ label=2;break;}else if(($and_i|0)==0){ label=3;break;}else if(($and_i|0)==64){ var $retval_0_i=8;label=5;break;}else{label=4;break;}
 case 2: 
 var $retval_0_i=16;label=5;break;
 case 3: 
 var $retval_0_i=0;label=5;break;
 case 4: 
 var $retval_0_i=10;label=5;break;
 case 5: 
 var $retval_0_i;
 var $arraydecay=(($__atoms)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$arraydecay,$__thousands_sep);
 HEAP32[(($__size__i_i)>>2)]=0; HEAP32[((($__size__i_i)+(4))>>2)]=0; HEAP32[((($__size__i_i)+(8))>>2)]=0;
 var $__s_i_i=$__buf;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,10,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=6;break; } else { label=35;break; }
 case 6: 
 var $1=HEAP8[($__size__i_i)];
 var $and_i_i_i=$1&1;
 var $tobool_i_i_i77=(($and_i_i_i<<24)>>24)==0;
 if($tobool_i_i_i77){label=8;break;}else{label=7;break;}
 case 7: 
 var $__data__i21_i_i=(($__buf+8)|0);
 var $2=HEAP32[(($__data__i21_i_i)>>2)];
 var $arrayidx_i_i_i375_pre=(($__s_i_i+1)|0);
 var $cond_i_i=$2;var $arrayidx_i_i_i375_pre_phi=$arrayidx_i_i_i375_pre;var $__data__i21_i_i366_pre_phi=$__data__i21_i_i;label=9;break;
 case 8: 
 var $arrayidx_i_i_i78=(($__s_i_i+1)|0);
 var $__data__i21_i_i366_pre=(($__buf+8)|0);
 var $cond_i_i=$arrayidx_i_i_i78;var $arrayidx_i_i_i375_pre_phi=$arrayidx_i_i_i78;var $__data__i21_i_i366_pre_phi=$__data__i21_i_i366_pre;label=9;break;
 case 9: 
 var $__data__i21_i_i366_pre_phi;
 var $arrayidx_i_i_i375_pre_phi;
 var $cond_i_i;
 HEAP32[(($__a_end)>>2)]=$cond_i_i;
 var $arraydecay5=(($__g)|0);
 HEAP32[(($__g_end)>>2)]=$arraydecay5;
 HEAP32[(($__dc)>>2)]=0;
 var $__sbuf__i_i_i97=(($__b)|0);
 var $__sbuf__i11_i_i119=(($__e)|0);
 var $__cap__i_i323=(($__buf)|0);
 var $__size__i23_i233=(($__buf+4)|0);
 var $3=HEAP8[($__thousands_sep)];
 var $_pre=HEAP32[(($__sbuf__i_i_i97)>>2)];
 var $__a_0=$cond_i_i;var $4=$_pre;label=10;break;
 case 10: 
 var $4;
 var $__a_0;
 var $tobool_i_i_i98=($4|0)==0;
 if($tobool_i_i_i98){var $9=0;label=15;break;}else{label=11;break;}
 case 11: 
 var $__ninp__i_i_i_i101=(($4+12)|0);
 var $5=HEAP32[(($__ninp__i_i_i_i101)>>2)];
 var $__einp__i_i_i_i102=(($4+16)|0);
 var $6=HEAP32[(($__einp__i_i_i_i102)>>2)];
 var $cmp_i_i_i_i103=($5|0)==($6|0);
 if($cmp_i_i_i_i103){label=12;break;}else{var $9=$4;label=15;break;}
 case 12: 
 var $7=$4;
 var $vtable_i_i_i_i105=HEAP32[(($7)>>2)];
 var $vfn_i_i_i_i106=(($vtable_i_i_i_i105+36)|0);
 var $8=HEAP32[(($vfn_i_i_i_i106)>>2)];
 var $call_i_i_i_i143=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$8]($4) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=13;break; } else { label=34;break; }
 case 13: 
 var $cmp_i7_i_i_i111=($call_i_i_i_i143|0)==-1;
 if($cmp_i7_i_i_i111){label=14;break;}else{var $9=$4;label=15;break;}
 case 14: 
 HEAP32[(($__sbuf__i_i_i97)>>2)]=0;
 var $9=0;label=15;break;
 case 15: 
 var $9;
 var $cmp_i_i_i116=($9|0)==0;
 var $10=HEAP32[(($__sbuf__i11_i_i119)>>2)];
 var $tobool_i12_i_i120=($10|0)==0;
 if($tobool_i12_i_i120){label=21;break;}else{label=16;break;}
 case 16: 
 var $__ninp__i_i15_i_i124=(($10+12)|0);
 var $11=HEAP32[(($__ninp__i_i15_i_i124)>>2)];
 var $__einp__i_i16_i_i125=(($10+16)|0);
 var $12=HEAP32[(($__einp__i_i16_i_i125)>>2)];
 var $cmp_i_i17_i_i126=($11|0)==($12|0);
 if($cmp_i_i17_i_i126){label=18;break;}else{label=17;break;}
 case 17: 
 if($cmp_i_i_i116){var $15=$10;var $cmp_i31_i_i13927=0;label=23;break;}else{var $__a_2=$__a_0;var $33=$10;var $cmp_i31_i_i13926=0;label=45;break;}
 case 18: 
 var $13=$10;
 var $vtable_i_i19_i_i128=HEAP32[(($13)>>2)];
 var $vfn_i_i20_i_i129=(($vtable_i_i19_i_i128+36)|0);
 var $14=HEAP32[(($vfn_i_i20_i_i129)>>2)];
 var $call_i_i21_i_i145=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$14]($10) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=19;break; } else { label=34;break; }
 case 19: 
 var $cmp_i7_i26_i_i134=($call_i_i21_i_i145|0)==-1;
 if($cmp_i7_i26_i_i134){label=20;break;}else{label=22;break;}
 case 20: 
 HEAP32[(($__sbuf__i11_i_i119)>>2)]=0;
 label=21;break;
 case 21: 
 if($cmp_i_i_i116){var $__a_2=$__a_0;var $33=0;var $cmp_i31_i_i13926=1;label=45;break;}else{var $15=0;var $cmp_i31_i_i13927=1;label=23;break;}
 case 22: 
 var $cmp_i31_i_i139=($10|0)==0;
 var $lnot_i=$cmp_i_i_i116^$cmp_i31_i_i139;
 if($lnot_i){var $15=$10;var $cmp_i31_i_i13927=$cmp_i31_i_i139;label=23;break;}else{var $__a_2=$__a_0;var $33=$10;var $cmp_i31_i_i13926=$cmp_i31_i_i139;label=45;break;}
 case 23: 
 var $cmp_i31_i_i13927;
 var $15;
 var $16=HEAP32[(($__a_end)>>2)];
 var $sub_ptr_lhs_cast=$16;
 var $sub_ptr_rhs_cast=$__a_0;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $17=HEAP8[($__size__i_i)];
 var $conv_i_i158=($17&255);
 var $and_i_i159=$conv_i_i158&1;
 var $tobool_i_i160=($and_i_i159|0)==0;
 var $18=HEAP32[(($__size__i23_i233)>>2)];
 var $shr_i_i12=$conv_i_i158>>>1;
 var $cond_i164=($tobool_i_i160?$shr_i_i12:$18);
 var $cmp=($sub_ptr_sub|0)==($cond_i164|0);
 if($cmp){label=24;break;}else{var $__a_1=$__a_0;label=37;break;}
 case 24: 
 if($tobool_i_i160){label=26;break;}else{label=25;break;}
 case 25: 
 var $19=HEAP32[(($__size__i23_i233)>>2)];
 var $cond_i245=$19;var $cond_i20430=$19;label=27;break;
 case 26: 
 var $shr_i_i20214=$conv_i_i158>>>1;
 var $shr_i_i24315=$conv_i_i158>>>1;
 var $cond_i245=$shr_i_i24315;var $cond_i20430=$shr_i_i20214;label=27;break;
 case 27: 
 var $cond_i20430;
 var $cond_i245;
 var $mul=$cond_i245<<1;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$mul,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=28;break; } else { label=34;break; }
 case 28: 
 var $20=HEAP8[($__size__i_i)];
 var $and_i_i315=$20&1;
 var $tobool_i_i316=(($and_i_i315<<24)>>24)==0;
 if($tobool_i_i316){var $cond_i327=10;label=30;break;}else{label=29;break;}
 case 29: 
 var $21=HEAP32[(($__cap__i_i323)>>2)];
 var $and_i11_i324=$21&-2;
 var $phitmp16=((($and_i11_i324)-(1))|0);
 var $cond_i327=$phitmp16;label=30;break;
 case 30: 
 var $cond_i327;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$cond_i327,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=31;break; } else { label=34;break; }
 case 31: 
 var $22=HEAP8[($__size__i_i)];
 var $and_i_i_i358=$22&1;
 var $tobool_i_i_i359=(($and_i_i_i358<<24)>>24)==0;
 if($tobool_i_i_i359){var $cond_i_i377=$arrayidx_i_i_i375_pre_phi;label=33;break;}else{label=32;break;}
 case 32: 
 var $23=HEAP32[(($__data__i21_i_i366_pre_phi)>>2)];
 var $cond_i_i377=$23;label=33;break;
 case 33: 
 var $cond_i_i377;
 var $add_ptr=(($cond_i_i377+$cond_i20430)|0);
 HEAP32[(($__a_end)>>2)]=$add_ptr;
 var $__a_1=$cond_i_i377;label=37;break;
 case 34: 
 var $lpad_loopexit21$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_loopexit21$1 = tempRet0;
 var $lpad_phi$1=$lpad_loopexit21$1;var $lpad_phi$0=$lpad_loopexit21$0;label=36;break;
 case 35: 
 var $lpad_nonloopexit22$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_nonloopexit22$1 = tempRet0;
 var $lpad_phi$1=$lpad_nonloopexit22$1;var $lpad_phi$0=$lpad_nonloopexit22$0;label=36;break;
 case 36: 
 var $lpad_phi$0;
 var $lpad_phi$1;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 ___resumeException($lpad_phi$0)
 case 37: 
 var $__a_1;
 var $__ninp__i_i387=(($9+12)|0);
 var $24=HEAP32[(($__ninp__i_i387)>>2)];
 var $__einp__i_i388=(($9+16)|0);
 var $25=HEAP32[(($__einp__i_i388)>>2)];
 var $cmp_i_i389=($24|0)==($25|0);
 if($cmp_i_i389){label=38;break;}else{label=40;break;}
 case 38: 
 var $26=$9;
 var $vtable_i_i390=HEAP32[(($26)>>2)];
 var $vfn_i_i391=(($vtable_i_i390+36)|0);
 var $27=HEAP32[(($vfn_i_i391)>>2)];
 var $call_i_i397=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$27]($9) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=39;break; } else { label=34;break; }
 case 39: 
 var $extract_t=(($call_i_i397)&255);
 var $retval_i_i381_0_off0=$extract_t;label=41;break;
 case 40: 
 var $28=HEAP8[($24)];
 var $retval_i_i381_0_off0=$28;label=41;break;
 case 41: 
 var $retval_i_i381_0_off0;
 var $call21=__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($retval_i_i381_0_off0,$retval_0_i,$__a_1,$__a_end,$__dc,$3,$__grouping,$arraydecay5,$__g_end,$arraydecay);
 var $tobool=($call21|0)==0;
 if($tobool){label=42;break;}else{var $__a_2=$__a_1;var $33=$15;var $cmp_i31_i_i13926=$cmp_i31_i_i13927;label=45;break;}
 case 42: 
 var $29=HEAP32[(($__ninp__i_i387)>>2)];
 var $30=HEAP32[(($__einp__i_i388)>>2)];
 var $cmp_i_i292=($29|0)==($30|0);
 if($cmp_i_i292){label=43;break;}else{label=44;break;}
 case 43: 
 var $31=$9;
 var $vtable_i_i=HEAP32[(($31)>>2)];
 var $vfn_i_i=(($vtable_i_i+40)|0);
 var $32=HEAP32[(($vfn_i_i)>>2)];
 var $call_i_i294=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$32]($9) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $__a_0=$__a_1;var $4=$9;label=10;break; } else { label=34;break; }
 case 44: 
 var $incdec_ptr_i_i=(($29+1)|0);
 HEAP32[(($__ninp__i_i387)>>2)]=$incdec_ptr_i_i;
 var $__a_0=$__a_1;var $4=$9;label=10;break;
 case 45: 
 var $cmp_i31_i_i13926;
 var $33;
 var $__a_2;
 var $__size__i_i264=$__grouping;
 var $34=HEAP8[($__size__i_i264)];
 var $conv_i_i265=($34&255);
 var $and_i_i266=$conv_i_i265&1;
 var $tobool_i_i267=($and_i_i266|0)==0;
 if($tobool_i_i267){label=47;break;}else{label=46;break;}
 case 46: 
 var $__size__i23_i274=(($__grouping+4)|0);
 var $35=HEAP32[(($__size__i23_i274)>>2)];
 var $cond_i286=$35;label=48;break;
 case 47: 
 var $shr_i_i28411=$conv_i_i265>>>1;
 var $cond_i286=$shr_i_i28411;label=48;break;
 case 48: 
 var $cond_i286;
 var $cmp27=($cond_i286|0)==0;
 if($cmp27){label=51;break;}else{label=49;break;}
 case 49: 
 var $36=HEAP32[(($__g_end)>>2)];
 var $sub_ptr_lhs_cast29=$36;
 var $sub_ptr_rhs_cast30=$__g;
 var $sub_ptr_sub31=((($sub_ptr_lhs_cast29)-($sub_ptr_rhs_cast30))|0);
 var $cmp32=($sub_ptr_sub31|0)<160;
 if($cmp32){label=50;break;}else{label=51;break;}
 case 50: 
 var $37=HEAP32[(($__dc)>>2)];
 var $incdec_ptr=(($36+4)|0);
 HEAP32[(($__g_end)>>2)]=$incdec_ptr;
 HEAP32[(($36)>>2)]=$37;
 label=51;break;
 case 51: 
 var $38=HEAP32[(($__a_end)>>2)];
 var $call36=(function() { try { __THREW__ = 0; return __ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji($__a_2,$38,$__err,$retval_0_i) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=52;break; } else { label=35;break; }
 case 52: 
 HEAP32[(($__v)>>2)]=$call36;
 var $39=HEAP32[(($__g_end)>>2)];
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$arraydecay5,$39,$__err);
 if($cmp_i_i_i116){var $44=0;label=57;break;}else{label=53;break;}
 case 53: 
 var $__ninp__i_i_i_i=(($9+12)|0);
 var $40=HEAP32[(($__ninp__i_i_i_i)>>2)];
 var $__einp__i_i_i_i=(($9+16)|0);
 var $41=HEAP32[(($__einp__i_i_i_i)>>2)];
 var $cmp_i_i_i_i=($40|0)==($41|0);
 if($cmp_i_i_i_i){label=54;break;}else{var $44=$9;label=57;break;}
 case 54: 
 var $42=$9;
 var $vtable_i_i_i_i=HEAP32[(($42)>>2)];
 var $vfn_i_i_i_i=(($vtable_i_i_i_i+36)|0);
 var $43=HEAP32[(($vfn_i_i_i_i)>>2)];
 var $call_i_i_i_i51=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$43]($9) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=55;break; } else { label=35;break; }
 case 55: 
 var $cmp_i7_i_i_i=($call_i_i_i_i51|0)==-1;
 if($cmp_i7_i_i_i){label=56;break;}else{var $44=$9;label=57;break;}
 case 56: 
 HEAP32[(($__sbuf__i_i_i97)>>2)]=0;
 var $44=0;label=57;break;
 case 57: 
 var $44;
 var $cmp_i_i_i50=($44|0)==0;
 if($cmp_i31_i_i13926){label=62;break;}else{label=58;break;}
 case 58: 
 var $__ninp__i_i15_i_i=(($33+12)|0);
 var $45=HEAP32[(($__ninp__i_i15_i_i)>>2)];
 var $__einp__i_i16_i_i=(($33+16)|0);
 var $46=HEAP32[(($__einp__i_i16_i_i)>>2)];
 var $cmp_i_i17_i_i=($45|0)==($46|0);
 if($cmp_i_i17_i_i){label=59;break;}else{label=63;break;}
 case 59: 
 var $47=$33;
 var $vtable_i_i19_i_i=HEAP32[(($47)>>2)];
 var $vfn_i_i20_i_i=(($vtable_i_i19_i_i+36)|0);
 var $48=HEAP32[(($vfn_i_i20_i_i)>>2)];
 var $call_i_i21_i_i52=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$48]($33) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=60;break; } else { label=35;break; }
 case 60: 
 var $cmp_i7_i26_i_i=($call_i_i21_i_i52|0)==-1;
 if($cmp_i7_i26_i_i){label=61;break;}else{label=63;break;}
 case 61: 
 HEAP32[(($__sbuf__i11_i_i119)>>2)]=0;
 label=62;break;
 case 62: 
 if($cmp_i_i_i50){label=64;break;}else{label=65;break;}
 case 63: 
 var $cmp_i31_i_i=($33|0)==0;
 var $cmp_i_itmp=$cmp_i_i_i50^$cmp_i31_i_i;
 if($cmp_i_itmp){label=65;break;}else{label=64;break;}
 case 64: 
 var $49=HEAP32[(($__err)>>2)];
 var $or=$49|2;
 HEAP32[(($__err)>>2)]=$or;
 label=65;break;
 case 65: 
 var $50=(($agg_result)|0);
 HEAP32[(($50)>>2)]=$44;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 STACKTOP=sp;return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm($agg_result,$this,$__b,$__e,$__iob,$__err,$__v){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 var $agg_tmp=sp;
 var $agg_tmp2=(sp)+(8);
 var $0=(($__b)|0);
 var $1=HEAP32[(($0)>>2)];
 var $2=(($agg_tmp)|0);
 HEAP32[(($2)>>2)]=$1;
 var $3=(($__e)|0);
 var $4=HEAP32[(($3)>>2)];
 var $5=(($agg_tmp2)|0);
 HEAP32[(($5)>>2)]=$4;
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($agg_result,0,$agg_tmp,$agg_tmp2,$__iob,$__err,$__v);
 STACKTOP=sp;return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($agg_result,$this,$__b,$__e,$__iob,$__err,$__v){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+72)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__atoms=sp;
 var $__thousands_sep=(sp)+(32);
 var $__grouping=(sp)+(40);
 var $__buf=(sp)+(56);
 var $__size__i_i=$__buf;
 var $__a_end=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__g=STACKTOP;STACKTOP = (STACKTOP + 160)|0;(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__g_end=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__dc=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__fmtflags__i_i=(($__iob+4)|0);
 var $0=HEAP32[(($__fmtflags__i_i)>>2)];
 var $and_i=$0&74;
 if(($and_i|0)==8){ label=2;break;}else if(($and_i|0)==0){ label=3;break;}else if(($and_i|0)==64){ var $retval_0_i=8;label=5;break;}else{label=4;break;}
 case 2: 
 var $retval_0_i=16;label=5;break;
 case 3: 
 var $retval_0_i=0;label=5;break;
 case 4: 
 var $retval_0_i=10;label=5;break;
 case 5: 
 var $retval_0_i;
 var $arraydecay=(($__atoms)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$arraydecay,$__thousands_sep);
 HEAP32[(($__size__i_i)>>2)]=0; HEAP32[((($__size__i_i)+(4))>>2)]=0; HEAP32[((($__size__i_i)+(8))>>2)]=0;
 var $__s_i_i=$__buf;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,10,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=6;break; } else { label=35;break; }
 case 6: 
 var $1=HEAP8[($__size__i_i)];
 var $and_i_i_i=$1&1;
 var $tobool_i_i_i77=(($and_i_i_i<<24)>>24)==0;
 if($tobool_i_i_i77){label=8;break;}else{label=7;break;}
 case 7: 
 var $__data__i21_i_i=(($__buf+8)|0);
 var $2=HEAP32[(($__data__i21_i_i)>>2)];
 var $arrayidx_i_i_i375_pre=(($__s_i_i+1)|0);
 var $cond_i_i=$2;var $arrayidx_i_i_i375_pre_phi=$arrayidx_i_i_i375_pre;var $__data__i21_i_i366_pre_phi=$__data__i21_i_i;label=9;break;
 case 8: 
 var $arrayidx_i_i_i78=(($__s_i_i+1)|0);
 var $__data__i21_i_i366_pre=(($__buf+8)|0);
 var $cond_i_i=$arrayidx_i_i_i78;var $arrayidx_i_i_i375_pre_phi=$arrayidx_i_i_i78;var $__data__i21_i_i366_pre_phi=$__data__i21_i_i366_pre;label=9;break;
 case 9: 
 var $__data__i21_i_i366_pre_phi;
 var $arrayidx_i_i_i375_pre_phi;
 var $cond_i_i;
 HEAP32[(($__a_end)>>2)]=$cond_i_i;
 var $arraydecay5=(($__g)|0);
 HEAP32[(($__g_end)>>2)]=$arraydecay5;
 HEAP32[(($__dc)>>2)]=0;
 var $__sbuf__i_i_i97=(($__b)|0);
 var $__sbuf__i11_i_i119=(($__e)|0);
 var $__cap__i_i323=(($__buf)|0);
 var $__size__i23_i233=(($__buf+4)|0);
 var $3=HEAP8[($__thousands_sep)];
 var $_pre=HEAP32[(($__sbuf__i_i_i97)>>2)];
 var $__a_0=$cond_i_i;var $4=$_pre;label=10;break;
 case 10: 
 var $4;
 var $__a_0;
 var $tobool_i_i_i98=($4|0)==0;
 if($tobool_i_i_i98){var $9=0;label=15;break;}else{label=11;break;}
 case 11: 
 var $__ninp__i_i_i_i101=(($4+12)|0);
 var $5=HEAP32[(($__ninp__i_i_i_i101)>>2)];
 var $__einp__i_i_i_i102=(($4+16)|0);
 var $6=HEAP32[(($__einp__i_i_i_i102)>>2)];
 var $cmp_i_i_i_i103=($5|0)==($6|0);
 if($cmp_i_i_i_i103){label=12;break;}else{var $9=$4;label=15;break;}
 case 12: 
 var $7=$4;
 var $vtable_i_i_i_i105=HEAP32[(($7)>>2)];
 var $vfn_i_i_i_i106=(($vtable_i_i_i_i105+36)|0);
 var $8=HEAP32[(($vfn_i_i_i_i106)>>2)];
 var $call_i_i_i_i143=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$8]($4) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=13;break; } else { label=34;break; }
 case 13: 
 var $cmp_i7_i_i_i111=($call_i_i_i_i143|0)==-1;
 if($cmp_i7_i_i_i111){label=14;break;}else{var $9=$4;label=15;break;}
 case 14: 
 HEAP32[(($__sbuf__i_i_i97)>>2)]=0;
 var $9=0;label=15;break;
 case 15: 
 var $9;
 var $cmp_i_i_i116=($9|0)==0;
 var $10=HEAP32[(($__sbuf__i11_i_i119)>>2)];
 var $tobool_i12_i_i120=($10|0)==0;
 if($tobool_i12_i_i120){label=21;break;}else{label=16;break;}
 case 16: 
 var $__ninp__i_i15_i_i124=(($10+12)|0);
 var $11=HEAP32[(($__ninp__i_i15_i_i124)>>2)];
 var $__einp__i_i16_i_i125=(($10+16)|0);
 var $12=HEAP32[(($__einp__i_i16_i_i125)>>2)];
 var $cmp_i_i17_i_i126=($11|0)==($12|0);
 if($cmp_i_i17_i_i126){label=18;break;}else{label=17;break;}
 case 17: 
 if($cmp_i_i_i116){var $15=$10;var $cmp_i31_i_i13927=0;label=23;break;}else{var $__a_2=$__a_0;var $33=$10;var $cmp_i31_i_i13926=0;label=45;break;}
 case 18: 
 var $13=$10;
 var $vtable_i_i19_i_i128=HEAP32[(($13)>>2)];
 var $vfn_i_i20_i_i129=(($vtable_i_i19_i_i128+36)|0);
 var $14=HEAP32[(($vfn_i_i20_i_i129)>>2)];
 var $call_i_i21_i_i145=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$14]($10) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=19;break; } else { label=34;break; }
 case 19: 
 var $cmp_i7_i26_i_i134=($call_i_i21_i_i145|0)==-1;
 if($cmp_i7_i26_i_i134){label=20;break;}else{label=22;break;}
 case 20: 
 HEAP32[(($__sbuf__i11_i_i119)>>2)]=0;
 label=21;break;
 case 21: 
 if($cmp_i_i_i116){var $__a_2=$__a_0;var $33=0;var $cmp_i31_i_i13926=1;label=45;break;}else{var $15=0;var $cmp_i31_i_i13927=1;label=23;break;}
 case 22: 
 var $cmp_i31_i_i139=($10|0)==0;
 var $lnot_i=$cmp_i_i_i116^$cmp_i31_i_i139;
 if($lnot_i){var $15=$10;var $cmp_i31_i_i13927=$cmp_i31_i_i139;label=23;break;}else{var $__a_2=$__a_0;var $33=$10;var $cmp_i31_i_i13926=$cmp_i31_i_i139;label=45;break;}
 case 23: 
 var $cmp_i31_i_i13927;
 var $15;
 var $16=HEAP32[(($__a_end)>>2)];
 var $sub_ptr_lhs_cast=$16;
 var $sub_ptr_rhs_cast=$__a_0;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $17=HEAP8[($__size__i_i)];
 var $conv_i_i158=($17&255);
 var $and_i_i159=$conv_i_i158&1;
 var $tobool_i_i160=($and_i_i159|0)==0;
 var $18=HEAP32[(($__size__i23_i233)>>2)];
 var $shr_i_i12=$conv_i_i158>>>1;
 var $cond_i164=($tobool_i_i160?$shr_i_i12:$18);
 var $cmp=($sub_ptr_sub|0)==($cond_i164|0);
 if($cmp){label=24;break;}else{var $__a_1=$__a_0;label=37;break;}
 case 24: 
 if($tobool_i_i160){label=26;break;}else{label=25;break;}
 case 25: 
 var $19=HEAP32[(($__size__i23_i233)>>2)];
 var $cond_i245=$19;var $cond_i20430=$19;label=27;break;
 case 26: 
 var $shr_i_i20214=$conv_i_i158>>>1;
 var $shr_i_i24315=$conv_i_i158>>>1;
 var $cond_i245=$shr_i_i24315;var $cond_i20430=$shr_i_i20214;label=27;break;
 case 27: 
 var $cond_i20430;
 var $cond_i245;
 var $mul=$cond_i245<<1;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$mul,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=28;break; } else { label=34;break; }
 case 28: 
 var $20=HEAP8[($__size__i_i)];
 var $and_i_i315=$20&1;
 var $tobool_i_i316=(($and_i_i315<<24)>>24)==0;
 if($tobool_i_i316){var $cond_i327=10;label=30;break;}else{label=29;break;}
 case 29: 
 var $21=HEAP32[(($__cap__i_i323)>>2)];
 var $and_i11_i324=$21&-2;
 var $phitmp16=((($and_i11_i324)-(1))|0);
 var $cond_i327=$phitmp16;label=30;break;
 case 30: 
 var $cond_i327;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$cond_i327,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=31;break; } else { label=34;break; }
 case 31: 
 var $22=HEAP8[($__size__i_i)];
 var $and_i_i_i358=$22&1;
 var $tobool_i_i_i359=(($and_i_i_i358<<24)>>24)==0;
 if($tobool_i_i_i359){var $cond_i_i377=$arrayidx_i_i_i375_pre_phi;label=33;break;}else{label=32;break;}
 case 32: 
 var $23=HEAP32[(($__data__i21_i_i366_pre_phi)>>2)];
 var $cond_i_i377=$23;label=33;break;
 case 33: 
 var $cond_i_i377;
 var $add_ptr=(($cond_i_i377+$cond_i20430)|0);
 HEAP32[(($__a_end)>>2)]=$add_ptr;
 var $__a_1=$cond_i_i377;label=37;break;
 case 34: 
 var $lpad_loopexit21$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_loopexit21$1 = tempRet0;
 var $lpad_phi$1=$lpad_loopexit21$1;var $lpad_phi$0=$lpad_loopexit21$0;label=36;break;
 case 35: 
 var $lpad_nonloopexit22$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_nonloopexit22$1 = tempRet0;
 var $lpad_phi$1=$lpad_nonloopexit22$1;var $lpad_phi$0=$lpad_nonloopexit22$0;label=36;break;
 case 36: 
 var $lpad_phi$0;
 var $lpad_phi$1;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 ___resumeException($lpad_phi$0)
 case 37: 
 var $__a_1;
 var $__ninp__i_i387=(($9+12)|0);
 var $24=HEAP32[(($__ninp__i_i387)>>2)];
 var $__einp__i_i388=(($9+16)|0);
 var $25=HEAP32[(($__einp__i_i388)>>2)];
 var $cmp_i_i389=($24|0)==($25|0);
 if($cmp_i_i389){label=38;break;}else{label=40;break;}
 case 38: 
 var $26=$9;
 var $vtable_i_i390=HEAP32[(($26)>>2)];
 var $vfn_i_i391=(($vtable_i_i390+36)|0);
 var $27=HEAP32[(($vfn_i_i391)>>2)];
 var $call_i_i397=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$27]($9) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=39;break; } else { label=34;break; }
 case 39: 
 var $extract_t=(($call_i_i397)&255);
 var $retval_i_i381_0_off0=$extract_t;label=41;break;
 case 40: 
 var $28=HEAP8[($24)];
 var $retval_i_i381_0_off0=$28;label=41;break;
 case 41: 
 var $retval_i_i381_0_off0;
 var $call21=__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($retval_i_i381_0_off0,$retval_0_i,$__a_1,$__a_end,$__dc,$3,$__grouping,$arraydecay5,$__g_end,$arraydecay);
 var $tobool=($call21|0)==0;
 if($tobool){label=42;break;}else{var $__a_2=$__a_1;var $33=$15;var $cmp_i31_i_i13926=$cmp_i31_i_i13927;label=45;break;}
 case 42: 
 var $29=HEAP32[(($__ninp__i_i387)>>2)];
 var $30=HEAP32[(($__einp__i_i388)>>2)];
 var $cmp_i_i292=($29|0)==($30|0);
 if($cmp_i_i292){label=43;break;}else{label=44;break;}
 case 43: 
 var $31=$9;
 var $vtable_i_i=HEAP32[(($31)>>2)];
 var $vfn_i_i=(($vtable_i_i+40)|0);
 var $32=HEAP32[(($vfn_i_i)>>2)];
 var $call_i_i294=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$32]($9) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $__a_0=$__a_1;var $4=$9;label=10;break; } else { label=34;break; }
 case 44: 
 var $incdec_ptr_i_i=(($29+1)|0);
 HEAP32[(($__ninp__i_i387)>>2)]=$incdec_ptr_i_i;
 var $__a_0=$__a_1;var $4=$9;label=10;break;
 case 45: 
 var $cmp_i31_i_i13926;
 var $33;
 var $__a_2;
 var $__size__i_i264=$__grouping;
 var $34=HEAP8[($__size__i_i264)];
 var $conv_i_i265=($34&255);
 var $and_i_i266=$conv_i_i265&1;
 var $tobool_i_i267=($and_i_i266|0)==0;
 if($tobool_i_i267){label=47;break;}else{label=46;break;}
 case 46: 
 var $__size__i23_i274=(($__grouping+4)|0);
 var $35=HEAP32[(($__size__i23_i274)>>2)];
 var $cond_i286=$35;label=48;break;
 case 47: 
 var $shr_i_i28411=$conv_i_i265>>>1;
 var $cond_i286=$shr_i_i28411;label=48;break;
 case 48: 
 var $cond_i286;
 var $cmp27=($cond_i286|0)==0;
 if($cmp27){label=51;break;}else{label=49;break;}
 case 49: 
 var $36=HEAP32[(($__g_end)>>2)];
 var $sub_ptr_lhs_cast29=$36;
 var $sub_ptr_rhs_cast30=$__g;
 var $sub_ptr_sub31=((($sub_ptr_lhs_cast29)-($sub_ptr_rhs_cast30))|0);
 var $cmp32=($sub_ptr_sub31|0)<160;
 if($cmp32){label=50;break;}else{label=51;break;}
 case 50: 
 var $37=HEAP32[(($__dc)>>2)];
 var $incdec_ptr=(($36+4)|0);
 HEAP32[(($__g_end)>>2)]=$incdec_ptr;
 HEAP32[(($36)>>2)]=$37;
 label=51;break;
 case 51: 
 var $38=HEAP32[(($__a_end)>>2)];
 var $call36=(function() { try { __THREW__ = 0; return __ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji($__a_2,$38,$__err,$retval_0_i) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=52;break; } else { label=35;break; }
 case 52: 
 HEAP32[(($__v)>>2)]=$call36;
 var $39=HEAP32[(($__g_end)>>2)];
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$arraydecay5,$39,$__err);
 if($cmp_i_i_i116){var $44=0;label=57;break;}else{label=53;break;}
 case 53: 
 var $__ninp__i_i_i_i=(($9+12)|0);
 var $40=HEAP32[(($__ninp__i_i_i_i)>>2)];
 var $__einp__i_i_i_i=(($9+16)|0);
 var $41=HEAP32[(($__einp__i_i_i_i)>>2)];
 var $cmp_i_i_i_i=($40|0)==($41|0);
 if($cmp_i_i_i_i){label=54;break;}else{var $44=$9;label=57;break;}
 case 54: 
 var $42=$9;
 var $vtable_i_i_i_i=HEAP32[(($42)>>2)];
 var $vfn_i_i_i_i=(($vtable_i_i_i_i+36)|0);
 var $43=HEAP32[(($vfn_i_i_i_i)>>2)];
 var $call_i_i_i_i51=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$43]($9) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=55;break; } else { label=35;break; }
 case 55: 
 var $cmp_i7_i_i_i=($call_i_i_i_i51|0)==-1;
 if($cmp_i7_i_i_i){label=56;break;}else{var $44=$9;label=57;break;}
 case 56: 
 HEAP32[(($__sbuf__i_i_i97)>>2)]=0;
 var $44=0;label=57;break;
 case 57: 
 var $44;
 var $cmp_i_i_i50=($44|0)==0;
 if($cmp_i31_i_i13926){label=62;break;}else{label=58;break;}
 case 58: 
 var $__ninp__i_i15_i_i=(($33+12)|0);
 var $45=HEAP32[(($__ninp__i_i15_i_i)>>2)];
 var $__einp__i_i16_i_i=(($33+16)|0);
 var $46=HEAP32[(($__einp__i_i16_i_i)>>2)];
 var $cmp_i_i17_i_i=($45|0)==($46|0);
 if($cmp_i_i17_i_i){label=59;break;}else{label=63;break;}
 case 59: 
 var $47=$33;
 var $vtable_i_i19_i_i=HEAP32[(($47)>>2)];
 var $vfn_i_i20_i_i=(($vtable_i_i19_i_i+36)|0);
 var $48=HEAP32[(($vfn_i_i20_i_i)>>2)];
 var $call_i_i21_i_i52=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$48]($33) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=60;break; } else { label=35;break; }
 case 60: 
 var $cmp_i7_i26_i_i=($call_i_i21_i_i52|0)==-1;
 if($cmp_i7_i26_i_i){label=61;break;}else{label=63;break;}
 case 61: 
 HEAP32[(($__sbuf__i11_i_i119)>>2)]=0;
 label=62;break;
 case 62: 
 if($cmp_i_i_i50){label=64;break;}else{label=65;break;}
 case 63: 
 var $cmp_i31_i_i=($33|0)==0;
 var $cmp_i_itmp=$cmp_i_i_i50^$cmp_i31_i_i;
 if($cmp_i_itmp){label=65;break;}else{label=64;break;}
 case 64: 
 var $49=HEAP32[(($__err)>>2)];
 var $or=$49|2;
 HEAP32[(($__err)>>2)]=$or;
 label=65;break;
 case 65: 
 var $50=(($agg_result)|0);
 HEAP32[(($50)>>2)]=$44;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 STACKTOP=sp;return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy($agg_result,$this,$__b,$__e,$__iob,$__err,$__v){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 var $agg_tmp=sp;
 var $agg_tmp2=(sp)+(8);
 var $0=(($__b)|0);
 var $1=HEAP32[(($0)>>2)];
 var $2=(($agg_tmp)|0);
 HEAP32[(($2)>>2)]=$1;
 var $3=(($__e)|0);
 var $4=HEAP32[(($3)>>2)];
 var $5=(($agg_tmp2)|0);
 HEAP32[(($5)>>2)]=$4;
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($agg_result,0,$agg_tmp,$agg_tmp2,$__iob,$__err,$__v);
 STACKTOP=sp;return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($agg_result,$this,$__b,$__e,$__iob,$__err,$__v){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+72)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__atoms=sp;
 var $__thousands_sep=(sp)+(32);
 var $__grouping=(sp)+(40);
 var $__buf=(sp)+(56);
 var $__size__i_i=$__buf;
 var $__a_end=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__g=STACKTOP;STACKTOP = (STACKTOP + 160)|0;(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__g_end=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__dc=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__fmtflags__i_i=(($__iob+4)|0);
 var $0=HEAP32[(($__fmtflags__i_i)>>2)];
 var $and_i=$0&74;
 if(($and_i|0)==8){ label=2;break;}else if(($and_i|0)==0){ label=3;break;}else if(($and_i|0)==64){ var $retval_0_i=8;label=5;break;}else{label=4;break;}
 case 2: 
 var $retval_0_i=16;label=5;break;
 case 3: 
 var $retval_0_i=0;label=5;break;
 case 4: 
 var $retval_0_i=10;label=5;break;
 case 5: 
 var $retval_0_i;
 var $arraydecay=(($__atoms)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$arraydecay,$__thousands_sep);
 HEAP32[(($__size__i_i)>>2)]=0; HEAP32[((($__size__i_i)+(4))>>2)]=0; HEAP32[((($__size__i_i)+(8))>>2)]=0;
 var $__s_i_i=$__buf;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,10,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=6;break; } else { label=35;break; }
 case 6: 
 var $1=HEAP8[($__size__i_i)];
 var $and_i_i_i=$1&1;
 var $tobool_i_i_i77=(($and_i_i_i<<24)>>24)==0;
 if($tobool_i_i_i77){label=8;break;}else{label=7;break;}
 case 7: 
 var $__data__i21_i_i=(($__buf+8)|0);
 var $2=HEAP32[(($__data__i21_i_i)>>2)];
 var $arrayidx_i_i_i375_pre=(($__s_i_i+1)|0);
 var $cond_i_i=$2;var $arrayidx_i_i_i375_pre_phi=$arrayidx_i_i_i375_pre;var $__data__i21_i_i366_pre_phi=$__data__i21_i_i;label=9;break;
 case 8: 
 var $arrayidx_i_i_i78=(($__s_i_i+1)|0);
 var $__data__i21_i_i366_pre=(($__buf+8)|0);
 var $cond_i_i=$arrayidx_i_i_i78;var $arrayidx_i_i_i375_pre_phi=$arrayidx_i_i_i78;var $__data__i21_i_i366_pre_phi=$__data__i21_i_i366_pre;label=9;break;
 case 9: 
 var $__data__i21_i_i366_pre_phi;
 var $arrayidx_i_i_i375_pre_phi;
 var $cond_i_i;
 HEAP32[(($__a_end)>>2)]=$cond_i_i;
 var $arraydecay5=(($__g)|0);
 HEAP32[(($__g_end)>>2)]=$arraydecay5;
 HEAP32[(($__dc)>>2)]=0;
 var $__sbuf__i_i_i97=(($__b)|0);
 var $__sbuf__i11_i_i119=(($__e)|0);
 var $__cap__i_i323=(($__buf)|0);
 var $__size__i23_i233=(($__buf+4)|0);
 var $3=HEAP8[($__thousands_sep)];
 var $_pre=HEAP32[(($__sbuf__i_i_i97)>>2)];
 var $__a_0=$cond_i_i;var $4=$_pre;label=10;break;
 case 10: 
 var $4;
 var $__a_0;
 var $tobool_i_i_i98=($4|0)==0;
 if($tobool_i_i_i98){var $9=0;label=15;break;}else{label=11;break;}
 case 11: 
 var $__ninp__i_i_i_i101=(($4+12)|0);
 var $5=HEAP32[(($__ninp__i_i_i_i101)>>2)];
 var $__einp__i_i_i_i102=(($4+16)|0);
 var $6=HEAP32[(($__einp__i_i_i_i102)>>2)];
 var $cmp_i_i_i_i103=($5|0)==($6|0);
 if($cmp_i_i_i_i103){label=12;break;}else{var $9=$4;label=15;break;}
 case 12: 
 var $7=$4;
 var $vtable_i_i_i_i105=HEAP32[(($7)>>2)];
 var $vfn_i_i_i_i106=(($vtable_i_i_i_i105+36)|0);
 var $8=HEAP32[(($vfn_i_i_i_i106)>>2)];
 var $call_i_i_i_i143=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$8]($4) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=13;break; } else { label=34;break; }
 case 13: 
 var $cmp_i7_i_i_i111=($call_i_i_i_i143|0)==-1;
 if($cmp_i7_i_i_i111){label=14;break;}else{var $9=$4;label=15;break;}
 case 14: 
 HEAP32[(($__sbuf__i_i_i97)>>2)]=0;
 var $9=0;label=15;break;
 case 15: 
 var $9;
 var $cmp_i_i_i116=($9|0)==0;
 var $10=HEAP32[(($__sbuf__i11_i_i119)>>2)];
 var $tobool_i12_i_i120=($10|0)==0;
 if($tobool_i12_i_i120){label=21;break;}else{label=16;break;}
 case 16: 
 var $__ninp__i_i15_i_i124=(($10+12)|0);
 var $11=HEAP32[(($__ninp__i_i15_i_i124)>>2)];
 var $__einp__i_i16_i_i125=(($10+16)|0);
 var $12=HEAP32[(($__einp__i_i16_i_i125)>>2)];
 var $cmp_i_i17_i_i126=($11|0)==($12|0);
 if($cmp_i_i17_i_i126){label=18;break;}else{label=17;break;}
 case 17: 
 if($cmp_i_i_i116){var $15=$10;var $cmp_i31_i_i13927=0;label=23;break;}else{var $__a_2=$__a_0;var $33=$10;var $cmp_i31_i_i13926=0;label=45;break;}
 case 18: 
 var $13=$10;
 var $vtable_i_i19_i_i128=HEAP32[(($13)>>2)];
 var $vfn_i_i20_i_i129=(($vtable_i_i19_i_i128+36)|0);
 var $14=HEAP32[(($vfn_i_i20_i_i129)>>2)];
 var $call_i_i21_i_i145=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$14]($10) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=19;break; } else { label=34;break; }
 case 19: 
 var $cmp_i7_i26_i_i134=($call_i_i21_i_i145|0)==-1;
 if($cmp_i7_i26_i_i134){label=20;break;}else{label=22;break;}
 case 20: 
 HEAP32[(($__sbuf__i11_i_i119)>>2)]=0;
 label=21;break;
 case 21: 
 if($cmp_i_i_i116){var $__a_2=$__a_0;var $33=0;var $cmp_i31_i_i13926=1;label=45;break;}else{var $15=0;var $cmp_i31_i_i13927=1;label=23;break;}
 case 22: 
 var $cmp_i31_i_i139=($10|0)==0;
 var $lnot_i=$cmp_i_i_i116^$cmp_i31_i_i139;
 if($lnot_i){var $15=$10;var $cmp_i31_i_i13927=$cmp_i31_i_i139;label=23;break;}else{var $__a_2=$__a_0;var $33=$10;var $cmp_i31_i_i13926=$cmp_i31_i_i139;label=45;break;}
 case 23: 
 var $cmp_i31_i_i13927;
 var $15;
 var $16=HEAP32[(($__a_end)>>2)];
 var $sub_ptr_lhs_cast=$16;
 var $sub_ptr_rhs_cast=$__a_0;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $17=HEAP8[($__size__i_i)];
 var $conv_i_i158=($17&255);
 var $and_i_i159=$conv_i_i158&1;
 var $tobool_i_i160=($and_i_i159|0)==0;
 var $18=HEAP32[(($__size__i23_i233)>>2)];
 var $shr_i_i12=$conv_i_i158>>>1;
 var $cond_i164=($tobool_i_i160?$shr_i_i12:$18);
 var $cmp=($sub_ptr_sub|0)==($cond_i164|0);
 if($cmp){label=24;break;}else{var $__a_1=$__a_0;label=37;break;}
 case 24: 
 if($tobool_i_i160){label=26;break;}else{label=25;break;}
 case 25: 
 var $19=HEAP32[(($__size__i23_i233)>>2)];
 var $cond_i245=$19;var $cond_i20430=$19;label=27;break;
 case 26: 
 var $shr_i_i20214=$conv_i_i158>>>1;
 var $shr_i_i24315=$conv_i_i158>>>1;
 var $cond_i245=$shr_i_i24315;var $cond_i20430=$shr_i_i20214;label=27;break;
 case 27: 
 var $cond_i20430;
 var $cond_i245;
 var $mul=$cond_i245<<1;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$mul,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=28;break; } else { label=34;break; }
 case 28: 
 var $20=HEAP8[($__size__i_i)];
 var $and_i_i315=$20&1;
 var $tobool_i_i316=(($and_i_i315<<24)>>24)==0;
 if($tobool_i_i316){var $cond_i327=10;label=30;break;}else{label=29;break;}
 case 29: 
 var $21=HEAP32[(($__cap__i_i323)>>2)];
 var $and_i11_i324=$21&-2;
 var $phitmp16=((($and_i11_i324)-(1))|0);
 var $cond_i327=$phitmp16;label=30;break;
 case 30: 
 var $cond_i327;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$cond_i327,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=31;break; } else { label=34;break; }
 case 31: 
 var $22=HEAP8[($__size__i_i)];
 var $and_i_i_i358=$22&1;
 var $tobool_i_i_i359=(($and_i_i_i358<<24)>>24)==0;
 if($tobool_i_i_i359){var $cond_i_i377=$arrayidx_i_i_i375_pre_phi;label=33;break;}else{label=32;break;}
 case 32: 
 var $23=HEAP32[(($__data__i21_i_i366_pre_phi)>>2)];
 var $cond_i_i377=$23;label=33;break;
 case 33: 
 var $cond_i_i377;
 var $add_ptr=(($cond_i_i377+$cond_i20430)|0);
 HEAP32[(($__a_end)>>2)]=$add_ptr;
 var $__a_1=$cond_i_i377;label=37;break;
 case 34: 
 var $lpad_loopexit21$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_loopexit21$1 = tempRet0;
 var $lpad_phi$1=$lpad_loopexit21$1;var $lpad_phi$0=$lpad_loopexit21$0;label=36;break;
 case 35: 
 var $lpad_nonloopexit22$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_nonloopexit22$1 = tempRet0;
 var $lpad_phi$1=$lpad_nonloopexit22$1;var $lpad_phi$0=$lpad_nonloopexit22$0;label=36;break;
 case 36: 
 var $lpad_phi$0;
 var $lpad_phi$1;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 ___resumeException($lpad_phi$0)
 case 37: 
 var $__a_1;
 var $__ninp__i_i387=(($9+12)|0);
 var $24=HEAP32[(($__ninp__i_i387)>>2)];
 var $__einp__i_i388=(($9+16)|0);
 var $25=HEAP32[(($__einp__i_i388)>>2)];
 var $cmp_i_i389=($24|0)==($25|0);
 if($cmp_i_i389){label=38;break;}else{label=40;break;}
 case 38: 
 var $26=$9;
 var $vtable_i_i390=HEAP32[(($26)>>2)];
 var $vfn_i_i391=(($vtable_i_i390+36)|0);
 var $27=HEAP32[(($vfn_i_i391)>>2)];
 var $call_i_i397=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$27]($9) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=39;break; } else { label=34;break; }
 case 39: 
 var $extract_t=(($call_i_i397)&255);
 var $retval_i_i381_0_off0=$extract_t;label=41;break;
 case 40: 
 var $28=HEAP8[($24)];
 var $retval_i_i381_0_off0=$28;label=41;break;
 case 41: 
 var $retval_i_i381_0_off0;
 var $call21=__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($retval_i_i381_0_off0,$retval_0_i,$__a_1,$__a_end,$__dc,$3,$__grouping,$arraydecay5,$__g_end,$arraydecay);
 var $tobool=($call21|0)==0;
 if($tobool){label=42;break;}else{var $__a_2=$__a_1;var $33=$15;var $cmp_i31_i_i13926=$cmp_i31_i_i13927;label=45;break;}
 case 42: 
 var $29=HEAP32[(($__ninp__i_i387)>>2)];
 var $30=HEAP32[(($__einp__i_i388)>>2)];
 var $cmp_i_i292=($29|0)==($30|0);
 if($cmp_i_i292){label=43;break;}else{label=44;break;}
 case 43: 
 var $31=$9;
 var $vtable_i_i=HEAP32[(($31)>>2)];
 var $vfn_i_i=(($vtable_i_i+40)|0);
 var $32=HEAP32[(($vfn_i_i)>>2)];
 var $call_i_i294=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$32]($9) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $__a_0=$__a_1;var $4=$9;label=10;break; } else { label=34;break; }
 case 44: 
 var $incdec_ptr_i_i=(($29+1)|0);
 HEAP32[(($__ninp__i_i387)>>2)]=$incdec_ptr_i_i;
 var $__a_0=$__a_1;var $4=$9;label=10;break;
 case 45: 
 var $cmp_i31_i_i13926;
 var $33;
 var $__a_2;
 var $__size__i_i264=$__grouping;
 var $34=HEAP8[($__size__i_i264)];
 var $conv_i_i265=($34&255);
 var $and_i_i266=$conv_i_i265&1;
 var $tobool_i_i267=($and_i_i266|0)==0;
 if($tobool_i_i267){label=47;break;}else{label=46;break;}
 case 46: 
 var $__size__i23_i274=(($__grouping+4)|0);
 var $35=HEAP32[(($__size__i23_i274)>>2)];
 var $cond_i286=$35;label=48;break;
 case 47: 
 var $shr_i_i28411=$conv_i_i265>>>1;
 var $cond_i286=$shr_i_i28411;label=48;break;
 case 48: 
 var $cond_i286;
 var $cmp27=($cond_i286|0)==0;
 if($cmp27){label=51;break;}else{label=49;break;}
 case 49: 
 var $36=HEAP32[(($__g_end)>>2)];
 var $sub_ptr_lhs_cast29=$36;
 var $sub_ptr_rhs_cast30=$__g;
 var $sub_ptr_sub31=((($sub_ptr_lhs_cast29)-($sub_ptr_rhs_cast30))|0);
 var $cmp32=($sub_ptr_sub31|0)<160;
 if($cmp32){label=50;break;}else{label=51;break;}
 case 50: 
 var $37=HEAP32[(($__dc)>>2)];
 var $incdec_ptr=(($36+4)|0);
 HEAP32[(($__g_end)>>2)]=$incdec_ptr;
 HEAP32[(($36)>>2)]=$37;
 label=51;break;
 case 51: 
 var $38=HEAP32[(($__a_end)>>2)];
 var $call36$r=(function() { try { __THREW__ = 0; return __ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji($__a_2,$38,$__err,$retval_0_i) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();var $call36$0=$call36$r;var $call36$1=tempRet0;if (!__THREW__) { label=52;break; } else { label=35;break; }
 case 52: 
 var $st$0$0=(($__v)|0);
 HEAP32[(($st$0$0)>>2)]=$call36$0;
 var $st$1$1=(($__v+4)|0);
 HEAP32[(($st$1$1)>>2)]=$call36$1;
 var $39=HEAP32[(($__g_end)>>2)];
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$arraydecay5,$39,$__err);
 if($cmp_i_i_i116){var $44=0;label=57;break;}else{label=53;break;}
 case 53: 
 var $__ninp__i_i_i_i=(($9+12)|0);
 var $40=HEAP32[(($__ninp__i_i_i_i)>>2)];
 var $__einp__i_i_i_i=(($9+16)|0);
 var $41=HEAP32[(($__einp__i_i_i_i)>>2)];
 var $cmp_i_i_i_i=($40|0)==($41|0);
 if($cmp_i_i_i_i){label=54;break;}else{var $44=$9;label=57;break;}
 case 54: 
 var $42=$9;
 var $vtable_i_i_i_i=HEAP32[(($42)>>2)];
 var $vfn_i_i_i_i=(($vtable_i_i_i_i+36)|0);
 var $43=HEAP32[(($vfn_i_i_i_i)>>2)];
 var $call_i_i_i_i51=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$43]($9) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=55;break; } else { label=35;break; }
 case 55: 
 var $cmp_i7_i_i_i=($call_i_i_i_i51|0)==-1;
 if($cmp_i7_i_i_i){label=56;break;}else{var $44=$9;label=57;break;}
 case 56: 
 HEAP32[(($__sbuf__i_i_i97)>>2)]=0;
 var $44=0;label=57;break;
 case 57: 
 var $44;
 var $cmp_i_i_i50=($44|0)==0;
 if($cmp_i31_i_i13926){label=62;break;}else{label=58;break;}
 case 58: 
 var $__ninp__i_i15_i_i=(($33+12)|0);
 var $45=HEAP32[(($__ninp__i_i15_i_i)>>2)];
 var $__einp__i_i16_i_i=(($33+16)|0);
 var $46=HEAP32[(($__einp__i_i16_i_i)>>2)];
 var $cmp_i_i17_i_i=($45|0)==($46|0);
 if($cmp_i_i17_i_i){label=59;break;}else{label=63;break;}
 case 59: 
 var $47=$33;
 var $vtable_i_i19_i_i=HEAP32[(($47)>>2)];
 var $vfn_i_i20_i_i=(($vtable_i_i19_i_i+36)|0);
 var $48=HEAP32[(($vfn_i_i20_i_i)>>2)];
 var $call_i_i21_i_i52=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$48]($33) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=60;break; } else { label=35;break; }
 case 60: 
 var $cmp_i7_i26_i_i=($call_i_i21_i_i52|0)==-1;
 if($cmp_i7_i26_i_i){label=61;break;}else{label=63;break;}
 case 61: 
 HEAP32[(($__sbuf__i11_i_i119)>>2)]=0;
 label=62;break;
 case 62: 
 if($cmp_i_i_i50){label=64;break;}else{label=65;break;}
 case 63: 
 var $cmp_i31_i_i=($33|0)==0;
 var $cmp_i_itmp=$cmp_i_i_i50^$cmp_i31_i_i;
 if($cmp_i_itmp){label=65;break;}else{label=64;break;}
 case 64: 
 var $49=HEAP32[(($__err)>>2)];
 var $or=$49|2;
 HEAP32[(($__err)>>2)]=$or;
 label=65;break;
 case 65: 
 var $50=(($agg_result)|0);
 HEAP32[(($50)>>2)]=$44;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 STACKTOP=sp;return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf($agg_result,$this,$__b,$__e,$__iob,$__err,$__v){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 var $agg_tmp=sp;
 var $agg_tmp2=(sp)+(8);
 var $0=(($__b)|0);
 var $1=HEAP32[(($0)>>2)];
 var $2=(($agg_tmp)|0);
 HEAP32[(($2)>>2)]=$1;
 var $3=(($__e)|0);
 var $4=HEAP32[(($3)>>2)];
 var $5=(($agg_tmp2)|0);
 HEAP32[(($5)>>2)]=$4;
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($agg_result,0,$agg_tmp,$agg_tmp2,$__iob,$__err,$__v);
 STACKTOP=sp;return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($agg_result,$this,$__b,$__e,$__iob,$__err,$__v){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+80)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__atoms=sp;
 var $__decimal_point=(sp)+(32);
 var $__thousands_sep=(sp)+(40);
 var $__grouping=(sp)+(48);
 var $__buf=(sp)+(64);
 var $__size__i_i=$__buf;
 var $__a_end=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__g=STACKTOP;STACKTOP = (STACKTOP + 160)|0;(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__g_end=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__dc=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__in_units=STACKTOP;STACKTOP = (STACKTOP + 1)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__exp=STACKTOP;STACKTOP = (STACKTOP + 1)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $arraydecay=(($__atoms)|0);
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping,$__iob,$arraydecay,$__decimal_point,$__thousands_sep);
 HEAP32[(($__size__i_i)>>2)]=0; HEAP32[((($__size__i_i)+(4))>>2)]=0; HEAP32[((($__size__i_i)+(8))>>2)]=0;
 var $__s_i_i=$__buf;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,10,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=31;break; }
 case 2: 
 var $0=HEAP8[($__size__i_i)];
 var $and_i_i_i=$0&1;
 var $tobool_i_i_i78=(($and_i_i_i<<24)>>24)==0;
 if($tobool_i_i_i78){label=4;break;}else{label=3;break;}
 case 3: 
 var $__data__i21_i_i=(($__buf+8)|0);
 var $1=HEAP32[(($__data__i21_i_i)>>2)];
 var $arrayidx_i_i_i376_pre=(($__s_i_i+1)|0);
 var $cond_i_i=$1;var $arrayidx_i_i_i376_pre_phi=$arrayidx_i_i_i376_pre;var $__data__i21_i_i367_pre_phi=$__data__i21_i_i;label=5;break;
 case 4: 
 var $arrayidx_i_i_i79=(($__s_i_i+1)|0);
 var $__data__i21_i_i367_pre=(($__buf+8)|0);
 var $cond_i_i=$arrayidx_i_i_i79;var $arrayidx_i_i_i376_pre_phi=$arrayidx_i_i_i79;var $__data__i21_i_i367_pre_phi=$__data__i21_i_i367_pre;label=5;break;
 case 5: 
 var $__data__i21_i_i367_pre_phi;
 var $arrayidx_i_i_i376_pre_phi;
 var $cond_i_i;
 HEAP32[(($__a_end)>>2)]=$cond_i_i;
 var $arraydecay4=(($__g)|0);
 HEAP32[(($__g_end)>>2)]=$arraydecay4;
 HEAP32[(($__dc)>>2)]=0;
 HEAP8[($__in_units)]=1;
 HEAP8[($__exp)]=69;
 var $__sbuf__i_i_i98=(($__b)|0);
 var $__sbuf__i11_i_i120=(($__e)|0);
 var $__cap__i_i324=(($__buf)|0);
 var $__size__i23_i234=(($__buf+4)|0);
 var $2=HEAP8[($__decimal_point)];
 var $3=HEAP8[($__thousands_sep)];
 var $_pre=HEAP32[(($__sbuf__i_i_i98)>>2)];
 var $__a_0=$cond_i_i;var $4=$_pre;label=6;break;
 case 6: 
 var $4;
 var $__a_0;
 var $tobool_i_i_i99=($4|0)==0;
 if($tobool_i_i_i99){var $9=0;label=11;break;}else{label=7;break;}
 case 7: 
 var $__ninp__i_i_i_i102=(($4+12)|0);
 var $5=HEAP32[(($__ninp__i_i_i_i102)>>2)];
 var $__einp__i_i_i_i103=(($4+16)|0);
 var $6=HEAP32[(($__einp__i_i_i_i103)>>2)];
 var $cmp_i_i_i_i104=($5|0)==($6|0);
 if($cmp_i_i_i_i104){label=8;break;}else{var $9=$4;label=11;break;}
 case 8: 
 var $7=$4;
 var $vtable_i_i_i_i106=HEAP32[(($7)>>2)];
 var $vfn_i_i_i_i107=(($vtable_i_i_i_i106+36)|0);
 var $8=HEAP32[(($vfn_i_i_i_i107)>>2)];
 var $call_i_i_i_i144=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$8]($4) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=9;break; } else { label=30;break; }
 case 9: 
 var $cmp_i7_i_i_i112=($call_i_i_i_i144|0)==-1;
 if($cmp_i7_i_i_i112){label=10;break;}else{var $9=$4;label=11;break;}
 case 10: 
 HEAP32[(($__sbuf__i_i_i98)>>2)]=0;
 var $9=0;label=11;break;
 case 11: 
 var $9;
 var $cmp_i_i_i117=($9|0)==0;
 var $10=HEAP32[(($__sbuf__i11_i_i120)>>2)];
 var $tobool_i12_i_i121=($10|0)==0;
 if($tobool_i12_i_i121){label=17;break;}else{label=12;break;}
 case 12: 
 var $__ninp__i_i15_i_i125=(($10+12)|0);
 var $11=HEAP32[(($__ninp__i_i15_i_i125)>>2)];
 var $__einp__i_i16_i_i126=(($10+16)|0);
 var $12=HEAP32[(($__einp__i_i16_i_i126)>>2)];
 var $cmp_i_i17_i_i127=($11|0)==($12|0);
 if($cmp_i_i17_i_i127){label=14;break;}else{label=13;break;}
 case 13: 
 if($cmp_i_i_i117){var $15=$10;var $cmp_i31_i_i14025=0;label=19;break;}else{var $__a_2=$__a_0;var $33=$10;var $cmp_i31_i_i14024=0;label=41;break;}
 case 14: 
 var $13=$10;
 var $vtable_i_i19_i_i129=HEAP32[(($13)>>2)];
 var $vfn_i_i20_i_i130=(($vtable_i_i19_i_i129+36)|0);
 var $14=HEAP32[(($vfn_i_i20_i_i130)>>2)];
 var $call_i_i21_i_i146=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$14]($10) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=15;break; } else { label=30;break; }
 case 15: 
 var $cmp_i7_i26_i_i135=($call_i_i21_i_i146|0)==-1;
 if($cmp_i7_i26_i_i135){label=16;break;}else{label=18;break;}
 case 16: 
 HEAP32[(($__sbuf__i11_i_i120)>>2)]=0;
 label=17;break;
 case 17: 
 if($cmp_i_i_i117){var $__a_2=$__a_0;var $33=0;var $cmp_i31_i_i14024=1;label=41;break;}else{var $15=0;var $cmp_i31_i_i14025=1;label=19;break;}
 case 18: 
 var $cmp_i31_i_i140=($10|0)==0;
 var $lnot_i=$cmp_i_i_i117^$cmp_i31_i_i140;
 if($lnot_i){var $15=$10;var $cmp_i31_i_i14025=$cmp_i31_i_i140;label=19;break;}else{var $__a_2=$__a_0;var $33=$10;var $cmp_i31_i_i14024=$cmp_i31_i_i140;label=41;break;}
 case 19: 
 var $cmp_i31_i_i14025;
 var $15;
 var $16=HEAP32[(($__a_end)>>2)];
 var $sub_ptr_lhs_cast=$16;
 var $sub_ptr_rhs_cast=$__a_0;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $17=HEAP8[($__size__i_i)];
 var $conv_i_i159=($17&255);
 var $and_i_i160=$conv_i_i159&1;
 var $tobool_i_i161=($and_i_i160|0)==0;
 var $18=HEAP32[(($__size__i23_i234)>>2)];
 var $shr_i_i10=$conv_i_i159>>>1;
 var $cond_i165=($tobool_i_i161?$shr_i_i10:$18);
 var $cmp=($sub_ptr_sub|0)==($cond_i165|0);
 if($cmp){label=20;break;}else{var $__a_1=$__a_0;label=33;break;}
 case 20: 
 if($tobool_i_i161){label=22;break;}else{label=21;break;}
 case 21: 
 var $19=HEAP32[(($__size__i23_i234)>>2)];
 var $cond_i246=$19;var $cond_i20528=$19;label=23;break;
 case 22: 
 var $shr_i_i20312=$conv_i_i159>>>1;
 var $shr_i_i24413=$conv_i_i159>>>1;
 var $cond_i246=$shr_i_i24413;var $cond_i20528=$shr_i_i20312;label=23;break;
 case 23: 
 var $cond_i20528;
 var $cond_i246;
 var $mul=$cond_i246<<1;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$mul,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=24;break; } else { label=30;break; }
 case 24: 
 var $20=HEAP8[($__size__i_i)];
 var $and_i_i316=$20&1;
 var $tobool_i_i317=(($and_i_i316<<24)>>24)==0;
 if($tobool_i_i317){var $cond_i328=10;label=26;break;}else{label=25;break;}
 case 25: 
 var $21=HEAP32[(($__cap__i_i324)>>2)];
 var $and_i11_i325=$21&-2;
 var $phitmp14=((($and_i11_i325)-(1))|0);
 var $cond_i328=$phitmp14;label=26;break;
 case 26: 
 var $cond_i328;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$cond_i328,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=27;break; } else { label=30;break; }
 case 27: 
 var $22=HEAP8[($__size__i_i)];
 var $and_i_i_i359=$22&1;
 var $tobool_i_i_i360=(($and_i_i_i359<<24)>>24)==0;
 if($tobool_i_i_i360){var $cond_i_i378=$arrayidx_i_i_i376_pre_phi;label=29;break;}else{label=28;break;}
 case 28: 
 var $23=HEAP32[(($__data__i21_i_i367_pre_phi)>>2)];
 var $cond_i_i378=$23;label=29;break;
 case 29: 
 var $cond_i_i378;
 var $add_ptr=(($cond_i_i378+$cond_i20528)|0);
 HEAP32[(($__a_end)>>2)]=$add_ptr;
 var $__a_1=$cond_i_i378;label=33;break;
 case 30: 
 var $lpad_loopexit19$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_loopexit19$1 = tempRet0;
 var $lpad_phi$1=$lpad_loopexit19$1;var $lpad_phi$0=$lpad_loopexit19$0;label=32;break;
 case 31: 
 var $lpad_nonloopexit20$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_nonloopexit20$1 = tempRet0;
 var $lpad_phi$1=$lpad_nonloopexit20$1;var $lpad_phi$0=$lpad_nonloopexit20$0;label=32;break;
 case 32: 
 var $lpad_phi$0;
 var $lpad_phi$1;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 ___resumeException($lpad_phi$0)
 case 33: 
 var $__a_1;
 var $__ninp__i_i388=(($9+12)|0);
 var $24=HEAP32[(($__ninp__i_i388)>>2)];
 var $__einp__i_i389=(($9+16)|0);
 var $25=HEAP32[(($__einp__i_i389)>>2)];
 var $cmp_i_i390=($24|0)==($25|0);
 if($cmp_i_i390){label=34;break;}else{label=36;break;}
 case 34: 
 var $26=$9;
 var $vtable_i_i391=HEAP32[(($26)>>2)];
 var $vfn_i_i392=(($vtable_i_i391+36)|0);
 var $27=HEAP32[(($vfn_i_i392)>>2)];
 var $call_i_i398=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$27]($9) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=35;break; } else { label=30;break; }
 case 35: 
 var $extract_t=(($call_i_i398)&255);
 var $retval_i_i382_0_off0=$extract_t;label=37;break;
 case 36: 
 var $28=HEAP8[($24)];
 var $retval_i_i382_0_off0=$28;label=37;break;
 case 37: 
 var $retval_i_i382_0_off0;
 var $call20=__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($retval_i_i382_0_off0,$__in_units,$__exp,$__a_1,$__a_end,$2,$3,$__grouping,$arraydecay4,$__g_end,$__dc,$arraydecay);
 var $tobool=($call20|0)==0;
 if($tobool){label=38;break;}else{var $__a_2=$__a_1;var $33=$15;var $cmp_i31_i_i14024=$cmp_i31_i_i14025;label=41;break;}
 case 38: 
 var $29=HEAP32[(($__ninp__i_i388)>>2)];
 var $30=HEAP32[(($__einp__i_i389)>>2)];
 var $cmp_i_i293=($29|0)==($30|0);
 if($cmp_i_i293){label=39;break;}else{label=40;break;}
 case 39: 
 var $31=$9;
 var $vtable_i_i=HEAP32[(($31)>>2)];
 var $vfn_i_i=(($vtable_i_i+40)|0);
 var $32=HEAP32[(($vfn_i_i)>>2)];
 var $call_i_i295=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$32]($9) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $__a_0=$__a_1;var $4=$9;label=6;break; } else { label=30;break; }
 case 40: 
 var $incdec_ptr_i_i=(($29+1)|0);
 HEAP32[(($__ninp__i_i388)>>2)]=$incdec_ptr_i_i;
 var $__a_0=$__a_1;var $4=$9;label=6;break;
 case 41: 
 var $cmp_i31_i_i14024;
 var $33;
 var $__a_2;
 var $__size__i_i265=$__grouping;
 var $34=HEAP8[($__size__i_i265)];
 var $conv_i_i266=($34&255);
 var $and_i_i267=$conv_i_i266&1;
 var $tobool_i_i268=($and_i_i267|0)==0;
 if($tobool_i_i268){label=43;break;}else{label=42;break;}
 case 42: 
 var $__size__i23_i275=(($__grouping+4)|0);
 var $35=HEAP32[(($__size__i23_i275)>>2)];
 var $cond_i287=$35;label=44;break;
 case 43: 
 var $shr_i_i2859=$conv_i_i266>>>1;
 var $cond_i287=$shr_i_i2859;label=44;break;
 case 44: 
 var $cond_i287;
 var $cmp26=($cond_i287|0)==0;
 if($cmp26){label=48;break;}else{label=45;break;}
 case 45: 
 var $36=HEAP8[($__in_units)];
 var $37=$36&1;
 var $tobool27=(($37<<24)>>24)==0;
 if($tobool27){label=48;break;}else{label=46;break;}
 case 46: 
 var $38=HEAP32[(($__g_end)>>2)];
 var $sub_ptr_lhs_cast30=$38;
 var $sub_ptr_rhs_cast31=$__g;
 var $sub_ptr_sub32=((($sub_ptr_lhs_cast30)-($sub_ptr_rhs_cast31))|0);
 var $cmp33=($sub_ptr_sub32|0)<160;
 if($cmp33){label=47;break;}else{label=48;break;}
 case 47: 
 var $39=HEAP32[(($__dc)>>2)];
 var $incdec_ptr=(($38+4)|0);
 HEAP32[(($__g_end)>>2)]=$incdec_ptr;
 HEAP32[(($38)>>2)]=$39;
 label=48;break;
 case 48: 
 var $40=HEAP32[(($__a_end)>>2)];
 var $call37=(function() { try { __THREW__ = 0; return __ZNSt3__115__num_get_floatIfEET_PKcS3_Rj($__a_2,$40,$__err) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=49;break; } else { label=31;break; }
 case 49: 
 HEAPF32[(($__v)>>2)]=$call37;
 var $41=HEAP32[(($__g_end)>>2)];
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$arraydecay4,$41,$__err);
 if($cmp_i_i_i117){var $46=0;label=54;break;}else{label=50;break;}
 case 50: 
 var $__ninp__i_i_i_i=(($9+12)|0);
 var $42=HEAP32[(($__ninp__i_i_i_i)>>2)];
 var $__einp__i_i_i_i=(($9+16)|0);
 var $43=HEAP32[(($__einp__i_i_i_i)>>2)];
 var $cmp_i_i_i_i=($42|0)==($43|0);
 if($cmp_i_i_i_i){label=51;break;}else{var $46=$9;label=54;break;}
 case 51: 
 var $44=$9;
 var $vtable_i_i_i_i=HEAP32[(($44)>>2)];
 var $vfn_i_i_i_i=(($vtable_i_i_i_i+36)|0);
 var $45=HEAP32[(($vfn_i_i_i_i)>>2)];
 var $call_i_i_i_i52=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$45]($9) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=52;break; } else { label=31;break; }
 case 52: 
 var $cmp_i7_i_i_i=($call_i_i_i_i52|0)==-1;
 if($cmp_i7_i_i_i){label=53;break;}else{var $46=$9;label=54;break;}
 case 53: 
 HEAP32[(($__sbuf__i_i_i98)>>2)]=0;
 var $46=0;label=54;break;
 case 54: 
 var $46;
 var $cmp_i_i_i51=($46|0)==0;
 if($cmp_i31_i_i14024){label=59;break;}else{label=55;break;}
 case 55: 
 var $__ninp__i_i15_i_i=(($33+12)|0);
 var $47=HEAP32[(($__ninp__i_i15_i_i)>>2)];
 var $__einp__i_i16_i_i=(($33+16)|0);
 var $48=HEAP32[(($__einp__i_i16_i_i)>>2)];
 var $cmp_i_i17_i_i=($47|0)==($48|0);
 if($cmp_i_i17_i_i){label=56;break;}else{label=60;break;}
 case 56: 
 var $49=$33;
 var $vtable_i_i19_i_i=HEAP32[(($49)>>2)];
 var $vfn_i_i20_i_i=(($vtable_i_i19_i_i+36)|0);
 var $50=HEAP32[(($vfn_i_i20_i_i)>>2)];
 var $call_i_i21_i_i53=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$50]($33) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=57;break; } else { label=31;break; }
 case 57: 
 var $cmp_i7_i26_i_i=($call_i_i21_i_i53|0)==-1;
 if($cmp_i7_i26_i_i){label=58;break;}else{label=60;break;}
 case 58: 
 HEAP32[(($__sbuf__i11_i_i120)>>2)]=0;
 label=59;break;
 case 59: 
 if($cmp_i_i_i51){label=61;break;}else{label=62;break;}
 case 60: 
 var $cmp_i31_i_i=($33|0)==0;
 var $cmp_i_itmp=$cmp_i_i_i51^$cmp_i31_i_i;
 if($cmp_i_itmp){label=62;break;}else{label=61;break;}
 case 61: 
 var $51=HEAP32[(($__err)>>2)];
 var $or=$51|2;
 HEAP32[(($__err)>>2)]=$or;
 label=62;break;
 case 62: 
 var $52=(($agg_result)|0);
 HEAP32[(($52)>>2)]=$46;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 STACKTOP=sp;return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd($agg_result,$this,$__b,$__e,$__iob,$__err,$__v){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 var $agg_tmp=sp;
 var $agg_tmp2=(sp)+(8);
 var $0=(($__b)|0);
 var $1=HEAP32[(($0)>>2)];
 var $2=(($agg_tmp)|0);
 HEAP32[(($2)>>2)]=$1;
 var $3=(($__e)|0);
 var $4=HEAP32[(($3)>>2)];
 var $5=(($agg_tmp2)|0);
 HEAP32[(($5)>>2)]=$4;
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($agg_result,0,$agg_tmp,$agg_tmp2,$__iob,$__err,$__v);
 STACKTOP=sp;return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($agg_result,$this,$__b,$__e,$__iob,$__err,$__v){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+80)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__atoms=sp;
 var $__decimal_point=(sp)+(32);
 var $__thousands_sep=(sp)+(40);
 var $__grouping=(sp)+(48);
 var $__buf=(sp)+(64);
 var $__size__i_i=$__buf;
 var $__a_end=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__g=STACKTOP;STACKTOP = (STACKTOP + 160)|0;(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__g_end=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__dc=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__in_units=STACKTOP;STACKTOP = (STACKTOP + 1)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__exp=STACKTOP;STACKTOP = (STACKTOP + 1)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $arraydecay=(($__atoms)|0);
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping,$__iob,$arraydecay,$__decimal_point,$__thousands_sep);
 HEAP32[(($__size__i_i)>>2)]=0; HEAP32[((($__size__i_i)+(4))>>2)]=0; HEAP32[((($__size__i_i)+(8))>>2)]=0;
 var $__s_i_i=$__buf;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,10,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=31;break; }
 case 2: 
 var $0=HEAP8[($__size__i_i)];
 var $and_i_i_i=$0&1;
 var $tobool_i_i_i78=(($and_i_i_i<<24)>>24)==0;
 if($tobool_i_i_i78){label=4;break;}else{label=3;break;}
 case 3: 
 var $__data__i21_i_i=(($__buf+8)|0);
 var $1=HEAP32[(($__data__i21_i_i)>>2)];
 var $arrayidx_i_i_i376_pre=(($__s_i_i+1)|0);
 var $cond_i_i=$1;var $arrayidx_i_i_i376_pre_phi=$arrayidx_i_i_i376_pre;var $__data__i21_i_i367_pre_phi=$__data__i21_i_i;label=5;break;
 case 4: 
 var $arrayidx_i_i_i79=(($__s_i_i+1)|0);
 var $__data__i21_i_i367_pre=(($__buf+8)|0);
 var $cond_i_i=$arrayidx_i_i_i79;var $arrayidx_i_i_i376_pre_phi=$arrayidx_i_i_i79;var $__data__i21_i_i367_pre_phi=$__data__i21_i_i367_pre;label=5;break;
 case 5: 
 var $__data__i21_i_i367_pre_phi;
 var $arrayidx_i_i_i376_pre_phi;
 var $cond_i_i;
 HEAP32[(($__a_end)>>2)]=$cond_i_i;
 var $arraydecay4=(($__g)|0);
 HEAP32[(($__g_end)>>2)]=$arraydecay4;
 HEAP32[(($__dc)>>2)]=0;
 HEAP8[($__in_units)]=1;
 HEAP8[($__exp)]=69;
 var $__sbuf__i_i_i98=(($__b)|0);
 var $__sbuf__i11_i_i120=(($__e)|0);
 var $__cap__i_i324=(($__buf)|0);
 var $__size__i23_i234=(($__buf+4)|0);
 var $2=HEAP8[($__decimal_point)];
 var $3=HEAP8[($__thousands_sep)];
 var $_pre=HEAP32[(($__sbuf__i_i_i98)>>2)];
 var $__a_0=$cond_i_i;var $4=$_pre;label=6;break;
 case 6: 
 var $4;
 var $__a_0;
 var $tobool_i_i_i99=($4|0)==0;
 if($tobool_i_i_i99){var $9=0;label=11;break;}else{label=7;break;}
 case 7: 
 var $__ninp__i_i_i_i102=(($4+12)|0);
 var $5=HEAP32[(($__ninp__i_i_i_i102)>>2)];
 var $__einp__i_i_i_i103=(($4+16)|0);
 var $6=HEAP32[(($__einp__i_i_i_i103)>>2)];
 var $cmp_i_i_i_i104=($5|0)==($6|0);
 if($cmp_i_i_i_i104){label=8;break;}else{var $9=$4;label=11;break;}
 case 8: 
 var $7=$4;
 var $vtable_i_i_i_i106=HEAP32[(($7)>>2)];
 var $vfn_i_i_i_i107=(($vtable_i_i_i_i106+36)|0);
 var $8=HEAP32[(($vfn_i_i_i_i107)>>2)];
 var $call_i_i_i_i144=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$8]($4) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=9;break; } else { label=30;break; }
 case 9: 
 var $cmp_i7_i_i_i112=($call_i_i_i_i144|0)==-1;
 if($cmp_i7_i_i_i112){label=10;break;}else{var $9=$4;label=11;break;}
 case 10: 
 HEAP32[(($__sbuf__i_i_i98)>>2)]=0;
 var $9=0;label=11;break;
 case 11: 
 var $9;
 var $cmp_i_i_i117=($9|0)==0;
 var $10=HEAP32[(($__sbuf__i11_i_i120)>>2)];
 var $tobool_i12_i_i121=($10|0)==0;
 if($tobool_i12_i_i121){label=17;break;}else{label=12;break;}
 case 12: 
 var $__ninp__i_i15_i_i125=(($10+12)|0);
 var $11=HEAP32[(($__ninp__i_i15_i_i125)>>2)];
 var $__einp__i_i16_i_i126=(($10+16)|0);
 var $12=HEAP32[(($__einp__i_i16_i_i126)>>2)];
 var $cmp_i_i17_i_i127=($11|0)==($12|0);
 if($cmp_i_i17_i_i127){label=14;break;}else{label=13;break;}
 case 13: 
 if($cmp_i_i_i117){var $15=$10;var $cmp_i31_i_i14025=0;label=19;break;}else{var $__a_2=$__a_0;var $33=$10;var $cmp_i31_i_i14024=0;label=41;break;}
 case 14: 
 var $13=$10;
 var $vtable_i_i19_i_i129=HEAP32[(($13)>>2)];
 var $vfn_i_i20_i_i130=(($vtable_i_i19_i_i129+36)|0);
 var $14=HEAP32[(($vfn_i_i20_i_i130)>>2)];
 var $call_i_i21_i_i146=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$14]($10) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=15;break; } else { label=30;break; }
 case 15: 
 var $cmp_i7_i26_i_i135=($call_i_i21_i_i146|0)==-1;
 if($cmp_i7_i26_i_i135){label=16;break;}else{label=18;break;}
 case 16: 
 HEAP32[(($__sbuf__i11_i_i120)>>2)]=0;
 label=17;break;
 case 17: 
 if($cmp_i_i_i117){var $__a_2=$__a_0;var $33=0;var $cmp_i31_i_i14024=1;label=41;break;}else{var $15=0;var $cmp_i31_i_i14025=1;label=19;break;}
 case 18: 
 var $cmp_i31_i_i140=($10|0)==0;
 var $lnot_i=$cmp_i_i_i117^$cmp_i31_i_i140;
 if($lnot_i){var $15=$10;var $cmp_i31_i_i14025=$cmp_i31_i_i140;label=19;break;}else{var $__a_2=$__a_0;var $33=$10;var $cmp_i31_i_i14024=$cmp_i31_i_i140;label=41;break;}
 case 19: 
 var $cmp_i31_i_i14025;
 var $15;
 var $16=HEAP32[(($__a_end)>>2)];
 var $sub_ptr_lhs_cast=$16;
 var $sub_ptr_rhs_cast=$__a_0;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $17=HEAP8[($__size__i_i)];
 var $conv_i_i159=($17&255);
 var $and_i_i160=$conv_i_i159&1;
 var $tobool_i_i161=($and_i_i160|0)==0;
 var $18=HEAP32[(($__size__i23_i234)>>2)];
 var $shr_i_i10=$conv_i_i159>>>1;
 var $cond_i165=($tobool_i_i161?$shr_i_i10:$18);
 var $cmp=($sub_ptr_sub|0)==($cond_i165|0);
 if($cmp){label=20;break;}else{var $__a_1=$__a_0;label=33;break;}
 case 20: 
 if($tobool_i_i161){label=22;break;}else{label=21;break;}
 case 21: 
 var $19=HEAP32[(($__size__i23_i234)>>2)];
 var $cond_i246=$19;var $cond_i20528=$19;label=23;break;
 case 22: 
 var $shr_i_i20312=$conv_i_i159>>>1;
 var $shr_i_i24413=$conv_i_i159>>>1;
 var $cond_i246=$shr_i_i24413;var $cond_i20528=$shr_i_i20312;label=23;break;
 case 23: 
 var $cond_i20528;
 var $cond_i246;
 var $mul=$cond_i246<<1;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$mul,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=24;break; } else { label=30;break; }
 case 24: 
 var $20=HEAP8[($__size__i_i)];
 var $and_i_i316=$20&1;
 var $tobool_i_i317=(($and_i_i316<<24)>>24)==0;
 if($tobool_i_i317){var $cond_i328=10;label=26;break;}else{label=25;break;}
 case 25: 
 var $21=HEAP32[(($__cap__i_i324)>>2)];
 var $and_i11_i325=$21&-2;
 var $phitmp14=((($and_i11_i325)-(1))|0);
 var $cond_i328=$phitmp14;label=26;break;
 case 26: 
 var $cond_i328;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$cond_i328,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=27;break; } else { label=30;break; }
 case 27: 
 var $22=HEAP8[($__size__i_i)];
 var $and_i_i_i359=$22&1;
 var $tobool_i_i_i360=(($and_i_i_i359<<24)>>24)==0;
 if($tobool_i_i_i360){var $cond_i_i378=$arrayidx_i_i_i376_pre_phi;label=29;break;}else{label=28;break;}
 case 28: 
 var $23=HEAP32[(($__data__i21_i_i367_pre_phi)>>2)];
 var $cond_i_i378=$23;label=29;break;
 case 29: 
 var $cond_i_i378;
 var $add_ptr=(($cond_i_i378+$cond_i20528)|0);
 HEAP32[(($__a_end)>>2)]=$add_ptr;
 var $__a_1=$cond_i_i378;label=33;break;
 case 30: 
 var $lpad_loopexit19$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_loopexit19$1 = tempRet0;
 var $lpad_phi$1=$lpad_loopexit19$1;var $lpad_phi$0=$lpad_loopexit19$0;label=32;break;
 case 31: 
 var $lpad_nonloopexit20$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_nonloopexit20$1 = tempRet0;
 var $lpad_phi$1=$lpad_nonloopexit20$1;var $lpad_phi$0=$lpad_nonloopexit20$0;label=32;break;
 case 32: 
 var $lpad_phi$0;
 var $lpad_phi$1;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 ___resumeException($lpad_phi$0)
 case 33: 
 var $__a_1;
 var $__ninp__i_i388=(($9+12)|0);
 var $24=HEAP32[(($__ninp__i_i388)>>2)];
 var $__einp__i_i389=(($9+16)|0);
 var $25=HEAP32[(($__einp__i_i389)>>2)];
 var $cmp_i_i390=($24|0)==($25|0);
 if($cmp_i_i390){label=34;break;}else{label=36;break;}
 case 34: 
 var $26=$9;
 var $vtable_i_i391=HEAP32[(($26)>>2)];
 var $vfn_i_i392=(($vtable_i_i391+36)|0);
 var $27=HEAP32[(($vfn_i_i392)>>2)];
 var $call_i_i398=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$27]($9) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=35;break; } else { label=30;break; }
 case 35: 
 var $extract_t=(($call_i_i398)&255);
 var $retval_i_i382_0_off0=$extract_t;label=37;break;
 case 36: 
 var $28=HEAP8[($24)];
 var $retval_i_i382_0_off0=$28;label=37;break;
 case 37: 
 var $retval_i_i382_0_off0;
 var $call20=__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($retval_i_i382_0_off0,$__in_units,$__exp,$__a_1,$__a_end,$2,$3,$__grouping,$arraydecay4,$__g_end,$__dc,$arraydecay);
 var $tobool=($call20|0)==0;
 if($tobool){label=38;break;}else{var $__a_2=$__a_1;var $33=$15;var $cmp_i31_i_i14024=$cmp_i31_i_i14025;label=41;break;}
 case 38: 
 var $29=HEAP32[(($__ninp__i_i388)>>2)];
 var $30=HEAP32[(($__einp__i_i389)>>2)];
 var $cmp_i_i293=($29|0)==($30|0);
 if($cmp_i_i293){label=39;break;}else{label=40;break;}
 case 39: 
 var $31=$9;
 var $vtable_i_i=HEAP32[(($31)>>2)];
 var $vfn_i_i=(($vtable_i_i+40)|0);
 var $32=HEAP32[(($vfn_i_i)>>2)];
 var $call_i_i295=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$32]($9) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $__a_0=$__a_1;var $4=$9;label=6;break; } else { label=30;break; }
 case 40: 
 var $incdec_ptr_i_i=(($29+1)|0);
 HEAP32[(($__ninp__i_i388)>>2)]=$incdec_ptr_i_i;
 var $__a_0=$__a_1;var $4=$9;label=6;break;
 case 41: 
 var $cmp_i31_i_i14024;
 var $33;
 var $__a_2;
 var $__size__i_i265=$__grouping;
 var $34=HEAP8[($__size__i_i265)];
 var $conv_i_i266=($34&255);
 var $and_i_i267=$conv_i_i266&1;
 var $tobool_i_i268=($and_i_i267|0)==0;
 if($tobool_i_i268){label=43;break;}else{label=42;break;}
 case 42: 
 var $__size__i23_i275=(($__grouping+4)|0);
 var $35=HEAP32[(($__size__i23_i275)>>2)];
 var $cond_i287=$35;label=44;break;
 case 43: 
 var $shr_i_i2859=$conv_i_i266>>>1;
 var $cond_i287=$shr_i_i2859;label=44;break;
 case 44: 
 var $cond_i287;
 var $cmp26=($cond_i287|0)==0;
 if($cmp26){label=48;break;}else{label=45;break;}
 case 45: 
 var $36=HEAP8[($__in_units)];
 var $37=$36&1;
 var $tobool27=(($37<<24)>>24)==0;
 if($tobool27){label=48;break;}else{label=46;break;}
 case 46: 
 var $38=HEAP32[(($__g_end)>>2)];
 var $sub_ptr_lhs_cast30=$38;
 var $sub_ptr_rhs_cast31=$__g;
 var $sub_ptr_sub32=((($sub_ptr_lhs_cast30)-($sub_ptr_rhs_cast31))|0);
 var $cmp33=($sub_ptr_sub32|0)<160;
 if($cmp33){label=47;break;}else{label=48;break;}
 case 47: 
 var $39=HEAP32[(($__dc)>>2)];
 var $incdec_ptr=(($38+4)|0);
 HEAP32[(($__g_end)>>2)]=$incdec_ptr;
 HEAP32[(($38)>>2)]=$39;
 label=48;break;
 case 48: 
 var $40=HEAP32[(($__a_end)>>2)];
 var $call37=(function() { try { __THREW__ = 0; return __ZNSt3__115__num_get_floatIdEET_PKcS3_Rj($__a_2,$40,$__err) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=49;break; } else { label=31;break; }
 case 49: 
 HEAPF64[(($__v)>>3)]=$call37;
 var $41=HEAP32[(($__g_end)>>2)];
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$arraydecay4,$41,$__err);
 if($cmp_i_i_i117){var $46=0;label=54;break;}else{label=50;break;}
 case 50: 
 var $__ninp__i_i_i_i=(($9+12)|0);
 var $42=HEAP32[(($__ninp__i_i_i_i)>>2)];
 var $__einp__i_i_i_i=(($9+16)|0);
 var $43=HEAP32[(($__einp__i_i_i_i)>>2)];
 var $cmp_i_i_i_i=($42|0)==($43|0);
 if($cmp_i_i_i_i){label=51;break;}else{var $46=$9;label=54;break;}
 case 51: 
 var $44=$9;
 var $vtable_i_i_i_i=HEAP32[(($44)>>2)];
 var $vfn_i_i_i_i=(($vtable_i_i_i_i+36)|0);
 var $45=HEAP32[(($vfn_i_i_i_i)>>2)];
 var $call_i_i_i_i52=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$45]($9) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=52;break; } else { label=31;break; }
 case 52: 
 var $cmp_i7_i_i_i=($call_i_i_i_i52|0)==-1;
 if($cmp_i7_i_i_i){label=53;break;}else{var $46=$9;label=54;break;}
 case 53: 
 HEAP32[(($__sbuf__i_i_i98)>>2)]=0;
 var $46=0;label=54;break;
 case 54: 
 var $46;
 var $cmp_i_i_i51=($46|0)==0;
 if($cmp_i31_i_i14024){label=59;break;}else{label=55;break;}
 case 55: 
 var $__ninp__i_i15_i_i=(($33+12)|0);
 var $47=HEAP32[(($__ninp__i_i15_i_i)>>2)];
 var $__einp__i_i16_i_i=(($33+16)|0);
 var $48=HEAP32[(($__einp__i_i16_i_i)>>2)];
 var $cmp_i_i17_i_i=($47|0)==($48|0);
 if($cmp_i_i17_i_i){label=56;break;}else{label=60;break;}
 case 56: 
 var $49=$33;
 var $vtable_i_i19_i_i=HEAP32[(($49)>>2)];
 var $vfn_i_i20_i_i=(($vtable_i_i19_i_i+36)|0);
 var $50=HEAP32[(($vfn_i_i20_i_i)>>2)];
 var $call_i_i21_i_i53=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$50]($33) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=57;break; } else { label=31;break; }
 case 57: 
 var $cmp_i7_i26_i_i=($call_i_i21_i_i53|0)==-1;
 if($cmp_i7_i26_i_i){label=58;break;}else{label=60;break;}
 case 58: 
 HEAP32[(($__sbuf__i11_i_i120)>>2)]=0;
 label=59;break;
 case 59: 
 if($cmp_i_i_i51){label=61;break;}else{label=62;break;}
 case 60: 
 var $cmp_i31_i_i=($33|0)==0;
 var $cmp_i_itmp=$cmp_i_i_i51^$cmp_i31_i_i;
 if($cmp_i_itmp){label=62;break;}else{label=61;break;}
 case 61: 
 var $51=HEAP32[(($__err)>>2)];
 var $or=$51|2;
 HEAP32[(($__err)>>2)]=$or;
 label=62;break;
 case 62: 
 var $52=(($agg_result)|0);
 HEAP32[(($52)>>2)]=$46;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 STACKTOP=sp;return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe($agg_result,$this,$__b,$__e,$__iob,$__err,$__v){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 var $agg_tmp=sp;
 var $agg_tmp2=(sp)+(8);
 var $0=(($__b)|0);
 var $1=HEAP32[(($0)>>2)];
 var $2=(($agg_tmp)|0);
 HEAP32[(($2)>>2)]=$1;
 var $3=(($__e)|0);
 var $4=HEAP32[(($3)>>2)];
 var $5=(($agg_tmp2)|0);
 HEAP32[(($5)>>2)]=$4;
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($agg_result,0,$agg_tmp,$agg_tmp2,$__iob,$__err,$__v);
 STACKTOP=sp;return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($agg_result,$this,$__b,$__e,$__iob,$__err,$__v){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+80)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__atoms=sp;
 var $__decimal_point=(sp)+(32);
 var $__thousands_sep=(sp)+(40);
 var $__grouping=(sp)+(48);
 var $__buf=(sp)+(64);
 var $__size__i_i=$__buf;
 var $__a_end=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__g=STACKTOP;STACKTOP = (STACKTOP + 160)|0;(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__g_end=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__dc=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__in_units=STACKTOP;STACKTOP = (STACKTOP + 1)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__exp=STACKTOP;STACKTOP = (STACKTOP + 1)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $arraydecay=(($__atoms)|0);
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping,$__iob,$arraydecay,$__decimal_point,$__thousands_sep);
 HEAP32[(($__size__i_i)>>2)]=0; HEAP32[((($__size__i_i)+(4))>>2)]=0; HEAP32[((($__size__i_i)+(8))>>2)]=0;
 var $__s_i_i=$__buf;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,10,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=31;break; }
 case 2: 
 var $0=HEAP8[($__size__i_i)];
 var $and_i_i_i=$0&1;
 var $tobool_i_i_i78=(($and_i_i_i<<24)>>24)==0;
 if($tobool_i_i_i78){label=4;break;}else{label=3;break;}
 case 3: 
 var $__data__i21_i_i=(($__buf+8)|0);
 var $1=HEAP32[(($__data__i21_i_i)>>2)];
 var $arrayidx_i_i_i376_pre=(($__s_i_i+1)|0);
 var $cond_i_i=$1;var $arrayidx_i_i_i376_pre_phi=$arrayidx_i_i_i376_pre;var $__data__i21_i_i367_pre_phi=$__data__i21_i_i;label=5;break;
 case 4: 
 var $arrayidx_i_i_i79=(($__s_i_i+1)|0);
 var $__data__i21_i_i367_pre=(($__buf+8)|0);
 var $cond_i_i=$arrayidx_i_i_i79;var $arrayidx_i_i_i376_pre_phi=$arrayidx_i_i_i79;var $__data__i21_i_i367_pre_phi=$__data__i21_i_i367_pre;label=5;break;
 case 5: 
 var $__data__i21_i_i367_pre_phi;
 var $arrayidx_i_i_i376_pre_phi;
 var $cond_i_i;
 HEAP32[(($__a_end)>>2)]=$cond_i_i;
 var $arraydecay4=(($__g)|0);
 HEAP32[(($__g_end)>>2)]=$arraydecay4;
 HEAP32[(($__dc)>>2)]=0;
 HEAP8[($__in_units)]=1;
 HEAP8[($__exp)]=69;
 var $__sbuf__i_i_i98=(($__b)|0);
 var $__sbuf__i11_i_i120=(($__e)|0);
 var $__cap__i_i324=(($__buf)|0);
 var $__size__i23_i234=(($__buf+4)|0);
 var $2=HEAP8[($__decimal_point)];
 var $3=HEAP8[($__thousands_sep)];
 var $_pre=HEAP32[(($__sbuf__i_i_i98)>>2)];
 var $__a_0=$cond_i_i;var $4=$_pre;label=6;break;
 case 6: 
 var $4;
 var $__a_0;
 var $tobool_i_i_i99=($4|0)==0;
 if($tobool_i_i_i99){var $9=0;label=11;break;}else{label=7;break;}
 case 7: 
 var $__ninp__i_i_i_i102=(($4+12)|0);
 var $5=HEAP32[(($__ninp__i_i_i_i102)>>2)];
 var $__einp__i_i_i_i103=(($4+16)|0);
 var $6=HEAP32[(($__einp__i_i_i_i103)>>2)];
 var $cmp_i_i_i_i104=($5|0)==($6|0);
 if($cmp_i_i_i_i104){label=8;break;}else{var $9=$4;label=11;break;}
 case 8: 
 var $7=$4;
 var $vtable_i_i_i_i106=HEAP32[(($7)>>2)];
 var $vfn_i_i_i_i107=(($vtable_i_i_i_i106+36)|0);
 var $8=HEAP32[(($vfn_i_i_i_i107)>>2)];
 var $call_i_i_i_i144=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$8]($4) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=9;break; } else { label=30;break; }
 case 9: 
 var $cmp_i7_i_i_i112=($call_i_i_i_i144|0)==-1;
 if($cmp_i7_i_i_i112){label=10;break;}else{var $9=$4;label=11;break;}
 case 10: 
 HEAP32[(($__sbuf__i_i_i98)>>2)]=0;
 var $9=0;label=11;break;
 case 11: 
 var $9;
 var $cmp_i_i_i117=($9|0)==0;
 var $10=HEAP32[(($__sbuf__i11_i_i120)>>2)];
 var $tobool_i12_i_i121=($10|0)==0;
 if($tobool_i12_i_i121){label=17;break;}else{label=12;break;}
 case 12: 
 var $__ninp__i_i15_i_i125=(($10+12)|0);
 var $11=HEAP32[(($__ninp__i_i15_i_i125)>>2)];
 var $__einp__i_i16_i_i126=(($10+16)|0);
 var $12=HEAP32[(($__einp__i_i16_i_i126)>>2)];
 var $cmp_i_i17_i_i127=($11|0)==($12|0);
 if($cmp_i_i17_i_i127){label=14;break;}else{label=13;break;}
 case 13: 
 if($cmp_i_i_i117){var $15=$10;var $cmp_i31_i_i14025=0;label=19;break;}else{var $__a_2=$__a_0;var $33=$10;var $cmp_i31_i_i14024=0;label=41;break;}
 case 14: 
 var $13=$10;
 var $vtable_i_i19_i_i129=HEAP32[(($13)>>2)];
 var $vfn_i_i20_i_i130=(($vtable_i_i19_i_i129+36)|0);
 var $14=HEAP32[(($vfn_i_i20_i_i130)>>2)];
 var $call_i_i21_i_i146=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$14]($10) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=15;break; } else { label=30;break; }
 case 15: 
 var $cmp_i7_i26_i_i135=($call_i_i21_i_i146|0)==-1;
 if($cmp_i7_i26_i_i135){label=16;break;}else{label=18;break;}
 case 16: 
 HEAP32[(($__sbuf__i11_i_i120)>>2)]=0;
 label=17;break;
 case 17: 
 if($cmp_i_i_i117){var $__a_2=$__a_0;var $33=0;var $cmp_i31_i_i14024=1;label=41;break;}else{var $15=0;var $cmp_i31_i_i14025=1;label=19;break;}
 case 18: 
 var $cmp_i31_i_i140=($10|0)==0;
 var $lnot_i=$cmp_i_i_i117^$cmp_i31_i_i140;
 if($lnot_i){var $15=$10;var $cmp_i31_i_i14025=$cmp_i31_i_i140;label=19;break;}else{var $__a_2=$__a_0;var $33=$10;var $cmp_i31_i_i14024=$cmp_i31_i_i140;label=41;break;}
 case 19: 
 var $cmp_i31_i_i14025;
 var $15;
 var $16=HEAP32[(($__a_end)>>2)];
 var $sub_ptr_lhs_cast=$16;
 var $sub_ptr_rhs_cast=$__a_0;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $17=HEAP8[($__size__i_i)];
 var $conv_i_i159=($17&255);
 var $and_i_i160=$conv_i_i159&1;
 var $tobool_i_i161=($and_i_i160|0)==0;
 var $18=HEAP32[(($__size__i23_i234)>>2)];
 var $shr_i_i10=$conv_i_i159>>>1;
 var $cond_i165=($tobool_i_i161?$shr_i_i10:$18);
 var $cmp=($sub_ptr_sub|0)==($cond_i165|0);
 if($cmp){label=20;break;}else{var $__a_1=$__a_0;label=33;break;}
 case 20: 
 if($tobool_i_i161){label=22;break;}else{label=21;break;}
 case 21: 
 var $19=HEAP32[(($__size__i23_i234)>>2)];
 var $cond_i246=$19;var $cond_i20528=$19;label=23;break;
 case 22: 
 var $shr_i_i20312=$conv_i_i159>>>1;
 var $shr_i_i24413=$conv_i_i159>>>1;
 var $cond_i246=$shr_i_i24413;var $cond_i20528=$shr_i_i20312;label=23;break;
 case 23: 
 var $cond_i20528;
 var $cond_i246;
 var $mul=$cond_i246<<1;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$mul,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=24;break; } else { label=30;break; }
 case 24: 
 var $20=HEAP8[($__size__i_i)];
 var $and_i_i316=$20&1;
 var $tobool_i_i317=(($and_i_i316<<24)>>24)==0;
 if($tobool_i_i317){var $cond_i328=10;label=26;break;}else{label=25;break;}
 case 25: 
 var $21=HEAP32[(($__cap__i_i324)>>2)];
 var $and_i11_i325=$21&-2;
 var $phitmp14=((($and_i11_i325)-(1))|0);
 var $cond_i328=$phitmp14;label=26;break;
 case 26: 
 var $cond_i328;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$cond_i328,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=27;break; } else { label=30;break; }
 case 27: 
 var $22=HEAP8[($__size__i_i)];
 var $and_i_i_i359=$22&1;
 var $tobool_i_i_i360=(($and_i_i_i359<<24)>>24)==0;
 if($tobool_i_i_i360){var $cond_i_i378=$arrayidx_i_i_i376_pre_phi;label=29;break;}else{label=28;break;}
 case 28: 
 var $23=HEAP32[(($__data__i21_i_i367_pre_phi)>>2)];
 var $cond_i_i378=$23;label=29;break;
 case 29: 
 var $cond_i_i378;
 var $add_ptr=(($cond_i_i378+$cond_i20528)|0);
 HEAP32[(($__a_end)>>2)]=$add_ptr;
 var $__a_1=$cond_i_i378;label=33;break;
 case 30: 
 var $lpad_loopexit19$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_loopexit19$1 = tempRet0;
 var $lpad_phi$1=$lpad_loopexit19$1;var $lpad_phi$0=$lpad_loopexit19$0;label=32;break;
 case 31: 
 var $lpad_nonloopexit20$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_nonloopexit20$1 = tempRet0;
 var $lpad_phi$1=$lpad_nonloopexit20$1;var $lpad_phi$0=$lpad_nonloopexit20$0;label=32;break;
 case 32: 
 var $lpad_phi$0;
 var $lpad_phi$1;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 ___resumeException($lpad_phi$0)
 case 33: 
 var $__a_1;
 var $__ninp__i_i388=(($9+12)|0);
 var $24=HEAP32[(($__ninp__i_i388)>>2)];
 var $__einp__i_i389=(($9+16)|0);
 var $25=HEAP32[(($__einp__i_i389)>>2)];
 var $cmp_i_i390=($24|0)==($25|0);
 if($cmp_i_i390){label=34;break;}else{label=36;break;}
 case 34: 
 var $26=$9;
 var $vtable_i_i391=HEAP32[(($26)>>2)];
 var $vfn_i_i392=(($vtable_i_i391+36)|0);
 var $27=HEAP32[(($vfn_i_i392)>>2)];
 var $call_i_i398=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$27]($9) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=35;break; } else { label=30;break; }
 case 35: 
 var $extract_t=(($call_i_i398)&255);
 var $retval_i_i382_0_off0=$extract_t;label=37;break;
 case 36: 
 var $28=HEAP8[($24)];
 var $retval_i_i382_0_off0=$28;label=37;break;
 case 37: 
 var $retval_i_i382_0_off0;
 var $call20=__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($retval_i_i382_0_off0,$__in_units,$__exp,$__a_1,$__a_end,$2,$3,$__grouping,$arraydecay4,$__g_end,$__dc,$arraydecay);
 var $tobool=($call20|0)==0;
 if($tobool){label=38;break;}else{var $__a_2=$__a_1;var $33=$15;var $cmp_i31_i_i14024=$cmp_i31_i_i14025;label=41;break;}
 case 38: 
 var $29=HEAP32[(($__ninp__i_i388)>>2)];
 var $30=HEAP32[(($__einp__i_i389)>>2)];
 var $cmp_i_i293=($29|0)==($30|0);
 if($cmp_i_i293){label=39;break;}else{label=40;break;}
 case 39: 
 var $31=$9;
 var $vtable_i_i=HEAP32[(($31)>>2)];
 var $vfn_i_i=(($vtable_i_i+40)|0);
 var $32=HEAP32[(($vfn_i_i)>>2)];
 var $call_i_i295=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$32]($9) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $__a_0=$__a_1;var $4=$9;label=6;break; } else { label=30;break; }
 case 40: 
 var $incdec_ptr_i_i=(($29+1)|0);
 HEAP32[(($__ninp__i_i388)>>2)]=$incdec_ptr_i_i;
 var $__a_0=$__a_1;var $4=$9;label=6;break;
 case 41: 
 var $cmp_i31_i_i14024;
 var $33;
 var $__a_2;
 var $__size__i_i265=$__grouping;
 var $34=HEAP8[($__size__i_i265)];
 var $conv_i_i266=($34&255);
 var $and_i_i267=$conv_i_i266&1;
 var $tobool_i_i268=($and_i_i267|0)==0;
 if($tobool_i_i268){label=43;break;}else{label=42;break;}
 case 42: 
 var $__size__i23_i275=(($__grouping+4)|0);
 var $35=HEAP32[(($__size__i23_i275)>>2)];
 var $cond_i287=$35;label=44;break;
 case 43: 
 var $shr_i_i2859=$conv_i_i266>>>1;
 var $cond_i287=$shr_i_i2859;label=44;break;
 case 44: 
 var $cond_i287;
 var $cmp26=($cond_i287|0)==0;
 if($cmp26){label=48;break;}else{label=45;break;}
 case 45: 
 var $36=HEAP8[($__in_units)];
 var $37=$36&1;
 var $tobool27=(($37<<24)>>24)==0;
 if($tobool27){label=48;break;}else{label=46;break;}
 case 46: 
 var $38=HEAP32[(($__g_end)>>2)];
 var $sub_ptr_lhs_cast30=$38;
 var $sub_ptr_rhs_cast31=$__g;
 var $sub_ptr_sub32=((($sub_ptr_lhs_cast30)-($sub_ptr_rhs_cast31))|0);
 var $cmp33=($sub_ptr_sub32|0)<160;
 if($cmp33){label=47;break;}else{label=48;break;}
 case 47: 
 var $39=HEAP32[(($__dc)>>2)];
 var $incdec_ptr=(($38+4)|0);
 HEAP32[(($__g_end)>>2)]=$incdec_ptr;
 HEAP32[(($38)>>2)]=$39;
 label=48;break;
 case 48: 
 var $40=HEAP32[(($__a_end)>>2)];
 var $call37=(function() { try { __THREW__ = 0; return __ZNSt3__115__num_get_floatIeEET_PKcS3_Rj($__a_2,$40,$__err) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=49;break; } else { label=31;break; }
 case 49: 
 HEAPF64[(($__v)>>3)]=$call37;
 var $41=HEAP32[(($__g_end)>>2)];
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$arraydecay4,$41,$__err);
 if($cmp_i_i_i117){var $46=0;label=54;break;}else{label=50;break;}
 case 50: 
 var $__ninp__i_i_i_i=(($9+12)|0);
 var $42=HEAP32[(($__ninp__i_i_i_i)>>2)];
 var $__einp__i_i_i_i=(($9+16)|0);
 var $43=HEAP32[(($__einp__i_i_i_i)>>2)];
 var $cmp_i_i_i_i=($42|0)==($43|0);
 if($cmp_i_i_i_i){label=51;break;}else{var $46=$9;label=54;break;}
 case 51: 
 var $44=$9;
 var $vtable_i_i_i_i=HEAP32[(($44)>>2)];
 var $vfn_i_i_i_i=(($vtable_i_i_i_i+36)|0);
 var $45=HEAP32[(($vfn_i_i_i_i)>>2)];
 var $call_i_i_i_i52=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$45]($9) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=52;break; } else { label=31;break; }
 case 52: 
 var $cmp_i7_i_i_i=($call_i_i_i_i52|0)==-1;
 if($cmp_i7_i_i_i){label=53;break;}else{var $46=$9;label=54;break;}
 case 53: 
 HEAP32[(($__sbuf__i_i_i98)>>2)]=0;
 var $46=0;label=54;break;
 case 54: 
 var $46;
 var $cmp_i_i_i51=($46|0)==0;
 if($cmp_i31_i_i14024){label=59;break;}else{label=55;break;}
 case 55: 
 var $__ninp__i_i15_i_i=(($33+12)|0);
 var $47=HEAP32[(($__ninp__i_i15_i_i)>>2)];
 var $__einp__i_i16_i_i=(($33+16)|0);
 var $48=HEAP32[(($__einp__i_i16_i_i)>>2)];
 var $cmp_i_i17_i_i=($47|0)==($48|0);
 if($cmp_i_i17_i_i){label=56;break;}else{label=60;break;}
 case 56: 
 var $49=$33;
 var $vtable_i_i19_i_i=HEAP32[(($49)>>2)];
 var $vfn_i_i20_i_i=(($vtable_i_i19_i_i+36)|0);
 var $50=HEAP32[(($vfn_i_i20_i_i)>>2)];
 var $call_i_i21_i_i53=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$50]($33) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=57;break; } else { label=31;break; }
 case 57: 
 var $cmp_i7_i26_i_i=($call_i_i21_i_i53|0)==-1;
 if($cmp_i7_i26_i_i){label=58;break;}else{label=60;break;}
 case 58: 
 HEAP32[(($__sbuf__i11_i_i120)>>2)]=0;
 label=59;break;
 case 59: 
 if($cmp_i_i_i51){label=61;break;}else{label=62;break;}
 case 60: 
 var $cmp_i31_i_i=($33|0)==0;
 var $cmp_i_itmp=$cmp_i_i_i51^$cmp_i31_i_i;
 if($cmp_i_itmp){label=62;break;}else{label=61;break;}
 case 61: 
 var $51=HEAP32[(($__err)>>2)];
 var $or=$51|2;
 HEAP32[(($__err)>>2)]=$or;
 label=62;break;
 case 62: 
 var $52=(($agg_result)|0);
 HEAP32[(($52)>>2)]=$46;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 STACKTOP=sp;return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv($agg_result,$this,$__b,$__e,$__iob,$__err,$__v){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+64)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__p_i_i_i=sp;
 var $__atoms=(sp)+(16);
 var $__grouping=(sp)+(48);
 var $__grouping32=$__grouping;
 var $ref_tmp=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__buf=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__a_end=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__g=STACKTOP;STACKTOP = (STACKTOP + 160)|0;(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__g_end=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__dc=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 HEAP32[(($__grouping32)>>2)]=0; HEAP32[((($__grouping32)+(4))>>2)]=0; HEAP32[((($__grouping32)+(8))>>2)]=0;
 var $__size__i_i=$__buf;
 (function() { try { __THREW__ = 0; return __ZNKSt3__18ios_base6getlocEv($ref_tmp,$__iob) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=38;break; }
 case 2: 
 var $__locale__i=(($ref_tmp)|0);
 var $0=HEAP32[(($__locale__i)>>2)];
 var $1=$__p_i_i_i;
 var $2=HEAP32[((15384)>>2)];
 var $cmp_i_i_i16=($2|0)==-1;
 if($cmp_i_i_i16){label=4;break;}else{label=3;break;}
 case 3: 
 var $ref_tmp_i_sroa_0_0__idx_i_i=(($__p_i_i_i)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i)>>2)]=15384;
 var $ref_tmp_i_sroa_1_4__idx6_i_i=(($__p_i_i_i+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i=(($__p_i_i_i+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(15384,$1,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=4;break; } else { label=39;break; }
 case 4: 
 var $3=HEAP32[((15388)>>2)];
 var $sub_i_i=((($3)-(1))|0);
 var $__end__i_i_i_i=(($0+12)|0);
 var $4=HEAP32[(($__end__i_i_i_i)>>2)];
 var $__begin__i_i_i_i=(($0+8)|0);
 var $5=HEAP32[(($__begin__i_i_i_i)>>2)];
 var $sub_ptr_lhs_cast_i_i_i_i=$4;
 var $sub_ptr_rhs_cast_i_i_i_i=$5;
 var $sub_ptr_sub_i_i_i_i=((($sub_ptr_lhs_cast_i_i_i_i)-($sub_ptr_rhs_cast_i_i_i_i))|0);
 var $sub_ptr_div_i_i_i_i=$sub_ptr_sub_i_i_i_i>>2;
 var $cmp_i_i1_i=($sub_ptr_div_i_i_i_i>>>0)>($sub_i_i>>>0);
 if($cmp_i_i1_i){label=5;break;}else{label=6;break;}
 case 5: 
 var $arrayidx_i_i_i_i=(($5+($sub_i_i<<2))|0);
 var $6=HEAP32[(($arrayidx_i_i_i_i)>>2)];
 var $tobool_i_i_i18=($6|0)==0;
 if($tobool_i_i_i18){label=6;break;}else{label=8;break;}
 case 6: 
 var $exception_i_i=___cxa_allocate_exception(4);
 var $7=$exception_i_i;
 __ZNSt8bad_castC2Ev($7);
 (function() { try { __THREW__ = 0; return ___cxa_throw($exception_i_i,10264,(376)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=7;break; } else { label=39;break; }
 case 7: 
 throw "Reached an unreachable!";
 case 8: 
 var $8=$6;
 var $arraydecay=(($__atoms)|0);
 var $9=$6;
 var $vtable_i=HEAP32[(($9)>>2)];
 var $vfn_i=(($vtable_i+32)|0);
 var $10=HEAP32[(($vfn_i)>>2)];
 var $call_i56=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$10]($8,11872,11898,$arraydecay) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=9;break; } else { label=39;break; }
 case 9: 
 var $11=HEAP32[(($__locale__i)>>2)];
 var $12=(($11)|0);
 var $call_i=__ZNSt3__114__shared_count16__release_sharedEv($12);
 HEAP32[(($__size__i_i)>>2)]=0; HEAP32[((($__size__i_i)+(4))>>2)]=0; HEAP32[((($__size__i_i)+(8))>>2)]=0;
 var $__s_i_i=$__buf;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,10,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=10;break; } else { label=41;break; }
 case 10: 
 var $13=HEAP8[($__size__i_i)];
 var $and_i_i_i=$13&1;
 var $tobool_i_i_i113=(($and_i_i_i<<24)>>24)==0;
 if($tobool_i_i_i113){label=12;break;}else{label=11;break;}
 case 11: 
 var $__data__i21_i_i=(($__buf+8)|0);
 var $14=HEAP32[(($__data__i21_i_i)>>2)];
 var $arrayidx_i_i_i388_pre=(($__s_i_i+1)|0);
 var $cond_i_i=$14;var $arrayidx_i_i_i388_pre_phi=$arrayidx_i_i_i388_pre;var $__data__i21_i_i379_pre_phi=$__data__i21_i_i;label=13;break;
 case 12: 
 var $arrayidx_i_i_i114=(($__s_i_i+1)|0);
 var $__data__i21_i_i379_pre=(($__buf+8)|0);
 var $cond_i_i=$arrayidx_i_i_i114;var $arrayidx_i_i_i388_pre_phi=$arrayidx_i_i_i114;var $__data__i21_i_i379_pre_phi=$__data__i21_i_i379_pre;label=13;break;
 case 13: 
 var $__data__i21_i_i379_pre_phi;
 var $arrayidx_i_i_i388_pre_phi;
 var $cond_i_i;
 HEAP32[(($__a_end)>>2)]=$cond_i_i;
 var $arraydecay11=(($__g)|0);
 HEAP32[(($__g_end)>>2)]=$arraydecay11;
 HEAP32[(($__dc)>>2)]=0;
 var $__sbuf__i_i_i133=(($__b)|0);
 var $__sbuf__i11_i_i155=(($__e)|0);
 var $__cap__i_i318=(($__buf)|0);
 var $__size__i23_i276=(($__buf+4)|0);
 var $_pre=HEAP32[(($__sbuf__i_i_i133)>>2)];
 var $__a_0=$cond_i_i;var $15=$_pre;label=14;break;
 case 14: 
 var $15;
 var $__a_0;
 var $tobool_i_i_i134=($15|0)==0;
 if($tobool_i_i_i134){var $20=0;label=19;break;}else{label=15;break;}
 case 15: 
 var $__ninp__i_i_i_i137=(($15+12)|0);
 var $16=HEAP32[(($__ninp__i_i_i_i137)>>2)];
 var $__einp__i_i_i_i138=(($15+16)|0);
 var $17=HEAP32[(($__einp__i_i_i_i138)>>2)];
 var $cmp_i_i_i_i139=($16|0)==($17|0);
 if($cmp_i_i_i_i139){label=16;break;}else{var $20=$15;label=19;break;}
 case 16: 
 var $18=$15;
 var $vtable_i_i_i_i141=HEAP32[(($18)>>2)];
 var $vfn_i_i_i_i142=(($vtable_i_i_i_i141+36)|0);
 var $19=HEAP32[(($vfn_i_i_i_i142)>>2)];
 var $call_i_i_i_i179=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$19]($15) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=17;break; } else { label=40;break; }
 case 17: 
 var $cmp_i7_i_i_i147=($call_i_i_i_i179|0)==-1;
 if($cmp_i7_i_i_i147){label=18;break;}else{var $20=$15;label=19;break;}
 case 18: 
 HEAP32[(($__sbuf__i_i_i133)>>2)]=0;
 var $20=0;label=19;break;
 case 19: 
 var $20;
 var $cmp_i_i_i152=($20|0)==0;
 var $21=HEAP32[(($__sbuf__i11_i_i155)>>2)];
 var $tobool_i12_i_i156=($21|0)==0;
 if($tobool_i12_i_i156){label=25;break;}else{label=20;break;}
 case 20: 
 var $__ninp__i_i15_i_i160=(($21+12)|0);
 var $22=HEAP32[(($__ninp__i_i15_i_i160)>>2)];
 var $__einp__i_i16_i_i161=(($21+16)|0);
 var $23=HEAP32[(($__einp__i_i16_i_i161)>>2)];
 var $cmp_i_i17_i_i162=($22|0)==($23|0);
 if($cmp_i_i17_i_i162){label=22;break;}else{label=21;break;}
 case 21: 
 if($cmp_i_i_i152){label=27;break;}else{var $__a_2=$__a_0;label=51;break;}
 case 22: 
 var $24=$21;
 var $vtable_i_i19_i_i164=HEAP32[(($24)>>2)];
 var $vfn_i_i20_i_i165=(($vtable_i_i19_i_i164+36)|0);
 var $25=HEAP32[(($vfn_i_i20_i_i165)>>2)];
 var $call_i_i21_i_i181=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$25]($21) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=23;break; } else { label=40;break; }
 case 23: 
 var $cmp_i7_i26_i_i170=($call_i_i21_i_i181|0)==-1;
 if($cmp_i7_i26_i_i170){label=24;break;}else{label=26;break;}
 case 24: 
 HEAP32[(($__sbuf__i11_i_i155)>>2)]=0;
 label=25;break;
 case 25: 
 if($cmp_i_i_i152){var $__a_2=$__a_0;label=51;break;}else{label=27;break;}
 case 26: 
 var $cmp_i31_i_i175=($21|0)==0;
 var $lnot_i=$cmp_i_i_i152^$cmp_i31_i_i175;
 if($lnot_i){label=27;break;}else{var $__a_2=$__a_0;label=51;break;}
 case 27: 
 var $26=HEAP32[(($__a_end)>>2)];
 var $sub_ptr_lhs_cast=$26;
 var $sub_ptr_rhs_cast=$__a_0;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $27=HEAP8[($__size__i_i)];
 var $conv_i_i194=($27&255);
 var $and_i_i195=$conv_i_i194&1;
 var $tobool_i_i196=($and_i_i195|0)==0;
 var $28=HEAP32[(($__size__i23_i276)>>2)];
 var $shr_i_i11=$conv_i_i194>>>1;
 var $cond_i200=($tobool_i_i196?$shr_i_i11:$28);
 var $cmp=($sub_ptr_sub|0)==($cond_i200|0);
 if($cmp){label=28;break;}else{var $__a_1=$__a_0;label=43;break;}
 case 28: 
 if($tobool_i_i196){label=30;break;}else{label=29;break;}
 case 29: 
 var $29=HEAP32[(($__size__i23_i276)>>2)];
 var $cond_i288=$29;var $cond_i24036=$29;label=31;break;
 case 30: 
 var $shr_i_i23813=$conv_i_i194>>>1;
 var $shr_i_i28614=$conv_i_i194>>>1;
 var $cond_i288=$shr_i_i28614;var $cond_i24036=$shr_i_i23813;label=31;break;
 case 31: 
 var $cond_i24036;
 var $cond_i288;
 var $mul=$cond_i288<<1;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$mul,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=32;break; } else { label=40;break; }
 case 32: 
 var $30=HEAP8[($__size__i_i)];
 var $and_i_i310=$30&1;
 var $tobool_i_i311=(($and_i_i310<<24)>>24)==0;
 if($tobool_i_i311){var $cond_i322=10;label=34;break;}else{label=33;break;}
 case 33: 
 var $31=HEAP32[(($__cap__i_i318)>>2)];
 var $and_i11_i319=$31&-2;
 var $phitmp15=((($and_i11_i319)-(1))|0);
 var $cond_i322=$phitmp15;label=34;break;
 case 34: 
 var $cond_i322;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$cond_i322,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=35;break; } else { label=40;break; }
 case 35: 
 var $32=HEAP8[($__size__i_i)];
 var $and_i_i_i371=$32&1;
 var $tobool_i_i_i372=(($and_i_i_i371<<24)>>24)==0;
 if($tobool_i_i_i372){var $cond_i_i390=$arrayidx_i_i_i388_pre_phi;label=37;break;}else{label=36;break;}
 case 36: 
 var $33=HEAP32[(($__data__i21_i_i379_pre_phi)>>2)];
 var $cond_i_i390=$33;label=37;break;
 case 37: 
 var $cond_i_i390;
 var $add_ptr=(($cond_i_i390+$cond_i24036)|0);
 HEAP32[(($__a_end)>>2)]=$add_ptr;
 var $__a_1=$cond_i_i390;label=43;break;
 case 38: 
 var $34$0 = ___cxa_find_matching_catch(-1, -1); var $34$1 = tempRet0;
 var $35=$34$0;
 var $36=$34$1;
 var $ehselector_slot_0=$36;var $exn_slot_0=$35;label=74;break;
 case 39: 
 var $37$0 = ___cxa_find_matching_catch(-1, -1); var $37$1 = tempRet0;
 var $38=$37$0;
 var $39=$37$1;
 var $40=HEAP32[(($__locale__i)>>2)];
 var $41=(($40)|0);
 var $call_i23=__ZNSt3__114__shared_count16__release_sharedEv($41);
 var $ehselector_slot_0=$39;var $exn_slot_0=$38;label=74;break;
 case 40: 
 var $lpad_loopexit$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_loopexit$1 = tempRet0;
 var $eh_lpad_body$1=$lpad_loopexit$1;var $eh_lpad_body$0=$lpad_loopexit$0;label=42;break;
 case 41: 
 var $lpad_nonloopexit$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_nonloopexit$1 = tempRet0;
 var $eh_lpad_body$1=$lpad_nonloopexit$1;var $eh_lpad_body$0=$lpad_nonloopexit$0;label=42;break;
 case 42: 
 var $eh_lpad_body$0;
 var $eh_lpad_body$1;
 var $42=$eh_lpad_body$0;
 var $43=$eh_lpad_body$1;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 var $ehselector_slot_0=$43;var $exn_slot_0=$42;label=74;break;
 case 43: 
 var $__a_1;
 var $__ninp__i_i332=(($20+12)|0);
 var $44=HEAP32[(($__ninp__i_i332)>>2)];
 var $__einp__i_i333=(($20+16)|0);
 var $45=HEAP32[(($__einp__i_i333)>>2)];
 var $cmp_i_i334=($44|0)==($45|0);
 if($cmp_i_i334){label=44;break;}else{label=46;break;}
 case 44: 
 var $46=$20;
 var $vtable_i_i335=HEAP32[(($46)>>2)];
 var $vfn_i_i336=(($vtable_i_i335+36)|0);
 var $47=HEAP32[(($vfn_i_i336)>>2)];
 var $call_i_i342=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$47]($20) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=45;break; } else { label=40;break; }
 case 45: 
 var $extract_t=(($call_i_i342)&255);
 var $retval_i_i326_0_off0=$extract_t;label=47;break;
 case 46: 
 var $48=HEAP8[($44)];
 var $retval_i_i326_0_off0=$48;label=47;break;
 case 47: 
 var $retval_i_i326_0_off0;
 var $call27=__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($retval_i_i326_0_off0,16,$__a_1,$__a_end,$__dc,0,$__grouping,$arraydecay11,$__g_end,$arraydecay);
 var $tobool=($call27|0)==0;
 if($tobool){label=48;break;}else{var $__a_2=$__a_1;label=51;break;}
 case 48: 
 var $49=HEAP32[(($__ninp__i_i332)>>2)];
 var $50=HEAP32[(($__einp__i_i333)>>2)];
 var $cmp_i_i246=($49|0)==($50|0);
 if($cmp_i_i246){label=49;break;}else{label=50;break;}
 case 49: 
 var $51=$20;
 var $vtable_i_i=HEAP32[(($51)>>2)];
 var $vfn_i_i=(($vtable_i_i+40)|0);
 var $52=HEAP32[(($vfn_i_i)>>2)];
 var $call_i_i248=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$52]($20) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $__a_0=$__a_1;var $15=$20;label=14;break; } else { label=40;break; }
 case 50: 
 var $incdec_ptr_i_i=(($49+1)|0);
 HEAP32[(($__ninp__i_i332)>>2)]=$incdec_ptr_i_i;
 var $__a_0=$__a_1;var $15=$20;label=14;break;
 case 51: 
 var $__a_2;
 var $arrayidx=(($__a_2+3)|0);
 HEAP8[($arrayidx)]=0;
 var $53=HEAP8[(15944)];
 var $guard_uninitialized_i=(($53<<24)>>24)==0;
 if($guard_uninitialized_i){label=52;break;}else{label=56;break;}
 case 52: 
 var $54=___cxa_guard_acquire(15944);
 var $tobool_i=($54|0)==0;
 if($tobool_i){label=56;break;}else{label=53;break;}
 case 53: 
 var $call_i24=(function() { try { __THREW__ = 0; return _newlocale(2147483647,2960,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=54;break; } else { label=55;break; }
 case 54: 
 HEAP32[((13952)>>2)]=$call_i24;
 label=56;break;
 case 55: 
 var $55$0 = ___cxa_find_matching_catch(-1, -1); var $55$1 = tempRet0;
 var $eh_lpad_body$1=$55$1;var $eh_lpad_body$0=$55$0;label=42;break;
 case 56: 
 var $56=HEAP32[((13952)>>2)];
 var $call35=(function() { try { __THREW__ = 0; return __ZNSt3__110__sscanf_lEPKcP15__locale_structS1_z($__a_2,$56,2104,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$__v,tempVarArgs)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })(); STACKTOP=tempVarArgs;if (!__THREW__) { label=57;break; } else { label=41;break; }
 case 57: 
 var $cmp36=($call35|0)==1;
 if($cmp36){label=59;break;}else{label=58;break;}
 case 58: 
 HEAP32[(($__err)>>2)]=4;
 label=59;break;
 case 59: 
 var $57=HEAP32[(($__sbuf__i_i_i133)>>2)];
 var $tobool_i_i_i=($57|0)==0;
 if($tobool_i_i_i){var $62=0;label=64;break;}else{label=60;break;}
 case 60: 
 var $__ninp__i_i_i_i=(($57+12)|0);
 var $58=HEAP32[(($__ninp__i_i_i_i)>>2)];
 var $__einp__i_i_i_i=(($57+16)|0);
 var $59=HEAP32[(($__einp__i_i_i_i)>>2)];
 var $cmp_i_i_i_i=($58|0)==($59|0);
 if($cmp_i_i_i_i){label=61;break;}else{var $62=$57;label=64;break;}
 case 61: 
 var $60=$57;
 var $vtable_i_i_i_i=HEAP32[(($60)>>2)];
 var $vfn_i_i_i_i=(($vtable_i_i_i_i+36)|0);
 var $61=HEAP32[(($vfn_i_i_i_i)>>2)];
 var $call_i_i_i_i51=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$61]($57) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=62;break; } else { label=41;break; }
 case 62: 
 var $cmp_i7_i_i_i=($call_i_i_i_i51|0)==-1;
 if($cmp_i7_i_i_i){label=63;break;}else{var $62=$57;label=64;break;}
 case 63: 
 HEAP32[(($__sbuf__i_i_i133)>>2)]=0;
 var $62=0;label=64;break;
 case 64: 
 var $62;
 var $cmp_i_i_i50=($62|0)==0;
 var $63=HEAP32[(($__sbuf__i11_i_i155)>>2)];
 var $tobool_i12_i_i=($63|0)==0;
 if($tobool_i12_i_i){label=70;break;}else{label=65;break;}
 case 65: 
 var $__ninp__i_i15_i_i=(($63+12)|0);
 var $64=HEAP32[(($__ninp__i_i15_i_i)>>2)];
 var $__einp__i_i16_i_i=(($63+16)|0);
 var $65=HEAP32[(($__einp__i_i16_i_i)>>2)];
 var $cmp_i_i17_i_i=($64|0)==($65|0);
 if($cmp_i_i17_i_i){label=67;break;}else{label=66;break;}
 case 66: 
 if($cmp_i_i_i50){label=73;break;}else{label=72;break;}
 case 67: 
 var $66=$63;
 var $vtable_i_i19_i_i=HEAP32[(($66)>>2)];
 var $vfn_i_i20_i_i=(($vtable_i_i19_i_i+36)|0);
 var $67=HEAP32[(($vfn_i_i20_i_i)>>2)];
 var $call_i_i21_i_i52=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$67]($63) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=68;break; } else { label=41;break; }
 case 68: 
 var $cmp_i7_i26_i_i=($call_i_i21_i_i52|0)==-1;
 if($cmp_i7_i26_i_i){label=69;break;}else{label=71;break;}
 case 69: 
 HEAP32[(($__sbuf__i11_i_i155)>>2)]=0;
 label=70;break;
 case 70: 
 if($cmp_i_i_i50){label=72;break;}else{label=73;break;}
 case 71: 
 var $cmp_i31_i_i=($63|0)==0;
 var $cmp_i_itmp=$cmp_i_i_i50^$cmp_i31_i_i;
 if($cmp_i_itmp){label=73;break;}else{label=72;break;}
 case 72: 
 var $68=HEAP32[(($__err)>>2)];
 var $or=$68|2;
 HEAP32[(($__err)>>2)]=$or;
 label=73;break;
 case 73: 
 var $69=(($agg_result)|0);
 HEAP32[(($69)>>2)]=$62;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 STACKTOP=sp;return;
 case 74: 
 var $exn_slot_0;
 var $ehselector_slot_0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 var $lpad_val$0=$exn_slot_0;
 var $lpad_val$1=0;
 var $lpad_val43$0=$lpad_val$0;
 var $lpad_val43$1=$ehselector_slot_0;
 ___resumeException($lpad_val43$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($__ct,$__base,$__a,$__a_end,$__dc,$__thousands_sep,$__grouping,$__g,$__g_end,$__atoms){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $0=HEAP32[(($__a_end)>>2)];
 var $cmp=($0|0)==($__a|0);
 if($cmp){label=2;break;}else{label=5;break;}
 case 2: 
 var $arrayidx=(($__atoms+24)|0);
 var $1=HEAP8[($arrayidx)];
 var $cmp2=(($1<<24)>>24)==(($__ct<<24)>>24);
 if($cmp2){label=4;break;}else{label=3;break;}
 case 3: 
 var $arrayidx4=(($__atoms+25)|0);
 var $2=HEAP8[($arrayidx4)];
 var $cmp6=(($2<<24)>>24)==(($__ct<<24)>>24);
 if($cmp6){label=4;break;}else{label=5;break;}
 case 4: 
 var $cond=($cmp2?43:45);
 var $incdec_ptr=(($__a+1)|0);
 HEAP32[(($__a_end)>>2)]=$incdec_ptr;
 HEAP8[($__a)]=$cond;
 HEAP32[(($__dc)>>2)]=0;
 var $retval_0=0;label=23;break;
 case 5: 
 var $__size__i_i=$__grouping;
 var $3=HEAP8[($__size__i_i)];
 var $conv_i_i=($3&255);
 var $and_i_i=$conv_i_i&1;
 var $tobool_i_i=($and_i_i|0)==0;
 if($tobool_i_i){label=7;break;}else{label=6;break;}
 case 6: 
 var $__size__i23_i=(($__grouping+4)|0);
 var $4=HEAP32[(($__size__i23_i)>>2)];
 var $cond_i=$4;label=8;break;
 case 7: 
 var $shr_i_i31=$conv_i_i>>>1;
 var $cond_i=$shr_i_i31;label=8;break;
 case 8: 
 var $cond_i;
 var $cmp11=($cond_i|0)!=0;
 var $cmp15=(($__ct<<24)>>24)==(($__thousands_sep<<24)>>24);
 var $or_cond=$cmp11&$cmp15;
 if($or_cond){label=9;break;}else{label=11;break;}
 case 9: 
 var $5=HEAP32[(($__g_end)>>2)];
 var $sub_ptr_lhs_cast=$5;
 var $sub_ptr_rhs_cast=$__g;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $cmp17=($sub_ptr_sub|0)<160;
 if($cmp17){label=10;break;}else{var $retval_0=0;label=23;break;}
 case 10: 
 var $6=HEAP32[(($__dc)>>2)];
 var $incdec_ptr19=(($5+4)|0);
 HEAP32[(($__g_end)>>2)]=$incdec_ptr19;
 HEAP32[(($5)>>2)]=$6;
 HEAP32[(($__dc)>>2)]=0;
 var $retval_0=0;label=23;break;
 case 11: 
 var $add_ptr=(($__atoms+26)|0);
 var $__first_addr_i_0=$__atoms;label=12;break;
 case 12: 
 var $__first_addr_i_0;
 var $cmp_i=($__first_addr_i_0|0)==($add_ptr|0);
 if($cmp_i){var $__first_addr_i_0_lcssa=$add_ptr;label=14;break;}else{label=13;break;}
 case 13: 
 var $7=HEAP8[($__first_addr_i_0)];
 var $cmp2_i=(($7<<24)>>24)==(($__ct<<24)>>24);
 var $incdec_ptr_i=(($__first_addr_i_0+1)|0);
 if($cmp2_i){var $__first_addr_i_0_lcssa=$__first_addr_i_0;label=14;break;}else{var $__first_addr_i_0=$incdec_ptr_i;label=12;break;}
 case 14: 
 var $__first_addr_i_0_lcssa;
 var $sub_ptr_lhs_cast23=$__first_addr_i_0_lcssa;
 var $sub_ptr_rhs_cast24=$__atoms;
 var $sub_ptr_sub25=((($sub_ptr_lhs_cast23)-($sub_ptr_rhs_cast24))|0);
 var $cmp26=($sub_ptr_sub25|0)>23;
 if($cmp26){var $retval_0=-1;label=23;break;}else{label=15;break;}
 case 15: 
 if(($__base|0)==8|($__base|0)==10){ label=16;break;}else if(($__base|0)==16){ label=17;break;}else{label=22;break;}
 case 16: 
 var $cmp29=($sub_ptr_sub25|0)<($__base|0);
 if($cmp29){label=22;break;}else{var $retval_0=-1;label=23;break;}
 case 17: 
 var $cmp33=($sub_ptr_sub25|0)<22;
 if($cmp33){label=22;break;}else{label=18;break;}
 case 18: 
 if($cmp){var $retval_0=-1;label=23;break;}else{label=19;break;}
 case 19: 
 var $sub_ptr_lhs_cast38=$0;
 var $sub_ptr_rhs_cast39=$__a;
 var $sub_ptr_sub40=((($sub_ptr_lhs_cast38)-($sub_ptr_rhs_cast39))|0);
 var $cmp41=($sub_ptr_sub40|0)<3;
 if($cmp41){label=20;break;}else{var $retval_0=-1;label=23;break;}
 case 20: 
 var $arrayidx43=((($0)-(1))|0);
 var $8=HEAP8[($arrayidx43)];
 var $cmp45=(($8<<24)>>24)==48;
 if($cmp45){label=21;break;}else{var $retval_0=-1;label=23;break;}
 case 21: 
 HEAP32[(($__dc)>>2)]=0;
 var $arrayidx47=((11872+$sub_ptr_sub25)|0);
 var $9=HEAP8[($arrayidx47)];
 var $10=HEAP32[(($__a_end)>>2)];
 var $incdec_ptr48=(($10+1)|0);
 HEAP32[(($__a_end)>>2)]=$incdec_ptr48;
 HEAP8[($10)]=$9;
 var $retval_0=0;label=23;break;
 case 22: 
 var $arrayidx50=((11872+$sub_ptr_sub25)|0);
 var $11=HEAP8[($arrayidx50)];
 var $incdec_ptr51=(($0+1)|0);
 HEAP32[(($__a_end)>>2)]=$incdec_ptr51;
 HEAP8[($0)]=$11;
 var $12=HEAP32[(($__dc)>>2)];
 var $inc=((($12)+(1))|0);
 HEAP32[(($__dc)>>2)]=$inc;
 var $retval_0=0;label=23;break;
 case 23: 
 var $retval_0;
 return $retval_0;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__110__sscanf_lEPKcP15__locale_structS1_z($__s,$__l,$__format,varrp){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__va=sp;
 var $arraydecay=(($__va)|0);
 var $arraydecay1=$__va;
 HEAP32[(($arraydecay1)>>2)]=varrp;HEAP32[((($arraydecay1)+(4))>>2)]=0;
 var $call=_uselocale($__l);
 var $call3=_vsscanf($__s,$__format,$arraydecay);
 var $tobool_i_i_i41=($call|0)==0;
 if($tobool_i_i_i41){label=4;break;}else{label=2;break;}
 case 2: 
 var $call6_i_i_i46=(function() { try { __THREW__ = 0; return _uselocale($call) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=4;break; } else { label=3;break; }
 case 3: 
 var $0$0 = ___cxa_find_matching_catch(-1, -1,0); var $0$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 4: 
 STACKTOP=sp;return $call3;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this){
 var label=0;
 var $0=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($0);
 var $1=$this;
 __ZdlPv($1);
 return;
}
function __ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev($this){
 var label=0;
 var $0=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($0);
 return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb($agg_result,$this,$__b,$__e,$__iob,$__err,$__v){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+112)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__p_i_i_i12=sp;
 var $__p_i_i_i=(sp)+(16);
 var $__lv=(sp)+(32);
 var $ref_tmp=(sp)+(40);
 var $agg_tmp=(sp)+(48);
 var $agg_tmp2=(sp)+(56);
 var $ref_tmp4=(sp)+(64);
 var $ref_tmp6=(sp)+(72);
 var $__names=(sp)+(80);
 var $agg_tmp14=(sp)+(104);
 var $__fmtflags__i=(($__iob+4)|0);
 var $0=HEAP32[(($__fmtflags__i)>>2)];
 var $and=$0&1;
 var $cmp=($and|0)==0;
 if($cmp){label=2;break;}else{label=7;break;}
 case 2: 
 HEAP32[(($__lv)>>2)]=-1;
 var $1=$this;
 var $vtable=HEAP32[(($1)>>2)];
 var $vfn=(($vtable+16)|0);
 var $2=HEAP32[(($vfn)>>2)];
 var $3=(($__b)|0);
 var $4=HEAP32[(($3)>>2)];
 var $5=(($agg_tmp)|0);
 HEAP32[(($5)>>2)]=$4;
 var $6=(($__e)|0);
 var $7=HEAP32[(($6)>>2)];
 var $8=(($agg_tmp2)|0);
 HEAP32[(($8)>>2)]=$7;
 FUNCTION_TABLE[$2]($ref_tmp,$this,$agg_tmp,$agg_tmp2,$__iob,$__err,$__lv);
 var $9=(($ref_tmp)|0);
 var $10=HEAP32[(($9)>>2)];
 HEAP32[(($3)>>2)]=$10;
 var $11=HEAP32[(($__lv)>>2)];
 if(($11|0)==0){ label=3;break;}else if(($11|0)==1){ label=4;break;}else{label=5;break;}
 case 3: 
 HEAP8[($__v)]=0;
 label=6;break;
 case 4: 
 HEAP8[($__v)]=1;
 label=6;break;
 case 5: 
 HEAP8[($__v)]=1;
 HEAP32[(($__err)>>2)]=4;
 label=6;break;
 case 6: 
 var $12=(($agg_result)|0);
 HEAP32[(($12)>>2)]=$10;
 label=28;break;
 case 7: 
 __ZNKSt3__18ios_base6getlocEv($ref_tmp4,$__iob);
 var $__locale__i=(($ref_tmp4)|0);
 var $13=HEAP32[(($__locale__i)>>2)];
 var $14=$__p_i_i_i;
 var $15=HEAP32[((15376)>>2)];
 var $cmp_i_i_i=($15|0)==-1;
 if($cmp_i_i_i){label=9;break;}else{label=8;break;}
 case 8: 
 var $ref_tmp_i_sroa_0_0__idx_i_i=(($__p_i_i_i)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i)>>2)]=15376;
 var $ref_tmp_i_sroa_1_4__idx6_i_i=(($__p_i_i_i+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i=(($__p_i_i_i+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(15376,$14,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=9;break; } else { label=23;break; }
 case 9: 
 var $16=HEAP32[((15380)>>2)];
 var $sub_i_i=((($16)-(1))|0);
 var $__end__i_i_i_i=(($13+12)|0);
 var $17=HEAP32[(($__end__i_i_i_i)>>2)];
 var $__begin__i_i_i_i=(($13+8)|0);
 var $18=HEAP32[(($__begin__i_i_i_i)>>2)];
 var $sub_ptr_lhs_cast_i_i_i_i=$17;
 var $sub_ptr_rhs_cast_i_i_i_i=$18;
 var $sub_ptr_sub_i_i_i_i=((($sub_ptr_lhs_cast_i_i_i_i)-($sub_ptr_rhs_cast_i_i_i_i))|0);
 var $sub_ptr_div_i_i_i_i=$sub_ptr_sub_i_i_i_i>>2;
 var $cmp_i_i1_i=($sub_ptr_div_i_i_i_i>>>0)>($sub_i_i>>>0);
 if($cmp_i_i1_i){label=10;break;}else{label=11;break;}
 case 10: 
 var $arrayidx_i_i_i_i=(($18+($sub_i_i<<2))|0);
 var $19=HEAP32[(($arrayidx_i_i_i_i)>>2)];
 var $tobool_i_i_i=($19|0)==0;
 if($tobool_i_i_i){label=11;break;}else{label=13;break;}
 case 11: 
 var $exception_i_i=___cxa_allocate_exception(4);
 var $20=$exception_i_i;
 __ZNSt8bad_castC2Ev($20);
 (function() { try { __THREW__ = 0; return ___cxa_throw($exception_i_i,10264,(376)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=12;break; } else { label=23;break; }
 case 12: 
 throw "Reached an unreachable!";
 case 13: 
 var $21=$19;
 var $22=HEAP32[(($__locale__i)>>2)];
 var $23=(($22)|0);
 var $call_i=__ZNSt3__114__shared_count16__release_sharedEv($23);
 __ZNKSt3__18ios_base6getlocEv($ref_tmp6,$__iob);
 var $__locale__i13=(($ref_tmp6)|0);
 var $24=HEAP32[(($__locale__i13)>>2)];
 var $25=$__p_i_i_i12;
 var $26=HEAP32[((14992)>>2)];
 var $cmp_i_i_i14=($26|0)==-1;
 if($cmp_i_i_i14){label=15;break;}else{label=14;break;}
 case 14: 
 var $ref_tmp_i_sroa_0_0__idx_i_i15=(($__p_i_i_i12)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i15)>>2)]=14992;
 var $ref_tmp_i_sroa_1_4__idx6_i_i16=(($__p_i_i_i12+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i16)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i17=(($__p_i_i_i12+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i17)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(14992,$25,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=15;break; } else { label=24;break; }
 case 15: 
 var $27=HEAP32[((14996)>>2)];
 var $sub_i_i19=((($27)-(1))|0);
 var $__end__i_i_i_i20=(($24+12)|0);
 var $28=HEAP32[(($__end__i_i_i_i20)>>2)];
 var $__begin__i_i_i_i21=(($24+8)|0);
 var $29=HEAP32[(($__begin__i_i_i_i21)>>2)];
 var $sub_ptr_lhs_cast_i_i_i_i22=$28;
 var $sub_ptr_rhs_cast_i_i_i_i23=$29;
 var $sub_ptr_sub_i_i_i_i24=((($sub_ptr_lhs_cast_i_i_i_i22)-($sub_ptr_rhs_cast_i_i_i_i23))|0);
 var $sub_ptr_div_i_i_i_i25=$sub_ptr_sub_i_i_i_i24>>2;
 var $cmp_i_i1_i26=($sub_ptr_div_i_i_i_i25>>>0)>($sub_i_i19>>>0);
 if($cmp_i_i1_i26){label=16;break;}else{label=17;break;}
 case 16: 
 var $arrayidx_i_i_i_i28=(($29+($sub_i_i19<<2))|0);
 var $30=HEAP32[(($arrayidx_i_i_i_i28)>>2)];
 var $tobool_i_i_i29=($30|0)==0;
 if($tobool_i_i_i29){label=17;break;}else{label=19;break;}
 case 17: 
 var $exception_i_i31=___cxa_allocate_exception(4);
 var $31=$exception_i_i31;
 __ZNSt8bad_castC2Ev($31);
 (function() { try { __THREW__ = 0; return ___cxa_throw($exception_i_i31,10264,(376)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=18;break; } else { label=24;break; }
 case 18: 
 throw "Reached an unreachable!";
 case 19: 
 var $32=$30;
 var $33=HEAP32[(($__locale__i13)>>2)];
 var $34=(($33)|0);
 var $call_i37=__ZNSt3__114__shared_count16__release_sharedEv($34);
 var $arrayinit_begin=(($__names)|0);
 var $35=$30;
 var $vtable_i=HEAP32[(($35)>>2)];
 var $vfn_i=(($vtable_i+24)|0);
 var $36=HEAP32[(($vfn_i)>>2)];
 (function() { try { __THREW__ = 0; return FUNCTION_TABLE[$36]($arrayinit_begin,$32) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=20;break; } else { var $arrayinit_endOfInit_0=$arrayinit_begin;label=25;break; }
 case 20: 
 var $arrayinit_element=(($__names+12)|0);
 var $vtable_i40=HEAP32[(($35)>>2)];
 var $vfn_i41=(($vtable_i40+28)|0);
 var $37=HEAP32[(($vfn_i41)>>2)];
 (function() { try { __THREW__ = 0; return FUNCTION_TABLE[$37]($arrayinit_element,$32) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=21;break; } else { var $arrayinit_endOfInit_0=$arrayinit_element;label=25;break; }
 case 21: 
 var $38=(($__e)|0);
 var $39=HEAP32[(($38)>>2)];
 var $40=(($agg_tmp14)|0);
 HEAP32[(($40)>>2)]=$39;
 var $add_ptr=(($__names+24)|0);
 var $call18=(function() { try { __THREW__ = 0; return __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$agg_tmp14,$arrayinit_begin,$add_ptr,$21,$__err,1) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=22;break; } else { label=27;break; }
 case 22: 
 var $cmp20=($call18|0)==($arrayinit_begin|0);
 var $frombool=($cmp20&1);
 HEAP8[($__v)]=$frombool;
 var $41=(($__b)|0);
 var $42=HEAP32[(($41)>>2)];
 var $43=(($agg_result)|0);
 HEAP32[(($43)>>2)]=$42;
 var $arraydestroy_element23=(($__names+12)|0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($arraydestroy_element23);
 var $arraydestroy_element23_1=(($__names)|0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($arraydestroy_element23_1);
 label=28;break;
 case 23: 
 var $44$0 = ___cxa_find_matching_catch(-1, -1); var $44$1 = tempRet0;
 var $45=$44$0;
 var $46=$44$1;
 var $47=HEAP32[(($__locale__i)>>2)];
 var $48=(($47)|0);
 var $call_i39=__ZNSt3__114__shared_count16__release_sharedEv($48);
 var $exn_slot_0=$45;var $ehselector_slot_0=$46;label=29;break;
 case 24: 
 var $49$0 = ___cxa_find_matching_catch(-1, -1); var $49$1 = tempRet0;
 var $50=$49$0;
 var $51=$49$1;
 var $52=HEAP32[(($__locale__i13)>>2)];
 var $53=(($52)|0);
 var $call_i41=__ZNSt3__114__shared_count16__release_sharedEv($53);
 var $exn_slot_0=$50;var $ehselector_slot_0=$51;label=29;break;
 case 25: 
 var $arrayinit_endOfInit_0;
 var $54$0 = ___cxa_find_matching_catch(-1, -1); var $54$1 = tempRet0;
 var $55=$54$0;
 var $56=$54$1;
 var $arraydestroy_isempty=($arrayinit_begin|0)==($arrayinit_endOfInit_0|0);
 if($arraydestroy_isempty){var $exn_slot_0=$55;var $ehselector_slot_0=$56;label=29;break;}else{var $arraydestroy_elementPast=$arrayinit_endOfInit_0;label=26;break;}
 case 26: 
 var $arraydestroy_elementPast;
 var $arraydestroy_element=((($arraydestroy_elementPast)-(12))|0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($arraydestroy_element);
 var $arraydestroy_done=($arraydestroy_element|0)==($arrayinit_begin|0);
 if($arraydestroy_done){var $exn_slot_0=$55;var $ehselector_slot_0=$56;label=29;break;}else{var $arraydestroy_elementPast=$arraydestroy_element;label=26;break;}
 case 27: 
 var $57$0 = ___cxa_find_matching_catch(-1, -1); var $57$1 = tempRet0;
 var $58=$57$0;
 var $arraydestroy_element29=(($__names+12)|0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($arraydestroy_element29);
 var $arraydestroy_element29_1=(($__names)|0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($arraydestroy_element29_1);
 var $59=$57$1;
 var $exn_slot_0=$58;var $ehselector_slot_0=$59;label=29;break;
 case 28: 
 STACKTOP=sp;return;
 case 29: 
 var $ehselector_slot_0;
 var $exn_slot_0;
 var $lpad_val$0=$exn_slot_0;
 var $lpad_val$1=0;
 var $lpad_val32$0=$lpad_val$0;
 var $lpad_val32$1=$ehselector_slot_0;
 ___resumeException($lpad_val32$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$__e,$__kb,$__ke,$__ct,$__err,$__case_sensitive){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+104)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__statbuf=sp;
 var $sub_ptr_lhs_cast_i_i=$__ke;
 var $sub_ptr_rhs_cast_i_i=$__kb;
 var $sub_ptr_sub_i_i=((($sub_ptr_lhs_cast_i_i)-($sub_ptr_rhs_cast_i_i))|0);
 var $sub_ptr_div_i_i=(((($sub_ptr_sub_i_i|0))/(12))&-1);
 var $arraydecay=(($__statbuf)|0);
 var $cmp=($sub_ptr_div_i_i>>>0)>100;
 if($cmp){label=2;break;}else{var $__status_0=$arraydecay;var $__stat_hold_sroa_0_1=0;label=10;break;}
 case 2: 
 var $call1=_malloc($sub_ptr_div_i_i);
 var $cmp2=($call1|0)==0;
 if($cmp2){label=3;break;}else{var $__status_0=$call1;var $__stat_hold_sroa_0_1=$call1;label=10;break;}
 case 3: 
 (function() { try { __THREW__ = 0; return __ZSt17__throw_bad_allocv() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $__status_0=0;var $__stat_hold_sroa_0_1=0;label=10;break; } else { label=4;break; }
 case 4: 
 var $0$0 = ___cxa_find_matching_catch(-1, -1); var $0$1 = tempRet0;
 var $61$1=$0$1;var $61$0=$0$0;label=106;break;
 case 5: 
 var $lpad_us_lcssa$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_us_lcssa$1 = tempRet0;
 var $lpad_phi$1=$lpad_us_lcssa$1;var $lpad_phi$0=$lpad_us_lcssa$0;label=8;break;
 case 6: 
 var $lpad_loopexit95$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_loopexit95$1 = tempRet0;
 var $lpad_phi$1=$lpad_loopexit95$1;var $lpad_phi$0=$lpad_loopexit95$0;label=8;break;
 case 7: 
 var $lpad_nonloopexit96$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_nonloopexit96$1 = tempRet0;
 var $lpad_phi$1=$lpad_nonloopexit96$1;var $lpad_phi$0=$lpad_nonloopexit96$0;label=8;break;
 case 8: 
 var $lpad_phi$0;
 var $lpad_phi$1;
 var $tobool_i_i_i133=($__stat_hold_sroa_0_1|0)==0;
 if($tobool_i_i_i133){var $61$1=$lpad_phi$1;var $61$0=$lpad_phi$0;label=106;break;}else{label=9;break;}
 case 9: 
 _free($__stat_hold_sroa_0_1);
 var $61$1=$lpad_phi$1;var $61$0=$lpad_phi$0;label=106;break;
 case 10: 
 var $__stat_hold_sroa_0_1;
 var $__status_0;
 var $cmp6105=($__kb|0)==($__ke|0);
 if($cmp6105){var $__n_might_match_0_lcssa=$sub_ptr_div_i_i;var $__n_does_match_0_lcssa=0;label=11;break;}else{var $__n_might_match_0106=$sub_ptr_div_i_i;var $__n_does_match_0107=0;var $__st_0108=$__status_0;var $__ky_0109=$__kb;label=12;break;}
 case 11: 
 var $__n_does_match_0_lcssa;
 var $__n_might_match_0_lcssa;
 var $__sbuf__i_i_i=(($__b)|0);
 var $__sbuf__i11_i_i=(($__e)|0);
 var $1=$__ct;
 var $__indx_0=0;var $__n_does_match_2=$__n_does_match_0_lcssa;var $__n_might_match_2=$__n_might_match_0_lcssa;label=19;break;
 case 12: 
 var $__ky_0109;
 var $__st_0108;
 var $__n_does_match_0107;
 var $__n_might_match_0106;
 var $__size__i_i_i=$__ky_0109;
 var $2=HEAP8[($__size__i_i_i)];
 var $conv_i_i_i=($2&255);
 var $and_i_i_i=$conv_i_i_i&1;
 var $tobool_i_i_i160=($and_i_i_i|0)==0;
 if($tobool_i_i_i160){label=14;break;}else{label=13;break;}
 case 13: 
 var $__size__i23_i_i=(($__ky_0109+4)|0);
 var $3=HEAP32[(($__size__i23_i_i)>>2)];
 var $cond_i_i=$3;label=15;break;
 case 14: 
 var $shr_i_i_i65=$conv_i_i_i>>>1;
 var $cond_i_i=$shr_i_i_i65;label=15;break;
 case 15: 
 var $cond_i_i;
 var $cmp_i=($cond_i_i|0)==0;
 if($cmp_i){label=17;break;}else{label=16;break;}
 case 16: 
 HEAP8[($__st_0108)]=1;
 var $__n_does_match_1=$__n_does_match_0107;var $__n_might_match_1=$__n_might_match_0106;label=18;break;
 case 17: 
 HEAP8[($__st_0108)]=2;
 var $dec=((($__n_might_match_0106)-(1))|0);
 var $inc=((($__n_does_match_0107)+(1))|0);
 var $__n_does_match_1=$inc;var $__n_might_match_1=$dec;label=18;break;
 case 18: 
 var $__n_might_match_1;
 var $__n_does_match_1;
 var $incdec_ptr=(($__ky_0109+12)|0);
 var $incdec_ptr10=(($__st_0108+1)|0);
 var $cmp6=($incdec_ptr|0)==($__ke|0);
 if($cmp6){var $__n_might_match_0_lcssa=$__n_might_match_1;var $__n_does_match_0_lcssa=$__n_does_match_1;label=11;break;}else{var $__n_might_match_0106=$__n_might_match_1;var $__n_does_match_0107=$__n_does_match_1;var $__st_0108=$incdec_ptr10;var $__ky_0109=$incdec_ptr;label=12;break;}
 case 19: 
 var $__n_might_match_2;
 var $__n_does_match_2;
 var $__indx_0;
 var $4=HEAP32[(($__sbuf__i_i_i)>>2)];
 var $tobool_i_i_i166=($4|0)==0;
 if($tobool_i_i_i166){var $10=0;label=26;break;}else{label=20;break;}
 case 20: 
 var $__ninp__i_i_i_i=(($4+12)|0);
 var $5=HEAP32[(($__ninp__i_i_i_i)>>2)];
 var $__einp__i_i_i_i=(($4+16)|0);
 var $6=HEAP32[(($__einp__i_i_i_i)>>2)];
 var $cmp_i_i_i_i=($5|0)==($6|0);
 if($cmp_i_i_i_i){label=21;break;}else{label=22;break;}
 case 21: 
 var $7=$4;
 var $vtable_i_i_i_i=HEAP32[(($7)>>2)];
 var $vfn_i_i_i_i=(($vtable_i_i_i_i+36)|0);
 var $8=HEAP32[(($vfn_i_i_i_i)>>2)];
 var $call_i_i_i_i169=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$8]($4) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i_i_i_0=$call_i_i_i_i169;label=23;break; } else { label=6;break; }
 case 22: 
 var $9=HEAP32[(($5)>>2)];
 var $retval_i_i_i_i_0=$9;label=23;break;
 case 23: 
 var $retval_i_i_i_i_0;
 var $cmp_i7_i_i_i=($retval_i_i_i_i_0|0)==-1;
 if($cmp_i7_i_i_i){label=25;break;}else{label=24;break;}
 case 24: 
 var $_pre=HEAP32[(($__sbuf__i_i_i)>>2)];
 var $10=$_pre;label=26;break;
 case 25: 
 HEAP32[(($__sbuf__i_i_i)>>2)]=0;
 var $10=0;label=26;break;
 case 26: 
 var $10;
 var $cmp_i_i_i=($10|0)==0;
 var $11=HEAP32[(($__sbuf__i11_i_i)>>2)];
 var $tobool_i12_i_i=($11|0)==0;
 if($tobool_i12_i_i){var $19=$10;var $18=0;label=33;break;}else{label=27;break;}
 case 27: 
 var $__ninp__i_i15_i_i=(($11+12)|0);
 var $12=HEAP32[(($__ninp__i_i15_i_i)>>2)];
 var $__einp__i_i16_i_i=(($11+16)|0);
 var $13=HEAP32[(($__einp__i_i16_i_i)>>2)];
 var $cmp_i_i17_i_i=($12|0)==($13|0);
 if($cmp_i_i17_i_i){label=28;break;}else{label=29;break;}
 case 28: 
 var $14=$11;
 var $vtable_i_i19_i_i=HEAP32[(($14)>>2)];
 var $vfn_i_i20_i_i=(($vtable_i_i19_i_i+36)|0);
 var $15=HEAP32[(($vfn_i_i20_i_i)>>2)];
 var $call_i_i21_i_i170=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$15]($11) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i7_i_i_0=$call_i_i21_i_i170;label=30;break; } else { label=6;break; }
 case 29: 
 var $16=HEAP32[(($12)>>2)];
 var $retval_i_i7_i_i_0=$16;label=30;break;
 case 30: 
 var $retval_i_i7_i_i_0;
 var $cmp_i7_i25_i_i=($retval_i_i7_i_i_0|0)==-1;
 if($cmp_i7_i25_i_i){label=31;break;}else{var $17=$11;label=32;break;}
 case 31: 
 HEAP32[(($__sbuf__i11_i_i)>>2)]=0;
 var $17=0;label=32;break;
 case 32: 
 var $17;
 var $_pr=HEAP32[(($__sbuf__i_i_i)>>2)];
 var $19=$_pr;var $18=$17;label=33;break;
 case 33: 
 var $18;
 var $19;
 var $cmp_i30_i_i=($18|0)==0;
 var $lnot_i=$cmp_i_i_i^$cmp_i30_i_i;
 var $cmp14=($__n_might_match_2|0)!=0;
 var $cmp14_=$lnot_i&$cmp14;
 if($cmp14_){label=34;break;}else{label=82;break;}
 case 34: 
 var $__ninp__i_i=(($19+12)|0);
 var $20=HEAP32[(($__ninp__i_i)>>2)];
 var $__einp__i_i=(($19+16)|0);
 var $21=HEAP32[(($__einp__i_i)>>2)];
 var $cmp_i_i175=($20|0)==($21|0);
 if($cmp_i_i175){label=35;break;}else{label=36;break;}
 case 35: 
 var $22=$19;
 var $vtable_i_i=HEAP32[(($22)>>2)];
 var $vfn_i_i=(($vtable_i_i+36)|0);
 var $23=HEAP32[(($vfn_i_i)>>2)];
 var $call_i_i176=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$23]($19) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i_0=$call_i_i176;label=37;break; } else { label=6;break; }
 case 36: 
 var $24=HEAP32[(($20)>>2)];
 var $retval_i_i_0=$24;label=37;break;
 case 37: 
 var $retval_i_i_0;
 if($__case_sensitive){var $__c_0=$retval_i_i_0;label=39;break;}else{label=38;break;}
 case 38: 
 var $vtable_i=HEAP32[(($1)>>2)];
 var $vfn_i=(($vtable_i+28)|0);
 var $25=HEAP32[(($vfn_i)>>2)];
 var $call_i179=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$25]($__ct,$retval_i_i_0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $__c_0=$call_i179;label=39;break; } else { label=6;break; }
 case 39: 
 var $__c_0;
 if($cmp6105){var $__n_does_match_7=$__n_does_match_2;var $__n_might_match_3_lcssa116=$__n_might_match_2;label=81;break;}else{label=40;break;}
 case 40: 
 var $add=((($__indx_0)+(1))|0);
 if($__case_sensitive){var $__n_might_match_380_us=$__n_might_match_2;var $__n_does_match_381_us=$__n_does_match_2;var $__st_182_us=$__status_0;var $__consume_0_off084_us=0;var $__ky22_085_us=$__kb;label=41;break;}else{var $__n_might_match_380=$__n_might_match_2;var $__n_does_match_381=$__n_does_match_2;var $__st_182=$__status_0;var $__consume_0_off084=0;var $__ky22_085=$__kb;label=54;break;}
 case 41: 
 var $__ky22_085_us;
 var $__consume_0_off084_us;
 var $__st_182_us;
 var $__n_does_match_381_us;
 var $__n_might_match_380_us;
 var $26=HEAP8[($__st_182_us)];
 var $cmp26_us=(($26<<24)>>24)==1;
 if($cmp26_us){label=42;break;}else{var $__consume_1_off0_us=$__consume_0_off084_us;var $__n_does_match_4_us=$__n_does_match_381_us;var $__n_might_match_4_us=$__n_might_match_380_us;label=52;break;}
 case 42: 
 var $__size__i_i_i_i_us=$__ky22_085_us;
 var $27=HEAP8[($__size__i_i_i_i_us)];
 var $and_i_i_i_i_us=$27&1;
 var $tobool_i_i_i_i_us=(($and_i_i_i_i_us<<24)>>24)==0;
 if($tobool_i_i_i_i_us){label=44;break;}else{label=43;break;}
 case 43: 
 var $__data__i21_i_i_i_us=(($__ky22_085_us+8)|0);
 var $28=HEAP32[(($__data__i21_i_i_i_us)>>2)];
 var $cond_i_i_i_us=$28;label=45;break;
 case 44: 
 var $__data__i_i_i_i_us=(($__ky22_085_us+4)|0);
 var $cond_i_i_i_us=$__data__i_i_i_i_us;label=45;break;
 case 45: 
 var $cond_i_i_i_us;
 var $add_ptr_i_us=(($cond_i_i_i_us+($__indx_0<<2))|0);
 var $29=HEAP32[(($add_ptr_i_us)>>2)];
 var $cmp35_us=($__c_0|0)==($29|0);
 if($cmp35_us){label=47;break;}else{label=46;break;}
 case 46: 
 HEAP8[($__st_182_us)]=0;
 var $dec44_us=((($__n_might_match_380_us)-(1))|0);
 var $__consume_1_off0_us=$__consume_0_off084_us;var $__n_does_match_4_us=$__n_does_match_381_us;var $__n_might_match_4_us=$dec44_us;label=52;break;
 case 47: 
 var $30=HEAP8[($__size__i_i_i_i_us)];
 var $conv_i_i207_us=($30&255);
 var $and_i_i_us=$conv_i_i207_us&1;
 var $tobool_i_i_us=($and_i_i_us|0)==0;
 if($tobool_i_i_us){label=49;break;}else{label=48;break;}
 case 48: 
 var $__size__i23_i_us=(($__ky22_085_us+4)|0);
 var $31=HEAP32[(($__size__i23_i_us)>>2)];
 var $cond_i_us=$31;label=50;break;
 case 49: 
 var $shr_i_i64_us=$conv_i_i207_us>>>1;
 var $cond_i_us=$shr_i_i64_us;label=50;break;
 case 50: 
 var $cond_i_us;
 var $cmp38_us=($cond_i_us|0)==($add|0);
 if($cmp38_us){label=51;break;}else{var $__consume_1_off0_us=1;var $__n_does_match_4_us=$__n_does_match_381_us;var $__n_might_match_4_us=$__n_might_match_380_us;label=52;break;}
 case 51: 
 HEAP8[($__st_182_us)]=2;
 var $dec40_us=((($__n_might_match_380_us)-(1))|0);
 var $inc41_us=((($__n_does_match_381_us)+(1))|0);
 var $__consume_1_off0_us=1;var $__n_does_match_4_us=$inc41_us;var $__n_might_match_4_us=$dec40_us;label=52;break;
 case 52: 
 var $__n_might_match_4_us;
 var $__n_does_match_4_us;
 var $__consume_1_off0_us;
 var $incdec_ptr48_us=(($__ky22_085_us+12)|0);
 var $cmp24_us=($incdec_ptr48_us|0)==($__ke|0);
 if($cmp24_us){var $__n_might_match_3_lcssa=$__n_might_match_4_us;var $__n_does_match_3_lcssa=$__n_does_match_4_us;var $__consume_0_off0_lcssa=$__consume_1_off0_us;label=68;break;}else{label=53;break;}
 case 53: 
 var $incdec_ptr49_us=(($__st_182_us+1)|0);
 var $__n_might_match_380_us=$__n_might_match_4_us;var $__n_does_match_381_us=$__n_does_match_4_us;var $__st_182_us=$incdec_ptr49_us;var $__consume_0_off084_us=$__consume_1_off0_us;var $__ky22_085_us=$incdec_ptr48_us;label=41;break;
 case 54: 
 var $__ky22_085;
 var $__consume_0_off084;
 var $__st_182;
 var $__n_does_match_381;
 var $__n_might_match_380;
 var $32=HEAP8[($__st_182)];
 var $cmp26=(($32<<24)>>24)==1;
 if($cmp26){label=55;break;}else{var $__consume_1_off0=$__consume_0_off084;var $__n_does_match_4=$__n_does_match_381;var $__n_might_match_4=$__n_might_match_380;label=66;break;}
 case 55: 
 var $__size__i_i_i_i=$__ky22_085;
 var $33=HEAP8[($__size__i_i_i_i)];
 var $and_i_i_i_i=$33&1;
 var $tobool_i_i_i_i=(($and_i_i_i_i<<24)>>24)==0;
 if($tobool_i_i_i_i){label=57;break;}else{label=56;break;}
 case 56: 
 var $__data__i21_i_i_i=(($__ky22_085+8)|0);
 var $34=HEAP32[(($__data__i21_i_i_i)>>2)];
 var $cond_i_i_i=$34;label=58;break;
 case 57: 
 var $__data__i_i_i_i=(($__ky22_085+4)|0);
 var $cond_i_i_i=$__data__i_i_i_i;label=58;break;
 case 58: 
 var $cond_i_i_i;
 var $add_ptr_i=(($cond_i_i_i+($__indx_0<<2))|0);
 var $35=HEAP32[(($add_ptr_i)>>2)];
 var $vtable_i195=HEAP32[(($1)>>2)];
 var $vfn_i196=(($vtable_i195+28)|0);
 var $36=HEAP32[(($vfn_i196)>>2)];
 var $call_i197=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$36]($__ct,$35) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=59;break; } else { label=5;break; }
 case 59: 
 var $cmp35=($__c_0|0)==($call_i197|0);
 if($cmp35){label=60;break;}else{label=65;break;}
 case 60: 
 var $37=HEAP8[($__size__i_i_i_i)];
 var $conv_i_i207=($37&255);
 var $and_i_i=$conv_i_i207&1;
 var $tobool_i_i=($and_i_i|0)==0;
 if($tobool_i_i){label=62;break;}else{label=61;break;}
 case 61: 
 var $__size__i23_i=(($__ky22_085+4)|0);
 var $38=HEAP32[(($__size__i23_i)>>2)];
 var $cond_i=$38;label=63;break;
 case 62: 
 var $shr_i_i64=$conv_i_i207>>>1;
 var $cond_i=$shr_i_i64;label=63;break;
 case 63: 
 var $cond_i;
 var $cmp38=($cond_i|0)==($add|0);
 if($cmp38){label=64;break;}else{var $__consume_1_off0=1;var $__n_does_match_4=$__n_does_match_381;var $__n_might_match_4=$__n_might_match_380;label=66;break;}
 case 64: 
 HEAP8[($__st_182)]=2;
 var $dec40=((($__n_might_match_380)-(1))|0);
 var $inc41=((($__n_does_match_381)+(1))|0);
 var $__consume_1_off0=1;var $__n_does_match_4=$inc41;var $__n_might_match_4=$dec40;label=66;break;
 case 65: 
 HEAP8[($__st_182)]=0;
 var $dec44=((($__n_might_match_380)-(1))|0);
 var $__consume_1_off0=$__consume_0_off084;var $__n_does_match_4=$__n_does_match_381;var $__n_might_match_4=$dec44;label=66;break;
 case 66: 
 var $__n_might_match_4;
 var $__n_does_match_4;
 var $__consume_1_off0;
 var $incdec_ptr48=(($__ky22_085+12)|0);
 var $cmp24=($incdec_ptr48|0)==($__ke|0);
 if($cmp24){var $__n_might_match_3_lcssa=$__n_might_match_4;var $__n_does_match_3_lcssa=$__n_does_match_4;var $__consume_0_off0_lcssa=$__consume_1_off0;label=68;break;}else{label=67;break;}
 case 67: 
 var $incdec_ptr49=(($__st_182+1)|0);
 var $__n_might_match_380=$__n_might_match_4;var $__n_does_match_381=$__n_does_match_4;var $__st_182=$incdec_ptr49;var $__consume_0_off084=$__consume_1_off0;var $__ky22_085=$incdec_ptr48;label=54;break;
 case 68: 
 var $__consume_0_off0_lcssa;
 var $__n_does_match_3_lcssa;
 var $__n_might_match_3_lcssa;
 if($__consume_0_off0_lcssa){label=69;break;}else{var $__n_does_match_7=$__n_does_match_3_lcssa;var $__n_might_match_3_lcssa116=$__n_might_match_3_lcssa;label=81;break;}
 case 69: 
 var $39=HEAP32[(($__sbuf__i_i_i)>>2)];
 var $__ninp__i_i216=(($39+12)|0);
 var $40=HEAP32[(($__ninp__i_i216)>>2)];
 var $__einp__i_i217=(($39+16)|0);
 var $41=HEAP32[(($__einp__i_i217)>>2)];
 var $cmp_i_i218=($40|0)==($41|0);
 if($cmp_i_i218){label=70;break;}else{label=71;break;}
 case 70: 
 var $42=$39;
 var $vtable_i_i219=HEAP32[(($42)>>2)];
 var $vfn_i_i220=(($vtable_i_i219+40)|0);
 var $43=HEAP32[(($vfn_i_i220)>>2)];
 var $call_i_i225=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$43]($39) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=72;break; } else { label=6;break; }
 case 71: 
 var $incdec_ptr_i_i=(($40+4)|0);
 HEAP32[(($__ninp__i_i216)>>2)]=$incdec_ptr_i_i;
 label=72;break;
 case 72: 
 var $add55=((($__n_does_match_3_lcssa)+($__n_might_match_3_lcssa))|0);
 var $cmp56_not=($add55>>>0)<2;
 var $brmerge=$cmp56_not|$cmp6105;
 if($brmerge){var $__n_does_match_7=$__n_does_match_3_lcssa;var $__n_might_match_3_lcssa116=$__n_might_match_3_lcssa;label=81;break;}else{label=73;break;}
 case 73: 
 var $add65=((($__indx_0)+(1))|0);
 var $__n_does_match_591=$__n_does_match_3_lcssa;var $__st_292=$__status_0;var $__ky58_093=$__kb;label=74;break;
 case 74: 
 var $__ky58_093;
 var $__st_292;
 var $__n_does_match_591;
 var $44=HEAP8[($__st_292)];
 var $cmp63=(($44<<24)>>24)==2;
 if($cmp63){label=75;break;}else{var $__n_does_match_6=$__n_does_match_591;label=80;break;}
 case 75: 
 var $__size__i_i243=$__ky58_093;
 var $45=HEAP8[($__size__i_i243)];
 var $conv_i_i244=($45&255);
 var $and_i_i245=$conv_i_i244&1;
 var $tobool_i_i246=($and_i_i245|0)==0;
 if($tobool_i_i246){label=77;break;}else{label=76;break;}
 case 76: 
 var $__size__i23_i253=(($__ky58_093+4)|0);
 var $46=HEAP32[(($__size__i23_i253)>>2)];
 var $cond_i265=$46;label=78;break;
 case 77: 
 var $shr_i_i26363=$conv_i_i244>>>1;
 var $cond_i265=$shr_i_i26363;label=78;break;
 case 78: 
 var $cond_i265;
 var $cmp66=($cond_i265|0)==($add65|0);
 if($cmp66){var $__n_does_match_6=$__n_does_match_591;label=80;break;}else{label=79;break;}
 case 79: 
 HEAP8[($__st_292)]=0;
 var $dec68=((($__n_does_match_591)-(1))|0);
 var $__n_does_match_6=$dec68;label=80;break;
 case 80: 
 var $__n_does_match_6;
 var $incdec_ptr71=(($__ky58_093+12)|0);
 var $incdec_ptr72=(($__st_292+1)|0);
 var $cmp60=($incdec_ptr71|0)==($__ke|0);
 if($cmp60){var $__n_does_match_7=$__n_does_match_6;var $__n_might_match_3_lcssa116=$__n_might_match_3_lcssa;label=81;break;}else{var $__n_does_match_591=$__n_does_match_6;var $__st_292=$incdec_ptr72;var $__ky58_093=$incdec_ptr71;label=74;break;}
 case 81: 
 var $__n_might_match_3_lcssa116;
 var $__n_does_match_7;
 var $inc77=((($__indx_0)+(1))|0);
 var $__indx_0=$inc77;var $__n_does_match_2=$__n_does_match_7;var $__n_might_match_2=$__n_might_match_3_lcssa116;label=19;break;
 case 82: 
 var $tobool_i_i_i286=($19|0)==0;
 if($tobool_i_i_i286){var $52=1;label=89;break;}else{label=83;break;}
 case 83: 
 var $__ninp__i_i_i_i289=(($19+12)|0);
 var $47=HEAP32[(($__ninp__i_i_i_i289)>>2)];
 var $__einp__i_i_i_i290=(($19+16)|0);
 var $48=HEAP32[(($__einp__i_i_i_i290)>>2)];
 var $cmp_i_i_i_i291=($47|0)==($48|0);
 if($cmp_i_i_i_i291){label=84;break;}else{label=85;break;}
 case 84: 
 var $49=$19;
 var $vtable_i_i_i_i293=HEAP32[(($49)>>2)];
 var $vfn_i_i_i_i294=(($vtable_i_i_i_i293+36)|0);
 var $50=HEAP32[(($vfn_i_i_i_i294)>>2)];
 var $call_i_i_i_i329=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$50]($19) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i_i_i276_0=$call_i_i_i_i329;label=86;break; } else { label=7;break; }
 case 85: 
 var $51=HEAP32[(($47)>>2)];
 var $retval_i_i_i_i276_0=$51;label=86;break;
 case 86: 
 var $retval_i_i_i_i276_0;
 var $cmp_i7_i_i_i298=($retval_i_i_i_i276_0|0)==-1;
 if($cmp_i7_i_i_i298){label=88;break;}else{label=87;break;}
 case 87: 
 var $_pre115=HEAP32[(($__sbuf__i_i_i)>>2)];
 var $phitmp=($_pre115|0)==0;
 var $52=$phitmp;label=89;break;
 case 88: 
 HEAP32[(($__sbuf__i_i_i)>>2)]=0;
 var $52=1;label=89;break;
 case 89: 
 var $52;
 if($cmp_i30_i_i){label=95;break;}else{label=90;break;}
 case 90: 
 var $__ninp__i_i15_i_i311=(($18+12)|0);
 var $53=HEAP32[(($__ninp__i_i15_i_i311)>>2)];
 var $__einp__i_i16_i_i312=(($18+16)|0);
 var $54=HEAP32[(($__einp__i_i16_i_i312)>>2)];
 var $cmp_i_i17_i_i313=($53|0)==($54|0);
 if($cmp_i_i17_i_i313){label=91;break;}else{label=92;break;}
 case 91: 
 var $55=$18;
 var $vtable_i_i19_i_i315=HEAP32[(($55)>>2)];
 var $vfn_i_i20_i_i316=(($vtable_i_i19_i_i315+36)|0);
 var $56=HEAP32[(($vfn_i_i20_i_i316)>>2)];
 var $call_i_i21_i_i331=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$56]($18) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i7_i_i270_0=$call_i_i21_i_i331;label=93;break; } else { label=7;break; }
 case 92: 
 var $57=HEAP32[(($53)>>2)];
 var $retval_i_i7_i_i270_0=$57;label=93;break;
 case 93: 
 var $retval_i_i7_i_i270_0;
 var $cmp_i7_i25_i_i320=($retval_i_i7_i_i270_0|0)==-1;
 if($cmp_i7_i25_i_i320){label=94;break;}else{label=96;break;}
 case 94: 
 HEAP32[(($__sbuf__i11_i_i)>>2)]=0;
 label=95;break;
 case 95: 
 if($52){label=97;break;}else{label=98;break;}
 case 96: 
 var $cmp_i30_i_i325=($18|0)==0;
 var $cmp_i_i327tmp=$52^$cmp_i30_i_i325;
 if($cmp_i_i327tmp){label=98;break;}else{label=97;break;}
 case 97: 
 var $58=HEAP32[(($__err)>>2)];
 var $or=$58|2;
 HEAP32[(($__err)>>2)]=$or;
 label=98;break;
 case 98: 
 if($cmp6105){label=102;break;}else{var $__kb_addr_071=$__kb;var $__st_372=$__status_0;label=99;break;}
 case 99: 
 var $__st_372;
 var $__kb_addr_071;
 var $59=HEAP8[($__st_372)];
 var $cmp87=(($59<<24)>>24)==2;
 if($cmp87){var $__kb_addr_069=$__kb_addr_071;label=103;break;}else{label=100;break;}
 case 100: 
 var $incdec_ptr91=(($__kb_addr_071+12)|0);
 var $cmp84=($incdec_ptr91|0)==($__ke|0);
 if($cmp84){label=102;break;}else{label=101;break;}
 case 101: 
 var $incdec_ptr92=(($__st_372+1)|0);
 var $__kb_addr_071=$incdec_ptr91;var $__st_372=$incdec_ptr92;label=99;break;
 case 102: 
 var $60=HEAP32[(($__err)>>2)];
 var $or96=$60|4;
 HEAP32[(($__err)>>2)]=$or96;
 var $__kb_addr_069=$__ke;label=103;break;
 case 103: 
 var $__kb_addr_069;
 var $tobool_i_i_i=($__stat_hold_sroa_0_1|0)==0;
 if($tobool_i_i_i){label=105;break;}else{label=104;break;}
 case 104: 
 _free($__stat_hold_sroa_0_1);
 label=105;break;
 case 105: 
 STACKTOP=sp;return $__kb_addr_069;
 case 106: 
 var $61$0;
 var $61$1;
 ___resumeException($61$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl($agg_result,$this,$__b,$__e,$__iob,$__err,$__v){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 var $agg_tmp=sp;
 var $agg_tmp2=(sp)+(8);
 var $0=(($__b)|0);
 var $1=HEAP32[(($0)>>2)];
 var $2=(($agg_tmp)|0);
 HEAP32[(($2)>>2)]=$1;
 var $3=(($__e)|0);
 var $4=HEAP32[(($3)>>2)];
 var $5=(($agg_tmp2)|0);
 HEAP32[(($5)>>2)]=$4;
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($agg_result,0,$agg_tmp,$agg_tmp2,$__iob,$__err,$__v);
 STACKTOP=sp;return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($agg_result,$this,$__b,$__e,$__iob,$__err,$__v){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+144)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__atoms=sp;
 var $__thousands_sep=(sp)+(104);
 var $__grouping=(sp)+(112);
 var $__buf=(sp)+(128);
 var $__size__i_i=$__buf;
 var $__a_end=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__g=STACKTOP;STACKTOP = (STACKTOP + 160)|0;(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__g_end=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__dc=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__fmtflags__i_i=(($__iob+4)|0);
 var $0=HEAP32[(($__fmtflags__i_i)>>2)];
 var $and_i=$0&74;
 if(($and_i|0)==8){ label=2;break;}else if(($and_i|0)==0){ label=3;break;}else if(($and_i|0)==64){ var $retval_0_i=8;label=5;break;}else{label=4;break;}
 case 2: 
 var $retval_0_i=16;label=5;break;
 case 3: 
 var $retval_0_i=0;label=5;break;
 case 4: 
 var $retval_0_i=10;label=5;break;
 case 5: 
 var $retval_0_i;
 var $arraydecay=(($__atoms)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$arraydecay,$__thousands_sep);
 HEAP32[(($__size__i_i)>>2)]=0; HEAP32[((($__size__i_i)+(4))>>2)]=0; HEAP32[((($__size__i_i)+(8))>>2)]=0;
 var $__s_i_i=$__buf;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,10,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=6;break; } else { label=36;break; }
 case 6: 
 var $1=HEAP8[($__size__i_i)];
 var $and_i_i_i=$1&1;
 var $tobool_i_i_i77=(($and_i_i_i<<24)>>24)==0;
 if($tobool_i_i_i77){label=8;break;}else{label=7;break;}
 case 7: 
 var $__data__i21_i_i=(($__buf+8)|0);
 var $2=HEAP32[(($__data__i21_i_i)>>2)];
 var $arrayidx_i_i_i372_pre=(($__s_i_i+1)|0);
 var $cond_i_i=$2;var $arrayidx_i_i_i372_pre_phi=$arrayidx_i_i_i372_pre;var $__data__i21_i_i363_pre_phi=$__data__i21_i_i;label=9;break;
 case 8: 
 var $arrayidx_i_i_i78=(($__s_i_i+1)|0);
 var $__data__i21_i_i363_pre=(($__buf+8)|0);
 var $cond_i_i=$arrayidx_i_i_i78;var $arrayidx_i_i_i372_pre_phi=$arrayidx_i_i_i78;var $__data__i21_i_i363_pre_phi=$__data__i21_i_i363_pre;label=9;break;
 case 9: 
 var $__data__i21_i_i363_pre_phi;
 var $arrayidx_i_i_i372_pre_phi;
 var $cond_i_i;
 HEAP32[(($__a_end)>>2)]=$cond_i_i;
 var $arraydecay5=(($__g)|0);
 HEAP32[(($__g_end)>>2)]=$arraydecay5;
 HEAP32[(($__dc)>>2)]=0;
 var $__sbuf__i_i_i97=(($__b)|0);
 var $__sbuf__i11_i_i118=(($__e)|0);
 var $__cap__i_i320=(($__buf)|0);
 var $__size__i23_i231=(($__buf+4)|0);
 var $3=HEAP32[(($__thousands_sep)>>2)];
 var $_pre=HEAP32[(($__sbuf__i_i_i97)>>2)];
 var $__a_0=$cond_i_i;var $4=$_pre;label=10;break;
 case 10: 
 var $4;
 var $__a_0;
 var $tobool_i_i_i98=($4|0)==0;
 if($tobool_i_i_i98){var $10=0;label=16;break;}else{label=11;break;}
 case 11: 
 var $__ninp__i_i_i_i101=(($4+12)|0);
 var $5=HEAP32[(($__ninp__i_i_i_i101)>>2)];
 var $__einp__i_i_i_i102=(($4+16)|0);
 var $6=HEAP32[(($__einp__i_i_i_i102)>>2)];
 var $cmp_i_i_i_i103=($5|0)==($6|0);
 if($cmp_i_i_i_i103){label=12;break;}else{label=13;break;}
 case 12: 
 var $7=$4;
 var $vtable_i_i_i_i105=HEAP32[(($7)>>2)];
 var $vfn_i_i_i_i106=(($vtable_i_i_i_i105+36)|0);
 var $8=HEAP32[(($vfn_i_i_i_i106)>>2)];
 var $call_i_i_i_i141=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$8]($4) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i_i_i88_0=$call_i_i_i_i141;label=14;break; } else { label=35;break; }
 case 13: 
 var $9=HEAP32[(($5)>>2)];
 var $retval_i_i_i_i88_0=$9;label=14;break;
 case 14: 
 var $retval_i_i_i_i88_0;
 var $cmp_i7_i_i_i110=($retval_i_i_i_i88_0|0)==-1;
 if($cmp_i7_i_i_i110){label=15;break;}else{var $10=$4;label=16;break;}
 case 15: 
 HEAP32[(($__sbuf__i_i_i97)>>2)]=0;
 var $10=0;label=16;break;
 case 16: 
 var $10;
 var $cmp_i_i_i115=($10|0)==0;
 var $11=HEAP32[(($__sbuf__i11_i_i118)>>2)];
 var $tobool_i12_i_i119=($11|0)==0;
 if($tobool_i12_i_i119){label=22;break;}else{label=17;break;}
 case 17: 
 var $__ninp__i_i15_i_i123=(($11+12)|0);
 var $12=HEAP32[(($__ninp__i_i15_i_i123)>>2)];
 var $__einp__i_i16_i_i124=(($11+16)|0);
 var $13=HEAP32[(($__einp__i_i16_i_i124)>>2)];
 var $cmp_i_i17_i_i125=($12|0)==($13|0);
 if($cmp_i_i17_i_i125){label=18;break;}else{label=19;break;}
 case 18: 
 var $14=$11;
 var $vtable_i_i19_i_i127=HEAP32[(($14)>>2)];
 var $vfn_i_i20_i_i128=(($vtable_i_i19_i_i127+36)|0);
 var $15=HEAP32[(($vfn_i_i20_i_i128)>>2)];
 var $call_i_i21_i_i143=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$15]($11) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i7_i_i82_0=$call_i_i21_i_i143;label=20;break; } else { label=35;break; }
 case 19: 
 var $16=HEAP32[(($12)>>2)];
 var $retval_i_i7_i_i82_0=$16;label=20;break;
 case 20: 
 var $retval_i_i7_i_i82_0;
 var $cmp_i7_i25_i_i132=($retval_i_i7_i_i82_0|0)==-1;
 if($cmp_i7_i25_i_i132){label=21;break;}else{label=23;break;}
 case 21: 
 HEAP32[(($__sbuf__i11_i_i118)>>2)]=0;
 label=22;break;
 case 22: 
 if($cmp_i_i_i115){var $__a_2=$__a_0;var $35=0;var $cmp_i30_i_i13721=1;label=45;break;}else{var $17=0;var $cmp_i30_i_i13722=1;label=24;break;}
 case 23: 
 var $cmp_i30_i_i137=($11|0)==0;
 var $lnot_i=$cmp_i_i_i115^$cmp_i30_i_i137;
 if($lnot_i){var $17=$11;var $cmp_i30_i_i13722=$cmp_i30_i_i137;label=24;break;}else{var $__a_2=$__a_0;var $35=$11;var $cmp_i30_i_i13721=$cmp_i30_i_i137;label=45;break;}
 case 24: 
 var $cmp_i30_i_i13722;
 var $17;
 var $18=HEAP32[(($__a_end)>>2)];
 var $sub_ptr_lhs_cast=$18;
 var $sub_ptr_rhs_cast=$__a_0;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $19=HEAP8[($__size__i_i)];
 var $conv_i_i156=($19&255);
 var $and_i_i157=$conv_i_i156&1;
 var $tobool_i_i158=($and_i_i157|0)==0;
 var $20=HEAP32[(($__size__i23_i231)>>2)];
 var $shr_i_i12=$conv_i_i156>>>1;
 var $cond_i162=($tobool_i_i158?$shr_i_i12:$20);
 var $cmp=($sub_ptr_sub|0)==($cond_i162|0);
 if($cmp){label=25;break;}else{var $__a_1=$__a_0;label=38;break;}
 case 25: 
 if($tobool_i_i158){label=27;break;}else{label=26;break;}
 case 26: 
 var $21=HEAP32[(($__size__i23_i231)>>2)];
 var $cond_i243=$21;var $cond_i20223=$21;label=28;break;
 case 27: 
 var $shr_i_i20013=$conv_i_i156>>>1;
 var $shr_i_i24114=$conv_i_i156>>>1;
 var $cond_i243=$shr_i_i24114;var $cond_i20223=$shr_i_i20013;label=28;break;
 case 28: 
 var $cond_i20223;
 var $cond_i243;
 var $mul=$cond_i243<<1;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$mul,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=29;break; } else { label=35;break; }
 case 29: 
 var $22=HEAP8[($__size__i_i)];
 var $and_i_i312=$22&1;
 var $tobool_i_i313=(($and_i_i312<<24)>>24)==0;
 if($tobool_i_i313){var $cond_i324=10;label=31;break;}else{label=30;break;}
 case 30: 
 var $23=HEAP32[(($__cap__i_i320)>>2)];
 var $and_i11_i321=$23&-2;
 var $phitmp15=((($and_i11_i321)-(1))|0);
 var $cond_i324=$phitmp15;label=31;break;
 case 31: 
 var $cond_i324;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$cond_i324,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=32;break; } else { label=35;break; }
 case 32: 
 var $24=HEAP8[($__size__i_i)];
 var $and_i_i_i355=$24&1;
 var $tobool_i_i_i356=(($and_i_i_i355<<24)>>24)==0;
 if($tobool_i_i_i356){var $cond_i_i374=$arrayidx_i_i_i372_pre_phi;label=34;break;}else{label=33;break;}
 case 33: 
 var $25=HEAP32[(($__data__i21_i_i363_pre_phi)>>2)];
 var $cond_i_i374=$25;label=34;break;
 case 34: 
 var $cond_i_i374;
 var $add_ptr=(($cond_i_i374+$cond_i20223)|0);
 HEAP32[(($__a_end)>>2)]=$add_ptr;
 var $__a_1=$cond_i_i374;label=38;break;
 case 35: 
 var $lpad_loopexit16$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_loopexit16$1 = tempRet0;
 var $lpad_phi$1=$lpad_loopexit16$1;var $lpad_phi$0=$lpad_loopexit16$0;label=37;break;
 case 36: 
 var $lpad_nonloopexit17$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_nonloopexit17$1 = tempRet0;
 var $lpad_phi$1=$lpad_nonloopexit17$1;var $lpad_phi$0=$lpad_nonloopexit17$0;label=37;break;
 case 37: 
 var $lpad_phi$0;
 var $lpad_phi$1;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 ___resumeException($lpad_phi$0)
 case 38: 
 var $__a_1;
 var $__ninp__i_i384=(($10+12)|0);
 var $26=HEAP32[(($__ninp__i_i384)>>2)];
 var $__einp__i_i385=(($10+16)|0);
 var $27=HEAP32[(($__einp__i_i385)>>2)];
 var $cmp_i_i386=($26|0)==($27|0);
 if($cmp_i_i386){label=39;break;}else{label=40;break;}
 case 39: 
 var $28=$10;
 var $vtable_i_i387=HEAP32[(($28)>>2)];
 var $vfn_i_i388=(($vtable_i_i387+36)|0);
 var $29=HEAP32[(($vfn_i_i388)>>2)];
 var $call_i_i393=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$29]($10) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i378_0=$call_i_i393;label=41;break; } else { label=35;break; }
 case 40: 
 var $30=HEAP32[(($26)>>2)];
 var $retval_i_i378_0=$30;label=41;break;
 case 41: 
 var $retval_i_i378_0;
 var $call21=__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($retval_i_i378_0,$retval_0_i,$__a_1,$__a_end,$__dc,$3,$__grouping,$arraydecay5,$__g_end,$arraydecay);
 var $tobool=($call21|0)==0;
 if($tobool){label=42;break;}else{var $__a_2=$__a_1;var $35=$17;var $cmp_i30_i_i13721=$cmp_i30_i_i13722;label=45;break;}
 case 42: 
 var $31=HEAP32[(($__ninp__i_i384)>>2)];
 var $32=HEAP32[(($__einp__i_i385)>>2)];
 var $cmp_i_i290=($31|0)==($32|0);
 if($cmp_i_i290){label=43;break;}else{label=44;break;}
 case 43: 
 var $33=$10;
 var $vtable_i_i=HEAP32[(($33)>>2)];
 var $vfn_i_i=(($vtable_i_i+40)|0);
 var $34=HEAP32[(($vfn_i_i)>>2)];
 var $call_i_i291=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$34]($10) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $__a_0=$__a_1;var $4=$10;label=10;break; } else { label=35;break; }
 case 44: 
 var $incdec_ptr_i_i=(($31+4)|0);
 HEAP32[(($__ninp__i_i384)>>2)]=$incdec_ptr_i_i;
 var $__a_0=$__a_1;var $4=$10;label=10;break;
 case 45: 
 var $cmp_i30_i_i13721;
 var $35;
 var $__a_2;
 var $__size__i_i262=$__grouping;
 var $36=HEAP8[($__size__i_i262)];
 var $conv_i_i263=($36&255);
 var $and_i_i264=$conv_i_i263&1;
 var $tobool_i_i265=($and_i_i264|0)==0;
 if($tobool_i_i265){label=47;break;}else{label=46;break;}
 case 46: 
 var $__size__i23_i272=(($__grouping+4)|0);
 var $37=HEAP32[(($__size__i23_i272)>>2)];
 var $cond_i284=$37;label=48;break;
 case 47: 
 var $shr_i_i28211=$conv_i_i263>>>1;
 var $cond_i284=$shr_i_i28211;label=48;break;
 case 48: 
 var $cond_i284;
 var $cmp27=($cond_i284|0)==0;
 if($cmp27){label=51;break;}else{label=49;break;}
 case 49: 
 var $38=HEAP32[(($__g_end)>>2)];
 var $sub_ptr_lhs_cast29=$38;
 var $sub_ptr_rhs_cast30=$__g;
 var $sub_ptr_sub31=((($sub_ptr_lhs_cast29)-($sub_ptr_rhs_cast30))|0);
 var $cmp32=($sub_ptr_sub31|0)<160;
 if($cmp32){label=50;break;}else{label=51;break;}
 case 50: 
 var $39=HEAP32[(($__dc)>>2)];
 var $incdec_ptr=(($38+4)|0);
 HEAP32[(($__g_end)>>2)]=$incdec_ptr;
 HEAP32[(($38)>>2)]=$39;
 label=51;break;
 case 51: 
 var $40=HEAP32[(($__a_end)>>2)];
 var $call36=(function() { try { __THREW__ = 0; return __ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji($__a_2,$40,$__err,$retval_0_i) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=52;break; } else { label=36;break; }
 case 52: 
 HEAP32[(($__v)>>2)]=$call36;
 var $41=HEAP32[(($__g_end)>>2)];
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$arraydecay5,$41,$__err);
 if($cmp_i_i_i115){var $47=0;label=58;break;}else{label=53;break;}
 case 53: 
 var $__ninp__i_i_i_i=(($10+12)|0);
 var $42=HEAP32[(($__ninp__i_i_i_i)>>2)];
 var $__einp__i_i_i_i=(($10+16)|0);
 var $43=HEAP32[(($__einp__i_i_i_i)>>2)];
 var $cmp_i_i_i_i=($42|0)==($43|0);
 if($cmp_i_i_i_i){label=54;break;}else{label=55;break;}
 case 54: 
 var $44=$10;
 var $vtable_i_i_i_i=HEAP32[(($44)>>2)];
 var $vfn_i_i_i_i=(($vtable_i_i_i_i+36)|0);
 var $45=HEAP32[(($vfn_i_i_i_i)>>2)];
 var $call_i_i_i_i51=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$45]($10) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i_i_i_0=$call_i_i_i_i51;label=56;break; } else { label=36;break; }
 case 55: 
 var $46=HEAP32[(($42)>>2)];
 var $retval_i_i_i_i_0=$46;label=56;break;
 case 56: 
 var $retval_i_i_i_i_0;
 var $cmp_i7_i_i_i=($retval_i_i_i_i_0|0)==-1;
 if($cmp_i7_i_i_i){label=57;break;}else{var $47=$10;label=58;break;}
 case 57: 
 HEAP32[(($__sbuf__i_i_i97)>>2)]=0;
 var $47=0;label=58;break;
 case 58: 
 var $47;
 var $cmp_i_i_i50=($47|0)==0;
 if($cmp_i30_i_i13721){label=64;break;}else{label=59;break;}
 case 59: 
 var $__ninp__i_i15_i_i=(($35+12)|0);
 var $48=HEAP32[(($__ninp__i_i15_i_i)>>2)];
 var $__einp__i_i16_i_i=(($35+16)|0);
 var $49=HEAP32[(($__einp__i_i16_i_i)>>2)];
 var $cmp_i_i17_i_i=($48|0)==($49|0);
 if($cmp_i_i17_i_i){label=60;break;}else{label=61;break;}
 case 60: 
 var $50=$35;
 var $vtable_i_i19_i_i=HEAP32[(($50)>>2)];
 var $vfn_i_i20_i_i=(($vtable_i_i19_i_i+36)|0);
 var $51=HEAP32[(($vfn_i_i20_i_i)>>2)];
 var $call_i_i21_i_i52=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$51]($35) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i7_i_i_0=$call_i_i21_i_i52;label=62;break; } else { label=36;break; }
 case 61: 
 var $52=HEAP32[(($48)>>2)];
 var $retval_i_i7_i_i_0=$52;label=62;break;
 case 62: 
 var $retval_i_i7_i_i_0;
 var $cmp_i7_i25_i_i=($retval_i_i7_i_i_0|0)==-1;
 if($cmp_i7_i25_i_i){label=63;break;}else{label=65;break;}
 case 63: 
 HEAP32[(($__sbuf__i11_i_i118)>>2)]=0;
 label=64;break;
 case 64: 
 if($cmp_i_i_i50){label=66;break;}else{label=67;break;}
 case 65: 
 var $cmp_i30_i_i=($35|0)==0;
 var $cmp_i_itmp=$cmp_i_i_i50^$cmp_i30_i_i;
 if($cmp_i_itmp){label=67;break;}else{label=66;break;}
 case 66: 
 var $53=HEAP32[(($__err)>>2)];
 var $or=$53|2;
 HEAP32[(($__err)>>2)]=$or;
 label=67;break;
 case 67: 
 var $54=(($agg_result)|0);
 HEAP32[(($54)>>2)]=$47;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 STACKTOP=sp;return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx($agg_result,$this,$__b,$__e,$__iob,$__err,$__v){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 var $agg_tmp=sp;
 var $agg_tmp2=(sp)+(8);
 var $0=(($__b)|0);
 var $1=HEAP32[(($0)>>2)];
 var $2=(($agg_tmp)|0);
 HEAP32[(($2)>>2)]=$1;
 var $3=(($__e)|0);
 var $4=HEAP32[(($3)>>2)];
 var $5=(($agg_tmp2)|0);
 HEAP32[(($5)>>2)]=$4;
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($agg_result,0,$agg_tmp,$agg_tmp2,$__iob,$__err,$__v);
 STACKTOP=sp;return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($agg_result,$this,$__b,$__e,$__iob,$__err,$__v){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+144)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__atoms=sp;
 var $__thousands_sep=(sp)+(104);
 var $__grouping=(sp)+(112);
 var $__buf=(sp)+(128);
 var $__size__i_i=$__buf;
 var $__a_end=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__g=STACKTOP;STACKTOP = (STACKTOP + 160)|0;(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__g_end=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__dc=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__fmtflags__i_i=(($__iob+4)|0);
 var $0=HEAP32[(($__fmtflags__i_i)>>2)];
 var $and_i=$0&74;
 if(($and_i|0)==8){ label=2;break;}else if(($and_i|0)==0){ label=3;break;}else if(($and_i|0)==64){ var $retval_0_i=8;label=5;break;}else{label=4;break;}
 case 2: 
 var $retval_0_i=16;label=5;break;
 case 3: 
 var $retval_0_i=0;label=5;break;
 case 4: 
 var $retval_0_i=10;label=5;break;
 case 5: 
 var $retval_0_i;
 var $arraydecay=(($__atoms)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$arraydecay,$__thousands_sep);
 HEAP32[(($__size__i_i)>>2)]=0; HEAP32[((($__size__i_i)+(4))>>2)]=0; HEAP32[((($__size__i_i)+(8))>>2)]=0;
 var $__s_i_i=$__buf;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,10,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=6;break; } else { label=36;break; }
 case 6: 
 var $1=HEAP8[($__size__i_i)];
 var $and_i_i_i=$1&1;
 var $tobool_i_i_i77=(($and_i_i_i<<24)>>24)==0;
 if($tobool_i_i_i77){label=8;break;}else{label=7;break;}
 case 7: 
 var $__data__i21_i_i=(($__buf+8)|0);
 var $2=HEAP32[(($__data__i21_i_i)>>2)];
 var $arrayidx_i_i_i372_pre=(($__s_i_i+1)|0);
 var $cond_i_i=$2;var $arrayidx_i_i_i372_pre_phi=$arrayidx_i_i_i372_pre;var $__data__i21_i_i363_pre_phi=$__data__i21_i_i;label=9;break;
 case 8: 
 var $arrayidx_i_i_i78=(($__s_i_i+1)|0);
 var $__data__i21_i_i363_pre=(($__buf+8)|0);
 var $cond_i_i=$arrayidx_i_i_i78;var $arrayidx_i_i_i372_pre_phi=$arrayidx_i_i_i78;var $__data__i21_i_i363_pre_phi=$__data__i21_i_i363_pre;label=9;break;
 case 9: 
 var $__data__i21_i_i363_pre_phi;
 var $arrayidx_i_i_i372_pre_phi;
 var $cond_i_i;
 HEAP32[(($__a_end)>>2)]=$cond_i_i;
 var $arraydecay5=(($__g)|0);
 HEAP32[(($__g_end)>>2)]=$arraydecay5;
 HEAP32[(($__dc)>>2)]=0;
 var $__sbuf__i_i_i97=(($__b)|0);
 var $__sbuf__i11_i_i118=(($__e)|0);
 var $__cap__i_i320=(($__buf)|0);
 var $__size__i23_i231=(($__buf+4)|0);
 var $3=HEAP32[(($__thousands_sep)>>2)];
 var $_pre=HEAP32[(($__sbuf__i_i_i97)>>2)];
 var $__a_0=$cond_i_i;var $4=$_pre;label=10;break;
 case 10: 
 var $4;
 var $__a_0;
 var $tobool_i_i_i98=($4|0)==0;
 if($tobool_i_i_i98){var $10=0;label=16;break;}else{label=11;break;}
 case 11: 
 var $__ninp__i_i_i_i101=(($4+12)|0);
 var $5=HEAP32[(($__ninp__i_i_i_i101)>>2)];
 var $__einp__i_i_i_i102=(($4+16)|0);
 var $6=HEAP32[(($__einp__i_i_i_i102)>>2)];
 var $cmp_i_i_i_i103=($5|0)==($6|0);
 if($cmp_i_i_i_i103){label=12;break;}else{label=13;break;}
 case 12: 
 var $7=$4;
 var $vtable_i_i_i_i105=HEAP32[(($7)>>2)];
 var $vfn_i_i_i_i106=(($vtable_i_i_i_i105+36)|0);
 var $8=HEAP32[(($vfn_i_i_i_i106)>>2)];
 var $call_i_i_i_i141=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$8]($4) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i_i_i88_0=$call_i_i_i_i141;label=14;break; } else { label=35;break; }
 case 13: 
 var $9=HEAP32[(($5)>>2)];
 var $retval_i_i_i_i88_0=$9;label=14;break;
 case 14: 
 var $retval_i_i_i_i88_0;
 var $cmp_i7_i_i_i110=($retval_i_i_i_i88_0|0)==-1;
 if($cmp_i7_i_i_i110){label=15;break;}else{var $10=$4;label=16;break;}
 case 15: 
 HEAP32[(($__sbuf__i_i_i97)>>2)]=0;
 var $10=0;label=16;break;
 case 16: 
 var $10;
 var $cmp_i_i_i115=($10|0)==0;
 var $11=HEAP32[(($__sbuf__i11_i_i118)>>2)];
 var $tobool_i12_i_i119=($11|0)==0;
 if($tobool_i12_i_i119){label=22;break;}else{label=17;break;}
 case 17: 
 var $__ninp__i_i15_i_i123=(($11+12)|0);
 var $12=HEAP32[(($__ninp__i_i15_i_i123)>>2)];
 var $__einp__i_i16_i_i124=(($11+16)|0);
 var $13=HEAP32[(($__einp__i_i16_i_i124)>>2)];
 var $cmp_i_i17_i_i125=($12|0)==($13|0);
 if($cmp_i_i17_i_i125){label=18;break;}else{label=19;break;}
 case 18: 
 var $14=$11;
 var $vtable_i_i19_i_i127=HEAP32[(($14)>>2)];
 var $vfn_i_i20_i_i128=(($vtable_i_i19_i_i127+36)|0);
 var $15=HEAP32[(($vfn_i_i20_i_i128)>>2)];
 var $call_i_i21_i_i143=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$15]($11) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i7_i_i82_0=$call_i_i21_i_i143;label=20;break; } else { label=35;break; }
 case 19: 
 var $16=HEAP32[(($12)>>2)];
 var $retval_i_i7_i_i82_0=$16;label=20;break;
 case 20: 
 var $retval_i_i7_i_i82_0;
 var $cmp_i7_i25_i_i132=($retval_i_i7_i_i82_0|0)==-1;
 if($cmp_i7_i25_i_i132){label=21;break;}else{label=23;break;}
 case 21: 
 HEAP32[(($__sbuf__i11_i_i118)>>2)]=0;
 label=22;break;
 case 22: 
 if($cmp_i_i_i115){var $__a_2=$__a_0;var $35=0;var $cmp_i30_i_i13721=1;label=45;break;}else{var $17=0;var $cmp_i30_i_i13722=1;label=24;break;}
 case 23: 
 var $cmp_i30_i_i137=($11|0)==0;
 var $lnot_i=$cmp_i_i_i115^$cmp_i30_i_i137;
 if($lnot_i){var $17=$11;var $cmp_i30_i_i13722=$cmp_i30_i_i137;label=24;break;}else{var $__a_2=$__a_0;var $35=$11;var $cmp_i30_i_i13721=$cmp_i30_i_i137;label=45;break;}
 case 24: 
 var $cmp_i30_i_i13722;
 var $17;
 var $18=HEAP32[(($__a_end)>>2)];
 var $sub_ptr_lhs_cast=$18;
 var $sub_ptr_rhs_cast=$__a_0;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $19=HEAP8[($__size__i_i)];
 var $conv_i_i156=($19&255);
 var $and_i_i157=$conv_i_i156&1;
 var $tobool_i_i158=($and_i_i157|0)==0;
 var $20=HEAP32[(($__size__i23_i231)>>2)];
 var $shr_i_i12=$conv_i_i156>>>1;
 var $cond_i162=($tobool_i_i158?$shr_i_i12:$20);
 var $cmp=($sub_ptr_sub|0)==($cond_i162|0);
 if($cmp){label=25;break;}else{var $__a_1=$__a_0;label=38;break;}
 case 25: 
 if($tobool_i_i158){label=27;break;}else{label=26;break;}
 case 26: 
 var $21=HEAP32[(($__size__i23_i231)>>2)];
 var $cond_i243=$21;var $cond_i20223=$21;label=28;break;
 case 27: 
 var $shr_i_i20013=$conv_i_i156>>>1;
 var $shr_i_i24114=$conv_i_i156>>>1;
 var $cond_i243=$shr_i_i24114;var $cond_i20223=$shr_i_i20013;label=28;break;
 case 28: 
 var $cond_i20223;
 var $cond_i243;
 var $mul=$cond_i243<<1;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$mul,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=29;break; } else { label=35;break; }
 case 29: 
 var $22=HEAP8[($__size__i_i)];
 var $and_i_i312=$22&1;
 var $tobool_i_i313=(($and_i_i312<<24)>>24)==0;
 if($tobool_i_i313){var $cond_i324=10;label=31;break;}else{label=30;break;}
 case 30: 
 var $23=HEAP32[(($__cap__i_i320)>>2)];
 var $and_i11_i321=$23&-2;
 var $phitmp15=((($and_i11_i321)-(1))|0);
 var $cond_i324=$phitmp15;label=31;break;
 case 31: 
 var $cond_i324;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$cond_i324,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=32;break; } else { label=35;break; }
 case 32: 
 var $24=HEAP8[($__size__i_i)];
 var $and_i_i_i355=$24&1;
 var $tobool_i_i_i356=(($and_i_i_i355<<24)>>24)==0;
 if($tobool_i_i_i356){var $cond_i_i374=$arrayidx_i_i_i372_pre_phi;label=34;break;}else{label=33;break;}
 case 33: 
 var $25=HEAP32[(($__data__i21_i_i363_pre_phi)>>2)];
 var $cond_i_i374=$25;label=34;break;
 case 34: 
 var $cond_i_i374;
 var $add_ptr=(($cond_i_i374+$cond_i20223)|0);
 HEAP32[(($__a_end)>>2)]=$add_ptr;
 var $__a_1=$cond_i_i374;label=38;break;
 case 35: 
 var $lpad_loopexit16$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_loopexit16$1 = tempRet0;
 var $lpad_phi$1=$lpad_loopexit16$1;var $lpad_phi$0=$lpad_loopexit16$0;label=37;break;
 case 36: 
 var $lpad_nonloopexit17$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_nonloopexit17$1 = tempRet0;
 var $lpad_phi$1=$lpad_nonloopexit17$1;var $lpad_phi$0=$lpad_nonloopexit17$0;label=37;break;
 case 37: 
 var $lpad_phi$0;
 var $lpad_phi$1;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 ___resumeException($lpad_phi$0)
 case 38: 
 var $__a_1;
 var $__ninp__i_i384=(($10+12)|0);
 var $26=HEAP32[(($__ninp__i_i384)>>2)];
 var $__einp__i_i385=(($10+16)|0);
 var $27=HEAP32[(($__einp__i_i385)>>2)];
 var $cmp_i_i386=($26|0)==($27|0);
 if($cmp_i_i386){label=39;break;}else{label=40;break;}
 case 39: 
 var $28=$10;
 var $vtable_i_i387=HEAP32[(($28)>>2)];
 var $vfn_i_i388=(($vtable_i_i387+36)|0);
 var $29=HEAP32[(($vfn_i_i388)>>2)];
 var $call_i_i393=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$29]($10) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i378_0=$call_i_i393;label=41;break; } else { label=35;break; }
 case 40: 
 var $30=HEAP32[(($26)>>2)];
 var $retval_i_i378_0=$30;label=41;break;
 case 41: 
 var $retval_i_i378_0;
 var $call21=__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($retval_i_i378_0,$retval_0_i,$__a_1,$__a_end,$__dc,$3,$__grouping,$arraydecay5,$__g_end,$arraydecay);
 var $tobool=($call21|0)==0;
 if($tobool){label=42;break;}else{var $__a_2=$__a_1;var $35=$17;var $cmp_i30_i_i13721=$cmp_i30_i_i13722;label=45;break;}
 case 42: 
 var $31=HEAP32[(($__ninp__i_i384)>>2)];
 var $32=HEAP32[(($__einp__i_i385)>>2)];
 var $cmp_i_i290=($31|0)==($32|0);
 if($cmp_i_i290){label=43;break;}else{label=44;break;}
 case 43: 
 var $33=$10;
 var $vtable_i_i=HEAP32[(($33)>>2)];
 var $vfn_i_i=(($vtable_i_i+40)|0);
 var $34=HEAP32[(($vfn_i_i)>>2)];
 var $call_i_i291=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$34]($10) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $__a_0=$__a_1;var $4=$10;label=10;break; } else { label=35;break; }
 case 44: 
 var $incdec_ptr_i_i=(($31+4)|0);
 HEAP32[(($__ninp__i_i384)>>2)]=$incdec_ptr_i_i;
 var $__a_0=$__a_1;var $4=$10;label=10;break;
 case 45: 
 var $cmp_i30_i_i13721;
 var $35;
 var $__a_2;
 var $__size__i_i262=$__grouping;
 var $36=HEAP8[($__size__i_i262)];
 var $conv_i_i263=($36&255);
 var $and_i_i264=$conv_i_i263&1;
 var $tobool_i_i265=($and_i_i264|0)==0;
 if($tobool_i_i265){label=47;break;}else{label=46;break;}
 case 46: 
 var $__size__i23_i272=(($__grouping+4)|0);
 var $37=HEAP32[(($__size__i23_i272)>>2)];
 var $cond_i284=$37;label=48;break;
 case 47: 
 var $shr_i_i28211=$conv_i_i263>>>1;
 var $cond_i284=$shr_i_i28211;label=48;break;
 case 48: 
 var $cond_i284;
 var $cmp27=($cond_i284|0)==0;
 if($cmp27){label=51;break;}else{label=49;break;}
 case 49: 
 var $38=HEAP32[(($__g_end)>>2)];
 var $sub_ptr_lhs_cast29=$38;
 var $sub_ptr_rhs_cast30=$__g;
 var $sub_ptr_sub31=((($sub_ptr_lhs_cast29)-($sub_ptr_rhs_cast30))|0);
 var $cmp32=($sub_ptr_sub31|0)<160;
 if($cmp32){label=50;break;}else{label=51;break;}
 case 50: 
 var $39=HEAP32[(($__dc)>>2)];
 var $incdec_ptr=(($38+4)|0);
 HEAP32[(($__g_end)>>2)]=$incdec_ptr;
 HEAP32[(($38)>>2)]=$39;
 label=51;break;
 case 51: 
 var $40=HEAP32[(($__a_end)>>2)];
 var $call36$r=(function() { try { __THREW__ = 0; return __ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji($__a_2,$40,$__err,$retval_0_i) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();var $call36$0=$call36$r;var $call36$1=tempRet0;if (!__THREW__) { label=52;break; } else { label=36;break; }
 case 52: 
 var $st$0$0=(($__v)|0);
 HEAP32[(($st$0$0)>>2)]=$call36$0;
 var $st$1$1=(($__v+4)|0);
 HEAP32[(($st$1$1)>>2)]=$call36$1;
 var $41=HEAP32[(($__g_end)>>2)];
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$arraydecay5,$41,$__err);
 if($cmp_i_i_i115){var $47=0;label=58;break;}else{label=53;break;}
 case 53: 
 var $__ninp__i_i_i_i=(($10+12)|0);
 var $42=HEAP32[(($__ninp__i_i_i_i)>>2)];
 var $__einp__i_i_i_i=(($10+16)|0);
 var $43=HEAP32[(($__einp__i_i_i_i)>>2)];
 var $cmp_i_i_i_i=($42|0)==($43|0);
 if($cmp_i_i_i_i){label=54;break;}else{label=55;break;}
 case 54: 
 var $44=$10;
 var $vtable_i_i_i_i=HEAP32[(($44)>>2)];
 var $vfn_i_i_i_i=(($vtable_i_i_i_i+36)|0);
 var $45=HEAP32[(($vfn_i_i_i_i)>>2)];
 var $call_i_i_i_i51=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$45]($10) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i_i_i_0=$call_i_i_i_i51;label=56;break; } else { label=36;break; }
 case 55: 
 var $46=HEAP32[(($42)>>2)];
 var $retval_i_i_i_i_0=$46;label=56;break;
 case 56: 
 var $retval_i_i_i_i_0;
 var $cmp_i7_i_i_i=($retval_i_i_i_i_0|0)==-1;
 if($cmp_i7_i_i_i){label=57;break;}else{var $47=$10;label=58;break;}
 case 57: 
 HEAP32[(($__sbuf__i_i_i97)>>2)]=0;
 var $47=0;label=58;break;
 case 58: 
 var $47;
 var $cmp_i_i_i50=($47|0)==0;
 if($cmp_i30_i_i13721){label=64;break;}else{label=59;break;}
 case 59: 
 var $__ninp__i_i15_i_i=(($35+12)|0);
 var $48=HEAP32[(($__ninp__i_i15_i_i)>>2)];
 var $__einp__i_i16_i_i=(($35+16)|0);
 var $49=HEAP32[(($__einp__i_i16_i_i)>>2)];
 var $cmp_i_i17_i_i=($48|0)==($49|0);
 if($cmp_i_i17_i_i){label=60;break;}else{label=61;break;}
 case 60: 
 var $50=$35;
 var $vtable_i_i19_i_i=HEAP32[(($50)>>2)];
 var $vfn_i_i20_i_i=(($vtable_i_i19_i_i+36)|0);
 var $51=HEAP32[(($vfn_i_i20_i_i)>>2)];
 var $call_i_i21_i_i52=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$51]($35) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i7_i_i_0=$call_i_i21_i_i52;label=62;break; } else { label=36;break; }
 case 61: 
 var $52=HEAP32[(($48)>>2)];
 var $retval_i_i7_i_i_0=$52;label=62;break;
 case 62: 
 var $retval_i_i7_i_i_0;
 var $cmp_i7_i25_i_i=($retval_i_i7_i_i_0|0)==-1;
 if($cmp_i7_i25_i_i){label=63;break;}else{label=65;break;}
 case 63: 
 HEAP32[(($__sbuf__i11_i_i118)>>2)]=0;
 label=64;break;
 case 64: 
 if($cmp_i_i_i50){label=66;break;}else{label=67;break;}
 case 65: 
 var $cmp_i30_i_i=($35|0)==0;
 var $cmp_i_itmp=$cmp_i_i_i50^$cmp_i30_i_i;
 if($cmp_i_itmp){label=67;break;}else{label=66;break;}
 case 66: 
 var $53=HEAP32[(($__err)>>2)];
 var $or=$53|2;
 HEAP32[(($__err)>>2)]=$or;
 label=67;break;
 case 67: 
 var $54=(($agg_result)|0);
 HEAP32[(($54)>>2)]=$47;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 STACKTOP=sp;return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt($agg_result,$this,$__b,$__e,$__iob,$__err,$__v){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 var $agg_tmp=sp;
 var $agg_tmp2=(sp)+(8);
 var $0=(($__b)|0);
 var $1=HEAP32[(($0)>>2)];
 var $2=(($agg_tmp)|0);
 HEAP32[(($2)>>2)]=$1;
 var $3=(($__e)|0);
 var $4=HEAP32[(($3)>>2)];
 var $5=(($agg_tmp2)|0);
 HEAP32[(($5)>>2)]=$4;
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($agg_result,0,$agg_tmp,$agg_tmp2,$__iob,$__err,$__v);
 STACKTOP=sp;return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($agg_result,$this,$__b,$__e,$__iob,$__err,$__v){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+144)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__atoms=sp;
 var $__thousands_sep=(sp)+(104);
 var $__grouping=(sp)+(112);
 var $__buf=(sp)+(128);
 var $__size__i_i=$__buf;
 var $__a_end=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__g=STACKTOP;STACKTOP = (STACKTOP + 160)|0;(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__g_end=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__dc=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__fmtflags__i_i=(($__iob+4)|0);
 var $0=HEAP32[(($__fmtflags__i_i)>>2)];
 var $and_i=$0&74;
 if(($and_i|0)==8){ label=2;break;}else if(($and_i|0)==0){ label=3;break;}else if(($and_i|0)==64){ var $retval_0_i=8;label=5;break;}else{label=4;break;}
 case 2: 
 var $retval_0_i=16;label=5;break;
 case 3: 
 var $retval_0_i=0;label=5;break;
 case 4: 
 var $retval_0_i=10;label=5;break;
 case 5: 
 var $retval_0_i;
 var $arraydecay=(($__atoms)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$arraydecay,$__thousands_sep);
 HEAP32[(($__size__i_i)>>2)]=0; HEAP32[((($__size__i_i)+(4))>>2)]=0; HEAP32[((($__size__i_i)+(8))>>2)]=0;
 var $__s_i_i=$__buf;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,10,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=6;break; } else { label=36;break; }
 case 6: 
 var $1=HEAP8[($__size__i_i)];
 var $and_i_i_i=$1&1;
 var $tobool_i_i_i77=(($and_i_i_i<<24)>>24)==0;
 if($tobool_i_i_i77){label=8;break;}else{label=7;break;}
 case 7: 
 var $__data__i21_i_i=(($__buf+8)|0);
 var $2=HEAP32[(($__data__i21_i_i)>>2)];
 var $arrayidx_i_i_i372_pre=(($__s_i_i+1)|0);
 var $cond_i_i=$2;var $arrayidx_i_i_i372_pre_phi=$arrayidx_i_i_i372_pre;var $__data__i21_i_i363_pre_phi=$__data__i21_i_i;label=9;break;
 case 8: 
 var $arrayidx_i_i_i78=(($__s_i_i+1)|0);
 var $__data__i21_i_i363_pre=(($__buf+8)|0);
 var $cond_i_i=$arrayidx_i_i_i78;var $arrayidx_i_i_i372_pre_phi=$arrayidx_i_i_i78;var $__data__i21_i_i363_pre_phi=$__data__i21_i_i363_pre;label=9;break;
 case 9: 
 var $__data__i21_i_i363_pre_phi;
 var $arrayidx_i_i_i372_pre_phi;
 var $cond_i_i;
 HEAP32[(($__a_end)>>2)]=$cond_i_i;
 var $arraydecay5=(($__g)|0);
 HEAP32[(($__g_end)>>2)]=$arraydecay5;
 HEAP32[(($__dc)>>2)]=0;
 var $__sbuf__i_i_i97=(($__b)|0);
 var $__sbuf__i11_i_i118=(($__e)|0);
 var $__cap__i_i320=(($__buf)|0);
 var $__size__i23_i231=(($__buf+4)|0);
 var $3=HEAP32[(($__thousands_sep)>>2)];
 var $_pre=HEAP32[(($__sbuf__i_i_i97)>>2)];
 var $__a_0=$cond_i_i;var $4=$_pre;label=10;break;
 case 10: 
 var $4;
 var $__a_0;
 var $tobool_i_i_i98=($4|0)==0;
 if($tobool_i_i_i98){var $10=0;label=16;break;}else{label=11;break;}
 case 11: 
 var $__ninp__i_i_i_i101=(($4+12)|0);
 var $5=HEAP32[(($__ninp__i_i_i_i101)>>2)];
 var $__einp__i_i_i_i102=(($4+16)|0);
 var $6=HEAP32[(($__einp__i_i_i_i102)>>2)];
 var $cmp_i_i_i_i103=($5|0)==($6|0);
 if($cmp_i_i_i_i103){label=12;break;}else{label=13;break;}
 case 12: 
 var $7=$4;
 var $vtable_i_i_i_i105=HEAP32[(($7)>>2)];
 var $vfn_i_i_i_i106=(($vtable_i_i_i_i105+36)|0);
 var $8=HEAP32[(($vfn_i_i_i_i106)>>2)];
 var $call_i_i_i_i141=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$8]($4) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i_i_i88_0=$call_i_i_i_i141;label=14;break; } else { label=35;break; }
 case 13: 
 var $9=HEAP32[(($5)>>2)];
 var $retval_i_i_i_i88_0=$9;label=14;break;
 case 14: 
 var $retval_i_i_i_i88_0;
 var $cmp_i7_i_i_i110=($retval_i_i_i_i88_0|0)==-1;
 if($cmp_i7_i_i_i110){label=15;break;}else{var $10=$4;label=16;break;}
 case 15: 
 HEAP32[(($__sbuf__i_i_i97)>>2)]=0;
 var $10=0;label=16;break;
 case 16: 
 var $10;
 var $cmp_i_i_i115=($10|0)==0;
 var $11=HEAP32[(($__sbuf__i11_i_i118)>>2)];
 var $tobool_i12_i_i119=($11|0)==0;
 if($tobool_i12_i_i119){label=22;break;}else{label=17;break;}
 case 17: 
 var $__ninp__i_i15_i_i123=(($11+12)|0);
 var $12=HEAP32[(($__ninp__i_i15_i_i123)>>2)];
 var $__einp__i_i16_i_i124=(($11+16)|0);
 var $13=HEAP32[(($__einp__i_i16_i_i124)>>2)];
 var $cmp_i_i17_i_i125=($12|0)==($13|0);
 if($cmp_i_i17_i_i125){label=18;break;}else{label=19;break;}
 case 18: 
 var $14=$11;
 var $vtable_i_i19_i_i127=HEAP32[(($14)>>2)];
 var $vfn_i_i20_i_i128=(($vtable_i_i19_i_i127+36)|0);
 var $15=HEAP32[(($vfn_i_i20_i_i128)>>2)];
 var $call_i_i21_i_i143=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$15]($11) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i7_i_i82_0=$call_i_i21_i_i143;label=20;break; } else { label=35;break; }
 case 19: 
 var $16=HEAP32[(($12)>>2)];
 var $retval_i_i7_i_i82_0=$16;label=20;break;
 case 20: 
 var $retval_i_i7_i_i82_0;
 var $cmp_i7_i25_i_i132=($retval_i_i7_i_i82_0|0)==-1;
 if($cmp_i7_i25_i_i132){label=21;break;}else{label=23;break;}
 case 21: 
 HEAP32[(($__sbuf__i11_i_i118)>>2)]=0;
 label=22;break;
 case 22: 
 if($cmp_i_i_i115){var $__a_2=$__a_0;var $35=0;var $cmp_i30_i_i13721=1;label=45;break;}else{var $17=0;var $cmp_i30_i_i13722=1;label=24;break;}
 case 23: 
 var $cmp_i30_i_i137=($11|0)==0;
 var $lnot_i=$cmp_i_i_i115^$cmp_i30_i_i137;
 if($lnot_i){var $17=$11;var $cmp_i30_i_i13722=$cmp_i30_i_i137;label=24;break;}else{var $__a_2=$__a_0;var $35=$11;var $cmp_i30_i_i13721=$cmp_i30_i_i137;label=45;break;}
 case 24: 
 var $cmp_i30_i_i13722;
 var $17;
 var $18=HEAP32[(($__a_end)>>2)];
 var $sub_ptr_lhs_cast=$18;
 var $sub_ptr_rhs_cast=$__a_0;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $19=HEAP8[($__size__i_i)];
 var $conv_i_i156=($19&255);
 var $and_i_i157=$conv_i_i156&1;
 var $tobool_i_i158=($and_i_i157|0)==0;
 var $20=HEAP32[(($__size__i23_i231)>>2)];
 var $shr_i_i12=$conv_i_i156>>>1;
 var $cond_i162=($tobool_i_i158?$shr_i_i12:$20);
 var $cmp=($sub_ptr_sub|0)==($cond_i162|0);
 if($cmp){label=25;break;}else{var $__a_1=$__a_0;label=38;break;}
 case 25: 
 if($tobool_i_i158){label=27;break;}else{label=26;break;}
 case 26: 
 var $21=HEAP32[(($__size__i23_i231)>>2)];
 var $cond_i243=$21;var $cond_i20223=$21;label=28;break;
 case 27: 
 var $shr_i_i20013=$conv_i_i156>>>1;
 var $shr_i_i24114=$conv_i_i156>>>1;
 var $cond_i243=$shr_i_i24114;var $cond_i20223=$shr_i_i20013;label=28;break;
 case 28: 
 var $cond_i20223;
 var $cond_i243;
 var $mul=$cond_i243<<1;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$mul,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=29;break; } else { label=35;break; }
 case 29: 
 var $22=HEAP8[($__size__i_i)];
 var $and_i_i312=$22&1;
 var $tobool_i_i313=(($and_i_i312<<24)>>24)==0;
 if($tobool_i_i313){var $cond_i324=10;label=31;break;}else{label=30;break;}
 case 30: 
 var $23=HEAP32[(($__cap__i_i320)>>2)];
 var $and_i11_i321=$23&-2;
 var $phitmp15=((($and_i11_i321)-(1))|0);
 var $cond_i324=$phitmp15;label=31;break;
 case 31: 
 var $cond_i324;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$cond_i324,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=32;break; } else { label=35;break; }
 case 32: 
 var $24=HEAP8[($__size__i_i)];
 var $and_i_i_i355=$24&1;
 var $tobool_i_i_i356=(($and_i_i_i355<<24)>>24)==0;
 if($tobool_i_i_i356){var $cond_i_i374=$arrayidx_i_i_i372_pre_phi;label=34;break;}else{label=33;break;}
 case 33: 
 var $25=HEAP32[(($__data__i21_i_i363_pre_phi)>>2)];
 var $cond_i_i374=$25;label=34;break;
 case 34: 
 var $cond_i_i374;
 var $add_ptr=(($cond_i_i374+$cond_i20223)|0);
 HEAP32[(($__a_end)>>2)]=$add_ptr;
 var $__a_1=$cond_i_i374;label=38;break;
 case 35: 
 var $lpad_loopexit16$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_loopexit16$1 = tempRet0;
 var $lpad_phi$1=$lpad_loopexit16$1;var $lpad_phi$0=$lpad_loopexit16$0;label=37;break;
 case 36: 
 var $lpad_nonloopexit17$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_nonloopexit17$1 = tempRet0;
 var $lpad_phi$1=$lpad_nonloopexit17$1;var $lpad_phi$0=$lpad_nonloopexit17$0;label=37;break;
 case 37: 
 var $lpad_phi$0;
 var $lpad_phi$1;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 ___resumeException($lpad_phi$0)
 case 38: 
 var $__a_1;
 var $__ninp__i_i384=(($10+12)|0);
 var $26=HEAP32[(($__ninp__i_i384)>>2)];
 var $__einp__i_i385=(($10+16)|0);
 var $27=HEAP32[(($__einp__i_i385)>>2)];
 var $cmp_i_i386=($26|0)==($27|0);
 if($cmp_i_i386){label=39;break;}else{label=40;break;}
 case 39: 
 var $28=$10;
 var $vtable_i_i387=HEAP32[(($28)>>2)];
 var $vfn_i_i388=(($vtable_i_i387+36)|0);
 var $29=HEAP32[(($vfn_i_i388)>>2)];
 var $call_i_i393=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$29]($10) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i378_0=$call_i_i393;label=41;break; } else { label=35;break; }
 case 40: 
 var $30=HEAP32[(($26)>>2)];
 var $retval_i_i378_0=$30;label=41;break;
 case 41: 
 var $retval_i_i378_0;
 var $call21=__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($retval_i_i378_0,$retval_0_i,$__a_1,$__a_end,$__dc,$3,$__grouping,$arraydecay5,$__g_end,$arraydecay);
 var $tobool=($call21|0)==0;
 if($tobool){label=42;break;}else{var $__a_2=$__a_1;var $35=$17;var $cmp_i30_i_i13721=$cmp_i30_i_i13722;label=45;break;}
 case 42: 
 var $31=HEAP32[(($__ninp__i_i384)>>2)];
 var $32=HEAP32[(($__einp__i_i385)>>2)];
 var $cmp_i_i290=($31|0)==($32|0);
 if($cmp_i_i290){label=43;break;}else{label=44;break;}
 case 43: 
 var $33=$10;
 var $vtable_i_i=HEAP32[(($33)>>2)];
 var $vfn_i_i=(($vtable_i_i+40)|0);
 var $34=HEAP32[(($vfn_i_i)>>2)];
 var $call_i_i291=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$34]($10) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $__a_0=$__a_1;var $4=$10;label=10;break; } else { label=35;break; }
 case 44: 
 var $incdec_ptr_i_i=(($31+4)|0);
 HEAP32[(($__ninp__i_i384)>>2)]=$incdec_ptr_i_i;
 var $__a_0=$__a_1;var $4=$10;label=10;break;
 case 45: 
 var $cmp_i30_i_i13721;
 var $35;
 var $__a_2;
 var $__size__i_i262=$__grouping;
 var $36=HEAP8[($__size__i_i262)];
 var $conv_i_i263=($36&255);
 var $and_i_i264=$conv_i_i263&1;
 var $tobool_i_i265=($and_i_i264|0)==0;
 if($tobool_i_i265){label=47;break;}else{label=46;break;}
 case 46: 
 var $__size__i23_i272=(($__grouping+4)|0);
 var $37=HEAP32[(($__size__i23_i272)>>2)];
 var $cond_i284=$37;label=48;break;
 case 47: 
 var $shr_i_i28211=$conv_i_i263>>>1;
 var $cond_i284=$shr_i_i28211;label=48;break;
 case 48: 
 var $cond_i284;
 var $cmp27=($cond_i284|0)==0;
 if($cmp27){label=51;break;}else{label=49;break;}
 case 49: 
 var $38=HEAP32[(($__g_end)>>2)];
 var $sub_ptr_lhs_cast29=$38;
 var $sub_ptr_rhs_cast30=$__g;
 var $sub_ptr_sub31=((($sub_ptr_lhs_cast29)-($sub_ptr_rhs_cast30))|0);
 var $cmp32=($sub_ptr_sub31|0)<160;
 if($cmp32){label=50;break;}else{label=51;break;}
 case 50: 
 var $39=HEAP32[(($__dc)>>2)];
 var $incdec_ptr=(($38+4)|0);
 HEAP32[(($__g_end)>>2)]=$incdec_ptr;
 HEAP32[(($38)>>2)]=$39;
 label=51;break;
 case 51: 
 var $40=HEAP32[(($__a_end)>>2)];
 var $call36=(function() { try { __THREW__ = 0; return __ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji($__a_2,$40,$__err,$retval_0_i) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=52;break; } else { label=36;break; }
 case 52: 
 HEAP16[(($__v)>>1)]=$call36;
 var $41=HEAP32[(($__g_end)>>2)];
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$arraydecay5,$41,$__err);
 if($cmp_i_i_i115){var $47=0;label=58;break;}else{label=53;break;}
 case 53: 
 var $__ninp__i_i_i_i=(($10+12)|0);
 var $42=HEAP32[(($__ninp__i_i_i_i)>>2)];
 var $__einp__i_i_i_i=(($10+16)|0);
 var $43=HEAP32[(($__einp__i_i_i_i)>>2)];
 var $cmp_i_i_i_i=($42|0)==($43|0);
 if($cmp_i_i_i_i){label=54;break;}else{label=55;break;}
 case 54: 
 var $44=$10;
 var $vtable_i_i_i_i=HEAP32[(($44)>>2)];
 var $vfn_i_i_i_i=(($vtable_i_i_i_i+36)|0);
 var $45=HEAP32[(($vfn_i_i_i_i)>>2)];
 var $call_i_i_i_i51=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$45]($10) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i_i_i_0=$call_i_i_i_i51;label=56;break; } else { label=36;break; }
 case 55: 
 var $46=HEAP32[(($42)>>2)];
 var $retval_i_i_i_i_0=$46;label=56;break;
 case 56: 
 var $retval_i_i_i_i_0;
 var $cmp_i7_i_i_i=($retval_i_i_i_i_0|0)==-1;
 if($cmp_i7_i_i_i){label=57;break;}else{var $47=$10;label=58;break;}
 case 57: 
 HEAP32[(($__sbuf__i_i_i97)>>2)]=0;
 var $47=0;label=58;break;
 case 58: 
 var $47;
 var $cmp_i_i_i50=($47|0)==0;
 if($cmp_i30_i_i13721){label=64;break;}else{label=59;break;}
 case 59: 
 var $__ninp__i_i15_i_i=(($35+12)|0);
 var $48=HEAP32[(($__ninp__i_i15_i_i)>>2)];
 var $__einp__i_i16_i_i=(($35+16)|0);
 var $49=HEAP32[(($__einp__i_i16_i_i)>>2)];
 var $cmp_i_i17_i_i=($48|0)==($49|0);
 if($cmp_i_i17_i_i){label=60;break;}else{label=61;break;}
 case 60: 
 var $50=$35;
 var $vtable_i_i19_i_i=HEAP32[(($50)>>2)];
 var $vfn_i_i20_i_i=(($vtable_i_i19_i_i+36)|0);
 var $51=HEAP32[(($vfn_i_i20_i_i)>>2)];
 var $call_i_i21_i_i52=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$51]($35) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i7_i_i_0=$call_i_i21_i_i52;label=62;break; } else { label=36;break; }
 case 61: 
 var $52=HEAP32[(($48)>>2)];
 var $retval_i_i7_i_i_0=$52;label=62;break;
 case 62: 
 var $retval_i_i7_i_i_0;
 var $cmp_i7_i25_i_i=($retval_i_i7_i_i_0|0)==-1;
 if($cmp_i7_i25_i_i){label=63;break;}else{label=65;break;}
 case 63: 
 HEAP32[(($__sbuf__i11_i_i118)>>2)]=0;
 label=64;break;
 case 64: 
 if($cmp_i_i_i50){label=66;break;}else{label=67;break;}
 case 65: 
 var $cmp_i30_i_i=($35|0)==0;
 var $cmp_i_itmp=$cmp_i_i_i50^$cmp_i30_i_i;
 if($cmp_i_itmp){label=67;break;}else{label=66;break;}
 case 66: 
 var $53=HEAP32[(($__err)>>2)];
 var $or=$53|2;
 HEAP32[(($__err)>>2)]=$or;
 label=67;break;
 case 67: 
 var $54=(($agg_result)|0);
 HEAP32[(($54)>>2)]=$47;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 STACKTOP=sp;return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_($agg_result,$this,$__b,$__e,$__iob,$__err,$__v){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 var $agg_tmp=sp;
 var $agg_tmp2=(sp)+(8);
 var $0=(($__b)|0);
 var $1=HEAP32[(($0)>>2)];
 var $2=(($agg_tmp)|0);
 HEAP32[(($2)>>2)]=$1;
 var $3=(($__e)|0);
 var $4=HEAP32[(($3)>>2)];
 var $5=(($agg_tmp2)|0);
 HEAP32[(($5)>>2)]=$4;
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($agg_result,0,$agg_tmp,$agg_tmp2,$__iob,$__err,$__v);
 STACKTOP=sp;return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($agg_result,$this,$__b,$__e,$__iob,$__err,$__v){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+144)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__atoms=sp;
 var $__thousands_sep=(sp)+(104);
 var $__grouping=(sp)+(112);
 var $__buf=(sp)+(128);
 var $__size__i_i=$__buf;
 var $__a_end=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__g=STACKTOP;STACKTOP = (STACKTOP + 160)|0;(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__g_end=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__dc=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__fmtflags__i_i=(($__iob+4)|0);
 var $0=HEAP32[(($__fmtflags__i_i)>>2)];
 var $and_i=$0&74;
 if(($and_i|0)==8){ label=2;break;}else if(($and_i|0)==0){ label=3;break;}else if(($and_i|0)==64){ var $retval_0_i=8;label=5;break;}else{label=4;break;}
 case 2: 
 var $retval_0_i=16;label=5;break;
 case 3: 
 var $retval_0_i=0;label=5;break;
 case 4: 
 var $retval_0_i=10;label=5;break;
 case 5: 
 var $retval_0_i;
 var $arraydecay=(($__atoms)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$arraydecay,$__thousands_sep);
 HEAP32[(($__size__i_i)>>2)]=0; HEAP32[((($__size__i_i)+(4))>>2)]=0; HEAP32[((($__size__i_i)+(8))>>2)]=0;
 var $__s_i_i=$__buf;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,10,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=6;break; } else { label=36;break; }
 case 6: 
 var $1=HEAP8[($__size__i_i)];
 var $and_i_i_i=$1&1;
 var $tobool_i_i_i77=(($and_i_i_i<<24)>>24)==0;
 if($tobool_i_i_i77){label=8;break;}else{label=7;break;}
 case 7: 
 var $__data__i21_i_i=(($__buf+8)|0);
 var $2=HEAP32[(($__data__i21_i_i)>>2)];
 var $arrayidx_i_i_i372_pre=(($__s_i_i+1)|0);
 var $cond_i_i=$2;var $arrayidx_i_i_i372_pre_phi=$arrayidx_i_i_i372_pre;var $__data__i21_i_i363_pre_phi=$__data__i21_i_i;label=9;break;
 case 8: 
 var $arrayidx_i_i_i78=(($__s_i_i+1)|0);
 var $__data__i21_i_i363_pre=(($__buf+8)|0);
 var $cond_i_i=$arrayidx_i_i_i78;var $arrayidx_i_i_i372_pre_phi=$arrayidx_i_i_i78;var $__data__i21_i_i363_pre_phi=$__data__i21_i_i363_pre;label=9;break;
 case 9: 
 var $__data__i21_i_i363_pre_phi;
 var $arrayidx_i_i_i372_pre_phi;
 var $cond_i_i;
 HEAP32[(($__a_end)>>2)]=$cond_i_i;
 var $arraydecay5=(($__g)|0);
 HEAP32[(($__g_end)>>2)]=$arraydecay5;
 HEAP32[(($__dc)>>2)]=0;
 var $__sbuf__i_i_i97=(($__b)|0);
 var $__sbuf__i11_i_i118=(($__e)|0);
 var $__cap__i_i320=(($__buf)|0);
 var $__size__i23_i231=(($__buf+4)|0);
 var $3=HEAP32[(($__thousands_sep)>>2)];
 var $_pre=HEAP32[(($__sbuf__i_i_i97)>>2)];
 var $__a_0=$cond_i_i;var $4=$_pre;label=10;break;
 case 10: 
 var $4;
 var $__a_0;
 var $tobool_i_i_i98=($4|0)==0;
 if($tobool_i_i_i98){var $10=0;label=16;break;}else{label=11;break;}
 case 11: 
 var $__ninp__i_i_i_i101=(($4+12)|0);
 var $5=HEAP32[(($__ninp__i_i_i_i101)>>2)];
 var $__einp__i_i_i_i102=(($4+16)|0);
 var $6=HEAP32[(($__einp__i_i_i_i102)>>2)];
 var $cmp_i_i_i_i103=($5|0)==($6|0);
 if($cmp_i_i_i_i103){label=12;break;}else{label=13;break;}
 case 12: 
 var $7=$4;
 var $vtable_i_i_i_i105=HEAP32[(($7)>>2)];
 var $vfn_i_i_i_i106=(($vtable_i_i_i_i105+36)|0);
 var $8=HEAP32[(($vfn_i_i_i_i106)>>2)];
 var $call_i_i_i_i141=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$8]($4) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i_i_i88_0=$call_i_i_i_i141;label=14;break; } else { label=35;break; }
 case 13: 
 var $9=HEAP32[(($5)>>2)];
 var $retval_i_i_i_i88_0=$9;label=14;break;
 case 14: 
 var $retval_i_i_i_i88_0;
 var $cmp_i7_i_i_i110=($retval_i_i_i_i88_0|0)==-1;
 if($cmp_i7_i_i_i110){label=15;break;}else{var $10=$4;label=16;break;}
 case 15: 
 HEAP32[(($__sbuf__i_i_i97)>>2)]=0;
 var $10=0;label=16;break;
 case 16: 
 var $10;
 var $cmp_i_i_i115=($10|0)==0;
 var $11=HEAP32[(($__sbuf__i11_i_i118)>>2)];
 var $tobool_i12_i_i119=($11|0)==0;
 if($tobool_i12_i_i119){label=22;break;}else{label=17;break;}
 case 17: 
 var $__ninp__i_i15_i_i123=(($11+12)|0);
 var $12=HEAP32[(($__ninp__i_i15_i_i123)>>2)];
 var $__einp__i_i16_i_i124=(($11+16)|0);
 var $13=HEAP32[(($__einp__i_i16_i_i124)>>2)];
 var $cmp_i_i17_i_i125=($12|0)==($13|0);
 if($cmp_i_i17_i_i125){label=18;break;}else{label=19;break;}
 case 18: 
 var $14=$11;
 var $vtable_i_i19_i_i127=HEAP32[(($14)>>2)];
 var $vfn_i_i20_i_i128=(($vtable_i_i19_i_i127+36)|0);
 var $15=HEAP32[(($vfn_i_i20_i_i128)>>2)];
 var $call_i_i21_i_i143=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$15]($11) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i7_i_i82_0=$call_i_i21_i_i143;label=20;break; } else { label=35;break; }
 case 19: 
 var $16=HEAP32[(($12)>>2)];
 var $retval_i_i7_i_i82_0=$16;label=20;break;
 case 20: 
 var $retval_i_i7_i_i82_0;
 var $cmp_i7_i25_i_i132=($retval_i_i7_i_i82_0|0)==-1;
 if($cmp_i7_i25_i_i132){label=21;break;}else{label=23;break;}
 case 21: 
 HEAP32[(($__sbuf__i11_i_i118)>>2)]=0;
 label=22;break;
 case 22: 
 if($cmp_i_i_i115){var $__a_2=$__a_0;var $35=0;var $cmp_i30_i_i13721=1;label=45;break;}else{var $17=0;var $cmp_i30_i_i13722=1;label=24;break;}
 case 23: 
 var $cmp_i30_i_i137=($11|0)==0;
 var $lnot_i=$cmp_i_i_i115^$cmp_i30_i_i137;
 if($lnot_i){var $17=$11;var $cmp_i30_i_i13722=$cmp_i30_i_i137;label=24;break;}else{var $__a_2=$__a_0;var $35=$11;var $cmp_i30_i_i13721=$cmp_i30_i_i137;label=45;break;}
 case 24: 
 var $cmp_i30_i_i13722;
 var $17;
 var $18=HEAP32[(($__a_end)>>2)];
 var $sub_ptr_lhs_cast=$18;
 var $sub_ptr_rhs_cast=$__a_0;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $19=HEAP8[($__size__i_i)];
 var $conv_i_i156=($19&255);
 var $and_i_i157=$conv_i_i156&1;
 var $tobool_i_i158=($and_i_i157|0)==0;
 var $20=HEAP32[(($__size__i23_i231)>>2)];
 var $shr_i_i12=$conv_i_i156>>>1;
 var $cond_i162=($tobool_i_i158?$shr_i_i12:$20);
 var $cmp=($sub_ptr_sub|0)==($cond_i162|0);
 if($cmp){label=25;break;}else{var $__a_1=$__a_0;label=38;break;}
 case 25: 
 if($tobool_i_i158){label=27;break;}else{label=26;break;}
 case 26: 
 var $21=HEAP32[(($__size__i23_i231)>>2)];
 var $cond_i243=$21;var $cond_i20223=$21;label=28;break;
 case 27: 
 var $shr_i_i20013=$conv_i_i156>>>1;
 var $shr_i_i24114=$conv_i_i156>>>1;
 var $cond_i243=$shr_i_i24114;var $cond_i20223=$shr_i_i20013;label=28;break;
 case 28: 
 var $cond_i20223;
 var $cond_i243;
 var $mul=$cond_i243<<1;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$mul,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=29;break; } else { label=35;break; }
 case 29: 
 var $22=HEAP8[($__size__i_i)];
 var $and_i_i312=$22&1;
 var $tobool_i_i313=(($and_i_i312<<24)>>24)==0;
 if($tobool_i_i313){var $cond_i324=10;label=31;break;}else{label=30;break;}
 case 30: 
 var $23=HEAP32[(($__cap__i_i320)>>2)];
 var $and_i11_i321=$23&-2;
 var $phitmp15=((($and_i11_i321)-(1))|0);
 var $cond_i324=$phitmp15;label=31;break;
 case 31: 
 var $cond_i324;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$cond_i324,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=32;break; } else { label=35;break; }
 case 32: 
 var $24=HEAP8[($__size__i_i)];
 var $and_i_i_i355=$24&1;
 var $tobool_i_i_i356=(($and_i_i_i355<<24)>>24)==0;
 if($tobool_i_i_i356){var $cond_i_i374=$arrayidx_i_i_i372_pre_phi;label=34;break;}else{label=33;break;}
 case 33: 
 var $25=HEAP32[(($__data__i21_i_i363_pre_phi)>>2)];
 var $cond_i_i374=$25;label=34;break;
 case 34: 
 var $cond_i_i374;
 var $add_ptr=(($cond_i_i374+$cond_i20223)|0);
 HEAP32[(($__a_end)>>2)]=$add_ptr;
 var $__a_1=$cond_i_i374;label=38;break;
 case 35: 
 var $lpad_loopexit16$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_loopexit16$1 = tempRet0;
 var $lpad_phi$1=$lpad_loopexit16$1;var $lpad_phi$0=$lpad_loopexit16$0;label=37;break;
 case 36: 
 var $lpad_nonloopexit17$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_nonloopexit17$1 = tempRet0;
 var $lpad_phi$1=$lpad_nonloopexit17$1;var $lpad_phi$0=$lpad_nonloopexit17$0;label=37;break;
 case 37: 
 var $lpad_phi$0;
 var $lpad_phi$1;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 ___resumeException($lpad_phi$0)
 case 38: 
 var $__a_1;
 var $__ninp__i_i384=(($10+12)|0);
 var $26=HEAP32[(($__ninp__i_i384)>>2)];
 var $__einp__i_i385=(($10+16)|0);
 var $27=HEAP32[(($__einp__i_i385)>>2)];
 var $cmp_i_i386=($26|0)==($27|0);
 if($cmp_i_i386){label=39;break;}else{label=40;break;}
 case 39: 
 var $28=$10;
 var $vtable_i_i387=HEAP32[(($28)>>2)];
 var $vfn_i_i388=(($vtable_i_i387+36)|0);
 var $29=HEAP32[(($vfn_i_i388)>>2)];
 var $call_i_i393=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$29]($10) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i378_0=$call_i_i393;label=41;break; } else { label=35;break; }
 case 40: 
 var $30=HEAP32[(($26)>>2)];
 var $retval_i_i378_0=$30;label=41;break;
 case 41: 
 var $retval_i_i378_0;
 var $call21=__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($retval_i_i378_0,$retval_0_i,$__a_1,$__a_end,$__dc,$3,$__grouping,$arraydecay5,$__g_end,$arraydecay);
 var $tobool=($call21|0)==0;
 if($tobool){label=42;break;}else{var $__a_2=$__a_1;var $35=$17;var $cmp_i30_i_i13721=$cmp_i30_i_i13722;label=45;break;}
 case 42: 
 var $31=HEAP32[(($__ninp__i_i384)>>2)];
 var $32=HEAP32[(($__einp__i_i385)>>2)];
 var $cmp_i_i290=($31|0)==($32|0);
 if($cmp_i_i290){label=43;break;}else{label=44;break;}
 case 43: 
 var $33=$10;
 var $vtable_i_i=HEAP32[(($33)>>2)];
 var $vfn_i_i=(($vtable_i_i+40)|0);
 var $34=HEAP32[(($vfn_i_i)>>2)];
 var $call_i_i291=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$34]($10) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $__a_0=$__a_1;var $4=$10;label=10;break; } else { label=35;break; }
 case 44: 
 var $incdec_ptr_i_i=(($31+4)|0);
 HEAP32[(($__ninp__i_i384)>>2)]=$incdec_ptr_i_i;
 var $__a_0=$__a_1;var $4=$10;label=10;break;
 case 45: 
 var $cmp_i30_i_i13721;
 var $35;
 var $__a_2;
 var $__size__i_i262=$__grouping;
 var $36=HEAP8[($__size__i_i262)];
 var $conv_i_i263=($36&255);
 var $and_i_i264=$conv_i_i263&1;
 var $tobool_i_i265=($and_i_i264|0)==0;
 if($tobool_i_i265){label=47;break;}else{label=46;break;}
 case 46: 
 var $__size__i23_i272=(($__grouping+4)|0);
 var $37=HEAP32[(($__size__i23_i272)>>2)];
 var $cond_i284=$37;label=48;break;
 case 47: 
 var $shr_i_i28211=$conv_i_i263>>>1;
 var $cond_i284=$shr_i_i28211;label=48;break;
 case 48: 
 var $cond_i284;
 var $cmp27=($cond_i284|0)==0;
 if($cmp27){label=51;break;}else{label=49;break;}
 case 49: 
 var $38=HEAP32[(($__g_end)>>2)];
 var $sub_ptr_lhs_cast29=$38;
 var $sub_ptr_rhs_cast30=$__g;
 var $sub_ptr_sub31=((($sub_ptr_lhs_cast29)-($sub_ptr_rhs_cast30))|0);
 var $cmp32=($sub_ptr_sub31|0)<160;
 if($cmp32){label=50;break;}else{label=51;break;}
 case 50: 
 var $39=HEAP32[(($__dc)>>2)];
 var $incdec_ptr=(($38+4)|0);
 HEAP32[(($__g_end)>>2)]=$incdec_ptr;
 HEAP32[(($38)>>2)]=$39;
 label=51;break;
 case 51: 
 var $40=HEAP32[(($__a_end)>>2)];
 var $call36=(function() { try { __THREW__ = 0; return __ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji($__a_2,$40,$__err,$retval_0_i) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=52;break; } else { label=36;break; }
 case 52: 
 HEAP32[(($__v)>>2)]=$call36;
 var $41=HEAP32[(($__g_end)>>2)];
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$arraydecay5,$41,$__err);
 if($cmp_i_i_i115){var $47=0;label=58;break;}else{label=53;break;}
 case 53: 
 var $__ninp__i_i_i_i=(($10+12)|0);
 var $42=HEAP32[(($__ninp__i_i_i_i)>>2)];
 var $__einp__i_i_i_i=(($10+16)|0);
 var $43=HEAP32[(($__einp__i_i_i_i)>>2)];
 var $cmp_i_i_i_i=($42|0)==($43|0);
 if($cmp_i_i_i_i){label=54;break;}else{label=55;break;}
 case 54: 
 var $44=$10;
 var $vtable_i_i_i_i=HEAP32[(($44)>>2)];
 var $vfn_i_i_i_i=(($vtable_i_i_i_i+36)|0);
 var $45=HEAP32[(($vfn_i_i_i_i)>>2)];
 var $call_i_i_i_i51=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$45]($10) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i_i_i_0=$call_i_i_i_i51;label=56;break; } else { label=36;break; }
 case 55: 
 var $46=HEAP32[(($42)>>2)];
 var $retval_i_i_i_i_0=$46;label=56;break;
 case 56: 
 var $retval_i_i_i_i_0;
 var $cmp_i7_i_i_i=($retval_i_i_i_i_0|0)==-1;
 if($cmp_i7_i_i_i){label=57;break;}else{var $47=$10;label=58;break;}
 case 57: 
 HEAP32[(($__sbuf__i_i_i97)>>2)]=0;
 var $47=0;label=58;break;
 case 58: 
 var $47;
 var $cmp_i_i_i50=($47|0)==0;
 if($cmp_i30_i_i13721){label=64;break;}else{label=59;break;}
 case 59: 
 var $__ninp__i_i15_i_i=(($35+12)|0);
 var $48=HEAP32[(($__ninp__i_i15_i_i)>>2)];
 var $__einp__i_i16_i_i=(($35+16)|0);
 var $49=HEAP32[(($__einp__i_i16_i_i)>>2)];
 var $cmp_i_i17_i_i=($48|0)==($49|0);
 if($cmp_i_i17_i_i){label=60;break;}else{label=61;break;}
 case 60: 
 var $50=$35;
 var $vtable_i_i19_i_i=HEAP32[(($50)>>2)];
 var $vfn_i_i20_i_i=(($vtable_i_i19_i_i+36)|0);
 var $51=HEAP32[(($vfn_i_i20_i_i)>>2)];
 var $call_i_i21_i_i52=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$51]($35) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i7_i_i_0=$call_i_i21_i_i52;label=62;break; } else { label=36;break; }
 case 61: 
 var $52=HEAP32[(($48)>>2)];
 var $retval_i_i7_i_i_0=$52;label=62;break;
 case 62: 
 var $retval_i_i7_i_i_0;
 var $cmp_i7_i25_i_i=($retval_i_i7_i_i_0|0)==-1;
 if($cmp_i7_i25_i_i){label=63;break;}else{label=65;break;}
 case 63: 
 HEAP32[(($__sbuf__i11_i_i118)>>2)]=0;
 label=64;break;
 case 64: 
 if($cmp_i_i_i50){label=66;break;}else{label=67;break;}
 case 65: 
 var $cmp_i30_i_i=($35|0)==0;
 var $cmp_i_itmp=$cmp_i_i_i50^$cmp_i30_i_i;
 if($cmp_i_itmp){label=67;break;}else{label=66;break;}
 case 66: 
 var $53=HEAP32[(($__err)>>2)];
 var $or=$53|2;
 HEAP32[(($__err)>>2)]=$or;
 label=67;break;
 case 67: 
 var $54=(($agg_result)|0);
 HEAP32[(($54)>>2)]=$47;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 STACKTOP=sp;return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm($agg_result,$this,$__b,$__e,$__iob,$__err,$__v){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 var $agg_tmp=sp;
 var $agg_tmp2=(sp)+(8);
 var $0=(($__b)|0);
 var $1=HEAP32[(($0)>>2)];
 var $2=(($agg_tmp)|0);
 HEAP32[(($2)>>2)]=$1;
 var $3=(($__e)|0);
 var $4=HEAP32[(($3)>>2)];
 var $5=(($agg_tmp2)|0);
 HEAP32[(($5)>>2)]=$4;
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($agg_result,0,$agg_tmp,$agg_tmp2,$__iob,$__err,$__v);
 STACKTOP=sp;return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($agg_result,$this,$__b,$__e,$__iob,$__err,$__v){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+144)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__atoms=sp;
 var $__thousands_sep=(sp)+(104);
 var $__grouping=(sp)+(112);
 var $__buf=(sp)+(128);
 var $__size__i_i=$__buf;
 var $__a_end=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__g=STACKTOP;STACKTOP = (STACKTOP + 160)|0;(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__g_end=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__dc=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__fmtflags__i_i=(($__iob+4)|0);
 var $0=HEAP32[(($__fmtflags__i_i)>>2)];
 var $and_i=$0&74;
 if(($and_i|0)==8){ label=2;break;}else if(($and_i|0)==0){ label=3;break;}else if(($and_i|0)==64){ var $retval_0_i=8;label=5;break;}else{label=4;break;}
 case 2: 
 var $retval_0_i=16;label=5;break;
 case 3: 
 var $retval_0_i=0;label=5;break;
 case 4: 
 var $retval_0_i=10;label=5;break;
 case 5: 
 var $retval_0_i;
 var $arraydecay=(($__atoms)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$arraydecay,$__thousands_sep);
 HEAP32[(($__size__i_i)>>2)]=0; HEAP32[((($__size__i_i)+(4))>>2)]=0; HEAP32[((($__size__i_i)+(8))>>2)]=0;
 var $__s_i_i=$__buf;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,10,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=6;break; } else { label=36;break; }
 case 6: 
 var $1=HEAP8[($__size__i_i)];
 var $and_i_i_i=$1&1;
 var $tobool_i_i_i77=(($and_i_i_i<<24)>>24)==0;
 if($tobool_i_i_i77){label=8;break;}else{label=7;break;}
 case 7: 
 var $__data__i21_i_i=(($__buf+8)|0);
 var $2=HEAP32[(($__data__i21_i_i)>>2)];
 var $arrayidx_i_i_i372_pre=(($__s_i_i+1)|0);
 var $cond_i_i=$2;var $arrayidx_i_i_i372_pre_phi=$arrayidx_i_i_i372_pre;var $__data__i21_i_i363_pre_phi=$__data__i21_i_i;label=9;break;
 case 8: 
 var $arrayidx_i_i_i78=(($__s_i_i+1)|0);
 var $__data__i21_i_i363_pre=(($__buf+8)|0);
 var $cond_i_i=$arrayidx_i_i_i78;var $arrayidx_i_i_i372_pre_phi=$arrayidx_i_i_i78;var $__data__i21_i_i363_pre_phi=$__data__i21_i_i363_pre;label=9;break;
 case 9: 
 var $__data__i21_i_i363_pre_phi;
 var $arrayidx_i_i_i372_pre_phi;
 var $cond_i_i;
 HEAP32[(($__a_end)>>2)]=$cond_i_i;
 var $arraydecay5=(($__g)|0);
 HEAP32[(($__g_end)>>2)]=$arraydecay5;
 HEAP32[(($__dc)>>2)]=0;
 var $__sbuf__i_i_i97=(($__b)|0);
 var $__sbuf__i11_i_i118=(($__e)|0);
 var $__cap__i_i320=(($__buf)|0);
 var $__size__i23_i231=(($__buf+4)|0);
 var $3=HEAP32[(($__thousands_sep)>>2)];
 var $_pre=HEAP32[(($__sbuf__i_i_i97)>>2)];
 var $__a_0=$cond_i_i;var $4=$_pre;label=10;break;
 case 10: 
 var $4;
 var $__a_0;
 var $tobool_i_i_i98=($4|0)==0;
 if($tobool_i_i_i98){var $10=0;label=16;break;}else{label=11;break;}
 case 11: 
 var $__ninp__i_i_i_i101=(($4+12)|0);
 var $5=HEAP32[(($__ninp__i_i_i_i101)>>2)];
 var $__einp__i_i_i_i102=(($4+16)|0);
 var $6=HEAP32[(($__einp__i_i_i_i102)>>2)];
 var $cmp_i_i_i_i103=($5|0)==($6|0);
 if($cmp_i_i_i_i103){label=12;break;}else{label=13;break;}
 case 12: 
 var $7=$4;
 var $vtable_i_i_i_i105=HEAP32[(($7)>>2)];
 var $vfn_i_i_i_i106=(($vtable_i_i_i_i105+36)|0);
 var $8=HEAP32[(($vfn_i_i_i_i106)>>2)];
 var $call_i_i_i_i141=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$8]($4) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i_i_i88_0=$call_i_i_i_i141;label=14;break; } else { label=35;break; }
 case 13: 
 var $9=HEAP32[(($5)>>2)];
 var $retval_i_i_i_i88_0=$9;label=14;break;
 case 14: 
 var $retval_i_i_i_i88_0;
 var $cmp_i7_i_i_i110=($retval_i_i_i_i88_0|0)==-1;
 if($cmp_i7_i_i_i110){label=15;break;}else{var $10=$4;label=16;break;}
 case 15: 
 HEAP32[(($__sbuf__i_i_i97)>>2)]=0;
 var $10=0;label=16;break;
 case 16: 
 var $10;
 var $cmp_i_i_i115=($10|0)==0;
 var $11=HEAP32[(($__sbuf__i11_i_i118)>>2)];
 var $tobool_i12_i_i119=($11|0)==0;
 if($tobool_i12_i_i119){label=22;break;}else{label=17;break;}
 case 17: 
 var $__ninp__i_i15_i_i123=(($11+12)|0);
 var $12=HEAP32[(($__ninp__i_i15_i_i123)>>2)];
 var $__einp__i_i16_i_i124=(($11+16)|0);
 var $13=HEAP32[(($__einp__i_i16_i_i124)>>2)];
 var $cmp_i_i17_i_i125=($12|0)==($13|0);
 if($cmp_i_i17_i_i125){label=18;break;}else{label=19;break;}
 case 18: 
 var $14=$11;
 var $vtable_i_i19_i_i127=HEAP32[(($14)>>2)];
 var $vfn_i_i20_i_i128=(($vtable_i_i19_i_i127+36)|0);
 var $15=HEAP32[(($vfn_i_i20_i_i128)>>2)];
 var $call_i_i21_i_i143=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$15]($11) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i7_i_i82_0=$call_i_i21_i_i143;label=20;break; } else { label=35;break; }
 case 19: 
 var $16=HEAP32[(($12)>>2)];
 var $retval_i_i7_i_i82_0=$16;label=20;break;
 case 20: 
 var $retval_i_i7_i_i82_0;
 var $cmp_i7_i25_i_i132=($retval_i_i7_i_i82_0|0)==-1;
 if($cmp_i7_i25_i_i132){label=21;break;}else{label=23;break;}
 case 21: 
 HEAP32[(($__sbuf__i11_i_i118)>>2)]=0;
 label=22;break;
 case 22: 
 if($cmp_i_i_i115){var $__a_2=$__a_0;var $35=0;var $cmp_i30_i_i13721=1;label=45;break;}else{var $17=0;var $cmp_i30_i_i13722=1;label=24;break;}
 case 23: 
 var $cmp_i30_i_i137=($11|0)==0;
 var $lnot_i=$cmp_i_i_i115^$cmp_i30_i_i137;
 if($lnot_i){var $17=$11;var $cmp_i30_i_i13722=$cmp_i30_i_i137;label=24;break;}else{var $__a_2=$__a_0;var $35=$11;var $cmp_i30_i_i13721=$cmp_i30_i_i137;label=45;break;}
 case 24: 
 var $cmp_i30_i_i13722;
 var $17;
 var $18=HEAP32[(($__a_end)>>2)];
 var $sub_ptr_lhs_cast=$18;
 var $sub_ptr_rhs_cast=$__a_0;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $19=HEAP8[($__size__i_i)];
 var $conv_i_i156=($19&255);
 var $and_i_i157=$conv_i_i156&1;
 var $tobool_i_i158=($and_i_i157|0)==0;
 var $20=HEAP32[(($__size__i23_i231)>>2)];
 var $shr_i_i12=$conv_i_i156>>>1;
 var $cond_i162=($tobool_i_i158?$shr_i_i12:$20);
 var $cmp=($sub_ptr_sub|0)==($cond_i162|0);
 if($cmp){label=25;break;}else{var $__a_1=$__a_0;label=38;break;}
 case 25: 
 if($tobool_i_i158){label=27;break;}else{label=26;break;}
 case 26: 
 var $21=HEAP32[(($__size__i23_i231)>>2)];
 var $cond_i243=$21;var $cond_i20223=$21;label=28;break;
 case 27: 
 var $shr_i_i20013=$conv_i_i156>>>1;
 var $shr_i_i24114=$conv_i_i156>>>1;
 var $cond_i243=$shr_i_i24114;var $cond_i20223=$shr_i_i20013;label=28;break;
 case 28: 
 var $cond_i20223;
 var $cond_i243;
 var $mul=$cond_i243<<1;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$mul,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=29;break; } else { label=35;break; }
 case 29: 
 var $22=HEAP8[($__size__i_i)];
 var $and_i_i312=$22&1;
 var $tobool_i_i313=(($and_i_i312<<24)>>24)==0;
 if($tobool_i_i313){var $cond_i324=10;label=31;break;}else{label=30;break;}
 case 30: 
 var $23=HEAP32[(($__cap__i_i320)>>2)];
 var $and_i11_i321=$23&-2;
 var $phitmp15=((($and_i11_i321)-(1))|0);
 var $cond_i324=$phitmp15;label=31;break;
 case 31: 
 var $cond_i324;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$cond_i324,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=32;break; } else { label=35;break; }
 case 32: 
 var $24=HEAP8[($__size__i_i)];
 var $and_i_i_i355=$24&1;
 var $tobool_i_i_i356=(($and_i_i_i355<<24)>>24)==0;
 if($tobool_i_i_i356){var $cond_i_i374=$arrayidx_i_i_i372_pre_phi;label=34;break;}else{label=33;break;}
 case 33: 
 var $25=HEAP32[(($__data__i21_i_i363_pre_phi)>>2)];
 var $cond_i_i374=$25;label=34;break;
 case 34: 
 var $cond_i_i374;
 var $add_ptr=(($cond_i_i374+$cond_i20223)|0);
 HEAP32[(($__a_end)>>2)]=$add_ptr;
 var $__a_1=$cond_i_i374;label=38;break;
 case 35: 
 var $lpad_loopexit16$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_loopexit16$1 = tempRet0;
 var $lpad_phi$1=$lpad_loopexit16$1;var $lpad_phi$0=$lpad_loopexit16$0;label=37;break;
 case 36: 
 var $lpad_nonloopexit17$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_nonloopexit17$1 = tempRet0;
 var $lpad_phi$1=$lpad_nonloopexit17$1;var $lpad_phi$0=$lpad_nonloopexit17$0;label=37;break;
 case 37: 
 var $lpad_phi$0;
 var $lpad_phi$1;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 ___resumeException($lpad_phi$0)
 case 38: 
 var $__a_1;
 var $__ninp__i_i384=(($10+12)|0);
 var $26=HEAP32[(($__ninp__i_i384)>>2)];
 var $__einp__i_i385=(($10+16)|0);
 var $27=HEAP32[(($__einp__i_i385)>>2)];
 var $cmp_i_i386=($26|0)==($27|0);
 if($cmp_i_i386){label=39;break;}else{label=40;break;}
 case 39: 
 var $28=$10;
 var $vtable_i_i387=HEAP32[(($28)>>2)];
 var $vfn_i_i388=(($vtable_i_i387+36)|0);
 var $29=HEAP32[(($vfn_i_i388)>>2)];
 var $call_i_i393=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$29]($10) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i378_0=$call_i_i393;label=41;break; } else { label=35;break; }
 case 40: 
 var $30=HEAP32[(($26)>>2)];
 var $retval_i_i378_0=$30;label=41;break;
 case 41: 
 var $retval_i_i378_0;
 var $call21=__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($retval_i_i378_0,$retval_0_i,$__a_1,$__a_end,$__dc,$3,$__grouping,$arraydecay5,$__g_end,$arraydecay);
 var $tobool=($call21|0)==0;
 if($tobool){label=42;break;}else{var $__a_2=$__a_1;var $35=$17;var $cmp_i30_i_i13721=$cmp_i30_i_i13722;label=45;break;}
 case 42: 
 var $31=HEAP32[(($__ninp__i_i384)>>2)];
 var $32=HEAP32[(($__einp__i_i385)>>2)];
 var $cmp_i_i290=($31|0)==($32|0);
 if($cmp_i_i290){label=43;break;}else{label=44;break;}
 case 43: 
 var $33=$10;
 var $vtable_i_i=HEAP32[(($33)>>2)];
 var $vfn_i_i=(($vtable_i_i+40)|0);
 var $34=HEAP32[(($vfn_i_i)>>2)];
 var $call_i_i291=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$34]($10) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $__a_0=$__a_1;var $4=$10;label=10;break; } else { label=35;break; }
 case 44: 
 var $incdec_ptr_i_i=(($31+4)|0);
 HEAP32[(($__ninp__i_i384)>>2)]=$incdec_ptr_i_i;
 var $__a_0=$__a_1;var $4=$10;label=10;break;
 case 45: 
 var $cmp_i30_i_i13721;
 var $35;
 var $__a_2;
 var $__size__i_i262=$__grouping;
 var $36=HEAP8[($__size__i_i262)];
 var $conv_i_i263=($36&255);
 var $and_i_i264=$conv_i_i263&1;
 var $tobool_i_i265=($and_i_i264|0)==0;
 if($tobool_i_i265){label=47;break;}else{label=46;break;}
 case 46: 
 var $__size__i23_i272=(($__grouping+4)|0);
 var $37=HEAP32[(($__size__i23_i272)>>2)];
 var $cond_i284=$37;label=48;break;
 case 47: 
 var $shr_i_i28211=$conv_i_i263>>>1;
 var $cond_i284=$shr_i_i28211;label=48;break;
 case 48: 
 var $cond_i284;
 var $cmp27=($cond_i284|0)==0;
 if($cmp27){label=51;break;}else{label=49;break;}
 case 49: 
 var $38=HEAP32[(($__g_end)>>2)];
 var $sub_ptr_lhs_cast29=$38;
 var $sub_ptr_rhs_cast30=$__g;
 var $sub_ptr_sub31=((($sub_ptr_lhs_cast29)-($sub_ptr_rhs_cast30))|0);
 var $cmp32=($sub_ptr_sub31|0)<160;
 if($cmp32){label=50;break;}else{label=51;break;}
 case 50: 
 var $39=HEAP32[(($__dc)>>2)];
 var $incdec_ptr=(($38+4)|0);
 HEAP32[(($__g_end)>>2)]=$incdec_ptr;
 HEAP32[(($38)>>2)]=$39;
 label=51;break;
 case 51: 
 var $40=HEAP32[(($__a_end)>>2)];
 var $call36=(function() { try { __THREW__ = 0; return __ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji($__a_2,$40,$__err,$retval_0_i) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=52;break; } else { label=36;break; }
 case 52: 
 HEAP32[(($__v)>>2)]=$call36;
 var $41=HEAP32[(($__g_end)>>2)];
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$arraydecay5,$41,$__err);
 if($cmp_i_i_i115){var $47=0;label=58;break;}else{label=53;break;}
 case 53: 
 var $__ninp__i_i_i_i=(($10+12)|0);
 var $42=HEAP32[(($__ninp__i_i_i_i)>>2)];
 var $__einp__i_i_i_i=(($10+16)|0);
 var $43=HEAP32[(($__einp__i_i_i_i)>>2)];
 var $cmp_i_i_i_i=($42|0)==($43|0);
 if($cmp_i_i_i_i){label=54;break;}else{label=55;break;}
 case 54: 
 var $44=$10;
 var $vtable_i_i_i_i=HEAP32[(($44)>>2)];
 var $vfn_i_i_i_i=(($vtable_i_i_i_i+36)|0);
 var $45=HEAP32[(($vfn_i_i_i_i)>>2)];
 var $call_i_i_i_i51=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$45]($10) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i_i_i_0=$call_i_i_i_i51;label=56;break; } else { label=36;break; }
 case 55: 
 var $46=HEAP32[(($42)>>2)];
 var $retval_i_i_i_i_0=$46;label=56;break;
 case 56: 
 var $retval_i_i_i_i_0;
 var $cmp_i7_i_i_i=($retval_i_i_i_i_0|0)==-1;
 if($cmp_i7_i_i_i){label=57;break;}else{var $47=$10;label=58;break;}
 case 57: 
 HEAP32[(($__sbuf__i_i_i97)>>2)]=0;
 var $47=0;label=58;break;
 case 58: 
 var $47;
 var $cmp_i_i_i50=($47|0)==0;
 if($cmp_i30_i_i13721){label=64;break;}else{label=59;break;}
 case 59: 
 var $__ninp__i_i15_i_i=(($35+12)|0);
 var $48=HEAP32[(($__ninp__i_i15_i_i)>>2)];
 var $__einp__i_i16_i_i=(($35+16)|0);
 var $49=HEAP32[(($__einp__i_i16_i_i)>>2)];
 var $cmp_i_i17_i_i=($48|0)==($49|0);
 if($cmp_i_i17_i_i){label=60;break;}else{label=61;break;}
 case 60: 
 var $50=$35;
 var $vtable_i_i19_i_i=HEAP32[(($50)>>2)];
 var $vfn_i_i20_i_i=(($vtable_i_i19_i_i+36)|0);
 var $51=HEAP32[(($vfn_i_i20_i_i)>>2)];
 var $call_i_i21_i_i52=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$51]($35) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i7_i_i_0=$call_i_i21_i_i52;label=62;break; } else { label=36;break; }
 case 61: 
 var $52=HEAP32[(($48)>>2)];
 var $retval_i_i7_i_i_0=$52;label=62;break;
 case 62: 
 var $retval_i_i7_i_i_0;
 var $cmp_i7_i25_i_i=($retval_i_i7_i_i_0|0)==-1;
 if($cmp_i7_i25_i_i){label=63;break;}else{label=65;break;}
 case 63: 
 HEAP32[(($__sbuf__i11_i_i118)>>2)]=0;
 label=64;break;
 case 64: 
 if($cmp_i_i_i50){label=66;break;}else{label=67;break;}
 case 65: 
 var $cmp_i30_i_i=($35|0)==0;
 var $cmp_i_itmp=$cmp_i_i_i50^$cmp_i30_i_i;
 if($cmp_i_itmp){label=67;break;}else{label=66;break;}
 case 66: 
 var $53=HEAP32[(($__err)>>2)];
 var $or=$53|2;
 HEAP32[(($__err)>>2)]=$or;
 label=67;break;
 case 67: 
 var $54=(($agg_result)|0);
 HEAP32[(($54)>>2)]=$47;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 STACKTOP=sp;return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy($agg_result,$this,$__b,$__e,$__iob,$__err,$__v){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 var $agg_tmp=sp;
 var $agg_tmp2=(sp)+(8);
 var $0=(($__b)|0);
 var $1=HEAP32[(($0)>>2)];
 var $2=(($agg_tmp)|0);
 HEAP32[(($2)>>2)]=$1;
 var $3=(($__e)|0);
 var $4=HEAP32[(($3)>>2)];
 var $5=(($agg_tmp2)|0);
 HEAP32[(($5)>>2)]=$4;
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($agg_result,0,$agg_tmp,$agg_tmp2,$__iob,$__err,$__v);
 STACKTOP=sp;return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($agg_result,$this,$__b,$__e,$__iob,$__err,$__v){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+144)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__atoms=sp;
 var $__thousands_sep=(sp)+(104);
 var $__grouping=(sp)+(112);
 var $__buf=(sp)+(128);
 var $__size__i_i=$__buf;
 var $__a_end=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__g=STACKTOP;STACKTOP = (STACKTOP + 160)|0;(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__g_end=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__dc=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__fmtflags__i_i=(($__iob+4)|0);
 var $0=HEAP32[(($__fmtflags__i_i)>>2)];
 var $and_i=$0&74;
 if(($and_i|0)==8){ label=2;break;}else if(($and_i|0)==0){ label=3;break;}else if(($and_i|0)==64){ var $retval_0_i=8;label=5;break;}else{label=4;break;}
 case 2: 
 var $retval_0_i=16;label=5;break;
 case 3: 
 var $retval_0_i=0;label=5;break;
 case 4: 
 var $retval_0_i=10;label=5;break;
 case 5: 
 var $retval_0_i;
 var $arraydecay=(($__atoms)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$arraydecay,$__thousands_sep);
 HEAP32[(($__size__i_i)>>2)]=0; HEAP32[((($__size__i_i)+(4))>>2)]=0; HEAP32[((($__size__i_i)+(8))>>2)]=0;
 var $__s_i_i=$__buf;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,10,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=6;break; } else { label=36;break; }
 case 6: 
 var $1=HEAP8[($__size__i_i)];
 var $and_i_i_i=$1&1;
 var $tobool_i_i_i77=(($and_i_i_i<<24)>>24)==0;
 if($tobool_i_i_i77){label=8;break;}else{label=7;break;}
 case 7: 
 var $__data__i21_i_i=(($__buf+8)|0);
 var $2=HEAP32[(($__data__i21_i_i)>>2)];
 var $arrayidx_i_i_i372_pre=(($__s_i_i+1)|0);
 var $cond_i_i=$2;var $arrayidx_i_i_i372_pre_phi=$arrayidx_i_i_i372_pre;var $__data__i21_i_i363_pre_phi=$__data__i21_i_i;label=9;break;
 case 8: 
 var $arrayidx_i_i_i78=(($__s_i_i+1)|0);
 var $__data__i21_i_i363_pre=(($__buf+8)|0);
 var $cond_i_i=$arrayidx_i_i_i78;var $arrayidx_i_i_i372_pre_phi=$arrayidx_i_i_i78;var $__data__i21_i_i363_pre_phi=$__data__i21_i_i363_pre;label=9;break;
 case 9: 
 var $__data__i21_i_i363_pre_phi;
 var $arrayidx_i_i_i372_pre_phi;
 var $cond_i_i;
 HEAP32[(($__a_end)>>2)]=$cond_i_i;
 var $arraydecay5=(($__g)|0);
 HEAP32[(($__g_end)>>2)]=$arraydecay5;
 HEAP32[(($__dc)>>2)]=0;
 var $__sbuf__i_i_i97=(($__b)|0);
 var $__sbuf__i11_i_i118=(($__e)|0);
 var $__cap__i_i320=(($__buf)|0);
 var $__size__i23_i231=(($__buf+4)|0);
 var $3=HEAP32[(($__thousands_sep)>>2)];
 var $_pre=HEAP32[(($__sbuf__i_i_i97)>>2)];
 var $__a_0=$cond_i_i;var $4=$_pre;label=10;break;
 case 10: 
 var $4;
 var $__a_0;
 var $tobool_i_i_i98=($4|0)==0;
 if($tobool_i_i_i98){var $10=0;label=16;break;}else{label=11;break;}
 case 11: 
 var $__ninp__i_i_i_i101=(($4+12)|0);
 var $5=HEAP32[(($__ninp__i_i_i_i101)>>2)];
 var $__einp__i_i_i_i102=(($4+16)|0);
 var $6=HEAP32[(($__einp__i_i_i_i102)>>2)];
 var $cmp_i_i_i_i103=($5|0)==($6|0);
 if($cmp_i_i_i_i103){label=12;break;}else{label=13;break;}
 case 12: 
 var $7=$4;
 var $vtable_i_i_i_i105=HEAP32[(($7)>>2)];
 var $vfn_i_i_i_i106=(($vtable_i_i_i_i105+36)|0);
 var $8=HEAP32[(($vfn_i_i_i_i106)>>2)];
 var $call_i_i_i_i141=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$8]($4) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i_i_i88_0=$call_i_i_i_i141;label=14;break; } else { label=35;break; }
 case 13: 
 var $9=HEAP32[(($5)>>2)];
 var $retval_i_i_i_i88_0=$9;label=14;break;
 case 14: 
 var $retval_i_i_i_i88_0;
 var $cmp_i7_i_i_i110=($retval_i_i_i_i88_0|0)==-1;
 if($cmp_i7_i_i_i110){label=15;break;}else{var $10=$4;label=16;break;}
 case 15: 
 HEAP32[(($__sbuf__i_i_i97)>>2)]=0;
 var $10=0;label=16;break;
 case 16: 
 var $10;
 var $cmp_i_i_i115=($10|0)==0;
 var $11=HEAP32[(($__sbuf__i11_i_i118)>>2)];
 var $tobool_i12_i_i119=($11|0)==0;
 if($tobool_i12_i_i119){label=22;break;}else{label=17;break;}
 case 17: 
 var $__ninp__i_i15_i_i123=(($11+12)|0);
 var $12=HEAP32[(($__ninp__i_i15_i_i123)>>2)];
 var $__einp__i_i16_i_i124=(($11+16)|0);
 var $13=HEAP32[(($__einp__i_i16_i_i124)>>2)];
 var $cmp_i_i17_i_i125=($12|0)==($13|0);
 if($cmp_i_i17_i_i125){label=18;break;}else{label=19;break;}
 case 18: 
 var $14=$11;
 var $vtable_i_i19_i_i127=HEAP32[(($14)>>2)];
 var $vfn_i_i20_i_i128=(($vtable_i_i19_i_i127+36)|0);
 var $15=HEAP32[(($vfn_i_i20_i_i128)>>2)];
 var $call_i_i21_i_i143=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$15]($11) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i7_i_i82_0=$call_i_i21_i_i143;label=20;break; } else { label=35;break; }
 case 19: 
 var $16=HEAP32[(($12)>>2)];
 var $retval_i_i7_i_i82_0=$16;label=20;break;
 case 20: 
 var $retval_i_i7_i_i82_0;
 var $cmp_i7_i25_i_i132=($retval_i_i7_i_i82_0|0)==-1;
 if($cmp_i7_i25_i_i132){label=21;break;}else{label=23;break;}
 case 21: 
 HEAP32[(($__sbuf__i11_i_i118)>>2)]=0;
 label=22;break;
 case 22: 
 if($cmp_i_i_i115){var $__a_2=$__a_0;var $35=0;var $cmp_i30_i_i13721=1;label=45;break;}else{var $17=0;var $cmp_i30_i_i13722=1;label=24;break;}
 case 23: 
 var $cmp_i30_i_i137=($11|0)==0;
 var $lnot_i=$cmp_i_i_i115^$cmp_i30_i_i137;
 if($lnot_i){var $17=$11;var $cmp_i30_i_i13722=$cmp_i30_i_i137;label=24;break;}else{var $__a_2=$__a_0;var $35=$11;var $cmp_i30_i_i13721=$cmp_i30_i_i137;label=45;break;}
 case 24: 
 var $cmp_i30_i_i13722;
 var $17;
 var $18=HEAP32[(($__a_end)>>2)];
 var $sub_ptr_lhs_cast=$18;
 var $sub_ptr_rhs_cast=$__a_0;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $19=HEAP8[($__size__i_i)];
 var $conv_i_i156=($19&255);
 var $and_i_i157=$conv_i_i156&1;
 var $tobool_i_i158=($and_i_i157|0)==0;
 var $20=HEAP32[(($__size__i23_i231)>>2)];
 var $shr_i_i12=$conv_i_i156>>>1;
 var $cond_i162=($tobool_i_i158?$shr_i_i12:$20);
 var $cmp=($sub_ptr_sub|0)==($cond_i162|0);
 if($cmp){label=25;break;}else{var $__a_1=$__a_0;label=38;break;}
 case 25: 
 if($tobool_i_i158){label=27;break;}else{label=26;break;}
 case 26: 
 var $21=HEAP32[(($__size__i23_i231)>>2)];
 var $cond_i243=$21;var $cond_i20223=$21;label=28;break;
 case 27: 
 var $shr_i_i20013=$conv_i_i156>>>1;
 var $shr_i_i24114=$conv_i_i156>>>1;
 var $cond_i243=$shr_i_i24114;var $cond_i20223=$shr_i_i20013;label=28;break;
 case 28: 
 var $cond_i20223;
 var $cond_i243;
 var $mul=$cond_i243<<1;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$mul,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=29;break; } else { label=35;break; }
 case 29: 
 var $22=HEAP8[($__size__i_i)];
 var $and_i_i312=$22&1;
 var $tobool_i_i313=(($and_i_i312<<24)>>24)==0;
 if($tobool_i_i313){var $cond_i324=10;label=31;break;}else{label=30;break;}
 case 30: 
 var $23=HEAP32[(($__cap__i_i320)>>2)];
 var $and_i11_i321=$23&-2;
 var $phitmp15=((($and_i11_i321)-(1))|0);
 var $cond_i324=$phitmp15;label=31;break;
 case 31: 
 var $cond_i324;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$cond_i324,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=32;break; } else { label=35;break; }
 case 32: 
 var $24=HEAP8[($__size__i_i)];
 var $and_i_i_i355=$24&1;
 var $tobool_i_i_i356=(($and_i_i_i355<<24)>>24)==0;
 if($tobool_i_i_i356){var $cond_i_i374=$arrayidx_i_i_i372_pre_phi;label=34;break;}else{label=33;break;}
 case 33: 
 var $25=HEAP32[(($__data__i21_i_i363_pre_phi)>>2)];
 var $cond_i_i374=$25;label=34;break;
 case 34: 
 var $cond_i_i374;
 var $add_ptr=(($cond_i_i374+$cond_i20223)|0);
 HEAP32[(($__a_end)>>2)]=$add_ptr;
 var $__a_1=$cond_i_i374;label=38;break;
 case 35: 
 var $lpad_loopexit16$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_loopexit16$1 = tempRet0;
 var $lpad_phi$1=$lpad_loopexit16$1;var $lpad_phi$0=$lpad_loopexit16$0;label=37;break;
 case 36: 
 var $lpad_nonloopexit17$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_nonloopexit17$1 = tempRet0;
 var $lpad_phi$1=$lpad_nonloopexit17$1;var $lpad_phi$0=$lpad_nonloopexit17$0;label=37;break;
 case 37: 
 var $lpad_phi$0;
 var $lpad_phi$1;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 ___resumeException($lpad_phi$0)
 case 38: 
 var $__a_1;
 var $__ninp__i_i384=(($10+12)|0);
 var $26=HEAP32[(($__ninp__i_i384)>>2)];
 var $__einp__i_i385=(($10+16)|0);
 var $27=HEAP32[(($__einp__i_i385)>>2)];
 var $cmp_i_i386=($26|0)==($27|0);
 if($cmp_i_i386){label=39;break;}else{label=40;break;}
 case 39: 
 var $28=$10;
 var $vtable_i_i387=HEAP32[(($28)>>2)];
 var $vfn_i_i388=(($vtable_i_i387+36)|0);
 var $29=HEAP32[(($vfn_i_i388)>>2)];
 var $call_i_i393=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$29]($10) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i378_0=$call_i_i393;label=41;break; } else { label=35;break; }
 case 40: 
 var $30=HEAP32[(($26)>>2)];
 var $retval_i_i378_0=$30;label=41;break;
 case 41: 
 var $retval_i_i378_0;
 var $call21=__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($retval_i_i378_0,$retval_0_i,$__a_1,$__a_end,$__dc,$3,$__grouping,$arraydecay5,$__g_end,$arraydecay);
 var $tobool=($call21|0)==0;
 if($tobool){label=42;break;}else{var $__a_2=$__a_1;var $35=$17;var $cmp_i30_i_i13721=$cmp_i30_i_i13722;label=45;break;}
 case 42: 
 var $31=HEAP32[(($__ninp__i_i384)>>2)];
 var $32=HEAP32[(($__einp__i_i385)>>2)];
 var $cmp_i_i290=($31|0)==($32|0);
 if($cmp_i_i290){label=43;break;}else{label=44;break;}
 case 43: 
 var $33=$10;
 var $vtable_i_i=HEAP32[(($33)>>2)];
 var $vfn_i_i=(($vtable_i_i+40)|0);
 var $34=HEAP32[(($vfn_i_i)>>2)];
 var $call_i_i291=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$34]($10) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $__a_0=$__a_1;var $4=$10;label=10;break; } else { label=35;break; }
 case 44: 
 var $incdec_ptr_i_i=(($31+4)|0);
 HEAP32[(($__ninp__i_i384)>>2)]=$incdec_ptr_i_i;
 var $__a_0=$__a_1;var $4=$10;label=10;break;
 case 45: 
 var $cmp_i30_i_i13721;
 var $35;
 var $__a_2;
 var $__size__i_i262=$__grouping;
 var $36=HEAP8[($__size__i_i262)];
 var $conv_i_i263=($36&255);
 var $and_i_i264=$conv_i_i263&1;
 var $tobool_i_i265=($and_i_i264|0)==0;
 if($tobool_i_i265){label=47;break;}else{label=46;break;}
 case 46: 
 var $__size__i23_i272=(($__grouping+4)|0);
 var $37=HEAP32[(($__size__i23_i272)>>2)];
 var $cond_i284=$37;label=48;break;
 case 47: 
 var $shr_i_i28211=$conv_i_i263>>>1;
 var $cond_i284=$shr_i_i28211;label=48;break;
 case 48: 
 var $cond_i284;
 var $cmp27=($cond_i284|0)==0;
 if($cmp27){label=51;break;}else{label=49;break;}
 case 49: 
 var $38=HEAP32[(($__g_end)>>2)];
 var $sub_ptr_lhs_cast29=$38;
 var $sub_ptr_rhs_cast30=$__g;
 var $sub_ptr_sub31=((($sub_ptr_lhs_cast29)-($sub_ptr_rhs_cast30))|0);
 var $cmp32=($sub_ptr_sub31|0)<160;
 if($cmp32){label=50;break;}else{label=51;break;}
 case 50: 
 var $39=HEAP32[(($__dc)>>2)];
 var $incdec_ptr=(($38+4)|0);
 HEAP32[(($__g_end)>>2)]=$incdec_ptr;
 HEAP32[(($38)>>2)]=$39;
 label=51;break;
 case 51: 
 var $40=HEAP32[(($__a_end)>>2)];
 var $call36$r=(function() { try { __THREW__ = 0; return __ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji($__a_2,$40,$__err,$retval_0_i) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();var $call36$0=$call36$r;var $call36$1=tempRet0;if (!__THREW__) { label=52;break; } else { label=36;break; }
 case 52: 
 var $st$0$0=(($__v)|0);
 HEAP32[(($st$0$0)>>2)]=$call36$0;
 var $st$1$1=(($__v+4)|0);
 HEAP32[(($st$1$1)>>2)]=$call36$1;
 var $41=HEAP32[(($__g_end)>>2)];
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$arraydecay5,$41,$__err);
 if($cmp_i_i_i115){var $47=0;label=58;break;}else{label=53;break;}
 case 53: 
 var $__ninp__i_i_i_i=(($10+12)|0);
 var $42=HEAP32[(($__ninp__i_i_i_i)>>2)];
 var $__einp__i_i_i_i=(($10+16)|0);
 var $43=HEAP32[(($__einp__i_i_i_i)>>2)];
 var $cmp_i_i_i_i=($42|0)==($43|0);
 if($cmp_i_i_i_i){label=54;break;}else{label=55;break;}
 case 54: 
 var $44=$10;
 var $vtable_i_i_i_i=HEAP32[(($44)>>2)];
 var $vfn_i_i_i_i=(($vtable_i_i_i_i+36)|0);
 var $45=HEAP32[(($vfn_i_i_i_i)>>2)];
 var $call_i_i_i_i51=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$45]($10) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i_i_i_0=$call_i_i_i_i51;label=56;break; } else { label=36;break; }
 case 55: 
 var $46=HEAP32[(($42)>>2)];
 var $retval_i_i_i_i_0=$46;label=56;break;
 case 56: 
 var $retval_i_i_i_i_0;
 var $cmp_i7_i_i_i=($retval_i_i_i_i_0|0)==-1;
 if($cmp_i7_i_i_i){label=57;break;}else{var $47=$10;label=58;break;}
 case 57: 
 HEAP32[(($__sbuf__i_i_i97)>>2)]=0;
 var $47=0;label=58;break;
 case 58: 
 var $47;
 var $cmp_i_i_i50=($47|0)==0;
 if($cmp_i30_i_i13721){label=64;break;}else{label=59;break;}
 case 59: 
 var $__ninp__i_i15_i_i=(($35+12)|0);
 var $48=HEAP32[(($__ninp__i_i15_i_i)>>2)];
 var $__einp__i_i16_i_i=(($35+16)|0);
 var $49=HEAP32[(($__einp__i_i16_i_i)>>2)];
 var $cmp_i_i17_i_i=($48|0)==($49|0);
 if($cmp_i_i17_i_i){label=60;break;}else{label=61;break;}
 case 60: 
 var $50=$35;
 var $vtable_i_i19_i_i=HEAP32[(($50)>>2)];
 var $vfn_i_i20_i_i=(($vtable_i_i19_i_i+36)|0);
 var $51=HEAP32[(($vfn_i_i20_i_i)>>2)];
 var $call_i_i21_i_i52=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$51]($35) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i7_i_i_0=$call_i_i21_i_i52;label=62;break; } else { label=36;break; }
 case 61: 
 var $52=HEAP32[(($48)>>2)];
 var $retval_i_i7_i_i_0=$52;label=62;break;
 case 62: 
 var $retval_i_i7_i_i_0;
 var $cmp_i7_i25_i_i=($retval_i_i7_i_i_0|0)==-1;
 if($cmp_i7_i25_i_i){label=63;break;}else{label=65;break;}
 case 63: 
 HEAP32[(($__sbuf__i11_i_i118)>>2)]=0;
 label=64;break;
 case 64: 
 if($cmp_i_i_i50){label=66;break;}else{label=67;break;}
 case 65: 
 var $cmp_i30_i_i=($35|0)==0;
 var $cmp_i_itmp=$cmp_i_i_i50^$cmp_i30_i_i;
 if($cmp_i_itmp){label=67;break;}else{label=66;break;}
 case 66: 
 var $53=HEAP32[(($__err)>>2)];
 var $or=$53|2;
 HEAP32[(($__err)>>2)]=$or;
 label=67;break;
 case 67: 
 var $54=(($agg_result)|0);
 HEAP32[(($54)>>2)]=$47;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 STACKTOP=sp;return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf($agg_result,$this,$__b,$__e,$__iob,$__err,$__v){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 var $agg_tmp=sp;
 var $agg_tmp2=(sp)+(8);
 var $0=(($__b)|0);
 var $1=HEAP32[(($0)>>2)];
 var $2=(($agg_tmp)|0);
 HEAP32[(($2)>>2)]=$1;
 var $3=(($__e)|0);
 var $4=HEAP32[(($3)>>2)];
 var $5=(($agg_tmp2)|0);
 HEAP32[(($5)>>2)]=$4;
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($agg_result,0,$agg_tmp,$agg_tmp2,$__iob,$__err,$__v);
 STACKTOP=sp;return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($agg_result,$this,$__b,$__e,$__iob,$__err,$__v){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+176)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__atoms=sp;
 var $__decimal_point=(sp)+(128);
 var $__thousands_sep=(sp)+(136);
 var $__grouping=(sp)+(144);
 var $__buf=(sp)+(160);
 var $__size__i_i=$__buf;
 var $__a_end=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__g=STACKTOP;STACKTOP = (STACKTOP + 160)|0;(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__g_end=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__dc=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__in_units=STACKTOP;STACKTOP = (STACKTOP + 1)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__exp=STACKTOP;STACKTOP = (STACKTOP + 1)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $arraydecay=(($__atoms)|0);
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping,$__iob,$arraydecay,$__decimal_point,$__thousands_sep);
 HEAP32[(($__size__i_i)>>2)]=0; HEAP32[((($__size__i_i)+(4))>>2)]=0; HEAP32[((($__size__i_i)+(8))>>2)]=0;
 var $__s_i_i=$__buf;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,10,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=32;break; }
 case 2: 
 var $0=HEAP8[($__size__i_i)];
 var $and_i_i_i=$0&1;
 var $tobool_i_i_i78=(($and_i_i_i<<24)>>24)==0;
 if($tobool_i_i_i78){label=4;break;}else{label=3;break;}
 case 3: 
 var $__data__i21_i_i=(($__buf+8)|0);
 var $1=HEAP32[(($__data__i21_i_i)>>2)];
 var $arrayidx_i_i_i373_pre=(($__s_i_i+1)|0);
 var $cond_i_i=$1;var $arrayidx_i_i_i373_pre_phi=$arrayidx_i_i_i373_pre;var $__data__i21_i_i364_pre_phi=$__data__i21_i_i;label=5;break;
 case 4: 
 var $arrayidx_i_i_i79=(($__s_i_i+1)|0);
 var $__data__i21_i_i364_pre=(($__buf+8)|0);
 var $cond_i_i=$arrayidx_i_i_i79;var $arrayidx_i_i_i373_pre_phi=$arrayidx_i_i_i79;var $__data__i21_i_i364_pre_phi=$__data__i21_i_i364_pre;label=5;break;
 case 5: 
 var $__data__i21_i_i364_pre_phi;
 var $arrayidx_i_i_i373_pre_phi;
 var $cond_i_i;
 HEAP32[(($__a_end)>>2)]=$cond_i_i;
 var $arraydecay4=(($__g)|0);
 HEAP32[(($__g_end)>>2)]=$arraydecay4;
 HEAP32[(($__dc)>>2)]=0;
 HEAP8[($__in_units)]=1;
 HEAP8[($__exp)]=69;
 var $__sbuf__i_i_i98=(($__b)|0);
 var $__sbuf__i11_i_i119=(($__e)|0);
 var $__cap__i_i321=(($__buf)|0);
 var $__size__i23_i232=(($__buf+4)|0);
 var $2=HEAP32[(($__decimal_point)>>2)];
 var $3=HEAP32[(($__thousands_sep)>>2)];
 var $_pre=HEAP32[(($__sbuf__i_i_i98)>>2)];
 var $__a_0=$cond_i_i;var $4=$_pre;label=6;break;
 case 6: 
 var $4;
 var $__a_0;
 var $tobool_i_i_i99=($4|0)==0;
 if($tobool_i_i_i99){var $10=0;label=12;break;}else{label=7;break;}
 case 7: 
 var $__ninp__i_i_i_i102=(($4+12)|0);
 var $5=HEAP32[(($__ninp__i_i_i_i102)>>2)];
 var $__einp__i_i_i_i103=(($4+16)|0);
 var $6=HEAP32[(($__einp__i_i_i_i103)>>2)];
 var $cmp_i_i_i_i104=($5|0)==($6|0);
 if($cmp_i_i_i_i104){label=8;break;}else{label=9;break;}
 case 8: 
 var $7=$4;
 var $vtable_i_i_i_i106=HEAP32[(($7)>>2)];
 var $vfn_i_i_i_i107=(($vtable_i_i_i_i106+36)|0);
 var $8=HEAP32[(($vfn_i_i_i_i107)>>2)];
 var $call_i_i_i_i142=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$8]($4) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i_i_i89_0=$call_i_i_i_i142;label=10;break; } else { label=31;break; }
 case 9: 
 var $9=HEAP32[(($5)>>2)];
 var $retval_i_i_i_i89_0=$9;label=10;break;
 case 10: 
 var $retval_i_i_i_i89_0;
 var $cmp_i7_i_i_i111=($retval_i_i_i_i89_0|0)==-1;
 if($cmp_i7_i_i_i111){label=11;break;}else{var $10=$4;label=12;break;}
 case 11: 
 HEAP32[(($__sbuf__i_i_i98)>>2)]=0;
 var $10=0;label=12;break;
 case 12: 
 var $10;
 var $cmp_i_i_i116=($10|0)==0;
 var $11=HEAP32[(($__sbuf__i11_i_i119)>>2)];
 var $tobool_i12_i_i120=($11|0)==0;
 if($tobool_i12_i_i120){label=18;break;}else{label=13;break;}
 case 13: 
 var $__ninp__i_i15_i_i124=(($11+12)|0);
 var $12=HEAP32[(($__ninp__i_i15_i_i124)>>2)];
 var $__einp__i_i16_i_i125=(($11+16)|0);
 var $13=HEAP32[(($__einp__i_i16_i_i125)>>2)];
 var $cmp_i_i17_i_i126=($12|0)==($13|0);
 if($cmp_i_i17_i_i126){label=14;break;}else{label=15;break;}
 case 14: 
 var $14=$11;
 var $vtable_i_i19_i_i128=HEAP32[(($14)>>2)];
 var $vfn_i_i20_i_i129=(($vtable_i_i19_i_i128+36)|0);
 var $15=HEAP32[(($vfn_i_i20_i_i129)>>2)];
 var $call_i_i21_i_i144=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$15]($11) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i7_i_i83_0=$call_i_i21_i_i144;label=16;break; } else { label=31;break; }
 case 15: 
 var $16=HEAP32[(($12)>>2)];
 var $retval_i_i7_i_i83_0=$16;label=16;break;
 case 16: 
 var $retval_i_i7_i_i83_0;
 var $cmp_i7_i25_i_i133=($retval_i_i7_i_i83_0|0)==-1;
 if($cmp_i7_i25_i_i133){label=17;break;}else{label=19;break;}
 case 17: 
 HEAP32[(($__sbuf__i11_i_i119)>>2)]=0;
 label=18;break;
 case 18: 
 if($cmp_i_i_i116){var $__a_2=$__a_0;var $35=0;var $cmp_i30_i_i13819=1;label=41;break;}else{var $17=0;var $cmp_i30_i_i13820=1;label=20;break;}
 case 19: 
 var $cmp_i30_i_i138=($11|0)==0;
 var $lnot_i=$cmp_i_i_i116^$cmp_i30_i_i138;
 if($lnot_i){var $17=$11;var $cmp_i30_i_i13820=$cmp_i30_i_i138;label=20;break;}else{var $__a_2=$__a_0;var $35=$11;var $cmp_i30_i_i13819=$cmp_i30_i_i138;label=41;break;}
 case 20: 
 var $cmp_i30_i_i13820;
 var $17;
 var $18=HEAP32[(($__a_end)>>2)];
 var $sub_ptr_lhs_cast=$18;
 var $sub_ptr_rhs_cast=$__a_0;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $19=HEAP8[($__size__i_i)];
 var $conv_i_i157=($19&255);
 var $and_i_i158=$conv_i_i157&1;
 var $tobool_i_i159=($and_i_i158|0)==0;
 var $20=HEAP32[(($__size__i23_i232)>>2)];
 var $shr_i_i10=$conv_i_i157>>>1;
 var $cond_i163=($tobool_i_i159?$shr_i_i10:$20);
 var $cmp=($sub_ptr_sub|0)==($cond_i163|0);
 if($cmp){label=21;break;}else{var $__a_1=$__a_0;label=34;break;}
 case 21: 
 if($tobool_i_i159){label=23;break;}else{label=22;break;}
 case 22: 
 var $21=HEAP32[(($__size__i23_i232)>>2)];
 var $cond_i244=$21;var $cond_i20321=$21;label=24;break;
 case 23: 
 var $shr_i_i20111=$conv_i_i157>>>1;
 var $shr_i_i24212=$conv_i_i157>>>1;
 var $cond_i244=$shr_i_i24212;var $cond_i20321=$shr_i_i20111;label=24;break;
 case 24: 
 var $cond_i20321;
 var $cond_i244;
 var $mul=$cond_i244<<1;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$mul,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=25;break; } else { label=31;break; }
 case 25: 
 var $22=HEAP8[($__size__i_i)];
 var $and_i_i313=$22&1;
 var $tobool_i_i314=(($and_i_i313<<24)>>24)==0;
 if($tobool_i_i314){var $cond_i325=10;label=27;break;}else{label=26;break;}
 case 26: 
 var $23=HEAP32[(($__cap__i_i321)>>2)];
 var $and_i11_i322=$23&-2;
 var $phitmp13=((($and_i11_i322)-(1))|0);
 var $cond_i325=$phitmp13;label=27;break;
 case 27: 
 var $cond_i325;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$cond_i325,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=28;break; } else { label=31;break; }
 case 28: 
 var $24=HEAP8[($__size__i_i)];
 var $and_i_i_i356=$24&1;
 var $tobool_i_i_i357=(($and_i_i_i356<<24)>>24)==0;
 if($tobool_i_i_i357){var $cond_i_i375=$arrayidx_i_i_i373_pre_phi;label=30;break;}else{label=29;break;}
 case 29: 
 var $25=HEAP32[(($__data__i21_i_i364_pre_phi)>>2)];
 var $cond_i_i375=$25;label=30;break;
 case 30: 
 var $cond_i_i375;
 var $add_ptr=(($cond_i_i375+$cond_i20321)|0);
 HEAP32[(($__a_end)>>2)]=$add_ptr;
 var $__a_1=$cond_i_i375;label=34;break;
 case 31: 
 var $lpad_loopexit14$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_loopexit14$1 = tempRet0;
 var $lpad_phi$1=$lpad_loopexit14$1;var $lpad_phi$0=$lpad_loopexit14$0;label=33;break;
 case 32: 
 var $lpad_nonloopexit15$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_nonloopexit15$1 = tempRet0;
 var $lpad_phi$1=$lpad_nonloopexit15$1;var $lpad_phi$0=$lpad_nonloopexit15$0;label=33;break;
 case 33: 
 var $lpad_phi$0;
 var $lpad_phi$1;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 ___resumeException($lpad_phi$0)
 case 34: 
 var $__a_1;
 var $__ninp__i_i385=(($10+12)|0);
 var $26=HEAP32[(($__ninp__i_i385)>>2)];
 var $__einp__i_i386=(($10+16)|0);
 var $27=HEAP32[(($__einp__i_i386)>>2)];
 var $cmp_i_i387=($26|0)==($27|0);
 if($cmp_i_i387){label=35;break;}else{label=36;break;}
 case 35: 
 var $28=$10;
 var $vtable_i_i388=HEAP32[(($28)>>2)];
 var $vfn_i_i389=(($vtable_i_i388+36)|0);
 var $29=HEAP32[(($vfn_i_i389)>>2)];
 var $call_i_i394=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$29]($10) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i379_0=$call_i_i394;label=37;break; } else { label=31;break; }
 case 36: 
 var $30=HEAP32[(($26)>>2)];
 var $retval_i_i379_0=$30;label=37;break;
 case 37: 
 var $retval_i_i379_0;
 var $call20=__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($retval_i_i379_0,$__in_units,$__exp,$__a_1,$__a_end,$2,$3,$__grouping,$arraydecay4,$__g_end,$__dc,$arraydecay);
 var $tobool=($call20|0)==0;
 if($tobool){label=38;break;}else{var $__a_2=$__a_1;var $35=$17;var $cmp_i30_i_i13819=$cmp_i30_i_i13820;label=41;break;}
 case 38: 
 var $31=HEAP32[(($__ninp__i_i385)>>2)];
 var $32=HEAP32[(($__einp__i_i386)>>2)];
 var $cmp_i_i291=($31|0)==($32|0);
 if($cmp_i_i291){label=39;break;}else{label=40;break;}
 case 39: 
 var $33=$10;
 var $vtable_i_i=HEAP32[(($33)>>2)];
 var $vfn_i_i=(($vtable_i_i+40)|0);
 var $34=HEAP32[(($vfn_i_i)>>2)];
 var $call_i_i292=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$34]($10) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $__a_0=$__a_1;var $4=$10;label=6;break; } else { label=31;break; }
 case 40: 
 var $incdec_ptr_i_i=(($31+4)|0);
 HEAP32[(($__ninp__i_i385)>>2)]=$incdec_ptr_i_i;
 var $__a_0=$__a_1;var $4=$10;label=6;break;
 case 41: 
 var $cmp_i30_i_i13819;
 var $35;
 var $__a_2;
 var $__size__i_i263=$__grouping;
 var $36=HEAP8[($__size__i_i263)];
 var $conv_i_i264=($36&255);
 var $and_i_i265=$conv_i_i264&1;
 var $tobool_i_i266=($and_i_i265|0)==0;
 if($tobool_i_i266){label=43;break;}else{label=42;break;}
 case 42: 
 var $__size__i23_i273=(($__grouping+4)|0);
 var $37=HEAP32[(($__size__i23_i273)>>2)];
 var $cond_i285=$37;label=44;break;
 case 43: 
 var $shr_i_i2839=$conv_i_i264>>>1;
 var $cond_i285=$shr_i_i2839;label=44;break;
 case 44: 
 var $cond_i285;
 var $cmp26=($cond_i285|0)==0;
 if($cmp26){label=48;break;}else{label=45;break;}
 case 45: 
 var $38=HEAP8[($__in_units)];
 var $39=$38&1;
 var $tobool27=(($39<<24)>>24)==0;
 if($tobool27){label=48;break;}else{label=46;break;}
 case 46: 
 var $40=HEAP32[(($__g_end)>>2)];
 var $sub_ptr_lhs_cast30=$40;
 var $sub_ptr_rhs_cast31=$__g;
 var $sub_ptr_sub32=((($sub_ptr_lhs_cast30)-($sub_ptr_rhs_cast31))|0);
 var $cmp33=($sub_ptr_sub32|0)<160;
 if($cmp33){label=47;break;}else{label=48;break;}
 case 47: 
 var $41=HEAP32[(($__dc)>>2)];
 var $incdec_ptr=(($40+4)|0);
 HEAP32[(($__g_end)>>2)]=$incdec_ptr;
 HEAP32[(($40)>>2)]=$41;
 label=48;break;
 case 48: 
 var $42=HEAP32[(($__a_end)>>2)];
 var $call37=(function() { try { __THREW__ = 0; return __ZNSt3__115__num_get_floatIfEET_PKcS3_Rj($__a_2,$42,$__err) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=49;break; } else { label=32;break; }
 case 49: 
 HEAPF32[(($__v)>>2)]=$call37;
 var $43=HEAP32[(($__g_end)>>2)];
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$arraydecay4,$43,$__err);
 if($cmp_i_i_i116){var $49=0;label=55;break;}else{label=50;break;}
 case 50: 
 var $__ninp__i_i_i_i=(($10+12)|0);
 var $44=HEAP32[(($__ninp__i_i_i_i)>>2)];
 var $__einp__i_i_i_i=(($10+16)|0);
 var $45=HEAP32[(($__einp__i_i_i_i)>>2)];
 var $cmp_i_i_i_i=($44|0)==($45|0);
 if($cmp_i_i_i_i){label=51;break;}else{label=52;break;}
 case 51: 
 var $46=$10;
 var $vtable_i_i_i_i=HEAP32[(($46)>>2)];
 var $vfn_i_i_i_i=(($vtable_i_i_i_i+36)|0);
 var $47=HEAP32[(($vfn_i_i_i_i)>>2)];
 var $call_i_i_i_i52=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$47]($10) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i_i_i_0=$call_i_i_i_i52;label=53;break; } else { label=32;break; }
 case 52: 
 var $48=HEAP32[(($44)>>2)];
 var $retval_i_i_i_i_0=$48;label=53;break;
 case 53: 
 var $retval_i_i_i_i_0;
 var $cmp_i7_i_i_i=($retval_i_i_i_i_0|0)==-1;
 if($cmp_i7_i_i_i){label=54;break;}else{var $49=$10;label=55;break;}
 case 54: 
 HEAP32[(($__sbuf__i_i_i98)>>2)]=0;
 var $49=0;label=55;break;
 case 55: 
 var $49;
 var $cmp_i_i_i51=($49|0)==0;
 if($cmp_i30_i_i13819){label=61;break;}else{label=56;break;}
 case 56: 
 var $__ninp__i_i15_i_i=(($35+12)|0);
 var $50=HEAP32[(($__ninp__i_i15_i_i)>>2)];
 var $__einp__i_i16_i_i=(($35+16)|0);
 var $51=HEAP32[(($__einp__i_i16_i_i)>>2)];
 var $cmp_i_i17_i_i=($50|0)==($51|0);
 if($cmp_i_i17_i_i){label=57;break;}else{label=58;break;}
 case 57: 
 var $52=$35;
 var $vtable_i_i19_i_i=HEAP32[(($52)>>2)];
 var $vfn_i_i20_i_i=(($vtable_i_i19_i_i+36)|0);
 var $53=HEAP32[(($vfn_i_i20_i_i)>>2)];
 var $call_i_i21_i_i53=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$53]($35) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i7_i_i_0=$call_i_i21_i_i53;label=59;break; } else { label=32;break; }
 case 58: 
 var $54=HEAP32[(($50)>>2)];
 var $retval_i_i7_i_i_0=$54;label=59;break;
 case 59: 
 var $retval_i_i7_i_i_0;
 var $cmp_i7_i25_i_i=($retval_i_i7_i_i_0|0)==-1;
 if($cmp_i7_i25_i_i){label=60;break;}else{label=62;break;}
 case 60: 
 HEAP32[(($__sbuf__i11_i_i119)>>2)]=0;
 label=61;break;
 case 61: 
 if($cmp_i_i_i51){label=63;break;}else{label=64;break;}
 case 62: 
 var $cmp_i30_i_i=($35|0)==0;
 var $cmp_i_itmp=$cmp_i_i_i51^$cmp_i30_i_i;
 if($cmp_i_itmp){label=64;break;}else{label=63;break;}
 case 63: 
 var $55=HEAP32[(($__err)>>2)];
 var $or=$55|2;
 HEAP32[(($__err)>>2)]=$or;
 label=64;break;
 case 64: 
 var $56=(($agg_result)|0);
 HEAP32[(($56)>>2)]=$49;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 STACKTOP=sp;return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd($agg_result,$this,$__b,$__e,$__iob,$__err,$__v){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 var $agg_tmp=sp;
 var $agg_tmp2=(sp)+(8);
 var $0=(($__b)|0);
 var $1=HEAP32[(($0)>>2)];
 var $2=(($agg_tmp)|0);
 HEAP32[(($2)>>2)]=$1;
 var $3=(($__e)|0);
 var $4=HEAP32[(($3)>>2)];
 var $5=(($agg_tmp2)|0);
 HEAP32[(($5)>>2)]=$4;
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($agg_result,0,$agg_tmp,$agg_tmp2,$__iob,$__err,$__v);
 STACKTOP=sp;return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($agg_result,$this,$__b,$__e,$__iob,$__err,$__v){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+176)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__atoms=sp;
 var $__decimal_point=(sp)+(128);
 var $__thousands_sep=(sp)+(136);
 var $__grouping=(sp)+(144);
 var $__buf=(sp)+(160);
 var $__size__i_i=$__buf;
 var $__a_end=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__g=STACKTOP;STACKTOP = (STACKTOP + 160)|0;(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__g_end=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__dc=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__in_units=STACKTOP;STACKTOP = (STACKTOP + 1)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__exp=STACKTOP;STACKTOP = (STACKTOP + 1)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $arraydecay=(($__atoms)|0);
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping,$__iob,$arraydecay,$__decimal_point,$__thousands_sep);
 HEAP32[(($__size__i_i)>>2)]=0; HEAP32[((($__size__i_i)+(4))>>2)]=0; HEAP32[((($__size__i_i)+(8))>>2)]=0;
 var $__s_i_i=$__buf;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,10,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=32;break; }
 case 2: 
 var $0=HEAP8[($__size__i_i)];
 var $and_i_i_i=$0&1;
 var $tobool_i_i_i78=(($and_i_i_i<<24)>>24)==0;
 if($tobool_i_i_i78){label=4;break;}else{label=3;break;}
 case 3: 
 var $__data__i21_i_i=(($__buf+8)|0);
 var $1=HEAP32[(($__data__i21_i_i)>>2)];
 var $arrayidx_i_i_i373_pre=(($__s_i_i+1)|0);
 var $cond_i_i=$1;var $arrayidx_i_i_i373_pre_phi=$arrayidx_i_i_i373_pre;var $__data__i21_i_i364_pre_phi=$__data__i21_i_i;label=5;break;
 case 4: 
 var $arrayidx_i_i_i79=(($__s_i_i+1)|0);
 var $__data__i21_i_i364_pre=(($__buf+8)|0);
 var $cond_i_i=$arrayidx_i_i_i79;var $arrayidx_i_i_i373_pre_phi=$arrayidx_i_i_i79;var $__data__i21_i_i364_pre_phi=$__data__i21_i_i364_pre;label=5;break;
 case 5: 
 var $__data__i21_i_i364_pre_phi;
 var $arrayidx_i_i_i373_pre_phi;
 var $cond_i_i;
 HEAP32[(($__a_end)>>2)]=$cond_i_i;
 var $arraydecay4=(($__g)|0);
 HEAP32[(($__g_end)>>2)]=$arraydecay4;
 HEAP32[(($__dc)>>2)]=0;
 HEAP8[($__in_units)]=1;
 HEAP8[($__exp)]=69;
 var $__sbuf__i_i_i98=(($__b)|0);
 var $__sbuf__i11_i_i119=(($__e)|0);
 var $__cap__i_i321=(($__buf)|0);
 var $__size__i23_i232=(($__buf+4)|0);
 var $2=HEAP32[(($__decimal_point)>>2)];
 var $3=HEAP32[(($__thousands_sep)>>2)];
 var $_pre=HEAP32[(($__sbuf__i_i_i98)>>2)];
 var $__a_0=$cond_i_i;var $4=$_pre;label=6;break;
 case 6: 
 var $4;
 var $__a_0;
 var $tobool_i_i_i99=($4|0)==0;
 if($tobool_i_i_i99){var $10=0;label=12;break;}else{label=7;break;}
 case 7: 
 var $__ninp__i_i_i_i102=(($4+12)|0);
 var $5=HEAP32[(($__ninp__i_i_i_i102)>>2)];
 var $__einp__i_i_i_i103=(($4+16)|0);
 var $6=HEAP32[(($__einp__i_i_i_i103)>>2)];
 var $cmp_i_i_i_i104=($5|0)==($6|0);
 if($cmp_i_i_i_i104){label=8;break;}else{label=9;break;}
 case 8: 
 var $7=$4;
 var $vtable_i_i_i_i106=HEAP32[(($7)>>2)];
 var $vfn_i_i_i_i107=(($vtable_i_i_i_i106+36)|0);
 var $8=HEAP32[(($vfn_i_i_i_i107)>>2)];
 var $call_i_i_i_i142=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$8]($4) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i_i_i89_0=$call_i_i_i_i142;label=10;break; } else { label=31;break; }
 case 9: 
 var $9=HEAP32[(($5)>>2)];
 var $retval_i_i_i_i89_0=$9;label=10;break;
 case 10: 
 var $retval_i_i_i_i89_0;
 var $cmp_i7_i_i_i111=($retval_i_i_i_i89_0|0)==-1;
 if($cmp_i7_i_i_i111){label=11;break;}else{var $10=$4;label=12;break;}
 case 11: 
 HEAP32[(($__sbuf__i_i_i98)>>2)]=0;
 var $10=0;label=12;break;
 case 12: 
 var $10;
 var $cmp_i_i_i116=($10|0)==0;
 var $11=HEAP32[(($__sbuf__i11_i_i119)>>2)];
 var $tobool_i12_i_i120=($11|0)==0;
 if($tobool_i12_i_i120){label=18;break;}else{label=13;break;}
 case 13: 
 var $__ninp__i_i15_i_i124=(($11+12)|0);
 var $12=HEAP32[(($__ninp__i_i15_i_i124)>>2)];
 var $__einp__i_i16_i_i125=(($11+16)|0);
 var $13=HEAP32[(($__einp__i_i16_i_i125)>>2)];
 var $cmp_i_i17_i_i126=($12|0)==($13|0);
 if($cmp_i_i17_i_i126){label=14;break;}else{label=15;break;}
 case 14: 
 var $14=$11;
 var $vtable_i_i19_i_i128=HEAP32[(($14)>>2)];
 var $vfn_i_i20_i_i129=(($vtable_i_i19_i_i128+36)|0);
 var $15=HEAP32[(($vfn_i_i20_i_i129)>>2)];
 var $call_i_i21_i_i144=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$15]($11) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i7_i_i83_0=$call_i_i21_i_i144;label=16;break; } else { label=31;break; }
 case 15: 
 var $16=HEAP32[(($12)>>2)];
 var $retval_i_i7_i_i83_0=$16;label=16;break;
 case 16: 
 var $retval_i_i7_i_i83_0;
 var $cmp_i7_i25_i_i133=($retval_i_i7_i_i83_0|0)==-1;
 if($cmp_i7_i25_i_i133){label=17;break;}else{label=19;break;}
 case 17: 
 HEAP32[(($__sbuf__i11_i_i119)>>2)]=0;
 label=18;break;
 case 18: 
 if($cmp_i_i_i116){var $__a_2=$__a_0;var $35=0;var $cmp_i30_i_i13819=1;label=41;break;}else{var $17=0;var $cmp_i30_i_i13820=1;label=20;break;}
 case 19: 
 var $cmp_i30_i_i138=($11|0)==0;
 var $lnot_i=$cmp_i_i_i116^$cmp_i30_i_i138;
 if($lnot_i){var $17=$11;var $cmp_i30_i_i13820=$cmp_i30_i_i138;label=20;break;}else{var $__a_2=$__a_0;var $35=$11;var $cmp_i30_i_i13819=$cmp_i30_i_i138;label=41;break;}
 case 20: 
 var $cmp_i30_i_i13820;
 var $17;
 var $18=HEAP32[(($__a_end)>>2)];
 var $sub_ptr_lhs_cast=$18;
 var $sub_ptr_rhs_cast=$__a_0;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $19=HEAP8[($__size__i_i)];
 var $conv_i_i157=($19&255);
 var $and_i_i158=$conv_i_i157&1;
 var $tobool_i_i159=($and_i_i158|0)==0;
 var $20=HEAP32[(($__size__i23_i232)>>2)];
 var $shr_i_i10=$conv_i_i157>>>1;
 var $cond_i163=($tobool_i_i159?$shr_i_i10:$20);
 var $cmp=($sub_ptr_sub|0)==($cond_i163|0);
 if($cmp){label=21;break;}else{var $__a_1=$__a_0;label=34;break;}
 case 21: 
 if($tobool_i_i159){label=23;break;}else{label=22;break;}
 case 22: 
 var $21=HEAP32[(($__size__i23_i232)>>2)];
 var $cond_i244=$21;var $cond_i20321=$21;label=24;break;
 case 23: 
 var $shr_i_i20111=$conv_i_i157>>>1;
 var $shr_i_i24212=$conv_i_i157>>>1;
 var $cond_i244=$shr_i_i24212;var $cond_i20321=$shr_i_i20111;label=24;break;
 case 24: 
 var $cond_i20321;
 var $cond_i244;
 var $mul=$cond_i244<<1;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$mul,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=25;break; } else { label=31;break; }
 case 25: 
 var $22=HEAP8[($__size__i_i)];
 var $and_i_i313=$22&1;
 var $tobool_i_i314=(($and_i_i313<<24)>>24)==0;
 if($tobool_i_i314){var $cond_i325=10;label=27;break;}else{label=26;break;}
 case 26: 
 var $23=HEAP32[(($__cap__i_i321)>>2)];
 var $and_i11_i322=$23&-2;
 var $phitmp13=((($and_i11_i322)-(1))|0);
 var $cond_i325=$phitmp13;label=27;break;
 case 27: 
 var $cond_i325;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$cond_i325,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=28;break; } else { label=31;break; }
 case 28: 
 var $24=HEAP8[($__size__i_i)];
 var $and_i_i_i356=$24&1;
 var $tobool_i_i_i357=(($and_i_i_i356<<24)>>24)==0;
 if($tobool_i_i_i357){var $cond_i_i375=$arrayidx_i_i_i373_pre_phi;label=30;break;}else{label=29;break;}
 case 29: 
 var $25=HEAP32[(($__data__i21_i_i364_pre_phi)>>2)];
 var $cond_i_i375=$25;label=30;break;
 case 30: 
 var $cond_i_i375;
 var $add_ptr=(($cond_i_i375+$cond_i20321)|0);
 HEAP32[(($__a_end)>>2)]=$add_ptr;
 var $__a_1=$cond_i_i375;label=34;break;
 case 31: 
 var $lpad_loopexit14$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_loopexit14$1 = tempRet0;
 var $lpad_phi$1=$lpad_loopexit14$1;var $lpad_phi$0=$lpad_loopexit14$0;label=33;break;
 case 32: 
 var $lpad_nonloopexit15$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_nonloopexit15$1 = tempRet0;
 var $lpad_phi$1=$lpad_nonloopexit15$1;var $lpad_phi$0=$lpad_nonloopexit15$0;label=33;break;
 case 33: 
 var $lpad_phi$0;
 var $lpad_phi$1;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 ___resumeException($lpad_phi$0)
 case 34: 
 var $__a_1;
 var $__ninp__i_i385=(($10+12)|0);
 var $26=HEAP32[(($__ninp__i_i385)>>2)];
 var $__einp__i_i386=(($10+16)|0);
 var $27=HEAP32[(($__einp__i_i386)>>2)];
 var $cmp_i_i387=($26|0)==($27|0);
 if($cmp_i_i387){label=35;break;}else{label=36;break;}
 case 35: 
 var $28=$10;
 var $vtable_i_i388=HEAP32[(($28)>>2)];
 var $vfn_i_i389=(($vtable_i_i388+36)|0);
 var $29=HEAP32[(($vfn_i_i389)>>2)];
 var $call_i_i394=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$29]($10) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i379_0=$call_i_i394;label=37;break; } else { label=31;break; }
 case 36: 
 var $30=HEAP32[(($26)>>2)];
 var $retval_i_i379_0=$30;label=37;break;
 case 37: 
 var $retval_i_i379_0;
 var $call20=__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($retval_i_i379_0,$__in_units,$__exp,$__a_1,$__a_end,$2,$3,$__grouping,$arraydecay4,$__g_end,$__dc,$arraydecay);
 var $tobool=($call20|0)==0;
 if($tobool){label=38;break;}else{var $__a_2=$__a_1;var $35=$17;var $cmp_i30_i_i13819=$cmp_i30_i_i13820;label=41;break;}
 case 38: 
 var $31=HEAP32[(($__ninp__i_i385)>>2)];
 var $32=HEAP32[(($__einp__i_i386)>>2)];
 var $cmp_i_i291=($31|0)==($32|0);
 if($cmp_i_i291){label=39;break;}else{label=40;break;}
 case 39: 
 var $33=$10;
 var $vtable_i_i=HEAP32[(($33)>>2)];
 var $vfn_i_i=(($vtable_i_i+40)|0);
 var $34=HEAP32[(($vfn_i_i)>>2)];
 var $call_i_i292=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$34]($10) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $__a_0=$__a_1;var $4=$10;label=6;break; } else { label=31;break; }
 case 40: 
 var $incdec_ptr_i_i=(($31+4)|0);
 HEAP32[(($__ninp__i_i385)>>2)]=$incdec_ptr_i_i;
 var $__a_0=$__a_1;var $4=$10;label=6;break;
 case 41: 
 var $cmp_i30_i_i13819;
 var $35;
 var $__a_2;
 var $__size__i_i263=$__grouping;
 var $36=HEAP8[($__size__i_i263)];
 var $conv_i_i264=($36&255);
 var $and_i_i265=$conv_i_i264&1;
 var $tobool_i_i266=($and_i_i265|0)==0;
 if($tobool_i_i266){label=43;break;}else{label=42;break;}
 case 42: 
 var $__size__i23_i273=(($__grouping+4)|0);
 var $37=HEAP32[(($__size__i23_i273)>>2)];
 var $cond_i285=$37;label=44;break;
 case 43: 
 var $shr_i_i2839=$conv_i_i264>>>1;
 var $cond_i285=$shr_i_i2839;label=44;break;
 case 44: 
 var $cond_i285;
 var $cmp26=($cond_i285|0)==0;
 if($cmp26){label=48;break;}else{label=45;break;}
 case 45: 
 var $38=HEAP8[($__in_units)];
 var $39=$38&1;
 var $tobool27=(($39<<24)>>24)==0;
 if($tobool27){label=48;break;}else{label=46;break;}
 case 46: 
 var $40=HEAP32[(($__g_end)>>2)];
 var $sub_ptr_lhs_cast30=$40;
 var $sub_ptr_rhs_cast31=$__g;
 var $sub_ptr_sub32=((($sub_ptr_lhs_cast30)-($sub_ptr_rhs_cast31))|0);
 var $cmp33=($sub_ptr_sub32|0)<160;
 if($cmp33){label=47;break;}else{label=48;break;}
 case 47: 
 var $41=HEAP32[(($__dc)>>2)];
 var $incdec_ptr=(($40+4)|0);
 HEAP32[(($__g_end)>>2)]=$incdec_ptr;
 HEAP32[(($40)>>2)]=$41;
 label=48;break;
 case 48: 
 var $42=HEAP32[(($__a_end)>>2)];
 var $call37=(function() { try { __THREW__ = 0; return __ZNSt3__115__num_get_floatIdEET_PKcS3_Rj($__a_2,$42,$__err) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=49;break; } else { label=32;break; }
 case 49: 
 HEAPF64[(($__v)>>3)]=$call37;
 var $43=HEAP32[(($__g_end)>>2)];
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$arraydecay4,$43,$__err);
 if($cmp_i_i_i116){var $49=0;label=55;break;}else{label=50;break;}
 case 50: 
 var $__ninp__i_i_i_i=(($10+12)|0);
 var $44=HEAP32[(($__ninp__i_i_i_i)>>2)];
 var $__einp__i_i_i_i=(($10+16)|0);
 var $45=HEAP32[(($__einp__i_i_i_i)>>2)];
 var $cmp_i_i_i_i=($44|0)==($45|0);
 if($cmp_i_i_i_i){label=51;break;}else{label=52;break;}
 case 51: 
 var $46=$10;
 var $vtable_i_i_i_i=HEAP32[(($46)>>2)];
 var $vfn_i_i_i_i=(($vtable_i_i_i_i+36)|0);
 var $47=HEAP32[(($vfn_i_i_i_i)>>2)];
 var $call_i_i_i_i52=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$47]($10) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i_i_i_0=$call_i_i_i_i52;label=53;break; } else { label=32;break; }
 case 52: 
 var $48=HEAP32[(($44)>>2)];
 var $retval_i_i_i_i_0=$48;label=53;break;
 case 53: 
 var $retval_i_i_i_i_0;
 var $cmp_i7_i_i_i=($retval_i_i_i_i_0|0)==-1;
 if($cmp_i7_i_i_i){label=54;break;}else{var $49=$10;label=55;break;}
 case 54: 
 HEAP32[(($__sbuf__i_i_i98)>>2)]=0;
 var $49=0;label=55;break;
 case 55: 
 var $49;
 var $cmp_i_i_i51=($49|0)==0;
 if($cmp_i30_i_i13819){label=61;break;}else{label=56;break;}
 case 56: 
 var $__ninp__i_i15_i_i=(($35+12)|0);
 var $50=HEAP32[(($__ninp__i_i15_i_i)>>2)];
 var $__einp__i_i16_i_i=(($35+16)|0);
 var $51=HEAP32[(($__einp__i_i16_i_i)>>2)];
 var $cmp_i_i17_i_i=($50|0)==($51|0);
 if($cmp_i_i17_i_i){label=57;break;}else{label=58;break;}
 case 57: 
 var $52=$35;
 var $vtable_i_i19_i_i=HEAP32[(($52)>>2)];
 var $vfn_i_i20_i_i=(($vtable_i_i19_i_i+36)|0);
 var $53=HEAP32[(($vfn_i_i20_i_i)>>2)];
 var $call_i_i21_i_i53=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$53]($35) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i7_i_i_0=$call_i_i21_i_i53;label=59;break; } else { label=32;break; }
 case 58: 
 var $54=HEAP32[(($50)>>2)];
 var $retval_i_i7_i_i_0=$54;label=59;break;
 case 59: 
 var $retval_i_i7_i_i_0;
 var $cmp_i7_i25_i_i=($retval_i_i7_i_i_0|0)==-1;
 if($cmp_i7_i25_i_i){label=60;break;}else{label=62;break;}
 case 60: 
 HEAP32[(($__sbuf__i11_i_i119)>>2)]=0;
 label=61;break;
 case 61: 
 if($cmp_i_i_i51){label=63;break;}else{label=64;break;}
 case 62: 
 var $cmp_i30_i_i=($35|0)==0;
 var $cmp_i_itmp=$cmp_i_i_i51^$cmp_i30_i_i;
 if($cmp_i_itmp){label=64;break;}else{label=63;break;}
 case 63: 
 var $55=HEAP32[(($__err)>>2)];
 var $or=$55|2;
 HEAP32[(($__err)>>2)]=$or;
 label=64;break;
 case 64: 
 var $56=(($agg_result)|0);
 HEAP32[(($56)>>2)]=$49;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 STACKTOP=sp;return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe($agg_result,$this,$__b,$__e,$__iob,$__err,$__v){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 var $agg_tmp=sp;
 var $agg_tmp2=(sp)+(8);
 var $0=(($__b)|0);
 var $1=HEAP32[(($0)>>2)];
 var $2=(($agg_tmp)|0);
 HEAP32[(($2)>>2)]=$1;
 var $3=(($__e)|0);
 var $4=HEAP32[(($3)>>2)];
 var $5=(($agg_tmp2)|0);
 HEAP32[(($5)>>2)]=$4;
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($agg_result,0,$agg_tmp,$agg_tmp2,$__iob,$__err,$__v);
 STACKTOP=sp;return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($agg_result,$this,$__b,$__e,$__iob,$__err,$__v){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+176)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__atoms=sp;
 var $__decimal_point=(sp)+(128);
 var $__thousands_sep=(sp)+(136);
 var $__grouping=(sp)+(144);
 var $__buf=(sp)+(160);
 var $__size__i_i=$__buf;
 var $__a_end=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__g=STACKTOP;STACKTOP = (STACKTOP + 160)|0;(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__g_end=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__dc=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__in_units=STACKTOP;STACKTOP = (STACKTOP + 1)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__exp=STACKTOP;STACKTOP = (STACKTOP + 1)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $arraydecay=(($__atoms)|0);
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping,$__iob,$arraydecay,$__decimal_point,$__thousands_sep);
 HEAP32[(($__size__i_i)>>2)]=0; HEAP32[((($__size__i_i)+(4))>>2)]=0; HEAP32[((($__size__i_i)+(8))>>2)]=0;
 var $__s_i_i=$__buf;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,10,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=32;break; }
 case 2: 
 var $0=HEAP8[($__size__i_i)];
 var $and_i_i_i=$0&1;
 var $tobool_i_i_i78=(($and_i_i_i<<24)>>24)==0;
 if($tobool_i_i_i78){label=4;break;}else{label=3;break;}
 case 3: 
 var $__data__i21_i_i=(($__buf+8)|0);
 var $1=HEAP32[(($__data__i21_i_i)>>2)];
 var $arrayidx_i_i_i373_pre=(($__s_i_i+1)|0);
 var $cond_i_i=$1;var $arrayidx_i_i_i373_pre_phi=$arrayidx_i_i_i373_pre;var $__data__i21_i_i364_pre_phi=$__data__i21_i_i;label=5;break;
 case 4: 
 var $arrayidx_i_i_i79=(($__s_i_i+1)|0);
 var $__data__i21_i_i364_pre=(($__buf+8)|0);
 var $cond_i_i=$arrayidx_i_i_i79;var $arrayidx_i_i_i373_pre_phi=$arrayidx_i_i_i79;var $__data__i21_i_i364_pre_phi=$__data__i21_i_i364_pre;label=5;break;
 case 5: 
 var $__data__i21_i_i364_pre_phi;
 var $arrayidx_i_i_i373_pre_phi;
 var $cond_i_i;
 HEAP32[(($__a_end)>>2)]=$cond_i_i;
 var $arraydecay4=(($__g)|0);
 HEAP32[(($__g_end)>>2)]=$arraydecay4;
 HEAP32[(($__dc)>>2)]=0;
 HEAP8[($__in_units)]=1;
 HEAP8[($__exp)]=69;
 var $__sbuf__i_i_i98=(($__b)|0);
 var $__sbuf__i11_i_i119=(($__e)|0);
 var $__cap__i_i321=(($__buf)|0);
 var $__size__i23_i232=(($__buf+4)|0);
 var $2=HEAP32[(($__decimal_point)>>2)];
 var $3=HEAP32[(($__thousands_sep)>>2)];
 var $_pre=HEAP32[(($__sbuf__i_i_i98)>>2)];
 var $__a_0=$cond_i_i;var $4=$_pre;label=6;break;
 case 6: 
 var $4;
 var $__a_0;
 var $tobool_i_i_i99=($4|0)==0;
 if($tobool_i_i_i99){var $10=0;label=12;break;}else{label=7;break;}
 case 7: 
 var $__ninp__i_i_i_i102=(($4+12)|0);
 var $5=HEAP32[(($__ninp__i_i_i_i102)>>2)];
 var $__einp__i_i_i_i103=(($4+16)|0);
 var $6=HEAP32[(($__einp__i_i_i_i103)>>2)];
 var $cmp_i_i_i_i104=($5|0)==($6|0);
 if($cmp_i_i_i_i104){label=8;break;}else{label=9;break;}
 case 8: 
 var $7=$4;
 var $vtable_i_i_i_i106=HEAP32[(($7)>>2)];
 var $vfn_i_i_i_i107=(($vtable_i_i_i_i106+36)|0);
 var $8=HEAP32[(($vfn_i_i_i_i107)>>2)];
 var $call_i_i_i_i142=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$8]($4) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i_i_i89_0=$call_i_i_i_i142;label=10;break; } else { label=31;break; }
 case 9: 
 var $9=HEAP32[(($5)>>2)];
 var $retval_i_i_i_i89_0=$9;label=10;break;
 case 10: 
 var $retval_i_i_i_i89_0;
 var $cmp_i7_i_i_i111=($retval_i_i_i_i89_0|0)==-1;
 if($cmp_i7_i_i_i111){label=11;break;}else{var $10=$4;label=12;break;}
 case 11: 
 HEAP32[(($__sbuf__i_i_i98)>>2)]=0;
 var $10=0;label=12;break;
 case 12: 
 var $10;
 var $cmp_i_i_i116=($10|0)==0;
 var $11=HEAP32[(($__sbuf__i11_i_i119)>>2)];
 var $tobool_i12_i_i120=($11|0)==0;
 if($tobool_i12_i_i120){label=18;break;}else{label=13;break;}
 case 13: 
 var $__ninp__i_i15_i_i124=(($11+12)|0);
 var $12=HEAP32[(($__ninp__i_i15_i_i124)>>2)];
 var $__einp__i_i16_i_i125=(($11+16)|0);
 var $13=HEAP32[(($__einp__i_i16_i_i125)>>2)];
 var $cmp_i_i17_i_i126=($12|0)==($13|0);
 if($cmp_i_i17_i_i126){label=14;break;}else{label=15;break;}
 case 14: 
 var $14=$11;
 var $vtable_i_i19_i_i128=HEAP32[(($14)>>2)];
 var $vfn_i_i20_i_i129=(($vtable_i_i19_i_i128+36)|0);
 var $15=HEAP32[(($vfn_i_i20_i_i129)>>2)];
 var $call_i_i21_i_i144=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$15]($11) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i7_i_i83_0=$call_i_i21_i_i144;label=16;break; } else { label=31;break; }
 case 15: 
 var $16=HEAP32[(($12)>>2)];
 var $retval_i_i7_i_i83_0=$16;label=16;break;
 case 16: 
 var $retval_i_i7_i_i83_0;
 var $cmp_i7_i25_i_i133=($retval_i_i7_i_i83_0|0)==-1;
 if($cmp_i7_i25_i_i133){label=17;break;}else{label=19;break;}
 case 17: 
 HEAP32[(($__sbuf__i11_i_i119)>>2)]=0;
 label=18;break;
 case 18: 
 if($cmp_i_i_i116){var $__a_2=$__a_0;var $35=0;var $cmp_i30_i_i13819=1;label=41;break;}else{var $17=0;var $cmp_i30_i_i13820=1;label=20;break;}
 case 19: 
 var $cmp_i30_i_i138=($11|0)==0;
 var $lnot_i=$cmp_i_i_i116^$cmp_i30_i_i138;
 if($lnot_i){var $17=$11;var $cmp_i30_i_i13820=$cmp_i30_i_i138;label=20;break;}else{var $__a_2=$__a_0;var $35=$11;var $cmp_i30_i_i13819=$cmp_i30_i_i138;label=41;break;}
 case 20: 
 var $cmp_i30_i_i13820;
 var $17;
 var $18=HEAP32[(($__a_end)>>2)];
 var $sub_ptr_lhs_cast=$18;
 var $sub_ptr_rhs_cast=$__a_0;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $19=HEAP8[($__size__i_i)];
 var $conv_i_i157=($19&255);
 var $and_i_i158=$conv_i_i157&1;
 var $tobool_i_i159=($and_i_i158|0)==0;
 var $20=HEAP32[(($__size__i23_i232)>>2)];
 var $shr_i_i10=$conv_i_i157>>>1;
 var $cond_i163=($tobool_i_i159?$shr_i_i10:$20);
 var $cmp=($sub_ptr_sub|0)==($cond_i163|0);
 if($cmp){label=21;break;}else{var $__a_1=$__a_0;label=34;break;}
 case 21: 
 if($tobool_i_i159){label=23;break;}else{label=22;break;}
 case 22: 
 var $21=HEAP32[(($__size__i23_i232)>>2)];
 var $cond_i244=$21;var $cond_i20321=$21;label=24;break;
 case 23: 
 var $shr_i_i20111=$conv_i_i157>>>1;
 var $shr_i_i24212=$conv_i_i157>>>1;
 var $cond_i244=$shr_i_i24212;var $cond_i20321=$shr_i_i20111;label=24;break;
 case 24: 
 var $cond_i20321;
 var $cond_i244;
 var $mul=$cond_i244<<1;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$mul,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=25;break; } else { label=31;break; }
 case 25: 
 var $22=HEAP8[($__size__i_i)];
 var $and_i_i313=$22&1;
 var $tobool_i_i314=(($and_i_i313<<24)>>24)==0;
 if($tobool_i_i314){var $cond_i325=10;label=27;break;}else{label=26;break;}
 case 26: 
 var $23=HEAP32[(($__cap__i_i321)>>2)];
 var $and_i11_i322=$23&-2;
 var $phitmp13=((($and_i11_i322)-(1))|0);
 var $cond_i325=$phitmp13;label=27;break;
 case 27: 
 var $cond_i325;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$cond_i325,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=28;break; } else { label=31;break; }
 case 28: 
 var $24=HEAP8[($__size__i_i)];
 var $and_i_i_i356=$24&1;
 var $tobool_i_i_i357=(($and_i_i_i356<<24)>>24)==0;
 if($tobool_i_i_i357){var $cond_i_i375=$arrayidx_i_i_i373_pre_phi;label=30;break;}else{label=29;break;}
 case 29: 
 var $25=HEAP32[(($__data__i21_i_i364_pre_phi)>>2)];
 var $cond_i_i375=$25;label=30;break;
 case 30: 
 var $cond_i_i375;
 var $add_ptr=(($cond_i_i375+$cond_i20321)|0);
 HEAP32[(($__a_end)>>2)]=$add_ptr;
 var $__a_1=$cond_i_i375;label=34;break;
 case 31: 
 var $lpad_loopexit14$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_loopexit14$1 = tempRet0;
 var $lpad_phi$1=$lpad_loopexit14$1;var $lpad_phi$0=$lpad_loopexit14$0;label=33;break;
 case 32: 
 var $lpad_nonloopexit15$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_nonloopexit15$1 = tempRet0;
 var $lpad_phi$1=$lpad_nonloopexit15$1;var $lpad_phi$0=$lpad_nonloopexit15$0;label=33;break;
 case 33: 
 var $lpad_phi$0;
 var $lpad_phi$1;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 ___resumeException($lpad_phi$0)
 case 34: 
 var $__a_1;
 var $__ninp__i_i385=(($10+12)|0);
 var $26=HEAP32[(($__ninp__i_i385)>>2)];
 var $__einp__i_i386=(($10+16)|0);
 var $27=HEAP32[(($__einp__i_i386)>>2)];
 var $cmp_i_i387=($26|0)==($27|0);
 if($cmp_i_i387){label=35;break;}else{label=36;break;}
 case 35: 
 var $28=$10;
 var $vtable_i_i388=HEAP32[(($28)>>2)];
 var $vfn_i_i389=(($vtable_i_i388+36)|0);
 var $29=HEAP32[(($vfn_i_i389)>>2)];
 var $call_i_i394=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$29]($10) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i379_0=$call_i_i394;label=37;break; } else { label=31;break; }
 case 36: 
 var $30=HEAP32[(($26)>>2)];
 var $retval_i_i379_0=$30;label=37;break;
 case 37: 
 var $retval_i_i379_0;
 var $call20=__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($retval_i_i379_0,$__in_units,$__exp,$__a_1,$__a_end,$2,$3,$__grouping,$arraydecay4,$__g_end,$__dc,$arraydecay);
 var $tobool=($call20|0)==0;
 if($tobool){label=38;break;}else{var $__a_2=$__a_1;var $35=$17;var $cmp_i30_i_i13819=$cmp_i30_i_i13820;label=41;break;}
 case 38: 
 var $31=HEAP32[(($__ninp__i_i385)>>2)];
 var $32=HEAP32[(($__einp__i_i386)>>2)];
 var $cmp_i_i291=($31|0)==($32|0);
 if($cmp_i_i291){label=39;break;}else{label=40;break;}
 case 39: 
 var $33=$10;
 var $vtable_i_i=HEAP32[(($33)>>2)];
 var $vfn_i_i=(($vtable_i_i+40)|0);
 var $34=HEAP32[(($vfn_i_i)>>2)];
 var $call_i_i292=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$34]($10) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $__a_0=$__a_1;var $4=$10;label=6;break; } else { label=31;break; }
 case 40: 
 var $incdec_ptr_i_i=(($31+4)|0);
 HEAP32[(($__ninp__i_i385)>>2)]=$incdec_ptr_i_i;
 var $__a_0=$__a_1;var $4=$10;label=6;break;
 case 41: 
 var $cmp_i30_i_i13819;
 var $35;
 var $__a_2;
 var $__size__i_i263=$__grouping;
 var $36=HEAP8[($__size__i_i263)];
 var $conv_i_i264=($36&255);
 var $and_i_i265=$conv_i_i264&1;
 var $tobool_i_i266=($and_i_i265|0)==0;
 if($tobool_i_i266){label=43;break;}else{label=42;break;}
 case 42: 
 var $__size__i23_i273=(($__grouping+4)|0);
 var $37=HEAP32[(($__size__i23_i273)>>2)];
 var $cond_i285=$37;label=44;break;
 case 43: 
 var $shr_i_i2839=$conv_i_i264>>>1;
 var $cond_i285=$shr_i_i2839;label=44;break;
 case 44: 
 var $cond_i285;
 var $cmp26=($cond_i285|0)==0;
 if($cmp26){label=48;break;}else{label=45;break;}
 case 45: 
 var $38=HEAP8[($__in_units)];
 var $39=$38&1;
 var $tobool27=(($39<<24)>>24)==0;
 if($tobool27){label=48;break;}else{label=46;break;}
 case 46: 
 var $40=HEAP32[(($__g_end)>>2)];
 var $sub_ptr_lhs_cast30=$40;
 var $sub_ptr_rhs_cast31=$__g;
 var $sub_ptr_sub32=((($sub_ptr_lhs_cast30)-($sub_ptr_rhs_cast31))|0);
 var $cmp33=($sub_ptr_sub32|0)<160;
 if($cmp33){label=47;break;}else{label=48;break;}
 case 47: 
 var $41=HEAP32[(($__dc)>>2)];
 var $incdec_ptr=(($40+4)|0);
 HEAP32[(($__g_end)>>2)]=$incdec_ptr;
 HEAP32[(($40)>>2)]=$41;
 label=48;break;
 case 48: 
 var $42=HEAP32[(($__a_end)>>2)];
 var $call37=(function() { try { __THREW__ = 0; return __ZNSt3__115__num_get_floatIeEET_PKcS3_Rj($__a_2,$42,$__err) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=49;break; } else { label=32;break; }
 case 49: 
 HEAPF64[(($__v)>>3)]=$call37;
 var $43=HEAP32[(($__g_end)>>2)];
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$arraydecay4,$43,$__err);
 if($cmp_i_i_i116){var $49=0;label=55;break;}else{label=50;break;}
 case 50: 
 var $__ninp__i_i_i_i=(($10+12)|0);
 var $44=HEAP32[(($__ninp__i_i_i_i)>>2)];
 var $__einp__i_i_i_i=(($10+16)|0);
 var $45=HEAP32[(($__einp__i_i_i_i)>>2)];
 var $cmp_i_i_i_i=($44|0)==($45|0);
 if($cmp_i_i_i_i){label=51;break;}else{label=52;break;}
 case 51: 
 var $46=$10;
 var $vtable_i_i_i_i=HEAP32[(($46)>>2)];
 var $vfn_i_i_i_i=(($vtable_i_i_i_i+36)|0);
 var $47=HEAP32[(($vfn_i_i_i_i)>>2)];
 var $call_i_i_i_i52=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$47]($10) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i_i_i_0=$call_i_i_i_i52;label=53;break; } else { label=32;break; }
 case 52: 
 var $48=HEAP32[(($44)>>2)];
 var $retval_i_i_i_i_0=$48;label=53;break;
 case 53: 
 var $retval_i_i_i_i_0;
 var $cmp_i7_i_i_i=($retval_i_i_i_i_0|0)==-1;
 if($cmp_i7_i_i_i){label=54;break;}else{var $49=$10;label=55;break;}
 case 54: 
 HEAP32[(($__sbuf__i_i_i98)>>2)]=0;
 var $49=0;label=55;break;
 case 55: 
 var $49;
 var $cmp_i_i_i51=($49|0)==0;
 if($cmp_i30_i_i13819){label=61;break;}else{label=56;break;}
 case 56: 
 var $__ninp__i_i15_i_i=(($35+12)|0);
 var $50=HEAP32[(($__ninp__i_i15_i_i)>>2)];
 var $__einp__i_i16_i_i=(($35+16)|0);
 var $51=HEAP32[(($__einp__i_i16_i_i)>>2)];
 var $cmp_i_i17_i_i=($50|0)==($51|0);
 if($cmp_i_i17_i_i){label=57;break;}else{label=58;break;}
 case 57: 
 var $52=$35;
 var $vtable_i_i19_i_i=HEAP32[(($52)>>2)];
 var $vfn_i_i20_i_i=(($vtable_i_i19_i_i+36)|0);
 var $53=HEAP32[(($vfn_i_i20_i_i)>>2)];
 var $call_i_i21_i_i53=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$53]($35) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i7_i_i_0=$call_i_i21_i_i53;label=59;break; } else { label=32;break; }
 case 58: 
 var $54=HEAP32[(($50)>>2)];
 var $retval_i_i7_i_i_0=$54;label=59;break;
 case 59: 
 var $retval_i_i7_i_i_0;
 var $cmp_i7_i25_i_i=($retval_i_i7_i_i_0|0)==-1;
 if($cmp_i7_i25_i_i){label=60;break;}else{label=62;break;}
 case 60: 
 HEAP32[(($__sbuf__i11_i_i119)>>2)]=0;
 label=61;break;
 case 61: 
 if($cmp_i_i_i51){label=63;break;}else{label=64;break;}
 case 62: 
 var $cmp_i30_i_i=($35|0)==0;
 var $cmp_i_itmp=$cmp_i_i_i51^$cmp_i30_i_i;
 if($cmp_i_itmp){label=64;break;}else{label=63;break;}
 case 63: 
 var $55=HEAP32[(($__err)>>2)];
 var $or=$55|2;
 HEAP32[(($__err)>>2)]=$or;
 label=64;break;
 case 64: 
 var $56=(($agg_result)|0);
 HEAP32[(($56)>>2)]=$49;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 STACKTOP=sp;return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv($agg_result,$this,$__b,$__e,$__iob,$__err,$__v){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+136)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__p_i_i_i=sp;
 var $__atoms=(sp)+(16);
 var $__grouping=(sp)+(120);
 var $__grouping27=$__grouping;
 var $ref_tmp=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__buf=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__a_end=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__g=STACKTOP;STACKTOP = (STACKTOP + 160)|0;(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__g_end=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__dc=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 HEAP32[(($__grouping27)>>2)]=0; HEAP32[((($__grouping27)+(4))>>2)]=0; HEAP32[((($__grouping27)+(8))>>2)]=0;
 var $__size__i_i=$__buf;
 (function() { try { __THREW__ = 0; return __ZNKSt3__18ios_base6getlocEv($ref_tmp,$__iob) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=39;break; }
 case 2: 
 var $__locale__i=(($ref_tmp)|0);
 var $0=HEAP32[(($__locale__i)>>2)];
 var $1=$__p_i_i_i;
 var $2=HEAP32[((15376)>>2)];
 var $cmp_i_i_i15=($2|0)==-1;
 if($cmp_i_i_i15){label=4;break;}else{label=3;break;}
 case 3: 
 var $ref_tmp_i_sroa_0_0__idx_i_i=(($__p_i_i_i)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i)>>2)]=15376;
 var $ref_tmp_i_sroa_1_4__idx6_i_i=(($__p_i_i_i+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i=(($__p_i_i_i+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(15376,$1,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=4;break; } else { label=40;break; }
 case 4: 
 var $3=HEAP32[((15380)>>2)];
 var $sub_i_i=((($3)-(1))|0);
 var $__end__i_i_i_i=(($0+12)|0);
 var $4=HEAP32[(($__end__i_i_i_i)>>2)];
 var $__begin__i_i_i_i=(($0+8)|0);
 var $5=HEAP32[(($__begin__i_i_i_i)>>2)];
 var $sub_ptr_lhs_cast_i_i_i_i=$4;
 var $sub_ptr_rhs_cast_i_i_i_i=$5;
 var $sub_ptr_sub_i_i_i_i=((($sub_ptr_lhs_cast_i_i_i_i)-($sub_ptr_rhs_cast_i_i_i_i))|0);
 var $sub_ptr_div_i_i_i_i=$sub_ptr_sub_i_i_i_i>>2;
 var $cmp_i_i1_i=($sub_ptr_div_i_i_i_i>>>0)>($sub_i_i>>>0);
 if($cmp_i_i1_i){label=5;break;}else{label=6;break;}
 case 5: 
 var $arrayidx_i_i_i_i=(($5+($sub_i_i<<2))|0);
 var $6=HEAP32[(($arrayidx_i_i_i_i)>>2)];
 var $tobool_i_i_i17=($6|0)==0;
 if($tobool_i_i_i17){label=6;break;}else{label=8;break;}
 case 6: 
 var $exception_i_i=___cxa_allocate_exception(4);
 var $7=$exception_i_i;
 __ZNSt8bad_castC2Ev($7);
 (function() { try { __THREW__ = 0; return ___cxa_throw($exception_i_i,10264,(376)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=7;break; } else { label=40;break; }
 case 7: 
 throw "Reached an unreachable!";
 case 8: 
 var $8=$6;
 var $arraydecay=(($__atoms)|0);
 var $9=$6;
 var $vtable_i=HEAP32[(($9)>>2)];
 var $vfn_i=(($vtable_i+48)|0);
 var $10=HEAP32[(($vfn_i)>>2)];
 var $call_i56=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$10]($8,11872,11898,$arraydecay) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=9;break; } else { label=40;break; }
 case 9: 
 var $11=HEAP32[(($__locale__i)>>2)];
 var $12=(($11)|0);
 var $call_i=__ZNSt3__114__shared_count16__release_sharedEv($12);
 HEAP32[(($__size__i_i)>>2)]=0; HEAP32[((($__size__i_i)+(4))>>2)]=0; HEAP32[((($__size__i_i)+(8))>>2)]=0;
 var $__s_i_i=$__buf;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,10,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=10;break; } else { label=42;break; }
 case 10: 
 var $13=HEAP8[($__size__i_i)];
 var $and_i_i_i=$13&1;
 var $tobool_i_i_i113=(($and_i_i_i<<24)>>24)==0;
 if($tobool_i_i_i113){label=12;break;}else{label=11;break;}
 case 11: 
 var $__data__i21_i_i=(($__buf+8)|0);
 var $14=HEAP32[(($__data__i21_i_i)>>2)];
 var $arrayidx_i_i_i384_pre=(($__s_i_i+1)|0);
 var $cond_i_i=$14;var $arrayidx_i_i_i384_pre_phi=$arrayidx_i_i_i384_pre;var $__data__i21_i_i375_pre_phi=$__data__i21_i_i;label=13;break;
 case 12: 
 var $arrayidx_i_i_i114=(($__s_i_i+1)|0);
 var $__data__i21_i_i375_pre=(($__buf+8)|0);
 var $cond_i_i=$arrayidx_i_i_i114;var $arrayidx_i_i_i384_pre_phi=$arrayidx_i_i_i114;var $__data__i21_i_i375_pre_phi=$__data__i21_i_i375_pre;label=13;break;
 case 13: 
 var $__data__i21_i_i375_pre_phi;
 var $arrayidx_i_i_i384_pre_phi;
 var $cond_i_i;
 HEAP32[(($__a_end)>>2)]=$cond_i_i;
 var $arraydecay11=(($__g)|0);
 HEAP32[(($__g_end)>>2)]=$arraydecay11;
 HEAP32[(($__dc)>>2)]=0;
 var $__sbuf__i_i_i133=(($__b)|0);
 var $__sbuf__i11_i_i154=(($__e)|0);
 var $__cap__i_i315=(($__buf)|0);
 var $__size__i23_i273=(($__buf+4)|0);
 var $_pre=HEAP32[(($__sbuf__i_i_i133)>>2)];
 var $__a_0=$cond_i_i;var $15=$_pre;label=14;break;
 case 14: 
 var $15;
 var $__a_0;
 var $tobool_i_i_i134=($15|0)==0;
 if($tobool_i_i_i134){var $21=0;label=20;break;}else{label=15;break;}
 case 15: 
 var $__ninp__i_i_i_i137=(($15+12)|0);
 var $16=HEAP32[(($__ninp__i_i_i_i137)>>2)];
 var $__einp__i_i_i_i138=(($15+16)|0);
 var $17=HEAP32[(($__einp__i_i_i_i138)>>2)];
 var $cmp_i_i_i_i139=($16|0)==($17|0);
 if($cmp_i_i_i_i139){label=16;break;}else{label=17;break;}
 case 16: 
 var $18=$15;
 var $vtable_i_i_i_i141=HEAP32[(($18)>>2)];
 var $vfn_i_i_i_i142=(($vtable_i_i_i_i141+36)|0);
 var $19=HEAP32[(($vfn_i_i_i_i142)>>2)];
 var $call_i_i_i_i177=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$19]($15) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i_i_i124_0=$call_i_i_i_i177;label=18;break; } else { label=41;break; }
 case 17: 
 var $20=HEAP32[(($16)>>2)];
 var $retval_i_i_i_i124_0=$20;label=18;break;
 case 18: 
 var $retval_i_i_i_i124_0;
 var $cmp_i7_i_i_i146=($retval_i_i_i_i124_0|0)==-1;
 if($cmp_i7_i_i_i146){label=19;break;}else{var $21=$15;label=20;break;}
 case 19: 
 HEAP32[(($__sbuf__i_i_i133)>>2)]=0;
 var $21=0;label=20;break;
 case 20: 
 var $21;
 var $cmp_i_i_i151=($21|0)==0;
 var $22=HEAP32[(($__sbuf__i11_i_i154)>>2)];
 var $tobool_i12_i_i155=($22|0)==0;
 if($tobool_i12_i_i155){label=26;break;}else{label=21;break;}
 case 21: 
 var $__ninp__i_i15_i_i159=(($22+12)|0);
 var $23=HEAP32[(($__ninp__i_i15_i_i159)>>2)];
 var $__einp__i_i16_i_i160=(($22+16)|0);
 var $24=HEAP32[(($__einp__i_i16_i_i160)>>2)];
 var $cmp_i_i17_i_i161=($23|0)==($24|0);
 if($cmp_i_i17_i_i161){label=22;break;}else{label=23;break;}
 case 22: 
 var $25=$22;
 var $vtable_i_i19_i_i163=HEAP32[(($25)>>2)];
 var $vfn_i_i20_i_i164=(($vtable_i_i19_i_i163+36)|0);
 var $26=HEAP32[(($vfn_i_i20_i_i164)>>2)];
 var $call_i_i21_i_i179=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$26]($22) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i7_i_i118_0=$call_i_i21_i_i179;label=24;break; } else { label=41;break; }
 case 23: 
 var $27=HEAP32[(($23)>>2)];
 var $retval_i_i7_i_i118_0=$27;label=24;break;
 case 24: 
 var $retval_i_i7_i_i118_0;
 var $cmp_i7_i25_i_i168=($retval_i_i7_i_i118_0|0)==-1;
 if($cmp_i7_i25_i_i168){label=25;break;}else{label=27;break;}
 case 25: 
 HEAP32[(($__sbuf__i11_i_i154)>>2)]=0;
 label=26;break;
 case 26: 
 if($cmp_i_i_i151){var $__a_2=$__a_0;label=51;break;}else{label=28;break;}
 case 27: 
 var $cmp_i30_i_i173=($22|0)==0;
 var $lnot_i=$cmp_i_i_i151^$cmp_i30_i_i173;
 if($lnot_i){label=28;break;}else{var $__a_2=$__a_0;label=51;break;}
 case 28: 
 var $28=HEAP32[(($__a_end)>>2)];
 var $sub_ptr_lhs_cast=$28;
 var $sub_ptr_rhs_cast=$__a_0;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $29=HEAP8[($__size__i_i)];
 var $conv_i_i192=($29&255);
 var $and_i_i193=$conv_i_i192&1;
 var $tobool_i_i194=($and_i_i193|0)==0;
 var $30=HEAP32[(($__size__i23_i273)>>2)];
 var $shr_i_i11=$conv_i_i192>>>1;
 var $cond_i198=($tobool_i_i194?$shr_i_i11:$30);
 var $cmp=($sub_ptr_sub|0)==($cond_i198|0);
 if($cmp){label=29;break;}else{var $__a_1=$__a_0;label=44;break;}
 case 29: 
 if($tobool_i_i194){label=31;break;}else{label=30;break;}
 case 30: 
 var $31=HEAP32[(($__size__i23_i273)>>2)];
 var $cond_i285=$31;var $cond_i23829=$31;label=32;break;
 case 31: 
 var $shr_i_i23612=$conv_i_i192>>>1;
 var $shr_i_i28313=$conv_i_i192>>>1;
 var $cond_i285=$shr_i_i28313;var $cond_i23829=$shr_i_i23612;label=32;break;
 case 32: 
 var $cond_i23829;
 var $cond_i285;
 var $mul=$cond_i285<<1;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$mul,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=33;break; } else { label=41;break; }
 case 33: 
 var $32=HEAP8[($__size__i_i)];
 var $and_i_i307=$32&1;
 var $tobool_i_i308=(($and_i_i307<<24)>>24)==0;
 if($tobool_i_i308){var $cond_i319=10;label=35;break;}else{label=34;break;}
 case 34: 
 var $33=HEAP32[(($__cap__i_i315)>>2)];
 var $and_i11_i316=$33&-2;
 var $phitmp14=((($and_i11_i316)-(1))|0);
 var $cond_i319=$phitmp14;label=35;break;
 case 35: 
 var $cond_i319;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$cond_i319,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=36;break; } else { label=41;break; }
 case 36: 
 var $34=HEAP8[($__size__i_i)];
 var $and_i_i_i367=$34&1;
 var $tobool_i_i_i368=(($and_i_i_i367<<24)>>24)==0;
 if($tobool_i_i_i368){var $cond_i_i386=$arrayidx_i_i_i384_pre_phi;label=38;break;}else{label=37;break;}
 case 37: 
 var $35=HEAP32[(($__data__i21_i_i375_pre_phi)>>2)];
 var $cond_i_i386=$35;label=38;break;
 case 38: 
 var $cond_i_i386;
 var $add_ptr=(($cond_i_i386+$cond_i23829)|0);
 HEAP32[(($__a_end)>>2)]=$add_ptr;
 var $__a_1=$cond_i_i386;label=44;break;
 case 39: 
 var $36$0 = ___cxa_find_matching_catch(-1, -1); var $36$1 = tempRet0;
 var $37=$36$0;
 var $38=$36$1;
 var $ehselector_slot_0=$38;var $exn_slot_0=$37;label=75;break;
 case 40: 
 var $39$0 = ___cxa_find_matching_catch(-1, -1); var $39$1 = tempRet0;
 var $40=$39$0;
 var $41=$39$1;
 var $42=HEAP32[(($__locale__i)>>2)];
 var $43=(($42)|0);
 var $call_i22=__ZNSt3__114__shared_count16__release_sharedEv($43);
 var $ehselector_slot_0=$41;var $exn_slot_0=$40;label=75;break;
 case 41: 
 var $lpad_loopexit$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_loopexit$1 = tempRet0;
 var $eh_lpad_body$1=$lpad_loopexit$1;var $eh_lpad_body$0=$lpad_loopexit$0;label=43;break;
 case 42: 
 var $lpad_nonloopexit$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_nonloopexit$1 = tempRet0;
 var $eh_lpad_body$1=$lpad_nonloopexit$1;var $eh_lpad_body$0=$lpad_nonloopexit$0;label=43;break;
 case 43: 
 var $eh_lpad_body$0;
 var $eh_lpad_body$1;
 var $44=$eh_lpad_body$0;
 var $45=$eh_lpad_body$1;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 var $ehselector_slot_0=$45;var $exn_slot_0=$44;label=75;break;
 case 44: 
 var $__a_1;
 var $__ninp__i_i329=(($21+12)|0);
 var $46=HEAP32[(($__ninp__i_i329)>>2)];
 var $__einp__i_i330=(($21+16)|0);
 var $47=HEAP32[(($__einp__i_i330)>>2)];
 var $cmp_i_i331=($46|0)==($47|0);
 if($cmp_i_i331){label=45;break;}else{label=46;break;}
 case 45: 
 var $48=$21;
 var $vtable_i_i332=HEAP32[(($48)>>2)];
 var $vfn_i_i333=(($vtable_i_i332+36)|0);
 var $49=HEAP32[(($vfn_i_i333)>>2)];
 var $call_i_i338=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$49]($21) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i323_0=$call_i_i338;label=47;break; } else { label=41;break; }
 case 46: 
 var $50=HEAP32[(($46)>>2)];
 var $retval_i_i323_0=$50;label=47;break;
 case 47: 
 var $retval_i_i323_0;
 var $call27=__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($retval_i_i323_0,16,$__a_1,$__a_end,$__dc,0,$__grouping,$arraydecay11,$__g_end,$arraydecay);
 var $tobool=($call27|0)==0;
 if($tobool){label=48;break;}else{var $__a_2=$__a_1;label=51;break;}
 case 48: 
 var $51=HEAP32[(($__ninp__i_i329)>>2)];
 var $52=HEAP32[(($__einp__i_i330)>>2)];
 var $cmp_i_i244=($51|0)==($52|0);
 if($cmp_i_i244){label=49;break;}else{label=50;break;}
 case 49: 
 var $53=$21;
 var $vtable_i_i=HEAP32[(($53)>>2)];
 var $vfn_i_i=(($vtable_i_i+40)|0);
 var $54=HEAP32[(($vfn_i_i)>>2)];
 var $call_i_i245=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$54]($21) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $__a_0=$__a_1;var $15=$21;label=14;break; } else { label=41;break; }
 case 50: 
 var $incdec_ptr_i_i=(($51+4)|0);
 HEAP32[(($__ninp__i_i329)>>2)]=$incdec_ptr_i_i;
 var $__a_0=$__a_1;var $15=$21;label=14;break;
 case 51: 
 var $__a_2;
 var $arrayidx=(($__a_2+3)|0);
 HEAP8[($arrayidx)]=0;
 var $55=HEAP8[(15944)];
 var $guard_uninitialized_i=(($55<<24)>>24)==0;
 if($guard_uninitialized_i){label=52;break;}else{label=56;break;}
 case 52: 
 var $56=___cxa_guard_acquire(15944);
 var $tobool_i=($56|0)==0;
 if($tobool_i){label=56;break;}else{label=53;break;}
 case 53: 
 var $call_i23=(function() { try { __THREW__ = 0; return _newlocale(2147483647,2960,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=54;break; } else { label=55;break; }
 case 54: 
 HEAP32[((13952)>>2)]=$call_i23;
 label=56;break;
 case 55: 
 var $57$0 = ___cxa_find_matching_catch(-1, -1); var $57$1 = tempRet0;
 var $eh_lpad_body$1=$57$1;var $eh_lpad_body$0=$57$0;label=43;break;
 case 56: 
 var $58=HEAP32[((13952)>>2)];
 var $call35=(function() { try { __THREW__ = 0; return __ZNSt3__110__sscanf_lEPKcP15__locale_structS1_z($__a_2,$58,2104,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$__v,tempVarArgs)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })(); STACKTOP=tempVarArgs;if (!__THREW__) { label=57;break; } else { label=42;break; }
 case 57: 
 var $cmp36=($call35|0)==1;
 if($cmp36){label=59;break;}else{label=58;break;}
 case 58: 
 HEAP32[(($__err)>>2)]=4;
 label=59;break;
 case 59: 
 var $59=HEAP32[(($__sbuf__i_i_i133)>>2)];
 var $tobool_i_i_i=($59|0)==0;
 if($tobool_i_i_i){var $65=0;label=65;break;}else{label=60;break;}
 case 60: 
 var $__ninp__i_i_i_i=(($59+12)|0);
 var $60=HEAP32[(($__ninp__i_i_i_i)>>2)];
 var $__einp__i_i_i_i=(($59+16)|0);
 var $61=HEAP32[(($__einp__i_i_i_i)>>2)];
 var $cmp_i_i_i_i=($60|0)==($61|0);
 if($cmp_i_i_i_i){label=61;break;}else{label=62;break;}
 case 61: 
 var $62=$59;
 var $vtable_i_i_i_i=HEAP32[(($62)>>2)];
 var $vfn_i_i_i_i=(($vtable_i_i_i_i+36)|0);
 var $63=HEAP32[(($vfn_i_i_i_i)>>2)];
 var $call_i_i_i_i51=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$63]($59) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i_i_i_0=$call_i_i_i_i51;label=63;break; } else { label=42;break; }
 case 62: 
 var $64=HEAP32[(($60)>>2)];
 var $retval_i_i_i_i_0=$64;label=63;break;
 case 63: 
 var $retval_i_i_i_i_0;
 var $cmp_i7_i_i_i=($retval_i_i_i_i_0|0)==-1;
 if($cmp_i7_i_i_i){label=64;break;}else{var $65=$59;label=65;break;}
 case 64: 
 HEAP32[(($__sbuf__i_i_i133)>>2)]=0;
 var $65=0;label=65;break;
 case 65: 
 var $65;
 var $cmp_i_i_i50=($65|0)==0;
 var $66=HEAP32[(($__sbuf__i11_i_i154)>>2)];
 var $tobool_i12_i_i=($66|0)==0;
 if($tobool_i12_i_i){label=71;break;}else{label=66;break;}
 case 66: 
 var $__ninp__i_i15_i_i=(($66+12)|0);
 var $67=HEAP32[(($__ninp__i_i15_i_i)>>2)];
 var $__einp__i_i16_i_i=(($66+16)|0);
 var $68=HEAP32[(($__einp__i_i16_i_i)>>2)];
 var $cmp_i_i17_i_i=($67|0)==($68|0);
 if($cmp_i_i17_i_i){label=67;break;}else{label=68;break;}
 case 67: 
 var $69=$66;
 var $vtable_i_i19_i_i=HEAP32[(($69)>>2)];
 var $vfn_i_i20_i_i=(($vtable_i_i19_i_i+36)|0);
 var $70=HEAP32[(($vfn_i_i20_i_i)>>2)];
 var $call_i_i21_i_i52=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$70]($66) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i7_i_i_0=$call_i_i21_i_i52;label=69;break; } else { label=42;break; }
 case 68: 
 var $71=HEAP32[(($67)>>2)];
 var $retval_i_i7_i_i_0=$71;label=69;break;
 case 69: 
 var $retval_i_i7_i_i_0;
 var $cmp_i7_i25_i_i=($retval_i_i7_i_i_0|0)==-1;
 if($cmp_i7_i25_i_i){label=70;break;}else{label=72;break;}
 case 70: 
 HEAP32[(($__sbuf__i11_i_i154)>>2)]=0;
 label=71;break;
 case 71: 
 if($cmp_i_i_i50){label=73;break;}else{label=74;break;}
 case 72: 
 var $cmp_i30_i_i=($66|0)==0;
 var $cmp_i_itmp=$cmp_i_i_i50^$cmp_i30_i_i;
 if($cmp_i_itmp){label=74;break;}else{label=73;break;}
 case 73: 
 var $72=HEAP32[(($__err)>>2)];
 var $or=$72|2;
 HEAP32[(($__err)>>2)]=$or;
 label=74;break;
 case 74: 
 var $73=(($agg_result)|0);
 HEAP32[(($73)>>2)]=$65;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 STACKTOP=sp;return;
 case 75: 
 var $exn_slot_0;
 var $ehselector_slot_0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 var $lpad_val$0=$exn_slot_0;
 var $lpad_val$1=0;
 var $lpad_val43$0=$lpad_val$0;
 var $lpad_val43$1=$ehselector_slot_0;
 ___resumeException($lpad_val43$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($__ct,$__base,$__a,$__a_end,$__dc,$__thousands_sep,$__grouping,$__g,$__g_end,$__atoms){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $0=HEAP32[(($__a_end)>>2)];
 var $cmp=($0|0)==($__a|0);
 if($cmp){label=2;break;}else{label=5;break;}
 case 2: 
 var $arrayidx=(($__atoms+96)|0);
 var $1=HEAP32[(($arrayidx)>>2)];
 var $cmp1=($1|0)==($__ct|0);
 if($cmp1){label=4;break;}else{label=3;break;}
 case 3: 
 var $arrayidx2=(($__atoms+100)|0);
 var $2=HEAP32[(($arrayidx2)>>2)];
 var $cmp3=($2|0)==($__ct|0);
 if($cmp3){label=4;break;}else{label=5;break;}
 case 4: 
 var $cond=($cmp1?43:45);
 var $incdec_ptr=(($__a+1)|0);
 HEAP32[(($__a_end)>>2)]=$incdec_ptr;
 HEAP8[($__a)]=$cond;
 HEAP32[(($__dc)>>2)]=0;
 var $retval_0=0;label=23;break;
 case 5: 
 var $__size__i_i=$__grouping;
 var $3=HEAP8[($__size__i_i)];
 var $conv_i_i=($3&255);
 var $and_i_i=$conv_i_i&1;
 var $tobool_i_i=($and_i_i|0)==0;
 if($tobool_i_i){label=7;break;}else{label=6;break;}
 case 6: 
 var $__size__i23_i=(($__grouping+4)|0);
 var $4=HEAP32[(($__size__i23_i)>>2)];
 var $cond_i=$4;label=8;break;
 case 7: 
 var $shr_i_i31=$conv_i_i>>>1;
 var $cond_i=$shr_i_i31;label=8;break;
 case 8: 
 var $cond_i;
 var $cmp6=($cond_i|0)!=0;
 var $cmp8=($__ct|0)==($__thousands_sep|0);
 var $or_cond=$cmp6&$cmp8;
 if($or_cond){label=9;break;}else{label=11;break;}
 case 9: 
 var $5=HEAP32[(($__g_end)>>2)];
 var $sub_ptr_lhs_cast=$5;
 var $sub_ptr_rhs_cast=$__g;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $cmp10=($sub_ptr_sub|0)<160;
 if($cmp10){label=10;break;}else{var $retval_0=0;label=23;break;}
 case 10: 
 var $6=HEAP32[(($__dc)>>2)];
 var $incdec_ptr12=(($5+4)|0);
 HEAP32[(($__g_end)>>2)]=$incdec_ptr12;
 HEAP32[(($5)>>2)]=$6;
 HEAP32[(($__dc)>>2)]=0;
 var $retval_0=0;label=23;break;
 case 11: 
 var $add_ptr=(($__atoms+104)|0);
 var $__first_addr_i_0=$__atoms;label=12;break;
 case 12: 
 var $__first_addr_i_0;
 var $cmp_i=($__first_addr_i_0|0)==($add_ptr|0);
 if($cmp_i){var $__first_addr_i_0_lcssa=$add_ptr;label=14;break;}else{label=13;break;}
 case 13: 
 var $7=HEAP32[(($__first_addr_i_0)>>2)];
 var $cmp1_i=($7|0)==($__ct|0);
 var $incdec_ptr_i=(($__first_addr_i_0+4)|0);
 if($cmp1_i){var $__first_addr_i_0_lcssa=$__first_addr_i_0;label=14;break;}else{var $__first_addr_i_0=$incdec_ptr_i;label=12;break;}
 case 14: 
 var $__first_addr_i_0_lcssa;
 var $sub_ptr_lhs_cast16=$__first_addr_i_0_lcssa;
 var $sub_ptr_rhs_cast17=$__atoms;
 var $sub_ptr_sub18=((($sub_ptr_lhs_cast16)-($sub_ptr_rhs_cast17))|0);
 var $sub_ptr_div19=$sub_ptr_sub18>>2;
 var $cmp20=($sub_ptr_sub18|0)>92;
 if($cmp20){var $retval_0=-1;label=23;break;}else{label=15;break;}
 case 15: 
 if(($__base|0)==8|($__base|0)==10){ label=16;break;}else if(($__base|0)==16){ label=17;break;}else{label=22;break;}
 case 16: 
 var $cmp23=($sub_ptr_div19|0)<($__base|0);
 if($cmp23){label=22;break;}else{var $retval_0=-1;label=23;break;}
 case 17: 
 var $cmp27=($sub_ptr_sub18|0)<88;
 if($cmp27){label=22;break;}else{label=18;break;}
 case 18: 
 if($cmp){var $retval_0=-1;label=23;break;}else{label=19;break;}
 case 19: 
 var $sub_ptr_lhs_cast32=$0;
 var $sub_ptr_rhs_cast33=$__a;
 var $sub_ptr_sub34=((($sub_ptr_lhs_cast32)-($sub_ptr_rhs_cast33))|0);
 var $cmp35=($sub_ptr_sub34|0)<3;
 if($cmp35){label=20;break;}else{var $retval_0=-1;label=23;break;}
 case 20: 
 var $arrayidx37=((($0)-(1))|0);
 var $8=HEAP8[($arrayidx37)];
 var $cmp38=(($8<<24)>>24)==48;
 if($cmp38){label=21;break;}else{var $retval_0=-1;label=23;break;}
 case 21: 
 HEAP32[(($__dc)>>2)]=0;
 var $arrayidx40=((11872+$sub_ptr_div19)|0);
 var $9=HEAP8[($arrayidx40)];
 var $10=HEAP32[(($__a_end)>>2)];
 var $incdec_ptr41=(($10+1)|0);
 HEAP32[(($__a_end)>>2)]=$incdec_ptr41;
 HEAP8[($10)]=$9;
 var $retval_0=0;label=23;break;
 case 22: 
 var $arrayidx43=((11872+$sub_ptr_div19)|0);
 var $11=HEAP8[($arrayidx43)];
 var $incdec_ptr44=(($0+1)|0);
 HEAP32[(($__a_end)>>2)]=$incdec_ptr44;
 HEAP8[($0)]=$11;
 var $12=HEAP32[(($__dc)>>2)];
 var $inc=((($12)+(1))|0);
 HEAP32[(($__dc)>>2)]=$inc;
 var $retval_0=0;label=23;break;
 case 23: 
 var $retval_0;
 return $retval_0;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($agg_result,$__iob,$__atoms,$__thousands_sep){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+40)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__p_i_i_i3=sp;
 var $__p_i_i_i=(sp)+(16);
 var $__loc=(sp)+(32);
 __ZNKSt3__18ios_base6getlocEv($__loc,$__iob);
 var $__locale__i=(($__loc)|0);
 var $0=HEAP32[(($__locale__i)>>2)];
 var $1=$__p_i_i_i;
 var $2=HEAP32[((15384)>>2)];
 var $cmp_i_i_i=($2|0)==-1;
 if($cmp_i_i_i){label=3;break;}else{label=2;break;}
 case 2: 
 var $ref_tmp_i_sroa_0_0__idx_i_i=(($__p_i_i_i)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i)>>2)]=15384;
 var $ref_tmp_i_sroa_1_4__idx6_i_i=(($__p_i_i_i+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i=(($__p_i_i_i+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(15384,$1,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=3;break; } else { label=17;break; }
 case 3: 
 var $3=HEAP32[((15388)>>2)];
 var $sub_i_i=((($3)-(1))|0);
 var $__end__i_i_i_i=(($0+12)|0);
 var $4=HEAP32[(($__end__i_i_i_i)>>2)];
 var $__begin__i_i_i_i=(($0+8)|0);
 var $5=HEAP32[(($__begin__i_i_i_i)>>2)];
 var $sub_ptr_lhs_cast_i_i_i_i=$4;
 var $sub_ptr_rhs_cast_i_i_i_i=$5;
 var $sub_ptr_sub_i_i_i_i=((($sub_ptr_lhs_cast_i_i_i_i)-($sub_ptr_rhs_cast_i_i_i_i))|0);
 var $sub_ptr_div_i_i_i_i=$sub_ptr_sub_i_i_i_i>>2;
 var $cmp_i_i1_i=($sub_ptr_div_i_i_i_i>>>0)>($sub_i_i>>>0);
 if($cmp_i_i1_i){label=4;break;}else{label=5;break;}
 case 4: 
 var $arrayidx_i_i_i_i=(($5+($sub_i_i<<2))|0);
 var $6=HEAP32[(($arrayidx_i_i_i_i)>>2)];
 var $tobool_i_i_i=($6|0)==0;
 if($tobool_i_i_i){label=5;break;}else{label=7;break;}
 case 5: 
 var $exception_i_i=___cxa_allocate_exception(4);
 var $7=$exception_i_i;
 __ZNSt8bad_castC2Ev($7);
 (function() { try { __THREW__ = 0; return ___cxa_throw($exception_i_i,10264,(376)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=6;break; } else { label=17;break; }
 case 6: 
 throw "Reached an unreachable!";
 case 7: 
 var $8=$6;
 var $9=$6;
 var $vtable_i=HEAP32[(($9)>>2)];
 var $vfn_i=(($vtable_i+32)|0);
 var $10=HEAP32[(($vfn_i)>>2)];
 var $call_i10=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$10]($8,11872,11898,$__atoms) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=8;break; } else { label=17;break; }
 case 8: 
 var $11=HEAP32[(($__locale__i)>>2)];
 var $12=$__p_i_i_i3;
 var $13=HEAP32[((15000)>>2)];
 var $cmp_i_i_i5=($13|0)==-1;
 if($cmp_i_i_i5){label=10;break;}else{label=9;break;}
 case 9: 
 var $ref_tmp_i_sroa_0_0__idx_i_i6=(($__p_i_i_i3)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i6)>>2)]=15000;
 var $ref_tmp_i_sroa_1_4__idx6_i_i7=(($__p_i_i_i3+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i7)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i8=(($__p_i_i_i3+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i8)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(15000,$12,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=10;break; } else { label=17;break; }
 case 10: 
 var $14=HEAP32[((15004)>>2)];
 var $sub_i_i10=((($14)-(1))|0);
 var $__end__i_i_i_i11=(($11+12)|0);
 var $15=HEAP32[(($__end__i_i_i_i11)>>2)];
 var $__begin__i_i_i_i12=(($11+8)|0);
 var $16=HEAP32[(($__begin__i_i_i_i12)>>2)];
 var $sub_ptr_lhs_cast_i_i_i_i13=$15;
 var $sub_ptr_rhs_cast_i_i_i_i14=$16;
 var $sub_ptr_sub_i_i_i_i15=((($sub_ptr_lhs_cast_i_i_i_i13)-($sub_ptr_rhs_cast_i_i_i_i14))|0);
 var $sub_ptr_div_i_i_i_i16=$sub_ptr_sub_i_i_i_i15>>2;
 var $cmp_i_i1_i17=($sub_ptr_div_i_i_i_i16>>>0)>($sub_i_i10>>>0);
 if($cmp_i_i1_i17){label=11;break;}else{label=12;break;}
 case 11: 
 var $arrayidx_i_i_i_i19=(($16+($sub_i_i10<<2))|0);
 var $17=HEAP32[(($arrayidx_i_i_i_i19)>>2)];
 var $tobool_i_i_i20=($17|0)==0;
 if($tobool_i_i_i20){label=12;break;}else{label=14;break;}
 case 12: 
 var $exception_i_i22=___cxa_allocate_exception(4);
 var $18=$exception_i_i22;
 __ZNSt8bad_castC2Ev($18);
 (function() { try { __THREW__ = 0; return ___cxa_throw($exception_i_i22,10264,(376)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=13;break; } else { label=17;break; }
 case 13: 
 throw "Reached an unreachable!";
 case 14: 
 var $19=$17;
 var $20=$17;
 var $vtable_i15=HEAP32[(($20)>>2)];
 var $vfn_i16=(($vtable_i15+16)|0);
 var $21=HEAP32[(($vfn_i16)>>2)];
 var $call_i17=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$21]($19) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=15;break; } else { label=17;break; }
 case 15: 
 HEAP8[($__thousands_sep)]=$call_i17;
 var $22=$17;
 var $vtable_i20=HEAP32[(($22)>>2)];
 var $vfn_i21=(($vtable_i20+20)|0);
 var $23=HEAP32[(($vfn_i21)>>2)];
 (function() { try { __THREW__ = 0; return FUNCTION_TABLE[$23]($agg_result,$19) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=16;break; } else { label=17;break; }
 case 16: 
 var $24=HEAP32[(($__locale__i)>>2)];
 var $25=(($24)|0);
 var $call_i=__ZNSt3__114__shared_count16__release_sharedEv($25);
 STACKTOP=sp;return;
 case 17: 
 var $26$0 = ___cxa_find_matching_catch(-1, -1); var $26$1 = tempRet0;
 var $27=HEAP32[(($__locale__i)>>2)];
 var $28=(($27)|0);
 var $call_i29=__ZNSt3__114__shared_count16__release_sharedEv($28);
 ___resumeException($26$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($agg_result,$__iob,$__atoms,$__decimal_point,$__thousands_sep){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+40)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__p_i_i_i4=sp;
 var $__p_i_i_i=(sp)+(16);
 var $__loc=(sp)+(32);
 __ZNKSt3__18ios_base6getlocEv($__loc,$__iob);
 var $__locale__i=(($__loc)|0);
 var $0=HEAP32[(($__locale__i)>>2)];
 var $1=$__p_i_i_i;
 var $2=HEAP32[((15384)>>2)];
 var $cmp_i_i_i=($2|0)==-1;
 if($cmp_i_i_i){label=3;break;}else{label=2;break;}
 case 2: 
 var $ref_tmp_i_sroa_0_0__idx_i_i=(($__p_i_i_i)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i)>>2)]=15384;
 var $ref_tmp_i_sroa_1_4__idx6_i_i=(($__p_i_i_i+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i=(($__p_i_i_i+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(15384,$1,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=3;break; } else { label=18;break; }
 case 3: 
 var $3=HEAP32[((15388)>>2)];
 var $sub_i_i=((($3)-(1))|0);
 var $__end__i_i_i_i=(($0+12)|0);
 var $4=HEAP32[(($__end__i_i_i_i)>>2)];
 var $__begin__i_i_i_i=(($0+8)|0);
 var $5=HEAP32[(($__begin__i_i_i_i)>>2)];
 var $sub_ptr_lhs_cast_i_i_i_i=$4;
 var $sub_ptr_rhs_cast_i_i_i_i=$5;
 var $sub_ptr_sub_i_i_i_i=((($sub_ptr_lhs_cast_i_i_i_i)-($sub_ptr_rhs_cast_i_i_i_i))|0);
 var $sub_ptr_div_i_i_i_i=$sub_ptr_sub_i_i_i_i>>2;
 var $cmp_i_i1_i=($sub_ptr_div_i_i_i_i>>>0)>($sub_i_i>>>0);
 if($cmp_i_i1_i){label=4;break;}else{label=5;break;}
 case 4: 
 var $arrayidx_i_i_i_i=(($5+($sub_i_i<<2))|0);
 var $6=HEAP32[(($arrayidx_i_i_i_i)>>2)];
 var $tobool_i_i_i=($6|0)==0;
 if($tobool_i_i_i){label=5;break;}else{label=7;break;}
 case 5: 
 var $exception_i_i=___cxa_allocate_exception(4);
 var $7=$exception_i_i;
 __ZNSt8bad_castC2Ev($7);
 (function() { try { __THREW__ = 0; return ___cxa_throw($exception_i_i,10264,(376)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=6;break; } else { label=18;break; }
 case 6: 
 throw "Reached an unreachable!";
 case 7: 
 var $8=$6;
 var $9=$6;
 var $vtable_i=HEAP32[(($9)>>2)];
 var $vfn_i=(($vtable_i+32)|0);
 var $10=HEAP32[(($vfn_i)>>2)];
 var $call_i12=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$10]($8,11872,11904,$__atoms) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=8;break; } else { label=18;break; }
 case 8: 
 var $11=HEAP32[(($__locale__i)>>2)];
 var $12=$__p_i_i_i4;
 var $13=HEAP32[((15000)>>2)];
 var $cmp_i_i_i6=($13|0)==-1;
 if($cmp_i_i_i6){label=10;break;}else{label=9;break;}
 case 9: 
 var $ref_tmp_i_sroa_0_0__idx_i_i7=(($__p_i_i_i4)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i7)>>2)]=15000;
 var $ref_tmp_i_sroa_1_4__idx6_i_i8=(($__p_i_i_i4+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i8)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i9=(($__p_i_i_i4+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i9)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(15000,$12,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=10;break; } else { label=18;break; }
 case 10: 
 var $14=HEAP32[((15004)>>2)];
 var $sub_i_i11=((($14)-(1))|0);
 var $__end__i_i_i_i12=(($11+12)|0);
 var $15=HEAP32[(($__end__i_i_i_i12)>>2)];
 var $__begin__i_i_i_i13=(($11+8)|0);
 var $16=HEAP32[(($__begin__i_i_i_i13)>>2)];
 var $sub_ptr_lhs_cast_i_i_i_i14=$15;
 var $sub_ptr_rhs_cast_i_i_i_i15=$16;
 var $sub_ptr_sub_i_i_i_i16=((($sub_ptr_lhs_cast_i_i_i_i14)-($sub_ptr_rhs_cast_i_i_i_i15))|0);
 var $sub_ptr_div_i_i_i_i17=$sub_ptr_sub_i_i_i_i16>>2;
 var $cmp_i_i1_i18=($sub_ptr_div_i_i_i_i17>>>0)>($sub_i_i11>>>0);
 if($cmp_i_i1_i18){label=11;break;}else{label=12;break;}
 case 11: 
 var $arrayidx_i_i_i_i20=(($16+($sub_i_i11<<2))|0);
 var $17=HEAP32[(($arrayidx_i_i_i_i20)>>2)];
 var $tobool_i_i_i21=($17|0)==0;
 if($tobool_i_i_i21){label=12;break;}else{label=14;break;}
 case 12: 
 var $exception_i_i23=___cxa_allocate_exception(4);
 var $18=$exception_i_i23;
 __ZNSt8bad_castC2Ev($18);
 (function() { try { __THREW__ = 0; return ___cxa_throw($exception_i_i23,10264,(376)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=13;break; } else { label=18;break; }
 case 13: 
 throw "Reached an unreachable!";
 case 14: 
 var $19=$17;
 var $20=$17;
 var $vtable_i17=HEAP32[(($20)>>2)];
 var $vfn_i18=(($vtable_i17+12)|0);
 var $21=HEAP32[(($vfn_i18)>>2)];
 var $call_i19=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$21]($19) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=15;break; } else { label=18;break; }
 case 15: 
 HEAP8[($__decimal_point)]=$call_i19;
 var $vtable_i22=HEAP32[(($20)>>2)];
 var $vfn_i23=(($vtable_i22+16)|0);
 var $22=HEAP32[(($vfn_i23)>>2)];
 var $call_i24=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$22]($19) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=16;break; } else { label=18;break; }
 case 16: 
 HEAP8[($__thousands_sep)]=$call_i24;
 var $23=$17;
 var $vtable_i27=HEAP32[(($23)>>2)];
 var $vfn_i28=(($vtable_i27+20)|0);
 var $24=HEAP32[(($vfn_i28)>>2)];
 (function() { try { __THREW__ = 0; return FUNCTION_TABLE[$24]($agg_result,$19) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=17;break; } else { label=18;break; }
 case 17: 
 var $25=HEAP32[(($__locale__i)>>2)];
 var $26=(($25)|0);
 var $call_i=__ZNSt3__114__shared_count16__release_sharedEv($26);
 STACKTOP=sp;return;
 case 18: 
 var $27$0 = ___cxa_find_matching_catch(-1, -1); var $27$1 = tempRet0;
 var $28=HEAP32[(($__locale__i)>>2)];
 var $29=(($28)|0);
 var $call_i30=__ZNSt3__114__shared_count16__release_sharedEv($29);
 ___resumeException($27$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($__ct,$__in_units,$__exp,$__a,$__a_end,$__decimal_point,$__thousands_sep,$__grouping,$__g,$__g_end,$__dc,$__atoms){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $cmp=(($__ct<<24)>>24)==(($__decimal_point<<24)>>24);
 if($cmp){label=2;break;}else{label=9;break;}
 case 2: 
 var $0=HEAP8[($__in_units)];
 var $1=$0&1;
 var $tobool=(($1<<24)>>24)==0;
 if($tobool){var $retval_0=-1;label=36;break;}else{label=3;break;}
 case 3: 
 HEAP8[($__in_units)]=0;
 var $2=HEAP32[(($__a_end)>>2)];
 var $incdec_ptr=(($2+1)|0);
 HEAP32[(($__a_end)>>2)]=$incdec_ptr;
 HEAP8[($2)]=46;
 var $__size__i_i=$__grouping;
 var $3=HEAP8[($__size__i_i)];
 var $conv_i_i=($3&255);
 var $and_i_i=$conv_i_i&1;
 var $tobool_i_i=($and_i_i|0)==0;
 if($tobool_i_i){label=5;break;}else{label=4;break;}
 case 4: 
 var $__size__i23_i=(($__grouping+4)|0);
 var $4=HEAP32[(($__size__i23_i)>>2)];
 var $cond_i=$4;label=6;break;
 case 5: 
 var $shr_i_i45=$conv_i_i>>>1;
 var $cond_i=$shr_i_i45;label=6;break;
 case 6: 
 var $cond_i;
 var $cmp3=($cond_i|0)==0;
 if($cmp3){var $retval_0=0;label=36;break;}else{label=7;break;}
 case 7: 
 var $5=HEAP32[(($__g_end)>>2)];
 var $sub_ptr_lhs_cast=$5;
 var $sub_ptr_rhs_cast=$__g;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $cmp4=($sub_ptr_sub|0)<160;
 if($cmp4){label=8;break;}else{var $retval_0=0;label=36;break;}
 case 8: 
 var $6=HEAP32[(($__dc)>>2)];
 var $incdec_ptr6=(($5+4)|0);
 HEAP32[(($__g_end)>>2)]=$incdec_ptr6;
 HEAP32[(($5)>>2)]=$6;
 var $retval_0=0;label=36;break;
 case 9: 
 var $cmp11=(($__ct<<24)>>24)==(($__thousands_sep<<24)>>24);
 if($cmp11){label=10;break;}else{label=17;break;}
 case 10: 
 var $__size__i_i142=$__grouping;
 var $7=HEAP8[($__size__i_i142)];
 var $conv_i_i143=($7&255);
 var $and_i_i144=$conv_i_i143&1;
 var $tobool_i_i145=($and_i_i144|0)==0;
 if($tobool_i_i145){label=12;break;}else{label=11;break;}
 case 11: 
 var $__size__i23_i152=(($__grouping+4)|0);
 var $8=HEAP32[(($__size__i23_i152)>>2)];
 var $cond_i164=$8;label=13;break;
 case 12: 
 var $shr_i_i16244=$conv_i_i143>>>1;
 var $cond_i164=$shr_i_i16244;label=13;break;
 case 13: 
 var $cond_i164;
 var $cmp14=($cond_i164|0)==0;
 if($cmp14){label=17;break;}else{label=14;break;}
 case 14: 
 var $9=HEAP8[($__in_units)];
 var $10=$9&1;
 var $tobool16=(($10<<24)>>24)==0;
 if($tobool16){var $retval_0=-1;label=36;break;}else{label=15;break;}
 case 15: 
 var $11=HEAP32[(($__g_end)>>2)];
 var $sub_ptr_lhs_cast19=$11;
 var $sub_ptr_rhs_cast20=$__g;
 var $sub_ptr_sub21=((($sub_ptr_lhs_cast19)-($sub_ptr_rhs_cast20))|0);
 var $cmp23=($sub_ptr_sub21|0)<160;
 if($cmp23){label=16;break;}else{var $retval_0=0;label=36;break;}
 case 16: 
 var $12=HEAP32[(($__dc)>>2)];
 var $incdec_ptr25=(($11+4)|0);
 HEAP32[(($__g_end)>>2)]=$incdec_ptr25;
 HEAP32[(($11)>>2)]=$12;
 HEAP32[(($__dc)>>2)]=0;
 var $retval_0=0;label=36;break;
 case 17: 
 var $add_ptr=(($__atoms+32)|0);
 var $__first_addr_i_0=$__atoms;label=18;break;
 case 18: 
 var $__first_addr_i_0;
 var $cmp_i=($__first_addr_i_0|0)==($add_ptr|0);
 if($cmp_i){var $__first_addr_i_0_lcssa=$add_ptr;label=20;break;}else{label=19;break;}
 case 19: 
 var $13=HEAP8[($__first_addr_i_0)];
 var $cmp2_i=(($13<<24)>>24)==(($__ct<<24)>>24);
 var $incdec_ptr_i=(($__first_addr_i_0+1)|0);
 if($cmp2_i){var $__first_addr_i_0_lcssa=$__first_addr_i_0;label=20;break;}else{var $__first_addr_i_0=$incdec_ptr_i;label=18;break;}
 case 20: 
 var $__first_addr_i_0_lcssa;
 var $sub_ptr_lhs_cast29=$__first_addr_i_0_lcssa;
 var $sub_ptr_rhs_cast30=$__atoms;
 var $sub_ptr_sub31=((($sub_ptr_lhs_cast29)-($sub_ptr_rhs_cast30))|0);
 var $cmp32=($sub_ptr_sub31|0)>31;
 if($cmp32){var $retval_0=-1;label=36;break;}else{label=21;break;}
 case 21: 
 var $arrayidx=((11872+$sub_ptr_sub31)|0);
 var $14=HEAP8[($arrayidx)];
 if(($sub_ptr_sub31|0)==25|($sub_ptr_sub31|0)==24){ label=22;break;}else if(($sub_ptr_sub31|0)==22|($sub_ptr_sub31|0)==23){ label=25;break;}else{label=26;break;}
 case 22: 
 var $15=HEAP32[(($__a_end)>>2)];
 var $cmp40=($15|0)==($__a|0);
 if($cmp40){label=24;break;}else{label=23;break;}
 case 23: 
 var $arrayidx42=((($15)-(1))|0);
 var $16=HEAP8[($arrayidx42)];
 var $conv4342=($16&255);
 var $and=$conv4342&95;
 var $17=HEAP8[($__exp)];
 var $conv4443=($17&255);
 var $and45=$conv4443&127;
 var $cmp46=($and|0)==($and45|0);
 if($cmp46){label=24;break;}else{var $retval_0=-1;label=36;break;}
 case 24: 
 var $incdec_ptr48=(($15+1)|0);
 HEAP32[(($__a_end)>>2)]=$incdec_ptr48;
 HEAP8[($15)]=$14;
 var $retval_0=0;label=36;break;
 case 25: 
 HEAP8[($__exp)]=80;
 var $18=HEAP32[(($__a_end)>>2)];
 var $incdec_ptr8046=(($18+1)|0);
 HEAP32[(($__a_end)>>2)]=$incdec_ptr8046;
 HEAP8[($18)]=$14;
 var $retval_0=0;label=36;break;
 case 26: 
 var $conv3540=($14&255);
 var $and58=$conv3540&95;
 var $19=HEAP8[($__exp)];
 var $conv59=(($19<<24)>>24);
 var $cmp60=($and58|0)==($conv59|0);
 if($cmp60){label=27;break;}else{label=34;break;}
 case 27: 
 var $or=$19|-128;
 HEAP8[($__exp)]=$or;
 var $20=HEAP8[($__in_units)];
 var $21=$20&1;
 var $tobool64=(($21<<24)>>24)==0;
 if($tobool64){label=34;break;}else{label=28;break;}
 case 28: 
 HEAP8[($__in_units)]=0;
 var $__size__i_i101=$__grouping;
 var $22=HEAP8[($__size__i_i101)];
 var $conv_i_i102=($22&255);
 var $and_i_i103=$conv_i_i102&1;
 var $tobool_i_i104=($and_i_i103|0)==0;
 if($tobool_i_i104){label=30;break;}else{label=29;break;}
 case 29: 
 var $__size__i23_i111=(($__grouping+4)|0);
 var $23=HEAP32[(($__size__i23_i111)>>2)];
 var $cond_i123=$23;label=31;break;
 case 30: 
 var $shr_i_i12141=$conv_i_i102>>>1;
 var $cond_i123=$shr_i_i12141;label=31;break;
 case 31: 
 var $cond_i123;
 var $cmp67=($cond_i123|0)==0;
 if($cmp67){label=34;break;}else{label=32;break;}
 case 32: 
 var $24=HEAP32[(($__g_end)>>2)];
 var $sub_ptr_lhs_cast69=$24;
 var $sub_ptr_rhs_cast70=$__g;
 var $sub_ptr_sub71=((($sub_ptr_lhs_cast69)-($sub_ptr_rhs_cast70))|0);
 var $cmp73=($sub_ptr_sub71|0)<160;
 if($cmp73){label=33;break;}else{label=34;break;}
 case 33: 
 var $25=HEAP32[(($__dc)>>2)];
 var $incdec_ptr75=(($24+4)|0);
 HEAP32[(($__g_end)>>2)]=$incdec_ptr75;
 HEAP32[(($24)>>2)]=$25;
 label=34;break;
 case 34: 
 var $26=HEAP32[(($__a_end)>>2)];
 var $incdec_ptr80=(($26+1)|0);
 HEAP32[(($__a_end)>>2)]=$incdec_ptr80;
 HEAP8[($26)]=$14;
 var $cmp81=($sub_ptr_sub31|0)>21;
 if($cmp81){var $retval_0=0;label=36;break;}else{label=35;break;}
 case 35: 
 var $27=HEAP32[(($__dc)>>2)];
 var $inc=((($27)+(1))|0);
 HEAP32[(($__dc)>>2)]=$inc;
 var $retval_0=0;label=36;break;
 case 36: 
 var $retval_0;
 return $retval_0;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($agg_result,$__iob,$__atoms,$__thousands_sep){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+40)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__p_i_i_i3=sp;
 var $__p_i_i_i=(sp)+(16);
 var $__loc=(sp)+(32);
 __ZNKSt3__18ios_base6getlocEv($__loc,$__iob);
 var $__locale__i=(($__loc)|0);
 var $0=HEAP32[(($__locale__i)>>2)];
 var $1=$__p_i_i_i;
 var $2=HEAP32[((15376)>>2)];
 var $cmp_i_i_i=($2|0)==-1;
 if($cmp_i_i_i){label=3;break;}else{label=2;break;}
 case 2: 
 var $ref_tmp_i_sroa_0_0__idx_i_i=(($__p_i_i_i)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i)>>2)]=15376;
 var $ref_tmp_i_sroa_1_4__idx6_i_i=(($__p_i_i_i+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i=(($__p_i_i_i+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(15376,$1,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=3;break; } else { label=17;break; }
 case 3: 
 var $3=HEAP32[((15380)>>2)];
 var $sub_i_i=((($3)-(1))|0);
 var $__end__i_i_i_i=(($0+12)|0);
 var $4=HEAP32[(($__end__i_i_i_i)>>2)];
 var $__begin__i_i_i_i=(($0+8)|0);
 var $5=HEAP32[(($__begin__i_i_i_i)>>2)];
 var $sub_ptr_lhs_cast_i_i_i_i=$4;
 var $sub_ptr_rhs_cast_i_i_i_i=$5;
 var $sub_ptr_sub_i_i_i_i=((($sub_ptr_lhs_cast_i_i_i_i)-($sub_ptr_rhs_cast_i_i_i_i))|0);
 var $sub_ptr_div_i_i_i_i=$sub_ptr_sub_i_i_i_i>>2;
 var $cmp_i_i1_i=($sub_ptr_div_i_i_i_i>>>0)>($sub_i_i>>>0);
 if($cmp_i_i1_i){label=4;break;}else{label=5;break;}
 case 4: 
 var $arrayidx_i_i_i_i=(($5+($sub_i_i<<2))|0);
 var $6=HEAP32[(($arrayidx_i_i_i_i)>>2)];
 var $tobool_i_i_i=($6|0)==0;
 if($tobool_i_i_i){label=5;break;}else{label=7;break;}
 case 5: 
 var $exception_i_i=___cxa_allocate_exception(4);
 var $7=$exception_i_i;
 __ZNSt8bad_castC2Ev($7);
 (function() { try { __THREW__ = 0; return ___cxa_throw($exception_i_i,10264,(376)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=6;break; } else { label=17;break; }
 case 6: 
 throw "Reached an unreachable!";
 case 7: 
 var $8=$6;
 var $9=$6;
 var $vtable_i=HEAP32[(($9)>>2)];
 var $vfn_i=(($vtable_i+48)|0);
 var $10=HEAP32[(($vfn_i)>>2)];
 var $call_i10=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$10]($8,11872,11898,$__atoms) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=8;break; } else { label=17;break; }
 case 8: 
 var $11=HEAP32[(($__locale__i)>>2)];
 var $12=$__p_i_i_i3;
 var $13=HEAP32[((14992)>>2)];
 var $cmp_i_i_i5=($13|0)==-1;
 if($cmp_i_i_i5){label=10;break;}else{label=9;break;}
 case 9: 
 var $ref_tmp_i_sroa_0_0__idx_i_i6=(($__p_i_i_i3)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i6)>>2)]=14992;
 var $ref_tmp_i_sroa_1_4__idx6_i_i7=(($__p_i_i_i3+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i7)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i8=(($__p_i_i_i3+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i8)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(14992,$12,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=10;break; } else { label=17;break; }
 case 10: 
 var $14=HEAP32[((14996)>>2)];
 var $sub_i_i10=((($14)-(1))|0);
 var $__end__i_i_i_i11=(($11+12)|0);
 var $15=HEAP32[(($__end__i_i_i_i11)>>2)];
 var $__begin__i_i_i_i12=(($11+8)|0);
 var $16=HEAP32[(($__begin__i_i_i_i12)>>2)];
 var $sub_ptr_lhs_cast_i_i_i_i13=$15;
 var $sub_ptr_rhs_cast_i_i_i_i14=$16;
 var $sub_ptr_sub_i_i_i_i15=((($sub_ptr_lhs_cast_i_i_i_i13)-($sub_ptr_rhs_cast_i_i_i_i14))|0);
 var $sub_ptr_div_i_i_i_i16=$sub_ptr_sub_i_i_i_i15>>2;
 var $cmp_i_i1_i17=($sub_ptr_div_i_i_i_i16>>>0)>($sub_i_i10>>>0);
 if($cmp_i_i1_i17){label=11;break;}else{label=12;break;}
 case 11: 
 var $arrayidx_i_i_i_i19=(($16+($sub_i_i10<<2))|0);
 var $17=HEAP32[(($arrayidx_i_i_i_i19)>>2)];
 var $tobool_i_i_i20=($17|0)==0;
 if($tobool_i_i_i20){label=12;break;}else{label=14;break;}
 case 12: 
 var $exception_i_i22=___cxa_allocate_exception(4);
 var $18=$exception_i_i22;
 __ZNSt8bad_castC2Ev($18);
 (function() { try { __THREW__ = 0; return ___cxa_throw($exception_i_i22,10264,(376)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=13;break; } else { label=17;break; }
 case 13: 
 throw "Reached an unreachable!";
 case 14: 
 var $19=$17;
 var $20=$17;
 var $vtable_i15=HEAP32[(($20)>>2)];
 var $vfn_i16=(($vtable_i15+16)|0);
 var $21=HEAP32[(($vfn_i16)>>2)];
 var $call_i17=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$21]($19) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=15;break; } else { label=17;break; }
 case 15: 
 HEAP32[(($__thousands_sep)>>2)]=$call_i17;
 var $22=$17;
 var $vtable_i20=HEAP32[(($22)>>2)];
 var $vfn_i21=(($vtable_i20+20)|0);
 var $23=HEAP32[(($vfn_i21)>>2)];
 (function() { try { __THREW__ = 0; return FUNCTION_TABLE[$23]($agg_result,$19) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=16;break; } else { label=17;break; }
 case 16: 
 var $24=HEAP32[(($__locale__i)>>2)];
 var $25=(($24)|0);
 var $call_i=__ZNSt3__114__shared_count16__release_sharedEv($25);
 STACKTOP=sp;return;
 case 17: 
 var $26$0 = ___cxa_find_matching_catch(-1, -1); var $26$1 = tempRet0;
 var $27=HEAP32[(($__locale__i)>>2)];
 var $28=(($27)|0);
 var $call_i29=__ZNSt3__114__shared_count16__release_sharedEv($28);
 ___resumeException($26$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($agg_result,$__iob,$__atoms,$__decimal_point,$__thousands_sep){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+40)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__p_i_i_i4=sp;
 var $__p_i_i_i=(sp)+(16);
 var $__loc=(sp)+(32);
 __ZNKSt3__18ios_base6getlocEv($__loc,$__iob);
 var $__locale__i=(($__loc)|0);
 var $0=HEAP32[(($__locale__i)>>2)];
 var $1=$__p_i_i_i;
 var $2=HEAP32[((15376)>>2)];
 var $cmp_i_i_i=($2|0)==-1;
 if($cmp_i_i_i){label=3;break;}else{label=2;break;}
 case 2: 
 var $ref_tmp_i_sroa_0_0__idx_i_i=(($__p_i_i_i)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i)>>2)]=15376;
 var $ref_tmp_i_sroa_1_4__idx6_i_i=(($__p_i_i_i+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i=(($__p_i_i_i+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(15376,$1,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=3;break; } else { label=18;break; }
 case 3: 
 var $3=HEAP32[((15380)>>2)];
 var $sub_i_i=((($3)-(1))|0);
 var $__end__i_i_i_i=(($0+12)|0);
 var $4=HEAP32[(($__end__i_i_i_i)>>2)];
 var $__begin__i_i_i_i=(($0+8)|0);
 var $5=HEAP32[(($__begin__i_i_i_i)>>2)];
 var $sub_ptr_lhs_cast_i_i_i_i=$4;
 var $sub_ptr_rhs_cast_i_i_i_i=$5;
 var $sub_ptr_sub_i_i_i_i=((($sub_ptr_lhs_cast_i_i_i_i)-($sub_ptr_rhs_cast_i_i_i_i))|0);
 var $sub_ptr_div_i_i_i_i=$sub_ptr_sub_i_i_i_i>>2;
 var $cmp_i_i1_i=($sub_ptr_div_i_i_i_i>>>0)>($sub_i_i>>>0);
 if($cmp_i_i1_i){label=4;break;}else{label=5;break;}
 case 4: 
 var $arrayidx_i_i_i_i=(($5+($sub_i_i<<2))|0);
 var $6=HEAP32[(($arrayidx_i_i_i_i)>>2)];
 var $tobool_i_i_i=($6|0)==0;
 if($tobool_i_i_i){label=5;break;}else{label=7;break;}
 case 5: 
 var $exception_i_i=___cxa_allocate_exception(4);
 var $7=$exception_i_i;
 __ZNSt8bad_castC2Ev($7);
 (function() { try { __THREW__ = 0; return ___cxa_throw($exception_i_i,10264,(376)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=6;break; } else { label=18;break; }
 case 6: 
 throw "Reached an unreachable!";
 case 7: 
 var $8=$6;
 var $9=$6;
 var $vtable_i=HEAP32[(($9)>>2)];
 var $vfn_i=(($vtable_i+48)|0);
 var $10=HEAP32[(($vfn_i)>>2)];
 var $call_i12=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$10]($8,11872,11904,$__atoms) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=8;break; } else { label=18;break; }
 case 8: 
 var $11=HEAP32[(($__locale__i)>>2)];
 var $12=$__p_i_i_i4;
 var $13=HEAP32[((14992)>>2)];
 var $cmp_i_i_i6=($13|0)==-1;
 if($cmp_i_i_i6){label=10;break;}else{label=9;break;}
 case 9: 
 var $ref_tmp_i_sroa_0_0__idx_i_i7=(($__p_i_i_i4)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i7)>>2)]=14992;
 var $ref_tmp_i_sroa_1_4__idx6_i_i8=(($__p_i_i_i4+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i8)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i9=(($__p_i_i_i4+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i9)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(14992,$12,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=10;break; } else { label=18;break; }
 case 10: 
 var $14=HEAP32[((14996)>>2)];
 var $sub_i_i11=((($14)-(1))|0);
 var $__end__i_i_i_i12=(($11+12)|0);
 var $15=HEAP32[(($__end__i_i_i_i12)>>2)];
 var $__begin__i_i_i_i13=(($11+8)|0);
 var $16=HEAP32[(($__begin__i_i_i_i13)>>2)];
 var $sub_ptr_lhs_cast_i_i_i_i14=$15;
 var $sub_ptr_rhs_cast_i_i_i_i15=$16;
 var $sub_ptr_sub_i_i_i_i16=((($sub_ptr_lhs_cast_i_i_i_i14)-($sub_ptr_rhs_cast_i_i_i_i15))|0);
 var $sub_ptr_div_i_i_i_i17=$sub_ptr_sub_i_i_i_i16>>2;
 var $cmp_i_i1_i18=($sub_ptr_div_i_i_i_i17>>>0)>($sub_i_i11>>>0);
 if($cmp_i_i1_i18){label=11;break;}else{label=12;break;}
 case 11: 
 var $arrayidx_i_i_i_i20=(($16+($sub_i_i11<<2))|0);
 var $17=HEAP32[(($arrayidx_i_i_i_i20)>>2)];
 var $tobool_i_i_i21=($17|0)==0;
 if($tobool_i_i_i21){label=12;break;}else{label=14;break;}
 case 12: 
 var $exception_i_i23=___cxa_allocate_exception(4);
 var $18=$exception_i_i23;
 __ZNSt8bad_castC2Ev($18);
 (function() { try { __THREW__ = 0; return ___cxa_throw($exception_i_i23,10264,(376)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=13;break; } else { label=18;break; }
 case 13: 
 throw "Reached an unreachable!";
 case 14: 
 var $19=$17;
 var $20=$17;
 var $vtable_i17=HEAP32[(($20)>>2)];
 var $vfn_i18=(($vtable_i17+12)|0);
 var $21=HEAP32[(($vfn_i18)>>2)];
 var $call_i19=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$21]($19) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=15;break; } else { label=18;break; }
 case 15: 
 HEAP32[(($__decimal_point)>>2)]=$call_i19;
 var $vtable_i22=HEAP32[(($20)>>2)];
 var $vfn_i23=(($vtable_i22+16)|0);
 var $22=HEAP32[(($vfn_i23)>>2)];
 var $call_i24=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$22]($19) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=16;break; } else { label=18;break; }
 case 16: 
 HEAP32[(($__thousands_sep)>>2)]=$call_i24;
 var $23=$17;
 var $vtable_i27=HEAP32[(($23)>>2)];
 var $vfn_i28=(($vtable_i27+20)|0);
 var $24=HEAP32[(($vfn_i28)>>2)];
 (function() { try { __THREW__ = 0; return FUNCTION_TABLE[$24]($agg_result,$19) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=17;break; } else { label=18;break; }
 case 17: 
 var $25=HEAP32[(($__locale__i)>>2)];
 var $26=(($25)|0);
 var $call_i=__ZNSt3__114__shared_count16__release_sharedEv($26);
 STACKTOP=sp;return;
 case 18: 
 var $27$0 = ___cxa_find_matching_catch(-1, -1); var $27$1 = tempRet0;
 var $28=HEAP32[(($__locale__i)>>2)];
 var $29=(($28)|0);
 var $call_i30=__ZNSt3__114__shared_count16__release_sharedEv($29);
 ___resumeException($27$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($__ct,$__in_units,$__exp,$__a,$__a_end,$__decimal_point,$__thousands_sep,$__grouping,$__g,$__g_end,$__dc,$__atoms){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $cmp=($__ct|0)==($__decimal_point|0);
 if($cmp){label=2;break;}else{label=9;break;}
 case 2: 
 var $0=HEAP8[($__in_units)];
 var $1=$0&1;
 var $tobool=(($1<<24)>>24)==0;
 if($tobool){var $retval_0=-1;label=36;break;}else{label=3;break;}
 case 3: 
 HEAP8[($__in_units)]=0;
 var $2=HEAP32[(($__a_end)>>2)];
 var $incdec_ptr=(($2+1)|0);
 HEAP32[(($__a_end)>>2)]=$incdec_ptr;
 HEAP8[($2)]=46;
 var $__size__i_i=$__grouping;
 var $3=HEAP8[($__size__i_i)];
 var $conv_i_i=($3&255);
 var $and_i_i=$conv_i_i&1;
 var $tobool_i_i=($and_i_i|0)==0;
 if($tobool_i_i){label=5;break;}else{label=4;break;}
 case 4: 
 var $__size__i23_i=(($__grouping+4)|0);
 var $4=HEAP32[(($__size__i23_i)>>2)];
 var $cond_i=$4;label=6;break;
 case 5: 
 var $shr_i_i47=$conv_i_i>>>1;
 var $cond_i=$shr_i_i47;label=6;break;
 case 6: 
 var $cond_i;
 var $cmp2=($cond_i|0)==0;
 if($cmp2){var $retval_0=0;label=36;break;}else{label=7;break;}
 case 7: 
 var $5=HEAP32[(($__g_end)>>2)];
 var $sub_ptr_lhs_cast=$5;
 var $sub_ptr_rhs_cast=$__g;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $cmp3=($sub_ptr_sub|0)<160;
 if($cmp3){label=8;break;}else{var $retval_0=0;label=36;break;}
 case 8: 
 var $6=HEAP32[(($__dc)>>2)];
 var $incdec_ptr5=(($5+4)|0);
 HEAP32[(($__g_end)>>2)]=$incdec_ptr5;
 HEAP32[(($5)>>2)]=$6;
 var $retval_0=0;label=36;break;
 case 9: 
 var $cmp8=($__ct|0)==($__thousands_sep|0);
 if($cmp8){label=10;break;}else{label=17;break;}
 case 10: 
 var $__size__i_i139=$__grouping;
 var $7=HEAP8[($__size__i_i139)];
 var $conv_i_i140=($7&255);
 var $and_i_i141=$conv_i_i140&1;
 var $tobool_i_i142=($and_i_i141|0)==0;
 if($tobool_i_i142){label=12;break;}else{label=11;break;}
 case 11: 
 var $__size__i23_i149=(($__grouping+4)|0);
 var $8=HEAP32[(($__size__i23_i149)>>2)];
 var $cond_i161=$8;label=13;break;
 case 12: 
 var $shr_i_i15946=$conv_i_i140>>>1;
 var $cond_i161=$shr_i_i15946;label=13;break;
 case 13: 
 var $cond_i161;
 var $cmp11=($cond_i161|0)==0;
 if($cmp11){label=17;break;}else{label=14;break;}
 case 14: 
 var $9=HEAP8[($__in_units)];
 var $10=$9&1;
 var $tobool13=(($10<<24)>>24)==0;
 if($tobool13){var $retval_0=-1;label=36;break;}else{label=15;break;}
 case 15: 
 var $11=HEAP32[(($__g_end)>>2)];
 var $sub_ptr_lhs_cast16=$11;
 var $sub_ptr_rhs_cast17=$__g;
 var $sub_ptr_sub18=((($sub_ptr_lhs_cast16)-($sub_ptr_rhs_cast17))|0);
 var $cmp20=($sub_ptr_sub18|0)<160;
 if($cmp20){label=16;break;}else{var $retval_0=0;label=36;break;}
 case 16: 
 var $12=HEAP32[(($__dc)>>2)];
 var $incdec_ptr22=(($11+4)|0);
 HEAP32[(($__g_end)>>2)]=$incdec_ptr22;
 HEAP32[(($11)>>2)]=$12;
 HEAP32[(($__dc)>>2)]=0;
 var $retval_0=0;label=36;break;
 case 17: 
 var $add_ptr=(($__atoms+128)|0);
 var $__first_addr_i_0=$__atoms;label=18;break;
 case 18: 
 var $__first_addr_i_0;
 var $cmp_i=($__first_addr_i_0|0)==($add_ptr|0);
 if($cmp_i){var $__first_addr_i_0_lcssa=$add_ptr;label=20;break;}else{label=19;break;}
 case 19: 
 var $13=HEAP32[(($__first_addr_i_0)>>2)];
 var $cmp1_i=($13|0)==($__ct|0);
 var $incdec_ptr_i=(($__first_addr_i_0+4)|0);
 if($cmp1_i){var $__first_addr_i_0_lcssa=$__first_addr_i_0;label=20;break;}else{var $__first_addr_i_0=$incdec_ptr_i;label=18;break;}
 case 20: 
 var $__first_addr_i_0_lcssa;
 var $sub_ptr_lhs_cast26=$__first_addr_i_0_lcssa;
 var $sub_ptr_rhs_cast27=$__atoms;
 var $sub_ptr_sub28=((($sub_ptr_lhs_cast26)-($sub_ptr_rhs_cast27))|0);
 var $sub_ptr_div29=$sub_ptr_sub28>>2;
 var $cmp30=($sub_ptr_sub28|0)>124;
 if($cmp30){var $retval_0=-1;label=36;break;}else{label=21;break;}
 case 21: 
 var $arrayidx=((11872+$sub_ptr_div29)|0);
 var $14=HEAP8[($arrayidx)];
 if(($sub_ptr_div29|0)==25|($sub_ptr_div29|0)==24){ label=22;break;}else if(($sub_ptr_div29|0)==22|($sub_ptr_div29|0)==23){ label=25;break;}else{label=26;break;}
 case 22: 
 var $15=HEAP32[(($__a_end)>>2)];
 var $cmp37=($15|0)==($__a|0);
 if($cmp37){label=24;break;}else{label=23;break;}
 case 23: 
 var $arrayidx39=((($15)-(1))|0);
 var $16=HEAP8[($arrayidx39)];
 var $conv4044=($16&255);
 var $and=$conv4044&95;
 var $17=HEAP8[($__exp)];
 var $conv4145=($17&255);
 var $and42=$conv4145&127;
 var $cmp43=($and|0)==($and42|0);
 if($cmp43){label=24;break;}else{var $retval_0=-1;label=36;break;}
 case 24: 
 var $incdec_ptr45=(($15+1)|0);
 HEAP32[(($__a_end)>>2)]=$incdec_ptr45;
 HEAP8[($15)]=$14;
 var $retval_0=0;label=36;break;
 case 25: 
 HEAP8[($__exp)]=80;
 label=34;break;
 case 26: 
 var $conv42=($14&255);
 var $and55=$conv42&95;
 var $18=HEAP8[($__exp)];
 var $conv56=(($18<<24)>>24);
 var $cmp57=($and55|0)==($conv56|0);
 if($cmp57){label=27;break;}else{label=34;break;}
 case 27: 
 var $or=$18|-128;
 HEAP8[($__exp)]=$or;
 var $19=HEAP8[($__in_units)];
 var $20=$19&1;
 var $tobool61=(($20<<24)>>24)==0;
 if($tobool61){label=34;break;}else{label=28;break;}
 case 28: 
 HEAP8[($__in_units)]=0;
 var $__size__i_i98=$__grouping;
 var $21=HEAP8[($__size__i_i98)];
 var $conv_i_i99=($21&255);
 var $and_i_i100=$conv_i_i99&1;
 var $tobool_i_i101=($and_i_i100|0)==0;
 if($tobool_i_i101){label=30;break;}else{label=29;break;}
 case 29: 
 var $__size__i23_i108=(($__grouping+4)|0);
 var $22=HEAP32[(($__size__i23_i108)>>2)];
 var $cond_i120=$22;label=31;break;
 case 30: 
 var $shr_i_i11843=$conv_i_i99>>>1;
 var $cond_i120=$shr_i_i11843;label=31;break;
 case 31: 
 var $cond_i120;
 var $cmp64=($cond_i120|0)==0;
 if($cmp64){label=34;break;}else{label=32;break;}
 case 32: 
 var $23=HEAP32[(($__g_end)>>2)];
 var $sub_ptr_lhs_cast66=$23;
 var $sub_ptr_rhs_cast67=$__g;
 var $sub_ptr_sub68=((($sub_ptr_lhs_cast66)-($sub_ptr_rhs_cast67))|0);
 var $cmp70=($sub_ptr_sub68|0)<160;
 if($cmp70){label=33;break;}else{label=34;break;}
 case 33: 
 var $24=HEAP32[(($__dc)>>2)];
 var $incdec_ptr72=(($23+4)|0);
 HEAP32[(($__g_end)>>2)]=$incdec_ptr72;
 HEAP32[(($23)>>2)]=$24;
 label=34;break;
 case 34: 
 var $25=HEAP32[(($__a_end)>>2)];
 var $incdec_ptr77=(($25+1)|0);
 HEAP32[(($__a_end)>>2)]=$incdec_ptr77;
 HEAP8[($25)]=$14;
 var $cmp78=($sub_ptr_sub28|0)>84;
 if($cmp78){var $retval_0=0;label=36;break;}else{label=35;break;}
 case 35: 
 var $26=HEAP32[(($__dc)>>2)];
 var $inc=((($26)+(1))|0);
 HEAP32[(($__dc)>>2)]=$inc;
 var $retval_0=0;label=36;break;
 case 36: 
 var $retval_0;
 return $retval_0;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this){
 var label=0;
 var $0=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($0);
 var $1=$this;
 __ZdlPv($1);
 return;
}
function __ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev($this){
 var label=0;
 var $0=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($0);
 return;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb($agg_result,$this,$__s,$__iob,$__fl,$__v){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+48)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__s; $__s=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__s)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__p_i_i_i=sp;
 var $agg_tmp=(sp)+(16);
 var $ref_tmp=(sp)+(24);
 var $__nm=(sp)+(32);
 var $__fmtflags__i=(($__iob+4)|0);
 var $0=HEAP32[(($__fmtflags__i)>>2)];
 var $and=$0&1;
 var $cmp=($and|0)==0;
 if($cmp){label=2;break;}else{label=3;break;}
 case 2: 
 var $1=$this;
 var $vtable=HEAP32[(($1)>>2)];
 var $vfn=(($vtable+24)|0);
 var $2=HEAP32[(($vfn)>>2)];
 var $3=(($__s)|0);
 var $4=HEAP32[(($3)>>2)];
 var $5=(($agg_tmp)|0);
 HEAP32[(($5)>>2)]=$4;
 var $conv=($__v&1);
 FUNCTION_TABLE[$2]($agg_result,$this,$agg_tmp,$__iob,$__fl,$conv);
 label=29;break;
 case 3: 
 __ZNKSt3__18ios_base6getlocEv($ref_tmp,$__iob);
 var $__locale__i=(($ref_tmp)|0);
 var $6=HEAP32[(($__locale__i)>>2)];
 var $7=$__p_i_i_i;
 var $8=HEAP32[((15000)>>2)];
 var $cmp_i_i_i=($8|0)==-1;
 if($cmp_i_i_i){label=5;break;}else{label=4;break;}
 case 4: 
 var $ref_tmp_i_sroa_0_0__idx_i_i=(($__p_i_i_i)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i)>>2)]=15000;
 var $ref_tmp_i_sroa_1_4__idx6_i_i=(($__p_i_i_i+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i=(($__p_i_i_i+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(15000,$7,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=5;break; } else { label=26;break; }
 case 5: 
 var $9=HEAP32[((15004)>>2)];
 var $sub_i_i=((($9)-(1))|0);
 var $__end__i_i_i_i=(($6+12)|0);
 var $10=HEAP32[(($__end__i_i_i_i)>>2)];
 var $__begin__i_i_i_i=(($6+8)|0);
 var $11=HEAP32[(($__begin__i_i_i_i)>>2)];
 var $sub_ptr_lhs_cast_i_i_i_i=$10;
 var $sub_ptr_rhs_cast_i_i_i_i=$11;
 var $sub_ptr_sub_i_i_i_i=((($sub_ptr_lhs_cast_i_i_i_i)-($sub_ptr_rhs_cast_i_i_i_i))|0);
 var $sub_ptr_div_i_i_i_i=$sub_ptr_sub_i_i_i_i>>2;
 var $cmp_i_i1_i=($sub_ptr_div_i_i_i_i>>>0)>($sub_i_i>>>0);
 if($cmp_i_i1_i){label=6;break;}else{label=7;break;}
 case 6: 
 var $arrayidx_i_i_i_i=(($11+($sub_i_i<<2))|0);
 var $12=HEAP32[(($arrayidx_i_i_i_i)>>2)];
 var $tobool_i_i_i9=($12|0)==0;
 if($tobool_i_i_i9){label=7;break;}else{label=9;break;}
 case 7: 
 var $exception_i_i=___cxa_allocate_exception(4);
 var $13=$exception_i_i;
 __ZNSt8bad_castC2Ev($13);
 (function() { try { __THREW__ = 0; return ___cxa_throw($exception_i_i,10264,(376)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=8;break; } else { label=26;break; }
 case 8: 
 throw "Reached an unreachable!";
 case 9: 
 var $14=$12;
 var $15=HEAP32[(($__locale__i)>>2)];
 var $16=(($15)|0);
 var $call_i=__ZNSt3__114__shared_count16__release_sharedEv($16);
 var $17=$12;
 var $vtable_i=HEAP32[(($17)>>2)];
 if($__v){label=10;break;}else{label=11;break;}
 case 10: 
 var $vfn_i=(($vtable_i+24)|0);
 var $18=HEAP32[(($vfn_i)>>2)];
 FUNCTION_TABLE[$18]($__nm,$14);
 label=12;break;
 case 11: 
 var $vfn_i22=(($vtable_i+28)|0);
 var $19=HEAP32[(($vfn_i22)>>2)];
 FUNCTION_TABLE[$19]($__nm,$14);
 label=12;break;
 case 12: 
 var $__s_i_i_i=$__nm;
 var $__size__i_i_i=$__nm;
 var $20=HEAP8[($__size__i_i_i)];
 var $and_i_i_i=$20&1;
 var $tobool_i_i_i=(($and_i_i_i<<24)>>24)==0;
 if($tobool_i_i_i){label=14;break;}else{label=13;break;}
 case 13: 
 var $__data__i21_i_i=(($__nm+8)|0);
 var $21=HEAP32[(($__data__i21_i_i)>>2)];
 var $arrayidx_i_i_i77_pre=(($__s_i_i_i+1)|0);
 var $__i_sroa_0_0_ph=$21;var $arrayidx_i_i_i77_pre_phi=$arrayidx_i_i_i77_pre;var $__data__i21_i_i68_pre_phi=$__data__i21_i_i;label=15;break;
 case 14: 
 var $arrayidx_i_i_i=(($__s_i_i_i+1)|0);
 var $__data__i21_i_i68_pre=(($__nm+8)|0);
 var $__i_sroa_0_0_ph=$arrayidx_i_i_i;var $arrayidx_i_i_i77_pre_phi=$arrayidx_i_i_i;var $__data__i21_i_i68_pre_phi=$__data__i21_i_i68_pre;label=15;break;
 case 15: 
 var $__data__i21_i_i68_pre_phi;
 var $arrayidx_i_i_i77_pre_phi;
 var $__i_sroa_0_0_ph;
 var $__sbuf__i=(($__s)|0);
 var $__size__i23_i_i=(($__nm+4)|0);
 var $__i_sroa_0_0=$__i_sroa_0_0_ph;var $22=$20;label=16;break;
 case 16: 
 var $22;
 var $__i_sroa_0_0;
 var $and_i_i_i60=$22&1;
 var $tobool_i_i_i61=(($and_i_i_i60<<24)>>24)==0;
 if($tobool_i_i_i61){var $cond_i_i79=$arrayidx_i_i_i77_pre_phi;label=18;break;}else{label=17;break;}
 case 17: 
 var $23=HEAP32[(($__data__i21_i_i68_pre_phi)>>2)];
 var $cond_i_i79=$23;label=18;break;
 case 18: 
 var $cond_i_i79;
 var $conv_i_i22_i=($22&255);
 var $and_i_i23_i=$conv_i_i22_i&1;
 var $tobool_i_i24_i=($and_i_i23_i|0)==0;
 var $24=HEAP32[(($__size__i23_i_i)>>2)];
 var $shr_i_i_i8=$conv_i_i22_i>>>1;
 var $cond_i34_i=($tobool_i_i24_i?$shr_i_i_i8:$24);
 var $add_ptr_i=(($cond_i_i79+$cond_i34_i)|0);
 var $lnot_i=($__i_sroa_0_0|0)==($add_ptr_i|0);
 if($lnot_i){label=28;break;}else{label=19;break;}
 case 19: 
 var $25=HEAP8[($__i_sroa_0_0)];
 var $26=HEAP32[(($__sbuf__i)>>2)];
 var $tobool_i=($26|0)==0;
 if($tobool_i){label=25;break;}else{label=20;break;}
 case 20: 
 var $__nout__i_i=(($26+24)|0);
 var $27=HEAP32[(($__nout__i_i)>>2)];
 var $__eout__i_i=(($26+28)|0);
 var $28=HEAP32[(($__eout__i_i)>>2)];
 var $cmp_i_i=($27|0)==($28|0);
 if($cmp_i_i){label=21;break;}else{label=22;break;}
 case 21: 
 var $29=$26;
 var $vtable_i_i=HEAP32[(($29)>>2)];
 var $vfn_i_i=(($vtable_i_i+52)|0);
 var $30=HEAP32[(($vfn_i_i)>>2)];
 var $conv_i_i_i33=($25&255);
 var $call2_i_i34=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$30]($26,$conv_i_i_i33) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=23;break; } else { label=27;break; }
 case 22: 
 var $incdec_ptr_i_i=(($27+1)|0);
 HEAP32[(($__nout__i_i)>>2)]=$incdec_ptr_i_i;
 HEAP8[($27)]=$25;
 label=25;break;
 case 23: 
 var $cmp_i6_i=($call2_i_i34|0)==-1;
 if($cmp_i6_i){label=24;break;}else{label=25;break;}
 case 24: 
 HEAP32[(($__sbuf__i)>>2)]=0;
 label=25;break;
 case 25: 
 var $incdec_ptr_i=(($__i_sroa_0_0+1)|0);
 var $_pre=HEAP8[($__size__i_i_i)];
 var $__i_sroa_0_0=$incdec_ptr_i;var $22=$_pre;label=16;break;
 case 26: 
 var $31$0 = ___cxa_find_matching_catch(-1, -1); var $31$1 = tempRet0;
 var $32=$31$0;
 var $33=$31$1;
 var $34=HEAP32[(($__locale__i)>>2)];
 var $35=(($34)|0);
 var $call_i14=__ZNSt3__114__shared_count16__release_sharedEv($35);
 var $ehselector_slot_0=$33;var $exn_slot_0=$32;label=30;break;
 case 27: 
 var $36$0 = ___cxa_find_matching_catch(-1, -1); var $36$1 = tempRet0;
 var $37=$36$0;
 var $38=$36$1;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__nm);
 var $ehselector_slot_0=$38;var $exn_slot_0=$37;label=30;break;
 case 28: 
 var $39=HEAP32[(($__sbuf__i)>>2)];
 var $40=(($agg_result)|0);
 HEAP32[(($40)>>2)]=$39;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__nm);
 label=29;break;
 case 29: 
 STACKTOP=sp;return;
 case 30: 
 var $exn_slot_0;
 var $ehselector_slot_0;
 var $lpad_val$0=$exn_slot_0;
 var $lpad_val$1=0;
 var $lpad_val15$0=$lpad_val$0;
 var $lpad_val15$1=$ehselector_slot_0;
 ___resumeException($lpad_val15$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl($agg_result,$this,$__s,$__iob,$__fl,$__v){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+80)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__s; $__s=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__s)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__fmt=sp;
 var $__nar=(sp)+(8);
 var $__o=(sp)+(24);
 var $__op=(sp)+(48);
 var $__oe=(sp)+(56);
 var $ref_tmp=(sp)+(64);
 var $agg_tmp=(sp)+(72);
 var $0=(($__fmt)|0);
 assert(6 % 1 === 0);HEAP8[($0)]=HEAP8[(4144)];HEAP8[((($0)+(1))|0)]=HEAP8[(4145)];HEAP8[((($0)+(2))|0)]=HEAP8[(4146)];HEAP8[((($0)+(3))|0)]=HEAP8[(4147)];HEAP8[((($0)+(4))|0)]=HEAP8[(4148)];HEAP8[((($0)+(5))|0)]=HEAP8[(4149)];
 var $add_ptr=(($__fmt+1)|0);
 var $__fmtflags__i=(($__iob+4)|0);
 var $1=HEAP32[(($__fmtflags__i)>>2)];
 var $and_i=$1&2048;
 var $tobool_i=($and_i|0)==0;
 if($tobool_i){var $__fmtp_addr_0_i=$add_ptr;label=3;break;}else{label=2;break;}
 case 2: 
 var $incdec_ptr_i=(($__fmt+2)|0);
 HEAP8[($add_ptr)]=43;
 var $__fmtp_addr_0_i=$incdec_ptr_i;label=3;break;
 case 3: 
 var $__fmtp_addr_0_i;
 var $and1_i=$1&512;
 var $tobool2_i=($and1_i|0)==0;
 if($tobool2_i){var $__fmtp_addr_113_i_ph=$__fmtp_addr_0_i;label=5;break;}else{label=4;break;}
 case 4: 
 var $incdec_ptr4_i=(($__fmtp_addr_0_i+1)|0);
 HEAP8[($__fmtp_addr_0_i)]=35;
 var $__fmtp_addr_113_i_ph=$incdec_ptr4_i;label=5;break;
 case 5: 
 var $__fmtp_addr_113_i_ph;
 HEAP8[($__fmtp_addr_113_i_ph)]=108;
 var $scevgep=(($__fmtp_addr_113_i_ph+1)|0);
 var $and9_i=$1&74;
 if(($and9_i|0)==64){ label=6;break;}else if(($and9_i|0)==8){ label=7;break;}else{label=10;break;}
 case 6: 
 HEAP8[($scevgep)]=111;
 label=11;break;
 case 7: 
 var $and14_i=$1&16384;
 var $tobool15_i=($and14_i|0)==0;
 if($tobool15_i){label=9;break;}else{label=8;break;}
 case 8: 
 HEAP8[($scevgep)]=88;
 label=11;break;
 case 9: 
 HEAP8[($scevgep)]=120;
 label=11;break;
 case 10: 
 HEAP8[($scevgep)]=100;
 label=11;break;
 case 11: 
 var $arraydecay2=(($__nar)|0);
 var $2=HEAP8[(15944)];
 var $guard_uninitialized_i=(($2<<24)>>24)==0;
 if($guard_uninitialized_i){label=12;break;}else{label=16;break;}
 case 12: 
 var $3=___cxa_guard_acquire(15944);
 var $tobool_i5=($3|0)==0;
 if($tobool_i5){label=16;break;}else{label=13;break;}
 case 13: 
 var $call_i6=(function() { try { __THREW__ = 0; return _newlocale(2147483647,2960,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=14;break; } else { label=15;break; }
 case 14: 
 HEAP32[((13952)>>2)]=$call_i6;
 label=16;break;
 case 15: 
 var $4$0 = ___cxa_find_matching_catch(-1, -1); var $4$1 = tempRet0;
 ___resumeException($4$0)
 case 16: 
 var $5=HEAP32[((13952)>>2)];
 var $call5=__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($arraydecay2,12,$5,$0,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$__v,tempVarArgs)); STACKTOP=tempVarArgs;
 var $add_ptr7=(($__nar+$call5)|0);
 var $6=HEAP32[(($__fmtflags__i)>>2)];
 var $and_i7=$6&176;
 if(($and_i7|0)==16){ label=17;break;}else if(($and_i7|0)==32){ var $retval_0_i=$add_ptr7;label=23;break;}else{label=22;break;}
 case 17: 
 var $7=HEAP8[($arraydecay2)];
 if((($7<<24)>>24)==45|(($7<<24)>>24)==43){ label=18;break;}else{label=19;break;}
 case 18: 
 var $add_ptr_i=(($__nar+1)|0);
 var $retval_0_i=$add_ptr_i;label=23;break;
 case 19: 
 var $cmp4_i=($call5|0)>1;
 var $cmp7_i=(($7<<24)>>24)==48;
 var $or_cond_i=$cmp4_i&$cmp7_i;
 if($or_cond_i){label=20;break;}else{label=22;break;}
 case 20: 
 var $arrayidx9_i=(($__nar+1)|0);
 var $8=HEAP8[($arrayidx9_i)];
 if((($8<<24)>>24)==120|(($8<<24)>>24)==88){ label=21;break;}else{label=22;break;}
 case 21: 
 var $add_ptr17_i=(($__nar+2)|0);
 var $retval_0_i=$add_ptr17_i;label=23;break;
 case 22: 
 var $retval_0_i=$arraydecay2;label=23;break;
 case 23: 
 var $retval_0_i;
 var $arraydecay11=(($__o)|0);
 __ZNKSt3__18ios_base6getlocEv($ref_tmp,$__iob);
 (function() { try { __THREW__ = 0; return __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($arraydecay2,$retval_0_i,$add_ptr7,$arraydecay11,$__op,$__oe,$ref_tmp) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=24;break; } else { label=25;break; }
 case 24: 
 var $__locale__i11=(($ref_tmp)|0);
 var $9=HEAP32[(($__locale__i11)>>2)];
 var $10=(($9)|0);
 var $call_i12=__ZNSt3__114__shared_count16__release_sharedEv($10);
 var $11=(($__s)|0);
 var $12=HEAP32[(($11)>>2)];
 var $13=(($agg_tmp)|0);
 HEAP32[(($13)>>2)]=$12;
 var $14=HEAP32[(($__op)>>2)];
 var $15=HEAP32[(($__oe)>>2)];
 __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result,$agg_tmp,$arraydecay11,$14,$15,$__iob,$__fl);
 STACKTOP=sp;return;
 case 25: 
 var $16$0 = ___cxa_find_matching_catch(-1, -1); var $16$1 = tempRet0;
 var $__locale__i=(($ref_tmp)|0);
 var $17=HEAP32[(($__locale__i)>>2)];
 var $18=(($17)|0);
 var $call_i=__ZNSt3__114__shared_count16__release_sharedEv($18);
 ___resumeException($16$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__s,$__n,$__l,$__format,varrp){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__va=sp;
 var $arraydecay=(($__va)|0);
 var $arraydecay1=$__va;
 HEAP32[(($arraydecay1)>>2)]=varrp;HEAP32[((($arraydecay1)+(4))>>2)]=0;
 var $call=_uselocale($__l);
 var $call3=_vsnprintf($__s,$__n,$__format,$arraydecay);
 var $tobool_i_i_i41=($call|0)==0;
 if($tobool_i_i_i41){label=4;break;}else{label=2;break;}
 case 2: 
 var $call6_i_i_i46=(function() { try { __THREW__ = 0; return _uselocale($call) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=4;break; } else { label=3;break; }
 case 3: 
 var $0$0 = ___cxa_find_matching_catch(-1, -1,0); var $0$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 4: 
 STACKTOP=sp;return $call3;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nb,$__np,$__ne,$__ob,$__op,$__oe,$__loc){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+48)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__p_i_i_i64=sp;
 var $__p_i_i_i=(sp)+(16);
 var $__grouping=(sp)+(32);
 var $__locale__i=(($__loc)|0);
 var $0=HEAP32[(($__locale__i)>>2)];
 var $1=$__p_i_i_i;
 var $2=HEAP32[((15384)>>2)];
 var $cmp_i_i_i=($2|0)==-1;
 if($cmp_i_i_i){label=3;break;}else{label=2;break;}
 case 2: 
 var $ref_tmp_i_sroa_0_0__idx_i_i=(($__p_i_i_i)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i)>>2)]=15384;
 var $ref_tmp_i_sroa_1_4__idx6_i_i=(($__p_i_i_i+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i=(($__p_i_i_i+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i)>>2)]=0;
 __ZNSt3__111__call_onceERVmPvPFvS2_E(15384,$1,276);
 label=3;break;
 case 3: 
 var $3=HEAP32[((15388)>>2)];
 var $sub_i_i=((($3)-(1))|0);
 var $__end__i_i_i_i=(($0+12)|0);
 var $4=HEAP32[(($__end__i_i_i_i)>>2)];
 var $__begin__i_i_i_i=(($0+8)|0);
 var $5=HEAP32[(($__begin__i_i_i_i)>>2)];
 var $sub_ptr_lhs_cast_i_i_i_i=$4;
 var $sub_ptr_rhs_cast_i_i_i_i=$5;
 var $sub_ptr_sub_i_i_i_i=((($sub_ptr_lhs_cast_i_i_i_i)-($sub_ptr_rhs_cast_i_i_i_i))|0);
 var $sub_ptr_div_i_i_i_i=$sub_ptr_sub_i_i_i_i>>2;
 var $cmp_i_i1_i=($sub_ptr_div_i_i_i_i>>>0)>($sub_i_i>>>0);
 if($cmp_i_i1_i){label=4;break;}else{label=5;break;}
 case 4: 
 var $arrayidx_i_i_i_i=(($5+($sub_i_i<<2))|0);
 var $6=HEAP32[(($arrayidx_i_i_i_i)>>2)];
 var $tobool_i_i_i63=($6|0)==0;
 if($tobool_i_i_i63){label=5;break;}else{label=6;break;}
 case 5: 
 var $exception_i_i=___cxa_allocate_exception(4);
 var $7=$exception_i_i;
 __ZNSt8bad_castC2Ev($7);
 ___cxa_throw($exception_i_i,10264,(376));
 throw "Reached an unreachable!";
 case 6: 
 var $8=$6;
 var $9=HEAP32[(($__locale__i)>>2)];
 var $10=$__p_i_i_i64;
 var $11=HEAP32[((15000)>>2)];
 var $cmp_i_i_i66=($11|0)==-1;
 if($cmp_i_i_i66){label=8;break;}else{label=7;break;}
 case 7: 
 var $ref_tmp_i_sroa_0_0__idx_i_i67=(($__p_i_i_i64)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i67)>>2)]=15000;
 var $ref_tmp_i_sroa_1_4__idx6_i_i68=(($__p_i_i_i64+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i68)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i69=(($__p_i_i_i64+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i69)>>2)]=0;
 __ZNSt3__111__call_onceERVmPvPFvS2_E(15000,$10,276);
 label=8;break;
 case 8: 
 var $12=HEAP32[((15004)>>2)];
 var $sub_i_i71=((($12)-(1))|0);
 var $__end__i_i_i_i72=(($9+12)|0);
 var $13=HEAP32[(($__end__i_i_i_i72)>>2)];
 var $__begin__i_i_i_i73=(($9+8)|0);
 var $14=HEAP32[(($__begin__i_i_i_i73)>>2)];
 var $sub_ptr_lhs_cast_i_i_i_i74=$13;
 var $sub_ptr_rhs_cast_i_i_i_i75=$14;
 var $sub_ptr_sub_i_i_i_i76=((($sub_ptr_lhs_cast_i_i_i_i74)-($sub_ptr_rhs_cast_i_i_i_i75))|0);
 var $sub_ptr_div_i_i_i_i77=$sub_ptr_sub_i_i_i_i76>>2;
 var $cmp_i_i1_i78=($sub_ptr_div_i_i_i_i77>>>0)>($sub_i_i71>>>0);
 if($cmp_i_i1_i78){label=9;break;}else{label=10;break;}
 case 9: 
 var $arrayidx_i_i_i_i80=(($14+($sub_i_i71<<2))|0);
 var $15=HEAP32[(($arrayidx_i_i_i_i80)>>2)];
 var $tobool_i_i_i81=($15|0)==0;
 if($tobool_i_i_i81){label=10;break;}else{label=11;break;}
 case 10: 
 var $exception_i_i83=___cxa_allocate_exception(4);
 var $16=$exception_i_i83;
 __ZNSt8bad_castC2Ev($16);
 ___cxa_throw($exception_i_i83,10264,(376));
 throw "Reached an unreachable!";
 case 11: 
 var $17=$15;
 var $18=$15;
 var $vtable_i=HEAP32[(($18)>>2)];
 var $vfn_i=(($vtable_i+20)|0);
 var $19=HEAP32[(($vfn_i)>>2)];
 FUNCTION_TABLE[$19]($__grouping,$17);
 var $__s_i_i_i=$__grouping;
 var $__size__i_i_i=$__grouping;
 var $20=HEAP8[($__size__i_i_i)];
 var $conv_i_i_i=($20&255);
 var $and_i_i_i=$conv_i_i_i&1;
 var $tobool_i_i_i=($and_i_i_i|0)==0;
 if($tobool_i_i_i){label=13;break;}else{label=12;break;}
 case 12: 
 var $__size__i23_i_i=(($__grouping+4)|0);
 var $21=HEAP32[(($__size__i23_i_i)>>2)];
 var $cond_i_i=$21;label=14;break;
 case 13: 
 var $shr_i_i_i61=$conv_i_i_i>>>1;
 var $cond_i_i=$shr_i_i_i61;label=14;break;
 case 14: 
 var $cond_i_i;
 var $cmp_i=($cond_i_i|0)==0;
 if($cmp_i){label=15;break;}else{label=20;break;}
 case 15: 
 var $22=$6;
 var $vtable_i86=HEAP32[(($22)>>2)];
 var $vfn_i87=(($vtable_i86+32)|0);
 var $23=HEAP32[(($vfn_i87)>>2)];
 var $call_i8889=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$23]($8,$__nb,$__ne,$__ob) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=16;break; } else { label=18;break; }
 case 16: 
 var $sub_ptr_lhs_cast=$__ne;
 var $sub_ptr_rhs_cast=$__nb;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $add_ptr=(($__ob+$sub_ptr_sub)|0);
 HEAP32[(($__oe)>>2)]=$add_ptr;
 label=43;break;
 case 17: 
 var $lpad_loopexit90$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_loopexit90$1 = tempRet0;
 var $lpad_phi$1=$lpad_loopexit90$1;var $lpad_phi$0=$lpad_loopexit90$0;label=19;break;
 case 18: 
 var $lpad_nonloopexit91$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_nonloopexit91$1 = tempRet0;
 var $lpad_phi$1=$lpad_nonloopexit91$1;var $lpad_phi$0=$lpad_nonloopexit91$0;label=19;break;
 case 19: 
 var $lpad_phi$0;
 var $lpad_phi$1;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 ___resumeException($lpad_phi$0)
 case 20: 
 HEAP32[(($__oe)>>2)]=$__ob;
 var $24=HEAP8[($__nb)];
 if((($24<<24)>>24)==45|(($24<<24)>>24)==43){ label=21;break;}else{var $__nf_0=$__nb;label=23;break;}
 case 21: 
 var $25=$6;
 var $vtable_i93=HEAP32[(($25)>>2)];
 var $vfn_i94=(($vtable_i93+28)|0);
 var $26=HEAP32[(($vfn_i94)>>2)];
 var $call_i9596=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$26]($8,$24) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=22;break; } else { label=18;break; }
 case 22: 
 var $incdec_ptr=(($__nb+1)|0);
 var $27=HEAP32[(($__oe)>>2)];
 var $incdec_ptr9=(($27+1)|0);
 HEAP32[(($__oe)>>2)]=$incdec_ptr9;
 HEAP8[($27)]=$call_i9596;
 var $__nf_0=$incdec_ptr;label=23;break;
 case 23: 
 var $__nf_0;
 var $sub_ptr_lhs_cast10=$__ne;
 var $sub_ptr_rhs_cast11=$__nf_0;
 var $sub_ptr_sub12=((($sub_ptr_lhs_cast10)-($sub_ptr_rhs_cast11))|0);
 var $cmp13=($sub_ptr_sub12|0)>1;
 if($cmp13){label=24;break;}else{var $__nf_1=$__nf_0;label=29;break;}
 case 24: 
 var $28=HEAP8[($__nf_0)];
 var $cmp15=(($28<<24)>>24)==48;
 if($cmp15){label=25;break;}else{var $__nf_1=$__nf_0;label=29;break;}
 case 25: 
 var $arrayidx17=(($__nf_0+1)|0);
 var $29=HEAP8[($arrayidx17)];
 if((($29<<24)>>24)==120|(($29<<24)>>24)==88){ label=26;break;}else{var $__nf_1=$__nf_0;label=29;break;}
 case 26: 
 var $30=$6;
 var $vtable_i101=HEAP32[(($30)>>2)];
 var $vfn_i102=(($vtable_i101+28)|0);
 var $31=HEAP32[(($vfn_i102)>>2)];
 var $call_i103104=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$31]($8,48) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=27;break; } else { label=18;break; }
 case 27: 
 var $32=HEAP32[(($__oe)>>2)];
 var $incdec_ptr28=(($32+1)|0);
 HEAP32[(($__oe)>>2)]=$incdec_ptr28;
 HEAP8[($32)]=$call_i103104;
 var $33=HEAP8[($arrayidx17)];
 var $vtable_i109=HEAP32[(($30)>>2)];
 var $vfn_i110=(($vtable_i109+28)|0);
 var $34=HEAP32[(($vfn_i110)>>2)];
 var $call_i111112=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$34]($8,$33) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=28;break; } else { label=18;break; }
 case 28: 
 var $incdec_ptr29=(($__nf_0+2)|0);
 var $35=HEAP32[(($__oe)>>2)];
 var $incdec_ptr32=(($35+1)|0);
 HEAP32[(($__oe)>>2)]=$incdec_ptr32;
 HEAP8[($35)]=$call_i111112;
 var $__nf_1=$incdec_ptr29;label=29;break;
 case 29: 
 var $__nf_1;
 var $cmp_i_i128=($__nf_1|0)==($__ne|0);
 if($cmp_i_i128){label=32;break;}else{label=30;break;}
 case 30: 
 var $incdec_ptr_i_i13096=((($__ne)-(1))|0);
 var $cmp1_i_i13197=($__nf_1>>>0)<($incdec_ptr_i_i13096>>>0);
 if($cmp1_i_i13197){var $__first_addr_i_i120_098=$__nf_1;var $incdec_ptr_i_i13099=$incdec_ptr_i_i13096;label=31;break;}else{label=32;break;}
 case 31: 
 var $incdec_ptr_i_i13099;
 var $__first_addr_i_i120_098;
 var $36=HEAP8[($__first_addr_i_i120_098)];
 var $37=HEAP8[($incdec_ptr_i_i13099)];
 HEAP8[($__first_addr_i_i120_098)]=$37;
 HEAP8[($incdec_ptr_i_i13099)]=$36;
 var $incdec_ptr2_i_i133=(($__first_addr_i_i120_098+1)|0);
 var $incdec_ptr_i_i130=((($incdec_ptr_i_i13099)-(1))|0);
 var $cmp1_i_i131=($incdec_ptr2_i_i133>>>0)<($incdec_ptr_i_i130>>>0);
 if($cmp1_i_i131){var $__first_addr_i_i120_098=$incdec_ptr2_i_i133;var $incdec_ptr_i_i13099=$incdec_ptr_i_i130;label=31;break;}else{label=32;break;}
 case 32: 
 var $38=$15;
 var $vtable_i223=HEAP32[(($38)>>2)];
 var $vfn_i224=(($vtable_i223+16)|0);
 var $39=HEAP32[(($vfn_i224)>>2)];
 var $call_i225226=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$39]($17) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=33;break; } else { label=18;break; }
 case 33: 
 var $cmp3792=($__nf_1>>>0)<($__ne>>>0);
 if($cmp3792){label=34;break;}else{label=40;break;}
 case 34: 
 var $arrayidx_i_i_i216=(($__s_i_i_i+1)|0);
 var $40=$6;
 var $__size__i23_i=(($__grouping+4)|0);
 var $__data__i21_i_i=(($__grouping+8)|0);
 var $__dc_093=0;var $__dg_094=0;var $__p_095=$__nf_1;label=35;break;
 case 35: 
 var $__p_095;
 var $__dg_094;
 var $__dc_093;
 var $41=HEAP8[($__size__i_i_i)];
 var $and_i_i_i199=$41&1;
 var $tobool_i_i_i200=(($and_i_i_i199<<24)>>24)==0;
 var $42=HEAP32[(($__data__i21_i_i)>>2)];
 var $arrayidx_i_i_i216_=($tobool_i_i_i200?$arrayidx_i_i_i216:$42);
 var $add_ptr_i219=(($arrayidx_i_i_i216_+$__dg_094)|0);
 var $43=HEAP8[($add_ptr_i219)];
 var $cmp41=(($43<<24)>>24)==0;
 if($cmp41){var $__dg_1=$__dg_094;var $__dc_1=$__dc_093;label=38;break;}else{label=36;break;}
 case 36: 
 var $44=HEAP32[(($__data__i21_i_i)>>2)];
 var $arrayidx_i_i_i216_100=($tobool_i_i_i200?$arrayidx_i_i_i216:$44);
 var $add_ptr_i=(($arrayidx_i_i_i216_100+$__dg_094)|0);
 var $45=HEAP8[($add_ptr_i)];
 var $conv45=(($45<<24)>>24);
 var $cmp46=($__dc_093|0)==($conv45|0);
 if($cmp46){label=37;break;}else{var $__dg_1=$__dg_094;var $__dc_1=$__dc_093;label=38;break;}
 case 37: 
 var $46=HEAP32[(($__oe)>>2)];
 var $incdec_ptr48=(($46+1)|0);
 HEAP32[(($__oe)>>2)]=$incdec_ptr48;
 HEAP8[($46)]=$call_i225226;
 var $47=HEAP8[($__size__i_i_i)];
 var $conv_i_i=($47&255);
 var $and_i_i=$conv_i_i&1;
 var $tobool_i_i=($and_i_i|0)==0;
 var $48=HEAP32[(($__size__i23_i)>>2)];
 var $shr_i_i62=$conv_i_i>>>1;
 var $cond_i=($tobool_i_i?$shr_i_i62:$48);
 var $sub=((($cond_i)-(1))|0);
 var $cmp50=($__dg_094>>>0)<($sub>>>0);
 var $inc=($cmp50&1);
 var $inc___dg_0=((($inc)+($__dg_094))|0);
 var $__dg_1=$inc___dg_0;var $__dc_1=0;label=38;break;
 case 38: 
 var $__dc_1;
 var $__dg_1;
 var $49=HEAP8[($__p_095)];
 var $vtable_i80=HEAP32[(($40)>>2)];
 var $vfn_i81=(($vtable_i80+28)|0);
 var $50=HEAP32[(($vfn_i81)>>2)];
 var $call_i8283=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$50]($8,$49) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=39;break; } else { label=17;break; }
 case 39: 
 var $51=HEAP32[(($__oe)>>2)];
 var $incdec_ptr56=(($51+1)|0);
 HEAP32[(($__oe)>>2)]=$incdec_ptr56;
 HEAP8[($51)]=$call_i8283;
 var $inc57=((($__dc_1)+(1))|0);
 var $incdec_ptr58=(($__p_095+1)|0);
 var $cmp37=($incdec_ptr58>>>0)<($__ne>>>0);
 if($cmp37){var $__dc_093=$inc57;var $__dg_094=$__dg_1;var $__p_095=$incdec_ptr58;label=35;break;}else{label=40;break;}
 case 40: 
 var $sub_ptr_lhs_cast59=$__nf_1;
 var $sub_ptr_rhs_cast60=$__nb;
 var $sub_ptr_sub61=((($sub_ptr_lhs_cast59)-($sub_ptr_rhs_cast60))|0);
 var $add_ptr62=(($__ob+$sub_ptr_sub61)|0);
 var $52=HEAP32[(($__oe)>>2)];
 var $cmp_i_i=($add_ptr62|0)==($52|0);
 if($cmp_i_i){label=43;break;}else{label=41;break;}
 case 41: 
 var $incdec_ptr_i_i86=((($52)-(1))|0);
 var $cmp1_i_i87=($add_ptr62>>>0)<($incdec_ptr_i_i86>>>0);
 if($cmp1_i_i87){var $__first_addr_i_i_088=$add_ptr62;var $incdec_ptr_i_i89=$incdec_ptr_i_i86;label=42;break;}else{label=43;break;}
 case 42: 
 var $incdec_ptr_i_i89;
 var $__first_addr_i_i_088;
 var $53=HEAP8[($__first_addr_i_i_088)];
 var $54=HEAP8[($incdec_ptr_i_i89)];
 HEAP8[($__first_addr_i_i_088)]=$54;
 HEAP8[($incdec_ptr_i_i89)]=$53;
 var $incdec_ptr2_i_i=(($__first_addr_i_i_088+1)|0);
 var $incdec_ptr_i_i=((($incdec_ptr_i_i89)-(1))|0);
 var $cmp1_i_i=($incdec_ptr2_i_i>>>0)<($incdec_ptr_i_i>>>0);
 if($cmp1_i_i){var $__first_addr_i_i_088=$incdec_ptr2_i_i;var $incdec_ptr_i_i89=$incdec_ptr_i_i;label=42;break;}else{label=43;break;}
 case 43: 
 var $cmp65=($__np|0)==($__ne|0);
 if($cmp65){label=44;break;}else{label=45;break;}
 case 44: 
 var $55=HEAP32[(($__oe)>>2)];
 var $storemerge=$55;label=46;break;
 case 45: 
 var $sub_ptr_lhs_cast68=$__np;
 var $sub_ptr_rhs_cast69=$__nb;
 var $sub_ptr_sub70=((($sub_ptr_lhs_cast68)-($sub_ptr_rhs_cast69))|0);
 var $add_ptr71=(($__ob+$sub_ptr_sub70)|0);
 var $storemerge=$add_ptr71;label=46;break;
 case 46: 
 var $storemerge;
 HEAP32[(($__op)>>2)]=$storemerge;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 STACKTOP=sp;return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result,$__s,$__ob,$__op,$__oe,$__iob,$__fl){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__s; $__s=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__s)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__sp=sp;
 var $__sbuf_=(($__s)|0);
 var $0=HEAP32[(($__sbuf_)>>2)];
 var $cmp=($0|0)==0;
 if($cmp){label=2;break;}else{label=3;break;}
 case 2: 
 var $1=(($agg_result)|0);
 HEAP32[(($1)>>2)]=0;
 label=19;break;
 case 3: 
 var $sub_ptr_lhs_cast=$__oe;
 var $sub_ptr_rhs_cast=$__ob;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $__width__i=(($__iob+12)|0);
 var $2=HEAP32[(($__width__i)>>2)];
 var $cmp1=($2|0)>($sub_ptr_sub|0);
 var $sub=((($2)-($sub_ptr_sub))|0);
 var $__ns_0=($cmp1?$sub:0);
 var $sub_ptr_lhs_cast4=$__op;
 var $sub_ptr_sub6=((($sub_ptr_lhs_cast4)-($sub_ptr_rhs_cast))|0);
 var $cmp7=($sub_ptr_sub6|0)>0;
 if($cmp7){label=4;break;}else{label=6;break;}
 case 4: 
 var $3=$0;
 var $vtable_i49=HEAP32[(($3)>>2)];
 var $vfn_i50=(($vtable_i49+48)|0);
 var $4=HEAP32[(($vfn_i50)>>2)];
 var $call_i51=FUNCTION_TABLE[$4]($0,$__ob,$sub_ptr_sub6);
 var $cmp11=($call_i51|0)==($sub_ptr_sub6|0);
 if($cmp11){label=6;break;}else{label=5;break;}
 case 5: 
 HEAP32[(($__sbuf_)>>2)]=0;
 var $5=(($agg_result)|0);
 HEAP32[(($5)>>2)]=0;
 label=19;break;
 case 6: 
 var $cmp16=($__ns_0|0)>0;
 if($cmp16){label=7;break;}else{label=15;break;}
 case 7: 
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($__sp,$__ns_0,$__fl);
 var $__size__i_i_i=$__sp;
 var $6=HEAP8[($__size__i_i_i)];
 var $and_i_i_i=$6&1;
 var $tobool_i_i_i=(($and_i_i_i<<24)>>24)==0;
 if($tobool_i_i_i){label=9;break;}else{label=8;break;}
 case 8: 
 var $__data__i21_i_i=(($__sp+8)|0);
 var $7=HEAP32[(($__data__i21_i_i)>>2)];
 var $cond_i_i=$7;label=10;break;
 case 9: 
 var $__s_i_i_i=$__sp;
 var $arrayidx_i_i_i=(($__s_i_i_i+1)|0);
 var $cond_i_i=$arrayidx_i_i_i;label=10;break;
 case 10: 
 var $cond_i_i;
 var $8=$0;
 var $vtable_i70=HEAP32[(($8)>>2)];
 var $vfn_i71=(($vtable_i70+48)|0);
 var $9=HEAP32[(($vfn_i71)>>2)];
 var $call_i7273=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$9]($0,$cond_i_i,$__ns_0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=11;break; } else { label=13;break; }
 case 11: 
 var $cmp21=($call_i7273|0)==($__ns_0|0);
 if($cmp21){label=14;break;}else{label=12;break;}
 case 12: 
 HEAP32[(($__sbuf_)>>2)]=0;
 var $10=(($agg_result)|0);
 HEAP32[(($10)>>2)]=0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__sp);
 label=19;break;
 case 13: 
 var $11$0 = ___cxa_find_matching_catch(-1, -1); var $11$1 = tempRet0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__sp);
 ___resumeException($11$0)
 case 14: 
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__sp);
 label=15;break;
 case 15: 
 var $sub_ptr_sub28=((($sub_ptr_lhs_cast)-($sub_ptr_lhs_cast4))|0);
 var $cmp29=($sub_ptr_sub28|0)>0;
 if($cmp29){label=16;break;}else{label=18;break;}
 case 16: 
 var $12=$0;
 var $vtable_i=HEAP32[(($12)>>2)];
 var $vfn_i=(($vtable_i+48)|0);
 var $13=HEAP32[(($vfn_i)>>2)];
 var $call_i=FUNCTION_TABLE[$13]($0,$__op,$sub_ptr_sub28);
 var $cmp33=($call_i|0)==($sub_ptr_sub28|0);
 if($cmp33){label=18;break;}else{label=17;break;}
 case 17: 
 HEAP32[(($__sbuf_)>>2)]=0;
 var $14=(($agg_result)|0);
 HEAP32[(($14)>>2)]=0;
 label=19;break;
 case 18: 
 HEAP32[(($__width__i)>>2)]=0;
 var $15=(($agg_result)|0);
 HEAP32[(($15)>>2)]=$0;
 label=19;break;
 case 19: 
 STACKTOP=sp;return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx($agg_result,$this,$__s,$__iob,$__fl,$__v$0,$__v$1){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+112)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__s; $__s=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__s)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__fmt=sp;
 var $__nar=(sp)+(8);
 var $__o=(sp)+(32);
 var $__op=(sp)+(80);
 var $__oe=(sp)+(88);
 var $ref_tmp=(sp)+(96);
 var $agg_tmp=(sp)+(104);
 var $$etemp$0$0=37;
 var $$etemp$0$1=0;
 var $st$1$0=(($__fmt)|0);
 HEAP32[(($st$1$0)>>2)]=$$etemp$0$0;
 var $st$2$1=(($__fmt+4)|0);
 HEAP32[(($st$2$1)>>2)]=$$etemp$0$1;
 var $arraydecay=$__fmt;
 var $add_ptr=(($arraydecay+1)|0);
 var $__fmtflags__i=(($__iob+4)|0);
 var $0=HEAP32[(($__fmtflags__i)>>2)];
 var $and_i=$0&2048;
 var $tobool_i=($and_i|0)==0;
 if($tobool_i){var $__fmtp_addr_0_i=$add_ptr;label=3;break;}else{label=2;break;}
 case 2: 
 var $incdec_ptr_i=(($arraydecay+2)|0);
 HEAP8[($add_ptr)]=43;
 var $__fmtp_addr_0_i=$incdec_ptr_i;label=3;break;
 case 3: 
 var $__fmtp_addr_0_i;
 var $and1_i=$0&512;
 var $tobool2_i=($and1_i|0)==0;
 if($tobool2_i){var $__fmtp_addr_113_i_ph=$__fmtp_addr_0_i;label=5;break;}else{label=4;break;}
 case 4: 
 var $incdec_ptr4_i=(($__fmtp_addr_0_i+1)|0);
 HEAP8[($__fmtp_addr_0_i)]=35;
 var $__fmtp_addr_113_i_ph=$incdec_ptr4_i;label=5;break;
 case 5: 
 var $__fmtp_addr_113_i_ph;
 var $incdec_ptr8_i=(($__fmtp_addr_113_i_ph+1)|0);
 HEAP8[($__fmtp_addr_113_i_ph)]=108;
 HEAP8[($incdec_ptr8_i)]=108;
 var $scevgep=(($__fmtp_addr_113_i_ph+2)|0);
 var $and9_i=$0&74;
 if(($and9_i|0)==64){ label=6;break;}else if(($and9_i|0)==8){ label=7;break;}else{label=10;break;}
 case 6: 
 HEAP8[($scevgep)]=111;
 label=11;break;
 case 7: 
 var $and14_i=$0&16384;
 var $tobool15_i=($and14_i|0)==0;
 if($tobool15_i){label=9;break;}else{label=8;break;}
 case 8: 
 HEAP8[($scevgep)]=88;
 label=11;break;
 case 9: 
 HEAP8[($scevgep)]=120;
 label=11;break;
 case 10: 
 HEAP8[($scevgep)]=100;
 label=11;break;
 case 11: 
 var $arraydecay2=(($__nar)|0);
 var $1=HEAP8[(15944)];
 var $guard_uninitialized_i=(($1<<24)>>24)==0;
 if($guard_uninitialized_i){label=12;break;}else{label=16;break;}
 case 12: 
 var $2=___cxa_guard_acquire(15944);
 var $tobool_i5=($2|0)==0;
 if($tobool_i5){label=16;break;}else{label=13;break;}
 case 13: 
 var $call_i6=(function() { try { __THREW__ = 0; return _newlocale(2147483647,2960,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=14;break; } else { label=15;break; }
 case 14: 
 HEAP32[((13952)>>2)]=$call_i6;
 label=16;break;
 case 15: 
 var $3$0 = ___cxa_find_matching_catch(-1, -1); var $3$1 = tempRet0;
 ___resumeException($3$0)
 case 16: 
 var $4=HEAP32[((13952)>>2)];
 var $call5=__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($arraydecay2,22,$4,$arraydecay,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$__v$0,HEAP32[(((tempVarArgs)+(8))>>2)]=$__v$1,tempVarArgs)); STACKTOP=tempVarArgs;
 var $add_ptr7=(($__nar+$call5)|0);
 var $5=HEAP32[(($__fmtflags__i)>>2)];
 var $and_i7=$5&176;
 if(($and_i7|0)==16){ label=17;break;}else if(($and_i7|0)==32){ var $retval_0_i=$add_ptr7;label=23;break;}else{label=22;break;}
 case 17: 
 var $6=HEAP8[($arraydecay2)];
 if((($6<<24)>>24)==45|(($6<<24)>>24)==43){ label=18;break;}else{label=19;break;}
 case 18: 
 var $add_ptr_i=(($__nar+1)|0);
 var $retval_0_i=$add_ptr_i;label=23;break;
 case 19: 
 var $cmp4_i=($call5|0)>1;
 var $cmp7_i=(($6<<24)>>24)==48;
 var $or_cond_i=$cmp4_i&$cmp7_i;
 if($or_cond_i){label=20;break;}else{label=22;break;}
 case 20: 
 var $arrayidx9_i=(($__nar+1)|0);
 var $7=HEAP8[($arrayidx9_i)];
 if((($7<<24)>>24)==120|(($7<<24)>>24)==88){ label=21;break;}else{label=22;break;}
 case 21: 
 var $add_ptr17_i=(($__nar+2)|0);
 var $retval_0_i=$add_ptr17_i;label=23;break;
 case 22: 
 var $retval_0_i=$arraydecay2;label=23;break;
 case 23: 
 var $retval_0_i;
 var $arraydecay11=(($__o)|0);
 __ZNKSt3__18ios_base6getlocEv($ref_tmp,$__iob);
 (function() { try { __THREW__ = 0; return __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($arraydecay2,$retval_0_i,$add_ptr7,$arraydecay11,$__op,$__oe,$ref_tmp) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=24;break; } else { label=25;break; }
 case 24: 
 var $__locale__i11=(($ref_tmp)|0);
 var $8=HEAP32[(($__locale__i11)>>2)];
 var $9=(($8)|0);
 var $call_i12=__ZNSt3__114__shared_count16__release_sharedEv($9);
 var $10=(($__s)|0);
 var $11=HEAP32[(($10)>>2)];
 var $12=(($agg_tmp)|0);
 HEAP32[(($12)>>2)]=$11;
 var $13=HEAP32[(($__op)>>2)];
 var $14=HEAP32[(($__oe)>>2)];
 __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result,$agg_tmp,$arraydecay11,$13,$14,$__iob,$__fl);
 STACKTOP=sp;return;
 case 25: 
 var $15$0 = ___cxa_find_matching_catch(-1, -1); var $15$1 = tempRet0;
 var $__locale__i=(($ref_tmp)|0);
 var $16=HEAP32[(($__locale__i)>>2)];
 var $17=(($16)|0);
 var $call_i=__ZNSt3__114__shared_count16__release_sharedEv($17);
 ___resumeException($15$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm($agg_result,$this,$__s,$__iob,$__fl,$__v){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+80)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__s; $__s=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__s)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__fmt=sp;
 var $__nar=(sp)+(8);
 var $__o=(sp)+(24);
 var $__op=(sp)+(48);
 var $__oe=(sp)+(56);
 var $ref_tmp=(sp)+(64);
 var $agg_tmp=(sp)+(72);
 var $0=(($__fmt)|0);
 assert(6 % 1 === 0);HEAP8[($0)]=HEAP8[(4144)];HEAP8[((($0)+(1))|0)]=HEAP8[(4145)];HEAP8[((($0)+(2))|0)]=HEAP8[(4146)];HEAP8[((($0)+(3))|0)]=HEAP8[(4147)];HEAP8[((($0)+(4))|0)]=HEAP8[(4148)];HEAP8[((($0)+(5))|0)]=HEAP8[(4149)];
 var $add_ptr=(($__fmt+1)|0);
 var $__fmtflags__i=(($__iob+4)|0);
 var $1=HEAP32[(($__fmtflags__i)>>2)];
 var $and_i=$1&2048;
 var $tobool_i=($and_i|0)==0;
 if($tobool_i){var $__fmtp_addr_0_i=$add_ptr;label=3;break;}else{label=2;break;}
 case 2: 
 var $incdec_ptr_i=(($__fmt+2)|0);
 HEAP8[($add_ptr)]=43;
 var $__fmtp_addr_0_i=$incdec_ptr_i;label=3;break;
 case 3: 
 var $__fmtp_addr_0_i;
 var $and1_i=$1&512;
 var $tobool2_i=($and1_i|0)==0;
 if($tobool2_i){var $__fmtp_addr_113_i_ph=$__fmtp_addr_0_i;label=5;break;}else{label=4;break;}
 case 4: 
 var $incdec_ptr4_i=(($__fmtp_addr_0_i+1)|0);
 HEAP8[($__fmtp_addr_0_i)]=35;
 var $__fmtp_addr_113_i_ph=$incdec_ptr4_i;label=5;break;
 case 5: 
 var $__fmtp_addr_113_i_ph;
 HEAP8[($__fmtp_addr_113_i_ph)]=108;
 var $scevgep=(($__fmtp_addr_113_i_ph+1)|0);
 var $and9_i=$1&74;
 if(($and9_i|0)==64){ label=6;break;}else if(($and9_i|0)==8){ label=7;break;}else{label=10;break;}
 case 6: 
 HEAP8[($scevgep)]=111;
 label=11;break;
 case 7: 
 var $and14_i=$1&16384;
 var $tobool15_i=($and14_i|0)==0;
 if($tobool15_i){label=9;break;}else{label=8;break;}
 case 8: 
 HEAP8[($scevgep)]=88;
 label=11;break;
 case 9: 
 HEAP8[($scevgep)]=120;
 label=11;break;
 case 10: 
 HEAP8[($scevgep)]=117;
 label=11;break;
 case 11: 
 var $arraydecay2=(($__nar)|0);
 var $2=HEAP8[(15944)];
 var $guard_uninitialized_i=(($2<<24)>>24)==0;
 if($guard_uninitialized_i){label=12;break;}else{label=16;break;}
 case 12: 
 var $3=___cxa_guard_acquire(15944);
 var $tobool_i5=($3|0)==0;
 if($tobool_i5){label=16;break;}else{label=13;break;}
 case 13: 
 var $call_i6=(function() { try { __THREW__ = 0; return _newlocale(2147483647,2960,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=14;break; } else { label=15;break; }
 case 14: 
 HEAP32[((13952)>>2)]=$call_i6;
 label=16;break;
 case 15: 
 var $4$0 = ___cxa_find_matching_catch(-1, -1); var $4$1 = tempRet0;
 ___resumeException($4$0)
 case 16: 
 var $5=HEAP32[((13952)>>2)];
 var $call5=__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($arraydecay2,12,$5,$0,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$__v,tempVarArgs)); STACKTOP=tempVarArgs;
 var $add_ptr7=(($__nar+$call5)|0);
 var $6=HEAP32[(($__fmtflags__i)>>2)];
 var $and_i7=$6&176;
 if(($and_i7|0)==16){ label=17;break;}else if(($and_i7|0)==32){ var $retval_0_i=$add_ptr7;label=23;break;}else{label=22;break;}
 case 17: 
 var $7=HEAP8[($arraydecay2)];
 if((($7<<24)>>24)==45|(($7<<24)>>24)==43){ label=18;break;}else{label=19;break;}
 case 18: 
 var $add_ptr_i=(($__nar+1)|0);
 var $retval_0_i=$add_ptr_i;label=23;break;
 case 19: 
 var $cmp4_i=($call5|0)>1;
 var $cmp7_i=(($7<<24)>>24)==48;
 var $or_cond_i=$cmp4_i&$cmp7_i;
 if($or_cond_i){label=20;break;}else{label=22;break;}
 case 20: 
 var $arrayidx9_i=(($__nar+1)|0);
 var $8=HEAP8[($arrayidx9_i)];
 if((($8<<24)>>24)==120|(($8<<24)>>24)==88){ label=21;break;}else{label=22;break;}
 case 21: 
 var $add_ptr17_i=(($__nar+2)|0);
 var $retval_0_i=$add_ptr17_i;label=23;break;
 case 22: 
 var $retval_0_i=$arraydecay2;label=23;break;
 case 23: 
 var $retval_0_i;
 var $arraydecay11=(($__o)|0);
 __ZNKSt3__18ios_base6getlocEv($ref_tmp,$__iob);
 (function() { try { __THREW__ = 0; return __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($arraydecay2,$retval_0_i,$add_ptr7,$arraydecay11,$__op,$__oe,$ref_tmp) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=24;break; } else { label=25;break; }
 case 24: 
 var $__locale__i11=(($ref_tmp)|0);
 var $9=HEAP32[(($__locale__i11)>>2)];
 var $10=(($9)|0);
 var $call_i12=__ZNSt3__114__shared_count16__release_sharedEv($10);
 var $11=(($__s)|0);
 var $12=HEAP32[(($11)>>2)];
 var $13=(($agg_tmp)|0);
 HEAP32[(($13)>>2)]=$12;
 var $14=HEAP32[(($__op)>>2)];
 var $15=HEAP32[(($__oe)>>2)];
 __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result,$agg_tmp,$arraydecay11,$14,$15,$__iob,$__fl);
 STACKTOP=sp;return;
 case 25: 
 var $16$0 = ___cxa_find_matching_catch(-1, -1); var $16$1 = tempRet0;
 var $__locale__i=(($ref_tmp)|0);
 var $17=HEAP32[(($__locale__i)>>2)];
 var $18=(($17)|0);
 var $call_i=__ZNSt3__114__shared_count16__release_sharedEv($18);
 ___resumeException($16$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy($agg_result,$this,$__s,$__iob,$__fl,$__v$0,$__v$1){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+112)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__s; $__s=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__s)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__fmt=sp;
 var $__nar=(sp)+(8);
 var $__o=(sp)+(32);
 var $__op=(sp)+(80);
 var $__oe=(sp)+(88);
 var $ref_tmp=(sp)+(96);
 var $agg_tmp=(sp)+(104);
 var $$etemp$0$0=37;
 var $$etemp$0$1=0;
 var $st$1$0=(($__fmt)|0);
 HEAP32[(($st$1$0)>>2)]=$$etemp$0$0;
 var $st$2$1=(($__fmt+4)|0);
 HEAP32[(($st$2$1)>>2)]=$$etemp$0$1;
 var $arraydecay=$__fmt;
 var $add_ptr=(($arraydecay+1)|0);
 var $__fmtflags__i=(($__iob+4)|0);
 var $0=HEAP32[(($__fmtflags__i)>>2)];
 var $and_i=$0&2048;
 var $tobool_i=($and_i|0)==0;
 if($tobool_i){var $__fmtp_addr_0_i=$add_ptr;label=3;break;}else{label=2;break;}
 case 2: 
 var $incdec_ptr_i=(($arraydecay+2)|0);
 HEAP8[($add_ptr)]=43;
 var $__fmtp_addr_0_i=$incdec_ptr_i;label=3;break;
 case 3: 
 var $__fmtp_addr_0_i;
 var $and1_i=$0&512;
 var $tobool2_i=($and1_i|0)==0;
 if($tobool2_i){var $__fmtp_addr_113_i_ph=$__fmtp_addr_0_i;label=5;break;}else{label=4;break;}
 case 4: 
 var $incdec_ptr4_i=(($__fmtp_addr_0_i+1)|0);
 HEAP8[($__fmtp_addr_0_i)]=35;
 var $__fmtp_addr_113_i_ph=$incdec_ptr4_i;label=5;break;
 case 5: 
 var $__fmtp_addr_113_i_ph;
 var $incdec_ptr8_i=(($__fmtp_addr_113_i_ph+1)|0);
 HEAP8[($__fmtp_addr_113_i_ph)]=108;
 HEAP8[($incdec_ptr8_i)]=108;
 var $scevgep=(($__fmtp_addr_113_i_ph+2)|0);
 var $and9_i=$0&74;
 if(($and9_i|0)==64){ label=6;break;}else if(($and9_i|0)==8){ label=7;break;}else{label=10;break;}
 case 6: 
 HEAP8[($scevgep)]=111;
 label=11;break;
 case 7: 
 var $and14_i=$0&16384;
 var $tobool15_i=($and14_i|0)==0;
 if($tobool15_i){label=9;break;}else{label=8;break;}
 case 8: 
 HEAP8[($scevgep)]=88;
 label=11;break;
 case 9: 
 HEAP8[($scevgep)]=120;
 label=11;break;
 case 10: 
 HEAP8[($scevgep)]=117;
 label=11;break;
 case 11: 
 var $arraydecay2=(($__nar)|0);
 var $1=HEAP8[(15944)];
 var $guard_uninitialized_i=(($1<<24)>>24)==0;
 if($guard_uninitialized_i){label=12;break;}else{label=16;break;}
 case 12: 
 var $2=___cxa_guard_acquire(15944);
 var $tobool_i5=($2|0)==0;
 if($tobool_i5){label=16;break;}else{label=13;break;}
 case 13: 
 var $call_i6=(function() { try { __THREW__ = 0; return _newlocale(2147483647,2960,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=14;break; } else { label=15;break; }
 case 14: 
 HEAP32[((13952)>>2)]=$call_i6;
 label=16;break;
 case 15: 
 var $3$0 = ___cxa_find_matching_catch(-1, -1); var $3$1 = tempRet0;
 ___resumeException($3$0)
 case 16: 
 var $4=HEAP32[((13952)>>2)];
 var $call5=__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($arraydecay2,23,$4,$arraydecay,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$__v$0,HEAP32[(((tempVarArgs)+(8))>>2)]=$__v$1,tempVarArgs)); STACKTOP=tempVarArgs;
 var $add_ptr7=(($__nar+$call5)|0);
 var $5=HEAP32[(($__fmtflags__i)>>2)];
 var $and_i7=$5&176;
 if(($and_i7|0)==16){ label=17;break;}else if(($and_i7|0)==32){ var $retval_0_i=$add_ptr7;label=23;break;}else{label=22;break;}
 case 17: 
 var $6=HEAP8[($arraydecay2)];
 if((($6<<24)>>24)==45|(($6<<24)>>24)==43){ label=18;break;}else{label=19;break;}
 case 18: 
 var $add_ptr_i=(($__nar+1)|0);
 var $retval_0_i=$add_ptr_i;label=23;break;
 case 19: 
 var $cmp4_i=($call5|0)>1;
 var $cmp7_i=(($6<<24)>>24)==48;
 var $or_cond_i=$cmp4_i&$cmp7_i;
 if($or_cond_i){label=20;break;}else{label=22;break;}
 case 20: 
 var $arrayidx9_i=(($__nar+1)|0);
 var $7=HEAP8[($arrayidx9_i)];
 if((($7<<24)>>24)==120|(($7<<24)>>24)==88){ label=21;break;}else{label=22;break;}
 case 21: 
 var $add_ptr17_i=(($__nar+2)|0);
 var $retval_0_i=$add_ptr17_i;label=23;break;
 case 22: 
 var $retval_0_i=$arraydecay2;label=23;break;
 case 23: 
 var $retval_0_i;
 var $arraydecay11=(($__o)|0);
 __ZNKSt3__18ios_base6getlocEv($ref_tmp,$__iob);
 (function() { try { __THREW__ = 0; return __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($arraydecay2,$retval_0_i,$add_ptr7,$arraydecay11,$__op,$__oe,$ref_tmp) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=24;break; } else { label=25;break; }
 case 24: 
 var $__locale__i11=(($ref_tmp)|0);
 var $8=HEAP32[(($__locale__i11)>>2)];
 var $9=(($8)|0);
 var $call_i12=__ZNSt3__114__shared_count16__release_sharedEv($9);
 var $10=(($__s)|0);
 var $11=HEAP32[(($10)>>2)];
 var $12=(($agg_tmp)|0);
 HEAP32[(($12)>>2)]=$11;
 var $13=HEAP32[(($__op)>>2)];
 var $14=HEAP32[(($__oe)>>2)];
 __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result,$agg_tmp,$arraydecay11,$13,$14,$__iob,$__fl);
 STACKTOP=sp;return;
 case 25: 
 var $15$0 = ___cxa_find_matching_catch(-1, -1); var $15$1 = tempRet0;
 var $__locale__i=(($ref_tmp)|0);
 var $16=HEAP32[(($__locale__i)>>2)];
 var $17=(($16)|0);
 var $call_i=__ZNSt3__114__shared_count16__release_sharedEv($17);
 ___resumeException($15$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd($agg_result,$this,$__s,$__iob,$__fl,$__v){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+152)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__s; $__s=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__s)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__fmt=sp;
 var $__nar=(sp)+(8);
 var $__nb=(sp)+(40);
 var $__o=(sp)+(48);
 var $__op=(sp)+(112);
 var $__oe=(sp)+(120);
 var $ref_tmp51=(sp)+(128);
 var $ref_tmp55=(sp)+(136);
 var $agg_tmp=(sp)+(144);
 var $$etemp$0$0=37;
 var $$etemp$0$1=0;
 var $st$1$0=(($__fmt)|0);
 HEAP32[(($st$1$0)>>2)]=$$etemp$0$0;
 var $st$2$1=(($__fmt+4)|0);
 HEAP32[(($st$2$1)>>2)]=$$etemp$0$1;
 var $arraydecay=$__fmt;
 var $add_ptr=(($arraydecay+1)|0);
 var $__fmtflags__i=(($__iob+4)|0);
 var $0=HEAP32[(($__fmtflags__i)>>2)];
 var $and_i=$0&2048;
 var $tobool_i=($and_i|0)==0;
 if($tobool_i){var $__fmtp_addr_0_i=$add_ptr;label=3;break;}else{label=2;break;}
 case 2: 
 var $incdec_ptr_i=(($arraydecay+2)|0);
 HEAP8[($add_ptr)]=43;
 var $__fmtp_addr_0_i=$incdec_ptr_i;label=3;break;
 case 3: 
 var $__fmtp_addr_0_i;
 var $and1_i=$0&1024;
 var $tobool2_i=($and1_i|0)==0;
 if($tobool2_i){var $__fmtp_addr_1_i=$__fmtp_addr_0_i;label=5;break;}else{label=4;break;}
 case 4: 
 var $incdec_ptr4_i=(($__fmtp_addr_0_i+1)|0);
 HEAP8[($__fmtp_addr_0_i)]=35;
 var $__fmtp_addr_1_i=$incdec_ptr4_i;label=5;break;
 case 5: 
 var $__fmtp_addr_1_i;
 var $and6_i=$0&260;
 var $and7_i=$0>>>14;
 var $cmp8_i=($and6_i|0)==260;
 if($cmp8_i){label=13;break;}else{label=6;break;}
 case 6: 
 var $incdec_ptr10_i=(($__fmtp_addr_1_i+1)|0);
 HEAP8[($__fmtp_addr_1_i)]=46;
 var $incdec_ptr11_i=(($__fmtp_addr_1_i+2)|0);
 HEAP8[($incdec_ptr10_i)]=42;
 if(($and6_i|0)==256){ label=10;break;}else if(($and6_i|0)==4){ label=7;break;}else{label=16;break;}
 case 7: 
 var $1=$and7_i&1;
 var $tobool18_i=($1|0)==0;
 if($tobool18_i){label=9;break;}else{label=8;break;}
 case 8: 
 HEAP8[($incdec_ptr11_i)]=70;
 var $specify_precision_0_off0_ph_i56=1;label=19;break;
 case 9: 
 HEAP8[($incdec_ptr11_i)]=102;
 var $specify_precision_0_off0_ph_i56=1;label=19;break;
 case 10: 
 var $2=$and7_i&1;
 var $tobool25_i=($2|0)==0;
 if($tobool25_i){label=12;break;}else{label=11;break;}
 case 11: 
 HEAP8[($incdec_ptr11_i)]=69;
 var $specify_precision_0_off0_ph_i56=1;label=19;break;
 case 12: 
 HEAP8[($incdec_ptr11_i)]=101;
 var $specify_precision_0_off0_ph_i56=1;label=19;break;
 case 13: 
 var $3=$and7_i&1;
 var $tobool32_i59=($3|0)==0;
 if($tobool32_i59){label=15;break;}else{label=14;break;}
 case 14: 
 HEAP8[($__fmtp_addr_1_i)]=65;
 var $specify_precision_0_off0_ph_i56=0;label=19;break;
 case 15: 
 HEAP8[($__fmtp_addr_1_i)]=97;
 var $specify_precision_0_off0_ph_i56=0;label=19;break;
 case 16: 
 var $4=$and7_i&1;
 var $tobool32_i=($4|0)==0;
 if($tobool32_i){label=18;break;}else{label=17;break;}
 case 17: 
 HEAP8[($incdec_ptr11_i)]=71;
 var $specify_precision_0_off0_ph_i56=1;label=19;break;
 case 18: 
 HEAP8[($incdec_ptr11_i)]=103;
 var $specify_precision_0_off0_ph_i56=1;label=19;break;
 case 19: 
 var $specify_precision_0_off0_ph_i56;
 var $arraydecay3=(($__nar)|0);
 HEAP32[(($__nb)>>2)]=$arraydecay3;
 var $5=HEAP8[(15944)];
 var $guard_uninitialized_i=(($5<<24)>>24)==0;
 if($guard_uninitialized_i){label=20;break;}else{label=24;break;}
 case 20: 
 var $6=___cxa_guard_acquire(15944);
 var $tobool_i31=($6|0)==0;
 if($tobool_i31){label=24;break;}else{label=21;break;}
 case 21: 
 var $call_i32=(function() { try { __THREW__ = 0; return _newlocale(2147483647,2960,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=22;break; } else { label=23;break; }
 case 22: 
 HEAP32[((13952)>>2)]=$call_i32;
 label=24;break;
 case 23: 
 var $7$0 = ___cxa_find_matching_catch(-1, -1); var $7$1 = tempRet0;
 ___resumeException($7$0)
 case 24: 
 var $8=HEAP32[((13952)>>2)];
 if($specify_precision_0_off0_ph_i56){label=25;break;}else{label=26;break;}
 case 25: 
 var $__precision__i=(($__iob+8)|0);
 var $9=HEAP32[(($__precision__i)>>2)];
 var $call7=__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($arraydecay3,30,$8,$arraydecay,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$9,HEAPF64[(((tempVarArgs)+(8))>>3)]=$__v,tempVarArgs)); STACKTOP=tempVarArgs;
 var $__nc_0=$call7;label=27;break;
 case 26: 
 var $call10=__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($arraydecay3,30,$8,$arraydecay,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAPF64[((tempVarArgs)>>3)]=$__v,tempVarArgs)); STACKTOP=tempVarArgs;
 var $__nc_0=$call10;label=27;break;
 case 27: 
 var $__nc_0;
 var $cmp=($__nc_0|0)>29;
 if($cmp){label=29;break;}else{label=28;break;}
 case 28: 
 var $_pre66=HEAP32[(($__nb)>>2)];
 var $__nc_2=$__nc_0;var $__nbh_sroa_0_1=0;var $23=$_pre66;label=47;break;
 case 29: 
 var $10=HEAP8[(15944)];
 var $guard_uninitialized_i33=(($10<<24)>>24)==0;
 if($specify_precision_0_off0_ph_i56){label=30;break;}else{label=38;break;}
 case 30: 
 if($guard_uninitialized_i33){label=31;break;}else{label=35;break;}
 case 31: 
 var $11=___cxa_guard_acquire(15944);
 var $tobool_i34=($11|0)==0;
 if($tobool_i34){label=35;break;}else{label=32;break;}
 case 32: 
 var $call_i36=(function() { try { __THREW__ = 0; return _newlocale(2147483647,2960,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=33;break; } else { label=34;break; }
 case 33: 
 HEAP32[((13952)>>2)]=$call_i36;
 label=35;break;
 case 34: 
 var $12$0 = ___cxa_find_matching_catch(-1, -1); var $12$1 = tempRet0;
 var $eh_lpad_body$1=$12$1;var $eh_lpad_body$0=$12$0;label=37;break;
 case 35: 
 var $13=HEAP32[((13952)>>2)];
 var $__precision__i108=(($__iob+8)|0);
 var $14=HEAP32[(($__precision__i108)>>2)];
 var $call19=(function() { try { __THREW__ = 0; return __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__nb,$13,$arraydecay,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$14,HEAPF64[(((tempVarArgs)+(8))>>3)]=$__v,tempVarArgs)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })(); STACKTOP=tempVarArgs;if (!__THREW__) { var $__nc_1=$call19;label=44;break; } else { label=36;break; }
 case 36: 
 var $15$0 = ___cxa_find_matching_catch(-1, -1); var $15$1 = tempRet0;
 var $eh_lpad_body$1=$15$1;var $eh_lpad_body$0=$15$0;label=37;break;
 case 37: 
 var $eh_lpad_body$0;
 var $eh_lpad_body$1;
 var $16=$eh_lpad_body$0;
 var $17=$eh_lpad_body$1;
 var $ehselector_slot_164=$17;var $exn_slot_165=$16;label=72;break;
 case 38: 
 if($guard_uninitialized_i33){label=39;break;}else{label=43;break;}
 case 39: 
 var $18=___cxa_guard_acquire(15944);
 var $tobool_i42=($18|0)==0;
 if($tobool_i42){label=43;break;}else{label=40;break;}
 case 40: 
 var $call_i44=(function() { try { __THREW__ = 0; return _newlocale(2147483647,2960,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=41;break; } else { label=42;break; }
 case 41: 
 HEAP32[((13952)>>2)]=$call_i44;
 label=43;break;
 case 42: 
 var $19$0 = ___cxa_find_matching_catch(-1, -1); var $19$1 = tempRet0;
 var $eh_lpad_body$1=$19$1;var $eh_lpad_body$0=$19$0;label=37;break;
 case 43: 
 var $20=HEAP32[((13952)>>2)];
 var $__precision__i111=(($__iob+8)|0);
 var $21=HEAP32[(($__precision__i111)>>2)];
 var $call27=(function() { try { __THREW__ = 0; return __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__nb,$20,$arraydecay,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$21,HEAPF64[(((tempVarArgs)+(8))>>3)]=$__v,tempVarArgs)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })(); STACKTOP=tempVarArgs;if (!__THREW__) { var $__nc_1=$call27;label=44;break; } else { label=36;break; }
 case 44: 
 var $__nc_1;
 var $22=HEAP32[(($__nb)>>2)];
 var $cmp29=($22|0)==0;
 if($cmp29){label=45;break;}else{var $__nc_2=$__nc_1;var $__nbh_sroa_0_1=$22;var $23=$22;label=47;break;}
 case 45: 
 (function() { try { __THREW__ = 0; return __ZSt17__throw_bad_allocv() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=46;break; } else { label=36;break; }
 case 46: 
 var $_pre=HEAP32[(($__nb)>>2)];
 var $__nc_2=$__nc_1;var $__nbh_sroa_0_1=$_pre;var $23=$_pre;label=47;break;
 case 47: 
 var $23;
 var $__nbh_sroa_0_1;
 var $__nc_2;
 var $add_ptr34=(($23+$__nc_2)|0);
 var $24=HEAP32[(($__fmtflags__i)>>2)];
 var $and_i51=$24&176;
 if(($and_i51|0)==16){ label=48;break;}else if(($and_i51|0)==32){ var $retval_0_i=$add_ptr34;label=54;break;}else{label=53;break;}
 case 48: 
 var $25=HEAP8[($23)];
 if((($25<<24)>>24)==45|(($25<<24)>>24)==43){ label=49;break;}else{label=50;break;}
 case 49: 
 var $add_ptr_i=(($23+1)|0);
 var $retval_0_i=$add_ptr_i;label=54;break;
 case 50: 
 var $cmp4_i=($__nc_2|0)>1;
 var $cmp7_i=(($25<<24)>>24)==48;
 var $or_cond_i=$cmp4_i&$cmp7_i;
 if($or_cond_i){label=51;break;}else{label=53;break;}
 case 51: 
 var $arrayidx9_i=(($23+1)|0);
 var $26=HEAP8[($arrayidx9_i)];
 if((($26<<24)>>24)==120|(($26<<24)>>24)==88){ label=52;break;}else{label=53;break;}
 case 52: 
 var $add_ptr17_i=(($23+2)|0);
 var $retval_0_i=$add_ptr17_i;label=54;break;
 case 53: 
 var $retval_0_i=$23;label=54;break;
 case 54: 
 var $retval_0_i;
 var $arraydecay37=(($__o)|0);
 var $cmp40=($23|0)==($arraydecay3|0);
 if($cmp40){var $__ob_0=$arraydecay37;var $__obh_sroa_0_1=0;var $30=$arraydecay3;label=59;break;}else{label=55;break;}
 case 55: 
 var $mul=$__nc_2<<1;
 var $call45=_malloc($mul);
 var $cmp46=($call45|0)==0;
 if($cmp46){label=56;break;}else{var $__ob_0=$call45;var $__obh_sroa_0_1=$call45;var $30=$23;label=59;break;}
 case 56: 
 (function() { try { __THREW__ = 0; return __ZSt17__throw_bad_allocv() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=57;break; } else { var $__obh_sroa_0_0=0;label=58;break; }
 case 57: 
 var $_pre67=HEAP32[(($__nb)>>2)];
 var $__ob_0=0;var $__obh_sroa_0_1=0;var $30=$_pre67;label=59;break;
 case 58: 
 var $__obh_sroa_0_0;
 var $27$0 = ___cxa_find_matching_catch(-1, -1); var $27$1 = tempRet0;
 var $28=$27$0;
 var $29=$27$1;
 var $exn_slot_0=$28;var $ehselector_slot_0=$29;var $__obh_sroa_0_2=$__obh_sroa_0_0;label=68;break;
 case 59: 
 var $30;
 var $__obh_sroa_0_1;
 var $__ob_0;
 (function() { try { __THREW__ = 0; return __ZNKSt3__18ios_base6getlocEv($ref_tmp51,$__iob) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=60;break; } else { var $__obh_sroa_0_0=$__obh_sroa_0_1;label=58;break; }
 case 60: 
 (function() { try { __THREW__ = 0; return __ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE($30,$retval_0_i,$add_ptr34,$__ob_0,$__op,$__oe,$ref_tmp51) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=61;break; } else { label=67;break; }
 case 61: 
 var $__locale__i54=(($ref_tmp51)|0);
 var $31=HEAP32[(($__locale__i54)>>2)];
 var $32=(($31)|0);
 var $call_i55=__ZNSt3__114__shared_count16__release_sharedEv($32);
 var $33=(($__s)|0);
 var $34=HEAP32[(($33)>>2)];
 var $35=(($agg_tmp)|0);
 HEAP32[(($35)>>2)]=$34;
 var $36=HEAP32[(($__op)>>2)];
 var $37=HEAP32[(($__oe)>>2)];
 (function() { try { __THREW__ = 0; return __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($ref_tmp55,$agg_tmp,$__ob_0,$36,$37,$__iob,$__fl) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=62;break; } else { var $__obh_sroa_0_0=$__obh_sroa_0_1;label=58;break; }
 case 62: 
 var $38=(($ref_tmp55)|0);
 var $39=HEAP32[(($38)>>2)];
 HEAP32[(($33)>>2)]=$39;
 var $40=(($agg_result)|0);
 HEAP32[(($40)>>2)]=$39;
 var $tobool_i_i_i196=($__obh_sroa_0_1|0)==0;
 if($tobool_i_i_i196){label=64;break;}else{label=63;break;}
 case 63: 
 _free($__obh_sroa_0_1);
 label=64;break;
 case 64: 
 var $tobool_i_i_i227=($__nbh_sroa_0_1|0)==0;
 if($tobool_i_i_i227){label=66;break;}else{label=65;break;}
 case 65: 
 _free($__nbh_sroa_0_1);
 label=66;break;
 case 66: 
 STACKTOP=sp;return;
 case 67: 
 var $41$0 = ___cxa_find_matching_catch(-1, -1); var $41$1 = tempRet0;
 var $42=$41$0;
 var $43=$41$1;
 var $__locale__i=(($ref_tmp51)|0);
 var $44=HEAP32[(($__locale__i)>>2)];
 var $45=(($44)|0);
 var $call_i=__ZNSt3__114__shared_count16__release_sharedEv($45);
 var $exn_slot_0=$42;var $ehselector_slot_0=$43;var $__obh_sroa_0_2=$__obh_sroa_0_1;label=68;break;
 case 68: 
 var $__obh_sroa_0_2;
 var $ehselector_slot_0;
 var $exn_slot_0;
 var $tobool_i_i_i97=($__obh_sroa_0_2|0)==0;
 if($tobool_i_i_i97){label=70;break;}else{label=69;break;}
 case 69: 
 _free($__obh_sroa_0_2);
 label=70;break;
 case 70: 
 var $tobool_i_i_i=($__nbh_sroa_0_1|0)==0;
 if($tobool_i_i_i){var $ehselector_slot_164=$ehselector_slot_0;var $exn_slot_165=$exn_slot_0;label=72;break;}else{label=71;break;}
 case 71: 
 _free($__nbh_sroa_0_1);
 var $ehselector_slot_164=$ehselector_slot_0;var $exn_slot_165=$exn_slot_0;label=72;break;
 case 72: 
 var $exn_slot_165;
 var $ehselector_slot_164;
 var $lpad_val$0=$exn_slot_165;
 var $lpad_val$1=0;
 var $lpad_val58$0=$lpad_val$0;
 var $lpad_val58$1=$ehselector_slot_164;
 ___resumeException($lpad_val58$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__s,$__l,$__format,varrp){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__va=sp;
 var $arraydecay=(($__va)|0);
 var $arraydecay1=$__va;
 HEAP32[(($arraydecay1)>>2)]=varrp;HEAP32[((($arraydecay1)+(4))>>2)]=0;
 var $call=_uselocale($__l);
 var $call3=(function() { try { __THREW__ = 0; return _vasprintf($__s,$__format,$arraydecay) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=6;break; }
 case 2: 
 var $tobool_i_i_i41=($call|0)==0;
 if($tobool_i_i_i41){label=5;break;}else{label=3;break;}
 case 3: 
 var $call6_i_i_i46=(function() { try { __THREW__ = 0; return _uselocale($call) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=5;break; } else { label=4;break; }
 case 4: 
 var $0$0 = ___cxa_find_matching_catch(-1, -1,0); var $0$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 5: 
 STACKTOP=sp;return $call3;
 case 6: 
 var $1$0 = ___cxa_find_matching_catch(-1, -1); var $1$1 = tempRet0;
 var $tobool_i_i_i=($call|0)==0;
 if($tobool_i_i_i){label=9;break;}else{label=7;break;}
 case 7: 
 var $call6_i_i_i=(function() { try { __THREW__ = 0; return _uselocale($call) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=9;break; } else { label=8;break; }
 case 8: 
 var $2$0 = ___cxa_find_matching_catch(-1, -1,0); var $2$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 9: 
 ___resumeException($1$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nb,$__np,$__ne,$__ob,$__op,$__oe,$__loc){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+48)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__p_i_i_i90=sp;
 var $__p_i_i_i=(sp)+(16);
 var $__grouping=(sp)+(32);
 var $__locale__i=(($__loc)|0);
 var $0=HEAP32[(($__locale__i)>>2)];
 var $1=$__p_i_i_i;
 var $2=HEAP32[((15384)>>2)];
 var $cmp_i_i_i=($2|0)==-1;
 if($cmp_i_i_i){label=3;break;}else{label=2;break;}
 case 2: 
 var $ref_tmp_i_sroa_0_0__idx_i_i=(($__p_i_i_i)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i)>>2)]=15384;
 var $ref_tmp_i_sroa_1_4__idx6_i_i=(($__p_i_i_i+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i=(($__p_i_i_i+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i)>>2)]=0;
 __ZNSt3__111__call_onceERVmPvPFvS2_E(15384,$1,276);
 label=3;break;
 case 3: 
 var $3=HEAP32[((15388)>>2)];
 var $sub_i_i=((($3)-(1))|0);
 var $__end__i_i_i_i=(($0+12)|0);
 var $4=HEAP32[(($__end__i_i_i_i)>>2)];
 var $__begin__i_i_i_i=(($0+8)|0);
 var $5=HEAP32[(($__begin__i_i_i_i)>>2)];
 var $sub_ptr_lhs_cast_i_i_i_i=$4;
 var $sub_ptr_rhs_cast_i_i_i_i=$5;
 var $sub_ptr_sub_i_i_i_i=((($sub_ptr_lhs_cast_i_i_i_i)-($sub_ptr_rhs_cast_i_i_i_i))|0);
 var $sub_ptr_div_i_i_i_i=$sub_ptr_sub_i_i_i_i>>2;
 var $cmp_i_i1_i=($sub_ptr_div_i_i_i_i>>>0)>($sub_i_i>>>0);
 if($cmp_i_i1_i){label=4;break;}else{label=5;break;}
 case 4: 
 var $arrayidx_i_i_i_i=(($5+($sub_i_i<<2))|0);
 var $6=HEAP32[(($arrayidx_i_i_i_i)>>2)];
 var $tobool_i_i_i89=($6|0)==0;
 if($tobool_i_i_i89){label=5;break;}else{label=6;break;}
 case 5: 
 var $exception_i_i=___cxa_allocate_exception(4);
 var $7=$exception_i_i;
 __ZNSt8bad_castC2Ev($7);
 ___cxa_throw($exception_i_i,10264,(376));
 throw "Reached an unreachable!";
 case 6: 
 var $8=$6;
 var $9=HEAP32[(($__locale__i)>>2)];
 var $10=$__p_i_i_i90;
 var $11=HEAP32[((15000)>>2)];
 var $cmp_i_i_i92=($11|0)==-1;
 if($cmp_i_i_i92){label=8;break;}else{label=7;break;}
 case 7: 
 var $ref_tmp_i_sroa_0_0__idx_i_i93=(($__p_i_i_i90)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i93)>>2)]=15000;
 var $ref_tmp_i_sroa_1_4__idx6_i_i94=(($__p_i_i_i90+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i94)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i95=(($__p_i_i_i90+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i95)>>2)]=0;
 __ZNSt3__111__call_onceERVmPvPFvS2_E(15000,$10,276);
 label=8;break;
 case 8: 
 var $12=HEAP32[((15004)>>2)];
 var $sub_i_i97=((($12)-(1))|0);
 var $__end__i_i_i_i98=(($9+12)|0);
 var $13=HEAP32[(($__end__i_i_i_i98)>>2)];
 var $__begin__i_i_i_i99=(($9+8)|0);
 var $14=HEAP32[(($__begin__i_i_i_i99)>>2)];
 var $sub_ptr_lhs_cast_i_i_i_i100=$13;
 var $sub_ptr_rhs_cast_i_i_i_i101=$14;
 var $sub_ptr_sub_i_i_i_i102=((($sub_ptr_lhs_cast_i_i_i_i100)-($sub_ptr_rhs_cast_i_i_i_i101))|0);
 var $sub_ptr_div_i_i_i_i103=$sub_ptr_sub_i_i_i_i102>>2;
 var $cmp_i_i1_i104=($sub_ptr_div_i_i_i_i103>>>0)>($sub_i_i97>>>0);
 if($cmp_i_i1_i104){label=9;break;}else{label=10;break;}
 case 9: 
 var $arrayidx_i_i_i_i106=(($14+($sub_i_i97<<2))|0);
 var $15=HEAP32[(($arrayidx_i_i_i_i106)>>2)];
 var $tobool_i_i_i107=($15|0)==0;
 if($tobool_i_i_i107){label=10;break;}else{label=11;break;}
 case 10: 
 var $exception_i_i109=___cxa_allocate_exception(4);
 var $16=$exception_i_i109;
 __ZNSt8bad_castC2Ev($16);
 ___cxa_throw($exception_i_i109,10264,(376));
 throw "Reached an unreachable!";
 case 11: 
 var $17=$15;
 var $18=$15;
 var $vtable_i=HEAP32[(($18)>>2)];
 var $vfn_i=(($vtable_i+20)|0);
 var $19=HEAP32[(($vfn_i)>>2)];
 FUNCTION_TABLE[$19]($__grouping,$17);
 HEAP32[(($__oe)>>2)]=$__ob;
 var $20=HEAP8[($__nb)];
 if((($20<<24)>>24)==45|(($20<<24)>>24)==43){ label=12;break;}else{var $__nf_0=$__nb;label=20;break;}
 case 12: 
 var $21=$6;
 var $vtable_i130=HEAP32[(($21)>>2)];
 var $vfn_i131=(($vtable_i130+28)|0);
 var $22=HEAP32[(($vfn_i131)>>2)];
 var $call_i132133=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$22]($8,$20) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=13;break; } else { label=18;break; }
 case 13: 
 var $incdec_ptr=(($__nb+1)|0);
 var $23=HEAP32[(($__oe)>>2)];
 var $incdec_ptr5=(($23+1)|0);
 HEAP32[(($__oe)>>2)]=$incdec_ptr5;
 HEAP8[($23)]=$call_i132133;
 var $__nf_0=$incdec_ptr;label=20;break;
 case 14: 
 var $lpad_loopexit122$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_loopexit122$1 = tempRet0;
 var $eh_lpad_body$1=$lpad_loopexit122$1;var $eh_lpad_body$0=$lpad_loopexit122$0;label=19;break;
 case 15: 
 var $lpad_loopexit132$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_loopexit132$1 = tempRet0;
 var $eh_lpad_body$1=$lpad_loopexit132$1;var $eh_lpad_body$0=$lpad_loopexit132$0;label=19;break;
 case 16: 
 var $lpad_loopexit143$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_loopexit143$1 = tempRet0;
 var $eh_lpad_body$1=$lpad_loopexit143$1;var $eh_lpad_body$0=$lpad_loopexit143$0;label=19;break;
 case 17: 
 var $lpad_loopexit149$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_loopexit149$1 = tempRet0;
 var $eh_lpad_body$1=$lpad_loopexit149$1;var $eh_lpad_body$0=$lpad_loopexit149$0;label=19;break;
 case 18: 
 var $lpad_nonloopexit150$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_nonloopexit150$1 = tempRet0;
 var $eh_lpad_body$1=$lpad_nonloopexit150$1;var $eh_lpad_body$0=$lpad_nonloopexit150$0;label=19;break;
 case 19: 
 var $eh_lpad_body$0;
 var $eh_lpad_body$1;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 ___resumeException($eh_lpad_body$0)
 case 20: 
 var $__nf_0;
 var $sub_ptr_lhs_cast=$__ne;
 var $sub_ptr_rhs_cast=$__nf_0;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $cmp6=($sub_ptr_sub|0)>1;
 if($cmp6){label=21;break;}else{var $__ns_1=$__nf_0;label=34;break;}
 case 21: 
 var $24=HEAP8[($__nf_0)];
 var $cmp8=(($24<<24)>>24)==48;
 if($cmp8){label=22;break;}else{var $__ns_1=$__nf_0;label=34;break;}
 case 22: 
 var $arrayidx10=(($__nf_0+1)|0);
 var $25=HEAP8[($arrayidx10)];
 if((($25<<24)>>24)==120|(($25<<24)>>24)==88){ label=23;break;}else{var $__ns_1=$__nf_0;label=34;break;}
 case 23: 
 var $26=$6;
 var $vtable_i137=HEAP32[(($26)>>2)];
 var $vfn_i138=(($vtable_i137+28)|0);
 var $27=HEAP32[(($vfn_i138)>>2)];
 var $call_i139140=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$27]($8,48) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=24;break; } else { label=18;break; }
 case 24: 
 var $28=HEAP32[(($__oe)>>2)];
 var $incdec_ptr21=(($28+1)|0);
 HEAP32[(($__oe)>>2)]=$incdec_ptr21;
 HEAP8[($28)]=$call_i139140;
 var $incdec_ptr22=(($__nf_0+2)|0);
 var $29=HEAP8[($arrayidx10)];
 var $vtable_i145=HEAP32[(($26)>>2)];
 var $vfn_i146=(($vtable_i145+28)|0);
 var $30=HEAP32[(($vfn_i146)>>2)];
 var $call_i147148=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$30]($8,$29) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=25;break; } else { label=18;break; }
 case 25: 
 var $31=HEAP32[(($__oe)>>2)];
 var $incdec_ptr25=(($31+1)|0);
 HEAP32[(($__oe)>>2)]=$incdec_ptr25;
 HEAP8[($31)]=$call_i147148;
 var $__ns_0=$incdec_ptr22;label=26;break;
 case 26: 
 var $__ns_0;
 var $cmp26=($__ns_0>>>0)<($__ne>>>0);
 if($cmp26){label=27;break;}else{var $__ns_2=$__ns_0;var $__nf_1=$incdec_ptr22;label=42;break;}
 case 27: 
 var $32=HEAP8[($__ns_0)];
 var $33=HEAP8[(15944)];
 var $guard_uninitialized_i=(($33<<24)>>24)==0;
 if($guard_uninitialized_i){label=28;break;}else{label=32;break;}
 case 28: 
 var $34=___cxa_guard_acquire(15944);
 var $tobool_i=($34|0)==0;
 if($tobool_i){label=32;break;}else{label=29;break;}
 case 29: 
 var $call_i=(function() { try { __THREW__ = 0; return _newlocale(2147483647,2960,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=30;break; } else { label=31;break; }
 case 30: 
 HEAP32[((13952)>>2)]=$call_i;
 label=32;break;
 case 31: 
 var $35$0 = ___cxa_find_matching_catch(-1, -1); var $35$1 = tempRet0;
 var $eh_lpad_body$1=$35$1;var $eh_lpad_body$0=$35$0;label=19;break;
 case 32: 
 var $36=HEAP32[((13952)>>2)];
 var $conv27=(($32<<24)>>24);
 var $call31=(function() { try { __THREW__ = 0; return _isxdigit($conv27,$36) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=33;break; } else { label=17;break; }
 case 33: 
 var $tobool=($call31|0)==0;
 var $incdec_ptr34=(($__ns_0+1)|0);
 if($tobool){var $__ns_2=$__ns_0;var $__nf_1=$incdec_ptr22;label=42;break;}else{var $__ns_0=$incdec_ptr34;label=26;break;}
 case 34: 
 var $__ns_1;
 var $cmp36=($__ns_1>>>0)<($__ne>>>0);
 if($cmp36){label=35;break;}else{var $__ns_2=$__ns_1;var $__nf_1=$__nf_0;label=42;break;}
 case 35: 
 var $37=HEAP8[($__ns_1)];
 var $38=HEAP8[(15944)];
 var $guard_uninitialized_i112=(($38<<24)>>24)==0;
 if($guard_uninitialized_i112){label=36;break;}else{label=40;break;}
 case 36: 
 var $39=___cxa_guard_acquire(15944);
 var $tobool_i113=($39|0)==0;
 if($tobool_i113){label=40;break;}else{label=37;break;}
 case 37: 
 var $call_i115=(function() { try { __THREW__ = 0; return _newlocale(2147483647,2960,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=38;break; } else { label=39;break; }
 case 38: 
 HEAP32[((13952)>>2)]=$call_i115;
 label=40;break;
 case 39: 
 var $40$0 = ___cxa_find_matching_catch(-1, -1); var $40$1 = tempRet0;
 var $eh_lpad_body$1=$40$1;var $eh_lpad_body$0=$40$0;label=19;break;
 case 40: 
 var $41=HEAP32[((13952)>>2)];
 var $conv38=(($37<<24)>>24);
 var $call42=(function() { try { __THREW__ = 0; return _isdigit($conv38,$41) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=41;break; } else { label=16;break; }
 case 41: 
 var $tobool43=($call42|0)==0;
 var $incdec_ptr47=(($__ns_1+1)|0);
 if($tobool43){var $__ns_2=$__ns_1;var $__nf_1=$__nf_0;label=42;break;}else{var $__ns_1=$incdec_ptr47;label=34;break;}
 case 42: 
 var $__nf_1;
 var $__ns_2;
 var $__s_i_i_i=$__grouping;
 var $__size__i_i_i=$__grouping;
 var $42=HEAP8[($__size__i_i_i)];
 var $conv_i_i_i=($42&255);
 var $and_i_i_i=$conv_i_i_i&1;
 var $tobool_i_i_i=($and_i_i_i|0)==0;
 if($tobool_i_i_i){label=44;break;}else{label=43;break;}
 case 43: 
 var $__size__i23_i_i=(($__grouping+4)|0);
 var $43=HEAP32[(($__size__i23_i_i)>>2)];
 var $cond_i_i=$43;label=45;break;
 case 44: 
 var $shr_i_i_i87=$conv_i_i_i>>>1;
 var $cond_i_i=$shr_i_i_i87;label=45;break;
 case 45: 
 var $cond_i_i;
 var $cmp_i=($cond_i_i|0)==0;
 if($cmp_i){label=46;break;}else{label=50;break;}
 case 46: 
 var $44=HEAP32[(($__oe)>>2)];
 var $45=$6;
 var $vtable_i163=HEAP32[(($45)>>2)];
 var $vfn_i164=(($vtable_i163+32)|0);
 var $46=HEAP32[(($vfn_i164)>>2)];
 var $call_i165166=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$46]($8,$__nf_1,$__ns_2,$44) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=47;break; } else { label=18;break; }
 case 47: 
 var $sub_ptr_lhs_cast54=$__ns_2;
 var $sub_ptr_rhs_cast55=$__nf_1;
 var $sub_ptr_sub56=((($sub_ptr_lhs_cast54)-($sub_ptr_rhs_cast55))|0);
 var $47=HEAP32[(($__oe)>>2)];
 var $add_ptr=(($47+$sub_ptr_sub56)|0);
 HEAP32[(($__oe)>>2)]=$add_ptr;
 label=48;break;
 case 48: 
 var $cmp94126=($__ns_2>>>0)<($__ne>>>0);
 if($cmp94126){label=49;break;}else{var $__nf_3=$__ns_2;label=69;break;}
 case 49: 
 var $48=$6;
 var $__nf_2127=$__ns_2;label=64;break;
 case 50: 
 var $cmp_i_i=($__nf_1|0)==($__ns_2|0);
 if($cmp_i_i){label=53;break;}else{label=51;break;}
 case 51: 
 var $incdec_ptr_i_i139=((($__ns_2)-(1))|0);
 var $cmp1_i_i140=($__nf_1>>>0)<($incdec_ptr_i_i139>>>0);
 if($cmp1_i_i140){var $__first_addr_i_i_0141=$__nf_1;var $incdec_ptr_i_i142=$incdec_ptr_i_i139;label=52;break;}else{label=53;break;}
 case 52: 
 var $incdec_ptr_i_i142;
 var $__first_addr_i_i_0141;
 var $49=HEAP8[($__first_addr_i_i_0141)];
 var $50=HEAP8[($incdec_ptr_i_i142)];
 HEAP8[($__first_addr_i_i_0141)]=$50;
 HEAP8[($incdec_ptr_i_i142)]=$49;
 var $incdec_ptr2_i_i=(($__first_addr_i_i_0141+1)|0);
 var $incdec_ptr_i_i=((($incdec_ptr_i_i142)-(1))|0);
 var $cmp1_i_i=($incdec_ptr2_i_i>>>0)<($incdec_ptr_i_i>>>0);
 if($cmp1_i_i){var $__first_addr_i_i_0141=$incdec_ptr2_i_i;var $incdec_ptr_i_i142=$incdec_ptr_i_i;label=52;break;}else{label=53;break;}
 case 53: 
 var $51=$15;
 var $vtable_i178=HEAP32[(($51)>>2)];
 var $vfn_i179=(($vtable_i178+16)|0);
 var $52=HEAP32[(($vfn_i179)>>2)];
 var $call_i180181=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$52]($17) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=54;break; } else { label=18;break; }
 case 54: 
 var $cmp62135=($__nf_1>>>0)<($__ns_2>>>0);
 if($cmp62135){label=55;break;}else{label=61;break;}
 case 55: 
 var $arrayidx_i_i_i=(($__s_i_i_i+1)|0);
 var $__size__i23_i=(($__grouping+4)|0);
 var $__data__i21_i_i250=(($__grouping+8)|0);
 var $53=$6;
 var $__dc_0136=0;var $__dg_0137=0;var $__p_0138=$__nf_1;label=56;break;
 case 56: 
 var $__p_0138;
 var $__dg_0137;
 var $__dc_0136;
 var $54=HEAP8[($__size__i_i_i)];
 var $and_i_i_i200=$54&1;
 var $tobool_i_i_i201=(($and_i_i_i200<<24)>>24)==0;
 var $55=HEAP32[(($__data__i21_i_i250)>>2)];
 var $arrayidx_i_i_i_=($tobool_i_i_i201?$arrayidx_i_i_i:$55);
 var $add_ptr_i=(($arrayidx_i_i_i_+$__dg_0137)|0);
 var $56=HEAP8[($add_ptr_i)];
 var $cmp67=(($56<<24)>>24)>0;
 if($cmp67){label=57;break;}else{var $__dg_1=$__dg_0137;var $__dc_1=$__dc_0136;label=59;break;}
 case 57: 
 var $57=HEAP32[(($__data__i21_i_i250)>>2)];
 var $arrayidx_i_i_i_160=($tobool_i_i_i201?$arrayidx_i_i_i:$57);
 var $add_ptr_i262=(($arrayidx_i_i_i_160+$__dg_0137)|0);
 var $58=HEAP8[($add_ptr_i262)];
 var $conv71=(($58<<24)>>24);
 var $cmp72=($__dc_0136|0)==($conv71|0);
 if($cmp72){label=58;break;}else{var $__dg_1=$__dg_0137;var $__dc_1=$__dc_0136;label=59;break;}
 case 58: 
 var $59=HEAP32[(($__oe)>>2)];
 var $incdec_ptr74=(($59+1)|0);
 HEAP32[(($__oe)>>2)]=$incdec_ptr74;
 HEAP8[($59)]=$call_i180181;
 var $60=HEAP8[($__size__i_i_i)];
 var $conv_i_i=($60&255);
 var $and_i_i=$conv_i_i&1;
 var $tobool_i_i=($and_i_i|0)==0;
 var $61=HEAP32[(($__size__i23_i)>>2)];
 var $shr_i_i88=$conv_i_i>>>1;
 var $cond_i=($tobool_i_i?$shr_i_i88:$61);
 var $sub=((($cond_i)-(1))|0);
 var $cmp76=($__dg_0137>>>0)<($sub>>>0);
 var $inc=($cmp76&1);
 var $inc___dg_0=((($inc)+($__dg_0137))|0);
 var $__dg_1=$inc___dg_0;var $__dc_1=0;label=59;break;
 case 59: 
 var $__dc_1;
 var $__dg_1;
 var $62=HEAP8[($__p_0138)];
 var $vtable_i290=HEAP32[(($53)>>2)];
 var $vfn_i291=(($vtable_i290+28)|0);
 var $63=HEAP32[(($vfn_i291)>>2)];
 var $call_i292293=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$63]($8,$62) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=60;break; } else { label=15;break; }
 case 60: 
 var $64=HEAP32[(($__oe)>>2)];
 var $incdec_ptr82=(($64+1)|0);
 HEAP32[(($__oe)>>2)]=$incdec_ptr82;
 HEAP8[($64)]=$call_i292293;
 var $inc83=((($__dc_1)+(1))|0);
 var $incdec_ptr85=(($__p_0138+1)|0);
 var $cmp62=($incdec_ptr85>>>0)<($__ns_2>>>0);
 if($cmp62){var $__dc_0136=$inc83;var $__dg_0137=$__dg_1;var $__p_0138=$incdec_ptr85;label=56;break;}else{label=61;break;}
 case 61: 
 var $sub_ptr_lhs_cast87=$__nf_1;
 var $sub_ptr_rhs_cast88=$__nb;
 var $sub_ptr_sub89=((($sub_ptr_lhs_cast87)-($sub_ptr_rhs_cast88))|0);
 var $add_ptr90=(($__ob+$sub_ptr_sub89)|0);
 var $65=HEAP32[(($__oe)>>2)];
 var $cmp_i_i278=($add_ptr90|0)==($65|0);
 if($cmp_i_i278){label=48;break;}else{label=62;break;}
 case 62: 
 var $incdec_ptr_i_i280128=((($65)-(1))|0);
 var $cmp1_i_i281129=($add_ptr90>>>0)<($incdec_ptr_i_i280128>>>0);
 if($cmp1_i_i281129){var $__first_addr_i_i270_0130=$add_ptr90;var $incdec_ptr_i_i280131=$incdec_ptr_i_i280128;label=63;break;}else{label=48;break;}
 case 63: 
 var $incdec_ptr_i_i280131;
 var $__first_addr_i_i270_0130;
 var $66=HEAP8[($__first_addr_i_i270_0130)];
 var $67=HEAP8[($incdec_ptr_i_i280131)];
 HEAP8[($__first_addr_i_i270_0130)]=$67;
 HEAP8[($incdec_ptr_i_i280131)]=$66;
 var $incdec_ptr2_i_i283=(($__first_addr_i_i270_0130+1)|0);
 var $incdec_ptr_i_i280=((($incdec_ptr_i_i280131)-(1))|0);
 var $cmp1_i_i281=($incdec_ptr2_i_i283>>>0)<($incdec_ptr_i_i280>>>0);
 if($cmp1_i_i281){var $__first_addr_i_i270_0130=$incdec_ptr2_i_i283;var $incdec_ptr_i_i280131=$incdec_ptr_i_i280;label=63;break;}else{label=48;break;}
 case 64: 
 var $__nf_2127;
 var $68=HEAP8[($__nf_2127)];
 var $cmp97=(($68<<24)>>24)==46;
 if($cmp97){label=65;break;}else{label=67;break;}
 case 65: 
 var $69=$15;
 var $vtable_i214=HEAP32[(($69)>>2)];
 var $vfn_i215=(($vtable_i214+12)|0);
 var $70=HEAP32[(($vfn_i215)>>2)];
 var $call_i216217=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$70]($17) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=66;break; } else { label=18;break; }
 case 66: 
 var $71=HEAP32[(($__oe)>>2)];
 var $incdec_ptr101=(($71+1)|0);
 HEAP32[(($__oe)>>2)]=$incdec_ptr101;
 HEAP8[($71)]=$call_i216217;
 var $incdec_ptr102=(($__nf_2127+1)|0);
 var $__nf_3=$incdec_ptr102;label=69;break;
 case 67: 
 var $vtable_i171=HEAP32[(($48)>>2)];
 var $vfn_i172=(($vtable_i171+28)|0);
 var $72=HEAP32[(($vfn_i172)>>2)];
 var $call_i173174=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$72]($8,$68) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=68;break; } else { label=14;break; }
 case 68: 
 var $73=HEAP32[(($__oe)>>2)];
 var $incdec_ptr106=(($73+1)|0);
 HEAP32[(($__oe)>>2)]=$incdec_ptr106;
 HEAP8[($73)]=$call_i173174;
 var $incdec_ptr109=(($__nf_2127+1)|0);
 var $cmp94=($incdec_ptr109>>>0)<($__ne>>>0);
 if($cmp94){var $__nf_2127=$incdec_ptr109;label=64;break;}else{var $__nf_3=$incdec_ptr109;label=69;break;}
 case 69: 
 var $__nf_3;
 var $74=HEAP32[(($__oe)>>2)];
 var $75=$6;
 var $vtable_i154=HEAP32[(($75)>>2)];
 var $vfn_i155=(($vtable_i154+32)|0);
 var $76=HEAP32[(($vfn_i155)>>2)];
 var $call_i156157=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$76]($8,$__nf_3,$__ne,$74) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=70;break; } else { label=18;break; }
 case 70: 
 var $sub_ptr_rhs_cast114=$__nf_3;
 var $sub_ptr_sub115=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast114))|0);
 var $77=HEAP32[(($__oe)>>2)];
 var $add_ptr116=(($77+$sub_ptr_sub115)|0);
 HEAP32[(($__oe)>>2)]=$add_ptr116;
 var $cmp117=($__np|0)==($__ne|0);
 if($cmp117){var $storemerge=$add_ptr116;label=72;break;}else{label=71;break;}
 case 71: 
 var $sub_ptr_lhs_cast120=$__np;
 var $sub_ptr_rhs_cast121=$__nb;
 var $sub_ptr_sub122=((($sub_ptr_lhs_cast120)-($sub_ptr_rhs_cast121))|0);
 var $add_ptr123=(($__ob+$sub_ptr_sub122)|0);
 var $storemerge=$add_ptr123;label=72;break;
 case 72: 
 var $storemerge;
 HEAP32[(($__op)>>2)]=$storemerge;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 STACKTOP=sp;return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce($agg_result,$this,$__s,$__iob,$__fl,$__v){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+152)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__s; $__s=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__s)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__fmt=sp;
 var $__nar=(sp)+(8);
 var $__nb=(sp)+(40);
 var $__o=(sp)+(48);
 var $__op=(sp)+(112);
 var $__oe=(sp)+(120);
 var $ref_tmp49=(sp)+(128);
 var $ref_tmp53=(sp)+(136);
 var $agg_tmp=(sp)+(144);
 var $$etemp$0$0=37;
 var $$etemp$0$1=0;
 var $st$1$0=(($__fmt)|0);
 HEAP32[(($st$1$0)>>2)]=$$etemp$0$0;
 var $st$2$1=(($__fmt+4)|0);
 HEAP32[(($st$2$1)>>2)]=$$etemp$0$1;
 var $arraydecay=$__fmt;
 var $add_ptr=(($arraydecay+1)|0);
 var $__fmtflags__i=(($__iob+4)|0);
 var $0=HEAP32[(($__fmtflags__i)>>2)];
 var $and_i=$0&2048;
 var $tobool_i=($and_i|0)==0;
 if($tobool_i){var $__fmtp_addr_0_i=$add_ptr;label=3;break;}else{label=2;break;}
 case 2: 
 var $incdec_ptr_i=(($arraydecay+2)|0);
 HEAP8[($add_ptr)]=43;
 var $__fmtp_addr_0_i=$incdec_ptr_i;label=3;break;
 case 3: 
 var $__fmtp_addr_0_i;
 var $and1_i=$0&1024;
 var $tobool2_i=($and1_i|0)==0;
 if($tobool2_i){var $__fmtp_addr_1_i=$__fmtp_addr_0_i;label=5;break;}else{label=4;break;}
 case 4: 
 var $incdec_ptr4_i=(($__fmtp_addr_0_i+1)|0);
 HEAP8[($__fmtp_addr_0_i)]=35;
 var $__fmtp_addr_1_i=$incdec_ptr4_i;label=5;break;
 case 5: 
 var $__fmtp_addr_1_i;
 var $and6_i=$0&260;
 var $and7_i=$0>>>14;
 var $cmp8_i=($and6_i|0)==260;
 if($cmp8_i){label=13;break;}else{label=6;break;}
 case 6: 
 var $incdec_ptr10_i=(($__fmtp_addr_1_i+1)|0);
 HEAP8[($__fmtp_addr_1_i)]=46;
 var $incdec_ptr11_i=(($__fmtp_addr_1_i+2)|0);
 HEAP8[($incdec_ptr10_i)]=42;
 HEAP8[($incdec_ptr11_i)]=76;
 var $scevgep=(($__fmtp_addr_1_i+3)|0);
 if(($and6_i|0)==256){ label=10;break;}else if(($and6_i|0)==4){ label=7;break;}else{label=16;break;}
 case 7: 
 var $1=$and7_i&1;
 var $tobool18_i=($1|0)==0;
 if($tobool18_i){label=9;break;}else{label=8;break;}
 case 8: 
 HEAP8[($scevgep)]=70;
 var $specify_precision_0_off0_ph_i61=1;label=19;break;
 case 9: 
 HEAP8[($scevgep)]=102;
 var $specify_precision_0_off0_ph_i61=1;label=19;break;
 case 10: 
 var $2=$and7_i&1;
 var $tobool25_i=($2|0)==0;
 if($tobool25_i){label=12;break;}else{label=11;break;}
 case 11: 
 HEAP8[($scevgep)]=69;
 var $specify_precision_0_off0_ph_i61=1;label=19;break;
 case 12: 
 HEAP8[($scevgep)]=101;
 var $specify_precision_0_off0_ph_i61=1;label=19;break;
 case 13: 
 HEAP8[($__fmtp_addr_1_i)]=76;
 var $scevgep60=(($__fmtp_addr_1_i+1)|0);
 var $3=$and7_i&1;
 var $tobool32_i64=($3|0)==0;
 if($tobool32_i64){label=15;break;}else{label=14;break;}
 case 14: 
 HEAP8[($scevgep60)]=65;
 var $specify_precision_0_off0_ph_i61=0;label=19;break;
 case 15: 
 HEAP8[($scevgep60)]=97;
 var $specify_precision_0_off0_ph_i61=0;label=19;break;
 case 16: 
 var $4=$and7_i&1;
 var $tobool32_i=($4|0)==0;
 if($tobool32_i){label=18;break;}else{label=17;break;}
 case 17: 
 HEAP8[($scevgep)]=71;
 var $specify_precision_0_off0_ph_i61=1;label=19;break;
 case 18: 
 HEAP8[($scevgep)]=103;
 var $specify_precision_0_off0_ph_i61=1;label=19;break;
 case 19: 
 var $specify_precision_0_off0_ph_i61;
 var $arraydecay3=(($__nar)|0);
 HEAP32[(($__nb)>>2)]=$arraydecay3;
 var $5=HEAP8[(15944)];
 var $guard_uninitialized_i=(($5<<24)>>24)==0;
 if($guard_uninitialized_i){label=20;break;}else{label=24;break;}
 case 20: 
 var $6=___cxa_guard_acquire(15944);
 var $tobool_i30=($6|0)==0;
 if($tobool_i30){label=24;break;}else{label=21;break;}
 case 21: 
 var $call_i31=(function() { try { __THREW__ = 0; return _newlocale(2147483647,2960,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=22;break; } else { label=23;break; }
 case 22: 
 HEAP32[((13952)>>2)]=$call_i31;
 label=24;break;
 case 23: 
 var $7$0 = ___cxa_find_matching_catch(-1, -1); var $7$1 = tempRet0;
 ___resumeException($7$0)
 case 24: 
 var $8=HEAP32[((13952)>>2)];
 if($specify_precision_0_off0_ph_i61){label=25;break;}else{label=26;break;}
 case 25: 
 var $__precision__i=(($__iob+8)|0);
 var $9=HEAP32[(($__precision__i)>>2)];
 var $call7=__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($arraydecay3,30,$8,$arraydecay,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$9,HEAPF64[(((tempVarArgs)+(8))>>3)]=$__v,tempVarArgs)); STACKTOP=tempVarArgs;
 var $__nc_0=$call7;label=27;break;
 case 26: 
 var $call10=__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($arraydecay3,30,$8,$arraydecay,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAPF64[((tempVarArgs)>>3)]=$__v,tempVarArgs)); STACKTOP=tempVarArgs;
 var $__nc_0=$call10;label=27;break;
 case 27: 
 var $__nc_0;
 var $cmp=($__nc_0|0)>29;
 if($cmp){label=29;break;}else{label=28;break;}
 case 28: 
 var $_pre58=HEAP32[(($__nb)>>2)];
 var $__nc_2=$__nc_0;var $__nbh_sroa_0_1=0;var $22=$_pre58;label=47;break;
 case 29: 
 var $10=HEAP8[(15944)];
 var $guard_uninitialized_i32=(($10<<24)>>24)==0;
 if($specify_precision_0_off0_ph_i61){label=30;break;}else{label=38;break;}
 case 30: 
 if($guard_uninitialized_i32){label=31;break;}else{label=35;break;}
 case 31: 
 var $11=___cxa_guard_acquire(15944);
 var $tobool_i33=($11|0)==0;
 if($tobool_i33){label=35;break;}else{label=32;break;}
 case 32: 
 var $call_i35=(function() { try { __THREW__ = 0; return _newlocale(2147483647,2960,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=33;break; } else { label=34;break; }
 case 33: 
 HEAP32[((13952)>>2)]=$call_i35;
 label=35;break;
 case 34: 
 var $12$0 = ___cxa_find_matching_catch(-1, -1); var $12$1 = tempRet0;
 var $eh_lpad_body$1=$12$1;var $eh_lpad_body$0=$12$0;label=37;break;
 case 35: 
 var $13=HEAP32[((13952)>>2)];
 var $__precision__i106=(($__iob+8)|0);
 var $14=HEAP32[(($__precision__i106)>>2)];
 var $call19=(function() { try { __THREW__ = 0; return __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__nb,$13,$arraydecay,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$14,HEAPF64[(((tempVarArgs)+(8))>>3)]=$__v,tempVarArgs)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })(); STACKTOP=tempVarArgs;if (!__THREW__) { var $__nc_1=$call19;label=44;break; } else { label=36;break; }
 case 36: 
 var $15$0 = ___cxa_find_matching_catch(-1, -1); var $15$1 = tempRet0;
 var $eh_lpad_body$1=$15$1;var $eh_lpad_body$0=$15$0;label=37;break;
 case 37: 
 var $eh_lpad_body$0;
 var $eh_lpad_body$1;
 var $16=$eh_lpad_body$0;
 var $17=$eh_lpad_body$1;
 var $ehselector_slot_156=$17;var $exn_slot_157=$16;label=72;break;
 case 38: 
 if($guard_uninitialized_i32){label=39;break;}else{label=43;break;}
 case 39: 
 var $18=___cxa_guard_acquire(15944);
 var $tobool_i41=($18|0)==0;
 if($tobool_i41){label=43;break;}else{label=40;break;}
 case 40: 
 var $call_i43=(function() { try { __THREW__ = 0; return _newlocale(2147483647,2960,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=41;break; } else { label=42;break; }
 case 41: 
 HEAP32[((13952)>>2)]=$call_i43;
 label=43;break;
 case 42: 
 var $19$0 = ___cxa_find_matching_catch(-1, -1); var $19$1 = tempRet0;
 var $eh_lpad_body$1=$19$1;var $eh_lpad_body$0=$19$0;label=37;break;
 case 43: 
 var $20=HEAP32[((13952)>>2)];
 var $call25=(function() { try { __THREW__ = 0; return __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__nb,$20,$arraydecay,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAPF64[((tempVarArgs)>>3)]=$__v,tempVarArgs)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })(); STACKTOP=tempVarArgs;if (!__THREW__) { var $__nc_1=$call25;label=44;break; } else { label=36;break; }
 case 44: 
 var $__nc_1;
 var $21=HEAP32[(($__nb)>>2)];
 var $cmp27=($21|0)==0;
 if($cmp27){label=45;break;}else{var $__nc_2=$__nc_1;var $__nbh_sroa_0_1=$21;var $22=$21;label=47;break;}
 case 45: 
 (function() { try { __THREW__ = 0; return __ZSt17__throw_bad_allocv() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=46;break; } else { label=36;break; }
 case 46: 
 var $_pre=HEAP32[(($__nb)>>2)];
 var $__nc_2=$__nc_1;var $__nbh_sroa_0_1=$_pre;var $22=$_pre;label=47;break;
 case 47: 
 var $22;
 var $__nbh_sroa_0_1;
 var $__nc_2;
 var $add_ptr32=(($22+$__nc_2)|0);
 var $23=HEAP32[(($__fmtflags__i)>>2)];
 var $and_i50=$23&176;
 if(($and_i50|0)==16){ label=48;break;}else if(($and_i50|0)==32){ var $retval_0_i=$add_ptr32;label=54;break;}else{label=53;break;}
 case 48: 
 var $24=HEAP8[($22)];
 if((($24<<24)>>24)==45|(($24<<24)>>24)==43){ label=49;break;}else{label=50;break;}
 case 49: 
 var $add_ptr_i=(($22+1)|0);
 var $retval_0_i=$add_ptr_i;label=54;break;
 case 50: 
 var $cmp4_i=($__nc_2|0)>1;
 var $cmp7_i=(($24<<24)>>24)==48;
 var $or_cond_i=$cmp4_i&$cmp7_i;
 if($or_cond_i){label=51;break;}else{label=53;break;}
 case 51: 
 var $arrayidx9_i=(($22+1)|0);
 var $25=HEAP8[($arrayidx9_i)];
 if((($25<<24)>>24)==120|(($25<<24)>>24)==88){ label=52;break;}else{label=53;break;}
 case 52: 
 var $add_ptr17_i=(($22+2)|0);
 var $retval_0_i=$add_ptr17_i;label=54;break;
 case 53: 
 var $retval_0_i=$22;label=54;break;
 case 54: 
 var $retval_0_i;
 var $arraydecay35=(($__o)|0);
 var $cmp38=($22|0)==($arraydecay3|0);
 if($cmp38){var $__ob_0=$arraydecay35;var $__obh_sroa_0_1=0;var $29=$arraydecay3;label=59;break;}else{label=55;break;}
 case 55: 
 var $mul=$__nc_2<<1;
 var $call43=_malloc($mul);
 var $cmp44=($call43|0)==0;
 if($cmp44){label=56;break;}else{var $__ob_0=$call43;var $__obh_sroa_0_1=$call43;var $29=$22;label=59;break;}
 case 56: 
 (function() { try { __THREW__ = 0; return __ZSt17__throw_bad_allocv() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=57;break; } else { var $__obh_sroa_0_0=0;label=58;break; }
 case 57: 
 var $_pre59=HEAP32[(($__nb)>>2)];
 var $__ob_0=0;var $__obh_sroa_0_1=0;var $29=$_pre59;label=59;break;
 case 58: 
 var $__obh_sroa_0_0;
 var $26$0 = ___cxa_find_matching_catch(-1, -1); var $26$1 = tempRet0;
 var $27=$26$0;
 var $28=$26$1;
 var $exn_slot_0=$27;var $ehselector_slot_0=$28;var $__obh_sroa_0_2=$__obh_sroa_0_0;label=68;break;
 case 59: 
 var $29;
 var $__obh_sroa_0_1;
 var $__ob_0;
 (function() { try { __THREW__ = 0; return __ZNKSt3__18ios_base6getlocEv($ref_tmp49,$__iob) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=60;break; } else { var $__obh_sroa_0_0=$__obh_sroa_0_1;label=58;break; }
 case 60: 
 (function() { try { __THREW__ = 0; return __ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE($29,$retval_0_i,$add_ptr32,$__ob_0,$__op,$__oe,$ref_tmp49) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=61;break; } else { label=67;break; }
 case 61: 
 var $__locale__i53=(($ref_tmp49)|0);
 var $30=HEAP32[(($__locale__i53)>>2)];
 var $31=(($30)|0);
 var $call_i54=__ZNSt3__114__shared_count16__release_sharedEv($31);
 var $32=(($__s)|0);
 var $33=HEAP32[(($32)>>2)];
 var $34=(($agg_tmp)|0);
 HEAP32[(($34)>>2)]=$33;
 var $35=HEAP32[(($__op)>>2)];
 var $36=HEAP32[(($__oe)>>2)];
 (function() { try { __THREW__ = 0; return __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($ref_tmp53,$agg_tmp,$__ob_0,$35,$36,$__iob,$__fl) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=62;break; } else { var $__obh_sroa_0_0=$__obh_sroa_0_1;label=58;break; }
 case 62: 
 var $37=(($ref_tmp53)|0);
 var $38=HEAP32[(($37)>>2)];
 HEAP32[(($32)>>2)]=$38;
 var $39=(($agg_result)|0);
 HEAP32[(($39)>>2)]=$38;
 var $tobool_i_i_i191=($__obh_sroa_0_1|0)==0;
 if($tobool_i_i_i191){label=64;break;}else{label=63;break;}
 case 63: 
 _free($__obh_sroa_0_1);
 label=64;break;
 case 64: 
 var $tobool_i_i_i222=($__nbh_sroa_0_1|0)==0;
 if($tobool_i_i_i222){label=66;break;}else{label=65;break;}
 case 65: 
 _free($__nbh_sroa_0_1);
 label=66;break;
 case 66: 
 STACKTOP=sp;return;
 case 67: 
 var $40$0 = ___cxa_find_matching_catch(-1, -1); var $40$1 = tempRet0;
 var $41=$40$0;
 var $42=$40$1;
 var $__locale__i=(($ref_tmp49)|0);
 var $43=HEAP32[(($__locale__i)>>2)];
 var $44=(($43)|0);
 var $call_i=__ZNSt3__114__shared_count16__release_sharedEv($44);
 var $exn_slot_0=$41;var $ehselector_slot_0=$42;var $__obh_sroa_0_2=$__obh_sroa_0_1;label=68;break;
 case 68: 
 var $__obh_sroa_0_2;
 var $ehselector_slot_0;
 var $exn_slot_0;
 var $tobool_i_i_i95=($__obh_sroa_0_2|0)==0;
 if($tobool_i_i_i95){label=70;break;}else{label=69;break;}
 case 69: 
 _free($__obh_sroa_0_2);
 label=70;break;
 case 70: 
 var $tobool_i_i_i=($__nbh_sroa_0_1|0)==0;
 if($tobool_i_i_i){var $ehselector_slot_156=$ehselector_slot_0;var $exn_slot_157=$exn_slot_0;label=72;break;}else{label=71;break;}
 case 71: 
 _free($__nbh_sroa_0_1);
 var $ehselector_slot_156=$ehselector_slot_0;var $exn_slot_157=$exn_slot_0;label=72;break;
 case 72: 
 var $exn_slot_157;
 var $ehselector_slot_156;
 var $lpad_val$0=$exn_slot_157;
 var $lpad_val$1=0;
 var $lpad_val56$0=$lpad_val$0;
 var $lpad_val56$1=$ehselector_slot_156;
 ___resumeException($lpad_val56$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv($agg_result,$this,$__s,$__iob,$__fl,$__v){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+104)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__s; $__s=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__s)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__p_i_i_i=sp;
 var $__fmt=(sp)+(16);
 var $__nar=(sp)+(24);
 var $__o=(sp)+(48);
 var $ref_tmp=(sp)+(88);
 var $agg_tmp=(sp)+(96);
 var $0=(($__fmt)|0);
 assert(6 % 1 === 0);HEAP8[($0)]=HEAP8[(4152)];HEAP8[((($0)+(1))|0)]=HEAP8[(4153)];HEAP8[((($0)+(2))|0)]=HEAP8[(4154)];HEAP8[((($0)+(3))|0)]=HEAP8[(4155)];HEAP8[((($0)+(4))|0)]=HEAP8[(4156)];HEAP8[((($0)+(5))|0)]=HEAP8[(4157)];
 var $arraydecay=(($__nar)|0);
 var $1=HEAP8[(15944)];
 var $guard_uninitialized_i=(($1<<24)>>24)==0;
 if($guard_uninitialized_i){label=2;break;}else{label=6;break;}
 case 2: 
 var $2=___cxa_guard_acquire(15944);
 var $tobool_i=($2|0)==0;
 if($tobool_i){label=6;break;}else{label=3;break;}
 case 3: 
 var $call_i8=(function() { try { __THREW__ = 0; return _newlocale(2147483647,2960,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=4;break; } else { label=5;break; }
 case 4: 
 HEAP32[((13952)>>2)]=$call_i8;
 label=6;break;
 case 5: 
 var $3$0 = ___cxa_find_matching_catch(-1, -1); var $3$1 = tempRet0;
 ___resumeException($3$0)
 case 6: 
 var $4=HEAP32[((13952)>>2)];
 var $call3=__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($arraydecay,20,$4,$0,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$__v,tempVarArgs)); STACKTOP=tempVarArgs;
 var $add_ptr=(($__nar+$call3)|0);
 var $__fmtflags__i_i=(($__iob+4)|0);
 var $5=HEAP32[(($__fmtflags__i_i)>>2)];
 var $and_i=$5&176;
 if(($and_i|0)==32){ var $retval_0_i=$add_ptr;label=13;break;}else if(($and_i|0)==16){ label=7;break;}else{label=12;break;}
 case 7: 
 var $6=HEAP8[($arraydecay)];
 if((($6<<24)>>24)==45|(($6<<24)>>24)==43){ label=8;break;}else{label=9;break;}
 case 8: 
 var $add_ptr_i=(($__nar+1)|0);
 var $retval_0_i=$add_ptr_i;label=13;break;
 case 9: 
 var $cmp4_i=($call3|0)>1;
 var $cmp7_i=(($6<<24)>>24)==48;
 var $or_cond_i=$cmp4_i&$cmp7_i;
 if($or_cond_i){label=10;break;}else{label=12;break;}
 case 10: 
 var $arrayidx9_i=(($__nar+1)|0);
 var $7=HEAP8[($arrayidx9_i)];
 if((($7<<24)>>24)==120|(($7<<24)>>24)==88){ label=11;break;}else{label=12;break;}
 case 11: 
 var $add_ptr17_i=(($__nar+2)|0);
 var $retval_0_i=$add_ptr17_i;label=13;break;
 case 12: 
 var $retval_0_i=$arraydecay;label=13;break;
 case 13: 
 var $retval_0_i;
 __ZNKSt3__18ios_base6getlocEv($ref_tmp,$__iob);
 var $__locale__i=(($ref_tmp)|0);
 var $8=HEAP32[(($__locale__i)>>2)];
 var $9=$__p_i_i_i;
 var $10=HEAP32[((15384)>>2)];
 var $cmp_i_i_i=($10|0)==-1;
 if($cmp_i_i_i){label=15;break;}else{label=14;break;}
 case 14: 
 var $ref_tmp_i_sroa_0_0__idx_i_i=(($__p_i_i_i)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i)>>2)]=15384;
 var $ref_tmp_i_sroa_1_4__idx6_i_i=(($__p_i_i_i+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i=(($__p_i_i_i+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(15384,$9,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=15;break; } else { label=20;break; }
 case 15: 
 var $11=HEAP32[((15388)>>2)];
 var $sub_i_i=((($11)-(1))|0);
 var $__end__i_i_i_i=(($8+12)|0);
 var $12=HEAP32[(($__end__i_i_i_i)>>2)];
 var $__begin__i_i_i_i=(($8+8)|0);
 var $13=HEAP32[(($__begin__i_i_i_i)>>2)];
 var $sub_ptr_lhs_cast_i_i_i_i=$12;
 var $sub_ptr_rhs_cast_i_i_i_i=$13;
 var $sub_ptr_sub_i_i_i_i=((($sub_ptr_lhs_cast_i_i_i_i)-($sub_ptr_rhs_cast_i_i_i_i))|0);
 var $sub_ptr_div_i_i_i_i=$sub_ptr_sub_i_i_i_i>>2;
 var $cmp_i_i1_i=($sub_ptr_div_i_i_i_i>>>0)>($sub_i_i>>>0);
 if($cmp_i_i1_i){label=16;break;}else{label=17;break;}
 case 16: 
 var $arrayidx_i_i_i_i=(($13+($sub_i_i<<2))|0);
 var $14=HEAP32[(($arrayidx_i_i_i_i)>>2)];
 var $tobool_i_i_i=($14|0)==0;
 if($tobool_i_i_i){label=17;break;}else{label=19;break;}
 case 17: 
 var $exception_i_i=___cxa_allocate_exception(4);
 var $15=$exception_i_i;
 __ZNSt8bad_castC2Ev($15);
 (function() { try { __THREW__ = 0; return ___cxa_throw($exception_i_i,10264,(376)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=18;break; } else { label=20;break; }
 case 18: 
 throw "Reached an unreachable!";
 case 19: 
 var $16=$14;
 var $17=HEAP32[(($__locale__i)>>2)];
 var $18=(($17)|0);
 var $call_i11=__ZNSt3__114__shared_count16__release_sharedEv($18);
 var $arraydecay9=(($__o)|0);
 var $19=$14;
 var $vtable_i=HEAP32[(($19)>>2)];
 var $vfn_i=(($vtable_i+32)|0);
 var $20=HEAP32[(($vfn_i)>>2)];
 var $call_i=FUNCTION_TABLE[$20]($16,$arraydecay,$add_ptr,$arraydecay9);
 var $add_ptr13=(($__o+$call3)|0);
 var $cmp=($retval_0_i|0)==($add_ptr|0);
 if($cmp){var $__op_0=$add_ptr13;label=22;break;}else{label=21;break;}
 case 20: 
 var $21$0 = ___cxa_find_matching_catch(-1, -1); var $21$1 = tempRet0;
 var $22=HEAP32[(($__locale__i)>>2)];
 var $23=(($22)|0);
 var $call_i13=__ZNSt3__114__shared_count16__release_sharedEv($23);
 ___resumeException($21$0)
 case 21: 
 var $sub_ptr_rhs_cast=$__nar;
 var $sub_ptr_lhs_cast16=$retval_0_i;
 var $sub_ptr_sub18=((($sub_ptr_lhs_cast16)-($sub_ptr_rhs_cast))|0);
 var $add_ptr19=(($__o+$sub_ptr_sub18)|0);
 var $__op_0=$add_ptr19;label=22;break;
 case 22: 
 var $__op_0;
 var $24=(($__s)|0);
 var $25=HEAP32[(($24)>>2)];
 var $26=(($agg_tmp)|0);
 HEAP32[(($26)>>2)]=$25;
 __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result,$agg_tmp,$arraydecay9,$__op_0,$add_ptr13,$__iob,$__fl);
 STACKTOP=sp;return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this){
 var label=0;
 var $0=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($0);
 var $1=$this;
 __ZdlPv($1);
 return;
}
function __ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev($this){
 var label=0;
 var $0=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($0);
 return;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb($agg_result,$this,$__s,$__iob,$__fl,$__v){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+48)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__s; $__s=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__s)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__p_i_i_i=sp;
 var $agg_tmp=(sp)+(16);
 var $ref_tmp=(sp)+(24);
 var $__nm=(sp)+(32);
 var $__fmtflags__i=(($__iob+4)|0);
 var $0=HEAP32[(($__fmtflags__i)>>2)];
 var $and=$0&1;
 var $cmp=($and|0)==0;
 if($cmp){label=2;break;}else{label=3;break;}
 case 2: 
 var $1=$this;
 var $vtable=HEAP32[(($1)>>2)];
 var $vfn=(($vtable+24)|0);
 var $2=HEAP32[(($vfn)>>2)];
 var $3=(($__s)|0);
 var $4=HEAP32[(($3)>>2)];
 var $5=(($agg_tmp)|0);
 HEAP32[(($5)>>2)]=$4;
 var $conv=($__v&1);
 FUNCTION_TABLE[$2]($agg_result,$this,$agg_tmp,$__iob,$__fl,$conv);
 label=32;break;
 case 3: 
 __ZNKSt3__18ios_base6getlocEv($ref_tmp,$__iob);
 var $__locale__i=(($ref_tmp)|0);
 var $6=HEAP32[(($__locale__i)>>2)];
 var $7=$__p_i_i_i;
 var $8=HEAP32[((14992)>>2)];
 var $cmp_i_i_i=($8|0)==-1;
 if($cmp_i_i_i){label=5;break;}else{label=4;break;}
 case 4: 
 var $ref_tmp_i_sroa_0_0__idx_i_i=(($__p_i_i_i)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i)>>2)]=14992;
 var $ref_tmp_i_sroa_1_4__idx6_i_i=(($__p_i_i_i+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i=(($__p_i_i_i+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(14992,$7,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=5;break; } else { label=29;break; }
 case 5: 
 var $9=HEAP32[((14996)>>2)];
 var $sub_i_i=((($9)-(1))|0);
 var $__end__i_i_i_i=(($6+12)|0);
 var $10=HEAP32[(($__end__i_i_i_i)>>2)];
 var $__begin__i_i_i_i=(($6+8)|0);
 var $11=HEAP32[(($__begin__i_i_i_i)>>2)];
 var $sub_ptr_lhs_cast_i_i_i_i=$10;
 var $sub_ptr_rhs_cast_i_i_i_i=$11;
 var $sub_ptr_sub_i_i_i_i=((($sub_ptr_lhs_cast_i_i_i_i)-($sub_ptr_rhs_cast_i_i_i_i))|0);
 var $sub_ptr_div_i_i_i_i=$sub_ptr_sub_i_i_i_i>>2;
 var $cmp_i_i1_i=($sub_ptr_div_i_i_i_i>>>0)>($sub_i_i>>>0);
 if($cmp_i_i1_i){label=6;break;}else{label=7;break;}
 case 6: 
 var $arrayidx_i_i_i_i=(($11+($sub_i_i<<2))|0);
 var $12=HEAP32[(($arrayidx_i_i_i_i)>>2)];
 var $tobool_i_i_i9=($12|0)==0;
 if($tobool_i_i_i9){label=7;break;}else{label=9;break;}
 case 7: 
 var $exception_i_i=___cxa_allocate_exception(4);
 var $13=$exception_i_i;
 __ZNSt8bad_castC2Ev($13);
 (function() { try { __THREW__ = 0; return ___cxa_throw($exception_i_i,10264,(376)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=8;break; } else { label=29;break; }
 case 8: 
 throw "Reached an unreachable!";
 case 9: 
 var $14=$12;
 var $15=HEAP32[(($__locale__i)>>2)];
 var $16=(($15)|0);
 var $call_i=__ZNSt3__114__shared_count16__release_sharedEv($16);
 var $17=$12;
 var $vtable_i=HEAP32[(($17)>>2)];
 if($__v){label=10;break;}else{label=11;break;}
 case 10: 
 var $vfn_i=(($vtable_i+24)|0);
 var $18=HEAP32[(($vfn_i)>>2)];
 FUNCTION_TABLE[$18]($__nm,$14);
 label=12;break;
 case 11: 
 var $vfn_i22=(($vtable_i+28)|0);
 var $19=HEAP32[(($vfn_i22)>>2)];
 FUNCTION_TABLE[$19]($__nm,$14);
 label=12;break;
 case 12: 
 var $__size__i_i_i=$__nm;
 var $20=HEAP8[($__size__i_i_i)];
 var $and_i_i_i=$20&1;
 var $tobool_i_i_i=(($and_i_i_i<<24)>>24)==0;
 if($tobool_i_i_i){label=14;break;}else{label=13;break;}
 case 13: 
 var $__data__i21_i_i=(($__nm+8)|0);
 var $21=HEAP32[(($__data__i21_i_i)>>2)];
 var $__data__i_i_i75_pre=(($__nm+4)|0);
 var $__i_sroa_0_0_ph=$21;var $__data__i_i_i75_pre_phi=$__data__i_i_i75_pre;var $__data__i21_i_i67_pre_phi=$__data__i21_i_i;label=15;break;
 case 14: 
 var $__data__i_i_i=(($__nm+4)|0);
 var $__data__i21_i_i67_pre=(($__nm+8)|0);
 var $__i_sroa_0_0_ph=$__data__i_i_i;var $__data__i_i_i75_pre_phi=$__data__i_i_i;var $__data__i21_i_i67_pre_phi=$__data__i21_i_i67_pre;label=15;break;
 case 15: 
 var $__data__i21_i_i67_pre_phi;
 var $__data__i_i_i75_pre_phi;
 var $__i_sroa_0_0_ph;
 var $__sbuf__i=(($__s)|0);
 var $__i_sroa_0_0=$__i_sroa_0_0_ph;var $22=$20;label=16;break;
 case 16: 
 var $22;
 var $__i_sroa_0_0;
 var $and_i_i_i59=$22&1;
 var $tobool_i_i_i60=(($and_i_i_i59<<24)>>24)==0;
 if($tobool_i_i_i60){var $cond_i_i78=$__data__i_i_i75_pre_phi;label=18;break;}else{label=17;break;}
 case 17: 
 var $23=HEAP32[(($__data__i21_i_i67_pre_phi)>>2)];
 var $cond_i_i78=$23;label=18;break;
 case 18: 
 var $cond_i_i78;
 var $conv_i_i22_i=($22&255);
 var $and_i_i23_i=$conv_i_i22_i&1;
 var $tobool_i_i24_i=($and_i_i23_i|0)==0;
 if($tobool_i_i24_i){label=20;break;}else{label=19;break;}
 case 19: 
 var $24=HEAP32[(($__data__i_i_i75_pre_phi)>>2)];
 var $cond_i34_i=$24;label=21;break;
 case 20: 
 var $shr_i_i_i8=$conv_i_i22_i>>>1;
 var $cond_i34_i=$shr_i_i_i8;label=21;break;
 case 21: 
 var $cond_i34_i;
 var $add_ptr_i=(($cond_i_i78+($cond_i34_i<<2))|0);
 var $lnot_i=($__i_sroa_0_0|0)==($add_ptr_i|0);
 if($lnot_i){label=31;break;}else{label=22;break;}
 case 22: 
 var $25=HEAP32[(($__i_sroa_0_0)>>2)];
 var $26=HEAP32[(($__sbuf__i)>>2)];
 var $tobool_i=($26|0)==0;
 if($tobool_i){label=28;break;}else{label=23;break;}
 case 23: 
 var $__nout__i_i=(($26+24)|0);
 var $27=HEAP32[(($__nout__i_i)>>2)];
 var $__eout__i_i=(($26+28)|0);
 var $28=HEAP32[(($__eout__i_i)>>2)];
 var $cmp_i_i=($27|0)==($28|0);
 if($cmp_i_i){label=24;break;}else{label=25;break;}
 case 24: 
 var $29=$26;
 var $vtable_i_i=HEAP32[(($29)>>2)];
 var $vfn_i_i=(($vtable_i_i+52)|0);
 var $30=HEAP32[(($vfn_i_i)>>2)];
 var $call2_i_i33=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$30]($26,$25) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i_0=$call2_i_i33;label=26;break; } else { label=30;break; }
 case 25: 
 var $incdec_ptr_i_i=(($27+4)|0);
 HEAP32[(($__nout__i_i)>>2)]=$incdec_ptr_i_i;
 HEAP32[(($27)>>2)]=$25;
 var $retval_i_i_0=$25;label=26;break;
 case 26: 
 var $retval_i_i_0;
 var $cmp_i6_i=($retval_i_i_0|0)==-1;
 if($cmp_i6_i){label=27;break;}else{label=28;break;}
 case 27: 
 HEAP32[(($__sbuf__i)>>2)]=0;
 label=28;break;
 case 28: 
 var $incdec_ptr_i=(($__i_sroa_0_0+4)|0);
 var $_pre=HEAP8[($__size__i_i_i)];
 var $__i_sroa_0_0=$incdec_ptr_i;var $22=$_pre;label=16;break;
 case 29: 
 var $31$0 = ___cxa_find_matching_catch(-1, -1); var $31$1 = tempRet0;
 var $32=$31$0;
 var $33=$31$1;
 var $34=HEAP32[(($__locale__i)>>2)];
 var $35=(($34)|0);
 var $call_i14=__ZNSt3__114__shared_count16__release_sharedEv($35);
 var $ehselector_slot_0=$33;var $exn_slot_0=$32;label=33;break;
 case 30: 
 var $36$0 = ___cxa_find_matching_catch(-1, -1); var $36$1 = tempRet0;
 var $37=$36$0;
 var $38=$36$1;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($__nm);
 var $ehselector_slot_0=$38;var $exn_slot_0=$37;label=33;break;
 case 31: 
 var $39=HEAP32[(($__sbuf__i)>>2)];
 var $40=(($agg_result)|0);
 HEAP32[(($40)>>2)]=$39;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($__nm);
 label=32;break;
 case 32: 
 STACKTOP=sp;return;
 case 33: 
 var $exn_slot_0;
 var $ehselector_slot_0;
 var $lpad_val$0=$exn_slot_0;
 var $lpad_val$1=0;
 var $lpad_val15$0=$lpad_val$0;
 var $lpad_val15$1=$ehselector_slot_0;
 ___resumeException($lpad_val15$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl($agg_result,$this,$__s,$__iob,$__fl,$__v){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+144)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__s; $__s=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__s)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__fmt=sp;
 var $__nar=(sp)+(8);
 var $__o=(sp)+(24);
 var $__op=(sp)+(112);
 var $__oe=(sp)+(120);
 var $ref_tmp=(sp)+(128);
 var $agg_tmp=(sp)+(136);
 var $0=(($__fmt)|0);
 assert(6 % 1 === 0);HEAP8[($0)]=HEAP8[(4144)];HEAP8[((($0)+(1))|0)]=HEAP8[(4145)];HEAP8[((($0)+(2))|0)]=HEAP8[(4146)];HEAP8[((($0)+(3))|0)]=HEAP8[(4147)];HEAP8[((($0)+(4))|0)]=HEAP8[(4148)];HEAP8[((($0)+(5))|0)]=HEAP8[(4149)];
 var $add_ptr=(($__fmt+1)|0);
 var $__fmtflags__i=(($__iob+4)|0);
 var $1=HEAP32[(($__fmtflags__i)>>2)];
 var $and_i=$1&2048;
 var $tobool_i=($and_i|0)==0;
 if($tobool_i){var $__fmtp_addr_0_i=$add_ptr;label=3;break;}else{label=2;break;}
 case 2: 
 var $incdec_ptr_i=(($__fmt+2)|0);
 HEAP8[($add_ptr)]=43;
 var $__fmtp_addr_0_i=$incdec_ptr_i;label=3;break;
 case 3: 
 var $__fmtp_addr_0_i;
 var $and1_i=$1&512;
 var $tobool2_i=($and1_i|0)==0;
 if($tobool2_i){var $__fmtp_addr_113_i_ph=$__fmtp_addr_0_i;label=5;break;}else{label=4;break;}
 case 4: 
 var $incdec_ptr4_i=(($__fmtp_addr_0_i+1)|0);
 HEAP8[($__fmtp_addr_0_i)]=35;
 var $__fmtp_addr_113_i_ph=$incdec_ptr4_i;label=5;break;
 case 5: 
 var $__fmtp_addr_113_i_ph;
 HEAP8[($__fmtp_addr_113_i_ph)]=108;
 var $scevgep=(($__fmtp_addr_113_i_ph+1)|0);
 var $and9_i=$1&74;
 if(($and9_i|0)==64){ label=6;break;}else if(($and9_i|0)==8){ label=7;break;}else{label=10;break;}
 case 6: 
 HEAP8[($scevgep)]=111;
 label=11;break;
 case 7: 
 var $and14_i=$1&16384;
 var $tobool15_i=($and14_i|0)==0;
 if($tobool15_i){label=9;break;}else{label=8;break;}
 case 8: 
 HEAP8[($scevgep)]=88;
 label=11;break;
 case 9: 
 HEAP8[($scevgep)]=120;
 label=11;break;
 case 10: 
 HEAP8[($scevgep)]=100;
 label=11;break;
 case 11: 
 var $arraydecay2=(($__nar)|0);
 var $2=HEAP8[(15944)];
 var $guard_uninitialized_i=(($2<<24)>>24)==0;
 if($guard_uninitialized_i){label=12;break;}else{label=16;break;}
 case 12: 
 var $3=___cxa_guard_acquire(15944);
 var $tobool_i5=($3|0)==0;
 if($tobool_i5){label=16;break;}else{label=13;break;}
 case 13: 
 var $call_i6=(function() { try { __THREW__ = 0; return _newlocale(2147483647,2960,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=14;break; } else { label=15;break; }
 case 14: 
 HEAP32[((13952)>>2)]=$call_i6;
 label=16;break;
 case 15: 
 var $4$0 = ___cxa_find_matching_catch(-1, -1); var $4$1 = tempRet0;
 ___resumeException($4$0)
 case 16: 
 var $5=HEAP32[((13952)>>2)];
 var $call5=__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($arraydecay2,12,$5,$0,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$__v,tempVarArgs)); STACKTOP=tempVarArgs;
 var $add_ptr7=(($__nar+$call5)|0);
 var $6=HEAP32[(($__fmtflags__i)>>2)];
 var $and_i7=$6&176;
 if(($and_i7|0)==16){ label=17;break;}else if(($and_i7|0)==32){ var $retval_0_i=$add_ptr7;label=23;break;}else{label=22;break;}
 case 17: 
 var $7=HEAP8[($arraydecay2)];
 if((($7<<24)>>24)==45|(($7<<24)>>24)==43){ label=18;break;}else{label=19;break;}
 case 18: 
 var $add_ptr_i=(($__nar+1)|0);
 var $retval_0_i=$add_ptr_i;label=23;break;
 case 19: 
 var $cmp4_i=($call5|0)>1;
 var $cmp7_i=(($7<<24)>>24)==48;
 var $or_cond_i=$cmp4_i&$cmp7_i;
 if($or_cond_i){label=20;break;}else{label=22;break;}
 case 20: 
 var $arrayidx9_i=(($__nar+1)|0);
 var $8=HEAP8[($arrayidx9_i)];
 if((($8<<24)>>24)==120|(($8<<24)>>24)==88){ label=21;break;}else{label=22;break;}
 case 21: 
 var $add_ptr17_i=(($__nar+2)|0);
 var $retval_0_i=$add_ptr17_i;label=23;break;
 case 22: 
 var $retval_0_i=$arraydecay2;label=23;break;
 case 23: 
 var $retval_0_i;
 var $arraydecay11=(($__o)|0);
 __ZNKSt3__18ios_base6getlocEv($ref_tmp,$__iob);
 (function() { try { __THREW__ = 0; return __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($arraydecay2,$retval_0_i,$add_ptr7,$arraydecay11,$__op,$__oe,$ref_tmp) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=24;break; } else { label=25;break; }
 case 24: 
 var $__locale__i11=(($ref_tmp)|0);
 var $9=HEAP32[(($__locale__i11)>>2)];
 var $10=(($9)|0);
 var $call_i12=__ZNSt3__114__shared_count16__release_sharedEv($10);
 var $11=(($__s)|0);
 var $12=HEAP32[(($11)>>2)];
 var $13=(($agg_tmp)|0);
 HEAP32[(($13)>>2)]=$12;
 var $14=HEAP32[(($__op)>>2)];
 var $15=HEAP32[(($__oe)>>2)];
 __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result,$agg_tmp,$arraydecay11,$14,$15,$__iob,$__fl);
 STACKTOP=sp;return;
 case 25: 
 var $16$0 = ___cxa_find_matching_catch(-1, -1); var $16$1 = tempRet0;
 var $__locale__i=(($ref_tmp)|0);
 var $17=HEAP32[(($__locale__i)>>2)];
 var $18=(($17)|0);
 var $call_i=__ZNSt3__114__shared_count16__release_sharedEv($18);
 ___resumeException($16$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nb,$__np,$__ne,$__ob,$__op,$__oe,$__loc){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+48)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__p_i_i_i64=sp;
 var $__p_i_i_i=(sp)+(16);
 var $__grouping=(sp)+(32);
 var $__locale__i=(($__loc)|0);
 var $0=HEAP32[(($__locale__i)>>2)];
 var $1=$__p_i_i_i;
 var $2=HEAP32[((15376)>>2)];
 var $cmp_i_i_i=($2|0)==-1;
 if($cmp_i_i_i){label=3;break;}else{label=2;break;}
 case 2: 
 var $ref_tmp_i_sroa_0_0__idx_i_i=(($__p_i_i_i)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i)>>2)]=15376;
 var $ref_tmp_i_sroa_1_4__idx6_i_i=(($__p_i_i_i+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i=(($__p_i_i_i+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i)>>2)]=0;
 __ZNSt3__111__call_onceERVmPvPFvS2_E(15376,$1,276);
 label=3;break;
 case 3: 
 var $3=HEAP32[((15380)>>2)];
 var $sub_i_i=((($3)-(1))|0);
 var $__end__i_i_i_i=(($0+12)|0);
 var $4=HEAP32[(($__end__i_i_i_i)>>2)];
 var $__begin__i_i_i_i=(($0+8)|0);
 var $5=HEAP32[(($__begin__i_i_i_i)>>2)];
 var $sub_ptr_lhs_cast_i_i_i_i=$4;
 var $sub_ptr_rhs_cast_i_i_i_i=$5;
 var $sub_ptr_sub_i_i_i_i=((($sub_ptr_lhs_cast_i_i_i_i)-($sub_ptr_rhs_cast_i_i_i_i))|0);
 var $sub_ptr_div_i_i_i_i=$sub_ptr_sub_i_i_i_i>>2;
 var $cmp_i_i1_i=($sub_ptr_div_i_i_i_i>>>0)>($sub_i_i>>>0);
 if($cmp_i_i1_i){label=4;break;}else{label=5;break;}
 case 4: 
 var $arrayidx_i_i_i_i=(($5+($sub_i_i<<2))|0);
 var $6=HEAP32[(($arrayidx_i_i_i_i)>>2)];
 var $tobool_i_i_i63=($6|0)==0;
 if($tobool_i_i_i63){label=5;break;}else{label=6;break;}
 case 5: 
 var $exception_i_i=___cxa_allocate_exception(4);
 var $7=$exception_i_i;
 __ZNSt8bad_castC2Ev($7);
 ___cxa_throw($exception_i_i,10264,(376));
 throw "Reached an unreachable!";
 case 6: 
 var $8=$6;
 var $9=HEAP32[(($__locale__i)>>2)];
 var $10=$__p_i_i_i64;
 var $11=HEAP32[((14992)>>2)];
 var $cmp_i_i_i66=($11|0)==-1;
 if($cmp_i_i_i66){label=8;break;}else{label=7;break;}
 case 7: 
 var $ref_tmp_i_sroa_0_0__idx_i_i67=(($__p_i_i_i64)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i67)>>2)]=14992;
 var $ref_tmp_i_sroa_1_4__idx6_i_i68=(($__p_i_i_i64+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i68)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i69=(($__p_i_i_i64+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i69)>>2)]=0;
 __ZNSt3__111__call_onceERVmPvPFvS2_E(14992,$10,276);
 label=8;break;
 case 8: 
 var $12=HEAP32[((14996)>>2)];
 var $sub_i_i71=((($12)-(1))|0);
 var $__end__i_i_i_i72=(($9+12)|0);
 var $13=HEAP32[(($__end__i_i_i_i72)>>2)];
 var $__begin__i_i_i_i73=(($9+8)|0);
 var $14=HEAP32[(($__begin__i_i_i_i73)>>2)];
 var $sub_ptr_lhs_cast_i_i_i_i74=$13;
 var $sub_ptr_rhs_cast_i_i_i_i75=$14;
 var $sub_ptr_sub_i_i_i_i76=((($sub_ptr_lhs_cast_i_i_i_i74)-($sub_ptr_rhs_cast_i_i_i_i75))|0);
 var $sub_ptr_div_i_i_i_i77=$sub_ptr_sub_i_i_i_i76>>2;
 var $cmp_i_i1_i78=($sub_ptr_div_i_i_i_i77>>>0)>($sub_i_i71>>>0);
 if($cmp_i_i1_i78){label=9;break;}else{label=10;break;}
 case 9: 
 var $arrayidx_i_i_i_i80=(($14+($sub_i_i71<<2))|0);
 var $15=HEAP32[(($arrayidx_i_i_i_i80)>>2)];
 var $tobool_i_i_i81=($15|0)==0;
 if($tobool_i_i_i81){label=10;break;}else{label=11;break;}
 case 10: 
 var $exception_i_i83=___cxa_allocate_exception(4);
 var $16=$exception_i_i83;
 __ZNSt8bad_castC2Ev($16);
 ___cxa_throw($exception_i_i83,10264,(376));
 throw "Reached an unreachable!";
 case 11: 
 var $17=$15;
 var $18=$15;
 var $vtable_i=HEAP32[(($18)>>2)];
 var $vfn_i=(($vtable_i+20)|0);
 var $19=HEAP32[(($vfn_i)>>2)];
 FUNCTION_TABLE[$19]($__grouping,$17);
 var $__s_i_i_i=$__grouping;
 var $__size__i_i_i=$__grouping;
 var $20=HEAP8[($__size__i_i_i)];
 var $conv_i_i_i=($20&255);
 var $and_i_i_i=$conv_i_i_i&1;
 var $tobool_i_i_i=($and_i_i_i|0)==0;
 if($tobool_i_i_i){label=13;break;}else{label=12;break;}
 case 12: 
 var $__size__i23_i_i=(($__grouping+4)|0);
 var $21=HEAP32[(($__size__i23_i_i)>>2)];
 var $cond_i_i=$21;label=14;break;
 case 13: 
 var $shr_i_i_i61=$conv_i_i_i>>>1;
 var $cond_i_i=$shr_i_i_i61;label=14;break;
 case 14: 
 var $cond_i_i;
 var $cmp_i=($cond_i_i|0)==0;
 if($cmp_i){label=15;break;}else{label=20;break;}
 case 15: 
 var $22=$6;
 var $vtable_i86=HEAP32[(($22)>>2)];
 var $vfn_i87=(($vtable_i86+48)|0);
 var $23=HEAP32[(($vfn_i87)>>2)];
 var $call_i8889=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$23]($8,$__nb,$__ne,$__ob) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=16;break; } else { label=18;break; }
 case 16: 
 var $sub_ptr_lhs_cast=$__ne;
 var $sub_ptr_rhs_cast=$__nb;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $add_ptr=(($__ob+($sub_ptr_sub<<2))|0);
 HEAP32[(($__oe)>>2)]=$add_ptr;
 label=43;break;
 case 17: 
 var $lpad_loopexit90$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_loopexit90$1 = tempRet0;
 var $lpad_phi$1=$lpad_loopexit90$1;var $lpad_phi$0=$lpad_loopexit90$0;label=19;break;
 case 18: 
 var $lpad_nonloopexit91$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_nonloopexit91$1 = tempRet0;
 var $lpad_phi$1=$lpad_nonloopexit91$1;var $lpad_phi$0=$lpad_nonloopexit91$0;label=19;break;
 case 19: 
 var $lpad_phi$0;
 var $lpad_phi$1;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 ___resumeException($lpad_phi$0)
 case 20: 
 HEAP32[(($__oe)>>2)]=$__ob;
 var $24=HEAP8[($__nb)];
 if((($24<<24)>>24)==45|(($24<<24)>>24)==43){ label=21;break;}else{var $__nf_0=$__nb;label=23;break;}
 case 21: 
 var $25=$6;
 var $vtable_i93=HEAP32[(($25)>>2)];
 var $vfn_i94=(($vtable_i93+44)|0);
 var $26=HEAP32[(($vfn_i94)>>2)];
 var $call_i9596=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$26]($8,$24) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=22;break; } else { label=18;break; }
 case 22: 
 var $incdec_ptr=(($__nb+1)|0);
 var $27=HEAP32[(($__oe)>>2)];
 var $incdec_ptr9=(($27+4)|0);
 HEAP32[(($__oe)>>2)]=$incdec_ptr9;
 HEAP32[(($27)>>2)]=$call_i9596;
 var $__nf_0=$incdec_ptr;label=23;break;
 case 23: 
 var $__nf_0;
 var $sub_ptr_lhs_cast10=$__ne;
 var $sub_ptr_rhs_cast11=$__nf_0;
 var $sub_ptr_sub12=((($sub_ptr_lhs_cast10)-($sub_ptr_rhs_cast11))|0);
 var $cmp13=($sub_ptr_sub12|0)>1;
 if($cmp13){label=24;break;}else{var $__nf_1=$__nf_0;label=29;break;}
 case 24: 
 var $28=HEAP8[($__nf_0)];
 var $cmp15=(($28<<24)>>24)==48;
 if($cmp15){label=25;break;}else{var $__nf_1=$__nf_0;label=29;break;}
 case 25: 
 var $arrayidx17=(($__nf_0+1)|0);
 var $29=HEAP8[($arrayidx17)];
 if((($29<<24)>>24)==120|(($29<<24)>>24)==88){ label=26;break;}else{var $__nf_1=$__nf_0;label=29;break;}
 case 26: 
 var $30=$6;
 var $vtable_i101=HEAP32[(($30)>>2)];
 var $vfn_i102=(($vtable_i101+44)|0);
 var $31=HEAP32[(($vfn_i102)>>2)];
 var $call_i103104=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$31]($8,48) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=27;break; } else { label=18;break; }
 case 27: 
 var $32=HEAP32[(($__oe)>>2)];
 var $incdec_ptr28=(($32+4)|0);
 HEAP32[(($__oe)>>2)]=$incdec_ptr28;
 HEAP32[(($32)>>2)]=$call_i103104;
 var $33=HEAP8[($arrayidx17)];
 var $vtable_i109=HEAP32[(($30)>>2)];
 var $vfn_i110=(($vtable_i109+44)|0);
 var $34=HEAP32[(($vfn_i110)>>2)];
 var $call_i111112=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$34]($8,$33) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=28;break; } else { label=18;break; }
 case 28: 
 var $incdec_ptr29=(($__nf_0+2)|0);
 var $35=HEAP32[(($__oe)>>2)];
 var $incdec_ptr32=(($35+4)|0);
 HEAP32[(($__oe)>>2)]=$incdec_ptr32;
 HEAP32[(($35)>>2)]=$call_i111112;
 var $__nf_1=$incdec_ptr29;label=29;break;
 case 29: 
 var $__nf_1;
 var $cmp_i_i128=($__nf_1|0)==($__ne|0);
 if($cmp_i_i128){label=32;break;}else{label=30;break;}
 case 30: 
 var $incdec_ptr_i_i13096=((($__ne)-(1))|0);
 var $cmp1_i_i13197=($__nf_1>>>0)<($incdec_ptr_i_i13096>>>0);
 if($cmp1_i_i13197){var $__first_addr_i_i120_098=$__nf_1;var $incdec_ptr_i_i13099=$incdec_ptr_i_i13096;label=31;break;}else{label=32;break;}
 case 31: 
 var $incdec_ptr_i_i13099;
 var $__first_addr_i_i120_098;
 var $36=HEAP8[($__first_addr_i_i120_098)];
 var $37=HEAP8[($incdec_ptr_i_i13099)];
 HEAP8[($__first_addr_i_i120_098)]=$37;
 HEAP8[($incdec_ptr_i_i13099)]=$36;
 var $incdec_ptr2_i_i133=(($__first_addr_i_i120_098+1)|0);
 var $incdec_ptr_i_i130=((($incdec_ptr_i_i13099)-(1))|0);
 var $cmp1_i_i131=($incdec_ptr2_i_i133>>>0)<($incdec_ptr_i_i130>>>0);
 if($cmp1_i_i131){var $__first_addr_i_i120_098=$incdec_ptr2_i_i133;var $incdec_ptr_i_i13099=$incdec_ptr_i_i130;label=31;break;}else{label=32;break;}
 case 32: 
 var $38=$15;
 var $vtable_i222=HEAP32[(($38)>>2)];
 var $vfn_i223=(($vtable_i222+16)|0);
 var $39=HEAP32[(($vfn_i223)>>2)];
 var $call_i224225=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$39]($17) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=33;break; } else { label=18;break; }
 case 33: 
 var $cmp3792=($__nf_1>>>0)<($__ne>>>0);
 if($cmp3792){label=34;break;}else{label=40;break;}
 case 34: 
 var $arrayidx_i_i_i215=(($__s_i_i_i+1)|0);
 var $40=$6;
 var $__size__i23_i=(($__grouping+4)|0);
 var $__data__i21_i_i=(($__grouping+8)|0);
 var $__dc_093=0;var $__dg_094=0;var $__p_095=$__nf_1;label=35;break;
 case 35: 
 var $__p_095;
 var $__dg_094;
 var $__dc_093;
 var $41=HEAP8[($__size__i_i_i)];
 var $and_i_i_i198=$41&1;
 var $tobool_i_i_i199=(($and_i_i_i198<<24)>>24)==0;
 var $42=HEAP32[(($__data__i21_i_i)>>2)];
 var $arrayidx_i_i_i215_=($tobool_i_i_i199?$arrayidx_i_i_i215:$42);
 var $add_ptr_i218=(($arrayidx_i_i_i215_+$__dg_094)|0);
 var $43=HEAP8[($add_ptr_i218)];
 var $cmp41=(($43<<24)>>24)==0;
 if($cmp41){var $__dg_1=$__dg_094;var $__dc_1=$__dc_093;label=38;break;}else{label=36;break;}
 case 36: 
 var $44=HEAP32[(($__data__i21_i_i)>>2)];
 var $arrayidx_i_i_i215_100=($tobool_i_i_i199?$arrayidx_i_i_i215:$44);
 var $add_ptr_i=(($arrayidx_i_i_i215_100+$__dg_094)|0);
 var $45=HEAP8[($add_ptr_i)];
 var $conv45=(($45<<24)>>24);
 var $cmp46=($__dc_093|0)==($conv45|0);
 if($cmp46){label=37;break;}else{var $__dg_1=$__dg_094;var $__dc_1=$__dc_093;label=38;break;}
 case 37: 
 var $46=HEAP32[(($__oe)>>2)];
 var $incdec_ptr48=(($46+4)|0);
 HEAP32[(($__oe)>>2)]=$incdec_ptr48;
 HEAP32[(($46)>>2)]=$call_i224225;
 var $47=HEAP8[($__size__i_i_i)];
 var $conv_i_i=($47&255);
 var $and_i_i=$conv_i_i&1;
 var $tobool_i_i=($and_i_i|0)==0;
 var $48=HEAP32[(($__size__i23_i)>>2)];
 var $shr_i_i62=$conv_i_i>>>1;
 var $cond_i=($tobool_i_i?$shr_i_i62:$48);
 var $sub=((($cond_i)-(1))|0);
 var $cmp50=($__dg_094>>>0)<($sub>>>0);
 var $inc=($cmp50&1);
 var $inc___dg_0=((($inc)+($__dg_094))|0);
 var $__dg_1=$inc___dg_0;var $__dc_1=0;label=38;break;
 case 38: 
 var $__dc_1;
 var $__dg_1;
 var $49=HEAP8[($__p_095)];
 var $vtable_i80=HEAP32[(($40)>>2)];
 var $vfn_i81=(($vtable_i80+44)|0);
 var $50=HEAP32[(($vfn_i81)>>2)];
 var $call_i8283=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$50]($8,$49) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=39;break; } else { label=17;break; }
 case 39: 
 var $51=HEAP32[(($__oe)>>2)];
 var $incdec_ptr56=(($51+4)|0);
 HEAP32[(($__oe)>>2)]=$incdec_ptr56;
 HEAP32[(($51)>>2)]=$call_i8283;
 var $inc57=((($__dc_1)+(1))|0);
 var $incdec_ptr58=(($__p_095+1)|0);
 var $cmp37=($incdec_ptr58>>>0)<($__ne>>>0);
 if($cmp37){var $__dc_093=$inc57;var $__dg_094=$__dg_1;var $__p_095=$incdec_ptr58;label=35;break;}else{label=40;break;}
 case 40: 
 var $sub_ptr_lhs_cast59=$__nf_1;
 var $sub_ptr_rhs_cast60=$__nb;
 var $sub_ptr_sub61=((($sub_ptr_lhs_cast59)-($sub_ptr_rhs_cast60))|0);
 var $add_ptr62=(($__ob+($sub_ptr_sub61<<2))|0);
 var $52=HEAP32[(($__oe)>>2)];
 var $cmp_i_i=($add_ptr62|0)==($52|0);
 if($cmp_i_i){label=43;break;}else{label=41;break;}
 case 41: 
 var $incdec_ptr_i_i86=((($52)-(4))|0);
 var $cmp1_i_i87=($add_ptr62>>>0)<($incdec_ptr_i_i86>>>0);
 if($cmp1_i_i87){var $__first_addr_i_i_088=$add_ptr62;var $incdec_ptr_i_i89=$incdec_ptr_i_i86;label=42;break;}else{label=43;break;}
 case 42: 
 var $incdec_ptr_i_i89;
 var $__first_addr_i_i_088;
 var $53=HEAP32[(($__first_addr_i_i_088)>>2)];
 var $54=HEAP32[(($incdec_ptr_i_i89)>>2)];
 HEAP32[(($__first_addr_i_i_088)>>2)]=$54;
 HEAP32[(($incdec_ptr_i_i89)>>2)]=$53;
 var $incdec_ptr2_i_i=(($__first_addr_i_i_088+4)|0);
 var $incdec_ptr_i_i=((($incdec_ptr_i_i89)-(4))|0);
 var $cmp1_i_i=($incdec_ptr2_i_i>>>0)<($incdec_ptr_i_i>>>0);
 if($cmp1_i_i){var $__first_addr_i_i_088=$incdec_ptr2_i_i;var $incdec_ptr_i_i89=$incdec_ptr_i_i;label=42;break;}else{label=43;break;}
 case 43: 
 var $cmp65=($__np|0)==($__ne|0);
 if($cmp65){label=44;break;}else{label=45;break;}
 case 44: 
 var $55=HEAP32[(($__oe)>>2)];
 var $storemerge=$55;label=46;break;
 case 45: 
 var $sub_ptr_lhs_cast68=$__np;
 var $sub_ptr_rhs_cast69=$__nb;
 var $sub_ptr_sub70=((($sub_ptr_lhs_cast68)-($sub_ptr_rhs_cast69))|0);
 var $add_ptr71=(($__ob+($sub_ptr_sub70<<2))|0);
 var $storemerge=$add_ptr71;label=46;break;
 case 46: 
 var $storemerge;
 HEAP32[(($__op)>>2)]=$storemerge;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 STACKTOP=sp;return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result,$__s,$__ob,$__op,$__oe,$__iob,$__fl){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__s; $__s=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__s)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__sp=sp;
 var $__sbuf_=(($__s)|0);
 var $0=HEAP32[(($__sbuf_)>>2)];
 var $cmp=($0|0)==0;
 if($cmp){label=2;break;}else{label=3;break;}
 case 2: 
 var $1=(($agg_result)|0);
 HEAP32[(($1)>>2)]=0;
 label=19;break;
 case 3: 
 var $sub_ptr_lhs_cast=$__oe;
 var $sub_ptr_rhs_cast=$__ob;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $sub_ptr_div=$sub_ptr_sub>>2;
 var $__width__i=(($__iob+12)|0);
 var $2=HEAP32[(($__width__i)>>2)];
 var $cmp1=($2|0)>($sub_ptr_div|0);
 var $sub=((($2)-($sub_ptr_div))|0);
 var $__ns_0=($cmp1?$sub:0);
 var $sub_ptr_lhs_cast4=$__op;
 var $sub_ptr_sub6=((($sub_ptr_lhs_cast4)-($sub_ptr_rhs_cast))|0);
 var $sub_ptr_div7=$sub_ptr_sub6>>2;
 var $cmp8=($sub_ptr_sub6|0)>0;
 if($cmp8){label=4;break;}else{label=6;break;}
 case 4: 
 var $3=$0;
 var $vtable_i51=HEAP32[(($3)>>2)];
 var $vfn_i52=(($vtable_i51+48)|0);
 var $4=HEAP32[(($vfn_i52)>>2)];
 var $call_i53=FUNCTION_TABLE[$4]($0,$__ob,$sub_ptr_div7);
 var $cmp12=($call_i53|0)==($sub_ptr_div7|0);
 if($cmp12){label=6;break;}else{label=5;break;}
 case 5: 
 HEAP32[(($__sbuf_)>>2)]=0;
 var $5=(($agg_result)|0);
 HEAP32[(($5)>>2)]=0;
 label=19;break;
 case 6: 
 var $cmp17=($__ns_0|0)>0;
 if($cmp17){label=7;break;}else{label=15;break;}
 case 7: 
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($__sp,$__ns_0,$__fl);
 var $__size__i_i_i=$__sp;
 var $6=HEAP8[($__size__i_i_i)];
 var $and_i_i_i=$6&1;
 var $tobool_i_i_i=(($and_i_i_i<<24)>>24)==0;
 if($tobool_i_i_i){label=9;break;}else{label=8;break;}
 case 8: 
 var $__data__i21_i_i=(($__sp+8)|0);
 var $7=HEAP32[(($__data__i21_i_i)>>2)];
 var $cond_i_i=$7;label=10;break;
 case 9: 
 var $__data__i_i_i=(($__sp+4)|0);
 var $cond_i_i=$__data__i_i_i;label=10;break;
 case 10: 
 var $cond_i_i;
 var $8=$0;
 var $vtable_i72=HEAP32[(($8)>>2)];
 var $vfn_i73=(($vtable_i72+48)|0);
 var $9=HEAP32[(($vfn_i73)>>2)];
 var $call_i7475=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$9]($0,$cond_i_i,$__ns_0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=11;break; } else { label=13;break; }
 case 11: 
 var $cmp22=($call_i7475|0)==($__ns_0|0);
 if($cmp22){label=14;break;}else{label=12;break;}
 case 12: 
 HEAP32[(($__sbuf_)>>2)]=0;
 var $10=(($agg_result)|0);
 HEAP32[(($10)>>2)]=0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($__sp);
 label=19;break;
 case 13: 
 var $11$0 = ___cxa_find_matching_catch(-1, -1); var $11$1 = tempRet0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($__sp);
 ___resumeException($11$0)
 case 14: 
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($__sp);
 label=15;break;
 case 15: 
 var $sub_ptr_sub29=((($sub_ptr_lhs_cast)-($sub_ptr_lhs_cast4))|0);
 var $sub_ptr_div30=$sub_ptr_sub29>>2;
 var $cmp31=($sub_ptr_sub29|0)>0;
 if($cmp31){label=16;break;}else{label=18;break;}
 case 16: 
 var $12=$0;
 var $vtable_i=HEAP32[(($12)>>2)];
 var $vfn_i=(($vtable_i+48)|0);
 var $13=HEAP32[(($vfn_i)>>2)];
 var $call_i=FUNCTION_TABLE[$13]($0,$__op,$sub_ptr_div30);
 var $cmp35=($call_i|0)==($sub_ptr_div30|0);
 if($cmp35){label=18;break;}else{label=17;break;}
 case 17: 
 HEAP32[(($__sbuf_)>>2)]=0;
 var $14=(($agg_result)|0);
 HEAP32[(($14)>>2)]=0;
 label=19;break;
 case 18: 
 HEAP32[(($__width__i)>>2)]=0;
 var $15=(($agg_result)|0);
 HEAP32[(($15)>>2)]=$0;
 label=19;break;
 case 19: 
 STACKTOP=sp;return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx($agg_result,$this,$__s,$__iob,$__fl,$__v$0,$__v$1){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+232)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__s; $__s=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__s)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__fmt=sp;
 var $__nar=(sp)+(8);
 var $__o=(sp)+(32);
 var $__op=(sp)+(200);
 var $__oe=(sp)+(208);
 var $ref_tmp=(sp)+(216);
 var $agg_tmp=(sp)+(224);
 var $$etemp$0$0=37;
 var $$etemp$0$1=0;
 var $st$1$0=(($__fmt)|0);
 HEAP32[(($st$1$0)>>2)]=$$etemp$0$0;
 var $st$2$1=(($__fmt+4)|0);
 HEAP32[(($st$2$1)>>2)]=$$etemp$0$1;
 var $arraydecay=$__fmt;
 var $add_ptr=(($arraydecay+1)|0);
 var $__fmtflags__i=(($__iob+4)|0);
 var $0=HEAP32[(($__fmtflags__i)>>2)];
 var $and_i=$0&2048;
 var $tobool_i=($and_i|0)==0;
 if($tobool_i){var $__fmtp_addr_0_i=$add_ptr;label=3;break;}else{label=2;break;}
 case 2: 
 var $incdec_ptr_i=(($arraydecay+2)|0);
 HEAP8[($add_ptr)]=43;
 var $__fmtp_addr_0_i=$incdec_ptr_i;label=3;break;
 case 3: 
 var $__fmtp_addr_0_i;
 var $and1_i=$0&512;
 var $tobool2_i=($and1_i|0)==0;
 if($tobool2_i){var $__fmtp_addr_113_i_ph=$__fmtp_addr_0_i;label=5;break;}else{label=4;break;}
 case 4: 
 var $incdec_ptr4_i=(($__fmtp_addr_0_i+1)|0);
 HEAP8[($__fmtp_addr_0_i)]=35;
 var $__fmtp_addr_113_i_ph=$incdec_ptr4_i;label=5;break;
 case 5: 
 var $__fmtp_addr_113_i_ph;
 var $incdec_ptr8_i=(($__fmtp_addr_113_i_ph+1)|0);
 HEAP8[($__fmtp_addr_113_i_ph)]=108;
 HEAP8[($incdec_ptr8_i)]=108;
 var $scevgep=(($__fmtp_addr_113_i_ph+2)|0);
 var $and9_i=$0&74;
 if(($and9_i|0)==64){ label=6;break;}else if(($and9_i|0)==8){ label=7;break;}else{label=10;break;}
 case 6: 
 HEAP8[($scevgep)]=111;
 label=11;break;
 case 7: 
 var $and14_i=$0&16384;
 var $tobool15_i=($and14_i|0)==0;
 if($tobool15_i){label=9;break;}else{label=8;break;}
 case 8: 
 HEAP8[($scevgep)]=88;
 label=11;break;
 case 9: 
 HEAP8[($scevgep)]=120;
 label=11;break;
 case 10: 
 HEAP8[($scevgep)]=100;
 label=11;break;
 case 11: 
 var $arraydecay2=(($__nar)|0);
 var $1=HEAP8[(15944)];
 var $guard_uninitialized_i=(($1<<24)>>24)==0;
 if($guard_uninitialized_i){label=12;break;}else{label=16;break;}
 case 12: 
 var $2=___cxa_guard_acquire(15944);
 var $tobool_i5=($2|0)==0;
 if($tobool_i5){label=16;break;}else{label=13;break;}
 case 13: 
 var $call_i6=(function() { try { __THREW__ = 0; return _newlocale(2147483647,2960,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=14;break; } else { label=15;break; }
 case 14: 
 HEAP32[((13952)>>2)]=$call_i6;
 label=16;break;
 case 15: 
 var $3$0 = ___cxa_find_matching_catch(-1, -1); var $3$1 = tempRet0;
 ___resumeException($3$0)
 case 16: 
 var $4=HEAP32[((13952)>>2)];
 var $call5=__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($arraydecay2,22,$4,$arraydecay,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$__v$0,HEAP32[(((tempVarArgs)+(8))>>2)]=$__v$1,tempVarArgs)); STACKTOP=tempVarArgs;
 var $add_ptr7=(($__nar+$call5)|0);
 var $5=HEAP32[(($__fmtflags__i)>>2)];
 var $and_i7=$5&176;
 if(($and_i7|0)==16){ label=17;break;}else if(($and_i7|0)==32){ var $retval_0_i=$add_ptr7;label=23;break;}else{label=22;break;}
 case 17: 
 var $6=HEAP8[($arraydecay2)];
 if((($6<<24)>>24)==45|(($6<<24)>>24)==43){ label=18;break;}else{label=19;break;}
 case 18: 
 var $add_ptr_i=(($__nar+1)|0);
 var $retval_0_i=$add_ptr_i;label=23;break;
 case 19: 
 var $cmp4_i=($call5|0)>1;
 var $cmp7_i=(($6<<24)>>24)==48;
 var $or_cond_i=$cmp4_i&$cmp7_i;
 if($or_cond_i){label=20;break;}else{label=22;break;}
 case 20: 
 var $arrayidx9_i=(($__nar+1)|0);
 var $7=HEAP8[($arrayidx9_i)];
 if((($7<<24)>>24)==120|(($7<<24)>>24)==88){ label=21;break;}else{label=22;break;}
 case 21: 
 var $add_ptr17_i=(($__nar+2)|0);
 var $retval_0_i=$add_ptr17_i;label=23;break;
 case 22: 
 var $retval_0_i=$arraydecay2;label=23;break;
 case 23: 
 var $retval_0_i;
 var $arraydecay11=(($__o)|0);
 __ZNKSt3__18ios_base6getlocEv($ref_tmp,$__iob);
 (function() { try { __THREW__ = 0; return __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($arraydecay2,$retval_0_i,$add_ptr7,$arraydecay11,$__op,$__oe,$ref_tmp) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=24;break; } else { label=25;break; }
 case 24: 
 var $__locale__i11=(($ref_tmp)|0);
 var $8=HEAP32[(($__locale__i11)>>2)];
 var $9=(($8)|0);
 var $call_i12=__ZNSt3__114__shared_count16__release_sharedEv($9);
 var $10=(($__s)|0);
 var $11=HEAP32[(($10)>>2)];
 var $12=(($agg_tmp)|0);
 HEAP32[(($12)>>2)]=$11;
 var $13=HEAP32[(($__op)>>2)];
 var $14=HEAP32[(($__oe)>>2)];
 __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result,$agg_tmp,$arraydecay11,$13,$14,$__iob,$__fl);
 STACKTOP=sp;return;
 case 25: 
 var $15$0 = ___cxa_find_matching_catch(-1, -1); var $15$1 = tempRet0;
 var $__locale__i=(($ref_tmp)|0);
 var $16=HEAP32[(($__locale__i)>>2)];
 var $17=(($16)|0);
 var $call_i=__ZNSt3__114__shared_count16__release_sharedEv($17);
 ___resumeException($15$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm($agg_result,$this,$__s,$__iob,$__fl,$__v){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+144)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__s; $__s=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__s)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__fmt=sp;
 var $__nar=(sp)+(8);
 var $__o=(sp)+(24);
 var $__op=(sp)+(112);
 var $__oe=(sp)+(120);
 var $ref_tmp=(sp)+(128);
 var $agg_tmp=(sp)+(136);
 var $0=(($__fmt)|0);
 assert(6 % 1 === 0);HEAP8[($0)]=HEAP8[(4144)];HEAP8[((($0)+(1))|0)]=HEAP8[(4145)];HEAP8[((($0)+(2))|0)]=HEAP8[(4146)];HEAP8[((($0)+(3))|0)]=HEAP8[(4147)];HEAP8[((($0)+(4))|0)]=HEAP8[(4148)];HEAP8[((($0)+(5))|0)]=HEAP8[(4149)];
 var $add_ptr=(($__fmt+1)|0);
 var $__fmtflags__i=(($__iob+4)|0);
 var $1=HEAP32[(($__fmtflags__i)>>2)];
 var $and_i=$1&2048;
 var $tobool_i=($and_i|0)==0;
 if($tobool_i){var $__fmtp_addr_0_i=$add_ptr;label=3;break;}else{label=2;break;}
 case 2: 
 var $incdec_ptr_i=(($__fmt+2)|0);
 HEAP8[($add_ptr)]=43;
 var $__fmtp_addr_0_i=$incdec_ptr_i;label=3;break;
 case 3: 
 var $__fmtp_addr_0_i;
 var $and1_i=$1&512;
 var $tobool2_i=($and1_i|0)==0;
 if($tobool2_i){var $__fmtp_addr_113_i_ph=$__fmtp_addr_0_i;label=5;break;}else{label=4;break;}
 case 4: 
 var $incdec_ptr4_i=(($__fmtp_addr_0_i+1)|0);
 HEAP8[($__fmtp_addr_0_i)]=35;
 var $__fmtp_addr_113_i_ph=$incdec_ptr4_i;label=5;break;
 case 5: 
 var $__fmtp_addr_113_i_ph;
 HEAP8[($__fmtp_addr_113_i_ph)]=108;
 var $scevgep=(($__fmtp_addr_113_i_ph+1)|0);
 var $and9_i=$1&74;
 if(($and9_i|0)==64){ label=6;break;}else if(($and9_i|0)==8){ label=7;break;}else{label=10;break;}
 case 6: 
 HEAP8[($scevgep)]=111;
 label=11;break;
 case 7: 
 var $and14_i=$1&16384;
 var $tobool15_i=($and14_i|0)==0;
 if($tobool15_i){label=9;break;}else{label=8;break;}
 case 8: 
 HEAP8[($scevgep)]=88;
 label=11;break;
 case 9: 
 HEAP8[($scevgep)]=120;
 label=11;break;
 case 10: 
 HEAP8[($scevgep)]=117;
 label=11;break;
 case 11: 
 var $arraydecay2=(($__nar)|0);
 var $2=HEAP8[(15944)];
 var $guard_uninitialized_i=(($2<<24)>>24)==0;
 if($guard_uninitialized_i){label=12;break;}else{label=16;break;}
 case 12: 
 var $3=___cxa_guard_acquire(15944);
 var $tobool_i5=($3|0)==0;
 if($tobool_i5){label=16;break;}else{label=13;break;}
 case 13: 
 var $call_i6=(function() { try { __THREW__ = 0; return _newlocale(2147483647,2960,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=14;break; } else { label=15;break; }
 case 14: 
 HEAP32[((13952)>>2)]=$call_i6;
 label=16;break;
 case 15: 
 var $4$0 = ___cxa_find_matching_catch(-1, -1); var $4$1 = tempRet0;
 ___resumeException($4$0)
 case 16: 
 var $5=HEAP32[((13952)>>2)];
 var $call5=__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($arraydecay2,12,$5,$0,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$__v,tempVarArgs)); STACKTOP=tempVarArgs;
 var $add_ptr7=(($__nar+$call5)|0);
 var $6=HEAP32[(($__fmtflags__i)>>2)];
 var $and_i7=$6&176;
 if(($and_i7|0)==16){ label=17;break;}else if(($and_i7|0)==32){ var $retval_0_i=$add_ptr7;label=23;break;}else{label=22;break;}
 case 17: 
 var $7=HEAP8[($arraydecay2)];
 if((($7<<24)>>24)==45|(($7<<24)>>24)==43){ label=18;break;}else{label=19;break;}
 case 18: 
 var $add_ptr_i=(($__nar+1)|0);
 var $retval_0_i=$add_ptr_i;label=23;break;
 case 19: 
 var $cmp4_i=($call5|0)>1;
 var $cmp7_i=(($7<<24)>>24)==48;
 var $or_cond_i=$cmp4_i&$cmp7_i;
 if($or_cond_i){label=20;break;}else{label=22;break;}
 case 20: 
 var $arrayidx9_i=(($__nar+1)|0);
 var $8=HEAP8[($arrayidx9_i)];
 if((($8<<24)>>24)==120|(($8<<24)>>24)==88){ label=21;break;}else{label=22;break;}
 case 21: 
 var $add_ptr17_i=(($__nar+2)|0);
 var $retval_0_i=$add_ptr17_i;label=23;break;
 case 22: 
 var $retval_0_i=$arraydecay2;label=23;break;
 case 23: 
 var $retval_0_i;
 var $arraydecay11=(($__o)|0);
 __ZNKSt3__18ios_base6getlocEv($ref_tmp,$__iob);
 (function() { try { __THREW__ = 0; return __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($arraydecay2,$retval_0_i,$add_ptr7,$arraydecay11,$__op,$__oe,$ref_tmp) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=24;break; } else { label=25;break; }
 case 24: 
 var $__locale__i11=(($ref_tmp)|0);
 var $9=HEAP32[(($__locale__i11)>>2)];
 var $10=(($9)|0);
 var $call_i12=__ZNSt3__114__shared_count16__release_sharedEv($10);
 var $11=(($__s)|0);
 var $12=HEAP32[(($11)>>2)];
 var $13=(($agg_tmp)|0);
 HEAP32[(($13)>>2)]=$12;
 var $14=HEAP32[(($__op)>>2)];
 var $15=HEAP32[(($__oe)>>2)];
 __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result,$agg_tmp,$arraydecay11,$14,$15,$__iob,$__fl);
 STACKTOP=sp;return;
 case 25: 
 var $16$0 = ___cxa_find_matching_catch(-1, -1); var $16$1 = tempRet0;
 var $__locale__i=(($ref_tmp)|0);
 var $17=HEAP32[(($__locale__i)>>2)];
 var $18=(($17)|0);
 var $call_i=__ZNSt3__114__shared_count16__release_sharedEv($18);
 ___resumeException($16$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy($agg_result,$this,$__s,$__iob,$__fl,$__v$0,$__v$1){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+240)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__s; $__s=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__s)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__fmt=sp;
 var $__nar=(sp)+(8);
 var $__o=(sp)+(32);
 var $__op=(sp)+(208);
 var $__oe=(sp)+(216);
 var $ref_tmp=(sp)+(224);
 var $agg_tmp=(sp)+(232);
 var $$etemp$0$0=37;
 var $$etemp$0$1=0;
 var $st$1$0=(($__fmt)|0);
 HEAP32[(($st$1$0)>>2)]=$$etemp$0$0;
 var $st$2$1=(($__fmt+4)|0);
 HEAP32[(($st$2$1)>>2)]=$$etemp$0$1;
 var $arraydecay=$__fmt;
 var $add_ptr=(($arraydecay+1)|0);
 var $__fmtflags__i=(($__iob+4)|0);
 var $0=HEAP32[(($__fmtflags__i)>>2)];
 var $and_i=$0&2048;
 var $tobool_i=($and_i|0)==0;
 if($tobool_i){var $__fmtp_addr_0_i=$add_ptr;label=3;break;}else{label=2;break;}
 case 2: 
 var $incdec_ptr_i=(($arraydecay+2)|0);
 HEAP8[($add_ptr)]=43;
 var $__fmtp_addr_0_i=$incdec_ptr_i;label=3;break;
 case 3: 
 var $__fmtp_addr_0_i;
 var $and1_i=$0&512;
 var $tobool2_i=($and1_i|0)==0;
 if($tobool2_i){var $__fmtp_addr_113_i_ph=$__fmtp_addr_0_i;label=5;break;}else{label=4;break;}
 case 4: 
 var $incdec_ptr4_i=(($__fmtp_addr_0_i+1)|0);
 HEAP8[($__fmtp_addr_0_i)]=35;
 var $__fmtp_addr_113_i_ph=$incdec_ptr4_i;label=5;break;
 case 5: 
 var $__fmtp_addr_113_i_ph;
 var $incdec_ptr8_i=(($__fmtp_addr_113_i_ph+1)|0);
 HEAP8[($__fmtp_addr_113_i_ph)]=108;
 HEAP8[($incdec_ptr8_i)]=108;
 var $scevgep=(($__fmtp_addr_113_i_ph+2)|0);
 var $and9_i=$0&74;
 if(($and9_i|0)==64){ label=6;break;}else if(($and9_i|0)==8){ label=7;break;}else{label=10;break;}
 case 6: 
 HEAP8[($scevgep)]=111;
 label=11;break;
 case 7: 
 var $and14_i=$0&16384;
 var $tobool15_i=($and14_i|0)==0;
 if($tobool15_i){label=9;break;}else{label=8;break;}
 case 8: 
 HEAP8[($scevgep)]=88;
 label=11;break;
 case 9: 
 HEAP8[($scevgep)]=120;
 label=11;break;
 case 10: 
 HEAP8[($scevgep)]=117;
 label=11;break;
 case 11: 
 var $arraydecay2=(($__nar)|0);
 var $1=HEAP8[(15944)];
 var $guard_uninitialized_i=(($1<<24)>>24)==0;
 if($guard_uninitialized_i){label=12;break;}else{label=16;break;}
 case 12: 
 var $2=___cxa_guard_acquire(15944);
 var $tobool_i5=($2|0)==0;
 if($tobool_i5){label=16;break;}else{label=13;break;}
 case 13: 
 var $call_i6=(function() { try { __THREW__ = 0; return _newlocale(2147483647,2960,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=14;break; } else { label=15;break; }
 case 14: 
 HEAP32[((13952)>>2)]=$call_i6;
 label=16;break;
 case 15: 
 var $3$0 = ___cxa_find_matching_catch(-1, -1); var $3$1 = tempRet0;
 ___resumeException($3$0)
 case 16: 
 var $4=HEAP32[((13952)>>2)];
 var $call5=__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($arraydecay2,23,$4,$arraydecay,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$__v$0,HEAP32[(((tempVarArgs)+(8))>>2)]=$__v$1,tempVarArgs)); STACKTOP=tempVarArgs;
 var $add_ptr7=(($__nar+$call5)|0);
 var $5=HEAP32[(($__fmtflags__i)>>2)];
 var $and_i7=$5&176;
 if(($and_i7|0)==16){ label=17;break;}else if(($and_i7|0)==32){ var $retval_0_i=$add_ptr7;label=23;break;}else{label=22;break;}
 case 17: 
 var $6=HEAP8[($arraydecay2)];
 if((($6<<24)>>24)==45|(($6<<24)>>24)==43){ label=18;break;}else{label=19;break;}
 case 18: 
 var $add_ptr_i=(($__nar+1)|0);
 var $retval_0_i=$add_ptr_i;label=23;break;
 case 19: 
 var $cmp4_i=($call5|0)>1;
 var $cmp7_i=(($6<<24)>>24)==48;
 var $or_cond_i=$cmp4_i&$cmp7_i;
 if($or_cond_i){label=20;break;}else{label=22;break;}
 case 20: 
 var $arrayidx9_i=(($__nar+1)|0);
 var $7=HEAP8[($arrayidx9_i)];
 if((($7<<24)>>24)==120|(($7<<24)>>24)==88){ label=21;break;}else{label=22;break;}
 case 21: 
 var $add_ptr17_i=(($__nar+2)|0);
 var $retval_0_i=$add_ptr17_i;label=23;break;
 case 22: 
 var $retval_0_i=$arraydecay2;label=23;break;
 case 23: 
 var $retval_0_i;
 var $arraydecay11=(($__o)|0);
 __ZNKSt3__18ios_base6getlocEv($ref_tmp,$__iob);
 (function() { try { __THREW__ = 0; return __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($arraydecay2,$retval_0_i,$add_ptr7,$arraydecay11,$__op,$__oe,$ref_tmp) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=24;break; } else { label=25;break; }
 case 24: 
 var $__locale__i11=(($ref_tmp)|0);
 var $8=HEAP32[(($__locale__i11)>>2)];
 var $9=(($8)|0);
 var $call_i12=__ZNSt3__114__shared_count16__release_sharedEv($9);
 var $10=(($__s)|0);
 var $11=HEAP32[(($10)>>2)];
 var $12=(($agg_tmp)|0);
 HEAP32[(($12)>>2)]=$11;
 var $13=HEAP32[(($__op)>>2)];
 var $14=HEAP32[(($__oe)>>2)];
 __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result,$agg_tmp,$arraydecay11,$13,$14,$__iob,$__fl);
 STACKTOP=sp;return;
 case 25: 
 var $15$0 = ___cxa_find_matching_catch(-1, -1); var $15$1 = tempRet0;
 var $__locale__i=(($ref_tmp)|0);
 var $16=HEAP32[(($__locale__i)>>2)];
 var $17=(($16)|0);
 var $call_i=__ZNSt3__114__shared_count16__release_sharedEv($17);
 ___resumeException($15$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd($agg_result,$this,$__s,$__iob,$__fl,$__v){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+320)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__s; $__s=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__s)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__fmt=sp;
 var $__nar=(sp)+(8);
 var $__nb=(sp)+(40);
 var $__o=(sp)+(48);
 var $__op=(sp)+(280);
 var $__oe=(sp)+(288);
 var $ref_tmp51=(sp)+(296);
 var $ref_tmp55=(sp)+(304);
 var $agg_tmp=(sp)+(312);
 var $$etemp$0$0=37;
 var $$etemp$0$1=0;
 var $st$1$0=(($__fmt)|0);
 HEAP32[(($st$1$0)>>2)]=$$etemp$0$0;
 var $st$2$1=(($__fmt+4)|0);
 HEAP32[(($st$2$1)>>2)]=$$etemp$0$1;
 var $arraydecay=$__fmt;
 var $add_ptr=(($arraydecay+1)|0);
 var $__fmtflags__i=(($__iob+4)|0);
 var $0=HEAP32[(($__fmtflags__i)>>2)];
 var $and_i=$0&2048;
 var $tobool_i=($and_i|0)==0;
 if($tobool_i){var $__fmtp_addr_0_i=$add_ptr;label=3;break;}else{label=2;break;}
 case 2: 
 var $incdec_ptr_i=(($arraydecay+2)|0);
 HEAP8[($add_ptr)]=43;
 var $__fmtp_addr_0_i=$incdec_ptr_i;label=3;break;
 case 3: 
 var $__fmtp_addr_0_i;
 var $and1_i=$0&1024;
 var $tobool2_i=($and1_i|0)==0;
 if($tobool2_i){var $__fmtp_addr_1_i=$__fmtp_addr_0_i;label=5;break;}else{label=4;break;}
 case 4: 
 var $incdec_ptr4_i=(($__fmtp_addr_0_i+1)|0);
 HEAP8[($__fmtp_addr_0_i)]=35;
 var $__fmtp_addr_1_i=$incdec_ptr4_i;label=5;break;
 case 5: 
 var $__fmtp_addr_1_i;
 var $and6_i=$0&260;
 var $and7_i=$0>>>14;
 var $cmp8_i=($and6_i|0)==260;
 if($cmp8_i){label=13;break;}else{label=6;break;}
 case 6: 
 var $incdec_ptr10_i=(($__fmtp_addr_1_i+1)|0);
 HEAP8[($__fmtp_addr_1_i)]=46;
 var $incdec_ptr11_i=(($__fmtp_addr_1_i+2)|0);
 HEAP8[($incdec_ptr10_i)]=42;
 if(($and6_i|0)==256){ label=10;break;}else if(($and6_i|0)==4){ label=7;break;}else{label=16;break;}
 case 7: 
 var $1=$and7_i&1;
 var $tobool18_i=($1|0)==0;
 if($tobool18_i){label=9;break;}else{label=8;break;}
 case 8: 
 HEAP8[($incdec_ptr11_i)]=70;
 var $specify_precision_0_off0_ph_i56=1;label=19;break;
 case 9: 
 HEAP8[($incdec_ptr11_i)]=102;
 var $specify_precision_0_off0_ph_i56=1;label=19;break;
 case 10: 
 var $2=$and7_i&1;
 var $tobool25_i=($2|0)==0;
 if($tobool25_i){label=12;break;}else{label=11;break;}
 case 11: 
 HEAP8[($incdec_ptr11_i)]=69;
 var $specify_precision_0_off0_ph_i56=1;label=19;break;
 case 12: 
 HEAP8[($incdec_ptr11_i)]=101;
 var $specify_precision_0_off0_ph_i56=1;label=19;break;
 case 13: 
 var $3=$and7_i&1;
 var $tobool32_i59=($3|0)==0;
 if($tobool32_i59){label=15;break;}else{label=14;break;}
 case 14: 
 HEAP8[($__fmtp_addr_1_i)]=65;
 var $specify_precision_0_off0_ph_i56=0;label=19;break;
 case 15: 
 HEAP8[($__fmtp_addr_1_i)]=97;
 var $specify_precision_0_off0_ph_i56=0;label=19;break;
 case 16: 
 var $4=$and7_i&1;
 var $tobool32_i=($4|0)==0;
 if($tobool32_i){label=18;break;}else{label=17;break;}
 case 17: 
 HEAP8[($incdec_ptr11_i)]=71;
 var $specify_precision_0_off0_ph_i56=1;label=19;break;
 case 18: 
 HEAP8[($incdec_ptr11_i)]=103;
 var $specify_precision_0_off0_ph_i56=1;label=19;break;
 case 19: 
 var $specify_precision_0_off0_ph_i56;
 var $arraydecay3=(($__nar)|0);
 HEAP32[(($__nb)>>2)]=$arraydecay3;
 var $5=HEAP8[(15944)];
 var $guard_uninitialized_i=(($5<<24)>>24)==0;
 if($guard_uninitialized_i){label=20;break;}else{label=24;break;}
 case 20: 
 var $6=___cxa_guard_acquire(15944);
 var $tobool_i31=($6|0)==0;
 if($tobool_i31){label=24;break;}else{label=21;break;}
 case 21: 
 var $call_i32=(function() { try { __THREW__ = 0; return _newlocale(2147483647,2960,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=22;break; } else { label=23;break; }
 case 22: 
 HEAP32[((13952)>>2)]=$call_i32;
 label=24;break;
 case 23: 
 var $7$0 = ___cxa_find_matching_catch(-1, -1); var $7$1 = tempRet0;
 ___resumeException($7$0)
 case 24: 
 var $8=HEAP32[((13952)>>2)];
 if($specify_precision_0_off0_ph_i56){label=25;break;}else{label=26;break;}
 case 25: 
 var $__precision__i=(($__iob+8)|0);
 var $9=HEAP32[(($__precision__i)>>2)];
 var $call7=__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($arraydecay3,30,$8,$arraydecay,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$9,HEAPF64[(((tempVarArgs)+(8))>>3)]=$__v,tempVarArgs)); STACKTOP=tempVarArgs;
 var $__nc_0=$call7;label=27;break;
 case 26: 
 var $call10=__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($arraydecay3,30,$8,$arraydecay,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAPF64[((tempVarArgs)>>3)]=$__v,tempVarArgs)); STACKTOP=tempVarArgs;
 var $__nc_0=$call10;label=27;break;
 case 27: 
 var $__nc_0;
 var $cmp=($__nc_0|0)>29;
 if($cmp){label=29;break;}else{label=28;break;}
 case 28: 
 var $_pre66=HEAP32[(($__nb)>>2)];
 var $__nc_2=$__nc_0;var $__nbh_sroa_0_1=0;var $23=$_pre66;label=47;break;
 case 29: 
 var $10=HEAP8[(15944)];
 var $guard_uninitialized_i33=(($10<<24)>>24)==0;
 if($specify_precision_0_off0_ph_i56){label=30;break;}else{label=38;break;}
 case 30: 
 if($guard_uninitialized_i33){label=31;break;}else{label=35;break;}
 case 31: 
 var $11=___cxa_guard_acquire(15944);
 var $tobool_i34=($11|0)==0;
 if($tobool_i34){label=35;break;}else{label=32;break;}
 case 32: 
 var $call_i36=(function() { try { __THREW__ = 0; return _newlocale(2147483647,2960,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=33;break; } else { label=34;break; }
 case 33: 
 HEAP32[((13952)>>2)]=$call_i36;
 label=35;break;
 case 34: 
 var $12$0 = ___cxa_find_matching_catch(-1, -1); var $12$1 = tempRet0;
 var $eh_lpad_body$1=$12$1;var $eh_lpad_body$0=$12$0;label=37;break;
 case 35: 
 var $13=HEAP32[((13952)>>2)];
 var $__precision__i107=(($__iob+8)|0);
 var $14=HEAP32[(($__precision__i107)>>2)];
 var $call19=(function() { try { __THREW__ = 0; return __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__nb,$13,$arraydecay,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$14,HEAPF64[(((tempVarArgs)+(8))>>3)]=$__v,tempVarArgs)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })(); STACKTOP=tempVarArgs;if (!__THREW__) { var $__nc_1=$call19;label=44;break; } else { label=36;break; }
 case 36: 
 var $15$0 = ___cxa_find_matching_catch(-1, -1); var $15$1 = tempRet0;
 var $eh_lpad_body$1=$15$1;var $eh_lpad_body$0=$15$0;label=37;break;
 case 37: 
 var $eh_lpad_body$0;
 var $eh_lpad_body$1;
 var $16=$eh_lpad_body$0;
 var $17=$eh_lpad_body$1;
 var $ehselector_slot_164=$17;var $exn_slot_165=$16;label=72;break;
 case 38: 
 if($guard_uninitialized_i33){label=39;break;}else{label=43;break;}
 case 39: 
 var $18=___cxa_guard_acquire(15944);
 var $tobool_i42=($18|0)==0;
 if($tobool_i42){label=43;break;}else{label=40;break;}
 case 40: 
 var $call_i44=(function() { try { __THREW__ = 0; return _newlocale(2147483647,2960,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=41;break; } else { label=42;break; }
 case 41: 
 HEAP32[((13952)>>2)]=$call_i44;
 label=43;break;
 case 42: 
 var $19$0 = ___cxa_find_matching_catch(-1, -1); var $19$1 = tempRet0;
 var $eh_lpad_body$1=$19$1;var $eh_lpad_body$0=$19$0;label=37;break;
 case 43: 
 var $20=HEAP32[((13952)>>2)];
 var $__precision__i110=(($__iob+8)|0);
 var $21=HEAP32[(($__precision__i110)>>2)];
 var $call27=(function() { try { __THREW__ = 0; return __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__nb,$20,$arraydecay,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$21,HEAPF64[(((tempVarArgs)+(8))>>3)]=$__v,tempVarArgs)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })(); STACKTOP=tempVarArgs;if (!__THREW__) { var $__nc_1=$call27;label=44;break; } else { label=36;break; }
 case 44: 
 var $__nc_1;
 var $22=HEAP32[(($__nb)>>2)];
 var $cmp29=($22|0)==0;
 if($cmp29){label=45;break;}else{var $__nc_2=$__nc_1;var $__nbh_sroa_0_1=$22;var $23=$22;label=47;break;}
 case 45: 
 (function() { try { __THREW__ = 0; return __ZSt17__throw_bad_allocv() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=46;break; } else { label=36;break; }
 case 46: 
 var $_pre=HEAP32[(($__nb)>>2)];
 var $__nc_2=$__nc_1;var $__nbh_sroa_0_1=$_pre;var $23=$_pre;label=47;break;
 case 47: 
 var $23;
 var $__nbh_sroa_0_1;
 var $__nc_2;
 var $add_ptr34=(($23+$__nc_2)|0);
 var $24=HEAP32[(($__fmtflags__i)>>2)];
 var $and_i51=$24&176;
 if(($and_i51|0)==16){ label=48;break;}else if(($and_i51|0)==32){ var $retval_0_i=$add_ptr34;label=54;break;}else{label=53;break;}
 case 48: 
 var $25=HEAP8[($23)];
 if((($25<<24)>>24)==45|(($25<<24)>>24)==43){ label=49;break;}else{label=50;break;}
 case 49: 
 var $add_ptr_i=(($23+1)|0);
 var $retval_0_i=$add_ptr_i;label=54;break;
 case 50: 
 var $cmp4_i=($__nc_2|0)>1;
 var $cmp7_i=(($25<<24)>>24)==48;
 var $or_cond_i=$cmp4_i&$cmp7_i;
 if($or_cond_i){label=51;break;}else{label=53;break;}
 case 51: 
 var $arrayidx9_i=(($23+1)|0);
 var $26=HEAP8[($arrayidx9_i)];
 if((($26<<24)>>24)==120|(($26<<24)>>24)==88){ label=52;break;}else{label=53;break;}
 case 52: 
 var $add_ptr17_i=(($23+2)|0);
 var $retval_0_i=$add_ptr17_i;label=54;break;
 case 53: 
 var $retval_0_i=$23;label=54;break;
 case 54: 
 var $retval_0_i;
 var $arraydecay37=(($__o)|0);
 var $cmp40=($23|0)==($arraydecay3|0);
 if($cmp40){var $__ob_0=$arraydecay37;var $__obh_sroa_0_1=0;var $31=$arraydecay3;label=59;break;}else{label=55;break;}
 case 55: 
 var $mul42=$__nc_2<<3;
 var $call45=_malloc($mul42);
 var $27=$call45;
 var $cmp46=($call45|0)==0;
 if($cmp46){label=56;break;}else{var $__ob_0=$27;var $__obh_sroa_0_1=$27;var $31=$23;label=59;break;}
 case 56: 
 (function() { try { __THREW__ = 0; return __ZSt17__throw_bad_allocv() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=57;break; } else { var $__obh_sroa_0_0=0;label=58;break; }
 case 57: 
 var $_pre67=HEAP32[(($__nb)>>2)];
 var $__ob_0=$27;var $__obh_sroa_0_1=$27;var $31=$_pre67;label=59;break;
 case 58: 
 var $__obh_sroa_0_0;
 var $28$0 = ___cxa_find_matching_catch(-1, -1); var $28$1 = tempRet0;
 var $29=$28$0;
 var $30=$28$1;
 var $exn_slot_0=$29;var $ehselector_slot_0=$30;var $__obh_sroa_0_2=$__obh_sroa_0_0;label=68;break;
 case 59: 
 var $31;
 var $__obh_sroa_0_1;
 var $__ob_0;
 (function() { try { __THREW__ = 0; return __ZNKSt3__18ios_base6getlocEv($ref_tmp51,$__iob) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=60;break; } else { var $__obh_sroa_0_0=$__obh_sroa_0_1;label=58;break; }
 case 60: 
 (function() { try { __THREW__ = 0; return __ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE($31,$retval_0_i,$add_ptr34,$__ob_0,$__op,$__oe,$ref_tmp51) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=61;break; } else { label=67;break; }
 case 61: 
 var $__locale__i54=(($ref_tmp51)|0);
 var $32=HEAP32[(($__locale__i54)>>2)];
 var $33=(($32)|0);
 var $call_i55=__ZNSt3__114__shared_count16__release_sharedEv($33);
 var $34=(($__s)|0);
 var $35=HEAP32[(($34)>>2)];
 var $36=(($agg_tmp)|0);
 HEAP32[(($36)>>2)]=$35;
 var $37=HEAP32[(($__op)>>2)];
 var $38=HEAP32[(($__oe)>>2)];
 (function() { try { __THREW__ = 0; return __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($ref_tmp55,$agg_tmp,$__ob_0,$37,$38,$__iob,$__fl) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=62;break; } else { var $__obh_sroa_0_0=$__obh_sroa_0_1;label=58;break; }
 case 62: 
 var $39=(($ref_tmp55)|0);
 var $40=HEAP32[(($39)>>2)];
 HEAP32[(($34)>>2)]=$40;
 var $41=(($agg_result)|0);
 HEAP32[(($41)>>2)]=$40;
 var $tobool_i_i_i194=($__obh_sroa_0_1|0)==0;
 if($tobool_i_i_i194){label=64;break;}else{label=63;break;}
 case 63: 
 var $42=$__obh_sroa_0_1;
 _free($42);
 label=64;break;
 case 64: 
 var $tobool_i_i_i225=($__nbh_sroa_0_1|0)==0;
 if($tobool_i_i_i225){label=66;break;}else{label=65;break;}
 case 65: 
 _free($__nbh_sroa_0_1);
 label=66;break;
 case 66: 
 STACKTOP=sp;return;
 case 67: 
 var $43$0 = ___cxa_find_matching_catch(-1, -1); var $43$1 = tempRet0;
 var $44=$43$0;
 var $45=$43$1;
 var $__locale__i=(($ref_tmp51)|0);
 var $46=HEAP32[(($__locale__i)>>2)];
 var $47=(($46)|0);
 var $call_i=__ZNSt3__114__shared_count16__release_sharedEv($47);
 var $exn_slot_0=$44;var $ehselector_slot_0=$45;var $__obh_sroa_0_2=$__obh_sroa_0_1;label=68;break;
 case 68: 
 var $__obh_sroa_0_2;
 var $ehselector_slot_0;
 var $exn_slot_0;
 var $tobool_i_i_i97=($__obh_sroa_0_2|0)==0;
 if($tobool_i_i_i97){label=70;break;}else{label=69;break;}
 case 69: 
 var $48=$__obh_sroa_0_2;
 _free($48);
 label=70;break;
 case 70: 
 var $tobool_i_i_i=($__nbh_sroa_0_1|0)==0;
 if($tobool_i_i_i){var $ehselector_slot_164=$ehselector_slot_0;var $exn_slot_165=$exn_slot_0;label=72;break;}else{label=71;break;}
 case 71: 
 _free($__nbh_sroa_0_1);
 var $ehselector_slot_164=$ehselector_slot_0;var $exn_slot_165=$exn_slot_0;label=72;break;
 case 72: 
 var $exn_slot_165;
 var $ehselector_slot_164;
 var $lpad_val$0=$exn_slot_165;
 var $lpad_val$1=0;
 var $lpad_val58$0=$lpad_val$0;
 var $lpad_val58$1=$ehselector_slot_164;
 ___resumeException($lpad_val58$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nb,$__np,$__ne,$__ob,$__op,$__oe,$__loc){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+48)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__p_i_i_i90=sp;
 var $__p_i_i_i=(sp)+(16);
 var $__grouping=(sp)+(32);
 var $__locale__i=(($__loc)|0);
 var $0=HEAP32[(($__locale__i)>>2)];
 var $1=$__p_i_i_i;
 var $2=HEAP32[((15376)>>2)];
 var $cmp_i_i_i=($2|0)==-1;
 if($cmp_i_i_i){label=3;break;}else{label=2;break;}
 case 2: 
 var $ref_tmp_i_sroa_0_0__idx_i_i=(($__p_i_i_i)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i)>>2)]=15376;
 var $ref_tmp_i_sroa_1_4__idx6_i_i=(($__p_i_i_i+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i=(($__p_i_i_i+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i)>>2)]=0;
 __ZNSt3__111__call_onceERVmPvPFvS2_E(15376,$1,276);
 label=3;break;
 case 3: 
 var $3=HEAP32[((15380)>>2)];
 var $sub_i_i=((($3)-(1))|0);
 var $__end__i_i_i_i=(($0+12)|0);
 var $4=HEAP32[(($__end__i_i_i_i)>>2)];
 var $__begin__i_i_i_i=(($0+8)|0);
 var $5=HEAP32[(($__begin__i_i_i_i)>>2)];
 var $sub_ptr_lhs_cast_i_i_i_i=$4;
 var $sub_ptr_rhs_cast_i_i_i_i=$5;
 var $sub_ptr_sub_i_i_i_i=((($sub_ptr_lhs_cast_i_i_i_i)-($sub_ptr_rhs_cast_i_i_i_i))|0);
 var $sub_ptr_div_i_i_i_i=$sub_ptr_sub_i_i_i_i>>2;
 var $cmp_i_i1_i=($sub_ptr_div_i_i_i_i>>>0)>($sub_i_i>>>0);
 if($cmp_i_i1_i){label=4;break;}else{label=5;break;}
 case 4: 
 var $arrayidx_i_i_i_i=(($5+($sub_i_i<<2))|0);
 var $6=HEAP32[(($arrayidx_i_i_i_i)>>2)];
 var $tobool_i_i_i89=($6|0)==0;
 if($tobool_i_i_i89){label=5;break;}else{label=6;break;}
 case 5: 
 var $exception_i_i=___cxa_allocate_exception(4);
 var $7=$exception_i_i;
 __ZNSt8bad_castC2Ev($7);
 ___cxa_throw($exception_i_i,10264,(376));
 throw "Reached an unreachable!";
 case 6: 
 var $8=$6;
 var $9=HEAP32[(($__locale__i)>>2)];
 var $10=$__p_i_i_i90;
 var $11=HEAP32[((14992)>>2)];
 var $cmp_i_i_i92=($11|0)==-1;
 if($cmp_i_i_i92){label=8;break;}else{label=7;break;}
 case 7: 
 var $ref_tmp_i_sroa_0_0__idx_i_i93=(($__p_i_i_i90)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i93)>>2)]=14992;
 var $ref_tmp_i_sroa_1_4__idx6_i_i94=(($__p_i_i_i90+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i94)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i95=(($__p_i_i_i90+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i95)>>2)]=0;
 __ZNSt3__111__call_onceERVmPvPFvS2_E(14992,$10,276);
 label=8;break;
 case 8: 
 var $12=HEAP32[((14996)>>2)];
 var $sub_i_i97=((($12)-(1))|0);
 var $__end__i_i_i_i98=(($9+12)|0);
 var $13=HEAP32[(($__end__i_i_i_i98)>>2)];
 var $__begin__i_i_i_i99=(($9+8)|0);
 var $14=HEAP32[(($__begin__i_i_i_i99)>>2)];
 var $sub_ptr_lhs_cast_i_i_i_i100=$13;
 var $sub_ptr_rhs_cast_i_i_i_i101=$14;
 var $sub_ptr_sub_i_i_i_i102=((($sub_ptr_lhs_cast_i_i_i_i100)-($sub_ptr_rhs_cast_i_i_i_i101))|0);
 var $sub_ptr_div_i_i_i_i103=$sub_ptr_sub_i_i_i_i102>>2;
 var $cmp_i_i1_i104=($sub_ptr_div_i_i_i_i103>>>0)>($sub_i_i97>>>0);
 if($cmp_i_i1_i104){label=9;break;}else{label=10;break;}
 case 9: 
 var $arrayidx_i_i_i_i106=(($14+($sub_i_i97<<2))|0);
 var $15=HEAP32[(($arrayidx_i_i_i_i106)>>2)];
 var $tobool_i_i_i107=($15|0)==0;
 if($tobool_i_i_i107){label=10;break;}else{label=11;break;}
 case 10: 
 var $exception_i_i109=___cxa_allocate_exception(4);
 var $16=$exception_i_i109;
 __ZNSt8bad_castC2Ev($16);
 ___cxa_throw($exception_i_i109,10264,(376));
 throw "Reached an unreachable!";
 case 11: 
 var $17=$15;
 var $18=$15;
 var $vtable_i=HEAP32[(($18)>>2)];
 var $vfn_i=(($vtable_i+20)|0);
 var $19=HEAP32[(($vfn_i)>>2)];
 FUNCTION_TABLE[$19]($__grouping,$17);
 HEAP32[(($__oe)>>2)]=$__ob;
 var $20=HEAP8[($__nb)];
 if((($20<<24)>>24)==45|(($20<<24)>>24)==43){ label=12;break;}else{var $__nf_0=$__nb;label=20;break;}
 case 12: 
 var $21=$6;
 var $vtable_i130=HEAP32[(($21)>>2)];
 var $vfn_i131=(($vtable_i130+44)|0);
 var $22=HEAP32[(($vfn_i131)>>2)];
 var $call_i132133=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$22]($8,$20) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=13;break; } else { label=18;break; }
 case 13: 
 var $incdec_ptr=(($__nb+1)|0);
 var $23=HEAP32[(($__oe)>>2)];
 var $incdec_ptr5=(($23+4)|0);
 HEAP32[(($__oe)>>2)]=$incdec_ptr5;
 HEAP32[(($23)>>2)]=$call_i132133;
 var $__nf_0=$incdec_ptr;label=20;break;
 case 14: 
 var $lpad_loopexit122$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_loopexit122$1 = tempRet0;
 var $eh_lpad_body$1=$lpad_loopexit122$1;var $eh_lpad_body$0=$lpad_loopexit122$0;label=19;break;
 case 15: 
 var $lpad_loopexit132$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_loopexit132$1 = tempRet0;
 var $eh_lpad_body$1=$lpad_loopexit132$1;var $eh_lpad_body$0=$lpad_loopexit132$0;label=19;break;
 case 16: 
 var $lpad_loopexit143$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_loopexit143$1 = tempRet0;
 var $eh_lpad_body$1=$lpad_loopexit143$1;var $eh_lpad_body$0=$lpad_loopexit143$0;label=19;break;
 case 17: 
 var $lpad_loopexit149$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_loopexit149$1 = tempRet0;
 var $eh_lpad_body$1=$lpad_loopexit149$1;var $eh_lpad_body$0=$lpad_loopexit149$0;label=19;break;
 case 18: 
 var $lpad_nonloopexit150$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_nonloopexit150$1 = tempRet0;
 var $eh_lpad_body$1=$lpad_nonloopexit150$1;var $eh_lpad_body$0=$lpad_nonloopexit150$0;label=19;break;
 case 19: 
 var $eh_lpad_body$0;
 var $eh_lpad_body$1;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 ___resumeException($eh_lpad_body$0)
 case 20: 
 var $__nf_0;
 var $sub_ptr_lhs_cast=$__ne;
 var $sub_ptr_rhs_cast=$__nf_0;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $cmp6=($sub_ptr_sub|0)>1;
 if($cmp6){label=21;break;}else{var $__ns_1=$__nf_0;label=34;break;}
 case 21: 
 var $24=HEAP8[($__nf_0)];
 var $cmp8=(($24<<24)>>24)==48;
 if($cmp8){label=22;break;}else{var $__ns_1=$__nf_0;label=34;break;}
 case 22: 
 var $arrayidx10=(($__nf_0+1)|0);
 var $25=HEAP8[($arrayidx10)];
 if((($25<<24)>>24)==120|(($25<<24)>>24)==88){ label=23;break;}else{var $__ns_1=$__nf_0;label=34;break;}
 case 23: 
 var $26=$6;
 var $vtable_i137=HEAP32[(($26)>>2)];
 var $vfn_i138=(($vtable_i137+44)|0);
 var $27=HEAP32[(($vfn_i138)>>2)];
 var $call_i139140=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$27]($8,48) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=24;break; } else { label=18;break; }
 case 24: 
 var $28=HEAP32[(($__oe)>>2)];
 var $incdec_ptr21=(($28+4)|0);
 HEAP32[(($__oe)>>2)]=$incdec_ptr21;
 HEAP32[(($28)>>2)]=$call_i139140;
 var $incdec_ptr22=(($__nf_0+2)|0);
 var $29=HEAP8[($arrayidx10)];
 var $vtable_i145=HEAP32[(($26)>>2)];
 var $vfn_i146=(($vtable_i145+44)|0);
 var $30=HEAP32[(($vfn_i146)>>2)];
 var $call_i147148=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$30]($8,$29) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=25;break; } else { label=18;break; }
 case 25: 
 var $31=HEAP32[(($__oe)>>2)];
 var $incdec_ptr25=(($31+4)|0);
 HEAP32[(($__oe)>>2)]=$incdec_ptr25;
 HEAP32[(($31)>>2)]=$call_i147148;
 var $__ns_0=$incdec_ptr22;label=26;break;
 case 26: 
 var $__ns_0;
 var $cmp26=($__ns_0>>>0)<($__ne>>>0);
 if($cmp26){label=27;break;}else{var $__ns_2=$__ns_0;var $__nf_1=$incdec_ptr22;label=42;break;}
 case 27: 
 var $32=HEAP8[($__ns_0)];
 var $33=HEAP8[(15944)];
 var $guard_uninitialized_i=(($33<<24)>>24)==0;
 if($guard_uninitialized_i){label=28;break;}else{label=32;break;}
 case 28: 
 var $34=___cxa_guard_acquire(15944);
 var $tobool_i=($34|0)==0;
 if($tobool_i){label=32;break;}else{label=29;break;}
 case 29: 
 var $call_i=(function() { try { __THREW__ = 0; return _newlocale(2147483647,2960,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=30;break; } else { label=31;break; }
 case 30: 
 HEAP32[((13952)>>2)]=$call_i;
 label=32;break;
 case 31: 
 var $35$0 = ___cxa_find_matching_catch(-1, -1); var $35$1 = tempRet0;
 var $eh_lpad_body$1=$35$1;var $eh_lpad_body$0=$35$0;label=19;break;
 case 32: 
 var $36=HEAP32[((13952)>>2)];
 var $conv27=(($32<<24)>>24);
 var $call31=(function() { try { __THREW__ = 0; return _isxdigit($conv27,$36) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=33;break; } else { label=17;break; }
 case 33: 
 var $tobool=($call31|0)==0;
 var $incdec_ptr34=(($__ns_0+1)|0);
 if($tobool){var $__ns_2=$__ns_0;var $__nf_1=$incdec_ptr22;label=42;break;}else{var $__ns_0=$incdec_ptr34;label=26;break;}
 case 34: 
 var $__ns_1;
 var $cmp36=($__ns_1>>>0)<($__ne>>>0);
 if($cmp36){label=35;break;}else{var $__ns_2=$__ns_1;var $__nf_1=$__nf_0;label=42;break;}
 case 35: 
 var $37=HEAP8[($__ns_1)];
 var $38=HEAP8[(15944)];
 var $guard_uninitialized_i112=(($38<<24)>>24)==0;
 if($guard_uninitialized_i112){label=36;break;}else{label=40;break;}
 case 36: 
 var $39=___cxa_guard_acquire(15944);
 var $tobool_i113=($39|0)==0;
 if($tobool_i113){label=40;break;}else{label=37;break;}
 case 37: 
 var $call_i115=(function() { try { __THREW__ = 0; return _newlocale(2147483647,2960,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=38;break; } else { label=39;break; }
 case 38: 
 HEAP32[((13952)>>2)]=$call_i115;
 label=40;break;
 case 39: 
 var $40$0 = ___cxa_find_matching_catch(-1, -1); var $40$1 = tempRet0;
 var $eh_lpad_body$1=$40$1;var $eh_lpad_body$0=$40$0;label=19;break;
 case 40: 
 var $41=HEAP32[((13952)>>2)];
 var $conv38=(($37<<24)>>24);
 var $call42=(function() { try { __THREW__ = 0; return _isdigit($conv38,$41) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=41;break; } else { label=16;break; }
 case 41: 
 var $tobool43=($call42|0)==0;
 var $incdec_ptr47=(($__ns_1+1)|0);
 if($tobool43){var $__ns_2=$__ns_1;var $__nf_1=$__nf_0;label=42;break;}else{var $__ns_1=$incdec_ptr47;label=34;break;}
 case 42: 
 var $__nf_1;
 var $__ns_2;
 var $__s_i_i_i=$__grouping;
 var $__size__i_i_i=$__grouping;
 var $42=HEAP8[($__size__i_i_i)];
 var $conv_i_i_i=($42&255);
 var $and_i_i_i=$conv_i_i_i&1;
 var $tobool_i_i_i=($and_i_i_i|0)==0;
 if($tobool_i_i_i){label=44;break;}else{label=43;break;}
 case 43: 
 var $__size__i23_i_i=(($__grouping+4)|0);
 var $43=HEAP32[(($__size__i23_i_i)>>2)];
 var $cond_i_i=$43;label=45;break;
 case 44: 
 var $shr_i_i_i87=$conv_i_i_i>>>1;
 var $cond_i_i=$shr_i_i_i87;label=45;break;
 case 45: 
 var $cond_i_i;
 var $cmp_i=($cond_i_i|0)==0;
 if($cmp_i){label=46;break;}else{label=50;break;}
 case 46: 
 var $44=HEAP32[(($__oe)>>2)];
 var $45=$6;
 var $vtable_i163=HEAP32[(($45)>>2)];
 var $vfn_i164=(($vtable_i163+48)|0);
 var $46=HEAP32[(($vfn_i164)>>2)];
 var $call_i165166=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$46]($8,$__nf_1,$__ns_2,$44) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=47;break; } else { label=18;break; }
 case 47: 
 var $sub_ptr_lhs_cast54=$__ns_2;
 var $sub_ptr_rhs_cast55=$__nf_1;
 var $sub_ptr_sub56=((($sub_ptr_lhs_cast54)-($sub_ptr_rhs_cast55))|0);
 var $47=HEAP32[(($__oe)>>2)];
 var $add_ptr=(($47+($sub_ptr_sub56<<2))|0);
 HEAP32[(($__oe)>>2)]=$add_ptr;
 label=48;break;
 case 48: 
 var $cmp94126=($__ns_2>>>0)<($__ne>>>0);
 if($cmp94126){label=49;break;}else{var $__nf_3=$__ns_2;label=69;break;}
 case 49: 
 var $48=$6;
 var $__nf_2127=$__ns_2;label=64;break;
 case 50: 
 var $cmp_i_i=($__nf_1|0)==($__ns_2|0);
 if($cmp_i_i){label=53;break;}else{label=51;break;}
 case 51: 
 var $incdec_ptr_i_i139=((($__ns_2)-(1))|0);
 var $cmp1_i_i140=($__nf_1>>>0)<($incdec_ptr_i_i139>>>0);
 if($cmp1_i_i140){var $__first_addr_i_i_0141=$__nf_1;var $incdec_ptr_i_i142=$incdec_ptr_i_i139;label=52;break;}else{label=53;break;}
 case 52: 
 var $incdec_ptr_i_i142;
 var $__first_addr_i_i_0141;
 var $49=HEAP8[($__first_addr_i_i_0141)];
 var $50=HEAP8[($incdec_ptr_i_i142)];
 HEAP8[($__first_addr_i_i_0141)]=$50;
 HEAP8[($incdec_ptr_i_i142)]=$49;
 var $incdec_ptr2_i_i=(($__first_addr_i_i_0141+1)|0);
 var $incdec_ptr_i_i=((($incdec_ptr_i_i142)-(1))|0);
 var $cmp1_i_i=($incdec_ptr2_i_i>>>0)<($incdec_ptr_i_i>>>0);
 if($cmp1_i_i){var $__first_addr_i_i_0141=$incdec_ptr2_i_i;var $incdec_ptr_i_i142=$incdec_ptr_i_i;label=52;break;}else{label=53;break;}
 case 53: 
 var $51=$15;
 var $vtable_i178=HEAP32[(($51)>>2)];
 var $vfn_i179=(($vtable_i178+16)|0);
 var $52=HEAP32[(($vfn_i179)>>2)];
 var $call_i180181=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$52]($17) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=54;break; } else { label=18;break; }
 case 54: 
 var $cmp62135=($__nf_1>>>0)<($__ns_2>>>0);
 if($cmp62135){label=55;break;}else{label=61;break;}
 case 55: 
 var $arrayidx_i_i_i=(($__s_i_i_i+1)|0);
 var $__size__i23_i=(($__grouping+4)|0);
 var $__data__i21_i_i250=(($__grouping+8)|0);
 var $53=$6;
 var $__dc_0136=0;var $__dg_0137=0;var $__p_0138=$__nf_1;label=56;break;
 case 56: 
 var $__p_0138;
 var $__dg_0137;
 var $__dc_0136;
 var $54=HEAP8[($__size__i_i_i)];
 var $and_i_i_i200=$54&1;
 var $tobool_i_i_i201=(($and_i_i_i200<<24)>>24)==0;
 var $55=HEAP32[(($__data__i21_i_i250)>>2)];
 var $arrayidx_i_i_i_=($tobool_i_i_i201?$arrayidx_i_i_i:$55);
 var $add_ptr_i=(($arrayidx_i_i_i_+$__dg_0137)|0);
 var $56=HEAP8[($add_ptr_i)];
 var $cmp67=(($56<<24)>>24)>0;
 if($cmp67){label=57;break;}else{var $__dg_1=$__dg_0137;var $__dc_1=$__dc_0136;label=59;break;}
 case 57: 
 var $57=HEAP32[(($__data__i21_i_i250)>>2)];
 var $arrayidx_i_i_i_160=($tobool_i_i_i201?$arrayidx_i_i_i:$57);
 var $add_ptr_i262=(($arrayidx_i_i_i_160+$__dg_0137)|0);
 var $58=HEAP8[($add_ptr_i262)];
 var $conv71=(($58<<24)>>24);
 var $cmp72=($__dc_0136|0)==($conv71|0);
 if($cmp72){label=58;break;}else{var $__dg_1=$__dg_0137;var $__dc_1=$__dc_0136;label=59;break;}
 case 58: 
 var $59=HEAP32[(($__oe)>>2)];
 var $incdec_ptr74=(($59+4)|0);
 HEAP32[(($__oe)>>2)]=$incdec_ptr74;
 HEAP32[(($59)>>2)]=$call_i180181;
 var $60=HEAP8[($__size__i_i_i)];
 var $conv_i_i=($60&255);
 var $and_i_i=$conv_i_i&1;
 var $tobool_i_i=($and_i_i|0)==0;
 var $61=HEAP32[(($__size__i23_i)>>2)];
 var $shr_i_i88=$conv_i_i>>>1;
 var $cond_i=($tobool_i_i?$shr_i_i88:$61);
 var $sub=((($cond_i)-(1))|0);
 var $cmp76=($__dg_0137>>>0)<($sub>>>0);
 var $inc=($cmp76&1);
 var $inc___dg_0=((($inc)+($__dg_0137))|0);
 var $__dg_1=$inc___dg_0;var $__dc_1=0;label=59;break;
 case 59: 
 var $__dc_1;
 var $__dg_1;
 var $62=HEAP8[($__p_0138)];
 var $vtable_i289=HEAP32[(($53)>>2)];
 var $vfn_i290=(($vtable_i289+44)|0);
 var $63=HEAP32[(($vfn_i290)>>2)];
 var $call_i291292=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$63]($8,$62) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=60;break; } else { label=15;break; }
 case 60: 
 var $64=HEAP32[(($__oe)>>2)];
 var $incdec_ptr82=(($64+4)|0);
 HEAP32[(($__oe)>>2)]=$incdec_ptr82;
 HEAP32[(($64)>>2)]=$call_i291292;
 var $inc83=((($__dc_1)+(1))|0);
 var $incdec_ptr85=(($__p_0138+1)|0);
 var $cmp62=($incdec_ptr85>>>0)<($__ns_2>>>0);
 if($cmp62){var $__dc_0136=$inc83;var $__dg_0137=$__dg_1;var $__p_0138=$incdec_ptr85;label=56;break;}else{label=61;break;}
 case 61: 
 var $sub_ptr_lhs_cast87=$__nf_1;
 var $sub_ptr_rhs_cast88=$__nb;
 var $sub_ptr_sub89=((($sub_ptr_lhs_cast87)-($sub_ptr_rhs_cast88))|0);
 var $add_ptr90=(($__ob+($sub_ptr_sub89<<2))|0);
 var $65=HEAP32[(($__oe)>>2)];
 var $cmp_i_i278=($add_ptr90|0)==($65|0);
 if($cmp_i_i278){label=48;break;}else{label=62;break;}
 case 62: 
 var $incdec_ptr_i_i280128=((($65)-(4))|0);
 var $cmp1_i_i281129=($add_ptr90>>>0)<($incdec_ptr_i_i280128>>>0);
 if($cmp1_i_i281129){var $__first_addr_i_i270_0130=$add_ptr90;var $incdec_ptr_i_i280131=$incdec_ptr_i_i280128;label=63;break;}else{label=48;break;}
 case 63: 
 var $incdec_ptr_i_i280131;
 var $__first_addr_i_i270_0130;
 var $66=HEAP32[(($__first_addr_i_i270_0130)>>2)];
 var $67=HEAP32[(($incdec_ptr_i_i280131)>>2)];
 HEAP32[(($__first_addr_i_i270_0130)>>2)]=$67;
 HEAP32[(($incdec_ptr_i_i280131)>>2)]=$66;
 var $incdec_ptr2_i_i283=(($__first_addr_i_i270_0130+4)|0);
 var $incdec_ptr_i_i280=((($incdec_ptr_i_i280131)-(4))|0);
 var $cmp1_i_i281=($incdec_ptr2_i_i283>>>0)<($incdec_ptr_i_i280>>>0);
 if($cmp1_i_i281){var $__first_addr_i_i270_0130=$incdec_ptr2_i_i283;var $incdec_ptr_i_i280131=$incdec_ptr_i_i280;label=63;break;}else{label=48;break;}
 case 64: 
 var $__nf_2127;
 var $68=HEAP8[($__nf_2127)];
 var $cmp97=(($68<<24)>>24)==46;
 if($cmp97){label=65;break;}else{label=67;break;}
 case 65: 
 var $69=$15;
 var $vtable_i214=HEAP32[(($69)>>2)];
 var $vfn_i215=(($vtable_i214+12)|0);
 var $70=HEAP32[(($vfn_i215)>>2)];
 var $call_i216217=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$70]($17) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=66;break; } else { label=18;break; }
 case 66: 
 var $71=HEAP32[(($__oe)>>2)];
 var $incdec_ptr101=(($71+4)|0);
 HEAP32[(($__oe)>>2)]=$incdec_ptr101;
 HEAP32[(($71)>>2)]=$call_i216217;
 var $incdec_ptr102=(($__nf_2127+1)|0);
 var $__nf_3=$incdec_ptr102;label=69;break;
 case 67: 
 var $vtable_i171=HEAP32[(($48)>>2)];
 var $vfn_i172=(($vtable_i171+44)|0);
 var $72=HEAP32[(($vfn_i172)>>2)];
 var $call_i173174=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$72]($8,$68) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=68;break; } else { label=14;break; }
 case 68: 
 var $73=HEAP32[(($__oe)>>2)];
 var $incdec_ptr106=(($73+4)|0);
 HEAP32[(($__oe)>>2)]=$incdec_ptr106;
 HEAP32[(($73)>>2)]=$call_i173174;
 var $incdec_ptr109=(($__nf_2127+1)|0);
 var $cmp94=($incdec_ptr109>>>0)<($__ne>>>0);
 if($cmp94){var $__nf_2127=$incdec_ptr109;label=64;break;}else{var $__nf_3=$incdec_ptr109;label=69;break;}
 case 69: 
 var $__nf_3;
 var $74=HEAP32[(($__oe)>>2)];
 var $75=$6;
 var $vtable_i154=HEAP32[(($75)>>2)];
 var $vfn_i155=(($vtable_i154+48)|0);
 var $76=HEAP32[(($vfn_i155)>>2)];
 var $call_i156157=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$76]($8,$__nf_3,$__ne,$74) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=70;break; } else { label=18;break; }
 case 70: 
 var $sub_ptr_rhs_cast114=$__nf_3;
 var $sub_ptr_sub115=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast114))|0);
 var $77=HEAP32[(($__oe)>>2)];
 var $add_ptr116=(($77+($sub_ptr_sub115<<2))|0);
 HEAP32[(($__oe)>>2)]=$add_ptr116;
 var $cmp117=($__np|0)==($__ne|0);
 if($cmp117){var $storemerge=$add_ptr116;label=72;break;}else{label=71;break;}
 case 71: 
 var $sub_ptr_lhs_cast120=$__np;
 var $sub_ptr_rhs_cast121=$__nb;
 var $sub_ptr_sub122=((($sub_ptr_lhs_cast120)-($sub_ptr_rhs_cast121))|0);
 var $add_ptr123=(($__ob+($sub_ptr_sub122<<2))|0);
 var $storemerge=$add_ptr123;label=72;break;
 case 72: 
 var $storemerge;
 HEAP32[(($__op)>>2)]=$storemerge;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping);
 STACKTOP=sp;return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe($agg_result,$this,$__s,$__iob,$__fl,$__v){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+320)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__s; $__s=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__s)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__fmt=sp;
 var $__nar=(sp)+(8);
 var $__nb=(sp)+(40);
 var $__o=(sp)+(48);
 var $__op=(sp)+(280);
 var $__oe=(sp)+(288);
 var $ref_tmp49=(sp)+(296);
 var $ref_tmp53=(sp)+(304);
 var $agg_tmp=(sp)+(312);
 var $$etemp$0$0=37;
 var $$etemp$0$1=0;
 var $st$1$0=(($__fmt)|0);
 HEAP32[(($st$1$0)>>2)]=$$etemp$0$0;
 var $st$2$1=(($__fmt+4)|0);
 HEAP32[(($st$2$1)>>2)]=$$etemp$0$1;
 var $arraydecay=$__fmt;
 var $add_ptr=(($arraydecay+1)|0);
 var $__fmtflags__i=(($__iob+4)|0);
 var $0=HEAP32[(($__fmtflags__i)>>2)];
 var $and_i=$0&2048;
 var $tobool_i=($and_i|0)==0;
 if($tobool_i){var $__fmtp_addr_0_i=$add_ptr;label=3;break;}else{label=2;break;}
 case 2: 
 var $incdec_ptr_i=(($arraydecay+2)|0);
 HEAP8[($add_ptr)]=43;
 var $__fmtp_addr_0_i=$incdec_ptr_i;label=3;break;
 case 3: 
 var $__fmtp_addr_0_i;
 var $and1_i=$0&1024;
 var $tobool2_i=($and1_i|0)==0;
 if($tobool2_i){var $__fmtp_addr_1_i=$__fmtp_addr_0_i;label=5;break;}else{label=4;break;}
 case 4: 
 var $incdec_ptr4_i=(($__fmtp_addr_0_i+1)|0);
 HEAP8[($__fmtp_addr_0_i)]=35;
 var $__fmtp_addr_1_i=$incdec_ptr4_i;label=5;break;
 case 5: 
 var $__fmtp_addr_1_i;
 var $and6_i=$0&260;
 var $and7_i=$0>>>14;
 var $cmp8_i=($and6_i|0)==260;
 if($cmp8_i){label=13;break;}else{label=6;break;}
 case 6: 
 var $incdec_ptr10_i=(($__fmtp_addr_1_i+1)|0);
 HEAP8[($__fmtp_addr_1_i)]=46;
 var $incdec_ptr11_i=(($__fmtp_addr_1_i+2)|0);
 HEAP8[($incdec_ptr10_i)]=42;
 HEAP8[($incdec_ptr11_i)]=76;
 var $scevgep=(($__fmtp_addr_1_i+3)|0);
 if(($and6_i|0)==256){ label=10;break;}else if(($and6_i|0)==4){ label=7;break;}else{label=16;break;}
 case 7: 
 var $1=$and7_i&1;
 var $tobool18_i=($1|0)==0;
 if($tobool18_i){label=9;break;}else{label=8;break;}
 case 8: 
 HEAP8[($scevgep)]=70;
 var $specify_precision_0_off0_ph_i61=1;label=19;break;
 case 9: 
 HEAP8[($scevgep)]=102;
 var $specify_precision_0_off0_ph_i61=1;label=19;break;
 case 10: 
 var $2=$and7_i&1;
 var $tobool25_i=($2|0)==0;
 if($tobool25_i){label=12;break;}else{label=11;break;}
 case 11: 
 HEAP8[($scevgep)]=69;
 var $specify_precision_0_off0_ph_i61=1;label=19;break;
 case 12: 
 HEAP8[($scevgep)]=101;
 var $specify_precision_0_off0_ph_i61=1;label=19;break;
 case 13: 
 HEAP8[($__fmtp_addr_1_i)]=76;
 var $scevgep60=(($__fmtp_addr_1_i+1)|0);
 var $3=$and7_i&1;
 var $tobool32_i64=($3|0)==0;
 if($tobool32_i64){label=15;break;}else{label=14;break;}
 case 14: 
 HEAP8[($scevgep60)]=65;
 var $specify_precision_0_off0_ph_i61=0;label=19;break;
 case 15: 
 HEAP8[($scevgep60)]=97;
 var $specify_precision_0_off0_ph_i61=0;label=19;break;
 case 16: 
 var $4=$and7_i&1;
 var $tobool32_i=($4|0)==0;
 if($tobool32_i){label=18;break;}else{label=17;break;}
 case 17: 
 HEAP8[($scevgep)]=71;
 var $specify_precision_0_off0_ph_i61=1;label=19;break;
 case 18: 
 HEAP8[($scevgep)]=103;
 var $specify_precision_0_off0_ph_i61=1;label=19;break;
 case 19: 
 var $specify_precision_0_off0_ph_i61;
 var $arraydecay3=(($__nar)|0);
 HEAP32[(($__nb)>>2)]=$arraydecay3;
 var $5=HEAP8[(15944)];
 var $guard_uninitialized_i=(($5<<24)>>24)==0;
 if($guard_uninitialized_i){label=20;break;}else{label=24;break;}
 case 20: 
 var $6=___cxa_guard_acquire(15944);
 var $tobool_i30=($6|0)==0;
 if($tobool_i30){label=24;break;}else{label=21;break;}
 case 21: 
 var $call_i31=(function() { try { __THREW__ = 0; return _newlocale(2147483647,2960,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=22;break; } else { label=23;break; }
 case 22: 
 HEAP32[((13952)>>2)]=$call_i31;
 label=24;break;
 case 23: 
 var $7$0 = ___cxa_find_matching_catch(-1, -1); var $7$1 = tempRet0;
 ___resumeException($7$0)
 case 24: 
 var $8=HEAP32[((13952)>>2)];
 if($specify_precision_0_off0_ph_i61){label=25;break;}else{label=26;break;}
 case 25: 
 var $__precision__i=(($__iob+8)|0);
 var $9=HEAP32[(($__precision__i)>>2)];
 var $call7=__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($arraydecay3,30,$8,$arraydecay,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$9,HEAPF64[(((tempVarArgs)+(8))>>3)]=$__v,tempVarArgs)); STACKTOP=tempVarArgs;
 var $__nc_0=$call7;label=27;break;
 case 26: 
 var $call10=__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($arraydecay3,30,$8,$arraydecay,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAPF64[((tempVarArgs)>>3)]=$__v,tempVarArgs)); STACKTOP=tempVarArgs;
 var $__nc_0=$call10;label=27;break;
 case 27: 
 var $__nc_0;
 var $cmp=($__nc_0|0)>29;
 if($cmp){label=29;break;}else{label=28;break;}
 case 28: 
 var $_pre58=HEAP32[(($__nb)>>2)];
 var $__nc_2=$__nc_0;var $__nbh_sroa_0_1=0;var $22=$_pre58;label=47;break;
 case 29: 
 var $10=HEAP8[(15944)];
 var $guard_uninitialized_i32=(($10<<24)>>24)==0;
 if($specify_precision_0_off0_ph_i61){label=30;break;}else{label=38;break;}
 case 30: 
 if($guard_uninitialized_i32){label=31;break;}else{label=35;break;}
 case 31: 
 var $11=___cxa_guard_acquire(15944);
 var $tobool_i33=($11|0)==0;
 if($tobool_i33){label=35;break;}else{label=32;break;}
 case 32: 
 var $call_i35=(function() { try { __THREW__ = 0; return _newlocale(2147483647,2960,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=33;break; } else { label=34;break; }
 case 33: 
 HEAP32[((13952)>>2)]=$call_i35;
 label=35;break;
 case 34: 
 var $12$0 = ___cxa_find_matching_catch(-1, -1); var $12$1 = tempRet0;
 var $eh_lpad_body$1=$12$1;var $eh_lpad_body$0=$12$0;label=37;break;
 case 35: 
 var $13=HEAP32[((13952)>>2)];
 var $__precision__i105=(($__iob+8)|0);
 var $14=HEAP32[(($__precision__i105)>>2)];
 var $call19=(function() { try { __THREW__ = 0; return __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__nb,$13,$arraydecay,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$14,HEAPF64[(((tempVarArgs)+(8))>>3)]=$__v,tempVarArgs)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })(); STACKTOP=tempVarArgs;if (!__THREW__) { var $__nc_1=$call19;label=44;break; } else { label=36;break; }
 case 36: 
 var $15$0 = ___cxa_find_matching_catch(-1, -1); var $15$1 = tempRet0;
 var $eh_lpad_body$1=$15$1;var $eh_lpad_body$0=$15$0;label=37;break;
 case 37: 
 var $eh_lpad_body$0;
 var $eh_lpad_body$1;
 var $16=$eh_lpad_body$0;
 var $17=$eh_lpad_body$1;
 var $ehselector_slot_156=$17;var $exn_slot_157=$16;label=72;break;
 case 38: 
 if($guard_uninitialized_i32){label=39;break;}else{label=43;break;}
 case 39: 
 var $18=___cxa_guard_acquire(15944);
 var $tobool_i41=($18|0)==0;
 if($tobool_i41){label=43;break;}else{label=40;break;}
 case 40: 
 var $call_i43=(function() { try { __THREW__ = 0; return _newlocale(2147483647,2960,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=41;break; } else { label=42;break; }
 case 41: 
 HEAP32[((13952)>>2)]=$call_i43;
 label=43;break;
 case 42: 
 var $19$0 = ___cxa_find_matching_catch(-1, -1); var $19$1 = tempRet0;
 var $eh_lpad_body$1=$19$1;var $eh_lpad_body$0=$19$0;label=37;break;
 case 43: 
 var $20=HEAP32[((13952)>>2)];
 var $call25=(function() { try { __THREW__ = 0; return __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__nb,$20,$arraydecay,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAPF64[((tempVarArgs)>>3)]=$__v,tempVarArgs)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })(); STACKTOP=tempVarArgs;if (!__THREW__) { var $__nc_1=$call25;label=44;break; } else { label=36;break; }
 case 44: 
 var $__nc_1;
 var $21=HEAP32[(($__nb)>>2)];
 var $cmp27=($21|0)==0;
 if($cmp27){label=45;break;}else{var $__nc_2=$__nc_1;var $__nbh_sroa_0_1=$21;var $22=$21;label=47;break;}
 case 45: 
 (function() { try { __THREW__ = 0; return __ZSt17__throw_bad_allocv() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=46;break; } else { label=36;break; }
 case 46: 
 var $_pre=HEAP32[(($__nb)>>2)];
 var $__nc_2=$__nc_1;var $__nbh_sroa_0_1=$_pre;var $22=$_pre;label=47;break;
 case 47: 
 var $22;
 var $__nbh_sroa_0_1;
 var $__nc_2;
 var $add_ptr32=(($22+$__nc_2)|0);
 var $23=HEAP32[(($__fmtflags__i)>>2)];
 var $and_i50=$23&176;
 if(($and_i50|0)==16){ label=48;break;}else if(($and_i50|0)==32){ var $retval_0_i=$add_ptr32;label=54;break;}else{label=53;break;}
 case 48: 
 var $24=HEAP8[($22)];
 if((($24<<24)>>24)==45|(($24<<24)>>24)==43){ label=49;break;}else{label=50;break;}
 case 49: 
 var $add_ptr_i=(($22+1)|0);
 var $retval_0_i=$add_ptr_i;label=54;break;
 case 50: 
 var $cmp4_i=($__nc_2|0)>1;
 var $cmp7_i=(($24<<24)>>24)==48;
 var $or_cond_i=$cmp4_i&$cmp7_i;
 if($or_cond_i){label=51;break;}else{label=53;break;}
 case 51: 
 var $arrayidx9_i=(($22+1)|0);
 var $25=HEAP8[($arrayidx9_i)];
 if((($25<<24)>>24)==120|(($25<<24)>>24)==88){ label=52;break;}else{label=53;break;}
 case 52: 
 var $add_ptr17_i=(($22+2)|0);
 var $retval_0_i=$add_ptr17_i;label=54;break;
 case 53: 
 var $retval_0_i=$22;label=54;break;
 case 54: 
 var $retval_0_i;
 var $arraydecay35=(($__o)|0);
 var $cmp38=($22|0)==($arraydecay3|0);
 if($cmp38){var $__ob_0=$arraydecay35;var $__obh_sroa_0_1=0;var $30=$arraydecay3;label=59;break;}else{label=55;break;}
 case 55: 
 var $mul40=$__nc_2<<3;
 var $call43=_malloc($mul40);
 var $26=$call43;
 var $cmp44=($call43|0)==0;
 if($cmp44){label=56;break;}else{var $__ob_0=$26;var $__obh_sroa_0_1=$26;var $30=$22;label=59;break;}
 case 56: 
 (function() { try { __THREW__ = 0; return __ZSt17__throw_bad_allocv() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=57;break; } else { var $__obh_sroa_0_0=0;label=58;break; }
 case 57: 
 var $_pre59=HEAP32[(($__nb)>>2)];
 var $__ob_0=$26;var $__obh_sroa_0_1=$26;var $30=$_pre59;label=59;break;
 case 58: 
 var $__obh_sroa_0_0;
 var $27$0 = ___cxa_find_matching_catch(-1, -1); var $27$1 = tempRet0;
 var $28=$27$0;
 var $29=$27$1;
 var $exn_slot_0=$28;var $ehselector_slot_0=$29;var $__obh_sroa_0_2=$__obh_sroa_0_0;label=68;break;
 case 59: 
 var $30;
 var $__obh_sroa_0_1;
 var $__ob_0;
 (function() { try { __THREW__ = 0; return __ZNKSt3__18ios_base6getlocEv($ref_tmp49,$__iob) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=60;break; } else { var $__obh_sroa_0_0=$__obh_sroa_0_1;label=58;break; }
 case 60: 
 (function() { try { __THREW__ = 0; return __ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE($30,$retval_0_i,$add_ptr32,$__ob_0,$__op,$__oe,$ref_tmp49) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=61;break; } else { label=67;break; }
 case 61: 
 var $__locale__i53=(($ref_tmp49)|0);
 var $31=HEAP32[(($__locale__i53)>>2)];
 var $32=(($31)|0);
 var $call_i54=__ZNSt3__114__shared_count16__release_sharedEv($32);
 var $33=(($__s)|0);
 var $34=HEAP32[(($33)>>2)];
 var $35=(($agg_tmp)|0);
 HEAP32[(($35)>>2)]=$34;
 var $36=HEAP32[(($__op)>>2)];
 var $37=HEAP32[(($__oe)>>2)];
 (function() { try { __THREW__ = 0; return __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($ref_tmp53,$agg_tmp,$__ob_0,$36,$37,$__iob,$__fl) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=62;break; } else { var $__obh_sroa_0_0=$__obh_sroa_0_1;label=58;break; }
 case 62: 
 var $38=(($ref_tmp53)|0);
 var $39=HEAP32[(($38)>>2)];
 HEAP32[(($33)>>2)]=$39;
 var $40=(($agg_result)|0);
 HEAP32[(($40)>>2)]=$39;
 var $tobool_i_i_i189=($__obh_sroa_0_1|0)==0;
 if($tobool_i_i_i189){label=64;break;}else{label=63;break;}
 case 63: 
 var $41=$__obh_sroa_0_1;
 _free($41);
 label=64;break;
 case 64: 
 var $tobool_i_i_i220=($__nbh_sroa_0_1|0)==0;
 if($tobool_i_i_i220){label=66;break;}else{label=65;break;}
 case 65: 
 _free($__nbh_sroa_0_1);
 label=66;break;
 case 66: 
 STACKTOP=sp;return;
 case 67: 
 var $42$0 = ___cxa_find_matching_catch(-1, -1); var $42$1 = tempRet0;
 var $43=$42$0;
 var $44=$42$1;
 var $__locale__i=(($ref_tmp49)|0);
 var $45=HEAP32[(($__locale__i)>>2)];
 var $46=(($45)|0);
 var $call_i=__ZNSt3__114__shared_count16__release_sharedEv($46);
 var $exn_slot_0=$43;var $ehselector_slot_0=$44;var $__obh_sroa_0_2=$__obh_sroa_0_1;label=68;break;
 case 68: 
 var $__obh_sroa_0_2;
 var $ehselector_slot_0;
 var $exn_slot_0;
 var $tobool_i_i_i95=($__obh_sroa_0_2|0)==0;
 if($tobool_i_i_i95){label=70;break;}else{label=69;break;}
 case 69: 
 var $47=$__obh_sroa_0_2;
 _free($47);
 label=70;break;
 case 70: 
 var $tobool_i_i_i=($__nbh_sroa_0_1|0)==0;
 if($tobool_i_i_i){var $ehselector_slot_156=$ehselector_slot_0;var $exn_slot_157=$exn_slot_0;label=72;break;}else{label=71;break;}
 case 71: 
 _free($__nbh_sroa_0_1);
 var $ehselector_slot_156=$ehselector_slot_0;var $exn_slot_157=$exn_slot_0;label=72;break;
 case 72: 
 var $exn_slot_157;
 var $ehselector_slot_156;
 var $lpad_val$0=$exn_slot_157;
 var $lpad_val$1=0;
 var $lpad_val56$0=$lpad_val$0;
 var $lpad_val56$1=$ehselector_slot_156;
 ___resumeException($lpad_val56$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv($agg_result,$this,$__s,$__iob,$__fl,$__v){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+216)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__s; $__s=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__s)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__p_i_i_i=sp;
 var $__fmt=(sp)+(16);
 var $__nar=(sp)+(24);
 var $__o=(sp)+(48);
 var $ref_tmp=(sp)+(200);
 var $agg_tmp=(sp)+(208);
 var $0=(($__fmt)|0);
 assert(6 % 1 === 0);HEAP8[($0)]=HEAP8[(4152)];HEAP8[((($0)+(1))|0)]=HEAP8[(4153)];HEAP8[((($0)+(2))|0)]=HEAP8[(4154)];HEAP8[((($0)+(3))|0)]=HEAP8[(4155)];HEAP8[((($0)+(4))|0)]=HEAP8[(4156)];HEAP8[((($0)+(5))|0)]=HEAP8[(4157)];
 var $arraydecay=(($__nar)|0);
 var $1=HEAP8[(15944)];
 var $guard_uninitialized_i=(($1<<24)>>24)==0;
 if($guard_uninitialized_i){label=2;break;}else{label=6;break;}
 case 2: 
 var $2=___cxa_guard_acquire(15944);
 var $tobool_i=($2|0)==0;
 if($tobool_i){label=6;break;}else{label=3;break;}
 case 3: 
 var $call_i8=(function() { try { __THREW__ = 0; return _newlocale(2147483647,2960,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=4;break; } else { label=5;break; }
 case 4: 
 HEAP32[((13952)>>2)]=$call_i8;
 label=6;break;
 case 5: 
 var $3$0 = ___cxa_find_matching_catch(-1, -1); var $3$1 = tempRet0;
 ___resumeException($3$0)
 case 6: 
 var $4=HEAP32[((13952)>>2)];
 var $call3=__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($arraydecay,20,$4,$0,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$__v,tempVarArgs)); STACKTOP=tempVarArgs;
 var $add_ptr=(($__nar+$call3)|0);
 var $__fmtflags__i_i=(($__iob+4)|0);
 var $5=HEAP32[(($__fmtflags__i_i)>>2)];
 var $and_i=$5&176;
 if(($and_i|0)==32){ var $retval_0_i=$add_ptr;label=13;break;}else if(($and_i|0)==16){ label=7;break;}else{label=12;break;}
 case 7: 
 var $6=HEAP8[($arraydecay)];
 if((($6<<24)>>24)==45|(($6<<24)>>24)==43){ label=8;break;}else{label=9;break;}
 case 8: 
 var $add_ptr_i=(($__nar+1)|0);
 var $retval_0_i=$add_ptr_i;label=13;break;
 case 9: 
 var $cmp4_i=($call3|0)>1;
 var $cmp7_i=(($6<<24)>>24)==48;
 var $or_cond_i=$cmp4_i&$cmp7_i;
 if($or_cond_i){label=10;break;}else{label=12;break;}
 case 10: 
 var $arrayidx9_i=(($__nar+1)|0);
 var $7=HEAP8[($arrayidx9_i)];
 if((($7<<24)>>24)==120|(($7<<24)>>24)==88){ label=11;break;}else{label=12;break;}
 case 11: 
 var $add_ptr17_i=(($__nar+2)|0);
 var $retval_0_i=$add_ptr17_i;label=13;break;
 case 12: 
 var $retval_0_i=$arraydecay;label=13;break;
 case 13: 
 var $retval_0_i;
 __ZNKSt3__18ios_base6getlocEv($ref_tmp,$__iob);
 var $__locale__i=(($ref_tmp)|0);
 var $8=HEAP32[(($__locale__i)>>2)];
 var $9=$__p_i_i_i;
 var $10=HEAP32[((15376)>>2)];
 var $cmp_i_i_i=($10|0)==-1;
 if($cmp_i_i_i){label=15;break;}else{label=14;break;}
 case 14: 
 var $ref_tmp_i_sroa_0_0__idx_i_i=(($__p_i_i_i)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i)>>2)]=15376;
 var $ref_tmp_i_sroa_1_4__idx6_i_i=(($__p_i_i_i+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i=(($__p_i_i_i+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(15376,$9,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=15;break; } else { label=20;break; }
 case 15: 
 var $11=HEAP32[((15380)>>2)];
 var $sub_i_i=((($11)-(1))|0);
 var $__end__i_i_i_i=(($8+12)|0);
 var $12=HEAP32[(($__end__i_i_i_i)>>2)];
 var $__begin__i_i_i_i=(($8+8)|0);
 var $13=HEAP32[(($__begin__i_i_i_i)>>2)];
 var $sub_ptr_lhs_cast_i_i_i_i=$12;
 var $sub_ptr_rhs_cast_i_i_i_i=$13;
 var $sub_ptr_sub_i_i_i_i=((($sub_ptr_lhs_cast_i_i_i_i)-($sub_ptr_rhs_cast_i_i_i_i))|0);
 var $sub_ptr_div_i_i_i_i=$sub_ptr_sub_i_i_i_i>>2;
 var $cmp_i_i1_i=($sub_ptr_div_i_i_i_i>>>0)>($sub_i_i>>>0);
 if($cmp_i_i1_i){label=16;break;}else{label=17;break;}
 case 16: 
 var $arrayidx_i_i_i_i=(($13+($sub_i_i<<2))|0);
 var $14=HEAP32[(($arrayidx_i_i_i_i)>>2)];
 var $tobool_i_i_i=($14|0)==0;
 if($tobool_i_i_i){label=17;break;}else{label=19;break;}
 case 17: 
 var $exception_i_i=___cxa_allocate_exception(4);
 var $15=$exception_i_i;
 __ZNSt8bad_castC2Ev($15);
 (function() { try { __THREW__ = 0; return ___cxa_throw($exception_i_i,10264,(376)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=18;break; } else { label=20;break; }
 case 18: 
 throw "Reached an unreachable!";
 case 19: 
 var $16=$14;
 var $17=HEAP32[(($__locale__i)>>2)];
 var $18=(($17)|0);
 var $call_i11=__ZNSt3__114__shared_count16__release_sharedEv($18);
 var $arraydecay9=(($__o)|0);
 var $19=$14;
 var $vtable_i=HEAP32[(($19)>>2)];
 var $vfn_i=(($vtable_i+48)|0);
 var $20=HEAP32[(($vfn_i)>>2)];
 var $call_i=FUNCTION_TABLE[$20]($16,$arraydecay,$add_ptr,$arraydecay9);
 var $add_ptr13=(($__o+($call3<<2))|0);
 var $cmp=($retval_0_i|0)==($add_ptr|0);
 if($cmp){var $__op_0=$add_ptr13;label=22;break;}else{label=21;break;}
 case 20: 
 var $21$0 = ___cxa_find_matching_catch(-1, -1); var $21$1 = tempRet0;
 var $22=HEAP32[(($__locale__i)>>2)];
 var $23=(($22)|0);
 var $call_i13=__ZNSt3__114__shared_count16__release_sharedEv($23);
 ___resumeException($21$0)
 case 21: 
 var $sub_ptr_rhs_cast=$__nar;
 var $sub_ptr_lhs_cast16=$retval_0_i;
 var $sub_ptr_sub18=((($sub_ptr_lhs_cast16)-($sub_ptr_rhs_cast))|0);
 var $add_ptr19=(($__o+($sub_ptr_sub18<<2))|0);
 var $__op_0=$add_ptr19;label=22;break;
 case 22: 
 var $__op_0;
 var $24=(($__s)|0);
 var $25=HEAP32[(($24)>>2)];
 var $26=(($agg_tmp)|0);
 HEAP32[(($26)>>2)]=$25;
 __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result,$agg_tmp,$arraydecay9,$__op_0,$add_ptr13,$__iob,$__fl);
 STACKTOP=sp;return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($agg_result,$this,$__b,$__e,$__iob,$__err,$__tm,$__fmtb,$__fmte){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+48)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__p_i_i_i=sp;
 var $ref_tmp=(sp)+(16);
 var $ref_tmp22=(sp)+(24);
 var $agg_tmp=(sp)+(32);
 var $agg_tmp23=(sp)+(40);
 __ZNKSt3__18ios_base6getlocEv($ref_tmp,$__iob);
 var $__locale__i=(($ref_tmp)|0);
 var $0=HEAP32[(($__locale__i)>>2)];
 var $1=$__p_i_i_i;
 var $2=HEAP32[((15384)>>2)];
 var $cmp_i_i_i43=($2|0)==-1;
 if($cmp_i_i_i43){label=3;break;}else{label=2;break;}
 case 2: 
 var $ref_tmp_i_sroa_0_0__idx_i_i=(($__p_i_i_i)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i)>>2)]=15384;
 var $ref_tmp_i_sroa_1_4__idx6_i_i=(($__p_i_i_i+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i=(($__p_i_i_i+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(15384,$1,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=3;break; } else { label=22;break; }
 case 3: 
 var $3=HEAP32[((15388)>>2)];
 var $sub_i_i=((($3)-(1))|0);
 var $__end__i_i_i_i=(($0+12)|0);
 var $4=HEAP32[(($__end__i_i_i_i)>>2)];
 var $__begin__i_i_i_i=(($0+8)|0);
 var $5=HEAP32[(($__begin__i_i_i_i)>>2)];
 var $sub_ptr_lhs_cast_i_i_i_i=$4;
 var $sub_ptr_rhs_cast_i_i_i_i=$5;
 var $sub_ptr_sub_i_i_i_i=((($sub_ptr_lhs_cast_i_i_i_i)-($sub_ptr_rhs_cast_i_i_i_i))|0);
 var $sub_ptr_div_i_i_i_i=$sub_ptr_sub_i_i_i_i>>2;
 var $cmp_i_i1_i=($sub_ptr_div_i_i_i_i>>>0)>($sub_i_i>>>0);
 if($cmp_i_i1_i){label=4;break;}else{label=5;break;}
 case 4: 
 var $arrayidx_i_i_i_i=(($5+($sub_i_i<<2))|0);
 var $6=HEAP32[(($arrayidx_i_i_i_i)>>2)];
 var $tobool_i_i_i45=($6|0)==0;
 if($tobool_i_i_i45){label=5;break;}else{label=7;break;}
 case 5: 
 var $exception_i_i=___cxa_allocate_exception(4);
 var $7=$exception_i_i;
 __ZNSt8bad_castC2Ev($7);
 (function() { try { __THREW__ = 0; return ___cxa_throw($exception_i_i,10264,(376)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=6;break; } else { label=22;break; }
 case 6: 
 throw "Reached an unreachable!";
 case 7: 
 var $8=$6;
 var $9=HEAP32[(($__locale__i)>>2)];
 var $10=(($9)|0);
 var $call_i49=__ZNSt3__114__shared_count16__release_sharedEv($10);
 HEAP32[(($__err)>>2)]=0;
 var $cmp72=($__fmtb|0)==($__fmte|0);
 var $__sbuf__i_i_i272_phi_trans_insert_pre_pre=(($__b)|0);
 if($cmp72){label=67;break;}else{label=8;break;}
 case 8: 
 var $__sbuf__i11_i_i=(($__e)|0);
 var $11=$6;
 var $12=$6;
 var $__tab__i=(($6+8)|0);
 var $13=$__tab__i;
 var $14=$this;
 var $15=(($agg_tmp)|0);
 var $16=(($agg_tmp23)|0);
 var $17=(($ref_tmp22)|0);
 var $__fmtb_addr_0_ph73=$__fmtb;var $_pre75=0;label=9;break;
 case 9: 
 var $_pre75;
 var $__fmtb_addr_0_ph73;
 var $18=$_pre75;label=10;break;
 case 10: 
 var $18;
 var $cmp2=($18|0)==0;
 if($cmp2){label=11;break;}else{label=67;break;}
 case 11: 
 var $19=HEAP32[(($__sbuf__i_i_i272_phi_trans_insert_pre_pre)>>2)];
 var $tobool_i_i_i=($19|0)==0;
 if($tobool_i_i_i){var $24=0;label=15;break;}else{label=12;break;}
 case 12: 
 var $__ninp__i_i_i_i=(($19+12)|0);
 var $20=HEAP32[(($__ninp__i_i_i_i)>>2)];
 var $__einp__i_i_i_i=(($19+16)|0);
 var $21=HEAP32[(($__einp__i_i_i_i)>>2)];
 var $cmp_i_i_i_i=($20|0)==($21|0);
 if($cmp_i_i_i_i){label=13;break;}else{var $24=$19;label=15;break;}
 case 13: 
 var $22=$19;
 var $vtable_i_i_i_i=HEAP32[(($22)>>2)];
 var $vfn_i_i_i_i=(($vtable_i_i_i_i+36)|0);
 var $23=HEAP32[(($vfn_i_i_i_i)>>2)];
 var $call_i_i_i_i=FUNCTION_TABLE[$23]($19);
 var $cmp_i7_i_i_i=($call_i_i_i_i|0)==-1;
 if($cmp_i7_i_i_i){label=14;break;}else{var $24=$19;label=15;break;}
 case 14: 
 HEAP32[(($__sbuf__i_i_i272_phi_trans_insert_pre_pre)>>2)]=0;
 var $24=0;label=15;break;
 case 15: 
 var $24;
 var $cmp_i_i_i=($24|0)==0;
 var $25=HEAP32[(($__sbuf__i11_i_i)>>2)];
 var $tobool_i12_i_i=($25|0)==0;
 if($tobool_i12_i_i){label=20;break;}else{label=16;break;}
 case 16: 
 var $__ninp__i_i15_i_i=(($25+12)|0);
 var $26=HEAP32[(($__ninp__i_i15_i_i)>>2)];
 var $__einp__i_i16_i_i=(($25+16)|0);
 var $27=HEAP32[(($__einp__i_i16_i_i)>>2)];
 var $cmp_i_i17_i_i=($26|0)==($27|0);
 if($cmp_i_i17_i_i){label=17;break;}else{label=19;break;}
 case 17: 
 var $28=$25;
 var $vtable_i_i19_i_i=HEAP32[(($28)>>2)];
 var $vfn_i_i20_i_i=(($vtable_i_i19_i_i+36)|0);
 var $29=HEAP32[(($vfn_i_i20_i_i)>>2)];
 var $call_i_i21_i_i=FUNCTION_TABLE[$29]($25);
 var $cmp_i7_i26_i_i=($call_i_i21_i_i|0)==-1;
 if($cmp_i7_i26_i_i){label=18;break;}else{label=19;break;}
 case 18: 
 HEAP32[(($__sbuf__i11_i_i)>>2)]=0;
 label=20;break;
 case 19: 
 if($cmp_i_i_i){var $33=$25;label=23;break;}else{label=21;break;}
 case 20: 
 if($cmp_i_i_i){label=21;break;}else{var $33=0;label=23;break;}
 case 21: 
 HEAP32[(($__err)>>2)]=4;
 var $82=$24;label=68;break;
 case 22: 
 var $30$0 = ___cxa_find_matching_catch(-1, -1); var $30$1 = tempRet0;
 var $31=HEAP32[(($__locale__i)>>2)];
 var $32=(($31)|0);
 var $call_i51=__ZNSt3__114__shared_count16__release_sharedEv($32);
 ___resumeException($30$0)
 case 23: 
 var $33;
 var $34=HEAP8[($__fmtb_addr_0_ph73)];
 var $vtable_i=HEAP32[(($11)>>2)];
 var $vfn_i=(($vtable_i+36)|0);
 var $35=HEAP32[(($vfn_i)>>2)];
 var $call_i=FUNCTION_TABLE[$35]($8,$34,0);
 var $cmp5=(($call_i<<24)>>24)==37;
 if($cmp5){label=24;break;}else{label=33;break;}
 case 24: 
 var $incdec_ptr=(($__fmtb_addr_0_ph73+1)|0);
 var $cmp7=($incdec_ptr|0)==($__fmte|0);
 if($cmp7){label=25;break;}else{label=26;break;}
 case 25: 
 HEAP32[(($__err)>>2)]=4;
 var $82=$24;label=68;break;
 case 26: 
 var $36=HEAP8[($incdec_ptr)];
 var $vtable_i66=HEAP32[(($11)>>2)];
 var $vfn_i67=(($vtable_i66+36)|0);
 var $37=HEAP32[(($vfn_i67)>>2)];
 var $call_i68=FUNCTION_TABLE[$37]($8,$36,0);
 if((($call_i68<<24)>>24)==69|(($call_i68<<24)>>24)==48){ label=27;break;}else{var $__opt_0=0;var $__cmd_0=$call_i68;var $__fmtb_addr_1=$incdec_ptr;label=30;break;}
 case 27: 
 var $incdec_ptr16=(($__fmtb_addr_0_ph73+2)|0);
 var $cmp17=($incdec_ptr16|0)==($__fmte|0);
 if($cmp17){label=28;break;}else{label=29;break;}
 case 28: 
 HEAP32[(($__err)>>2)]=4;
 var $82=$24;label=68;break;
 case 29: 
 var $38=HEAP8[($incdec_ptr16)];
 var $vtable_i73=HEAP32[(($11)>>2)];
 var $vfn_i74=(($vtable_i73+36)|0);
 var $39=HEAP32[(($vfn_i74)>>2)];
 var $call_i75=FUNCTION_TABLE[$39]($8,$38,0);
 var $__opt_0=$call_i68;var $__cmd_0=$call_i75;var $__fmtb_addr_1=$incdec_ptr16;label=30;break;
 case 30: 
 var $__fmtb_addr_1;
 var $__cmd_0;
 var $__opt_0;
 var $vtable=HEAP32[(($14)>>2)];
 var $vfn=(($vtable+36)|0);
 var $40=HEAP32[(($vfn)>>2)];
 HEAP32[(($15)>>2)]=$24;
 HEAP32[(($16)>>2)]=$33;
 FUNCTION_TABLE[$40]($ref_tmp22,$this,$agg_tmp,$agg_tmp23,$__iob,$__err,$__tm,$__cmd_0,$__opt_0);
 var $41=HEAP32[(($17)>>2)];
 HEAP32[(($__sbuf__i_i_i272_phi_trans_insert_pre_pre)>>2)]=$41;
 var $incdec_ptr24=(($__fmtb_addr_1+1)|0);
 var $__fmtb_addr_0_ph_be=$incdec_ptr24;label=31;break;
 case 31: 
 var $__fmtb_addr_0_ph_be;
 var $cmp=($__fmtb_addr_0_ph_be|0)==($__fmte|0);
 if($cmp){label=67;break;}else{label=32;break;}
 case 32: 
 var $_pre75_pre=HEAP32[(($__err)>>2)];
 var $__fmtb_addr_0_ph73=$__fmtb_addr_0_ph_be;var $_pre75=$_pre75_pre;label=9;break;
 case 33: 
 var $42=HEAP8[($__fmtb_addr_0_ph73)];
 var $tobool_i=(($42<<24)>>24)<0;
 if($tobool_i){label=58;break;}else{label=34;break;}
 case 34: 
 var $conv_i=(($42<<24)>>24);
 var $43=HEAP32[(($13)>>2)];
 var $arrayidx_i=(($43+($conv_i<<1))|0);
 var $44=HEAP16[(($arrayidx_i)>>1)];
 var $and_i=$44&8192;
 var $cmp_i=(($and_i<<16)>>16)==0;
 if($cmp_i){label=58;break;}else{var $__fmtb_addr_0_pn=$__fmtb_addr_0_ph73;label=35;break;}
 case 35: 
 var $__fmtb_addr_0_pn;
 var $__fmtb_addr_2=(($__fmtb_addr_0_pn+1)|0);
 var $cmp28=($__fmtb_addr_2|0)==($__fmte|0);
 if($cmp28){var $__fmtb_addr_2_lcssa=$__fmte;label=38;break;}else{label=36;break;}
 case 36: 
 var $45=HEAP8[($__fmtb_addr_2)];
 var $tobool_i86=(($45<<24)>>24)<0;
 if($tobool_i86){var $__fmtb_addr_2_lcssa=$__fmtb_addr_2;label=38;break;}else{label=37;break;}
 case 37: 
 var $conv_i84=(($45<<24)>>24);
 var $arrayidx_i89=(($43+($conv_i84<<1))|0);
 var $46=HEAP16[(($arrayidx_i89)>>1)];
 var $and_i92=$46&8192;
 var $cmp_i93=(($and_i92<<16)>>16)==0;
 if($cmp_i93){var $__fmtb_addr_2_lcssa=$__fmtb_addr_2;label=38;break;}else{var $__fmtb_addr_0_pn=$__fmtb_addr_2;label=35;break;}
 case 38: 
 var $__fmtb_addr_2_lcssa;
 var $48=$24;var $47=$33;label=39;break;
 case 39: 
 var $47;
 var $48;
 var $tobool_i_i_i117=($48|0)==0;
 if($tobool_i_i_i117){var $53=0;label=43;break;}else{label=40;break;}
 case 40: 
 var $__ninp__i_i_i_i120=(($48+12)|0);
 var $49=HEAP32[(($__ninp__i_i_i_i120)>>2)];
 var $__einp__i_i_i_i121=(($48+16)|0);
 var $50=HEAP32[(($__einp__i_i_i_i121)>>2)];
 var $cmp_i_i_i_i122=($49|0)==($50|0);
 if($cmp_i_i_i_i122){label=41;break;}else{var $53=$48;label=43;break;}
 case 41: 
 var $51=$48;
 var $vtable_i_i_i_i124=HEAP32[(($51)>>2)];
 var $vfn_i_i_i_i125=(($vtable_i_i_i_i124+36)|0);
 var $52=HEAP32[(($vfn_i_i_i_i125)>>2)];
 var $call_i_i_i_i126=FUNCTION_TABLE[$52]($48);
 var $cmp_i7_i_i_i131=($call_i_i_i_i126|0)==-1;
 if($cmp_i7_i_i_i131){label=42;break;}else{var $53=$48;label=43;break;}
 case 42: 
 HEAP32[(($__sbuf__i_i_i272_phi_trans_insert_pre_pre)>>2)]=0;
 var $53=0;label=43;break;
 case 43: 
 var $53;
 var $cmp_i_i_i136=($53|0)==0;
 var $tobool_i12_i_i140=($47|0)==0;
 if($tobool_i12_i_i140){label=48;break;}else{label=44;break;}
 case 44: 
 var $__ninp__i_i15_i_i144=(($47+12)|0);
 var $54=HEAP32[(($__ninp__i_i15_i_i144)>>2)];
 var $__einp__i_i16_i_i145=(($47+16)|0);
 var $55=HEAP32[(($__einp__i_i16_i_i145)>>2)];
 var $cmp_i_i17_i_i146=($54|0)==($55|0);
 if($cmp_i_i17_i_i146){label=46;break;}else{label=45;break;}
 case 45: 
 if($cmp_i_i_i136){var $58=$47;label=50;break;}else{var $__fmtb_addr_0_ph_be=$__fmtb_addr_2_lcssa;label=31;break;}
 case 46: 
 var $56=$47;
 var $vtable_i_i19_i_i148=HEAP32[(($56)>>2)];
 var $vfn_i_i20_i_i149=(($vtable_i_i19_i_i148+36)|0);
 var $57=HEAP32[(($vfn_i_i20_i_i149)>>2)];
 var $call_i_i21_i_i150=FUNCTION_TABLE[$57]($47);
 var $cmp_i7_i26_i_i155=($call_i_i21_i_i150|0)==-1;
 if($cmp_i7_i26_i_i155){label=47;break;}else{label=49;break;}
 case 47: 
 HEAP32[(($__sbuf__i11_i_i)>>2)]=0;
 label=48;break;
 case 48: 
 if($cmp_i_i_i136){var $__fmtb_addr_0_ph_be=$__fmtb_addr_2_lcssa;label=31;break;}else{var $58=0;label=50;break;}
 case 49: 
 var $cmp_i31_i_i160=($47|0)==0;
 var $lnot_i=$cmp_i_i_i136^$cmp_i31_i_i160;
 if($lnot_i){var $58=$47;label=50;break;}else{var $__fmtb_addr_0_ph_be=$__fmtb_addr_2_lcssa;label=31;break;}
 case 50: 
 var $58;
 var $__ninp__i_i=(($53+12)|0);
 var $59=HEAP32[(($__ninp__i_i)>>2)];
 var $__einp__i_i=(($53+16)|0);
 var $60=HEAP32[(($__einp__i_i)>>2)];
 var $cmp_i_i167=($59|0)==($60|0);
 if($cmp_i_i167){label=51;break;}else{label=52;break;}
 case 51: 
 var $61=$53;
 var $vtable_i_i=HEAP32[(($61)>>2)];
 var $vfn_i_i=(($vtable_i_i+36)|0);
 var $62=HEAP32[(($vfn_i_i)>>2)];
 var $call_i_i=FUNCTION_TABLE[$62]($53);
 var $extract_t41=(($call_i_i)&255);
 var $retval_i_i_0_off0=$extract_t41;label=53;break;
 case 52: 
 var $63=HEAP8[($59)];
 var $retval_i_i_0_off0=$63;label=53;break;
 case 53: 
 var $retval_i_i_0_off0;
 var $tobool_i175=(($retval_i_i_0_off0<<24)>>24)<0;
 if($tobool_i175){var $__fmtb_addr_0_ph_be=$__fmtb_addr_2_lcssa;label=31;break;}else{label=54;break;}
 case 54: 
 var $conv_i173=(($retval_i_i_0_off0<<24)>>24);
 var $64=HEAP32[(($13)>>2)];
 var $arrayidx_i178=(($64+($conv_i173<<1))|0);
 var $65=HEAP16[(($arrayidx_i178)>>1)];
 var $and_i181=$65&8192;
 var $cmp_i182=(($and_i181<<16)>>16)==0;
 if($cmp_i182){var $__fmtb_addr_0_ph_be=$__fmtb_addr_2_lcssa;label=31;break;}else{label=55;break;}
 case 55: 
 var $66=HEAP32[(($__ninp__i_i)>>2)];
 var $67=HEAP32[(($__einp__i_i)>>2)];
 var $cmp_i_i196=($66|0)==($67|0);
 if($cmp_i_i196){label=56;break;}else{label=57;break;}
 case 56: 
 var $68=$53;
 var $vtable_i_i197=HEAP32[(($68)>>2)];
 var $vfn_i_i198=(($vtable_i_i197+40)|0);
 var $69=HEAP32[(($vfn_i_i198)>>2)];
 var $call_i_i199=FUNCTION_TABLE[$69]($53);
 var $48=$53;var $47=$58;label=39;break;
 case 57: 
 var $incdec_ptr_i_i=(($66+1)|0);
 HEAP32[(($__ninp__i_i)>>2)]=$incdec_ptr_i_i;
 var $48=$53;var $47=$58;label=39;break;
 case 58: 
 var $__ninp__i_i211=(($24+12)|0);
 var $70=HEAP32[(($__ninp__i_i211)>>2)];
 var $__einp__i_i212=(($24+16)|0);
 var $71=HEAP32[(($__einp__i_i212)>>2)];
 var $cmp_i_i213=($70|0)==($71|0);
 if($cmp_i_i213){label=59;break;}else{label=60;break;}
 case 59: 
 var $72=$24;
 var $vtable_i_i214=HEAP32[(($72)>>2)];
 var $vfn_i_i215=(($vtable_i_i214+36)|0);
 var $73=HEAP32[(($vfn_i_i215)>>2)];
 var $call_i_i216=FUNCTION_TABLE[$73]($24);
 var $extract_t=(($call_i_i216)&255);
 var $retval_i_i205_0_off0=$extract_t;label=61;break;
 case 60: 
 var $74=HEAP8[($70)];
 var $retval_i_i205_0_off0=$74;label=61;break;
 case 61: 
 var $retval_i_i205_0_off0;
 var $vtable_i226=HEAP32[(($12)>>2)];
 var $vfn_i227=(($vtable_i226+12)|0);
 var $75=HEAP32[(($vfn_i227)>>2)];
 var $call_i228=FUNCTION_TABLE[$75]($8,$retval_i_i205_0_off0);
 var $76=HEAP8[($__fmtb_addr_0_ph73)];
 var $vtable_i232=HEAP32[(($12)>>2)];
 var $vfn_i233=(($vtable_i232+12)|0);
 var $77=HEAP32[(($vfn_i233)>>2)];
 var $call_i234=FUNCTION_TABLE[$77]($8,$76);
 var $cmp49=(($call_i228<<24)>>24)==(($call_i234<<24)>>24);
 if($cmp49){label=62;break;}else{label=66;break;}
 case 62: 
 var $78=HEAP32[(($__ninp__i_i211)>>2)];
 var $79=HEAP32[(($__einp__i_i212)>>2)];
 var $cmp_i_i244=($78|0)==($79|0);
 if($cmp_i_i244){label=63;break;}else{label=64;break;}
 case 63: 
 var $80=$24;
 var $vtable_i_i245=HEAP32[(($80)>>2)];
 var $vfn_i_i246=(($vtable_i_i245+40)|0);
 var $81=HEAP32[(($vfn_i_i246)>>2)];
 var $call_i_i247=FUNCTION_TABLE[$81]($24);
 label=65;break;
 case 64: 
 var $incdec_ptr_i_i250=(($78+1)|0);
 HEAP32[(($__ninp__i_i211)>>2)]=$incdec_ptr_i_i250;
 label=65;break;
 case 65: 
 var $incdec_ptr52=(($__fmtb_addr_0_ph73+1)|0);
 var $__fmtb_addr_0_ph_be=$incdec_ptr52;label=31;break;
 case 66: 
 HEAP32[(($__err)>>2)]=4;
 var $18=4;label=10;break;
 case 67: 
 var $_pre=HEAP32[(($__sbuf__i_i_i272_phi_trans_insert_pre_pre)>>2)];
 var $82=$_pre;label=68;break;
 case 68: 
 var $82;
 var $__sbuf__i_i_i272=(($__b)|0);
 var $tobool_i_i_i273=($82|0)==0;
 if($tobool_i_i_i273){label=72;break;}else{label=69;break;}
 case 69: 
 var $__ninp__i_i_i_i276=(($82+12)|0);
 var $83=HEAP32[(($__ninp__i_i_i_i276)>>2)];
 var $__einp__i_i_i_i277=(($82+16)|0);
 var $84=HEAP32[(($__einp__i_i_i_i277)>>2)];
 var $cmp_i_i_i_i278=($83|0)==($84|0);
 if($cmp_i_i_i_i278){label=70;break;}else{label=72;break;}
 case 70: 
 var $85=$82;
 var $vtable_i_i_i_i280=HEAP32[(($85)>>2)];
 var $vfn_i_i_i_i281=(($vtable_i_i_i_i280+36)|0);
 var $86=HEAP32[(($vfn_i_i_i_i281)>>2)];
 var $call_i_i_i_i282=FUNCTION_TABLE[$86]($82);
 var $cmp_i7_i_i_i287=($call_i_i_i_i282|0)==-1;
 if($cmp_i7_i_i_i287){label=71;break;}else{label=72;break;}
 case 71: 
 HEAP32[(($__sbuf__i_i_i272)>>2)]=0;
 label=72;break;
 case 72: 
 var $87=HEAP32[(($__sbuf__i_i_i272)>>2)];
 var $cmp_i_i_i292=($87|0)==0;
 var $__sbuf__i11_i_i295=(($__e)|0);
 var $88=HEAP32[(($__sbuf__i11_i_i295)>>2)];
 var $tobool_i12_i_i296=($88|0)==0;
 if($tobool_i12_i_i296){label=77;break;}else{label=73;break;}
 case 73: 
 var $__ninp__i_i15_i_i300=(($88+12)|0);
 var $89=HEAP32[(($__ninp__i_i15_i_i300)>>2)];
 var $__einp__i_i16_i_i301=(($88+16)|0);
 var $90=HEAP32[(($__einp__i_i16_i_i301)>>2)];
 var $cmp_i_i17_i_i302=($89|0)==($90|0);
 if($cmp_i_i17_i_i302){label=74;break;}else{label=76;break;}
 case 74: 
 var $91=$88;
 var $vtable_i_i19_i_i304=HEAP32[(($91)>>2)];
 var $vfn_i_i20_i_i305=(($vtable_i_i19_i_i304+36)|0);
 var $92=HEAP32[(($vfn_i_i20_i_i305)>>2)];
 var $call_i_i21_i_i306=FUNCTION_TABLE[$92]($88);
 var $cmp_i7_i26_i_i311=($call_i_i21_i_i306|0)==-1;
 if($cmp_i7_i26_i_i311){label=75;break;}else{label=76;break;}
 case 75: 
 HEAP32[(($__sbuf__i11_i_i295)>>2)]=0;
 label=77;break;
 case 76: 
 if($cmp_i_i_i292){label=79;break;}else{label=78;break;}
 case 77: 
 if($cmp_i_i_i292){label=78;break;}else{label=79;break;}
 case 78: 
 var $93=HEAP32[(($__err)>>2)];
 var $or=$93|2;
 HEAP32[(($__err)>>2)]=$or;
 label=79;break;
 case 79: 
 var $94=(($agg_result)|0);
 HEAP32[(($94)>>2)]=$87;
 STACKTOP=sp;return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this){
 var label=0;
 var $0=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($0);
 var $1=$this;
 __ZdlPv($1);
 return;
}
function __ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev($this){
 var label=0;
 var $0=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($0);
 return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv($this){
 var label=0;
 return 2;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm($agg_result,$this,$__b,$__e,$__iob,$__err,$__tm){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 var $agg_tmp=sp;
 var $agg_tmp2=(sp)+(8);
 var $0=(($__b)|0);
 var $1=HEAP32[(($0)>>2)];
 var $2=(($agg_tmp)|0);
 HEAP32[(($2)>>2)]=$1;
 var $3=(($__e)|0);
 var $4=HEAP32[(($3)>>2)];
 var $5=(($agg_tmp2)|0);
 HEAP32[(($5)>>2)]=$4;
 __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($agg_result,$this,$agg_tmp,$agg_tmp2,$__iob,$__err,$__tm,4136,4144);
 STACKTOP=sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm($agg_result,$this,$__b,$__e,$__iob,$__err,$__tm){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $agg_tmp=sp;
 var $agg_tmp2=(sp)+(8);
 var $add_ptr=(($this+8)|0);
 var $0=$add_ptr;
 var $vtable=HEAP32[(($0)>>2)];
 var $vfn=(($vtable+20)|0);
 var $1=HEAP32[(($vfn)>>2)];
 var $call=FUNCTION_TABLE[$1]($add_ptr);
 var $2=(($__b)|0);
 var $3=HEAP32[(($2)>>2)];
 var $4=(($agg_tmp)|0);
 HEAP32[(($4)>>2)]=$3;
 var $5=(($__e)|0);
 var $6=HEAP32[(($5)>>2)];
 var $7=(($agg_tmp2)|0);
 HEAP32[(($7)>>2)]=$6;
 var $__s_i_i_i=$call;
 var $__size__i_i_i=$call;
 var $8=HEAP8[($__size__i_i_i)];
 var $and_i_i_i=$8&1;
 var $tobool_i_i_i=(($and_i_i_i<<24)>>24)==0;
 if($tobool_i_i_i){label=3;break;}else{label=2;break;}
 case 2: 
 var $__data__i21_i_i=(($call+8)|0);
 var $9=HEAP32[(($__data__i21_i_i)>>2)];
 var $cond_i_i50=$9;var $cond_i_i4=$9;label=4;break;
 case 3: 
 var $arrayidx_i_i_i=(($__s_i_i_i+1)|0);
 var $arrayidx_i_i_i48=(($__s_i_i_i+1)|0);
 var $cond_i_i50=$arrayidx_i_i_i48;var $cond_i_i4=$arrayidx_i_i_i;label=4;break;
 case 4: 
 var $cond_i_i4;
 var $cond_i_i50;
 var $conv_i_i=($8&255);
 var $and_i_i=$conv_i_i&1;
 var $tobool_i_i=($and_i_i|0)==0;
 if($tobool_i_i){label=6;break;}else{label=5;break;}
 case 5: 
 var $__size__i23_i=(($call+4)|0);
 var $10=HEAP32[(($__size__i23_i)>>2)];
 var $cond_i=$10;label=7;break;
 case 6: 
 var $shr_i_i3=$conv_i_i>>>1;
 var $cond_i=$shr_i_i3;label=7;break;
 case 7: 
 var $cond_i;
 var $add_ptr6=(($cond_i_i50+$cond_i)|0);
 __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($agg_result,$this,$agg_tmp,$agg_tmp2,$__iob,$__err,$__tm,$cond_i_i4,$add_ptr6);
 STACKTOP=sp;return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm($agg_result,$this,$__b,$__e,$__iob,$__err,$__tm){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+32)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $agg_tmp_i=sp;
 var $__p_i_i_i=(sp)+(8);
 var $ref_tmp=(sp)+(24);
 __ZNKSt3__18ios_base6getlocEv($ref_tmp,$__iob);
 var $__locale__i=(($ref_tmp)|0);
 var $0=HEAP32[(($__locale__i)>>2)];
 var $1=$__p_i_i_i;
 var $2=HEAP32[((15384)>>2)];
 var $cmp_i_i_i=($2|0)==-1;
 if($cmp_i_i_i){label=3;break;}else{label=2;break;}
 case 2: 
 var $ref_tmp_i_sroa_0_0__idx_i_i=(($__p_i_i_i)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i)>>2)]=15384;
 var $ref_tmp_i_sroa_1_4__idx6_i_i=(($__p_i_i_i+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i=(($__p_i_i_i+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(15384,$1,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=3;break; } else { label=10;break; }
 case 3: 
 var $3=HEAP32[((15388)>>2)];
 var $sub_i_i=((($3)-(1))|0);
 var $__end__i_i_i_i=(($0+12)|0);
 var $4=HEAP32[(($__end__i_i_i_i)>>2)];
 var $__begin__i_i_i_i=(($0+8)|0);
 var $5=HEAP32[(($__begin__i_i_i_i)>>2)];
 var $sub_ptr_lhs_cast_i_i_i_i=$4;
 var $sub_ptr_rhs_cast_i_i_i_i=$5;
 var $sub_ptr_sub_i_i_i_i=((($sub_ptr_lhs_cast_i_i_i_i)-($sub_ptr_rhs_cast_i_i_i_i))|0);
 var $sub_ptr_div_i_i_i_i=$sub_ptr_sub_i_i_i_i>>2;
 var $cmp_i_i1_i=($sub_ptr_div_i_i_i_i>>>0)>($sub_i_i>>>0);
 if($cmp_i_i1_i){label=4;break;}else{label=5;break;}
 case 4: 
 var $arrayidx_i_i_i_i=(($5+($sub_i_i<<2))|0);
 var $6=HEAP32[(($arrayidx_i_i_i_i)>>2)];
 var $tobool_i_i_i=($6|0)==0;
 if($tobool_i_i_i){label=5;break;}else{label=7;break;}
 case 5: 
 var $exception_i_i=___cxa_allocate_exception(4);
 var $7=$exception_i_i;
 __ZNSt8bad_castC2Ev($7);
 (function() { try { __THREW__ = 0; return ___cxa_throw($exception_i_i,10264,(376)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=6;break; } else { label=10;break; }
 case 6: 
 throw "Reached an unreachable!";
 case 7: 
 var $8=$6;
 var $9=HEAP32[(($__locale__i)>>2)];
 var $10=(($9)|0);
 var $call_i=__ZNSt3__114__shared_count16__release_sharedEv($10);
 var $11=(($__e)|0);
 var $12=HEAP32[(($11)>>2)];
 var $13=$agg_tmp_i;
 var $add_ptr_i=(($this+8)|0);
 var $14=$add_ptr_i;
 var $vtable_i=HEAP32[(($14)>>2)];
 var $15=HEAP32[(($vtable_i)>>2)];
 var $call_i5=FUNCTION_TABLE[$15]($add_ptr_i);
 var $16=(($agg_tmp_i)|0);
 HEAP32[(($16)>>2)]=$12;
 var $add_ptr2_i=(($call_i5+168)|0);
 var $call3_i=__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$agg_tmp_i,$call_i5,$add_ptr2_i,$8,$__err,0);
 var $sub_ptr_lhs_cast_i=$call3_i;
 var $sub_ptr_rhs_cast_i=$call_i5;
 var $sub_ptr_sub_i=((($sub_ptr_lhs_cast_i)-($sub_ptr_rhs_cast_i))|0);
 var $cmp_i=($sub_ptr_sub_i|0)<168;
 if($cmp_i){label=8;break;}else{label=9;break;}
 case 8: 
 var $tm_wday=(($__tm+24)|0);
 var $sub_ptr_div_i=(((($sub_ptr_sub_i|0))/(12))&-1);
 var $rem_i=(((($sub_ptr_div_i|0))%(7))&-1);
 HEAP32[(($tm_wday)>>2)]=$rem_i;
 label=9;break;
 case 9: 
 var $17=(($__b)|0);
 var $18=HEAP32[(($17)>>2)];
 var $19=(($agg_result)|0);
 HEAP32[(($19)>>2)]=$18;
 STACKTOP=sp;return;
 case 10: 
 var $20$0 = ___cxa_find_matching_catch(-1, -1); var $20$1 = tempRet0;
 var $21=HEAP32[(($__locale__i)>>2)];
 var $22=(($21)|0);
 var $call_i7=__ZNSt3__114__shared_count16__release_sharedEv($22);
 ___resumeException($20$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm($agg_result,$this,$__b,$__e,$__iob,$__err,$__tm){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+32)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $agg_tmp_i=sp;
 var $__p_i_i_i=(sp)+(8);
 var $ref_tmp=(sp)+(24);
 __ZNKSt3__18ios_base6getlocEv($ref_tmp,$__iob);
 var $__locale__i=(($ref_tmp)|0);
 var $0=HEAP32[(($__locale__i)>>2)];
 var $1=$__p_i_i_i;
 var $2=HEAP32[((15384)>>2)];
 var $cmp_i_i_i=($2|0)==-1;
 if($cmp_i_i_i){label=3;break;}else{label=2;break;}
 case 2: 
 var $ref_tmp_i_sroa_0_0__idx_i_i=(($__p_i_i_i)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i)>>2)]=15384;
 var $ref_tmp_i_sroa_1_4__idx6_i_i=(($__p_i_i_i+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i=(($__p_i_i_i+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(15384,$1,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=3;break; } else { label=10;break; }
 case 3: 
 var $3=HEAP32[((15388)>>2)];
 var $sub_i_i=((($3)-(1))|0);
 var $__end__i_i_i_i=(($0+12)|0);
 var $4=HEAP32[(($__end__i_i_i_i)>>2)];
 var $__begin__i_i_i_i=(($0+8)|0);
 var $5=HEAP32[(($__begin__i_i_i_i)>>2)];
 var $sub_ptr_lhs_cast_i_i_i_i=$4;
 var $sub_ptr_rhs_cast_i_i_i_i=$5;
 var $sub_ptr_sub_i_i_i_i=((($sub_ptr_lhs_cast_i_i_i_i)-($sub_ptr_rhs_cast_i_i_i_i))|0);
 var $sub_ptr_div_i_i_i_i=$sub_ptr_sub_i_i_i_i>>2;
 var $cmp_i_i1_i=($sub_ptr_div_i_i_i_i>>>0)>($sub_i_i>>>0);
 if($cmp_i_i1_i){label=4;break;}else{label=5;break;}
 case 4: 
 var $arrayidx_i_i_i_i=(($5+($sub_i_i<<2))|0);
 var $6=HEAP32[(($arrayidx_i_i_i_i)>>2)];
 var $tobool_i_i_i=($6|0)==0;
 if($tobool_i_i_i){label=5;break;}else{label=7;break;}
 case 5: 
 var $exception_i_i=___cxa_allocate_exception(4);
 var $7=$exception_i_i;
 __ZNSt8bad_castC2Ev($7);
 (function() { try { __THREW__ = 0; return ___cxa_throw($exception_i_i,10264,(376)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=6;break; } else { label=10;break; }
 case 6: 
 throw "Reached an unreachable!";
 case 7: 
 var $8=$6;
 var $9=HEAP32[(($__locale__i)>>2)];
 var $10=(($9)|0);
 var $call_i=__ZNSt3__114__shared_count16__release_sharedEv($10);
 var $11=(($__e)|0);
 var $12=HEAP32[(($11)>>2)];
 var $13=$agg_tmp_i;
 var $add_ptr_i=(($this+8)|0);
 var $14=$add_ptr_i;
 var $vtable_i=HEAP32[(($14)>>2)];
 var $vfn_i=(($vtable_i+4)|0);
 var $15=HEAP32[(($vfn_i)>>2)];
 var $call_i5=FUNCTION_TABLE[$15]($add_ptr_i);
 var $16=(($agg_tmp_i)|0);
 HEAP32[(($16)>>2)]=$12;
 var $add_ptr2_i=(($call_i5+288)|0);
 var $call3_i=__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$agg_tmp_i,$call_i5,$add_ptr2_i,$8,$__err,0);
 var $sub_ptr_lhs_cast_i=$call3_i;
 var $sub_ptr_rhs_cast_i=$call_i5;
 var $sub_ptr_sub_i=((($sub_ptr_lhs_cast_i)-($sub_ptr_rhs_cast_i))|0);
 var $cmp_i=($sub_ptr_sub_i|0)<288;
 if($cmp_i){label=8;break;}else{label=9;break;}
 case 8: 
 var $tm_mon=(($__tm+16)|0);
 var $sub_ptr_div_i=(((($sub_ptr_sub_i|0))/(12))&-1);
 var $rem_i=(((($sub_ptr_div_i|0))%(12))&-1);
 HEAP32[(($tm_mon)>>2)]=$rem_i;
 label=9;break;
 case 9: 
 var $17=(($__b)|0);
 var $18=HEAP32[(($17)>>2)];
 var $19=(($agg_result)|0);
 HEAP32[(($19)>>2)]=$18;
 STACKTOP=sp;return;
 case 10: 
 var $20$0 = ___cxa_find_matching_catch(-1, -1); var $20$1 = tempRet0;
 var $21=HEAP32[(($__locale__i)>>2)];
 var $22=(($21)|0);
 var $call_i7=__ZNSt3__114__shared_count16__release_sharedEv($22);
 ___resumeException($20$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm($agg_result,$this,$__b,$__e,$__iob,$__err,$__tm){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+32)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $agg_tmp_i=sp;
 var $__p_i_i_i=(sp)+(8);
 var $ref_tmp=(sp)+(24);
 __ZNKSt3__18ios_base6getlocEv($ref_tmp,$__iob);
 var $__locale__i=(($ref_tmp)|0);
 var $0=HEAP32[(($__locale__i)>>2)];
 var $1=$__p_i_i_i;
 var $2=HEAP32[((15384)>>2)];
 var $cmp_i_i_i=($2|0)==-1;
 if($cmp_i_i_i){label=3;break;}else{label=2;break;}
 case 2: 
 var $ref_tmp_i_sroa_0_0__idx_i_i=(($__p_i_i_i)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i)>>2)]=15384;
 var $ref_tmp_i_sroa_1_4__idx6_i_i=(($__p_i_i_i+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i=(($__p_i_i_i+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(15384,$1,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=3;break; } else { label=13;break; }
 case 3: 
 var $3=HEAP32[((15388)>>2)];
 var $sub_i_i=((($3)-(1))|0);
 var $__end__i_i_i_i=(($0+12)|0);
 var $4=HEAP32[(($__end__i_i_i_i)>>2)];
 var $__begin__i_i_i_i=(($0+8)|0);
 var $5=HEAP32[(($__begin__i_i_i_i)>>2)];
 var $sub_ptr_lhs_cast_i_i_i_i=$4;
 var $sub_ptr_rhs_cast_i_i_i_i=$5;
 var $sub_ptr_sub_i_i_i_i=((($sub_ptr_lhs_cast_i_i_i_i)-($sub_ptr_rhs_cast_i_i_i_i))|0);
 var $sub_ptr_div_i_i_i_i=$sub_ptr_sub_i_i_i_i>>2;
 var $cmp_i_i1_i=($sub_ptr_div_i_i_i_i>>>0)>($sub_i_i>>>0);
 if($cmp_i_i1_i){label=4;break;}else{label=5;break;}
 case 4: 
 var $arrayidx_i_i_i_i=(($5+($sub_i_i<<2))|0);
 var $6=HEAP32[(($arrayidx_i_i_i_i)>>2)];
 var $tobool_i_i_i=($6|0)==0;
 if($tobool_i_i_i){label=5;break;}else{label=7;break;}
 case 5: 
 var $exception_i_i=___cxa_allocate_exception(4);
 var $7=$exception_i_i;
 __ZNSt8bad_castC2Ev($7);
 (function() { try { __THREW__ = 0; return ___cxa_throw($exception_i_i,10264,(376)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=6;break; } else { label=13;break; }
 case 6: 
 throw "Reached an unreachable!";
 case 7: 
 var $8=$6;
 var $9=HEAP32[(($__locale__i)>>2)];
 var $10=(($9)|0);
 var $call_i=__ZNSt3__114__shared_count16__release_sharedEv($10);
 var $tm_year=(($__tm+20)|0);
 var $11=(($__e)|0);
 var $12=HEAP32[(($11)>>2)];
 var $13=$agg_tmp_i;
 var $14=(($agg_tmp_i)|0);
 HEAP32[(($14)>>2)]=$12;
 var $call_i5=__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$agg_tmp_i,$__err,$8,4);
 var $15=HEAP32[(($__err)>>2)];
 var $and_i=$15&4;
 var $tobool_i=($and_i|0)==0;
 if($tobool_i){label=8;break;}else{label=12;break;}
 case 8: 
 var $cmp_i=($call_i5|0)<69;
 if($cmp_i){label=9;break;}else{label=10;break;}
 case 9: 
 var $add_i=((($call_i5)+(2000))|0);
 var $__t_0_i=$add_i;label=11;break;
 case 10: 
 var $call_off_i=((($call_i5)-(69))|0);
 var $16=($call_off_i>>>0)<31;
 var $add6_i=((($call_i5)+(1900))|0);
 var $add6_call_i=($16?$add6_i:$call_i5);
 var $__t_0_i=$add6_call_i;label=11;break;
 case 11: 
 var $__t_0_i;
 var $sub_i=((($__t_0_i)-(1900))|0);
 HEAP32[(($tm_year)>>2)]=$sub_i;
 label=12;break;
 case 12: 
 var $17=(($__b)|0);
 var $18=HEAP32[(($17)>>2)];
 var $19=(($agg_result)|0);
 HEAP32[(($19)>>2)]=$18;
 STACKTOP=sp;return;
 case 13: 
 var $20$0 = ___cxa_find_matching_catch(-1, -1); var $20$1 = tempRet0;
 var $21=HEAP32[(($__locale__i)>>2)];
 var $22=(($21)|0);
 var $call_i7=__ZNSt3__114__shared_count16__release_sharedEv($22);
 ___resumeException($20$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc($agg_result,$this,$__b,$__e,$__iob,$__err,$__tm,$__fmt,$0){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+328)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $agg_tmp_i201=sp;
 var $agg_tmp_i189=(sp)+(8);
 var $agg_tmp_i177=(sp)+(16);
 var $agg_tmp_i165=(sp)+(24);
 var $agg_tmp_i153=(sp)+(32);
 var $agg_tmp_i141=(sp)+(40);
 var $agg_tmp_i129=(sp)+(48);
 var $agg_tmp_i117=(sp)+(56);
 var $agg_tmp_i106=(sp)+(64);
 var $agg_tmp_i100=(sp)+(72);
 var $agg_tmp_i84=(sp)+(80);
 var $agg_tmp_i=(sp)+(88);
 var $__p_i_i_i=(sp)+(96);
 var $ref_tmp=(sp)+(112);
 var $ref_tmp6=(sp)+(120);
 var $agg_tmp7=(sp)+(128);
 var $agg_tmp8=(sp)+(136);
 var $ref_tmp16=(sp)+(144);
 var $agg_tmp17=(sp)+(152);
 var $agg_tmp18=(sp)+(160);
 var $ref_tmp20=(sp)+(168);
 var $agg_tmp21=(sp)+(176);
 var $agg_tmp22=(sp)+(184);
 var $agg_tmp36=(sp)+(192);
 var $agg_tmp39=(sp)+(200);
 var $ref_tmp41=(sp)+(208);
 var $agg_tmp42=(sp)+(216);
 var $agg_tmp43=(sp)+(224);
 var $ref_tmp45=(sp)+(232);
 var $agg_tmp46=(sp)+(240);
 var $agg_tmp47=(sp)+(248);
 var $ref_tmp51=(sp)+(256);
 var $agg_tmp52=(sp)+(264);
 var $agg_tmp53=(sp)+(272);
 var $agg_tmp60=(sp)+(280);
 var $agg_tmp61=(sp)+(288);
 var $ref_tmp68=(sp)+(296);
 var $agg_tmp69=(sp)+(304);
 var $agg_tmp70=(sp)+(312);
 var $agg_tmp81=(sp)+(320);
 HEAP32[(($__err)>>2)]=0;
 __ZNKSt3__18ios_base6getlocEv($ref_tmp,$__iob);
 var $__locale__i=(($ref_tmp)|0);
 var $1=HEAP32[(($__locale__i)>>2)];
 var $2=$__p_i_i_i;
 var $3=HEAP32[((15384)>>2)];
 var $cmp_i_i_i=($3|0)==-1;
 if($cmp_i_i_i){label=3;break;}else{label=2;break;}
 case 2: 
 var $ref_tmp_i_sroa_0_0__idx_i_i=(($__p_i_i_i)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i)>>2)]=15384;
 var $ref_tmp_i_sroa_1_4__idx6_i_i=(($__p_i_i_i+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i=(($__p_i_i_i+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(15384,$2,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=3;break; } else { label=8;break; }
 case 3: 
 var $4=HEAP32[((15388)>>2)];
 var $sub_i_i=((($4)-(1))|0);
 var $__end__i_i_i_i=(($1+12)|0);
 var $5=HEAP32[(($__end__i_i_i_i)>>2)];
 var $__begin__i_i_i_i=(($1+8)|0);
 var $6=HEAP32[(($__begin__i_i_i_i)>>2)];
 var $sub_ptr_lhs_cast_i_i_i_i=$5;
 var $sub_ptr_rhs_cast_i_i_i_i=$6;
 var $sub_ptr_sub_i_i_i_i=((($sub_ptr_lhs_cast_i_i_i_i)-($sub_ptr_rhs_cast_i_i_i_i))|0);
 var $sub_ptr_div_i_i_i_i=$sub_ptr_sub_i_i_i_i>>2;
 var $cmp_i_i1_i=($sub_ptr_div_i_i_i_i>>>0)>($sub_i_i>>>0);
 if($cmp_i_i1_i){label=4;break;}else{label=5;break;}
 case 4: 
 var $arrayidx_i_i_i_i=(($6+($sub_i_i<<2))|0);
 var $7=HEAP32[(($arrayidx_i_i_i_i)>>2)];
 var $tobool_i_i_i73=($7|0)==0;
 if($tobool_i_i_i73){label=5;break;}else{label=7;break;}
 case 5: 
 var $exception_i_i=___cxa_allocate_exception(4);
 var $8=$exception_i_i;
 __ZNSt8bad_castC2Ev($8);
 (function() { try { __THREW__ = 0; return ___cxa_throw($exception_i_i,10264,(376)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=6;break; } else { label=8;break; }
 case 6: 
 throw "Reached an unreachable!";
 case 7: 
 var $9=$7;
 var $10=HEAP32[(($__locale__i)>>2)];
 var $11=(($10)|0);
 var $call_i=__ZNSt3__114__shared_count16__release_sharedEv($11);
 var $conv=(($__fmt<<24)>>24);
 switch(($conv|0)){case 98:case 66:case 104:{ label=11;break;}case 99:{ label=13;break;}case 100:case 101:{ label=20;break;}case 68:{ label=24;break;}case 70:{ label=25;break;}case 72:{ label=26;break;}case 73:{ label=29;break;}case 106:{ label=33;break;}case 109:{ label=36;break;}case 77:{ label=39;break;}case 110:case 116:{ label=42;break;}case 112:{ label=43;break;}case 114:{ label=44;break;}case 82:{ label=45;break;}case 83:{ label=46;break;}case 84:{ label=49;break;}case 119:{ label=50;break;}case 120:{ label=53;break;}case 88:{ label=54;break;}case 121:{ label=61;break;}case 89:{ label=66;break;}case 37:{ label=68;break;}case 97:case 65:{ label=9;break;}default:{label=69;break;}}break;
 case 8: 
 var $12$0 = ___cxa_find_matching_catch(-1, -1); var $12$1 = tempRet0;
 var $13=HEAP32[(($__locale__i)>>2)];
 var $14=(($13)|0);
 var $call_i77=__ZNSt3__114__shared_count16__release_sharedEv($14);
 ___resumeException($12$0)
 case 9: 
 var $15=(($__e)|0);
 var $16=HEAP32[(($15)>>2)];
 var $17=$agg_tmp_i;
 var $add_ptr_i=(($this+8)|0);
 var $18=$add_ptr_i;
 var $vtable_i=HEAP32[(($18)>>2)];
 var $19=HEAP32[(($vtable_i)>>2)];
 var $call_i80=FUNCTION_TABLE[$19]($add_ptr_i);
 var $20=(($agg_tmp_i)|0);
 HEAP32[(($20)>>2)]=$16;
 var $add_ptr2_i=(($call_i80+168)|0);
 var $call3_i=__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$agg_tmp_i,$call_i80,$add_ptr2_i,$9,$__err,0);
 var $sub_ptr_lhs_cast_i=$call3_i;
 var $sub_ptr_rhs_cast_i=$call_i80;
 var $sub_ptr_sub_i=((($sub_ptr_lhs_cast_i)-($sub_ptr_rhs_cast_i))|0);
 var $cmp_i=($sub_ptr_sub_i|0)<168;
 if($cmp_i){label=10;break;}else{label=70;break;}
 case 10: 
 var $tm_wday=(($__tm+24)|0);
 var $sub_ptr_div_i=(((($sub_ptr_sub_i|0))/(12))&-1);
 var $rem_i=(((($sub_ptr_div_i|0))%(7))&-1);
 HEAP32[(($tm_wday)>>2)]=$rem_i;
 label=70;break;
 case 11: 
 var $21=(($__e)|0);
 var $22=HEAP32[(($21)>>2)];
 var $23=$agg_tmp_i84;
 var $add_ptr_i85=(($this+8)|0);
 var $24=$add_ptr_i85;
 var $vtable_i86=HEAP32[(($24)>>2)];
 var $vfn_i=(($vtable_i86+4)|0);
 var $25=HEAP32[(($vfn_i)>>2)];
 var $call_i87=FUNCTION_TABLE[$25]($add_ptr_i85);
 var $26=(($agg_tmp_i84)|0);
 HEAP32[(($26)>>2)]=$22;
 var $add_ptr2_i88=(($call_i87+288)|0);
 var $call3_i89=__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$agg_tmp_i84,$call_i87,$add_ptr2_i88,$9,$__err,0);
 var $sub_ptr_lhs_cast_i90=$call3_i89;
 var $sub_ptr_rhs_cast_i91=$call_i87;
 var $sub_ptr_sub_i92=((($sub_ptr_lhs_cast_i90)-($sub_ptr_rhs_cast_i91))|0);
 var $cmp_i93=($sub_ptr_sub_i92|0)<288;
 if($cmp_i93){label=12;break;}else{label=70;break;}
 case 12: 
 var $tm_mon=(($__tm+16)|0);
 var $sub_ptr_div_i94=(((($sub_ptr_sub_i92|0))/(12))&-1);
 var $rem_i95=(((($sub_ptr_div_i94|0))%(12))&-1);
 HEAP32[(($tm_mon)>>2)]=$rem_i95;
 label=70;break;
 case 13: 
 var $add_ptr=(($this+8)|0);
 var $27=$add_ptr;
 var $vtable=HEAP32[(($27)>>2)];
 var $vfn=(($vtable+12)|0);
 var $28=HEAP32[(($vfn)>>2)];
 var $call5=FUNCTION_TABLE[$28]($add_ptr);
 var $29=(($__b)|0);
 var $30=HEAP32[(($29)>>2)];
 var $31=(($agg_tmp7)|0);
 HEAP32[(($31)>>2)]=$30;
 var $32=(($__e)|0);
 var $33=HEAP32[(($32)>>2)];
 var $34=(($agg_tmp8)|0);
 HEAP32[(($34)>>2)]=$33;
 var $__s_i_i_i=$call5;
 var $__size__i_i_i=$call5;
 var $35=HEAP8[($__size__i_i_i)];
 var $and_i_i_i=$35&1;
 var $tobool_i_i_i=(($and_i_i_i<<24)>>24)==0;
 if($tobool_i_i_i){label=15;break;}else{label=14;break;}
 case 14: 
 var $__data__i21_i_i=(($call5+8)|0);
 var $36=HEAP32[(($__data__i21_i_i)>>2)];
 var $cond_i_i127=$36;var $cond_i_i207=$36;label=16;break;
 case 15: 
 var $arrayidx_i_i_i=(($__s_i_i_i+1)|0);
 var $arrayidx_i_i_i125=(($__s_i_i_i+1)|0);
 var $cond_i_i127=$arrayidx_i_i_i125;var $cond_i_i207=$arrayidx_i_i_i;label=16;break;
 case 16: 
 var $cond_i_i207;
 var $cond_i_i127;
 var $conv_i_i=($35&255);
 var $and_i_i=$conv_i_i&1;
 var $tobool_i_i=($and_i_i|0)==0;
 if($tobool_i_i){label=18;break;}else{label=17;break;}
 case 17: 
 var $__size__i23_i=(($call5+4)|0);
 var $37=HEAP32[(($__size__i23_i)>>2)];
 var $cond_i=$37;label=19;break;
 case 18: 
 var $shr_i_i72=$conv_i_i>>>1;
 var $cond_i=$shr_i_i72;label=19;break;
 case 19: 
 var $cond_i;
 var $add_ptr12=(($cond_i_i127+$cond_i)|0);
 __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($ref_tmp6,$this,$agg_tmp7,$agg_tmp8,$__iob,$__err,$__tm,$cond_i_i207,$add_ptr12);
 var $38=(($ref_tmp6)|0);
 var $39=HEAP32[(($38)>>2)];
 HEAP32[(($29)>>2)]=$39;
 label=70;break;
 case 20: 
 var $tm_mday=(($__tm+12)|0);
 var $40=(($__e)|0);
 var $41=HEAP32[(($40)>>2)];
 var $42=$agg_tmp_i100;
 var $43=(($agg_tmp_i100)|0);
 HEAP32[(($43)>>2)]=$41;
 var $call_i101=__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$agg_tmp_i100,$__err,$9,2);
 var $44=HEAP32[(($__err)>>2)];
 var $and_i=$44&4;
 var $tobool_i=($and_i|0)==0;
 if($tobool_i){label=21;break;}else{label=23;break;}
 case 21: 
 var $call_off_i=((($call_i101)-(1))|0);
 var $45=($call_off_i>>>0)<31;
 if($45){label=22;break;}else{label=23;break;}
 case 22: 
 HEAP32[(($tm_mday)>>2)]=$call_i101;
 label=70;break;
 case 23: 
 var $or_i=$44|4;
 HEAP32[(($__err)>>2)]=$or_i;
 label=70;break;
 case 24: 
 var $46=(($__b)|0);
 var $47=HEAP32[(($46)>>2)];
 var $48=(($agg_tmp17)|0);
 HEAP32[(($48)>>2)]=$47;
 var $49=(($__e)|0);
 var $50=HEAP32[(($49)>>2)];
 var $51=(($agg_tmp18)|0);
 HEAP32[(($51)>>2)]=$50;
 __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($ref_tmp16,$this,$agg_tmp17,$agg_tmp18,$__iob,$__err,$__tm,4128,4136);
 var $52=(($ref_tmp16)|0);
 var $53=HEAP32[(($52)>>2)];
 HEAP32[(($46)>>2)]=$53;
 label=70;break;
 case 25: 
 var $54=(($__b)|0);
 var $55=HEAP32[(($54)>>2)];
 var $56=(($agg_tmp21)|0);
 HEAP32[(($56)>>2)]=$55;
 var $57=(($__e)|0);
 var $58=HEAP32[(($57)>>2)];
 var $59=(($agg_tmp22)|0);
 HEAP32[(($59)>>2)]=$58;
 __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($ref_tmp20,$this,$agg_tmp21,$agg_tmp22,$__iob,$__err,$__tm,4120,4128);
 var $60=(($ref_tmp20)|0);
 var $61=HEAP32[(($60)>>2)];
 HEAP32[(($54)>>2)]=$61;
 label=70;break;
 case 26: 
 var $62=(($__e)|0);
 var $63=HEAP32[(($62)>>2)];
 var $64=$agg_tmp_i106;
 var $65=(($agg_tmp_i106)|0);
 HEAP32[(($65)>>2)]=$63;
 var $call_i107=__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$agg_tmp_i106,$__err,$9,2);
 var $66=HEAP32[(($__err)>>2)];
 var $and_i108=$66&4;
 var $tobool_i109=($and_i108|0)==0;
 var $cmp_i110=($call_i107|0)<24;
 var $or_cond_i=$tobool_i109&$cmp_i110;
 if($or_cond_i){label=27;break;}else{label=28;break;}
 case 27: 
 var $tm_hour=(($__tm+8)|0);
 HEAP32[(($tm_hour)>>2)]=$call_i107;
 label=70;break;
 case 28: 
 var $or_i112=$66|4;
 HEAP32[(($__err)>>2)]=$or_i112;
 label=70;break;
 case 29: 
 var $tm_hour26=(($__tm+8)|0);
 var $67=(($__e)|0);
 var $68=HEAP32[(($67)>>2)];
 var $69=$agg_tmp_i117;
 var $70=(($agg_tmp_i117)|0);
 HEAP32[(($70)>>2)]=$68;
 var $call_i118=__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$agg_tmp_i117,$__err,$9,2);
 var $71=HEAP32[(($__err)>>2)];
 var $and_i119=$71&4;
 var $tobool_i120=($and_i119|0)==0;
 if($tobool_i120){label=30;break;}else{label=32;break;}
 case 30: 
 var $call_off_i121=((($call_i118)-(1))|0);
 var $72=($call_off_i121>>>0)<12;
 if($72){label=31;break;}else{label=32;break;}
 case 31: 
 HEAP32[(($tm_hour26)>>2)]=$call_i118;
 label=70;break;
 case 32: 
 var $or_i124=$71|4;
 HEAP32[(($__err)>>2)]=$or_i124;
 label=70;break;
 case 33: 
 var $73=(($__e)|0);
 var $74=HEAP32[(($73)>>2)];
 var $75=$agg_tmp_i129;
 var $76=(($agg_tmp_i129)|0);
 HEAP32[(($76)>>2)]=$74;
 var $call_i130=__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$agg_tmp_i129,$__err,$9,3);
 var $77=HEAP32[(($__err)>>2)];
 var $and_i131=$77&4;
 var $tobool_i132=($and_i131|0)==0;
 var $cmp_i133=($call_i130|0)<366;
 var $or_cond_i134=$tobool_i132&$cmp_i133;
 if($or_cond_i134){label=34;break;}else{label=35;break;}
 case 34: 
 var $tm_yday=(($__tm+28)|0);
 HEAP32[(($tm_yday)>>2)]=$call_i130;
 label=70;break;
 case 35: 
 var $or_i136=$77|4;
 HEAP32[(($__err)>>2)]=$or_i136;
 label=70;break;
 case 36: 
 var $78=(($__e)|0);
 var $79=HEAP32[(($78)>>2)];
 var $80=$agg_tmp_i141;
 var $81=(($agg_tmp_i141)|0);
 HEAP32[(($81)>>2)]=$79;
 var $call_i142=__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$agg_tmp_i141,$__err,$9,2);
 var $sub_i=((($call_i142)-(1))|0);
 var $82=HEAP32[(($__err)>>2)];
 var $and_i143=$82&4;
 var $tobool_i144=($and_i143|0)==0;
 var $cmp_i145=($sub_i|0)<12;
 var $or_cond_i146=$tobool_i144&$cmp_i145;
 if($or_cond_i146){label=37;break;}else{label=38;break;}
 case 37: 
 var $tm_mon31=(($__tm+16)|0);
 HEAP32[(($tm_mon31)>>2)]=$sub_i;
 label=70;break;
 case 38: 
 var $or_i148=$82|4;
 HEAP32[(($__err)>>2)]=$or_i148;
 label=70;break;
 case 39: 
 var $83=(($__e)|0);
 var $84=HEAP32[(($83)>>2)];
 var $85=$agg_tmp_i153;
 var $86=(($agg_tmp_i153)|0);
 HEAP32[(($86)>>2)]=$84;
 var $call_i154=__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$agg_tmp_i153,$__err,$9,2);
 var $87=HEAP32[(($__err)>>2)];
 var $and_i155=$87&4;
 var $tobool_i156=($and_i155|0)==0;
 var $cmp_i157=($call_i154|0)<60;
 var $or_cond_i158=$tobool_i156&$cmp_i157;
 if($or_cond_i158){label=40;break;}else{label=41;break;}
 case 40: 
 var $tm_min=(($__tm+4)|0);
 HEAP32[(($tm_min)>>2)]=$call_i154;
 label=70;break;
 case 41: 
 var $or_i160=$87|4;
 HEAP32[(($__err)>>2)]=$or_i160;
 label=70;break;
 case 42: 
 var $88=(($__e)|0);
 var $89=HEAP32[(($88)>>2)];
 var $90=(($agg_tmp36)|0);
 HEAP32[(($90)>>2)]=$89;
 __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE(0,$__b,$agg_tmp36,$__err,$9);
 label=70;break;
 case 43: 
 var $tm_hour38=(($__tm+8)|0);
 var $91=(($__e)|0);
 var $92=HEAP32[(($91)>>2)];
 var $93=(($agg_tmp39)|0);
 HEAP32[(($93)>>2)]=$92;
 __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE($this,$tm_hour38,$__b,$agg_tmp39,$__err,$9);
 label=70;break;
 case 44: 
 var $94=(($__b)|0);
 var $95=HEAP32[(($94)>>2)];
 var $96=(($agg_tmp42)|0);
 HEAP32[(($96)>>2)]=$95;
 var $97=(($__e)|0);
 var $98=HEAP32[(($97)>>2)];
 var $99=(($agg_tmp43)|0);
 HEAP32[(($99)>>2)]=$98;
 __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($ref_tmp41,$this,$agg_tmp42,$agg_tmp43,$__iob,$__err,$__tm,4104,4115);
 var $100=(($ref_tmp41)|0);
 var $101=HEAP32[(($100)>>2)];
 HEAP32[(($94)>>2)]=$101;
 label=70;break;
 case 45: 
 var $102=(($__b)|0);
 var $103=HEAP32[(($102)>>2)];
 var $104=(($agg_tmp46)|0);
 HEAP32[(($104)>>2)]=$103;
 var $105=(($__e)|0);
 var $106=HEAP32[(($105)>>2)];
 var $107=(($agg_tmp47)|0);
 HEAP32[(($107)>>2)]=$106;
 __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($ref_tmp45,$this,$agg_tmp46,$agg_tmp47,$__iob,$__err,$__tm,4096,4101);
 var $108=(($ref_tmp45)|0);
 var $109=HEAP32[(($108)>>2)];
 HEAP32[(($102)>>2)]=$109;
 label=70;break;
 case 46: 
 var $110=(($__e)|0);
 var $111=HEAP32[(($110)>>2)];
 var $112=$agg_tmp_i165;
 var $113=(($agg_tmp_i165)|0);
 HEAP32[(($113)>>2)]=$111;
 var $call_i166=__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$agg_tmp_i165,$__err,$9,2);
 var $114=HEAP32[(($__err)>>2)];
 var $and_i167=$114&4;
 var $tobool_i168=($and_i167|0)==0;
 var $cmp_i169=($call_i166|0)<61;
 var $or_cond_i170=$tobool_i168&$cmp_i169;
 if($or_cond_i170){label=47;break;}else{label=48;break;}
 case 47: 
 var $tm_sec=(($__tm)|0);
 HEAP32[(($tm_sec)>>2)]=$call_i166;
 label=70;break;
 case 48: 
 var $or_i172=$114|4;
 HEAP32[(($__err)>>2)]=$or_i172;
 label=70;break;
 case 49: 
 var $115=(($__b)|0);
 var $116=HEAP32[(($115)>>2)];
 var $117=(($agg_tmp52)|0);
 HEAP32[(($117)>>2)]=$116;
 var $118=(($__e)|0);
 var $119=HEAP32[(($118)>>2)];
 var $120=(($agg_tmp53)|0);
 HEAP32[(($120)>>2)]=$119;
 __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($ref_tmp51,$this,$agg_tmp52,$agg_tmp53,$__iob,$__err,$__tm,4088,4096);
 var $121=(($ref_tmp51)|0);
 var $122=HEAP32[(($121)>>2)];
 HEAP32[(($115)>>2)]=$122;
 label=70;break;
 case 50: 
 var $123=(($__e)|0);
 var $124=HEAP32[(($123)>>2)];
 var $125=$agg_tmp_i177;
 var $126=(($agg_tmp_i177)|0);
 HEAP32[(($126)>>2)]=$124;
 var $call_i178=__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$agg_tmp_i177,$__err,$9,1);
 var $127=HEAP32[(($__err)>>2)];
 var $and_i179=$127&4;
 var $tobool_i180=($and_i179|0)==0;
 var $cmp_i181=($call_i178|0)<7;
 var $or_cond_i182=$tobool_i180&$cmp_i181;
 if($or_cond_i182){label=51;break;}else{label=52;break;}
 case 51: 
 var $tm_wday55=(($__tm+24)|0);
 HEAP32[(($tm_wday55)>>2)]=$call_i178;
 label=70;break;
 case 52: 
 var $or_i184=$127|4;
 HEAP32[(($__err)>>2)]=$or_i184;
 label=70;break;
 case 53: 
 var $128=$this;
 var $vtable58=HEAP32[(($128)>>2)];
 var $vfn59=(($vtable58+20)|0);
 var $129=HEAP32[(($vfn59)>>2)];
 var $130=(($__b)|0);
 var $131=HEAP32[(($130)>>2)];
 var $132=(($agg_tmp60)|0);
 HEAP32[(($132)>>2)]=$131;
 var $133=(($__e)|0);
 var $134=HEAP32[(($133)>>2)];
 var $135=(($agg_tmp61)|0);
 HEAP32[(($135)>>2)]=$134;
 FUNCTION_TABLE[$129]($agg_result,$this,$agg_tmp60,$agg_tmp61,$__iob,$__err,$__tm);
 label=71;break;
 case 54: 
 var $add_ptr64=(($this+8)|0);
 var $136=$add_ptr64;
 var $vtable65=HEAP32[(($136)>>2)];
 var $vfn66=(($vtable65+24)|0);
 var $137=HEAP32[(($vfn66)>>2)];
 var $call67=FUNCTION_TABLE[$137]($add_ptr64);
 var $138=(($__b)|0);
 var $139=HEAP32[(($138)>>2)];
 var $140=(($agg_tmp69)|0);
 HEAP32[(($140)>>2)]=$139;
 var $141=(($__e)|0);
 var $142=HEAP32[(($141)>>2)];
 var $143=(($agg_tmp70)|0);
 HEAP32[(($143)>>2)]=$142;
 var $__s_i_i_i158=$call67;
 var $__size__i_i_i159=$call67;
 var $144=HEAP8[($__size__i_i_i159)];
 var $and_i_i_i161=$144&1;
 var $tobool_i_i_i162=(($and_i_i_i161<<24)>>24)==0;
 if($tobool_i_i_i162){label=56;break;}else{label=55;break;}
 case 55: 
 var $__data__i21_i_i169=(($call67+8)|0);
 var $145=HEAP32[(($__data__i21_i_i169)>>2)];
 var $cond_i_i225=$145;var $cond_i_i180209=$145;label=57;break;
 case 56: 
 var $arrayidx_i_i_i178=(($__s_i_i_i158+1)|0);
 var $arrayidx_i_i_i223=(($__s_i_i_i158+1)|0);
 var $cond_i_i225=$arrayidx_i_i_i223;var $cond_i_i180209=$arrayidx_i_i_i178;label=57;break;
 case 57: 
 var $cond_i_i180209;
 var $cond_i_i225;
 var $conv_i_i245=($144&255);
 var $and_i_i246=$conv_i_i245&1;
 var $tobool_i_i247=($and_i_i246|0)==0;
 if($tobool_i_i247){label=59;break;}else{label=58;break;}
 case 58: 
 var $__size__i23_i254=(($call67+4)|0);
 var $146=HEAP32[(($__size__i23_i254)>>2)];
 var $cond_i266=$146;label=60;break;
 case 59: 
 var $shr_i_i26471=$conv_i_i245>>>1;
 var $cond_i266=$shr_i_i26471;label=60;break;
 case 60: 
 var $cond_i266;
 var $add_ptr74=(($cond_i_i225+$cond_i266)|0);
 __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($ref_tmp68,$this,$agg_tmp69,$agg_tmp70,$__iob,$__err,$__tm,$cond_i_i180209,$add_ptr74);
 var $147=(($ref_tmp68)|0);
 var $148=HEAP32[(($147)>>2)];
 HEAP32[(($138)>>2)]=$148;
 label=70;break;
 case 61: 
 var $tm_year=(($__tm+20)|0);
 var $149=(($__e)|0);
 var $150=HEAP32[(($149)>>2)];
 var $151=$agg_tmp_i189;
 var $152=(($agg_tmp_i189)|0);
 HEAP32[(($152)>>2)]=$150;
 var $call_i190=__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$agg_tmp_i189,$__err,$9,4);
 var $153=HEAP32[(($__err)>>2)];
 var $and_i191=$153&4;
 var $tobool_i192=($and_i191|0)==0;
 if($tobool_i192){label=62;break;}else{label=70;break;}
 case 62: 
 var $cmp_i193=($call_i190|0)<69;
 if($cmp_i193){label=63;break;}else{label=64;break;}
 case 63: 
 var $add_i=((($call_i190)+(2000))|0);
 var $__t_0_i=$add_i;label=65;break;
 case 64: 
 var $call_off_i195=((($call_i190)-(69))|0);
 var $154=($call_off_i195>>>0)<31;
 var $add6_i=((($call_i190)+(1900))|0);
 var $add6_call_i=($154?$add6_i:$call_i190);
 var $__t_0_i=$add6_call_i;label=65;break;
 case 65: 
 var $__t_0_i;
 var $sub_i197=((($__t_0_i)-(1900))|0);
 HEAP32[(($tm_year)>>2)]=$sub_i197;
 label=70;break;
 case 66: 
 var $155=(($__e)|0);
 var $156=HEAP32[(($155)>>2)];
 var $157=$agg_tmp_i201;
 var $158=(($agg_tmp_i201)|0);
 HEAP32[(($158)>>2)]=$156;
 var $call_i202=__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$agg_tmp_i201,$__err,$9,4);
 var $159=HEAP32[(($__err)>>2)];
 var $and_i203=$159&4;
 var $tobool_i204=($and_i203|0)==0;
 if($tobool_i204){label=67;break;}else{label=70;break;}
 case 67: 
 var $tm_year78=(($__tm+20)|0);
 var $sub_i205=((($call_i202)-(1900))|0);
 HEAP32[(($tm_year78)>>2)]=$sub_i205;
 label=70;break;
 case 68: 
 var $160=(($__e)|0);
 var $161=HEAP32[(($160)>>2)];
 var $162=(($agg_tmp81)|0);
 HEAP32[(($162)>>2)]=$161;
 __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE(0,$__b,$agg_tmp81,$__err,$9);
 label=70;break;
 case 69: 
 var $163=HEAP32[(($__err)>>2)];
 var $or=$163|4;
 HEAP32[(($__err)>>2)]=$or;
 label=70;break;
 case 70: 
 var $164=(($__b)|0);
 var $165=HEAP32[(($164)>>2)];
 var $166=(($agg_result)|0);
 HEAP32[(($166)>>2)]=$165;
 label=71;break;
 case 71: 
 STACKTOP=sp;return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE($this,$__b,$__e,$__err,$__ct){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__sbuf__i_i_i=(($__b)|0);
 var $__sbuf__i11_i_i=(($__e)|0);
 var $__tab__i=(($__ct+8)|0);
 label=2;break;
 case 2: 
 var $0=HEAP32[(($__sbuf__i_i_i)>>2)];
 var $tobool_i_i_i=($0|0)==0;
 if($tobool_i_i_i){var $5=0;label=7;break;}else{label=3;break;}
 case 3: 
 var $__ninp__i_i_i_i=(($0+12)|0);
 var $1=HEAP32[(($__ninp__i_i_i_i)>>2)];
 var $__einp__i_i_i_i=(($0+16)|0);
 var $2=HEAP32[(($__einp__i_i_i_i)>>2)];
 var $cmp_i_i_i_i=($1|0)==($2|0);
 if($cmp_i_i_i_i){label=4;break;}else{var $5=$0;label=7;break;}
 case 4: 
 var $3=$0;
 var $vtable_i_i_i_i=HEAP32[(($3)>>2)];
 var $vfn_i_i_i_i=(($vtable_i_i_i_i+36)|0);
 var $4=HEAP32[(($vfn_i_i_i_i)>>2)];
 var $call_i_i_i_i=FUNCTION_TABLE[$4]($0);
 var $cmp_i7_i_i_i=($call_i_i_i_i|0)==-1;
 if($cmp_i7_i_i_i){label=6;break;}else{label=5;break;}
 case 5: 
 var $_pre=HEAP32[(($__sbuf__i_i_i)>>2)];
 var $5=$_pre;label=7;break;
 case 6: 
 HEAP32[(($__sbuf__i_i_i)>>2)]=0;
 var $5=0;label=7;break;
 case 7: 
 var $5;
 var $cmp_i_i_i=($5|0)==0;
 var $6=HEAP32[(($__sbuf__i11_i_i)>>2)];
 var $tobool_i12_i_i=($6|0)==0;
 if($tobool_i12_i_i){label=12;break;}else{label=8;break;}
 case 8: 
 var $__ninp__i_i15_i_i=(($6+12)|0);
 var $7=HEAP32[(($__ninp__i_i15_i_i)>>2)];
 var $__einp__i_i16_i_i=(($6+16)|0);
 var $8=HEAP32[(($__einp__i_i16_i_i)>>2)];
 var $cmp_i_i17_i_i=($7|0)==($8|0);
 if($cmp_i_i17_i_i){label=9;break;}else{label=11;break;}
 case 9: 
 var $9=$6;
 var $vtable_i_i19_i_i=HEAP32[(($9)>>2)];
 var $vfn_i_i20_i_i=(($vtable_i_i19_i_i+36)|0);
 var $10=HEAP32[(($vfn_i_i20_i_i)>>2)];
 var $call_i_i21_i_i=FUNCTION_TABLE[$10]($6);
 var $cmp_i7_i26_i_i=($call_i_i21_i_i|0)==-1;
 if($cmp_i7_i26_i_i){label=10;break;}else{label=11;break;}
 case 10: 
 HEAP32[(($__sbuf__i11_i_i)>>2)]=0;
 label=12;break;
 case 11: 
 if($cmp_i_i_i){var $11=$6;var $cmp_i31_i_i17=0;label=13;break;}else{var $25=$6;var $cmp_i31_i_i15=0;label=21;break;}
 case 12: 
 if($cmp_i_i_i){var $25=0;var $cmp_i31_i_i15=1;label=21;break;}else{var $11=0;var $cmp_i31_i_i17=1;label=13;break;}
 case 13: 
 var $cmp_i31_i_i17;
 var $11;
 var $12=HEAP32[(($__sbuf__i_i_i)>>2)];
 var $__ninp__i_i=(($12+12)|0);
 var $13=HEAP32[(($__ninp__i_i)>>2)];
 var $__einp__i_i=(($12+16)|0);
 var $14=HEAP32[(($__einp__i_i)>>2)];
 var $cmp_i_i8=($13|0)==($14|0);
 if($cmp_i_i8){label=14;break;}else{label=15;break;}
 case 14: 
 var $15=$12;
 var $vtable_i_i=HEAP32[(($15)>>2)];
 var $vfn_i_i=(($vtable_i_i+36)|0);
 var $16=HEAP32[(($vfn_i_i)>>2)];
 var $call_i_i=FUNCTION_TABLE[$16]($12);
 var $extract_t=(($call_i_i)&255);
 var $retval_i_i_0_off0=$extract_t;label=16;break;
 case 15: 
 var $17=HEAP8[($13)];
 var $retval_i_i_0_off0=$17;label=16;break;
 case 16: 
 var $retval_i_i_0_off0;
 var $tobool_i=(($retval_i_i_0_off0<<24)>>24)<0;
 if($tobool_i){var $25=$11;var $cmp_i31_i_i15=$cmp_i31_i_i17;label=21;break;}else{label=17;break;}
 case 17: 
 var $conv_i11=(($retval_i_i_0_off0<<24)>>24);
 var $18=HEAP32[(($__tab__i)>>2)];
 var $arrayidx_i=(($18+($conv_i11<<1))|0);
 var $19=HEAP16[(($arrayidx_i)>>1)];
 var $and_i=$19&8192;
 var $cmp_i=(($and_i<<16)>>16)==0;
 if($cmp_i){var $25=$11;var $cmp_i31_i_i15=$cmp_i31_i_i17;label=21;break;}else{label=18;break;}
 case 18: 
 var $20=HEAP32[(($__sbuf__i_i_i)>>2)];
 var $__ninp__i_i19=(($20+12)|0);
 var $21=HEAP32[(($__ninp__i_i19)>>2)];
 var $__einp__i_i20=(($20+16)|0);
 var $22=HEAP32[(($__einp__i_i20)>>2)];
 var $cmp_i_i21=($21|0)==($22|0);
 if($cmp_i_i21){label=19;break;}else{label=20;break;}
 case 19: 
 var $23=$20;
 var $vtable_i_i22=HEAP32[(($23)>>2)];
 var $vfn_i_i23=(($vtable_i_i22+40)|0);
 var $24=HEAP32[(($vfn_i_i23)>>2)];
 var $call_i_i24=FUNCTION_TABLE[$24]($20);
 label=2;break;
 case 20: 
 var $incdec_ptr_i_i=(($21+1)|0);
 HEAP32[(($__ninp__i_i19)>>2)]=$incdec_ptr_i_i;
 label=2;break;
 case 21: 
 var $cmp_i31_i_i15;
 var $25;
 var $26=HEAP32[(($__sbuf__i_i_i)>>2)];
 var $tobool_i_i_i48=($26|0)==0;
 if($tobool_i_i_i48){var $31=0;label=26;break;}else{label=22;break;}
 case 22: 
 var $__ninp__i_i_i_i51=(($26+12)|0);
 var $27=HEAP32[(($__ninp__i_i_i_i51)>>2)];
 var $__einp__i_i_i_i52=(($26+16)|0);
 var $28=HEAP32[(($__einp__i_i_i_i52)>>2)];
 var $cmp_i_i_i_i53=($27|0)==($28|0);
 if($cmp_i_i_i_i53){label=23;break;}else{var $31=$26;label=26;break;}
 case 23: 
 var $29=$26;
 var $vtable_i_i_i_i55=HEAP32[(($29)>>2)];
 var $vfn_i_i_i_i56=(($vtable_i_i_i_i55+36)|0);
 var $30=HEAP32[(($vfn_i_i_i_i56)>>2)];
 var $call_i_i_i_i57=FUNCTION_TABLE[$30]($26);
 var $cmp_i7_i_i_i62=($call_i_i_i_i57|0)==-1;
 if($cmp_i7_i_i_i62){label=25;break;}else{label=24;break;}
 case 24: 
 var $_pre12=HEAP32[(($__sbuf__i_i_i)>>2)];
 var $31=$_pre12;label=26;break;
 case 25: 
 HEAP32[(($__sbuf__i_i_i)>>2)]=0;
 var $31=0;label=26;break;
 case 26: 
 var $31;
 var $cmp_i_i_i67=($31|0)==0;
 if($cmp_i31_i_i15){label=31;break;}else{label=27;break;}
 case 27: 
 var $__ninp__i_i15_i_i75=(($25+12)|0);
 var $32=HEAP32[(($__ninp__i_i15_i_i75)>>2)];
 var $__einp__i_i16_i_i76=(($25+16)|0);
 var $33=HEAP32[(($__einp__i_i16_i_i76)>>2)];
 var $cmp_i_i17_i_i77=($32|0)==($33|0);
 if($cmp_i_i17_i_i77){label=28;break;}else{label=32;break;}
 case 28: 
 var $34=$25;
 var $vtable_i_i19_i_i79=HEAP32[(($34)>>2)];
 var $vfn_i_i20_i_i80=(($vtable_i_i19_i_i79+36)|0);
 var $35=HEAP32[(($vfn_i_i20_i_i80)>>2)];
 var $call_i_i21_i_i81=FUNCTION_TABLE[$35]($25);
 var $cmp_i7_i26_i_i86=($call_i_i21_i_i81|0)==-1;
 if($cmp_i7_i26_i_i86){label=30;break;}else{label=29;break;}
 case 29: 
 if($cmp_i_i_i67){label=34;break;}else{label=33;break;}
 case 30: 
 HEAP32[(($__sbuf__i11_i_i)>>2)]=0;
 label=31;break;
 case 31: 
 if($cmp_i_i_i67){label=33;break;}else{label=34;break;}
 case 32: 
 var $cmp_i31_i_i91=($25|0)==0;
 var $cmp_i_i93tmp=$cmp_i_i_i67^$cmp_i31_i_i91;
 if($cmp_i_i93tmp){label=34;break;}else{label=33;break;}
 case 33: 
 var $36=HEAP32[(($__err)>>2)];
 var $or=$36|2;
 HEAP32[(($__err)>>2)]=$or;
 label=34;break;
 case 34: 
 STACKTOP=sp;return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__h,$__b,$__e,$__err,$__ct){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $agg_tmp=sp;
 var $add_ptr=(($this+8)|0);
 var $0=$add_ptr;
 var $vtable=HEAP32[(($0)>>2)];
 var $vfn=(($vtable+8)|0);
 var $1=HEAP32[(($vfn)>>2)];
 var $call=FUNCTION_TABLE[$1]($add_ptr);
 var $__size__i_i=$call;
 var $2=HEAP8[($__size__i_i)];
 var $conv_i_i=($2&255);
 var $and_i_i=$conv_i_i&1;
 var $tobool_i_i=($and_i_i|0)==0;
 if($tobool_i_i){label=3;break;}else{label=2;break;}
 case 2: 
 var $__size__i23_i=(($call+4)|0);
 var $3=HEAP32[(($__size__i23_i)>>2)];
 var $cond_i=$3;label=4;break;
 case 3: 
 var $shr_i_i10=$conv_i_i>>>1;
 var $cond_i=$shr_i_i10;label=4;break;
 case 4: 
 var $cond_i;
 var $4=(($call+12)|0);
 var $__size__i_i34=$4;
 var $5=HEAP8[($__size__i_i34)];
 var $conv_i_i35=($5&255);
 var $and_i_i36=$conv_i_i35&1;
 var $tobool_i_i37=($and_i_i36|0)==0;
 if($tobool_i_i37){label=6;break;}else{label=5;break;}
 case 5: 
 var $__size__i23_i44=(($call+16)|0);
 var $6=HEAP32[(($__size__i23_i44)>>2)];
 var $cond_i56=$6;label=7;break;
 case 6: 
 var $shr_i_i5411=$conv_i_i35>>>1;
 var $cond_i56=$shr_i_i5411;label=7;break;
 case 7: 
 var $cond_i56;
 var $add=(((-$cond_i56))|0);
 var $cmp=($cond_i|0)==($add|0);
 if($cmp){label=8;break;}else{label=9;break;}
 case 8: 
 var $7=HEAP32[(($__err)>>2)];
 var $or=$7|4;
 HEAP32[(($__err)>>2)]=$or;
 label=15;break;
 case 9: 
 var $8=(($__e)|0);
 var $9=HEAP32[(($8)>>2)];
 var $10=(($agg_tmp)|0);
 HEAP32[(($10)>>2)]=$9;
 var $add_ptr5=(($call+24)|0);
 var $call6=__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$agg_tmp,$call,$add_ptr5,$__ct,$__err,0);
 var $sub_ptr_lhs_cast=$call6;
 var $sub_ptr_rhs_cast=$call;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $11=($call6|0)==($call|0);
 if($11){label=10;break;}else{label=12;break;}
 case 10: 
 var $12=HEAP32[(($__h)>>2)];
 var $cmp8=($12|0)==12;
 if($cmp8){label=11;break;}else{label=12;break;}
 case 11: 
 HEAP32[(($__h)>>2)]=0;
 label=15;break;
 case 12: 
 var $13=($sub_ptr_sub|0)==12;
 if($13){label=13;break;}else{label=15;break;}
 case 13: 
 var $14=HEAP32[(($__h)>>2)];
 var $cmp12=($14|0)<12;
 if($cmp12){label=14;break;}else{label=15;break;}
 case 14: 
 var $add14=((($14)+(12))|0);
 HEAP32[(($__h)>>2)]=$add14;
 label=15;break;
 case 15: 
 STACKTOP=sp;return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE($this,$__b,$__e,$__err,$__ct){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__sbuf__i_i_i=(($__b)|0);
 var $0=HEAP32[(($__sbuf__i_i_i)>>2)];
 var $tobool_i_i_i=($0|0)==0;
 if($tobool_i_i_i){var $5=0;label=6;break;}else{label=2;break;}
 case 2: 
 var $__ninp__i_i_i_i=(($0+12)|0);
 var $1=HEAP32[(($__ninp__i_i_i_i)>>2)];
 var $__einp__i_i_i_i=(($0+16)|0);
 var $2=HEAP32[(($__einp__i_i_i_i)>>2)];
 var $cmp_i_i_i_i=($1|0)==($2|0);
 if($cmp_i_i_i_i){label=3;break;}else{var $5=$0;label=6;break;}
 case 3: 
 var $3=$0;
 var $vtable_i_i_i_i=HEAP32[(($3)>>2)];
 var $vfn_i_i_i_i=(($vtable_i_i_i_i+36)|0);
 var $4=HEAP32[(($vfn_i_i_i_i)>>2)];
 var $call_i_i_i_i=FUNCTION_TABLE[$4]($0);
 var $cmp_i7_i_i_i=($call_i_i_i_i|0)==-1;
 if($cmp_i7_i_i_i){label=5;break;}else{label=4;break;}
 case 4: 
 var $_pre=HEAP32[(($__sbuf__i_i_i)>>2)];
 var $5=$_pre;label=6;break;
 case 5: 
 HEAP32[(($__sbuf__i_i_i)>>2)]=0;
 var $5=0;label=6;break;
 case 6: 
 var $5;
 var $cmp_i_i_i=($5|0)==0;
 var $__sbuf__i11_i_i=(($__e)|0);
 var $6=HEAP32[(($__sbuf__i11_i_i)>>2)];
 var $tobool_i12_i_i=($6|0)==0;
 if($tobool_i12_i_i){label=11;break;}else{label=7;break;}
 case 7: 
 var $__ninp__i_i15_i_i=(($6+12)|0);
 var $7=HEAP32[(($__ninp__i_i15_i_i)>>2)];
 var $__einp__i_i16_i_i=(($6+16)|0);
 var $8=HEAP32[(($__einp__i_i16_i_i)>>2)];
 var $cmp_i_i17_i_i=($7|0)==($8|0);
 if($cmp_i_i17_i_i){label=8;break;}else{label=10;break;}
 case 8: 
 var $9=$6;
 var $vtable_i_i19_i_i=HEAP32[(($9)>>2)];
 var $vfn_i_i20_i_i=(($vtable_i_i19_i_i+36)|0);
 var $10=HEAP32[(($vfn_i_i20_i_i)>>2)];
 var $call_i_i21_i_i=FUNCTION_TABLE[$10]($6);
 var $cmp_i7_i26_i_i=($call_i_i21_i_i|0)==-1;
 if($cmp_i7_i26_i_i){label=9;break;}else{label=10;break;}
 case 9: 
 HEAP32[(($__sbuf__i11_i_i)>>2)]=0;
 label=11;break;
 case 10: 
 if($cmp_i_i_i){var $12=$6;var $cmp_i31_i_i13=0;label=13;break;}else{label=12;break;}
 case 11: 
 if($cmp_i_i_i){label=12;break;}else{var $12=0;var $cmp_i31_i_i13=1;label=13;break;}
 case 12: 
 var $11=HEAP32[(($__err)>>2)];
 var $or=$11|6;
 HEAP32[(($__err)>>2)]=$or;
 label=34;break;
 case 13: 
 var $cmp_i31_i_i13;
 var $12;
 var $13=HEAP32[(($__sbuf__i_i_i)>>2)];
 var $__ninp__i_i=(($13+12)|0);
 var $14=HEAP32[(($__ninp__i_i)>>2)];
 var $__einp__i_i=(($13+16)|0);
 var $15=HEAP32[(($__einp__i_i)>>2)];
 var $cmp_i_i14=($14|0)==($15|0);
 if($cmp_i_i14){label=14;break;}else{label=15;break;}
 case 14: 
 var $16=$13;
 var $vtable_i_i=HEAP32[(($16)>>2)];
 var $vfn_i_i=(($vtable_i_i+36)|0);
 var $17=HEAP32[(($vfn_i_i)>>2)];
 var $call_i_i=FUNCTION_TABLE[$17]($13);
 var $extract_t=(($call_i_i)&255);
 var $retval_i_i_0_off0=$extract_t;label=16;break;
 case 15: 
 var $18=HEAP8[($14)];
 var $retval_i_i_0_off0=$18;label=16;break;
 case 16: 
 var $retval_i_i_0_off0;
 var $19=$__ct;
 var $vtable_i=HEAP32[(($19)>>2)];
 var $vfn_i=(($vtable_i+36)|0);
 var $20=HEAP32[(($vfn_i)>>2)];
 var $call_i=FUNCTION_TABLE[$20]($__ct,$retval_i_i_0_off0,0);
 var $cmp=(($call_i<<24)>>24)==37;
 if($cmp){label=18;break;}else{label=17;break;}
 case 17: 
 var $21=HEAP32[(($__err)>>2)];
 var $or5=$21|4;
 HEAP32[(($__err)>>2)]=$or5;
 label=34;break;
 case 18: 
 var $22=HEAP32[(($__sbuf__i_i_i)>>2)];
 var $__ninp__i_i24=(($22+12)|0);
 var $23=HEAP32[(($__ninp__i_i24)>>2)];
 var $__einp__i_i25=(($22+16)|0);
 var $24=HEAP32[(($__einp__i_i25)>>2)];
 var $cmp_i_i26=($23|0)==($24|0);
 if($cmp_i_i26){label=19;break;}else{label=20;break;}
 case 19: 
 var $25=$22;
 var $vtable_i_i27=HEAP32[(($25)>>2)];
 var $vfn_i_i28=(($vtable_i_i27+40)|0);
 var $26=HEAP32[(($vfn_i_i28)>>2)];
 var $call_i_i29=FUNCTION_TABLE[$26]($22);
 label=21;break;
 case 20: 
 var $incdec_ptr_i_i=(($23+1)|0);
 HEAP32[(($__ninp__i_i24)>>2)]=$incdec_ptr_i_i;
 label=21;break;
 case 21: 
 var $27=HEAP32[(($__sbuf__i_i_i)>>2)];
 var $tobool_i_i_i53=($27|0)==0;
 if($tobool_i_i_i53){var $32=0;label=26;break;}else{label=22;break;}
 case 22: 
 var $__ninp__i_i_i_i56=(($27+12)|0);
 var $28=HEAP32[(($__ninp__i_i_i_i56)>>2)];
 var $__einp__i_i_i_i57=(($27+16)|0);
 var $29=HEAP32[(($__einp__i_i_i_i57)>>2)];
 var $cmp_i_i_i_i58=($28|0)==($29|0);
 if($cmp_i_i_i_i58){label=23;break;}else{var $32=$27;label=26;break;}
 case 23: 
 var $30=$27;
 var $vtable_i_i_i_i60=HEAP32[(($30)>>2)];
 var $vfn_i_i_i_i61=(($vtable_i_i_i_i60+36)|0);
 var $31=HEAP32[(($vfn_i_i_i_i61)>>2)];
 var $call_i_i_i_i62=FUNCTION_TABLE[$31]($27);
 var $cmp_i7_i_i_i67=($call_i_i_i_i62|0)==-1;
 if($cmp_i7_i_i_i67){label=25;break;}else{label=24;break;}
 case 24: 
 var $_pre10=HEAP32[(($__sbuf__i_i_i)>>2)];
 var $32=$_pre10;label=26;break;
 case 25: 
 HEAP32[(($__sbuf__i_i_i)>>2)]=0;
 var $32=0;label=26;break;
 case 26: 
 var $32;
 var $cmp_i_i_i72=($32|0)==0;
 if($cmp_i31_i_i13){label=31;break;}else{label=27;break;}
 case 27: 
 var $__ninp__i_i15_i_i80=(($12+12)|0);
 var $33=HEAP32[(($__ninp__i_i15_i_i80)>>2)];
 var $__einp__i_i16_i_i81=(($12+16)|0);
 var $34=HEAP32[(($__einp__i_i16_i_i81)>>2)];
 var $cmp_i_i17_i_i82=($33|0)==($34|0);
 if($cmp_i_i17_i_i82){label=28;break;}else{label=32;break;}
 case 28: 
 var $35=$12;
 var $vtable_i_i19_i_i84=HEAP32[(($35)>>2)];
 var $vfn_i_i20_i_i85=(($vtable_i_i19_i_i84+36)|0);
 var $36=HEAP32[(($vfn_i_i20_i_i85)>>2)];
 var $call_i_i21_i_i86=FUNCTION_TABLE[$36]($12);
 var $cmp_i7_i26_i_i91=($call_i_i21_i_i86|0)==-1;
 if($cmp_i7_i26_i_i91){label=30;break;}else{label=29;break;}
 case 29: 
 if($cmp_i_i_i72){label=34;break;}else{label=33;break;}
 case 30: 
 HEAP32[(($__sbuf__i11_i_i)>>2)]=0;
 label=31;break;
 case 31: 
 if($cmp_i_i_i72){label=33;break;}else{label=34;break;}
 case 32: 
 var $cmp_i31_i_i96=($12|0)==0;
 var $cmp_i_i98tmp=$cmp_i_i_i72^$cmp_i31_i_i96;
 if($cmp_i_i98tmp){label=34;break;}else{label=33;break;}
 case 33: 
 var $37=HEAP32[(($__err)>>2)];
 var $or9=$37|2;
 HEAP32[(($__err)>>2)]=$or9;
 label=34;break;
 case 34: 
 STACKTOP=sp;return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$__e,$__err,$__ct,$__n){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__sbuf__i_i_i=(($__b)|0);
 var $0=HEAP32[(($__sbuf__i_i_i)>>2)];
 var $tobool_i_i_i=($0|0)==0;
 if($tobool_i_i_i){var $5=0;label=6;break;}else{label=2;break;}
 case 2: 
 var $__ninp__i_i_i_i=(($0+12)|0);
 var $1=HEAP32[(($__ninp__i_i_i_i)>>2)];
 var $__einp__i_i_i_i=(($0+16)|0);
 var $2=HEAP32[(($__einp__i_i_i_i)>>2)];
 var $cmp_i_i_i_i=($1|0)==($2|0);
 if($cmp_i_i_i_i){label=3;break;}else{var $5=$0;label=6;break;}
 case 3: 
 var $3=$0;
 var $vtable_i_i_i_i=HEAP32[(($3)>>2)];
 var $vfn_i_i_i_i=(($vtable_i_i_i_i+36)|0);
 var $4=HEAP32[(($vfn_i_i_i_i)>>2)];
 var $call_i_i_i_i=FUNCTION_TABLE[$4]($0);
 var $cmp_i7_i_i_i=($call_i_i_i_i|0)==-1;
 if($cmp_i7_i_i_i){label=5;break;}else{label=4;break;}
 case 4: 
 var $_pre=HEAP32[(($__sbuf__i_i_i)>>2)];
 var $5=$_pre;label=6;break;
 case 5: 
 HEAP32[(($__sbuf__i_i_i)>>2)]=0;
 var $5=0;label=6;break;
 case 6: 
 var $5;
 var $cmp_i_i_i=($5|0)==0;
 var $__sbuf__i11_i_i=(($__e)|0);
 var $6=HEAP32[(($__sbuf__i11_i_i)>>2)];
 var $tobool_i12_i_i=($6|0)==0;
 if($tobool_i12_i_i){label=11;break;}else{label=7;break;}
 case 7: 
 var $__ninp__i_i15_i_i=(($6+12)|0);
 var $7=HEAP32[(($__ninp__i_i15_i_i)>>2)];
 var $__einp__i_i16_i_i=(($6+16)|0);
 var $8=HEAP32[(($__einp__i_i16_i_i)>>2)];
 var $cmp_i_i17_i_i=($7|0)==($8|0);
 if($cmp_i_i17_i_i){label=8;break;}else{label=10;break;}
 case 8: 
 var $9=$6;
 var $vtable_i_i19_i_i=HEAP32[(($9)>>2)];
 var $vfn_i_i20_i_i=(($vtable_i_i19_i_i+36)|0);
 var $10=HEAP32[(($vfn_i_i20_i_i)>>2)];
 var $call_i_i21_i_i=FUNCTION_TABLE[$10]($6);
 var $cmp_i7_i26_i_i=($call_i_i21_i_i|0)==-1;
 if($cmp_i7_i26_i_i){label=9;break;}else{label=10;break;}
 case 9: 
 HEAP32[(($__sbuf__i11_i_i)>>2)]=0;
 label=11;break;
 case 10: 
 if($cmp_i_i_i){var $12=$6;label=13;break;}else{label=12;break;}
 case 11: 
 if($cmp_i_i_i){label=12;break;}else{var $12=0;label=13;break;}
 case 12: 
 var $11=HEAP32[(($__err)>>2)];
 var $or=$11|6;
 HEAP32[(($__err)>>2)]=$or;
 var $retval_0=0;label=53;break;
 case 13: 
 var $12;
 var $13=HEAP32[(($__sbuf__i_i_i)>>2)];
 var $__ninp__i_i=(($13+12)|0);
 var $14=HEAP32[(($__ninp__i_i)>>2)];
 var $__einp__i_i=(($13+16)|0);
 var $15=HEAP32[(($__einp__i_i)>>2)];
 var $cmp_i_i24=($14|0)==($15|0);
 if($cmp_i_i24){label=14;break;}else{label=15;break;}
 case 14: 
 var $16=$13;
 var $vtable_i_i=HEAP32[(($16)>>2)];
 var $vfn_i_i=(($vtable_i_i+36)|0);
 var $17=HEAP32[(($vfn_i_i)>>2)];
 var $call_i_i=FUNCTION_TABLE[$17]($13);
 var $extract_t=(($call_i_i)&255);
 var $retval_i_i_0_off0=$extract_t;label=16;break;
 case 15: 
 var $18=HEAP8[($14)];
 var $retval_i_i_0_off0=$18;label=16;break;
 case 16: 
 var $retval_i_i_0_off0;
 var $tobool_i=(($retval_i_i_0_off0<<24)>>24)<0;
 if($tobool_i){label=18;break;}else{label=17;break;}
 case 17: 
 var $conv_i27=(($retval_i_i_0_off0<<24)>>24);
 var $__tab__i=(($__ct+8)|0);
 var $19=HEAP32[(($__tab__i)>>2)];
 var $arrayidx_i=(($19+($conv_i27<<1))|0);
 var $20=HEAP16[(($arrayidx_i)>>1)];
 var $and_i=$20&2048;
 var $cmp_i=(($and_i<<16)>>16)==0;
 if($cmp_i){label=18;break;}else{label=19;break;}
 case 18: 
 var $21=HEAP32[(($__err)>>2)];
 var $or4=$21|4;
 HEAP32[(($__err)>>2)]=$or4;
 var $retval_0=0;label=53;break;
 case 19: 
 var $22=$__ct;
 var $vtable_i=HEAP32[(($22)>>2)];
 var $vfn_i=(($vtable_i+36)|0);
 var $23=HEAP32[(($vfn_i)>>2)];
 var $call_i31=FUNCTION_TABLE[$23]($__ct,$retval_i_i_0_off0,0);
 var $conv=(($call_i31<<24)>>24);
 var $24=HEAP32[(($__sbuf__i_i_i)>>2)];
 var $__ninp__i_i39=(($24+12)|0);
 var $25=HEAP32[(($__ninp__i_i39)>>2)];
 var $__einp__i_i40=(($24+16)|0);
 var $26=HEAP32[(($__einp__i_i40)>>2)];
 var $cmp_i_i41=($25|0)==($26|0);
 if($cmp_i_i41){label=20;break;}else{label=21;break;}
 case 20: 
 var $27=$24;
 var $vtable_i_i42=HEAP32[(($27)>>2)];
 var $vfn_i_i43=(($vtable_i_i42+40)|0);
 var $28=HEAP32[(($vfn_i_i43)>>2)];
 var $call_i_i44=FUNCTION_TABLE[$28]($24);
 var $__r_0_in=$conv;var $__n_addr_0_in=$__n;var $29=$12;label=22;break;
 case 21: 
 var $incdec_ptr_i_i=(($25+1)|0);
 HEAP32[(($__ninp__i_i39)>>2)]=$incdec_ptr_i_i;
 var $__r_0_in=$conv;var $__n_addr_0_in=$__n;var $29=$12;label=22;break;
 case 22: 
 var $29;
 var $__n_addr_0_in;
 var $__r_0_in;
 var $__r_0=((($__r_0_in)-(48))|0);
 var $__n_addr_0=((($__n_addr_0_in)-(1))|0);
 var $30=HEAP32[(($__sbuf__i_i_i)>>2)];
 var $tobool_i_i_i68=($30|0)==0;
 if($tobool_i_i_i68){var $35=0;label=27;break;}else{label=23;break;}
 case 23: 
 var $__ninp__i_i_i_i71=(($30+12)|0);
 var $31=HEAP32[(($__ninp__i_i_i_i71)>>2)];
 var $__einp__i_i_i_i72=(($30+16)|0);
 var $32=HEAP32[(($__einp__i_i_i_i72)>>2)];
 var $cmp_i_i_i_i73=($31|0)==($32|0);
 if($cmp_i_i_i_i73){label=24;break;}else{var $35=$30;label=27;break;}
 case 24: 
 var $33=$30;
 var $vtable_i_i_i_i75=HEAP32[(($33)>>2)];
 var $vfn_i_i_i_i76=(($vtable_i_i_i_i75+36)|0);
 var $34=HEAP32[(($vfn_i_i_i_i76)>>2)];
 var $call_i_i_i_i77=FUNCTION_TABLE[$34]($30);
 var $cmp_i7_i_i_i82=($call_i_i_i_i77|0)==-1;
 if($cmp_i7_i_i_i82){label=26;break;}else{label=25;break;}
 case 25: 
 var $_pre35=HEAP32[(($__sbuf__i_i_i)>>2)];
 var $35=$_pre35;label=27;break;
 case 26: 
 HEAP32[(($__sbuf__i_i_i)>>2)]=0;
 var $35=0;label=27;break;
 case 27: 
 var $35;
 var $cmp_i_i_i87=($35|0)==0;
 var $tobool_i12_i_i91=($29|0)==0;
 if($tobool_i12_i_i91){var $42=$35;var $41=0;label=32;break;}else{label=28;break;}
 case 28: 
 var $__ninp__i_i15_i_i95=(($29+12)|0);
 var $36=HEAP32[(($__ninp__i_i15_i_i95)>>2)];
 var $__einp__i_i16_i_i96=(($29+16)|0);
 var $37=HEAP32[(($__einp__i_i16_i_i96)>>2)];
 var $cmp_i_i17_i_i97=($36|0)==($37|0);
 if($cmp_i_i17_i_i97){label=29;break;}else{var $40=$29;label=31;break;}
 case 29: 
 var $38=$29;
 var $vtable_i_i19_i_i99=HEAP32[(($38)>>2)];
 var $vfn_i_i20_i_i100=(($vtable_i_i19_i_i99+36)|0);
 var $39=HEAP32[(($vfn_i_i20_i_i100)>>2)];
 var $call_i_i21_i_i101=FUNCTION_TABLE[$39]($29);
 var $cmp_i7_i26_i_i106=($call_i_i21_i_i101|0)==-1;
 if($cmp_i7_i26_i_i106){label=30;break;}else{var $40=$29;label=31;break;}
 case 30: 
 HEAP32[(($__sbuf__i11_i_i)>>2)]=0;
 var $40=0;label=31;break;
 case 31: 
 var $40;
 var $_pr=HEAP32[(($__sbuf__i_i_i)>>2)];
 var $42=$_pr;var $41=$40;label=32;break;
 case 32: 
 var $41;
 var $42;
 var $cmp_i31_i_i111=($41|0)==0;
 var $lnot_i=$cmp_i_i_i87^$cmp_i31_i_i111;
 var $cmp=($__n_addr_0|0)>0;
 var $cmp_=$lnot_i&$cmp;
 if($cmp_){label=33;break;}else{label=41;break;}
 case 33: 
 var $__ninp__i_i121=(($42+12)|0);
 var $43=HEAP32[(($__ninp__i_i121)>>2)];
 var $__einp__i_i122=(($42+16)|0);
 var $44=HEAP32[(($__einp__i_i122)>>2)];
 var $cmp_i_i123=($43|0)==($44|0);
 if($cmp_i_i123){label=34;break;}else{label=35;break;}
 case 34: 
 var $45=$42;
 var $vtable_i_i124=HEAP32[(($45)>>2)];
 var $vfn_i_i125=(($vtable_i_i124+36)|0);
 var $46=HEAP32[(($vfn_i_i125)>>2)];
 var $call_i_i126=FUNCTION_TABLE[$46]($42);
 var $extract_t20=(($call_i_i126)&255);
 var $retval_i_i115_0_off0=$extract_t20;label=36;break;
 case 35: 
 var $47=HEAP8[($43)];
 var $retval_i_i115_0_off0=$47;label=36;break;
 case 36: 
 var $retval_i_i115_0_off0;
 var $tobool_i139=(($retval_i_i115_0_off0<<24)>>24)<0;
 if($tobool_i139){var $retval_0=$__r_0;label=53;break;}else{label=37;break;}
 case 37: 
 var $conv_i137=(($retval_i_i115_0_off0<<24)>>24);
 var $48=HEAP32[(($__tab__i)>>2)];
 var $arrayidx_i142=(($48+($conv_i137<<1))|0);
 var $49=HEAP16[(($arrayidx_i142)>>1)];
 var $and_i145=$49&2048;
 var $cmp_i146=(($and_i145<<16)>>16)==0;
 if($cmp_i146){var $retval_0=$__r_0;label=53;break;}else{label=38;break;}
 case 38: 
 var $mul=((($__r_0)*(10))&-1);
 var $vtable_i155=HEAP32[(($22)>>2)];
 var $vfn_i156=(($vtable_i155+36)|0);
 var $50=HEAP32[(($vfn_i156)>>2)];
 var $call_i157=FUNCTION_TABLE[$50]($__ct,$retval_i_i115_0_off0,0);
 var $conv14=(($call_i157<<24)>>24);
 var $add=((($conv14)+($mul))|0);
 var $51=HEAP32[(($__sbuf__i_i_i)>>2)];
 var $__ninp__i_i165=(($51+12)|0);
 var $52=HEAP32[(($__ninp__i_i165)>>2)];
 var $__einp__i_i166=(($51+16)|0);
 var $53=HEAP32[(($__einp__i_i166)>>2)];
 var $cmp_i_i167=($52|0)==($53|0);
 if($cmp_i_i167){label=39;break;}else{label=40;break;}
 case 39: 
 var $54=$51;
 var $vtable_i_i168=HEAP32[(($54)>>2)];
 var $vfn_i_i169=(($vtable_i_i168+40)|0);
 var $55=HEAP32[(($vfn_i_i169)>>2)];
 var $call_i_i170=FUNCTION_TABLE[$55]($51);
 var $__r_0_in=$add;var $__n_addr_0_in=$__n_addr_0;var $29=$41;label=22;break;
 case 40: 
 var $incdec_ptr_i_i173=(($52+1)|0);
 HEAP32[(($__ninp__i_i165)>>2)]=$incdec_ptr_i_i173;
 var $__r_0_in=$add;var $__n_addr_0_in=$__n_addr_0;var $29=$41;label=22;break;
 case 41: 
 var $tobool_i_i_i196=($42|0)==0;
 if($tobool_i_i_i196){var $60=0;label=46;break;}else{label=42;break;}
 case 42: 
 var $__ninp__i_i_i_i199=(($42+12)|0);
 var $56=HEAP32[(($__ninp__i_i_i_i199)>>2)];
 var $__einp__i_i_i_i200=(($42+16)|0);
 var $57=HEAP32[(($__einp__i_i_i_i200)>>2)];
 var $cmp_i_i_i_i201=($56|0)==($57|0);
 if($cmp_i_i_i_i201){label=43;break;}else{var $60=$42;label=46;break;}
 case 43: 
 var $58=$42;
 var $vtable_i_i_i_i203=HEAP32[(($58)>>2)];
 var $vfn_i_i_i_i204=(($vtable_i_i_i_i203+36)|0);
 var $59=HEAP32[(($vfn_i_i_i_i204)>>2)];
 var $call_i_i_i_i205=FUNCTION_TABLE[$59]($42);
 var $cmp_i7_i_i_i210=($call_i_i_i_i205|0)==-1;
 if($cmp_i7_i_i_i210){label=45;break;}else{label=44;break;}
 case 44: 
 var $_pre36=HEAP32[(($__sbuf__i_i_i)>>2)];
 var $60=$_pre36;label=46;break;
 case 45: 
 HEAP32[(($__sbuf__i_i_i)>>2)]=0;
 var $60=0;label=46;break;
 case 46: 
 var $60;
 var $cmp_i_i_i215=($60|0)==0;
 if($cmp_i31_i_i111){label=51;break;}else{label=47;break;}
 case 47: 
 var $__ninp__i_i15_i_i223=(($41+12)|0);
 var $61=HEAP32[(($__ninp__i_i15_i_i223)>>2)];
 var $__einp__i_i16_i_i224=(($41+16)|0);
 var $62=HEAP32[(($__einp__i_i16_i_i224)>>2)];
 var $cmp_i_i17_i_i225=($61|0)==($62|0);
 if($cmp_i_i17_i_i225){label=48;break;}else{label=50;break;}
 case 48: 
 var $63=$41;
 var $vtable_i_i19_i_i227=HEAP32[(($63)>>2)];
 var $vfn_i_i20_i_i228=(($vtable_i_i19_i_i227+36)|0);
 var $64=HEAP32[(($vfn_i_i20_i_i228)>>2)];
 var $call_i_i21_i_i229=FUNCTION_TABLE[$64]($41);
 var $cmp_i7_i26_i_i234=($call_i_i21_i_i229|0)==-1;
 if($cmp_i7_i26_i_i234){label=49;break;}else{label=50;break;}
 case 49: 
 HEAP32[(($__sbuf__i11_i_i)>>2)]=0;
 label=51;break;
 case 50: 
 if($cmp_i_i_i215){var $retval_0=$__r_0;label=53;break;}else{label=52;break;}
 case 51: 
 if($cmp_i_i_i215){label=52;break;}else{var $retval_0=$__r_0;label=53;break;}
 case 52: 
 var $65=HEAP32[(($__err)>>2)];
 var $or20=$65|2;
 HEAP32[(($__err)>>2)]=$or20;
 var $retval_0=$__r_0;label=53;break;
 case 53: 
 var $retval_0;
 STACKTOP=sp;return $retval_0;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($agg_result,$this,$__b,$__e,$__iob,$__err,$__tm,$__fmtb,$__fmte){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+48)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__p_i_i_i=sp;
 var $ref_tmp=(sp)+(16);
 var $ref_tmp22=(sp)+(24);
 var $agg_tmp=(sp)+(32);
 var $agg_tmp23=(sp)+(40);
 __ZNKSt3__18ios_base6getlocEv($ref_tmp,$__iob);
 var $__locale__i=(($ref_tmp)|0);
 var $0=HEAP32[(($__locale__i)>>2)];
 var $1=$__p_i_i_i;
 var $2=HEAP32[((15376)>>2)];
 var $cmp_i_i_i35=($2|0)==-1;
 if($cmp_i_i_i35){label=3;break;}else{label=2;break;}
 case 2: 
 var $ref_tmp_i_sroa_0_0__idx_i_i=(($__p_i_i_i)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i)>>2)]=15376;
 var $ref_tmp_i_sroa_1_4__idx6_i_i=(($__p_i_i_i+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i=(($__p_i_i_i+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(15376,$1,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=3;break; } else { label=26;break; }
 case 3: 
 var $3=HEAP32[((15380)>>2)];
 var $sub_i_i=((($3)-(1))|0);
 var $__end__i_i_i_i=(($0+12)|0);
 var $4=HEAP32[(($__end__i_i_i_i)>>2)];
 var $__begin__i_i_i_i=(($0+8)|0);
 var $5=HEAP32[(($__begin__i_i_i_i)>>2)];
 var $sub_ptr_lhs_cast_i_i_i_i=$4;
 var $sub_ptr_rhs_cast_i_i_i_i=$5;
 var $sub_ptr_sub_i_i_i_i=((($sub_ptr_lhs_cast_i_i_i_i)-($sub_ptr_rhs_cast_i_i_i_i))|0);
 var $sub_ptr_div_i_i_i_i=$sub_ptr_sub_i_i_i_i>>2;
 var $cmp_i_i1_i=($sub_ptr_div_i_i_i_i>>>0)>($sub_i_i>>>0);
 if($cmp_i_i1_i){label=4;break;}else{label=5;break;}
 case 4: 
 var $arrayidx_i_i_i_i=(($5+($sub_i_i<<2))|0);
 var $6=HEAP32[(($arrayidx_i_i_i_i)>>2)];
 var $tobool_i_i_i37=($6|0)==0;
 if($tobool_i_i_i37){label=5;break;}else{label=7;break;}
 case 5: 
 var $exception_i_i=___cxa_allocate_exception(4);
 var $7=$exception_i_i;
 __ZNSt8bad_castC2Ev($7);
 (function() { try { __THREW__ = 0; return ___cxa_throw($exception_i_i,10264,(376)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=6;break; } else { label=26;break; }
 case 6: 
 throw "Reached an unreachable!";
 case 7: 
 var $8=$6;
 var $9=HEAP32[(($__locale__i)>>2)];
 var $10=(($9)|0);
 var $call_i41=__ZNSt3__114__shared_count16__release_sharedEv($10);
 HEAP32[(($__err)>>2)]=0;
 var $cmp54=($__fmtb|0)==($__fmte|0);
 var $__sbuf__i_i_i243_phi_trans_insert_pre_pre=(($__b)|0);
 if($cmp54){label=71;break;}else{label=8;break;}
 case 8: 
 var $__sbuf__i11_i_i=(($__e)|0);
 var $11=$6;
 var $12=$6;
 var $13=$6;
 var $14=$this;
 var $15=(($agg_tmp)|0);
 var $16=(($agg_tmp23)|0);
 var $17=(($ref_tmp22)|0);
 var $__fmtb_addr_0_ph55=$__fmtb;var $_pre57=0;label=9;break;
 case 9: 
 var $_pre57;
 var $__fmtb_addr_0_ph55;
 var $18=$_pre57;label=10;break;
 case 10: 
 var $18;
 var $cmp2=($18|0)==0;
 if($cmp2){label=11;break;}else{label=71;break;}
 case 11: 
 var $19=HEAP32[(($__sbuf__i_i_i243_phi_trans_insert_pre_pre)>>2)];
 var $tobool_i_i_i=($19|0)==0;
 if($tobool_i_i_i){var $25=0;label=17;break;}else{label=12;break;}
 case 12: 
 var $__ninp__i_i_i_i=(($19+12)|0);
 var $20=HEAP32[(($__ninp__i_i_i_i)>>2)];
 var $__einp__i_i_i_i=(($19+16)|0);
 var $21=HEAP32[(($__einp__i_i_i_i)>>2)];
 var $cmp_i_i_i_i=($20|0)==($21|0);
 if($cmp_i_i_i_i){label=13;break;}else{label=14;break;}
 case 13: 
 var $22=$19;
 var $vtable_i_i_i_i=HEAP32[(($22)>>2)];
 var $vfn_i_i_i_i=(($vtable_i_i_i_i+36)|0);
 var $23=HEAP32[(($vfn_i_i_i_i)>>2)];
 var $call_i_i_i_i=FUNCTION_TABLE[$23]($19);
 var $retval_i_i_i_i_0=$call_i_i_i_i;label=15;break;
 case 14: 
 var $24=HEAP32[(($20)>>2)];
 var $retval_i_i_i_i_0=$24;label=15;break;
 case 15: 
 var $retval_i_i_i_i_0;
 var $cmp_i7_i_i_i=($retval_i_i_i_i_0|0)==-1;
 if($cmp_i7_i_i_i){label=16;break;}else{var $25=$19;label=17;break;}
 case 16: 
 HEAP32[(($__sbuf__i_i_i243_phi_trans_insert_pre_pre)>>2)]=0;
 var $25=0;label=17;break;
 case 17: 
 var $25;
 var $cmp_i_i_i=($25|0)==0;
 var $26=HEAP32[(($__sbuf__i11_i_i)>>2)];
 var $tobool_i12_i_i=($26|0)==0;
 if($tobool_i12_i_i){label=23;break;}else{label=18;break;}
 case 18: 
 var $__ninp__i_i15_i_i=(($26+12)|0);
 var $27=HEAP32[(($__ninp__i_i15_i_i)>>2)];
 var $__einp__i_i16_i_i=(($26+16)|0);
 var $28=HEAP32[(($__einp__i_i16_i_i)>>2)];
 var $cmp_i_i17_i_i=($27|0)==($28|0);
 if($cmp_i_i17_i_i){label=19;break;}else{label=20;break;}
 case 19: 
 var $29=$26;
 var $vtable_i_i19_i_i=HEAP32[(($29)>>2)];
 var $vfn_i_i20_i_i=(($vtable_i_i19_i_i+36)|0);
 var $30=HEAP32[(($vfn_i_i20_i_i)>>2)];
 var $call_i_i21_i_i=FUNCTION_TABLE[$30]($26);
 var $retval_i_i7_i_i_0=$call_i_i21_i_i;label=21;break;
 case 20: 
 var $31=HEAP32[(($27)>>2)];
 var $retval_i_i7_i_i_0=$31;label=21;break;
 case 21: 
 var $retval_i_i7_i_i_0;
 var $cmp_i7_i25_i_i=($retval_i_i7_i_i_0|0)==-1;
 if($cmp_i7_i25_i_i){label=22;break;}else{label=24;break;}
 case 22: 
 HEAP32[(($__sbuf__i11_i_i)>>2)]=0;
 label=23;break;
 case 23: 
 if($cmp_i_i_i){label=25;break;}else{var $35=0;label=27;break;}
 case 24: 
 var $cmp_i30_i_i=($26|0)==0;
 var $cmp_i_itmp=$cmp_i_i_i^$cmp_i30_i_i;
 if($cmp_i_itmp){var $35=$26;label=27;break;}else{label=25;break;}
 case 25: 
 HEAP32[(($__err)>>2)]=4;
 var $84=$25;label=72;break;
 case 26: 
 var $32$0 = ___cxa_find_matching_catch(-1, -1); var $32$1 = tempRet0;
 var $33=HEAP32[(($__locale__i)>>2)];
 var $34=(($33)|0);
 var $call_i43=__ZNSt3__114__shared_count16__release_sharedEv($34);
 ___resumeException($32$0)
 case 27: 
 var $35;
 var $36=HEAP32[(($__fmtb_addr_0_ph55)>>2)];
 var $vtable_i=HEAP32[(($11)>>2)];
 var $vfn_i=(($vtable_i+52)|0);
 var $37=HEAP32[(($vfn_i)>>2)];
 var $call_i=FUNCTION_TABLE[$37]($8,$36,0);
 var $cmp5=(($call_i<<24)>>24)==37;
 if($cmp5){label=28;break;}else{label=37;break;}
 case 28: 
 var $incdec_ptr=(($__fmtb_addr_0_ph55+4)|0);
 var $cmp7=($incdec_ptr|0)==($__fmte|0);
 if($cmp7){label=29;break;}else{label=30;break;}
 case 29: 
 HEAP32[(($__err)>>2)]=4;
 var $84=$25;label=72;break;
 case 30: 
 var $38=HEAP32[(($incdec_ptr)>>2)];
 var $vtable_i64=HEAP32[(($11)>>2)];
 var $vfn_i65=(($vtable_i64+52)|0);
 var $39=HEAP32[(($vfn_i65)>>2)];
 var $call_i66=FUNCTION_TABLE[$39]($8,$38,0);
 if((($call_i66<<24)>>24)==69|(($call_i66<<24)>>24)==48){ label=31;break;}else{var $__opt_0=0;var $__cmd_0=$call_i66;var $__fmtb_addr_1=$incdec_ptr;label=34;break;}
 case 31: 
 var $incdec_ptr16=(($__fmtb_addr_0_ph55+8)|0);
 var $cmp17=($incdec_ptr16|0)==($__fmte|0);
 if($cmp17){label=32;break;}else{label=33;break;}
 case 32: 
 HEAP32[(($__err)>>2)]=4;
 var $84=$25;label=72;break;
 case 33: 
 var $40=HEAP32[(($incdec_ptr16)>>2)];
 var $vtable_i71=HEAP32[(($11)>>2)];
 var $vfn_i72=(($vtable_i71+52)|0);
 var $41=HEAP32[(($vfn_i72)>>2)];
 var $call_i73=FUNCTION_TABLE[$41]($8,$40,0);
 var $__opt_0=$call_i66;var $__cmd_0=$call_i73;var $__fmtb_addr_1=$incdec_ptr16;label=34;break;
 case 34: 
 var $__fmtb_addr_1;
 var $__cmd_0;
 var $__opt_0;
 var $vtable=HEAP32[(($14)>>2)];
 var $vfn=(($vtable+36)|0);
 var $42=HEAP32[(($vfn)>>2)];
 HEAP32[(($15)>>2)]=$25;
 HEAP32[(($16)>>2)]=$35;
 FUNCTION_TABLE[$42]($ref_tmp22,$this,$agg_tmp,$agg_tmp23,$__iob,$__err,$__tm,$__cmd_0,$__opt_0);
 var $43=HEAP32[(($17)>>2)];
 HEAP32[(($__sbuf__i_i_i243_phi_trans_insert_pre_pre)>>2)]=$43;
 var $incdec_ptr24=(($__fmtb_addr_1+4)|0);
 var $__fmtb_addr_0_ph_be=$incdec_ptr24;label=35;break;
 case 35: 
 var $__fmtb_addr_0_ph_be;
 var $cmp=($__fmtb_addr_0_ph_be|0)==($__fmte|0);
 if($cmp){label=71;break;}else{label=36;break;}
 case 36: 
 var $_pre57_pre=HEAP32[(($__err)>>2)];
 var $__fmtb_addr_0_ph55=$__fmtb_addr_0_ph_be;var $_pre57=$_pre57_pre;label=9;break;
 case 37: 
 var $44=HEAP32[(($__fmtb_addr_0_ph55)>>2)];
 var $vtable_i77=HEAP32[(($12)>>2)];
 var $vfn_i78=(($vtable_i77+12)|0);
 var $45=HEAP32[(($vfn_i78)>>2)];
 var $call_i79=FUNCTION_TABLE[$45]($8,8192,$44);
 if($call_i79){var $__fmtb_addr_0_pn=$__fmtb_addr_0_ph55;label=38;break;}else{label=62;break;}
 case 38: 
 var $__fmtb_addr_0_pn;
 var $__fmtb_addr_2=(($__fmtb_addr_0_pn+4)|0);
 var $cmp28=($__fmtb_addr_2|0)==($__fmte|0);
 if($cmp28){var $__fmtb_addr_2_lcssa=$__fmte;label=40;break;}else{label=39;break;}
 case 39: 
 var $46=HEAP32[(($__fmtb_addr_2)>>2)];
 var $vtable_i84=HEAP32[(($12)>>2)];
 var $vfn_i85=(($vtable_i84+12)|0);
 var $47=HEAP32[(($vfn_i85)>>2)];
 var $call_i86=FUNCTION_TABLE[$47]($8,8192,$46);
 if($call_i86){var $__fmtb_addr_0_pn=$__fmtb_addr_2;label=38;break;}else{var $__fmtb_addr_2_lcssa=$__fmtb_addr_2;label=40;break;}
 case 40: 
 var $__fmtb_addr_2_lcssa;
 var $49=$25;var $48=$35;label=41;break;
 case 41: 
 var $48;
 var $49;
 var $tobool_i_i_i106=($49|0)==0;
 if($tobool_i_i_i106){var $55=0;label=47;break;}else{label=42;break;}
 case 42: 
 var $__ninp__i_i_i_i109=(($49+12)|0);
 var $50=HEAP32[(($__ninp__i_i_i_i109)>>2)];
 var $__einp__i_i_i_i110=(($49+16)|0);
 var $51=HEAP32[(($__einp__i_i_i_i110)>>2)];
 var $cmp_i_i_i_i111=($50|0)==($51|0);
 if($cmp_i_i_i_i111){label=43;break;}else{label=44;break;}
 case 43: 
 var $52=$49;
 var $vtable_i_i_i_i113=HEAP32[(($52)>>2)];
 var $vfn_i_i_i_i114=(($vtable_i_i_i_i113+36)|0);
 var $53=HEAP32[(($vfn_i_i_i_i114)>>2)];
 var $call_i_i_i_i115=FUNCTION_TABLE[$53]($49);
 var $retval_i_i_i_i96_0=$call_i_i_i_i115;label=45;break;
 case 44: 
 var $54=HEAP32[(($50)>>2)];
 var $retval_i_i_i_i96_0=$54;label=45;break;
 case 45: 
 var $retval_i_i_i_i96_0;
 var $cmp_i7_i_i_i119=($retval_i_i_i_i96_0|0)==-1;
 if($cmp_i7_i_i_i119){label=46;break;}else{var $55=$49;label=47;break;}
 case 46: 
 HEAP32[(($__sbuf__i_i_i243_phi_trans_insert_pre_pre)>>2)]=0;
 var $55=0;label=47;break;
 case 47: 
 var $55;
 var $cmp_i_i_i124=($55|0)==0;
 var $tobool_i12_i_i128=($48|0)==0;
 if($tobool_i12_i_i128){label=53;break;}else{label=48;break;}
 case 48: 
 var $__ninp__i_i15_i_i132=(($48+12)|0);
 var $56=HEAP32[(($__ninp__i_i15_i_i132)>>2)];
 var $__einp__i_i16_i_i133=(($48+16)|0);
 var $57=HEAP32[(($__einp__i_i16_i_i133)>>2)];
 var $cmp_i_i17_i_i134=($56|0)==($57|0);
 if($cmp_i_i17_i_i134){label=49;break;}else{label=50;break;}
 case 49: 
 var $58=$48;
 var $vtable_i_i19_i_i136=HEAP32[(($58)>>2)];
 var $vfn_i_i20_i_i137=(($vtable_i_i19_i_i136+36)|0);
 var $59=HEAP32[(($vfn_i_i20_i_i137)>>2)];
 var $call_i_i21_i_i138=FUNCTION_TABLE[$59]($48);
 var $retval_i_i7_i_i90_0=$call_i_i21_i_i138;label=51;break;
 case 50: 
 var $60=HEAP32[(($56)>>2)];
 var $retval_i_i7_i_i90_0=$60;label=51;break;
 case 51: 
 var $retval_i_i7_i_i90_0;
 var $cmp_i7_i25_i_i142=($retval_i_i7_i_i90_0|0)==-1;
 if($cmp_i7_i25_i_i142){label=52;break;}else{label=54;break;}
 case 52: 
 HEAP32[(($__sbuf__i11_i_i)>>2)]=0;
 label=53;break;
 case 53: 
 if($cmp_i_i_i124){var $__fmtb_addr_0_ph_be=$__fmtb_addr_2_lcssa;label=35;break;}else{var $61=0;label=55;break;}
 case 54: 
 var $cmp_i30_i_i147=($48|0)==0;
 var $lnot_i=$cmp_i_i_i124^$cmp_i30_i_i147;
 if($lnot_i){var $61=$48;label=55;break;}else{var $__fmtb_addr_0_ph_be=$__fmtb_addr_2_lcssa;label=35;break;}
 case 55: 
 var $61;
 var $__ninp__i_i=(($55+12)|0);
 var $62=HEAP32[(($__ninp__i_i)>>2)];
 var $__einp__i_i=(($55+16)|0);
 var $63=HEAP32[(($__einp__i_i)>>2)];
 var $cmp_i_i154=($62|0)==($63|0);
 if($cmp_i_i154){label=56;break;}else{label=57;break;}
 case 56: 
 var $64=$55;
 var $vtable_i_i=HEAP32[(($64)>>2)];
 var $vfn_i_i=(($vtable_i_i+36)|0);
 var $65=HEAP32[(($vfn_i_i)>>2)];
 var $call_i_i=FUNCTION_TABLE[$65]($55);
 var $retval_i_i_0=$call_i_i;label=58;break;
 case 57: 
 var $66=HEAP32[(($62)>>2)];
 var $retval_i_i_0=$66;label=58;break;
 case 58: 
 var $retval_i_i_0;
 var $vtable_i159=HEAP32[(($12)>>2)];
 var $vfn_i160=(($vtable_i159+12)|0);
 var $67=HEAP32[(($vfn_i160)>>2)];
 var $call_i161=FUNCTION_TABLE[$67]($8,8192,$retval_i_i_0);
 if($call_i161){label=59;break;}else{var $__fmtb_addr_0_ph_be=$__fmtb_addr_2_lcssa;label=35;break;}
 case 59: 
 var $68=HEAP32[(($__ninp__i_i)>>2)];
 var $69=HEAP32[(($__einp__i_i)>>2)];
 var $cmp_i_i171=($68|0)==($69|0);
 if($cmp_i_i171){label=60;break;}else{label=61;break;}
 case 60: 
 var $70=$55;
 var $vtable_i_i172=HEAP32[(($70)>>2)];
 var $vfn_i_i173=(($vtable_i_i172+40)|0);
 var $71=HEAP32[(($vfn_i_i173)>>2)];
 var $call_i_i174=FUNCTION_TABLE[$71]($55);
 var $49=$55;var $48=$61;label=41;break;
 case 61: 
 var $incdec_ptr_i_i=(($68+4)|0);
 HEAP32[(($__ninp__i_i)>>2)]=$incdec_ptr_i_i;
 var $49=$55;var $48=$61;label=41;break;
 case 62: 
 var $__ninp__i_i185=(($25+12)|0);
 var $72=HEAP32[(($__ninp__i_i185)>>2)];
 var $__einp__i_i186=(($25+16)|0);
 var $73=HEAP32[(($__einp__i_i186)>>2)];
 var $cmp_i_i187=($72|0)==($73|0);
 if($cmp_i_i187){label=63;break;}else{label=64;break;}
 case 63: 
 var $74=$25;
 var $vtable_i_i188=HEAP32[(($74)>>2)];
 var $vfn_i_i189=(($vtable_i_i188+36)|0);
 var $75=HEAP32[(($vfn_i_i189)>>2)];
 var $call_i_i190=FUNCTION_TABLE[$75]($25);
 var $retval_i_i179_0=$call_i_i190;label=65;break;
 case 64: 
 var $76=HEAP32[(($72)>>2)];
 var $retval_i_i179_0=$76;label=65;break;
 case 65: 
 var $retval_i_i179_0;
 var $vtable_i198=HEAP32[(($13)>>2)];
 var $vfn_i199=(($vtable_i198+28)|0);
 var $77=HEAP32[(($vfn_i199)>>2)];
 var $call_i200=FUNCTION_TABLE[$77]($8,$retval_i_i179_0);
 var $78=HEAP32[(($__fmtb_addr_0_ph55)>>2)];
 var $vtable_i204=HEAP32[(($13)>>2)];
 var $vfn_i205=(($vtable_i204+28)|0);
 var $79=HEAP32[(($vfn_i205)>>2)];
 var $call_i206=FUNCTION_TABLE[$79]($8,$78);
 var $cmp47=($call_i200|0)==($call_i206|0);
 if($cmp47){label=66;break;}else{label=70;break;}
 case 66: 
 var $80=HEAP32[(($__ninp__i_i185)>>2)];
 var $81=HEAP32[(($__einp__i_i186)>>2)];
 var $cmp_i_i216=($80|0)==($81|0);
 if($cmp_i_i216){label=67;break;}else{label=68;break;}
 case 67: 
 var $82=$25;
 var $vtable_i_i217=HEAP32[(($82)>>2)];
 var $vfn_i_i218=(($vtable_i_i217+40)|0);
 var $83=HEAP32[(($vfn_i_i218)>>2)];
 var $call_i_i219=FUNCTION_TABLE[$83]($25);
 label=69;break;
 case 68: 
 var $incdec_ptr_i_i222=(($80+4)|0);
 HEAP32[(($__ninp__i_i185)>>2)]=$incdec_ptr_i_i222;
 label=69;break;
 case 69: 
 var $incdec_ptr50=(($__fmtb_addr_0_ph55+4)|0);
 var $__fmtb_addr_0_ph_be=$incdec_ptr50;label=35;break;
 case 70: 
 HEAP32[(($__err)>>2)]=4;
 var $18=4;label=10;break;
 case 71: 
 var $_pre=HEAP32[(($__sbuf__i_i_i243_phi_trans_insert_pre_pre)>>2)];
 var $84=$_pre;label=72;break;
 case 72: 
 var $84;
 var $__sbuf__i_i_i243=(($__b)|0);
 var $tobool_i_i_i244=($84|0)==0;
 if($tobool_i_i_i244){label=78;break;}else{label=73;break;}
 case 73: 
 var $__ninp__i_i_i_i247=(($84+12)|0);
 var $85=HEAP32[(($__ninp__i_i_i_i247)>>2)];
 var $__einp__i_i_i_i248=(($84+16)|0);
 var $86=HEAP32[(($__einp__i_i_i_i248)>>2)];
 var $cmp_i_i_i_i249=($85|0)==($86|0);
 if($cmp_i_i_i_i249){label=74;break;}else{label=75;break;}
 case 74: 
 var $87=$84;
 var $vtable_i_i_i_i251=HEAP32[(($87)>>2)];
 var $vfn_i_i_i_i252=(($vtable_i_i_i_i251+36)|0);
 var $88=HEAP32[(($vfn_i_i_i_i252)>>2)];
 var $call_i_i_i_i253=FUNCTION_TABLE[$88]($84);
 var $retval_i_i_i_i234_0=$call_i_i_i_i253;label=76;break;
 case 75: 
 var $89=HEAP32[(($85)>>2)];
 var $retval_i_i_i_i234_0=$89;label=76;break;
 case 76: 
 var $retval_i_i_i_i234_0;
 var $cmp_i7_i_i_i257=($retval_i_i_i_i234_0|0)==-1;
 if($cmp_i7_i_i_i257){label=77;break;}else{label=78;break;}
 case 77: 
 HEAP32[(($__sbuf__i_i_i243)>>2)]=0;
 label=78;break;
 case 78: 
 var $90=HEAP32[(($__sbuf__i_i_i243)>>2)];
 var $cmp_i_i_i262=($90|0)==0;
 var $__sbuf__i11_i_i265=(($__e)|0);
 var $91=HEAP32[(($__sbuf__i11_i_i265)>>2)];
 var $tobool_i12_i_i266=($91|0)==0;
 if($tobool_i12_i_i266){label=84;break;}else{label=79;break;}
 case 79: 
 var $__ninp__i_i15_i_i270=(($91+12)|0);
 var $92=HEAP32[(($__ninp__i_i15_i_i270)>>2)];
 var $__einp__i_i16_i_i271=(($91+16)|0);
 var $93=HEAP32[(($__einp__i_i16_i_i271)>>2)];
 var $cmp_i_i17_i_i272=($92|0)==($93|0);
 if($cmp_i_i17_i_i272){label=80;break;}else{label=81;break;}
 case 80: 
 var $94=$91;
 var $vtable_i_i19_i_i274=HEAP32[(($94)>>2)];
 var $vfn_i_i20_i_i275=(($vtable_i_i19_i_i274+36)|0);
 var $95=HEAP32[(($vfn_i_i20_i_i275)>>2)];
 var $call_i_i21_i_i276=FUNCTION_TABLE[$95]($91);
 var $retval_i_i7_i_i228_0=$call_i_i21_i_i276;label=82;break;
 case 81: 
 var $96=HEAP32[(($92)>>2)];
 var $retval_i_i7_i_i228_0=$96;label=82;break;
 case 82: 
 var $retval_i_i7_i_i228_0;
 var $cmp_i7_i25_i_i280=($retval_i_i7_i_i228_0|0)==-1;
 if($cmp_i7_i25_i_i280){label=83;break;}else{label=85;break;}
 case 83: 
 HEAP32[(($__sbuf__i11_i_i265)>>2)]=0;
 label=84;break;
 case 84: 
 if($cmp_i_i_i262){label=86;break;}else{label=87;break;}
 case 85: 
 var $cmp_i30_i_i285=($91|0)==0;
 var $cmp_i_i287tmp=$cmp_i_i_i262^$cmp_i30_i_i285;
 if($cmp_i_i287tmp){label=87;break;}else{label=86;break;}
 case 86: 
 var $97=HEAP32[(($__err)>>2)];
 var $or=$97|2;
 HEAP32[(($__err)>>2)]=$or;
 label=87;break;
 case 87: 
 var $98=(($agg_result)|0);
 HEAP32[(($98)>>2)]=$90;
 STACKTOP=sp;return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this){
 var label=0;
 var $0=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($0);
 var $1=$this;
 __ZdlPv($1);
 return;
}
function __ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev($this){
 var label=0;
 var $0=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($0);
 return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv($this){
 var label=0;
 return 2;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm($agg_result,$this,$__b,$__e,$__iob,$__err,$__tm){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 var $agg_tmp=sp;
 var $agg_tmp2=(sp)+(8);
 var $0=(($__b)|0);
 var $1=HEAP32[(($0)>>2)];
 var $2=(($agg_tmp)|0);
 HEAP32[(($2)>>2)]=$1;
 var $3=(($__e)|0);
 var $4=HEAP32[(($3)>>2)];
 var $5=(($agg_tmp2)|0);
 HEAP32[(($5)>>2)]=$4;
 __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($agg_result,$this,$agg_tmp,$agg_tmp2,$__iob,$__err,$__tm,4056,4088);
 STACKTOP=sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm($agg_result,$this,$__b,$__e,$__iob,$__err,$__tm){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $agg_tmp=sp;
 var $agg_tmp2=(sp)+(8);
 var $add_ptr=(($this+8)|0);
 var $0=$add_ptr;
 var $vtable=HEAP32[(($0)>>2)];
 var $vfn=(($vtable+20)|0);
 var $1=HEAP32[(($vfn)>>2)];
 var $call=FUNCTION_TABLE[$1]($add_ptr);
 var $2=(($__b)|0);
 var $3=HEAP32[(($2)>>2)];
 var $4=(($agg_tmp)|0);
 HEAP32[(($4)>>2)]=$3;
 var $5=(($__e)|0);
 var $6=HEAP32[(($5)>>2)];
 var $7=(($agg_tmp2)|0);
 HEAP32[(($7)>>2)]=$6;
 var $__size__i_i_i=$call;
 var $8=HEAP8[($__size__i_i_i)];
 var $and_i_i_i=$8&1;
 var $tobool_i_i_i=(($and_i_i_i<<24)>>24)==0;
 if($tobool_i_i_i){label=3;break;}else{label=2;break;}
 case 2: 
 var $__data__i21_i_i=(($call+8)|0);
 var $9=HEAP32[(($__data__i21_i_i)>>2)];
 var $cond_i_i50=$9;var $cond_i_i4=$9;label=4;break;
 case 3: 
 var $__data__i_i_i=(($call+4)|0);
 var $__data__i_i_i47=(($call+4)|0);
 var $cond_i_i50=$__data__i_i_i47;var $cond_i_i4=$__data__i_i_i;label=4;break;
 case 4: 
 var $cond_i_i4;
 var $cond_i_i50;
 var $conv_i_i=($8&255);
 var $and_i_i=$conv_i_i&1;
 var $tobool_i_i=($and_i_i|0)==0;
 if($tobool_i_i){label=6;break;}else{label=5;break;}
 case 5: 
 var $__size__i23_i=(($call+4)|0);
 var $10=HEAP32[(($__size__i23_i)>>2)];
 var $cond_i=$10;label=7;break;
 case 6: 
 var $shr_i_i3=$conv_i_i>>>1;
 var $cond_i=$shr_i_i3;label=7;break;
 case 7: 
 var $cond_i;
 var $add_ptr6=(($cond_i_i50+($cond_i<<2))|0);
 __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($agg_result,$this,$agg_tmp,$agg_tmp2,$__iob,$__err,$__tm,$cond_i_i4,$add_ptr6);
 STACKTOP=sp;return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm($agg_result,$this,$__b,$__e,$__iob,$__err,$__tm){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+32)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $agg_tmp_i=sp;
 var $__p_i_i_i=(sp)+(8);
 var $ref_tmp=(sp)+(24);
 __ZNKSt3__18ios_base6getlocEv($ref_tmp,$__iob);
 var $__locale__i=(($ref_tmp)|0);
 var $0=HEAP32[(($__locale__i)>>2)];
 var $1=$__p_i_i_i;
 var $2=HEAP32[((15376)>>2)];
 var $cmp_i_i_i=($2|0)==-1;
 if($cmp_i_i_i){label=3;break;}else{label=2;break;}
 case 2: 
 var $ref_tmp_i_sroa_0_0__idx_i_i=(($__p_i_i_i)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i)>>2)]=15376;
 var $ref_tmp_i_sroa_1_4__idx6_i_i=(($__p_i_i_i+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i=(($__p_i_i_i+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(15376,$1,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=3;break; } else { label=10;break; }
 case 3: 
 var $3=HEAP32[((15380)>>2)];
 var $sub_i_i=((($3)-(1))|0);
 var $__end__i_i_i_i=(($0+12)|0);
 var $4=HEAP32[(($__end__i_i_i_i)>>2)];
 var $__begin__i_i_i_i=(($0+8)|0);
 var $5=HEAP32[(($__begin__i_i_i_i)>>2)];
 var $sub_ptr_lhs_cast_i_i_i_i=$4;
 var $sub_ptr_rhs_cast_i_i_i_i=$5;
 var $sub_ptr_sub_i_i_i_i=((($sub_ptr_lhs_cast_i_i_i_i)-($sub_ptr_rhs_cast_i_i_i_i))|0);
 var $sub_ptr_div_i_i_i_i=$sub_ptr_sub_i_i_i_i>>2;
 var $cmp_i_i1_i=($sub_ptr_div_i_i_i_i>>>0)>($sub_i_i>>>0);
 if($cmp_i_i1_i){label=4;break;}else{label=5;break;}
 case 4: 
 var $arrayidx_i_i_i_i=(($5+($sub_i_i<<2))|0);
 var $6=HEAP32[(($arrayidx_i_i_i_i)>>2)];
 var $tobool_i_i_i=($6|0)==0;
 if($tobool_i_i_i){label=5;break;}else{label=7;break;}
 case 5: 
 var $exception_i_i=___cxa_allocate_exception(4);
 var $7=$exception_i_i;
 __ZNSt8bad_castC2Ev($7);
 (function() { try { __THREW__ = 0; return ___cxa_throw($exception_i_i,10264,(376)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=6;break; } else { label=10;break; }
 case 6: 
 throw "Reached an unreachable!";
 case 7: 
 var $8=$6;
 var $9=HEAP32[(($__locale__i)>>2)];
 var $10=(($9)|0);
 var $call_i=__ZNSt3__114__shared_count16__release_sharedEv($10);
 var $11=(($__e)|0);
 var $12=HEAP32[(($11)>>2)];
 var $13=$agg_tmp_i;
 var $add_ptr_i=(($this+8)|0);
 var $14=$add_ptr_i;
 var $vtable_i=HEAP32[(($14)>>2)];
 var $15=HEAP32[(($vtable_i)>>2)];
 var $call_i5=FUNCTION_TABLE[$15]($add_ptr_i);
 var $16=(($agg_tmp_i)|0);
 HEAP32[(($16)>>2)]=$12;
 var $add_ptr2_i=(($call_i5+168)|0);
 var $call3_i=__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$agg_tmp_i,$call_i5,$add_ptr2_i,$8,$__err,0);
 var $sub_ptr_lhs_cast_i=$call3_i;
 var $sub_ptr_rhs_cast_i=$call_i5;
 var $sub_ptr_sub_i=((($sub_ptr_lhs_cast_i)-($sub_ptr_rhs_cast_i))|0);
 var $cmp_i=($sub_ptr_sub_i|0)<168;
 if($cmp_i){label=8;break;}else{label=9;break;}
 case 8: 
 var $tm_wday=(($__tm+24)|0);
 var $sub_ptr_div_i=(((($sub_ptr_sub_i|0))/(12))&-1);
 var $rem_i=(((($sub_ptr_div_i|0))%(7))&-1);
 HEAP32[(($tm_wday)>>2)]=$rem_i;
 label=9;break;
 case 9: 
 var $17=(($__b)|0);
 var $18=HEAP32[(($17)>>2)];
 var $19=(($agg_result)|0);
 HEAP32[(($19)>>2)]=$18;
 STACKTOP=sp;return;
 case 10: 
 var $20$0 = ___cxa_find_matching_catch(-1, -1); var $20$1 = tempRet0;
 var $21=HEAP32[(($__locale__i)>>2)];
 var $22=(($21)|0);
 var $call_i7=__ZNSt3__114__shared_count16__release_sharedEv($22);
 ___resumeException($20$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm($agg_result,$this,$__b,$__e,$__iob,$__err,$__tm){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+32)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $agg_tmp_i=sp;
 var $__p_i_i_i=(sp)+(8);
 var $ref_tmp=(sp)+(24);
 __ZNKSt3__18ios_base6getlocEv($ref_tmp,$__iob);
 var $__locale__i=(($ref_tmp)|0);
 var $0=HEAP32[(($__locale__i)>>2)];
 var $1=$__p_i_i_i;
 var $2=HEAP32[((15376)>>2)];
 var $cmp_i_i_i=($2|0)==-1;
 if($cmp_i_i_i){label=3;break;}else{label=2;break;}
 case 2: 
 var $ref_tmp_i_sroa_0_0__idx_i_i=(($__p_i_i_i)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i)>>2)]=15376;
 var $ref_tmp_i_sroa_1_4__idx6_i_i=(($__p_i_i_i+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i=(($__p_i_i_i+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(15376,$1,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=3;break; } else { label=10;break; }
 case 3: 
 var $3=HEAP32[((15380)>>2)];
 var $sub_i_i=((($3)-(1))|0);
 var $__end__i_i_i_i=(($0+12)|0);
 var $4=HEAP32[(($__end__i_i_i_i)>>2)];
 var $__begin__i_i_i_i=(($0+8)|0);
 var $5=HEAP32[(($__begin__i_i_i_i)>>2)];
 var $sub_ptr_lhs_cast_i_i_i_i=$4;
 var $sub_ptr_rhs_cast_i_i_i_i=$5;
 var $sub_ptr_sub_i_i_i_i=((($sub_ptr_lhs_cast_i_i_i_i)-($sub_ptr_rhs_cast_i_i_i_i))|0);
 var $sub_ptr_div_i_i_i_i=$sub_ptr_sub_i_i_i_i>>2;
 var $cmp_i_i1_i=($sub_ptr_div_i_i_i_i>>>0)>($sub_i_i>>>0);
 if($cmp_i_i1_i){label=4;break;}else{label=5;break;}
 case 4: 
 var $arrayidx_i_i_i_i=(($5+($sub_i_i<<2))|0);
 var $6=HEAP32[(($arrayidx_i_i_i_i)>>2)];
 var $tobool_i_i_i=($6|0)==0;
 if($tobool_i_i_i){label=5;break;}else{label=7;break;}
 case 5: 
 var $exception_i_i=___cxa_allocate_exception(4);
 var $7=$exception_i_i;
 __ZNSt8bad_castC2Ev($7);
 (function() { try { __THREW__ = 0; return ___cxa_throw($exception_i_i,10264,(376)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=6;break; } else { label=10;break; }
 case 6: 
 throw "Reached an unreachable!";
 case 7: 
 var $8=$6;
 var $9=HEAP32[(($__locale__i)>>2)];
 var $10=(($9)|0);
 var $call_i=__ZNSt3__114__shared_count16__release_sharedEv($10);
 var $11=(($__e)|0);
 var $12=HEAP32[(($11)>>2)];
 var $13=$agg_tmp_i;
 var $add_ptr_i=(($this+8)|0);
 var $14=$add_ptr_i;
 var $vtable_i=HEAP32[(($14)>>2)];
 var $vfn_i=(($vtable_i+4)|0);
 var $15=HEAP32[(($vfn_i)>>2)];
 var $call_i5=FUNCTION_TABLE[$15]($add_ptr_i);
 var $16=(($agg_tmp_i)|0);
 HEAP32[(($16)>>2)]=$12;
 var $add_ptr2_i=(($call_i5+288)|0);
 var $call3_i=__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$agg_tmp_i,$call_i5,$add_ptr2_i,$8,$__err,0);
 var $sub_ptr_lhs_cast_i=$call3_i;
 var $sub_ptr_rhs_cast_i=$call_i5;
 var $sub_ptr_sub_i=((($sub_ptr_lhs_cast_i)-($sub_ptr_rhs_cast_i))|0);
 var $cmp_i=($sub_ptr_sub_i|0)<288;
 if($cmp_i){label=8;break;}else{label=9;break;}
 case 8: 
 var $tm_mon=(($__tm+16)|0);
 var $sub_ptr_div_i=(((($sub_ptr_sub_i|0))/(12))&-1);
 var $rem_i=(((($sub_ptr_div_i|0))%(12))&-1);
 HEAP32[(($tm_mon)>>2)]=$rem_i;
 label=9;break;
 case 9: 
 var $17=(($__b)|0);
 var $18=HEAP32[(($17)>>2)];
 var $19=(($agg_result)|0);
 HEAP32[(($19)>>2)]=$18;
 STACKTOP=sp;return;
 case 10: 
 var $20$0 = ___cxa_find_matching_catch(-1, -1); var $20$1 = tempRet0;
 var $21=HEAP32[(($__locale__i)>>2)];
 var $22=(($21)|0);
 var $call_i7=__ZNSt3__114__shared_count16__release_sharedEv($22);
 ___resumeException($20$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm($agg_result,$this,$__b,$__e,$__iob,$__err,$__tm){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+32)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $agg_tmp_i=sp;
 var $__p_i_i_i=(sp)+(8);
 var $ref_tmp=(sp)+(24);
 __ZNKSt3__18ios_base6getlocEv($ref_tmp,$__iob);
 var $__locale__i=(($ref_tmp)|0);
 var $0=HEAP32[(($__locale__i)>>2)];
 var $1=$__p_i_i_i;
 var $2=HEAP32[((15376)>>2)];
 var $cmp_i_i_i=($2|0)==-1;
 if($cmp_i_i_i){label=3;break;}else{label=2;break;}
 case 2: 
 var $ref_tmp_i_sroa_0_0__idx_i_i=(($__p_i_i_i)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i)>>2)]=15376;
 var $ref_tmp_i_sroa_1_4__idx6_i_i=(($__p_i_i_i+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i=(($__p_i_i_i+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(15376,$1,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=3;break; } else { label=13;break; }
 case 3: 
 var $3=HEAP32[((15380)>>2)];
 var $sub_i_i=((($3)-(1))|0);
 var $__end__i_i_i_i=(($0+12)|0);
 var $4=HEAP32[(($__end__i_i_i_i)>>2)];
 var $__begin__i_i_i_i=(($0+8)|0);
 var $5=HEAP32[(($__begin__i_i_i_i)>>2)];
 var $sub_ptr_lhs_cast_i_i_i_i=$4;
 var $sub_ptr_rhs_cast_i_i_i_i=$5;
 var $sub_ptr_sub_i_i_i_i=((($sub_ptr_lhs_cast_i_i_i_i)-($sub_ptr_rhs_cast_i_i_i_i))|0);
 var $sub_ptr_div_i_i_i_i=$sub_ptr_sub_i_i_i_i>>2;
 var $cmp_i_i1_i=($sub_ptr_div_i_i_i_i>>>0)>($sub_i_i>>>0);
 if($cmp_i_i1_i){label=4;break;}else{label=5;break;}
 case 4: 
 var $arrayidx_i_i_i_i=(($5+($sub_i_i<<2))|0);
 var $6=HEAP32[(($arrayidx_i_i_i_i)>>2)];
 var $tobool_i_i_i=($6|0)==0;
 if($tobool_i_i_i){label=5;break;}else{label=7;break;}
 case 5: 
 var $exception_i_i=___cxa_allocate_exception(4);
 var $7=$exception_i_i;
 __ZNSt8bad_castC2Ev($7);
 (function() { try { __THREW__ = 0; return ___cxa_throw($exception_i_i,10264,(376)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=6;break; } else { label=13;break; }
 case 6: 
 throw "Reached an unreachable!";
 case 7: 
 var $8=$6;
 var $9=HEAP32[(($__locale__i)>>2)];
 var $10=(($9)|0);
 var $call_i=__ZNSt3__114__shared_count16__release_sharedEv($10);
 var $tm_year=(($__tm+20)|0);
 var $11=(($__e)|0);
 var $12=HEAP32[(($11)>>2)];
 var $13=$agg_tmp_i;
 var $14=(($agg_tmp_i)|0);
 HEAP32[(($14)>>2)]=$12;
 var $call_i5=__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$agg_tmp_i,$__err,$8,4);
 var $15=HEAP32[(($__err)>>2)];
 var $and_i=$15&4;
 var $tobool_i=($and_i|0)==0;
 if($tobool_i){label=8;break;}else{label=12;break;}
 case 8: 
 var $cmp_i=($call_i5|0)<69;
 if($cmp_i){label=9;break;}else{label=10;break;}
 case 9: 
 var $add_i=((($call_i5)+(2000))|0);
 var $__t_0_i=$add_i;label=11;break;
 case 10: 
 var $call_off_i=((($call_i5)-(69))|0);
 var $16=($call_off_i>>>0)<31;
 var $add6_i=((($call_i5)+(1900))|0);
 var $add6_call_i=($16?$add6_i:$call_i5);
 var $__t_0_i=$add6_call_i;label=11;break;
 case 11: 
 var $__t_0_i;
 var $sub_i=((($__t_0_i)-(1900))|0);
 HEAP32[(($tm_year)>>2)]=$sub_i;
 label=12;break;
 case 12: 
 var $17=(($__b)|0);
 var $18=HEAP32[(($17)>>2)];
 var $19=(($agg_result)|0);
 HEAP32[(($19)>>2)]=$18;
 STACKTOP=sp;return;
 case 13: 
 var $20$0 = ___cxa_find_matching_catch(-1, -1); var $20$1 = tempRet0;
 var $21=HEAP32[(($__locale__i)>>2)];
 var $22=(($21)|0);
 var $call_i7=__ZNSt3__114__shared_count16__release_sharedEv($22);
 ___resumeException($20$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc($agg_result,$this,$__b,$__e,$__iob,$__err,$__tm,$__fmt,$0){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+328)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $agg_tmp_i201=sp;
 var $agg_tmp_i189=(sp)+(8);
 var $agg_tmp_i177=(sp)+(16);
 var $agg_tmp_i165=(sp)+(24);
 var $agg_tmp_i153=(sp)+(32);
 var $agg_tmp_i141=(sp)+(40);
 var $agg_tmp_i129=(sp)+(48);
 var $agg_tmp_i117=(sp)+(56);
 var $agg_tmp_i106=(sp)+(64);
 var $agg_tmp_i100=(sp)+(72);
 var $agg_tmp_i84=(sp)+(80);
 var $agg_tmp_i=(sp)+(88);
 var $__p_i_i_i=(sp)+(96);
 var $ref_tmp=(sp)+(112);
 var $ref_tmp6=(sp)+(120);
 var $agg_tmp7=(sp)+(128);
 var $agg_tmp8=(sp)+(136);
 var $ref_tmp16=(sp)+(144);
 var $agg_tmp17=(sp)+(152);
 var $agg_tmp18=(sp)+(160);
 var $ref_tmp20=(sp)+(168);
 var $agg_tmp21=(sp)+(176);
 var $agg_tmp22=(sp)+(184);
 var $agg_tmp36=(sp)+(192);
 var $agg_tmp39=(sp)+(200);
 var $ref_tmp41=(sp)+(208);
 var $agg_tmp42=(sp)+(216);
 var $agg_tmp43=(sp)+(224);
 var $ref_tmp45=(sp)+(232);
 var $agg_tmp46=(sp)+(240);
 var $agg_tmp47=(sp)+(248);
 var $ref_tmp51=(sp)+(256);
 var $agg_tmp52=(sp)+(264);
 var $agg_tmp53=(sp)+(272);
 var $agg_tmp60=(sp)+(280);
 var $agg_tmp61=(sp)+(288);
 var $ref_tmp68=(sp)+(296);
 var $agg_tmp69=(sp)+(304);
 var $agg_tmp70=(sp)+(312);
 var $agg_tmp81=(sp)+(320);
 HEAP32[(($__err)>>2)]=0;
 __ZNKSt3__18ios_base6getlocEv($ref_tmp,$__iob);
 var $__locale__i=(($ref_tmp)|0);
 var $1=HEAP32[(($__locale__i)>>2)];
 var $2=$__p_i_i_i;
 var $3=HEAP32[((15376)>>2)];
 var $cmp_i_i_i=($3|0)==-1;
 if($cmp_i_i_i){label=3;break;}else{label=2;break;}
 case 2: 
 var $ref_tmp_i_sroa_0_0__idx_i_i=(($__p_i_i_i)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i)>>2)]=15376;
 var $ref_tmp_i_sroa_1_4__idx6_i_i=(($__p_i_i_i+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i=(($__p_i_i_i+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(15376,$2,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=3;break; } else { label=8;break; }
 case 3: 
 var $4=HEAP32[((15380)>>2)];
 var $sub_i_i=((($4)-(1))|0);
 var $__end__i_i_i_i=(($1+12)|0);
 var $5=HEAP32[(($__end__i_i_i_i)>>2)];
 var $__begin__i_i_i_i=(($1+8)|0);
 var $6=HEAP32[(($__begin__i_i_i_i)>>2)];
 var $sub_ptr_lhs_cast_i_i_i_i=$5;
 var $sub_ptr_rhs_cast_i_i_i_i=$6;
 var $sub_ptr_sub_i_i_i_i=((($sub_ptr_lhs_cast_i_i_i_i)-($sub_ptr_rhs_cast_i_i_i_i))|0);
 var $sub_ptr_div_i_i_i_i=$sub_ptr_sub_i_i_i_i>>2;
 var $cmp_i_i1_i=($sub_ptr_div_i_i_i_i>>>0)>($sub_i_i>>>0);
 if($cmp_i_i1_i){label=4;break;}else{label=5;break;}
 case 4: 
 var $arrayidx_i_i_i_i=(($6+($sub_i_i<<2))|0);
 var $7=HEAP32[(($arrayidx_i_i_i_i)>>2)];
 var $tobool_i_i_i73=($7|0)==0;
 if($tobool_i_i_i73){label=5;break;}else{label=7;break;}
 case 5: 
 var $exception_i_i=___cxa_allocate_exception(4);
 var $8=$exception_i_i;
 __ZNSt8bad_castC2Ev($8);
 (function() { try { __THREW__ = 0; return ___cxa_throw($exception_i_i,10264,(376)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=6;break; } else { label=8;break; }
 case 6: 
 throw "Reached an unreachable!";
 case 7: 
 var $9=$7;
 var $10=HEAP32[(($__locale__i)>>2)];
 var $11=(($10)|0);
 var $call_i=__ZNSt3__114__shared_count16__release_sharedEv($11);
 var $conv=(($__fmt<<24)>>24);
 switch(($conv|0)){case 98:case 66:case 104:{ label=11;break;}case 99:{ label=13;break;}case 100:case 101:{ label=20;break;}case 68:{ label=24;break;}case 70:{ label=25;break;}case 72:{ label=26;break;}case 73:{ label=29;break;}case 106:{ label=33;break;}case 109:{ label=36;break;}case 77:{ label=39;break;}case 110:case 116:{ label=42;break;}case 112:{ label=43;break;}case 114:{ label=44;break;}case 82:{ label=45;break;}case 83:{ label=46;break;}case 84:{ label=49;break;}case 119:{ label=50;break;}case 120:{ label=53;break;}case 88:{ label=54;break;}case 121:{ label=61;break;}case 89:{ label=66;break;}case 37:{ label=68;break;}case 97:case 65:{ label=9;break;}default:{label=69;break;}}break;
 case 8: 
 var $12$0 = ___cxa_find_matching_catch(-1, -1); var $12$1 = tempRet0;
 var $13=HEAP32[(($__locale__i)>>2)];
 var $14=(($13)|0);
 var $call_i77=__ZNSt3__114__shared_count16__release_sharedEv($14);
 ___resumeException($12$0)
 case 9: 
 var $15=(($__e)|0);
 var $16=HEAP32[(($15)>>2)];
 var $17=$agg_tmp_i;
 var $add_ptr_i=(($this+8)|0);
 var $18=$add_ptr_i;
 var $vtable_i=HEAP32[(($18)>>2)];
 var $19=HEAP32[(($vtable_i)>>2)];
 var $call_i80=FUNCTION_TABLE[$19]($add_ptr_i);
 var $20=(($agg_tmp_i)|0);
 HEAP32[(($20)>>2)]=$16;
 var $add_ptr2_i=(($call_i80+168)|0);
 var $call3_i=__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$agg_tmp_i,$call_i80,$add_ptr2_i,$9,$__err,0);
 var $sub_ptr_lhs_cast_i=$call3_i;
 var $sub_ptr_rhs_cast_i=$call_i80;
 var $sub_ptr_sub_i=((($sub_ptr_lhs_cast_i)-($sub_ptr_rhs_cast_i))|0);
 var $cmp_i=($sub_ptr_sub_i|0)<168;
 if($cmp_i){label=10;break;}else{label=70;break;}
 case 10: 
 var $tm_wday=(($__tm+24)|0);
 var $sub_ptr_div_i=(((($sub_ptr_sub_i|0))/(12))&-1);
 var $rem_i=(((($sub_ptr_div_i|0))%(7))&-1);
 HEAP32[(($tm_wday)>>2)]=$rem_i;
 label=70;break;
 case 11: 
 var $21=(($__e)|0);
 var $22=HEAP32[(($21)>>2)];
 var $23=$agg_tmp_i84;
 var $add_ptr_i85=(($this+8)|0);
 var $24=$add_ptr_i85;
 var $vtable_i86=HEAP32[(($24)>>2)];
 var $vfn_i=(($vtable_i86+4)|0);
 var $25=HEAP32[(($vfn_i)>>2)];
 var $call_i87=FUNCTION_TABLE[$25]($add_ptr_i85);
 var $26=(($agg_tmp_i84)|0);
 HEAP32[(($26)>>2)]=$22;
 var $add_ptr2_i88=(($call_i87+288)|0);
 var $call3_i89=__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$agg_tmp_i84,$call_i87,$add_ptr2_i88,$9,$__err,0);
 var $sub_ptr_lhs_cast_i90=$call3_i89;
 var $sub_ptr_rhs_cast_i91=$call_i87;
 var $sub_ptr_sub_i92=((($sub_ptr_lhs_cast_i90)-($sub_ptr_rhs_cast_i91))|0);
 var $cmp_i93=($sub_ptr_sub_i92|0)<288;
 if($cmp_i93){label=12;break;}else{label=70;break;}
 case 12: 
 var $tm_mon=(($__tm+16)|0);
 var $sub_ptr_div_i94=(((($sub_ptr_sub_i92|0))/(12))&-1);
 var $rem_i95=(((($sub_ptr_div_i94|0))%(12))&-1);
 HEAP32[(($tm_mon)>>2)]=$rem_i95;
 label=70;break;
 case 13: 
 var $add_ptr=(($this+8)|0);
 var $27=$add_ptr;
 var $vtable=HEAP32[(($27)>>2)];
 var $vfn=(($vtable+12)|0);
 var $28=HEAP32[(($vfn)>>2)];
 var $call5=FUNCTION_TABLE[$28]($add_ptr);
 var $29=(($__b)|0);
 var $30=HEAP32[(($29)>>2)];
 var $31=(($agg_tmp7)|0);
 HEAP32[(($31)>>2)]=$30;
 var $32=(($__e)|0);
 var $33=HEAP32[(($32)>>2)];
 var $34=(($agg_tmp8)|0);
 HEAP32[(($34)>>2)]=$33;
 var $__size__i_i_i=$call5;
 var $35=HEAP8[($__size__i_i_i)];
 var $and_i_i_i=$35&1;
 var $tobool_i_i_i=(($and_i_i_i<<24)>>24)==0;
 if($tobool_i_i_i){label=15;break;}else{label=14;break;}
 case 14: 
 var $__data__i21_i_i=(($call5+8)|0);
 var $36=HEAP32[(($__data__i21_i_i)>>2)];
 var $cond_i_i127=$36;var $cond_i_i207=$36;label=16;break;
 case 15: 
 var $__data__i_i_i=(($call5+4)|0);
 var $__data__i_i_i124=(($call5+4)|0);
 var $cond_i_i127=$__data__i_i_i124;var $cond_i_i207=$__data__i_i_i;label=16;break;
 case 16: 
 var $cond_i_i207;
 var $cond_i_i127;
 var $conv_i_i=($35&255);
 var $and_i_i=$conv_i_i&1;
 var $tobool_i_i=($and_i_i|0)==0;
 if($tobool_i_i){label=18;break;}else{label=17;break;}
 case 17: 
 var $__size__i23_i=(($call5+4)|0);
 var $37=HEAP32[(($__size__i23_i)>>2)];
 var $cond_i=$37;label=19;break;
 case 18: 
 var $shr_i_i72=$conv_i_i>>>1;
 var $cond_i=$shr_i_i72;label=19;break;
 case 19: 
 var $cond_i;
 var $add_ptr12=(($cond_i_i127+($cond_i<<2))|0);
 __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($ref_tmp6,$this,$agg_tmp7,$agg_tmp8,$__iob,$__err,$__tm,$cond_i_i207,$add_ptr12);
 var $38=(($ref_tmp6)|0);
 var $39=HEAP32[(($38)>>2)];
 HEAP32[(($29)>>2)]=$39;
 label=70;break;
 case 20: 
 var $tm_mday=(($__tm+12)|0);
 var $40=(($__e)|0);
 var $41=HEAP32[(($40)>>2)];
 var $42=$agg_tmp_i100;
 var $43=(($agg_tmp_i100)|0);
 HEAP32[(($43)>>2)]=$41;
 var $call_i101=__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$agg_tmp_i100,$__err,$9,2);
 var $44=HEAP32[(($__err)>>2)];
 var $and_i=$44&4;
 var $tobool_i=($and_i|0)==0;
 if($tobool_i){label=21;break;}else{label=23;break;}
 case 21: 
 var $call_off_i=((($call_i101)-(1))|0);
 var $45=($call_off_i>>>0)<31;
 if($45){label=22;break;}else{label=23;break;}
 case 22: 
 HEAP32[(($tm_mday)>>2)]=$call_i101;
 label=70;break;
 case 23: 
 var $or_i=$44|4;
 HEAP32[(($__err)>>2)]=$or_i;
 label=70;break;
 case 24: 
 var $46=(($__b)|0);
 var $47=HEAP32[(($46)>>2)];
 var $48=(($agg_tmp17)|0);
 HEAP32[(($48)>>2)]=$47;
 var $49=(($__e)|0);
 var $50=HEAP32[(($49)>>2)];
 var $51=(($agg_tmp18)|0);
 HEAP32[(($51)>>2)]=$50;
 __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($ref_tmp16,$this,$agg_tmp17,$agg_tmp18,$__iob,$__err,$__tm,4024,4056);
 var $52=(($ref_tmp16)|0);
 var $53=HEAP32[(($52)>>2)];
 HEAP32[(($46)>>2)]=$53;
 label=70;break;
 case 25: 
 var $54=(($__b)|0);
 var $55=HEAP32[(($54)>>2)];
 var $56=(($agg_tmp21)|0);
 HEAP32[(($56)>>2)]=$55;
 var $57=(($__e)|0);
 var $58=HEAP32[(($57)>>2)];
 var $59=(($agg_tmp22)|0);
 HEAP32[(($59)>>2)]=$58;
 __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($ref_tmp20,$this,$agg_tmp21,$agg_tmp22,$__iob,$__err,$__tm,3888,3920);
 var $60=(($ref_tmp20)|0);
 var $61=HEAP32[(($60)>>2)];
 HEAP32[(($54)>>2)]=$61;
 label=70;break;
 case 26: 
 var $62=(($__e)|0);
 var $63=HEAP32[(($62)>>2)];
 var $64=$agg_tmp_i106;
 var $65=(($agg_tmp_i106)|0);
 HEAP32[(($65)>>2)]=$63;
 var $call_i107=__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$agg_tmp_i106,$__err,$9,2);
 var $66=HEAP32[(($__err)>>2)];
 var $and_i108=$66&4;
 var $tobool_i109=($and_i108|0)==0;
 var $cmp_i110=($call_i107|0)<24;
 var $or_cond_i=$tobool_i109&$cmp_i110;
 if($or_cond_i){label=27;break;}else{label=28;break;}
 case 27: 
 var $tm_hour=(($__tm+8)|0);
 HEAP32[(($tm_hour)>>2)]=$call_i107;
 label=70;break;
 case 28: 
 var $or_i112=$66|4;
 HEAP32[(($__err)>>2)]=$or_i112;
 label=70;break;
 case 29: 
 var $tm_hour26=(($__tm+8)|0);
 var $67=(($__e)|0);
 var $68=HEAP32[(($67)>>2)];
 var $69=$agg_tmp_i117;
 var $70=(($agg_tmp_i117)|0);
 HEAP32[(($70)>>2)]=$68;
 var $call_i118=__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$agg_tmp_i117,$__err,$9,2);
 var $71=HEAP32[(($__err)>>2)];
 var $and_i119=$71&4;
 var $tobool_i120=($and_i119|0)==0;
 if($tobool_i120){label=30;break;}else{label=32;break;}
 case 30: 
 var $call_off_i121=((($call_i118)-(1))|0);
 var $72=($call_off_i121>>>0)<12;
 if($72){label=31;break;}else{label=32;break;}
 case 31: 
 HEAP32[(($tm_hour26)>>2)]=$call_i118;
 label=70;break;
 case 32: 
 var $or_i124=$71|4;
 HEAP32[(($__err)>>2)]=$or_i124;
 label=70;break;
 case 33: 
 var $73=(($__e)|0);
 var $74=HEAP32[(($73)>>2)];
 var $75=$agg_tmp_i129;
 var $76=(($agg_tmp_i129)|0);
 HEAP32[(($76)>>2)]=$74;
 var $call_i130=__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$agg_tmp_i129,$__err,$9,3);
 var $77=HEAP32[(($__err)>>2)];
 var $and_i131=$77&4;
 var $tobool_i132=($and_i131|0)==0;
 var $cmp_i133=($call_i130|0)<366;
 var $or_cond_i134=$tobool_i132&$cmp_i133;
 if($or_cond_i134){label=34;break;}else{label=35;break;}
 case 34: 
 var $tm_yday=(($__tm+28)|0);
 HEAP32[(($tm_yday)>>2)]=$call_i130;
 label=70;break;
 case 35: 
 var $or_i136=$77|4;
 HEAP32[(($__err)>>2)]=$or_i136;
 label=70;break;
 case 36: 
 var $78=(($__e)|0);
 var $79=HEAP32[(($78)>>2)];
 var $80=$agg_tmp_i141;
 var $81=(($agg_tmp_i141)|0);
 HEAP32[(($81)>>2)]=$79;
 var $call_i142=__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$agg_tmp_i141,$__err,$9,2);
 var $sub_i=((($call_i142)-(1))|0);
 var $82=HEAP32[(($__err)>>2)];
 var $and_i143=$82&4;
 var $tobool_i144=($and_i143|0)==0;
 var $cmp_i145=($sub_i|0)<12;
 var $or_cond_i146=$tobool_i144&$cmp_i145;
 if($or_cond_i146){label=37;break;}else{label=38;break;}
 case 37: 
 var $tm_mon31=(($__tm+16)|0);
 HEAP32[(($tm_mon31)>>2)]=$sub_i;
 label=70;break;
 case 38: 
 var $or_i148=$82|4;
 HEAP32[(($__err)>>2)]=$or_i148;
 label=70;break;
 case 39: 
 var $83=(($__e)|0);
 var $84=HEAP32[(($83)>>2)];
 var $85=$agg_tmp_i153;
 var $86=(($agg_tmp_i153)|0);
 HEAP32[(($86)>>2)]=$84;
 var $call_i154=__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$agg_tmp_i153,$__err,$9,2);
 var $87=HEAP32[(($__err)>>2)];
 var $and_i155=$87&4;
 var $tobool_i156=($and_i155|0)==0;
 var $cmp_i157=($call_i154|0)<60;
 var $or_cond_i158=$tobool_i156&$cmp_i157;
 if($or_cond_i158){label=40;break;}else{label=41;break;}
 case 40: 
 var $tm_min=(($__tm+4)|0);
 HEAP32[(($tm_min)>>2)]=$call_i154;
 label=70;break;
 case 41: 
 var $or_i160=$87|4;
 HEAP32[(($__err)>>2)]=$or_i160;
 label=70;break;
 case 42: 
 var $88=(($__e)|0);
 var $89=HEAP32[(($88)>>2)];
 var $90=(($agg_tmp36)|0);
 HEAP32[(($90)>>2)]=$89;
 __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE(0,$__b,$agg_tmp36,$__err,$9);
 label=70;break;
 case 43: 
 var $tm_hour38=(($__tm+8)|0);
 var $91=(($__e)|0);
 var $92=HEAP32[(($91)>>2)];
 var $93=(($agg_tmp39)|0);
 HEAP32[(($93)>>2)]=$92;
 __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE($this,$tm_hour38,$__b,$agg_tmp39,$__err,$9);
 label=70;break;
 case 44: 
 var $94=(($__b)|0);
 var $95=HEAP32[(($94)>>2)];
 var $96=(($agg_tmp42)|0);
 HEAP32[(($96)>>2)]=$95;
 var $97=(($__e)|0);
 var $98=HEAP32[(($97)>>2)];
 var $99=(($agg_tmp43)|0);
 HEAP32[(($99)>>2)]=$98;
 __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($ref_tmp41,$this,$agg_tmp42,$agg_tmp43,$__iob,$__err,$__tm,3976,4020);
 var $100=(($ref_tmp41)|0);
 var $101=HEAP32[(($100)>>2)];
 HEAP32[(($94)>>2)]=$101;
 label=70;break;
 case 45: 
 var $102=(($__b)|0);
 var $103=HEAP32[(($102)>>2)];
 var $104=(($agg_tmp46)|0);
 HEAP32[(($104)>>2)]=$103;
 var $105=(($__e)|0);
 var $106=HEAP32[(($105)>>2)];
 var $107=(($agg_tmp47)|0);
 HEAP32[(($107)>>2)]=$106;
 __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($ref_tmp45,$this,$agg_tmp46,$agg_tmp47,$__iob,$__err,$__tm,3952,3972);
 var $108=(($ref_tmp45)|0);
 var $109=HEAP32[(($108)>>2)];
 HEAP32[(($102)>>2)]=$109;
 label=70;break;
 case 46: 
 var $110=(($__e)|0);
 var $111=HEAP32[(($110)>>2)];
 var $112=$agg_tmp_i165;
 var $113=(($agg_tmp_i165)|0);
 HEAP32[(($113)>>2)]=$111;
 var $call_i166=__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$agg_tmp_i165,$__err,$9,2);
 var $114=HEAP32[(($__err)>>2)];
 var $and_i167=$114&4;
 var $tobool_i168=($and_i167|0)==0;
 var $cmp_i169=($call_i166|0)<61;
 var $or_cond_i170=$tobool_i168&$cmp_i169;
 if($or_cond_i170){label=47;break;}else{label=48;break;}
 case 47: 
 var $tm_sec=(($__tm)|0);
 HEAP32[(($tm_sec)>>2)]=$call_i166;
 label=70;break;
 case 48: 
 var $or_i172=$114|4;
 HEAP32[(($__err)>>2)]=$or_i172;
 label=70;break;
 case 49: 
 var $115=(($__b)|0);
 var $116=HEAP32[(($115)>>2)];
 var $117=(($agg_tmp52)|0);
 HEAP32[(($117)>>2)]=$116;
 var $118=(($__e)|0);
 var $119=HEAP32[(($118)>>2)];
 var $120=(($agg_tmp53)|0);
 HEAP32[(($120)>>2)]=$119;
 __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($ref_tmp51,$this,$agg_tmp52,$agg_tmp53,$__iob,$__err,$__tm,3920,3952);
 var $121=(($ref_tmp51)|0);
 var $122=HEAP32[(($121)>>2)];
 HEAP32[(($115)>>2)]=$122;
 label=70;break;
 case 50: 
 var $123=(($__e)|0);
 var $124=HEAP32[(($123)>>2)];
 var $125=$agg_tmp_i177;
 var $126=(($agg_tmp_i177)|0);
 HEAP32[(($126)>>2)]=$124;
 var $call_i178=__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$agg_tmp_i177,$__err,$9,1);
 var $127=HEAP32[(($__err)>>2)];
 var $and_i179=$127&4;
 var $tobool_i180=($and_i179|0)==0;
 var $cmp_i181=($call_i178|0)<7;
 var $or_cond_i182=$tobool_i180&$cmp_i181;
 if($or_cond_i182){label=51;break;}else{label=52;break;}
 case 51: 
 var $tm_wday55=(($__tm+24)|0);
 HEAP32[(($tm_wday55)>>2)]=$call_i178;
 label=70;break;
 case 52: 
 var $or_i184=$127|4;
 HEAP32[(($__err)>>2)]=$or_i184;
 label=70;break;
 case 53: 
 var $128=$this;
 var $vtable58=HEAP32[(($128)>>2)];
 var $vfn59=(($vtable58+20)|0);
 var $129=HEAP32[(($vfn59)>>2)];
 var $130=(($__b)|0);
 var $131=HEAP32[(($130)>>2)];
 var $132=(($agg_tmp60)|0);
 HEAP32[(($132)>>2)]=$131;
 var $133=(($__e)|0);
 var $134=HEAP32[(($133)>>2)];
 var $135=(($agg_tmp61)|0);
 HEAP32[(($135)>>2)]=$134;
 FUNCTION_TABLE[$129]($agg_result,$this,$agg_tmp60,$agg_tmp61,$__iob,$__err,$__tm);
 label=71;break;
 case 54: 
 var $add_ptr64=(($this+8)|0);
 var $136=$add_ptr64;
 var $vtable65=HEAP32[(($136)>>2)];
 var $vfn66=(($vtable65+24)|0);
 var $137=HEAP32[(($vfn66)>>2)];
 var $call67=FUNCTION_TABLE[$137]($add_ptr64);
 var $138=(($__b)|0);
 var $139=HEAP32[(($138)>>2)];
 var $140=(($agg_tmp69)|0);
 HEAP32[(($140)>>2)]=$139;
 var $141=(($__e)|0);
 var $142=HEAP32[(($141)>>2)];
 var $143=(($agg_tmp70)|0);
 HEAP32[(($143)>>2)]=$142;
 var $__size__i_i_i159=$call67;
 var $144=HEAP8[($__size__i_i_i159)];
 var $and_i_i_i161=$144&1;
 var $tobool_i_i_i162=(($and_i_i_i161<<24)>>24)==0;
 if($tobool_i_i_i162){label=56;break;}else{label=55;break;}
 case 55: 
 var $__data__i21_i_i169=(($call67+8)|0);
 var $145=HEAP32[(($__data__i21_i_i169)>>2)];
 var $cond_i_i225=$145;var $cond_i_i180209=$145;label=57;break;
 case 56: 
 var $__data__i_i_i177=(($call67+4)|0);
 var $__data__i_i_i222=(($call67+4)|0);
 var $cond_i_i225=$__data__i_i_i222;var $cond_i_i180209=$__data__i_i_i177;label=57;break;
 case 57: 
 var $cond_i_i180209;
 var $cond_i_i225;
 var $conv_i_i245=($144&255);
 var $and_i_i246=$conv_i_i245&1;
 var $tobool_i_i247=($and_i_i246|0)==0;
 if($tobool_i_i247){label=59;break;}else{label=58;break;}
 case 58: 
 var $__size__i23_i254=(($call67+4)|0);
 var $146=HEAP32[(($__size__i23_i254)>>2)];
 var $cond_i266=$146;label=60;break;
 case 59: 
 var $shr_i_i26471=$conv_i_i245>>>1;
 var $cond_i266=$shr_i_i26471;label=60;break;
 case 60: 
 var $cond_i266;
 var $add_ptr74=(($cond_i_i225+($cond_i266<<2))|0);
 __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($ref_tmp68,$this,$agg_tmp69,$agg_tmp70,$__iob,$__err,$__tm,$cond_i_i180209,$add_ptr74);
 var $147=(($ref_tmp68)|0);
 var $148=HEAP32[(($147)>>2)];
 HEAP32[(($138)>>2)]=$148;
 label=70;break;
 case 61: 
 var $tm_year=(($__tm+20)|0);
 var $149=(($__e)|0);
 var $150=HEAP32[(($149)>>2)];
 var $151=$agg_tmp_i189;
 var $152=(($agg_tmp_i189)|0);
 HEAP32[(($152)>>2)]=$150;
 var $call_i190=__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$agg_tmp_i189,$__err,$9,4);
 var $153=HEAP32[(($__err)>>2)];
 var $and_i191=$153&4;
 var $tobool_i192=($and_i191|0)==0;
 if($tobool_i192){label=62;break;}else{label=70;break;}
 case 62: 
 var $cmp_i193=($call_i190|0)<69;
 if($cmp_i193){label=63;break;}else{label=64;break;}
 case 63: 
 var $add_i=((($call_i190)+(2000))|0);
 var $__t_0_i=$add_i;label=65;break;
 case 64: 
 var $call_off_i195=((($call_i190)-(69))|0);
 var $154=($call_off_i195>>>0)<31;
 var $add6_i=((($call_i190)+(1900))|0);
 var $add6_call_i=($154?$add6_i:$call_i190);
 var $__t_0_i=$add6_call_i;label=65;break;
 case 65: 
 var $__t_0_i;
 var $sub_i197=((($__t_0_i)-(1900))|0);
 HEAP32[(($tm_year)>>2)]=$sub_i197;
 label=70;break;
 case 66: 
 var $155=(($__e)|0);
 var $156=HEAP32[(($155)>>2)];
 var $157=$agg_tmp_i201;
 var $158=(($agg_tmp_i201)|0);
 HEAP32[(($158)>>2)]=$156;
 var $call_i202=__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$agg_tmp_i201,$__err,$9,4);
 var $159=HEAP32[(($__err)>>2)];
 var $and_i203=$159&4;
 var $tobool_i204=($and_i203|0)==0;
 if($tobool_i204){label=67;break;}else{label=70;break;}
 case 67: 
 var $tm_year78=(($__tm+20)|0);
 var $sub_i205=((($call_i202)-(1900))|0);
 HEAP32[(($tm_year78)>>2)]=$sub_i205;
 label=70;break;
 case 68: 
 var $160=(($__e)|0);
 var $161=HEAP32[(($160)>>2)];
 var $162=(($agg_tmp81)|0);
 HEAP32[(($162)>>2)]=$161;
 __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE(0,$__b,$agg_tmp81,$__err,$9);
 label=70;break;
 case 69: 
 var $163=HEAP32[(($__err)>>2)];
 var $or=$163|4;
 HEAP32[(($__err)>>2)]=$or;
 label=70;break;
 case 70: 
 var $164=(($__b)|0);
 var $165=HEAP32[(($164)>>2)];
 var $166=(($agg_result)|0);
 HEAP32[(($166)>>2)]=$165;
 label=71;break;
 case 71: 
 STACKTOP=sp;return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE($this,$__b,$__e,$__err,$__ct){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__sbuf__i_i_i=(($__b)|0);
 var $__sbuf__i11_i_i=(($__e)|0);
 var $0=$__ct;
 label=2;break;
 case 2: 
 var $1=HEAP32[(($__sbuf__i_i_i)>>2)];
 var $tobool_i_i_i=($1|0)==0;
 if($tobool_i_i_i){var $7=1;label=9;break;}else{label=3;break;}
 case 3: 
 var $__ninp__i_i_i_i=(($1+12)|0);
 var $2=HEAP32[(($__ninp__i_i_i_i)>>2)];
 var $__einp__i_i_i_i=(($1+16)|0);
 var $3=HEAP32[(($__einp__i_i_i_i)>>2)];
 var $cmp_i_i_i_i=($2|0)==($3|0);
 if($cmp_i_i_i_i){label=4;break;}else{label=5;break;}
 case 4: 
 var $4=$1;
 var $vtable_i_i_i_i=HEAP32[(($4)>>2)];
 var $vfn_i_i_i_i=(($vtable_i_i_i_i+36)|0);
 var $5=HEAP32[(($vfn_i_i_i_i)>>2)];
 var $call_i_i_i_i=FUNCTION_TABLE[$5]($1);
 var $retval_i_i_i_i_0=$call_i_i_i_i;label=6;break;
 case 5: 
 var $6=HEAP32[(($2)>>2)];
 var $retval_i_i_i_i_0=$6;label=6;break;
 case 6: 
 var $retval_i_i_i_i_0;
 var $cmp_i7_i_i_i=($retval_i_i_i_i_0|0)==-1;
 if($cmp_i7_i_i_i){label=8;break;}else{label=7;break;}
 case 7: 
 var $_pre=HEAP32[(($__sbuf__i_i_i)>>2)];
 var $phitmp=($_pre|0)==0;
 var $7=$phitmp;label=9;break;
 case 8: 
 HEAP32[(($__sbuf__i_i_i)>>2)]=0;
 var $7=1;label=9;break;
 case 9: 
 var $7;
 var $8=HEAP32[(($__sbuf__i11_i_i)>>2)];
 var $tobool_i12_i_i=($8|0)==0;
 if($tobool_i12_i_i){label=15;break;}else{label=10;break;}
 case 10: 
 var $__ninp__i_i15_i_i=(($8+12)|0);
 var $9=HEAP32[(($__ninp__i_i15_i_i)>>2)];
 var $__einp__i_i16_i_i=(($8+16)|0);
 var $10=HEAP32[(($__einp__i_i16_i_i)>>2)];
 var $cmp_i_i17_i_i=($9|0)==($10|0);
 if($cmp_i_i17_i_i){label=11;break;}else{label=12;break;}
 case 11: 
 var $11=$8;
 var $vtable_i_i19_i_i=HEAP32[(($11)>>2)];
 var $vfn_i_i20_i_i=(($vtable_i_i19_i_i+36)|0);
 var $12=HEAP32[(($vfn_i_i20_i_i)>>2)];
 var $call_i_i21_i_i=FUNCTION_TABLE[$12]($8);
 var $retval_i_i7_i_i_0=$call_i_i21_i_i;label=13;break;
 case 12: 
 var $13=HEAP32[(($9)>>2)];
 var $retval_i_i7_i_i_0=$13;label=13;break;
 case 13: 
 var $retval_i_i7_i_i_0;
 var $cmp_i7_i25_i_i=($retval_i_i7_i_i_0|0)==-1;
 if($cmp_i7_i25_i_i){label=14;break;}else{label=16;break;}
 case 14: 
 HEAP32[(($__sbuf__i11_i_i)>>2)]=0;
 label=15;break;
 case 15: 
 if($7){var $27=0;var $cmp_i30_i_i7=1;label=24;break;}else{var $14=0;var $cmp_i30_i_i9=1;label=17;break;}
 case 16: 
 var $cmp_i30_i_i=($8|0)==0;
 var $lnot_i=$7^$cmp_i30_i_i;
 if($lnot_i){var $14=$8;var $cmp_i30_i_i9=$cmp_i30_i_i;label=17;break;}else{var $27=$8;var $cmp_i30_i_i7=$cmp_i30_i_i;label=24;break;}
 case 17: 
 var $cmp_i30_i_i9;
 var $14;
 var $15=HEAP32[(($__sbuf__i_i_i)>>2)];
 var $__ninp__i_i=(($15+12)|0);
 var $16=HEAP32[(($__ninp__i_i)>>2)];
 var $__einp__i_i=(($15+16)|0);
 var $17=HEAP32[(($__einp__i_i)>>2)];
 var $cmp_i_i8=($16|0)==($17|0);
 if($cmp_i_i8){label=18;break;}else{label=19;break;}
 case 18: 
 var $18=$15;
 var $vtable_i_i=HEAP32[(($18)>>2)];
 var $vfn_i_i=(($vtable_i_i+36)|0);
 var $19=HEAP32[(($vfn_i_i)>>2)];
 var $call_i_i=FUNCTION_TABLE[$19]($15);
 var $retval_i_i_0=$call_i_i;label=20;break;
 case 19: 
 var $20=HEAP32[(($16)>>2)];
 var $retval_i_i_0=$20;label=20;break;
 case 20: 
 var $retval_i_i_0;
 var $vtable_i=HEAP32[(($0)>>2)];
 var $vfn_i=(($vtable_i+12)|0);
 var $21=HEAP32[(($vfn_i)>>2)];
 var $call_i=FUNCTION_TABLE[$21]($__ct,8192,$retval_i_i_0);
 if($call_i){label=21;break;}else{var $27=$14;var $cmp_i30_i_i7=$cmp_i30_i_i9;label=24;break;}
 case 21: 
 var $22=HEAP32[(($__sbuf__i_i_i)>>2)];
 var $__ninp__i_i18=(($22+12)|0);
 var $23=HEAP32[(($__ninp__i_i18)>>2)];
 var $__einp__i_i19=(($22+16)|0);
 var $24=HEAP32[(($__einp__i_i19)>>2)];
 var $cmp_i_i20=($23|0)==($24|0);
 if($cmp_i_i20){label=22;break;}else{label=23;break;}
 case 22: 
 var $25=$22;
 var $vtable_i_i21=HEAP32[(($25)>>2)];
 var $vfn_i_i22=(($vtable_i_i21+40)|0);
 var $26=HEAP32[(($vfn_i_i22)>>2)];
 var $call_i_i23=FUNCTION_TABLE[$26]($22);
 label=2;break;
 case 23: 
 var $incdec_ptr_i_i=(($23+4)|0);
 HEAP32[(($__ninp__i_i18)>>2)]=$incdec_ptr_i_i;
 label=2;break;
 case 24: 
 var $cmp_i30_i_i7;
 var $27;
 var $28=HEAP32[(($__sbuf__i_i_i)>>2)];
 var $tobool_i_i_i46=($28|0)==0;
 if($tobool_i_i_i46){var $34=1;label=31;break;}else{label=25;break;}
 case 25: 
 var $__ninp__i_i_i_i49=(($28+12)|0);
 var $29=HEAP32[(($__ninp__i_i_i_i49)>>2)];
 var $__einp__i_i_i_i50=(($28+16)|0);
 var $30=HEAP32[(($__einp__i_i_i_i50)>>2)];
 var $cmp_i_i_i_i51=($29|0)==($30|0);
 if($cmp_i_i_i_i51){label=26;break;}else{label=27;break;}
 case 26: 
 var $31=$28;
 var $vtable_i_i_i_i53=HEAP32[(($31)>>2)];
 var $vfn_i_i_i_i54=(($vtable_i_i_i_i53+36)|0);
 var $32=HEAP32[(($vfn_i_i_i_i54)>>2)];
 var $call_i_i_i_i55=FUNCTION_TABLE[$32]($28);
 var $retval_i_i_i_i36_0=$call_i_i_i_i55;label=28;break;
 case 27: 
 var $33=HEAP32[(($29)>>2)];
 var $retval_i_i_i_i36_0=$33;label=28;break;
 case 28: 
 var $retval_i_i_i_i36_0;
 var $cmp_i7_i_i_i59=($retval_i_i_i_i36_0|0)==-1;
 if($cmp_i7_i_i_i59){label=30;break;}else{label=29;break;}
 case 29: 
 var $_pre4=HEAP32[(($__sbuf__i_i_i)>>2)];
 var $phitmp5=($_pre4|0)==0;
 var $34=$phitmp5;label=31;break;
 case 30: 
 HEAP32[(($__sbuf__i_i_i)>>2)]=0;
 var $34=1;label=31;break;
 case 31: 
 var $34;
 if($cmp_i30_i_i7){label=37;break;}else{label=32;break;}
 case 32: 
 var $__ninp__i_i15_i_i72=(($27+12)|0);
 var $35=HEAP32[(($__ninp__i_i15_i_i72)>>2)];
 var $__einp__i_i16_i_i73=(($27+16)|0);
 var $36=HEAP32[(($__einp__i_i16_i_i73)>>2)];
 var $cmp_i_i17_i_i74=($35|0)==($36|0);
 if($cmp_i_i17_i_i74){label=33;break;}else{label=34;break;}
 case 33: 
 var $37=$27;
 var $vtable_i_i19_i_i76=HEAP32[(($37)>>2)];
 var $vfn_i_i20_i_i77=(($vtable_i_i19_i_i76+36)|0);
 var $38=HEAP32[(($vfn_i_i20_i_i77)>>2)];
 var $call_i_i21_i_i78=FUNCTION_TABLE[$38]($27);
 var $retval_i_i7_i_i30_0=$call_i_i21_i_i78;label=35;break;
 case 34: 
 var $39=HEAP32[(($35)>>2)];
 var $retval_i_i7_i_i30_0=$39;label=35;break;
 case 35: 
 var $retval_i_i7_i_i30_0;
 var $cmp_i7_i25_i_i82=($retval_i_i7_i_i30_0|0)==-1;
 if($cmp_i7_i25_i_i82){label=36;break;}else{label=38;break;}
 case 36: 
 HEAP32[(($__sbuf__i11_i_i)>>2)]=0;
 label=37;break;
 case 37: 
 if($34){label=39;break;}else{label=40;break;}
 case 38: 
 var $cmp_i30_i_i87=($27|0)==0;
 var $cmp_i_i89tmp=$34^$cmp_i30_i_i87;
 if($cmp_i_i89tmp){label=40;break;}else{label=39;break;}
 case 39: 
 var $40=HEAP32[(($__err)>>2)];
 var $or=$40|2;
 HEAP32[(($__err)>>2)]=$or;
 label=40;break;
 case 40: 
 STACKTOP=sp;return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__h,$__b,$__e,$__err,$__ct){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $agg_tmp=sp;
 var $add_ptr=(($this+8)|0);
 var $0=$add_ptr;
 var $vtable=HEAP32[(($0)>>2)];
 var $vfn=(($vtable+8)|0);
 var $1=HEAP32[(($vfn)>>2)];
 var $call=FUNCTION_TABLE[$1]($add_ptr);
 var $__size__i_i=$call;
 var $2=HEAP8[($__size__i_i)];
 var $conv_i_i=($2&255);
 var $and_i_i=$conv_i_i&1;
 var $tobool_i_i=($and_i_i|0)==0;
 if($tobool_i_i){label=3;break;}else{label=2;break;}
 case 2: 
 var $__size__i23_i=(($call+4)|0);
 var $3=HEAP32[(($__size__i23_i)>>2)];
 var $cond_i=$3;label=4;break;
 case 3: 
 var $shr_i_i10=$conv_i_i>>>1;
 var $cond_i=$shr_i_i10;label=4;break;
 case 4: 
 var $cond_i;
 var $4=(($call+12)|0);
 var $__size__i_i34=$4;
 var $5=HEAP8[($__size__i_i34)];
 var $conv_i_i35=($5&255);
 var $and_i_i36=$conv_i_i35&1;
 var $tobool_i_i37=($and_i_i36|0)==0;
 if($tobool_i_i37){label=6;break;}else{label=5;break;}
 case 5: 
 var $__size__i23_i44=(($call+16)|0);
 var $6=HEAP32[(($__size__i23_i44)>>2)];
 var $cond_i56=$6;label=7;break;
 case 6: 
 var $shr_i_i5411=$conv_i_i35>>>1;
 var $cond_i56=$shr_i_i5411;label=7;break;
 case 7: 
 var $cond_i56;
 var $add=(((-$cond_i56))|0);
 var $cmp=($cond_i|0)==($add|0);
 if($cmp){label=8;break;}else{label=9;break;}
 case 8: 
 var $7=HEAP32[(($__err)>>2)];
 var $or=$7|4;
 HEAP32[(($__err)>>2)]=$or;
 label=15;break;
 case 9: 
 var $8=(($__e)|0);
 var $9=HEAP32[(($8)>>2)];
 var $10=(($agg_tmp)|0);
 HEAP32[(($10)>>2)]=$9;
 var $add_ptr5=(($call+24)|0);
 var $call6=__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$agg_tmp,$call,$add_ptr5,$__ct,$__err,0);
 var $sub_ptr_lhs_cast=$call6;
 var $sub_ptr_rhs_cast=$call;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $11=($call6|0)==($call|0);
 if($11){label=10;break;}else{label=12;break;}
 case 10: 
 var $12=HEAP32[(($__h)>>2)];
 var $cmp8=($12|0)==12;
 if($cmp8){label=11;break;}else{label=12;break;}
 case 11: 
 HEAP32[(($__h)>>2)]=0;
 label=15;break;
 case 12: 
 var $13=($sub_ptr_sub|0)==12;
 if($13){label=13;break;}else{label=15;break;}
 case 13: 
 var $14=HEAP32[(($__h)>>2)];
 var $cmp12=($14|0)<12;
 if($cmp12){label=14;break;}else{label=15;break;}
 case 14: 
 var $add14=((($14)+(12))|0);
 HEAP32[(($__h)>>2)]=$add14;
 label=15;break;
 case 15: 
 STACKTOP=sp;return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE($this,$__b,$__e,$__err,$__ct){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__sbuf__i_i_i=(($__b)|0);
 var $0=HEAP32[(($__sbuf__i_i_i)>>2)];
 var $tobool_i_i_i=($0|0)==0;
 if($tobool_i_i_i){var $6=1;label=8;break;}else{label=2;break;}
 case 2: 
 var $__ninp__i_i_i_i=(($0+12)|0);
 var $1=HEAP32[(($__ninp__i_i_i_i)>>2)];
 var $__einp__i_i_i_i=(($0+16)|0);
 var $2=HEAP32[(($__einp__i_i_i_i)>>2)];
 var $cmp_i_i_i_i=($1|0)==($2|0);
 if($cmp_i_i_i_i){label=3;break;}else{label=4;break;}
 case 3: 
 var $3=$0;
 var $vtable_i_i_i_i=HEAP32[(($3)>>2)];
 var $vfn_i_i_i_i=(($vtable_i_i_i_i+36)|0);
 var $4=HEAP32[(($vfn_i_i_i_i)>>2)];
 var $call_i_i_i_i=FUNCTION_TABLE[$4]($0);
 var $retval_i_i_i_i_0=$call_i_i_i_i;label=5;break;
 case 4: 
 var $5=HEAP32[(($1)>>2)];
 var $retval_i_i_i_i_0=$5;label=5;break;
 case 5: 
 var $retval_i_i_i_i_0;
 var $cmp_i7_i_i_i=($retval_i_i_i_i_0|0)==-1;
 if($cmp_i7_i_i_i){label=7;break;}else{label=6;break;}
 case 6: 
 var $_pre=HEAP32[(($__sbuf__i_i_i)>>2)];
 var $phitmp=($_pre|0)==0;
 var $6=$phitmp;label=8;break;
 case 7: 
 HEAP32[(($__sbuf__i_i_i)>>2)]=0;
 var $6=1;label=8;break;
 case 8: 
 var $6;
 var $__sbuf__i11_i_i=(($__e)|0);
 var $7=HEAP32[(($__sbuf__i11_i_i)>>2)];
 var $tobool_i12_i_i=($7|0)==0;
 if($tobool_i12_i_i){label=14;break;}else{label=9;break;}
 case 9: 
 var $__ninp__i_i15_i_i=(($7+12)|0);
 var $8=HEAP32[(($__ninp__i_i15_i_i)>>2)];
 var $__einp__i_i16_i_i=(($7+16)|0);
 var $9=HEAP32[(($__einp__i_i16_i_i)>>2)];
 var $cmp_i_i17_i_i=($8|0)==($9|0);
 if($cmp_i_i17_i_i){label=10;break;}else{label=11;break;}
 case 10: 
 var $10=$7;
 var $vtable_i_i19_i_i=HEAP32[(($10)>>2)];
 var $vfn_i_i20_i_i=(($vtable_i_i19_i_i+36)|0);
 var $11=HEAP32[(($vfn_i_i20_i_i)>>2)];
 var $call_i_i21_i_i=FUNCTION_TABLE[$11]($7);
 var $retval_i_i7_i_i_0=$call_i_i21_i_i;label=12;break;
 case 11: 
 var $12=HEAP32[(($8)>>2)];
 var $retval_i_i7_i_i_0=$12;label=12;break;
 case 12: 
 var $retval_i_i7_i_i_0;
 var $cmp_i7_i25_i_i=($retval_i_i7_i_i_0|0)==-1;
 if($cmp_i7_i25_i_i){label=13;break;}else{label=15;break;}
 case 13: 
 HEAP32[(($__sbuf__i11_i_i)>>2)]=0;
 label=14;break;
 case 14: 
 if($6){label=16;break;}else{var $14=0;var $cmp_i30_i_i8=1;label=17;break;}
 case 15: 
 var $cmp_i30_i_i=($7|0)==0;
 var $cmp_i_itmp=$6^$cmp_i30_i_i;
 if($cmp_i_itmp){var $14=$7;var $cmp_i30_i_i8=$cmp_i30_i_i;label=17;break;}else{label=16;break;}
 case 16: 
 var $13=HEAP32[(($__err)>>2)];
 var $or=$13|6;
 HEAP32[(($__err)>>2)]=$or;
 label=41;break;
 case 17: 
 var $cmp_i30_i_i8;
 var $14;
 var $15=HEAP32[(($__sbuf__i_i_i)>>2)];
 var $__ninp__i_i=(($15+12)|0);
 var $16=HEAP32[(($__ninp__i_i)>>2)];
 var $__einp__i_i=(($15+16)|0);
 var $17=HEAP32[(($__einp__i_i)>>2)];
 var $cmp_i_i14=($16|0)==($17|0);
 if($cmp_i_i14){label=18;break;}else{label=19;break;}
 case 18: 
 var $18=$15;
 var $vtable_i_i=HEAP32[(($18)>>2)];
 var $vfn_i_i=(($vtable_i_i+36)|0);
 var $19=HEAP32[(($vfn_i_i)>>2)];
 var $call_i_i=FUNCTION_TABLE[$19]($15);
 var $retval_i_i_0=$call_i_i;label=20;break;
 case 19: 
 var $20=HEAP32[(($16)>>2)];
 var $retval_i_i_0=$20;label=20;break;
 case 20: 
 var $retval_i_i_0;
 var $21=$__ct;
 var $vtable_i=HEAP32[(($21)>>2)];
 var $vfn_i=(($vtable_i+52)|0);
 var $22=HEAP32[(($vfn_i)>>2)];
 var $call_i=FUNCTION_TABLE[$22]($__ct,$retval_i_i_0,0);
 var $cmp=(($call_i<<24)>>24)==37;
 if($cmp){label=22;break;}else{label=21;break;}
 case 21: 
 var $23=HEAP32[(($__err)>>2)];
 var $or5=$23|4;
 HEAP32[(($__err)>>2)]=$or5;
 label=41;break;
 case 22: 
 var $24=HEAP32[(($__sbuf__i_i_i)>>2)];
 var $__ninp__i_i24=(($24+12)|0);
 var $25=HEAP32[(($__ninp__i_i24)>>2)];
 var $__einp__i_i25=(($24+16)|0);
 var $26=HEAP32[(($__einp__i_i25)>>2)];
 var $cmp_i_i26=($25|0)==($26|0);
 if($cmp_i_i26){label=23;break;}else{label=24;break;}
 case 23: 
 var $27=$24;
 var $vtable_i_i27=HEAP32[(($27)>>2)];
 var $vfn_i_i28=(($vtable_i_i27+40)|0);
 var $28=HEAP32[(($vfn_i_i28)>>2)];
 var $call_i_i29=FUNCTION_TABLE[$28]($24);
 label=25;break;
 case 24: 
 var $incdec_ptr_i_i=(($25+4)|0);
 HEAP32[(($__ninp__i_i24)>>2)]=$incdec_ptr_i_i;
 label=25;break;
 case 25: 
 var $29=HEAP32[(($__sbuf__i_i_i)>>2)];
 var $tobool_i_i_i52=($29|0)==0;
 if($tobool_i_i_i52){var $35=1;label=32;break;}else{label=26;break;}
 case 26: 
 var $__ninp__i_i_i_i55=(($29+12)|0);
 var $30=HEAP32[(($__ninp__i_i_i_i55)>>2)];
 var $__einp__i_i_i_i56=(($29+16)|0);
 var $31=HEAP32[(($__einp__i_i_i_i56)>>2)];
 var $cmp_i_i_i_i57=($30|0)==($31|0);
 if($cmp_i_i_i_i57){label=27;break;}else{label=28;break;}
 case 27: 
 var $32=$29;
 var $vtable_i_i_i_i59=HEAP32[(($32)>>2)];
 var $vfn_i_i_i_i60=(($vtable_i_i_i_i59+36)|0);
 var $33=HEAP32[(($vfn_i_i_i_i60)>>2)];
 var $call_i_i_i_i61=FUNCTION_TABLE[$33]($29);
 var $retval_i_i_i_i42_0=$call_i_i_i_i61;label=29;break;
 case 28: 
 var $34=HEAP32[(($30)>>2)];
 var $retval_i_i_i_i42_0=$34;label=29;break;
 case 29: 
 var $retval_i_i_i_i42_0;
 var $cmp_i7_i_i_i65=($retval_i_i_i_i42_0|0)==-1;
 if($cmp_i7_i_i_i65){label=31;break;}else{label=30;break;}
 case 30: 
 var $_pre5=HEAP32[(($__sbuf__i_i_i)>>2)];
 var $phitmp6=($_pre5|0)==0;
 var $35=$phitmp6;label=32;break;
 case 31: 
 HEAP32[(($__sbuf__i_i_i)>>2)]=0;
 var $35=1;label=32;break;
 case 32: 
 var $35;
 if($cmp_i30_i_i8){label=38;break;}else{label=33;break;}
 case 33: 
 var $__ninp__i_i15_i_i78=(($14+12)|0);
 var $36=HEAP32[(($__ninp__i_i15_i_i78)>>2)];
 var $__einp__i_i16_i_i79=(($14+16)|0);
 var $37=HEAP32[(($__einp__i_i16_i_i79)>>2)];
 var $cmp_i_i17_i_i80=($36|0)==($37|0);
 if($cmp_i_i17_i_i80){label=34;break;}else{label=35;break;}
 case 34: 
 var $38=$14;
 var $vtable_i_i19_i_i82=HEAP32[(($38)>>2)];
 var $vfn_i_i20_i_i83=(($vtable_i_i19_i_i82+36)|0);
 var $39=HEAP32[(($vfn_i_i20_i_i83)>>2)];
 var $call_i_i21_i_i84=FUNCTION_TABLE[$39]($14);
 var $retval_i_i7_i_i36_0=$call_i_i21_i_i84;label=36;break;
 case 35: 
 var $40=HEAP32[(($36)>>2)];
 var $retval_i_i7_i_i36_0=$40;label=36;break;
 case 36: 
 var $retval_i_i7_i_i36_0;
 var $cmp_i7_i25_i_i88=($retval_i_i7_i_i36_0|0)==-1;
 if($cmp_i7_i25_i_i88){label=37;break;}else{label=39;break;}
 case 37: 
 HEAP32[(($__sbuf__i11_i_i)>>2)]=0;
 label=38;break;
 case 38: 
 if($35){label=40;break;}else{label=41;break;}
 case 39: 
 var $cmp_i30_i_i93=($14|0)==0;
 var $cmp_i_i95tmp=$35^$cmp_i30_i_i93;
 if($cmp_i_i95tmp){label=41;break;}else{label=40;break;}
 case 40: 
 var $41=HEAP32[(($__err)>>2)];
 var $or9=$41|2;
 HEAP32[(($__err)>>2)]=$or9;
 label=41;break;
 case 41: 
 STACKTOP=sp;return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$__e,$__err,$__ct,$__n){
 var label=0;
 var sp=STACKTOP; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__sbuf__i_i_i=(($__b)|0);
 var $0=HEAP32[(($__sbuf__i_i_i)>>2)];
 var $tobool_i_i_i=($0|0)==0;
 if($tobool_i_i_i){var $6=1;label=8;break;}else{label=2;break;}
 case 2: 
 var $__ninp__i_i_i_i=(($0+12)|0);
 var $1=HEAP32[(($__ninp__i_i_i_i)>>2)];
 var $__einp__i_i_i_i=(($0+16)|0);
 var $2=HEAP32[(($__einp__i_i_i_i)>>2)];
 var $cmp_i_i_i_i=($1|0)==($2|0);
 if($cmp_i_i_i_i){label=3;break;}else{label=4;break;}
 case 3: 
 var $3=$0;
 var $vtable_i_i_i_i=HEAP32[(($3)>>2)];
 var $vfn_i_i_i_i=(($vtable_i_i_i_i+36)|0);
 var $4=HEAP32[(($vfn_i_i_i_i)>>2)];
 var $call_i_i_i_i=FUNCTION_TABLE[$4]($0);
 var $retval_i_i_i_i_0=$call_i_i_i_i;label=5;break;
 case 4: 
 var $5=HEAP32[(($1)>>2)];
 var $retval_i_i_i_i_0=$5;label=5;break;
 case 5: 
 var $retval_i_i_i_i_0;
 var $cmp_i7_i_i_i=($retval_i_i_i_i_0|0)==-1;
 if($cmp_i7_i_i_i){label=7;break;}else{label=6;break;}
 case 6: 
 var $_pre=HEAP32[(($__sbuf__i_i_i)>>2)];
 var $phitmp=($_pre|0)==0;
 var $6=$phitmp;label=8;break;
 case 7: 
 HEAP32[(($__sbuf__i_i_i)>>2)]=0;
 var $6=1;label=8;break;
 case 8: 
 var $6;
 var $__sbuf__i11_i_i=(($__e)|0);
 var $7=HEAP32[(($__sbuf__i11_i_i)>>2)];
 var $tobool_i12_i_i=($7|0)==0;
 if($tobool_i12_i_i){label=14;break;}else{label=9;break;}
 case 9: 
 var $__ninp__i_i15_i_i=(($7+12)|0);
 var $8=HEAP32[(($__ninp__i_i15_i_i)>>2)];
 var $__einp__i_i16_i_i=(($7+16)|0);
 var $9=HEAP32[(($__einp__i_i16_i_i)>>2)];
 var $cmp_i_i17_i_i=($8|0)==($9|0);
 if($cmp_i_i17_i_i){label=10;break;}else{label=11;break;}
 case 10: 
 var $10=$7;
 var $vtable_i_i19_i_i=HEAP32[(($10)>>2)];
 var $vfn_i_i20_i_i=(($vtable_i_i19_i_i+36)|0);
 var $11=HEAP32[(($vfn_i_i20_i_i)>>2)];
 var $call_i_i21_i_i=FUNCTION_TABLE[$11]($7);
 var $retval_i_i7_i_i_0=$call_i_i21_i_i;label=12;break;
 case 11: 
 var $12=HEAP32[(($8)>>2)];
 var $retval_i_i7_i_i_0=$12;label=12;break;
 case 12: 
 var $retval_i_i7_i_i_0;
 var $cmp_i7_i25_i_i=($retval_i_i7_i_i_0|0)==-1;
 if($cmp_i7_i25_i_i){label=13;break;}else{label=15;break;}
 case 13: 
 HEAP32[(($__sbuf__i11_i_i)>>2)]=0;
 label=14;break;
 case 14: 
 if($6){label=16;break;}else{var $14=0;label=17;break;}
 case 15: 
 var $cmp_i30_i_i=($7|0)==0;
 var $cmp_i_itmp=$6^$cmp_i30_i_i;
 if($cmp_i_itmp){var $14=$7;label=17;break;}else{label=16;break;}
 case 16: 
 var $13=HEAP32[(($__err)>>2)];
 var $or=$13|6;
 HEAP32[(($__err)>>2)]=$or;
 var $retval_0=0;label=63;break;
 case 17: 
 var $14;
 var $15=HEAP32[(($__sbuf__i_i_i)>>2)];
 var $__ninp__i_i=(($15+12)|0);
 var $16=HEAP32[(($__ninp__i_i)>>2)];
 var $__einp__i_i=(($15+16)|0);
 var $17=HEAP32[(($__einp__i_i)>>2)];
 var $cmp_i_i24=($16|0)==($17|0);
 if($cmp_i_i24){label=18;break;}else{label=19;break;}
 case 18: 
 var $18=$15;
 var $vtable_i_i=HEAP32[(($18)>>2)];
 var $vfn_i_i=(($vtable_i_i+36)|0);
 var $19=HEAP32[(($vfn_i_i)>>2)];
 var $call_i_i=FUNCTION_TABLE[$19]($15);
 var $retval_i_i_0=$call_i_i;label=20;break;
 case 19: 
 var $20=HEAP32[(($16)>>2)];
 var $retval_i_i_0=$20;label=20;break;
 case 20: 
 var $retval_i_i_0;
 var $21=$__ct;
 var $vtable_i=HEAP32[(($21)>>2)];
 var $vfn_i=(($vtable_i+12)|0);
 var $22=HEAP32[(($vfn_i)>>2)];
 var $call_i=FUNCTION_TABLE[$22]($__ct,2048,$retval_i_i_0);
 if($call_i){label=22;break;}else{label=21;break;}
 case 21: 
 var $23=HEAP32[(($__err)>>2)];
 var $or4=$23|4;
 HEAP32[(($__err)>>2)]=$or4;
 var $retval_0=0;label=63;break;
 case 22: 
 var $24=$__ct;
 var $vtable_i30=HEAP32[(($24)>>2)];
 var $vfn_i31=(($vtable_i30+52)|0);
 var $25=HEAP32[(($vfn_i31)>>2)];
 var $call_i32=FUNCTION_TABLE[$25]($__ct,$retval_i_i_0,0);
 var $conv=(($call_i32<<24)>>24);
 var $26=HEAP32[(($__sbuf__i_i_i)>>2)];
 var $__ninp__i_i40=(($26+12)|0);
 var $27=HEAP32[(($__ninp__i_i40)>>2)];
 var $__einp__i_i41=(($26+16)|0);
 var $28=HEAP32[(($__einp__i_i41)>>2)];
 var $cmp_i_i42=($27|0)==($28|0);
 if($cmp_i_i42){label=23;break;}else{label=24;break;}
 case 23: 
 var $29=$26;
 var $vtable_i_i43=HEAP32[(($29)>>2)];
 var $vfn_i_i44=(($vtable_i_i43+40)|0);
 var $30=HEAP32[(($vfn_i_i44)>>2)];
 var $call_i_i45=FUNCTION_TABLE[$30]($26);
 var $__r_0_in=$conv;var $__n_addr_0_in=$__n;var $31=$14;label=25;break;
 case 24: 
 var $incdec_ptr_i_i=(($27+4)|0);
 HEAP32[(($__ninp__i_i40)>>2)]=$incdec_ptr_i_i;
 var $__r_0_in=$conv;var $__n_addr_0_in=$__n;var $31=$14;label=25;break;
 case 25: 
 var $31;
 var $__n_addr_0_in;
 var $__r_0_in;
 var $__r_0=((($__r_0_in)-(48))|0);
 var $__n_addr_0=((($__n_addr_0_in)-(1))|0);
 var $32=HEAP32[(($__sbuf__i_i_i)>>2)];
 var $tobool_i_i_i68=($32|0)==0;
 if($tobool_i_i_i68){var $38=0;label=32;break;}else{label=26;break;}
 case 26: 
 var $__ninp__i_i_i_i71=(($32+12)|0);
 var $33=HEAP32[(($__ninp__i_i_i_i71)>>2)];
 var $__einp__i_i_i_i72=(($32+16)|0);
 var $34=HEAP32[(($__einp__i_i_i_i72)>>2)];
 var $cmp_i_i_i_i73=($33|0)==($34|0);
 if($cmp_i_i_i_i73){label=27;break;}else{label=28;break;}
 case 27: 
 var $35=$32;
 var $vtable_i_i_i_i75=HEAP32[(($35)>>2)];
 var $vfn_i_i_i_i76=(($vtable_i_i_i_i75+36)|0);
 var $36=HEAP32[(($vfn_i_i_i_i76)>>2)];
 var $call_i_i_i_i77=FUNCTION_TABLE[$36]($32);
 var $retval_i_i_i_i58_0=$call_i_i_i_i77;label=29;break;
 case 28: 
 var $37=HEAP32[(($33)>>2)];
 var $retval_i_i_i_i58_0=$37;label=29;break;
 case 29: 
 var $retval_i_i_i_i58_0;
 var $cmp_i7_i_i_i81=($retval_i_i_i_i58_0|0)==-1;
 if($cmp_i7_i_i_i81){label=31;break;}else{label=30;break;}
 case 30: 
 var $_pre21=HEAP32[(($__sbuf__i_i_i)>>2)];
 var $38=$_pre21;label=32;break;
 case 31: 
 HEAP32[(($__sbuf__i_i_i)>>2)]=0;
 var $38=0;label=32;break;
 case 32: 
 var $38;
 var $cmp_i_i_i86=($38|0)==0;
 var $tobool_i12_i_i90=($31|0)==0;
 if($tobool_i12_i_i90){var $46=$38;var $45=0;label=39;break;}else{label=33;break;}
 case 33: 
 var $__ninp__i_i15_i_i94=(($31+12)|0);
 var $39=HEAP32[(($__ninp__i_i15_i_i94)>>2)];
 var $__einp__i_i16_i_i95=(($31+16)|0);
 var $40=HEAP32[(($__einp__i_i16_i_i95)>>2)];
 var $cmp_i_i17_i_i96=($39|0)==($40|0);
 if($cmp_i_i17_i_i96){label=34;break;}else{label=35;break;}
 case 34: 
 var $41=$31;
 var $vtable_i_i19_i_i98=HEAP32[(($41)>>2)];
 var $vfn_i_i20_i_i99=(($vtable_i_i19_i_i98+36)|0);
 var $42=HEAP32[(($vfn_i_i20_i_i99)>>2)];
 var $call_i_i21_i_i100=FUNCTION_TABLE[$42]($31);
 var $retval_i_i7_i_i52_0=$call_i_i21_i_i100;label=36;break;
 case 35: 
 var $43=HEAP32[(($39)>>2)];
 var $retval_i_i7_i_i52_0=$43;label=36;break;
 case 36: 
 var $retval_i_i7_i_i52_0;
 var $cmp_i7_i25_i_i104=($retval_i_i7_i_i52_0|0)==-1;
 if($cmp_i7_i25_i_i104){label=37;break;}else{var $44=$31;label=38;break;}
 case 37: 
 HEAP32[(($__sbuf__i11_i_i)>>2)]=0;
 var $44=0;label=38;break;
 case 38: 
 var $44;
 var $_pr=HEAP32[(($__sbuf__i_i_i)>>2)];
 var $46=$_pr;var $45=$44;label=39;break;
 case 39: 
 var $45;
 var $46;
 var $cmp_i30_i_i109=($45|0)==0;
 var $lnot_i=$cmp_i_i_i86^$cmp_i30_i_i109;
 var $cmp=($__n_addr_0|0)>0;
 var $cmp_=$lnot_i&$cmp;
 if($cmp_){label=40;break;}else{label=47;break;}
 case 40: 
 var $__ninp__i_i119=(($46+12)|0);
 var $47=HEAP32[(($__ninp__i_i119)>>2)];
 var $__einp__i_i120=(($46+16)|0);
 var $48=HEAP32[(($__einp__i_i120)>>2)];
 var $cmp_i_i121=($47|0)==($48|0);
 if($cmp_i_i121){label=41;break;}else{label=42;break;}
 case 41: 
 var $49=$46;
 var $vtable_i_i122=HEAP32[(($49)>>2)];
 var $vfn_i_i123=(($vtable_i_i122+36)|0);
 var $50=HEAP32[(($vfn_i_i123)>>2)];
 var $call_i_i124=FUNCTION_TABLE[$50]($46);
 var $retval_i_i113_0=$call_i_i124;label=43;break;
 case 42: 
 var $51=HEAP32[(($47)>>2)];
 var $retval_i_i113_0=$51;label=43;break;
 case 43: 
 var $retval_i_i113_0;
 var $vtable_i133=HEAP32[(($21)>>2)];
 var $vfn_i134=(($vtable_i133+12)|0);
 var $52=HEAP32[(($vfn_i134)>>2)];
 var $call_i135=FUNCTION_TABLE[$52]($__ct,2048,$retval_i_i113_0);
 if($call_i135){label=44;break;}else{var $retval_0=$__r_0;label=63;break;}
 case 44: 
 var $mul=((($__r_0)*(10))&-1);
 var $vtable_i140=HEAP32[(($24)>>2)];
 var $vfn_i141=(($vtable_i140+52)|0);
 var $53=HEAP32[(($vfn_i141)>>2)];
 var $call_i142=FUNCTION_TABLE[$53]($__ct,$retval_i_i113_0,0);
 var $conv14=(($call_i142<<24)>>24);
 var $add=((($conv14)+($mul))|0);
 var $54=HEAP32[(($__sbuf__i_i_i)>>2)];
 var $__ninp__i_i150=(($54+12)|0);
 var $55=HEAP32[(($__ninp__i_i150)>>2)];
 var $__einp__i_i151=(($54+16)|0);
 var $56=HEAP32[(($__einp__i_i151)>>2)];
 var $cmp_i_i152=($55|0)==($56|0);
 if($cmp_i_i152){label=45;break;}else{label=46;break;}
 case 45: 
 var $57=$54;
 var $vtable_i_i153=HEAP32[(($57)>>2)];
 var $vfn_i_i154=(($vtable_i_i153+40)|0);
 var $58=HEAP32[(($vfn_i_i154)>>2)];
 var $call_i_i155=FUNCTION_TABLE[$58]($54);
 var $__r_0_in=$add;var $__n_addr_0_in=$__n_addr_0;var $31=$45;label=25;break;
 case 46: 
 var $incdec_ptr_i_i158=(($55+4)|0);
 HEAP32[(($__ninp__i_i150)>>2)]=$incdec_ptr_i_i158;
 var $__r_0_in=$add;var $__n_addr_0_in=$__n_addr_0;var $31=$45;label=25;break;
 case 47: 
 var $tobool_i_i_i180=($46|0)==0;
 if($tobool_i_i_i180){var $64=1;label=54;break;}else{label=48;break;}
 case 48: 
 var $__ninp__i_i_i_i183=(($46+12)|0);
 var $59=HEAP32[(($__ninp__i_i_i_i183)>>2)];
 var $__einp__i_i_i_i184=(($46+16)|0);
 var $60=HEAP32[(($__einp__i_i_i_i184)>>2)];
 var $cmp_i_i_i_i185=($59|0)==($60|0);
 if($cmp_i_i_i_i185){label=49;break;}else{label=50;break;}
 case 49: 
 var $61=$46;
 var $vtable_i_i_i_i187=HEAP32[(($61)>>2)];
 var $vfn_i_i_i_i188=(($vtable_i_i_i_i187+36)|0);
 var $62=HEAP32[(($vfn_i_i_i_i188)>>2)];
 var $call_i_i_i_i189=FUNCTION_TABLE[$62]($46);
 var $retval_i_i_i_i170_0=$call_i_i_i_i189;label=51;break;
 case 50: 
 var $63=HEAP32[(($59)>>2)];
 var $retval_i_i_i_i170_0=$63;label=51;break;
 case 51: 
 var $retval_i_i_i_i170_0;
 var $cmp_i7_i_i_i193=($retval_i_i_i_i170_0|0)==-1;
 if($cmp_i7_i_i_i193){label=53;break;}else{label=52;break;}
 case 52: 
 var $_pre22=HEAP32[(($__sbuf__i_i_i)>>2)];
 var $phitmp23=($_pre22|0)==0;
 var $64=$phitmp23;label=54;break;
 case 53: 
 HEAP32[(($__sbuf__i_i_i)>>2)]=0;
 var $64=1;label=54;break;
 case 54: 
 var $64;
 if($cmp_i30_i_i109){label=60;break;}else{label=55;break;}
 case 55: 
 var $__ninp__i_i15_i_i206=(($45+12)|0);
 var $65=HEAP32[(($__ninp__i_i15_i_i206)>>2)];
 var $__einp__i_i16_i_i207=(($45+16)|0);
 var $66=HEAP32[(($__einp__i_i16_i_i207)>>2)];
 var $cmp_i_i17_i_i208=($65|0)==($66|0);
 if($cmp_i_i17_i_i208){label=56;break;}else{label=57;break;}
 case 56: 
 var $67=$45;
 var $vtable_i_i19_i_i210=HEAP32[(($67)>>2)];
 var $vfn_i_i20_i_i211=(($vtable_i_i19_i_i210+36)|0);
 var $68=HEAP32[(($vfn_i_i20_i_i211)>>2)];
 var $call_i_i21_i_i212=FUNCTION_TABLE[$68]($45);
 var $retval_i_i7_i_i164_0=$call_i_i21_i_i212;label=58;break;
 case 57: 
 var $69=HEAP32[(($65)>>2)];
 var $retval_i_i7_i_i164_0=$69;label=58;break;
 case 58: 
 var $retval_i_i7_i_i164_0;
 var $cmp_i7_i25_i_i216=($retval_i_i7_i_i164_0|0)==-1;
 if($cmp_i7_i25_i_i216){label=59;break;}else{label=61;break;}
 case 59: 
 HEAP32[(($__sbuf__i11_i_i)>>2)]=0;
 label=60;break;
 case 60: 
 if($64){label=62;break;}else{var $retval_0=$__r_0;label=63;break;}
 case 61: 
 var $cmp_i30_i_i221=($45|0)==0;
 var $cmp_i_i223tmp=$64^$cmp_i30_i_i221;
 if($cmp_i_i223tmp){var $retval_0=$__r_0;label=63;break;}else{label=62;break;}
 case 62: 
 var $70=HEAP32[(($__err)>>2)];
 var $or20=$70|2;
 HEAP32[(($__err)>>2)]=$or20;
 var $retval_0=$__r_0;label=63;break;
 case 63: 
 var $retval_0;
 STACKTOP=sp;return $retval_0;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $0=$this;
 var $__loc__i=(($this+8)|0);
 var $1=HEAP32[(($__loc__i)>>2)];
 var $2=HEAP8[(15944)];
 var $guard_uninitialized_i_i=(($2<<24)>>24)==0;
 if($guard_uninitialized_i_i){label=2;break;}else{label=6;break;}
 case 2: 
 var $3=___cxa_guard_acquire(15944);
 var $tobool_i_i=($3|0)==0;
 if($tobool_i_i){label=6;break;}else{label=3;break;}
 case 3: 
 var $call_i_i=(function() { try { __THREW__ = 0; return _newlocale(2147483647,2960,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=4;break; } else { label=5;break; }
 case 4: 
 HEAP32[((13952)>>2)]=$call_i_i;
 label=6;break;
 case 5: 
 var $4$0 = ___cxa_find_matching_catch(-1, -1,0); var $4$1 = tempRet0;
 label=9;break;
 case 6: 
 var $5=HEAP32[((13952)>>2)];
 var $cmp_i=($1|0)==($5|0);
 if($cmp_i){label=10;break;}else{label=7;break;}
 case 7: 
 var $6=HEAP32[(($__loc__i)>>2)];
 (function() { try { __THREW__ = 0; return _freelocale($6) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=10;break; } else { label=8;break; }
 case 8: 
 var $7$0 = ___cxa_find_matching_catch(-1, -1,0); var $7$1 = tempRet0;
 label=9;break;
 case 9: 
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 10: 
 var $8=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($8);
 __ZdlPv($0);
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev($this){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__loc__i=(($this+8)|0);
 var $0=HEAP32[(($__loc__i)>>2)];
 var $1=HEAP8[(15944)];
 var $guard_uninitialized_i_i=(($1<<24)>>24)==0;
 if($guard_uninitialized_i_i){label=2;break;}else{label=6;break;}
 case 2: 
 var $2=___cxa_guard_acquire(15944);
 var $tobool_i_i=($2|0)==0;
 if($tobool_i_i){label=6;break;}else{label=3;break;}
 case 3: 
 var $call_i_i=(function() { try { __THREW__ = 0; return _newlocale(2147483647,2960,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=4;break; } else { label=5;break; }
 case 4: 
 HEAP32[((13952)>>2)]=$call_i_i;
 label=6;break;
 case 5: 
 var $3$0 = ___cxa_find_matching_catch(-1, -1,0); var $3$1 = tempRet0;
 label=9;break;
 case 6: 
 var $4=HEAP32[((13952)>>2)];
 var $cmp_i=($0|0)==($4|0);
 if($cmp_i){label=10;break;}else{label=7;break;}
 case 7: 
 var $5=HEAP32[(($__loc__i)>>2)];
 (function() { try { __THREW__ = 0; return _freelocale($5) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=10;break; } else { label=8;break; }
 case 8: 
 var $6$0 = ___cxa_find_matching_catch(-1, -1,0); var $6$1 = tempRet0;
 label=9;break;
 case 9: 
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 10: 
 var $7=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($7);
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc($agg_result,$this,$__s,$0,$1,$__tm,$__fmt,$__mod){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+112)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__s; $__s=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__s)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $fmt_i=sp;
 var $__nar=(sp)+(8);
 var $arraydecay=(($__nar)|0);
 var $2=(($fmt_i)|0);
 HEAP8[($2)]=37;
 var $arrayinit_element_i=(($fmt_i+1)|0);
 HEAP8[($arrayinit_element_i)]=$__fmt;
 var $arrayinit_element2_i=(($fmt_i+2)|0);
 HEAP8[($arrayinit_element2_i)]=$__mod;
 var $arrayinit_element3_i=(($fmt_i+3)|0);
 HEAP8[($arrayinit_element3_i)]=0;
 var $cmp_i=(($__mod<<24)>>24)==0;
 if($cmp_i){label=3;break;}else{label=2;break;}
 case 2: 
 HEAP8[($arrayinit_element_i)]=$__mod;
 HEAP8[($arrayinit_element2_i)]=$__fmt;
 label=3;break;
 case 3: 
 var $__loc__i=(($this+8)|0);
 var $3=HEAP32[(($__loc__i)>>2)];
 var $call5_i=_strftime($arraydecay,100,$2,$__tm,$3);
 var $add_ptr_i=(($__nar+$call5_i)|0);
 var $agg_tmp_sroa_0_0__idx=(($__s)|0);
 var $agg_tmp_sroa_0_0_copyload1=HEAP32[(($agg_tmp_sroa_0_0__idx)>>2)];
 var $cmp_i_i11=($call5_i|0)==0;
 if($cmp_i_i11){var $agg_tmp3_i_sroa_0_0_lcssa=$agg_tmp_sroa_0_0_copyload1;label=10;break;}else{var $agg_tmp3_i_sroa_0_012=$agg_tmp_sroa_0_0_copyload1;var $__first_addr_i_i_013=$arraydecay;label=4;break;}
 case 4: 
 var $__first_addr_i_i_013;
 var $agg_tmp3_i_sroa_0_012;
 var $4=HEAP8[($__first_addr_i_i_013)];
 var $tobool_i_i_i=($agg_tmp3_i_sroa_0_012|0)==0;
 if($tobool_i_i_i){var $agg_tmp3_i_sroa_0_1=0;label=9;break;}else{label=5;break;}
 case 5: 
 var $__nout__i_i_i_i=(($agg_tmp3_i_sroa_0_012+24)|0);
 var $5=HEAP32[(($__nout__i_i_i_i)>>2)];
 var $__eout__i_i_i_i=(($agg_tmp3_i_sroa_0_012+28)|0);
 var $6=HEAP32[(($__eout__i_i_i_i)>>2)];
 var $cmp_i_i_i_i=($5|0)==($6|0);
 if($cmp_i_i_i_i){label=6;break;}else{label=7;break;}
 case 6: 
 var $7=$agg_tmp3_i_sroa_0_012;
 var $vtable_i_i_i_i=HEAP32[(($7)>>2)];
 var $vfn_i_i_i_i=(($vtable_i_i_i_i+52)|0);
 var $8=HEAP32[(($vfn_i_i_i_i)>>2)];
 var $conv_i_i_i_i_i=($4&255);
 var $call2_i_i_i_i=FUNCTION_TABLE[$8]($agg_tmp3_i_sroa_0_012,$conv_i_i_i_i_i);
 var $retval_i_i_i_i_0=$call2_i_i_i_i;label=8;break;
 case 7: 
 var $incdec_ptr_i_i_i_i=(($5+1)|0);
 HEAP32[(($__nout__i_i_i_i)>>2)]=$incdec_ptr_i_i_i_i;
 HEAP8[($5)]=$4;
 var $conv_i6_i_i_i_i=($4&255);
 var $retval_i_i_i_i_0=$conv_i6_i_i_i_i;label=8;break;
 case 8: 
 var $retval_i_i_i_i_0;
 var $cmp_i6_i_i_i=($retval_i_i_i_i_0|0)==-1;
 var $_agg_tmp3_i_sroa_0_0=($cmp_i6_i_i_i?0:$agg_tmp3_i_sroa_0_012);
 var $agg_tmp3_i_sroa_0_1=$_agg_tmp3_i_sroa_0_0;label=9;break;
 case 9: 
 var $agg_tmp3_i_sroa_0_1;
 var $incdec_ptr_i_i=(($__first_addr_i_i_013+1)|0);
 var $cmp_i_i=($incdec_ptr_i_i|0)==($add_ptr_i|0);
 if($cmp_i_i){var $agg_tmp3_i_sroa_0_0_lcssa=$agg_tmp3_i_sroa_0_1;label=10;break;}else{var $agg_tmp3_i_sroa_0_012=$agg_tmp3_i_sroa_0_1;var $__first_addr_i_i_013=$incdec_ptr_i_i;label=4;break;}
 case 10: 
 var $agg_tmp3_i_sroa_0_0_lcssa;
 var $agg_tmp3_i_sroa_0_0__idx=(($agg_result)|0);
 HEAP32[(($agg_tmp3_i_sroa_0_0__idx)>>2)]=$agg_tmp3_i_sroa_0_0_lcssa;
 STACKTOP=sp;return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $0=$this;
 var $__loc__i=(($this+8)|0);
 var $1=HEAP32[(($__loc__i)>>2)];
 var $2=HEAP8[(15944)];
 var $guard_uninitialized_i_i=(($2<<24)>>24)==0;
 if($guard_uninitialized_i_i){label=2;break;}else{label=6;break;}
 case 2: 
 var $3=___cxa_guard_acquire(15944);
 var $tobool_i_i=($3|0)==0;
 if($tobool_i_i){label=6;break;}else{label=3;break;}
 case 3: 
 var $call_i_i=(function() { try { __THREW__ = 0; return _newlocale(2147483647,2960,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=4;break; } else { label=5;break; }
 case 4: 
 HEAP32[((13952)>>2)]=$call_i_i;
 label=6;break;
 case 5: 
 var $4$0 = ___cxa_find_matching_catch(-1, -1,0); var $4$1 = tempRet0;
 label=9;break;
 case 6: 
 var $5=HEAP32[((13952)>>2)];
 var $cmp_i=($1|0)==($5|0);
 if($cmp_i){label=10;break;}else{label=7;break;}
 case 7: 
 var $6=HEAP32[(($__loc__i)>>2)];
 (function() { try { __THREW__ = 0; return _freelocale($6) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=10;break; } else { label=8;break; }
 case 8: 
 var $7$0 = ___cxa_find_matching_catch(-1, -1,0); var $7$1 = tempRet0;
 label=9;break;
 case 9: 
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 10: 
 var $8=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($8);
 __ZdlPv($0);
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev($this){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__loc__i=(($this+8)|0);
 var $0=HEAP32[(($__loc__i)>>2)];
 var $1=HEAP8[(15944)];
 var $guard_uninitialized_i_i=(($1<<24)>>24)==0;
 if($guard_uninitialized_i_i){label=2;break;}else{label=6;break;}
 case 2: 
 var $2=___cxa_guard_acquire(15944);
 var $tobool_i_i=($2|0)==0;
 if($tobool_i_i){label=6;break;}else{label=3;break;}
 case 3: 
 var $call_i_i=(function() { try { __THREW__ = 0; return _newlocale(2147483647,2960,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=4;break; } else { label=5;break; }
 case 4: 
 HEAP32[((13952)>>2)]=$call_i_i;
 label=6;break;
 case 5: 
 var $3$0 = ___cxa_find_matching_catch(-1, -1,0); var $3$1 = tempRet0;
 label=9;break;
 case 6: 
 var $4=HEAP32[((13952)>>2)];
 var $cmp_i=($0|0)==($4|0);
 if($cmp_i){label=10;break;}else{label=7;break;}
 case 7: 
 var $5=HEAP32[(($__loc__i)>>2)];
 (function() { try { __THREW__ = 0; return _freelocale($5) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=10;break; } else { label=8;break; }
 case 8: 
 var $6$0 = ___cxa_find_matching_catch(-1, -1,0); var $6$1 = tempRet0;
 label=9;break;
 case 9: 
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 10: 
 var $7=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($7);
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc($agg_result,$this,$__s,$0,$1,$__tm,$__fmt,$__mod){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+408)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__s; $__s=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__s)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__nar=sp;
 var $__ne=(sp)+(400);
 var $arraydecay=(($__nar)|0);
 var $add_ptr=(($__nar+400)|0);
 HEAP32[(($__ne)>>2)]=$add_ptr;
 var $add_ptr3=(($this+8)|0);
 __ZNKSt3__110__time_put8__do_putEPwRS1_PK2tmcc($add_ptr3,$arraydecay,$__ne,$__tm,$__fmt,$__mod);
 var $2=HEAP32[(($__ne)>>2)];
 var $agg_tmp_sroa_0_0__idx=(($__s)|0);
 var $agg_tmp_sroa_0_0_copyload1=HEAP32[(($agg_tmp_sroa_0_0__idx)>>2)];
 var $cmp_i_i10=($arraydecay|0)==($2|0);
 if($cmp_i_i10){var $agg_tmp3_i_sroa_0_0_lcssa=$agg_tmp_sroa_0_0_copyload1;label=8;break;}else{var $agg_tmp3_i_sroa_0_011=$agg_tmp_sroa_0_0_copyload1;var $__first_addr_i_i_012=$arraydecay;label=2;break;}
 case 2: 
 var $__first_addr_i_i_012;
 var $agg_tmp3_i_sroa_0_011;
 var $3=HEAP32[(($__first_addr_i_i_012)>>2)];
 var $tobool_i_i_i=($agg_tmp3_i_sroa_0_011|0)==0;
 if($tobool_i_i_i){var $agg_tmp3_i_sroa_0_1=0;label=7;break;}else{label=3;break;}
 case 3: 
 var $__nout__i_i_i_i=(($agg_tmp3_i_sroa_0_011+24)|0);
 var $4=HEAP32[(($__nout__i_i_i_i)>>2)];
 var $__eout__i_i_i_i=(($agg_tmp3_i_sroa_0_011+28)|0);
 var $5=HEAP32[(($__eout__i_i_i_i)>>2)];
 var $cmp_i_i_i_i=($4|0)==($5|0);
 if($cmp_i_i_i_i){label=4;break;}else{label=5;break;}
 case 4: 
 var $6=$agg_tmp3_i_sroa_0_011;
 var $vtable_i_i_i_i=HEAP32[(($6)>>2)];
 var $vfn_i_i_i_i=(($vtable_i_i_i_i+52)|0);
 var $7=HEAP32[(($vfn_i_i_i_i)>>2)];
 var $call2_i_i_i_i=FUNCTION_TABLE[$7]($agg_tmp3_i_sroa_0_011,$3);
 var $retval_i_i_i_i_0=$call2_i_i_i_i;label=6;break;
 case 5: 
 var $incdec_ptr_i_i_i_i=(($4+4)|0);
 HEAP32[(($__nout__i_i_i_i)>>2)]=$incdec_ptr_i_i_i_i;
 HEAP32[(($4)>>2)]=$3;
 var $retval_i_i_i_i_0=$3;label=6;break;
 case 6: 
 var $retval_i_i_i_i_0;
 var $cmp_i6_i_i_i=($retval_i_i_i_i_0|0)==-1;
 var $_agg_tmp3_i_sroa_0_0=($cmp_i6_i_i_i?0:$agg_tmp3_i_sroa_0_011);
 var $agg_tmp3_i_sroa_0_1=$_agg_tmp3_i_sroa_0_0;label=7;break;
 case 7: 
 var $agg_tmp3_i_sroa_0_1;
 var $incdec_ptr_i_i=(($__first_addr_i_i_012+4)|0);
 var $cmp_i_i=($incdec_ptr_i_i|0)==($2|0);
 if($cmp_i_i){var $agg_tmp3_i_sroa_0_0_lcssa=$agg_tmp3_i_sroa_0_1;label=8;break;}else{var $agg_tmp3_i_sroa_0_011=$agg_tmp3_i_sroa_0_1;var $__first_addr_i_i_012=$incdec_ptr_i_i;label=2;break;}
 case 8: 
 var $agg_tmp3_i_sroa_0_0_lcssa;
 var $agg_tmp3_i_sroa_0_0__idx=(($agg_result)|0);
 HEAP32[(($agg_tmp3_i_sroa_0_0__idx)>>2)]=$agg_tmp3_i_sroa_0_0_lcssa;
 STACKTOP=sp;return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__110__time_put8__do_putEPwRS1_PK2tmcc($this,$__wb,$__we,$__tm,$__fmt,$__mod){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+120)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $fmt_i=sp;
 var $__nar=(sp)+(8);
 var $mb=(sp)+(112);
 var $tmpcast=$mb;
 var $__nb=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $arraydecay=(($__nar)|0);
 var $0=(($fmt_i)|0);
 HEAP8[($0)]=37;
 var $arrayinit_element_i=(($fmt_i+1)|0);
 HEAP8[($arrayinit_element_i)]=$__fmt;
 var $arrayinit_element2_i=(($fmt_i+2)|0);
 HEAP8[($arrayinit_element2_i)]=$__mod;
 var $arrayinit_element3_i=(($fmt_i+3)|0);
 HEAP8[($arrayinit_element3_i)]=0;
 var $cmp_i=(($__mod<<24)>>24)==0;
 if($cmp_i){label=3;break;}else{label=2;break;}
 case 2: 
 HEAP8[($arrayinit_element_i)]=$__mod;
 HEAP8[($arrayinit_element2_i)]=$__fmt;
 label=3;break;
 case 3: 
 var $__loc__i=(($this)|0);
 var $1=HEAP32[(($__loc__i)>>2)];
 var $call5_i=_strftime($arraydecay,100,$0,$__tm,$1);
 var $$etemp$0$0=0;
 var $$etemp$0$1=0;
 var $st$1$0=(($mb)|0);
 HEAP32[(($st$1$0)>>2)]=$$etemp$0$0;
 var $st$2$1=(($mb+4)|0);
 HEAP32[(($st$2$1)>>2)]=$$etemp$0$1;
 HEAP32[(($__nb)>>2)]=$arraydecay;
 var $2=HEAP32[(($__we)>>2)];
 var $sub_ptr_lhs_cast_i=$2;
 var $sub_ptr_rhs_cast_i=$__wb;
 var $sub_ptr_sub_i=((($sub_ptr_lhs_cast_i)-($sub_ptr_rhs_cast_i))|0);
 var $sub_ptr_div_i=$sub_ptr_sub_i>>2;
 var $3=HEAP32[(($__loc__i)>>2)];
 var $call_i=_uselocale($3);
 var $call1_i=(function() { try { __THREW__ = 0; return _mbsrtowcs($__wb,$__nb,$sub_ptr_div_i,$tmpcast) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=4;break; } else { label=7;break; }
 case 4: 
 var $tobool_i_i_i37_i=($call_i|0)==0;
 if($tobool_i_i_i37_i){label=11;break;}else{label=5;break;}
 case 5: 
 var $call6_i_i_i42_i=(function() { try { __THREW__ = 0; return _uselocale($call_i) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=11;break; } else { label=6;break; }
 case 6: 
 var $4$0 = ___cxa_find_matching_catch(-1, -1,0); var $4$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 7: 
 var $5$0 = ___cxa_find_matching_catch(-1, -1); var $5$1 = tempRet0;
 var $tobool_i_i_i_i=($call_i|0)==0;
 if($tobool_i_i_i_i){label=10;break;}else{label=8;break;}
 case 8: 
 var $call6_i_i_i_i=(function() { try { __THREW__ = 0; return _uselocale($call_i) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=10;break; } else { label=9;break; }
 case 9: 
 var $6$0 = ___cxa_find_matching_catch(-1, -1,0); var $6$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 10: 
 ___resumeException($5$0)
 case 11: 
 var $cmp=($call1_i|0)==-1;
 if($cmp){label=12;break;}else{label=13;break;}
 case 12: 
 __ZNSt3__121__throw_runtime_errorEPKc(1248);
 throw "Reached an unreachable!";
 case 13: 
 var $add_ptr5=(($__wb+($call1_i<<2))|0);
 HEAP32[(($__we)>>2)]=$add_ptr5;
 STACKTOP=sp;return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__110moneypunctIcLb0EED0Ev($this){
 var label=0;
 var $0=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($0);
 var $1=$this;
 __ZdlPv($1);
 return;
}
function __ZNSt3__110moneypunctIcLb0EED1Ev($this){
 var label=0;
 var $0=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($0);
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_decimal_pointEv($this){
 var label=0;
 return 127;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_thousands_sepEv($this){
 var label=0;
 return 127;
}
function __ZNKSt3__110moneypunctIcLb0EE11do_groupingEv($agg_result,$this){
 var label=0;
 var $agg_result4=$agg_result;
 HEAP32[(($agg_result4)>>2)]=0; HEAP32[((($agg_result4)+(4))>>2)]=0; HEAP32[((($agg_result4)+(8))>>2)]=0;
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE14do_curr_symbolEv($agg_result,$this){
 var label=0;
 var $agg_result4=$agg_result;
 HEAP32[(($agg_result4)>>2)]=0; HEAP32[((($agg_result4)+(4))>>2)]=0; HEAP32[((($agg_result4)+(8))>>2)]=0;
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_positive_signEv($agg_result,$this){
 var label=0;
 var $agg_result4=$agg_result;
 HEAP32[(($agg_result4)>>2)]=0; HEAP32[((($agg_result4)+(4))>>2)]=0; HEAP32[((($agg_result4)+(8))>>2)]=0;
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_negative_signEv($agg_result,$this){
 var label=0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($agg_result,1,45);
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE14do_frac_digitsEv($this){
 var label=0;
 return 0;
}
function __ZNKSt3__110moneypunctIcLb0EE13do_pos_formatEv($agg_result,$this){
 var label=0;
 var $0=$agg_result;
 tempBigInt=67109634;HEAP8[($0)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($0)+(1))|0)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($0)+(2))|0)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($0)+(3))|0)]=tempBigInt&0xff;
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE13do_neg_formatEv($agg_result,$this){
 var label=0;
 var $0=$agg_result;
 tempBigInt=67109634;HEAP8[($0)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($0)+(1))|0)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($0)+(2))|0)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($0)+(3))|0)]=tempBigInt&0xff;
 return;
}
function __ZNSt3__110moneypunctIcLb1EED0Ev($this){
 var label=0;
 var $0=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($0);
 var $1=$this;
 __ZdlPv($1);
 return;
}
function __ZNSt3__110moneypunctIcLb1EED1Ev($this){
 var label=0;
 var $0=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($0);
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_decimal_pointEv($this){
 var label=0;
 return 127;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_thousands_sepEv($this){
 var label=0;
 return 127;
}
function __ZNKSt3__110moneypunctIcLb1EE11do_groupingEv($agg_result,$this){
 var label=0;
 var $agg_result4=$agg_result;
 HEAP32[(($agg_result4)>>2)]=0; HEAP32[((($agg_result4)+(4))>>2)]=0; HEAP32[((($agg_result4)+(8))>>2)]=0;
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE14do_curr_symbolEv($agg_result,$this){
 var label=0;
 var $agg_result4=$agg_result;
 HEAP32[(($agg_result4)>>2)]=0; HEAP32[((($agg_result4)+(4))>>2)]=0; HEAP32[((($agg_result4)+(8))>>2)]=0;
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_positive_signEv($agg_result,$this){
 var label=0;
 var $agg_result4=$agg_result;
 HEAP32[(($agg_result4)>>2)]=0; HEAP32[((($agg_result4)+(4))>>2)]=0; HEAP32[((($agg_result4)+(8))>>2)]=0;
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_negative_signEv($agg_result,$this){
 var label=0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($agg_result,1,45);
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE14do_frac_digitsEv($this){
 var label=0;
 return 0;
}
function __ZNKSt3__110moneypunctIcLb1EE13do_pos_formatEv($agg_result,$this){
 var label=0;
 var $0=$agg_result;
 tempBigInt=67109634;HEAP8[($0)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($0)+(1))|0)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($0)+(2))|0)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($0)+(3))|0)]=tempBigInt&0xff;
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE13do_neg_formatEv($agg_result,$this){
 var label=0;
 var $0=$agg_result;
 tempBigInt=67109634;HEAP8[($0)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($0)+(1))|0)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($0)+(2))|0)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($0)+(3))|0)]=tempBigInt&0xff;
 return;
}
function __ZNSt3__110moneypunctIwLb0EED0Ev($this){
 var label=0;
 var $0=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($0);
 var $1=$this;
 __ZdlPv($1);
 return;
}
function __ZNSt3__110moneypunctIwLb0EED1Ev($this){
 var label=0;
 var $0=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($0);
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_decimal_pointEv($this){
 var label=0;
 return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_thousands_sepEv($this){
 var label=0;
 return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb0EE11do_groupingEv($agg_result,$this){
 var label=0;
 var $agg_result4=$agg_result;
 HEAP32[(($agg_result4)>>2)]=0; HEAP32[((($agg_result4)+(4))>>2)]=0; HEAP32[((($agg_result4)+(8))>>2)]=0;
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE14do_curr_symbolEv($agg_result,$this){
 var label=0;
 var $agg_result4=$agg_result;
 HEAP32[(($agg_result4)>>2)]=0; HEAP32[((($agg_result4)+(4))>>2)]=0; HEAP32[((($agg_result4)+(8))>>2)]=0;
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_positive_signEv($agg_result,$this){
 var label=0;
 var $agg_result4=$agg_result;
 HEAP32[(($agg_result4)>>2)]=0; HEAP32[((($agg_result4)+(4))>>2)]=0; HEAP32[((($agg_result4)+(8))>>2)]=0;
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_negative_signEv($agg_result,$this){
 var label=0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($agg_result,1,45);
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE14do_frac_digitsEv($this){
 var label=0;
 return 0;
}
function __ZNKSt3__110moneypunctIwLb0EE13do_pos_formatEv($agg_result,$this){
 var label=0;
 var $0=$agg_result;
 tempBigInt=67109634;HEAP8[($0)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($0)+(1))|0)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($0)+(2))|0)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($0)+(3))|0)]=tempBigInt&0xff;
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE13do_neg_formatEv($agg_result,$this){
 var label=0;
 var $0=$agg_result;
 tempBigInt=67109634;HEAP8[($0)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($0)+(1))|0)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($0)+(2))|0)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($0)+(3))|0)]=tempBigInt&0xff;
 return;
}
function __ZNSt3__110moneypunctIwLb1EED0Ev($this){
 var label=0;
 var $0=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($0);
 var $1=$this;
 __ZdlPv($1);
 return;
}
function __ZNSt3__110moneypunctIwLb1EED1Ev($this){
 var label=0;
 var $0=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($0);
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_decimal_pointEv($this){
 var label=0;
 return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_thousands_sepEv($this){
 var label=0;
 return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb1EE11do_groupingEv($agg_result,$this){
 var label=0;
 var $agg_result4=$agg_result;
 HEAP32[(($agg_result4)>>2)]=0; HEAP32[((($agg_result4)+(4))>>2)]=0; HEAP32[((($agg_result4)+(8))>>2)]=0;
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE14do_curr_symbolEv($agg_result,$this){
 var label=0;
 var $agg_result4=$agg_result;
 HEAP32[(($agg_result4)>>2)]=0; HEAP32[((($agg_result4)+(4))>>2)]=0; HEAP32[((($agg_result4)+(8))>>2)]=0;
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_positive_signEv($agg_result,$this){
 var label=0;
 var $agg_result4=$agg_result;
 HEAP32[(($agg_result4)>>2)]=0; HEAP32[((($agg_result4)+(4))>>2)]=0; HEAP32[((($agg_result4)+(8))>>2)]=0;
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_negative_signEv($agg_result,$this){
 var label=0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($agg_result,1,45);
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE14do_frac_digitsEv($this){
 var label=0;
 return 0;
}
function __ZNKSt3__110moneypunctIwLb1EE13do_pos_formatEv($agg_result,$this){
 var label=0;
 var $0=$agg_result;
 tempBigInt=67109634;HEAP8[($0)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($0)+(1))|0)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($0)+(2))|0)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($0)+(3))|0)]=tempBigInt&0xff;
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE13do_neg_formatEv($agg_result,$this){
 var label=0;
 var $0=$agg_result;
 tempBigInt=67109634;HEAP8[($0)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($0)+(1))|0)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($0)+(2))|0)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($0)+(3))|0)]=tempBigInt&0xff;
 return;
}
function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this){
 var label=0;
 var $0=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($0);
 var $1=$this;
 __ZdlPv($1);
 return;
}
function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev($this){
 var label=0;
 var $0=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($0);
 return;
}
function __ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe($agg_result,$this,$__b,$__e,$__intl,$__iob,$__err,$__v){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+280)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__p_i_i_i=sp;
 var $__wbuf=(sp)+(16);
 var $__wb=(sp)+(120);
 var $__wn=(sp)+(128);
 var $__loc=(sp)+(136);
 var $__neg=(sp)+(144);
 var $agg_tmp=(sp)+(152);
 var $__atoms=(sp)+(160);
 var $__nbuf=(sp)+(176);
 var $arraydecay=(($__wbuf)|0);
 var $__first__i_i_i_i_i=(($__wb)|0);
 HEAP32[(($__first__i_i_i_i_i)>>2)]=$arraydecay;
 var $__second__i_i_i_i_i=(($__wb+4)|0);
 HEAP32[(($__second__i_i_i_i_i)>>2)]=448;
 var $add_ptr=(($__wbuf+100)|0);
 (function() { try { __THREW__ = 0; return __ZNKSt3__18ios_base6getlocEv($__loc,$__iob) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=14;break; }
 case 2: 
 var $__locale__i=(($__loc)|0);
 var $0=HEAP32[(($__locale__i)>>2)];
 var $1=$__p_i_i_i;
 var $2=HEAP32[((15384)>>2)];
 var $cmp_i_i_i23=($2|0)==-1;
 if($cmp_i_i_i23){label=4;break;}else{label=3;break;}
 case 3: 
 var $ref_tmp_i_sroa_0_0__idx_i_i=(($__p_i_i_i)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i)>>2)]=15384;
 var $ref_tmp_i_sroa_1_4__idx6_i_i=(($__p_i_i_i+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i=(($__p_i_i_i+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(15384,$1,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=4;break; } else { label=15;break; }
 case 4: 
 var $3=HEAP32[((15388)>>2)];
 var $sub_i_i=((($3)-(1))|0);
 var $__end__i_i_i_i=(($0+12)|0);
 var $4=HEAP32[(($__end__i_i_i_i)>>2)];
 var $__begin__i_i_i_i=(($0+8)|0);
 var $5=HEAP32[(($__begin__i_i_i_i)>>2)];
 var $sub_ptr_lhs_cast_i_i_i_i=$4;
 var $sub_ptr_rhs_cast_i_i_i_i=$5;
 var $sub_ptr_sub_i_i_i_i=((($sub_ptr_lhs_cast_i_i_i_i)-($sub_ptr_rhs_cast_i_i_i_i))|0);
 var $sub_ptr_div_i_i_i_i=$sub_ptr_sub_i_i_i_i>>2;
 var $cmp_i_i1_i=($sub_ptr_div_i_i_i_i>>>0)>($sub_i_i>>>0);
 if($cmp_i_i1_i){label=5;break;}else{label=6;break;}
 case 5: 
 var $arrayidx_i_i_i_i=(($5+($sub_i_i<<2))|0);
 var $6=HEAP32[(($arrayidx_i_i_i_i)>>2)];
 var $tobool_i_i_i25=($6|0)==0;
 if($tobool_i_i_i25){label=6;break;}else{label=8;break;}
 case 6: 
 var $exception_i_i=___cxa_allocate_exception(4);
 var $7=$exception_i_i;
 __ZNSt8bad_castC2Ev($7);
 (function() { try { __THREW__ = 0; return ___cxa_throw($exception_i_i,10264,(376)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=7;break; } else { label=15;break; }
 case 7: 
 throw "Reached an unreachable!";
 case 8: 
 var $8=$6;
 HEAP8[($__neg)]=0;
 var $9=(($__e)|0);
 var $10=HEAP32[(($9)>>2)];
 var $11=(($agg_tmp)|0);
 HEAP32[(($11)>>2)]=$10;
 var $__fmtflags__i=(($__iob+4)|0);
 var $12=HEAP32[(($__fmtflags__i)>>2)];
 var $call8=(function() { try { __THREW__ = 0; return __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_($__b,$agg_tmp,$__intl,$__loc,$12,$__err,$__neg,$8,$__wb,$__wn,$add_ptr) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=9;break; } else { label=15;break; }
 case 9: 
 if($call8){label=10;break;}else{label=34;break;}
 case 10: 
 var $arraydecay9=(($__atoms)|0);
 var $13=$6;
 var $vtable_i=HEAP32[(($13)>>2)];
 var $vfn_i=(($vtable_i+32)|0);
 var $14=HEAP32[(($vfn_i)>>2)];
 var $call_i76=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$14]($8,3872,3882,$arraydecay9) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=11;break; } else { label=15;break; }
 case 11: 
 var $arraydecay12=(($__nbuf)|0);
 var $15=HEAP32[(($__wn)>>2)];
 var $16=HEAP32[(($__first__i_i_i_i_i)>>2)];
 var $sub_ptr_lhs_cast=$15;
 var $sub_ptr_rhs_cast=$16;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $cmp=($sub_ptr_sub|0)>98;
 if($cmp){label=12;break;}else{var $__nc_0=$arraydecay12;var $__h_sroa_0_1=0;label=19;break;}
 case 12: 
 var $add=((($sub_ptr_sub)+(2))|0);
 var $call22=_malloc($add);
 var $cmp24=($call22|0)==0;
 if($cmp24){label=13;break;}else{var $__nc_0=$call22;var $__h_sroa_0_1=$call22;label=19;break;}
 case 13: 
 (function() { try { __THREW__ = 0; return __ZSt17__throw_bad_allocv() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $__nc_0=0;var $__h_sroa_0_1=0;label=19;break; } else { var $__h_sroa_0_0=0;label=16;break; }
 case 14: 
 var $17$0 = ___cxa_find_matching_catch(-1, -1); var $17$1 = tempRet0;
 var $18=$17$0;
 var $19=$17$1;
 HEAP32[(($__first__i_i_i_i_i)>>2)]=0;
 var $54=$arraydecay;var $exn_slot_140=$18;var $ehselector_slot_142=$19;label=53;break;
 case 15: 
 var $20$0 = ___cxa_find_matching_catch(-1, -1); var $20$1 = tempRet0;
 var $21=$20$0;
 var $22=$20$1;
 var $ehselector_slot_0=$22;var $exn_slot_0=$21;label=52;break;
 case 16: 
 var $__h_sroa_0_0;
 var $23$0 = ___cxa_find_matching_catch(-1, -1); var $23$1 = tempRet0;
 var $eh_lpad_body$1=$23$1;var $eh_lpad_body$0=$23$0;var $__h_sroa_0_0_lpad_body=$__h_sroa_0_0;label=17;break;
 case 17: 
 var $__h_sroa_0_0_lpad_body;
 var $eh_lpad_body$0;
 var $eh_lpad_body$1;
 var $24=$eh_lpad_body$0;
 var $25=$eh_lpad_body$1;
 var $tobool_i_i_i189=($__h_sroa_0_0_lpad_body|0)==0;
 if($tobool_i_i_i189){var $ehselector_slot_0=$25;var $exn_slot_0=$24;label=52;break;}else{label=18;break;}
 case 18: 
 _free($__h_sroa_0_0_lpad_body);
 var $ehselector_slot_0=$25;var $exn_slot_0=$24;label=52;break;
 case 19: 
 var $__h_sroa_0_1;
 var $__nc_0;
 var $26=HEAP8[($__neg)];
 var $27=$26&1;
 var $tobool29=(($27<<24)>>24)==0;
 if($tobool29){var $__nc_1=$__nc_0;label=21;break;}else{label=20;break;}
 case 20: 
 var $incdec_ptr=(($__nc_0+1)|0);
 HEAP8[($__nc_0)]=45;
 var $__nc_1=$incdec_ptr;label=21;break;
 case 21: 
 var $__nc_1;
 var $cmp3333=($16>>>0)<($15>>>0);
 if($cmp3333){label=22;break;}else{var $__nc_2_lcssa=$__nc_1;label=27;break;}
 case 22: 
 var $add_ptr_i=(($__atoms+10)|0);
 var $sub_ptr_rhs_cast41=$__atoms;
 var $__nc_234=$__nc_1;var $__w_035=$16;label=23;break;
 case 23: 
 var $__w_035;
 var $__nc_234;
 var $__first_addr_i_0=$arraydecay9;label=24;break;
 case 24: 
 var $__first_addr_i_0;
 var $cmp_i=($__first_addr_i_0|0)==($add_ptr_i|0);
 if($cmp_i){var $__first_addr_i_0_lcssa=$add_ptr_i;label=26;break;}else{label=25;break;}
 case 25: 
 var $28=HEAP8[($__first_addr_i_0)];
 var $29=HEAP8[($__w_035)];
 var $cmp2_i=(($28<<24)>>24)==(($29<<24)>>24);
 var $incdec_ptr_i=(($__first_addr_i_0+1)|0);
 if($cmp2_i){var $__first_addr_i_0_lcssa=$__first_addr_i_0;label=26;break;}else{var $__first_addr_i_0=$incdec_ptr_i;label=24;break;}
 case 26: 
 var $__first_addr_i_0_lcssa;
 var $sub_ptr_lhs_cast40=$__first_addr_i_0_lcssa;
 var $sub_ptr_sub42=((($sub_ptr_lhs_cast40)-($sub_ptr_rhs_cast41))|0);
 var $arrayidx=((3872+$sub_ptr_sub42)|0);
 var $30=HEAP8[($arrayidx)];
 HEAP8[($__nc_234)]=$30;
 var $incdec_ptr43=(($__w_035+1)|0);
 var $incdec_ptr44=(($__nc_234+1)|0);
 var $31=HEAP32[(($__wn)>>2)];
 var $cmp33=($incdec_ptr43>>>0)<($31>>>0);
 if($cmp33){var $__nc_234=$incdec_ptr44;var $__w_035=$incdec_ptr43;label=23;break;}else{var $__nc_2_lcssa=$incdec_ptr44;label=27;break;}
 case 27: 
 var $__nc_2_lcssa;
 HEAP8[($__nc_2_lcssa)]=0;
 var $call47=_sscanf($arraydecay12,3096,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$__v,tempVarArgs)); STACKTOP=tempVarArgs;
 var $cmp48=($call47|0)==1;
 if($cmp48){label=32;break;}else{label=28;break;}
 case 28: 
 var $exception_i=___cxa_allocate_exception(8);
 var $32=$exception_i;
 (function() { try { __THREW__ = 0; return __ZNSt13runtime_errorC2EPKc($32,3040) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=29;break; } else { label=31;break; }
 case 29: 
 (function() { try { __THREW__ = 0; return ___cxa_throw($exception_i,10280,(46)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=30;break; } else { var $__h_sroa_0_0=$__h_sroa_0_1;label=16;break; }
 case 30: 
 throw "Reached an unreachable!";
 case 31: 
 var $33$0 = ___cxa_find_matching_catch(-1, -1); var $33$1 = tempRet0;
 ___cxa_free_exception($exception_i);
 var $eh_lpad_body$1=$33$1;var $eh_lpad_body$0=$33$0;var $__h_sroa_0_0_lpad_body=$__h_sroa_0_1;label=17;break;
 case 32: 
 var $tobool_i_i_i247=($__h_sroa_0_1|0)==0;
 if($tobool_i_i_i247){label=34;break;}else{label=33;break;}
 case 33: 
 _free($__h_sroa_0_1);
 label=34;break;
 case 34: 
 var $__sbuf__i_i_i=(($__b)|0);
 var $34=HEAP32[(($__sbuf__i_i_i)>>2)];
 var $tobool_i_i_i219=($34|0)==0;
 if($tobool_i_i_i219){var $39=0;label=39;break;}else{label=35;break;}
 case 35: 
 var $__ninp__i_i_i_i=(($34+12)|0);
 var $35=HEAP32[(($__ninp__i_i_i_i)>>2)];
 var $__einp__i_i_i_i=(($34+16)|0);
 var $36=HEAP32[(($__einp__i_i_i_i)>>2)];
 var $cmp_i_i_i_i=($35|0)==($36|0);
 if($cmp_i_i_i_i){label=36;break;}else{var $39=$34;label=39;break;}
 case 36: 
 var $37=$34;
 var $vtable_i_i_i_i=HEAP32[(($37)>>2)];
 var $vfn_i_i_i_i=(($vtable_i_i_i_i+36)|0);
 var $38=HEAP32[(($vfn_i_i_i_i)>>2)];
 var $call_i_i_i_i222=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$38]($34) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=37;break; } else { label=15;break; }
 case 37: 
 var $cmp_i7_i_i_i=($call_i_i_i_i222|0)==-1;
 if($cmp_i7_i_i_i){label=38;break;}else{var $39=$34;label=39;break;}
 case 38: 
 HEAP32[(($__sbuf__i_i_i)>>2)]=0;
 var $39=0;label=39;break;
 case 39: 
 var $39;
 var $cmp_i_i_i=($39|0)==0;
 var $40=HEAP32[(($9)>>2)];
 var $tobool_i12_i_i=($40|0)==0;
 if($tobool_i12_i_i){label=45;break;}else{label=40;break;}
 case 40: 
 var $__ninp__i_i15_i_i=(($40+12)|0);
 var $41=HEAP32[(($__ninp__i_i15_i_i)>>2)];
 var $__einp__i_i16_i_i=(($40+16)|0);
 var $42=HEAP32[(($__einp__i_i16_i_i)>>2)];
 var $cmp_i_i17_i_i=($41|0)==($42|0);
 if($cmp_i_i17_i_i){label=42;break;}else{label=41;break;}
 case 41: 
 if($cmp_i_i_i){label=48;break;}else{label=47;break;}
 case 42: 
 var $43=$40;
 var $vtable_i_i19_i_i=HEAP32[(($43)>>2)];
 var $vfn_i_i20_i_i=(($vtable_i_i19_i_i+36)|0);
 var $44=HEAP32[(($vfn_i_i20_i_i)>>2)];
 var $call_i_i21_i_i223=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$44]($40) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=43;break; } else { label=15;break; }
 case 43: 
 var $cmp_i7_i26_i_i=($call_i_i21_i_i223|0)==-1;
 if($cmp_i7_i26_i_i){label=44;break;}else{label=46;break;}
 case 44: 
 HEAP32[(($9)>>2)]=0;
 label=45;break;
 case 45: 
 if($cmp_i_i_i){label=47;break;}else{label=48;break;}
 case 46: 
 var $cmp_i31_i_i=($40|0)==0;
 var $cmp_i_itmp=$cmp_i_i_i^$cmp_i31_i_i;
 if($cmp_i_itmp){label=48;break;}else{label=47;break;}
 case 47: 
 var $45=HEAP32[(($__err)>>2)];
 var $or=$45|2;
 HEAP32[(($__err)>>2)]=$or;
 label=48;break;
 case 48: 
 var $46=(($agg_result)|0);
 HEAP32[(($46)>>2)]=$39;
 var $47=HEAP32[(($__locale__i)>>2)];
 var $48=(($47)|0);
 var $call_i=__ZNSt3__114__shared_count16__release_sharedEv($48);
 var $49=HEAP32[(($__first__i_i_i_i_i)>>2)];
 HEAP32[(($__first__i_i_i_i_i)>>2)]=0;
 var $tobool_i_i_i133=($49|0)==0;
 if($tobool_i_i_i133){label=51;break;}else{label=49;break;}
 case 49: 
 var $50=HEAP32[(($__second__i_i_i_i_i)>>2)];
 (function() { try { __THREW__ = 0; return FUNCTION_TABLE[$50]($49) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=51;break; } else { label=50;break; }
 case 50: 
 var $51$0 = ___cxa_find_matching_catch(-1, -1,0); var $51$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 51: 
 STACKTOP=sp;return;
 case 52: 
 var $exn_slot_0;
 var $ehselector_slot_0;
 var $52=HEAP32[(($__locale__i)>>2)];
 var $53=(($52)|0);
 var $call_i30=__ZNSt3__114__shared_count16__release_sharedEv($53);
 var $_pre=HEAP32[(($__first__i_i_i_i_i)>>2)];
 HEAP32[(($__first__i_i_i_i_i)>>2)]=0;
 var $tobool_i_i_i=($_pre|0)==0;
 if($tobool_i_i_i){var $exn_slot_141=$exn_slot_0;var $ehselector_slot_143=$ehselector_slot_0;label=55;break;}else{var $54=$_pre;var $exn_slot_140=$exn_slot_0;var $ehselector_slot_142=$ehselector_slot_0;label=53;break;}
 case 53: 
 var $ehselector_slot_142;
 var $exn_slot_140;
 var $54;
 var $55=HEAP32[(($__second__i_i_i_i_i)>>2)];
 (function() { try { __THREW__ = 0; return FUNCTION_TABLE[$55]($54) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $exn_slot_141=$exn_slot_140;var $ehselector_slot_143=$ehselector_slot_142;label=55;break; } else { label=54;break; }
 case 54: 
 var $56$0 = ___cxa_find_matching_catch(-1, -1,0); var $56$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 55: 
 var $ehselector_slot_143;
 var $exn_slot_141;
 var $lpad_val$0=$exn_slot_141;
 var $lpad_val$1=0;
 var $lpad_val58$0=$lpad_val$0;
 var $lpad_val58$1=$ehselector_slot_143;
 ___resumeException($lpad_val58$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__112__do_nothingEPv($0){
 var label=0;
 return;
}
function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_($__b,$__e,$__intl,$__loc,$__flags,$__err,$__neg,$__ct,$__wb,$__wn,$__we){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+440)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__gbuf=sp;
 var $__pat=(sp)+(400);
 var $__dp=(sp)+(408);
 var $__ts=(sp)+(416);
 var $__grp=(sp)+(424);
 var $__size__i_i1919=$__grp;
 var $__sym=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__psn=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__nsn=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__spaces=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__fd=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__et=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $arraydecay=(($__gbuf)|0);
 HEAP32[(($__size__i_i1919)>>2)]=0; HEAP32[((($__size__i_i1919)+(4))>>2)]=0; HEAP32[((($__size__i_i1919)+(8))>>2)]=0;
 var $__size__i_i_i1871=$__sym;
 var $__size__i_i920=$__psn;
 var $__size__i_i961=$__nsn;
 var $__size__i_i2356=$__spaces;
 HEAP32[(($__size__i_i_i1871)>>2)]=0; HEAP32[((($__size__i_i_i1871)+(4))>>2)]=0; HEAP32[((($__size__i_i_i1871)+(8))>>2)]=0;
 HEAP32[(($__size__i_i920)>>2)]=0; HEAP32[((($__size__i_i920)+(4))>>2)]=0; HEAP32[((($__size__i_i920)+(8))>>2)]=0;
 HEAP32[(($__size__i_i961)>>2)]=0; HEAP32[((($__size__i_i961)+(4))>>2)]=0; HEAP32[((($__size__i_i961)+(8))>>2)]=0;
 HEAP32[(($__size__i_i2356)>>2)]=0; HEAP32[((($__size__i_i2356)+(4))>>2)]=0; HEAP32[((($__size__i_i2356)+(8))>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri($__intl,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__psn,$__nsn,$__fd) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=25;break; }
 case 2: 
 var $add_ptr=(($__gbuf+400)|0);
 var $__first__i_i_i570=(($__wb)|0);
 var $0=HEAP32[(($__first__i_i_i570)>>2)];
 HEAP32[(($__wn)>>2)]=$0;
 var $__sbuf__i_i_i627=(($__b)|0);
 var $__sbuf__i11_i_i649=(($__e)|0);
 var $__tab__i=(($__ct+8)|0);
 var $__s_i_i919=$__psn;
 var $__s_i_i960=$__nsn;
 var $arrayidx_i_i_i1394=(($__s_i_i960+1)|0);
 var $__size__i23_i1466=(($__nsn+4)|0);
 var $__data__i21_i_i1385=(($__nsn+8)|0);
 var $arrayidx_i_i_i1202=(($__s_i_i919+1)|0);
 var $__size__i23_i1319=(($__psn+4)|0);
 var $__data__i21_i_i=(($__psn+8)|0);
 var $and315=$__flags&512;
 var $cmp128316=($and315|0)!=0;
 var $__s_i_i_i1870=$__sym;
 var $arrayidx_i_i_i1890=(($__s_i_i_i1870+1)|0);
 var $__size__i23_i_i=(($__sym+4)|0);
 var $__data__i21_i_i1977=(($__sym+8)|0);
 var $__s_i_i2355=$__spaces;
 var $arrayidx_i_i_i2503=(($__s_i_i2355+1)|0);
 var $__size__i23_i_i2870=(($__spaces+4)|0);
 var $__data__i21_i_i2840=(($__spaces+8)|0);
 var $arrayidx122=(($__pat+3)|0);
 var $__size__i23_i1929=(($__grp+4)|0);
 var $__second__i_i_i_i=(($__wb+4)|0);
 var $__we303456=$__we;var $__gb_sroa_1_4_load271297459=448;var $1=$arraydecay;var $__gb_sroa_0_0_load261282462=$arraydecay;var $add_ptr276465=$add_ptr;var $__trailing_sign_0468=0;var $__p_0470=0;label=3;break;
 case 3: 
 var $__p_0470;
 var $__trailing_sign_0468;
 var $add_ptr276465;
 var $__gb_sroa_0_0_load261282462;
 var $1;
 var $__gb_sroa_1_4_load271297459;
 var $__we303456;
 var $2=HEAP32[(($__sbuf__i_i_i627)>>2)];
 var $tobool_i_i_i628=($2|0)==0;
 if($tobool_i_i_i628){var $7=0;label=9;break;}else{label=4;break;}
 case 4: 
 var $__ninp__i_i_i_i631=(($2+12)|0);
 var $3=HEAP32[(($__ninp__i_i_i_i631)>>2)];
 var $__einp__i_i_i_i632=(($2+16)|0);
 var $4=HEAP32[(($__einp__i_i_i_i632)>>2)];
 var $cmp_i_i_i_i633=($3|0)==($4|0);
 if($cmp_i_i_i_i633){label=5;break;}else{var $7=$2;label=9;break;}
 case 5: 
 var $5=$2;
 var $vtable_i_i_i_i635=HEAP32[(($5)>>2)];
 var $vfn_i_i_i_i636=(($vtable_i_i_i_i635+36)|0);
 var $6=HEAP32[(($vfn_i_i_i_i636)>>2)];
 var $call_i_i_i_i673=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$6]($2) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=6;break; } else { var $_ph_ph334_ph_ph_ph_ph_ph=$1;var $__gb_sroa_1_4_load271290_ph_ph333_ph_ph_ph_ph_ph=$__gb_sroa_1_4_load271297459;label=24;break; }
 case 6: 
 var $cmp_i7_i_i_i641=($call_i_i_i_i673|0)==-1;
 if($cmp_i7_i_i_i641){label=8;break;}else{label=7;break;}
 case 7: 
 var $_pre544=HEAP32[(($__sbuf__i_i_i627)>>2)];
 var $7=$_pre544;label=9;break;
 case 8: 
 HEAP32[(($__sbuf__i_i_i627)>>2)]=0;
 var $7=0;label=9;break;
 case 9: 
 var $7;
 var $cmp_i_i_i646=($7|0)==0;
 var $8=HEAP32[(($__sbuf__i11_i_i649)>>2)];
 var $tobool_i12_i_i650=($8|0)==0;
 if($tobool_i12_i_i650){label=15;break;}else{label=10;break;}
 case 10: 
 var $__ninp__i_i15_i_i654=(($8+12)|0);
 var $9=HEAP32[(($__ninp__i_i15_i_i654)>>2)];
 var $__einp__i_i16_i_i655=(($8+16)|0);
 var $10=HEAP32[(($__einp__i_i16_i_i655)>>2)];
 var $cmp_i_i17_i_i656=($9|0)==($10|0);
 if($cmp_i_i17_i_i656){label=12;break;}else{label=11;break;}
 case 11: 
 if($cmp_i_i_i646){var $13=$8;label=17;break;}else{var $__gb_sroa_1_4_load271297_lcssa=$__gb_sroa_1_4_load271297459;var $_lcssa=$1;var $__gb_sroa_0_0_load261282_lcssa=$__gb_sroa_0_0_load261282462;var $__trailing_sign_0_lcssa=$__trailing_sign_0468;label=274;break;}
 case 12: 
 var $11=$8;
 var $vtable_i_i19_i_i658=HEAP32[(($11)>>2)];
 var $vfn_i_i20_i_i659=(($vtable_i_i19_i_i658+36)|0);
 var $12=HEAP32[(($vfn_i_i20_i_i659)>>2)];
 var $call_i_i21_i_i675=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$12]($8) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=13;break; } else { var $_ph_ph334_ph_ph_ph_ph_ph=$1;var $__gb_sroa_1_4_load271290_ph_ph333_ph_ph_ph_ph_ph=$__gb_sroa_1_4_load271297459;label=24;break; }
 case 13: 
 var $cmp_i7_i26_i_i664=($call_i_i21_i_i675|0)==-1;
 if($cmp_i7_i26_i_i664){label=14;break;}else{label=16;break;}
 case 14: 
 HEAP32[(($__sbuf__i11_i_i649)>>2)]=0;
 label=15;break;
 case 15: 
 if($cmp_i_i_i646){var $__gb_sroa_1_4_load271297_lcssa=$__gb_sroa_1_4_load271297459;var $_lcssa=$1;var $__gb_sroa_0_0_load261282_lcssa=$__gb_sroa_0_0_load261282462;var $__trailing_sign_0_lcssa=$__trailing_sign_0468;label=274;break;}else{var $13=0;label=17;break;}
 case 16: 
 if($cmp_i_i_i646){var $13=$8;label=17;break;}else{var $__gb_sroa_1_4_load271297_lcssa=$__gb_sroa_1_4_load271297459;var $_lcssa=$1;var $__gb_sroa_0_0_load261282_lcssa=$__gb_sroa_0_0_load261282462;var $__trailing_sign_0_lcssa=$__trailing_sign_0468;label=274;break;}
 case 17: 
 var $13;
 var $arrayidx=(($__pat+$__p_0470)|0);
 var $14=HEAP8[($arrayidx)];
 var $conv=(($14<<24)>>24);
 switch(($conv|0)){case 2:{ label=111;break;}case 4:{ var $__ng_0=0;var $add_ptr279=$add_ptr276465;var $__gb_sroa_0_0_load261285=$__gb_sroa_0_0_load261282462;var $169=$1;var $__gb_sroa_1_4_load271295=$__gb_sroa_1_4_load271297459;var $__we308=$__we303456;label=155;break;}case 1:{ label=29;break;}case 0:{ label=43;break;}case 3:{ label=70;break;}default:{var $__trailing_sign_1=$__trailing_sign_0468;var $add_ptr277=$add_ptr276465;var $__gb_sroa_0_0_load261283=$__gb_sroa_0_0_load261282462;var $282=$1;var $__gb_sroa_1_4_load271296=$__gb_sroa_1_4_load271297459;var $__we304=$__we303456;label=273;break;}}break;
 case 18: 
 var $lpad_loopexit331$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_loopexit331$1 = tempRet0;
 var $lpad_phi$1=$lpad_loopexit331$1;var $lpad_phi$0=$lpad_loopexit331$0;var $15=$_lcssa;var $__gb_sroa_1_4_load271290=$__gb_sroa_1_4_load271297_lcssa;label=26;break;
 case 19: 
 var $__gb_sroa_1_4_load271290_ph_ph;
 var $_ph_ph;
 var $lpad_loopexit335$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_loopexit335$1 = tempRet0;
 var $lpad_phi$1=$lpad_loopexit335$1;var $lpad_phi$0=$lpad_loopexit335$0;var $15=$_ph_ph;var $__gb_sroa_1_4_load271290=$__gb_sroa_1_4_load271290_ph_ph;label=26;break;
 case 20: 
 var $lpad_loopexit356$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_loopexit356$1 = tempRet0;
 var $lpad_phi$1=$lpad_loopexit356$1;var $lpad_phi$0=$lpad_loopexit356$0;var $15=$210;var $__gb_sroa_1_4_load271290=$__gb_sroa_1_4_load271292;label=26;break;
 case 21: 
 var $lpad_loopexit364$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_loopexit364$1 = tempRet0;
 var $lpad_phi$1=$lpad_loopexit364$1;var $lpad_phi$0=$lpad_loopexit364$0;var $15=$1;var $__gb_sroa_1_4_load271290=$__gb_sroa_1_4_load271297459;label=26;break;
 case 22: 
 var $lpad_loopexit371$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_loopexit371$1 = tempRet0;
 var $lpad_phi$1=$lpad_loopexit371$1;var $lpad_phi$0=$lpad_loopexit371$0;var $15=$1;var $__gb_sroa_1_4_load271290=$__gb_sroa_1_4_load271297459;label=26;break;
 case 23: 
 var $lpad_loopexit375$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_loopexit375$1 = tempRet0;
 var $lpad_phi$1=$lpad_loopexit375$1;var $lpad_phi$0=$lpad_loopexit375$0;var $15=$1;var $__gb_sroa_1_4_load271290=$__gb_sroa_1_4_load271297459;label=26;break;
 case 24: 
 var $__gb_sroa_1_4_load271290_ph_ph333_ph_ph_ph_ph_ph;
 var $_ph_ph334_ph_ph_ph_ph_ph;
 var $lpad_loopexit378$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_loopexit378$1 = tempRet0;
 var $lpad_phi$1=$lpad_loopexit378$1;var $lpad_phi$0=$lpad_loopexit378$0;var $15=$_ph_ph334_ph_ph_ph_ph_ph;var $__gb_sroa_1_4_load271290=$__gb_sroa_1_4_load271290_ph_ph333_ph_ph_ph_ph_ph;label=26;break;
 case 25: 
 var $lpad_nonloopexit379$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_nonloopexit379$1 = tempRet0;
 var $lpad_phi$1=$lpad_nonloopexit379$1;var $lpad_phi$0=$lpad_nonloopexit379$0;var $15=$arraydecay;var $__gb_sroa_1_4_load271290=448;label=26;break;
 case 26: 
 var $__gb_sroa_1_4_load271290;
 var $15;
 var $lpad_phi$0;
 var $lpad_phi$1;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__spaces);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__nsn);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__psn);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grp);
 var $tobool_i_i_i698=($15|0)==0;
 if($tobool_i_i_i698){label=312;break;}else{label=27;break;}
 case 27: 
 var $16=$15;
 (function() { try { __THREW__ = 0; return FUNCTION_TABLE[$__gb_sroa_1_4_load271290]($16) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=312;break; } else { label=28;break; }
 case 28: 
 var $17$0 = ___cxa_find_matching_catch(-1, -1,0); var $17$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 29: 
 var $cond=($__p_0470|0)==3;
 if($cond){var $__gb_sroa_1_4_load271297_lcssa=$__gb_sroa_1_4_load271297459;var $_lcssa=$1;var $__gb_sroa_0_0_load261282_lcssa=$__gb_sroa_0_0_load261282462;var $__trailing_sign_0_lcssa=$__trailing_sign_0468;label=274;break;}else{label=30;break;}
 case 30: 
 var $18=HEAP32[(($__sbuf__i_i_i627)>>2)];
 var $__ninp__i_i714=(($18+12)|0);
 var $19=HEAP32[(($__ninp__i_i714)>>2)];
 var $__einp__i_i715=(($18+16)|0);
 var $20=HEAP32[(($__einp__i_i715)>>2)];
 var $cmp_i_i716=($19|0)==($20|0);
 if($cmp_i_i716){label=31;break;}else{label=33;break;}
 case 31: 
 var $21=$18;
 var $vtable_i_i717=HEAP32[(($21)>>2)];
 var $vfn_i_i718=(($vtable_i_i717+36)|0);
 var $22=HEAP32[(($vfn_i_i718)>>2)];
 var $call_i_i725=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$22]($18) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=32;break; } else { var $_ph_ph334_ph_ph_ph_ph_ph=$1;var $__gb_sroa_1_4_load271290_ph_ph333_ph_ph_ph_ph_ph=$__gb_sroa_1_4_load271297459;label=24;break; }
 case 32: 
 var $extract_t147=(($call_i_i725)&255);
 var $retval_i_i708_0_off0=$extract_t147;label=34;break;
 case 33: 
 var $23=HEAP8[($19)];
 var $retval_i_i708_0_off0=$23;label=34;break;
 case 34: 
 var $retval_i_i708_0_off0;
 var $conv_i729=(($retval_i_i708_0_off0<<24)>>24);
 var $call_i733=(function() { try { __THREW__ = 0; return _isascii($conv_i729) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=35;break; } else { var $_ph_ph334_ph_ph_ph_ph_ph=$1;var $__gb_sroa_1_4_load271290_ph_ph333_ph_ph_ph_ph_ph=$__gb_sroa_1_4_load271297459;label=24;break; }
 case 35: 
 var $tobool_i=($call_i733|0)==0;
 if($tobool_i){label=42;break;}else{label=36;break;}
 case 36: 
 var $24=HEAP32[(($__tab__i)>>2)];
 var $arrayidx_i=(($24+($conv_i729<<1))|0);
 var $25=HEAP16[(($arrayidx_i)>>1)];
 var $and_i=$25&8192;
 var $cmp_i=(($and_i<<16)>>16)==0;
 if($cmp_i){label=42;break;}else{label=37;break;}
 case 37: 
 var $26=HEAP32[(($__sbuf__i_i_i627)>>2)];
 var $__ninp__i_i742=(($26+12)|0);
 var $27=HEAP32[(($__ninp__i_i742)>>2)];
 var $__einp__i_i743=(($26+16)|0);
 var $28=HEAP32[(($__einp__i_i743)>>2)];
 var $cmp_i_i744=($27|0)==($28|0);
 if($cmp_i_i744){label=38;break;}else{label=40;break;}
 case 38: 
 var $29=$26;
 var $vtable_i_i745=HEAP32[(($29)>>2)];
 var $vfn_i_i746=(($vtable_i_i745+40)|0);
 var $30=HEAP32[(($vfn_i_i746)>>2)];
 var $call_i_i756=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$30]($26) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=39;break; } else { var $_ph_ph334_ph_ph_ph_ph_ph=$1;var $__gb_sroa_1_4_load271290_ph_ph333_ph_ph_ph_ph_ph=$__gb_sroa_1_4_load271297459;label=24;break; }
 case 39: 
 var $extract_t149=(($call_i_i756)&255);
 var $retval_i_i736_0_off0=$extract_t149;label=41;break;
 case 40: 
 var $incdec_ptr_i_i749=(($27+1)|0);
 HEAP32[(($__ninp__i_i742)>>2)]=$incdec_ptr_i_i749;
 var $31=HEAP8[($27)];
 var $retval_i_i736_0_off0=$31;label=41;break;
 case 41: 
 var $retval_i_i736_0_off0;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($__spaces,$retval_i_i736_0_off0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=43;break; } else { var $_ph_ph334_ph_ph_ph_ph_ph=$1;var $__gb_sroa_1_4_load271290_ph_ph333_ph_ph_ph_ph_ph=$__gb_sroa_1_4_load271297459;label=24;break; }
 case 42: 
 var $32=HEAP32[(($__err)>>2)];
 var $or=$32|4;
 HEAP32[(($__err)>>2)]=$or;
 var $retval_0=0;var $313=$1;var $__gb_sroa_1_4_load271298=$__gb_sroa_1_4_load271297459;label=308;break;
 case 43: 
 var $cmp16=($__p_0470|0)==3;
 if($cmp16){var $__gb_sroa_1_4_load271297_lcssa=$__gb_sroa_1_4_load271297459;var $_lcssa=$1;var $__gb_sroa_0_0_load261282_lcssa=$__gb_sroa_0_0_load261282462;var $__trailing_sign_0_lcssa=$__trailing_sign_0468;label=274;break;}else{var $33=$13;label=44;break;}
 case 44: 
 var $33;
 var $34=HEAP32[(($__sbuf__i_i_i627)>>2)];
 var $tobool_i_i_i778=($34|0)==0;
 if($tobool_i_i_i778){var $39=0;label=50;break;}else{label=45;break;}
 case 45: 
 var $__ninp__i_i_i_i781=(($34+12)|0);
 var $35=HEAP32[(($__ninp__i_i_i_i781)>>2)];
 var $__einp__i_i_i_i782=(($34+16)|0);
 var $36=HEAP32[(($__einp__i_i_i_i782)>>2)];
 var $cmp_i_i_i_i783=($35|0)==($36|0);
 if($cmp_i_i_i_i783){label=46;break;}else{var $39=$34;label=50;break;}
 case 46: 
 var $37=$34;
 var $vtable_i_i_i_i785=HEAP32[(($37)>>2)];
 var $vfn_i_i_i_i786=(($vtable_i_i_i_i785+36)|0);
 var $38=HEAP32[(($vfn_i_i_i_i786)>>2)];
 var $call_i_i_i_i824=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$38]($34) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=47;break; } else { label=23;break; }
 case 47: 
 var $cmp_i7_i_i_i791=($call_i_i_i_i824|0)==-1;
 if($cmp_i7_i_i_i791){label=49;break;}else{label=48;break;}
 case 48: 
 var $_pre545=HEAP32[(($__sbuf__i_i_i627)>>2)];
 var $39=$_pre545;label=50;break;
 case 49: 
 HEAP32[(($__sbuf__i_i_i627)>>2)]=0;
 var $39=0;label=50;break;
 case 50: 
 var $39;
 var $cmp_i_i_i796=($39|0)==0;
 var $tobool_i12_i_i800=($33|0)==0;
 if($tobool_i12_i_i800){label=56;break;}else{label=51;break;}
 case 51: 
 var $__ninp__i_i15_i_i804=(($33+12)|0);
 var $40=HEAP32[(($__ninp__i_i15_i_i804)>>2)];
 var $__einp__i_i16_i_i805=(($33+16)|0);
 var $41=HEAP32[(($__einp__i_i16_i_i805)>>2)];
 var $cmp_i_i17_i_i806=($40|0)==($41|0);
 if($cmp_i_i17_i_i806){label=53;break;}else{label=52;break;}
 case 52: 
 if($cmp_i_i_i796){var $44=$33;label=58;break;}else{var $__trailing_sign_1=$__trailing_sign_0468;var $add_ptr277=$add_ptr276465;var $__gb_sroa_0_0_load261283=$__gb_sroa_0_0_load261282462;var $282=$1;var $__gb_sroa_1_4_load271296=$__gb_sroa_1_4_load271297459;var $__we304=$__we303456;label=273;break;}
 case 53: 
 var $42=$33;
 var $vtable_i_i19_i_i808=HEAP32[(($42)>>2)];
 var $vfn_i_i20_i_i809=(($vtable_i_i19_i_i808+36)|0);
 var $43=HEAP32[(($vfn_i_i20_i_i809)>>2)];
 var $call_i_i21_i_i826=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$43]($33) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=54;break; } else { label=23;break; }
 case 54: 
 var $cmp_i7_i26_i_i814=($call_i_i21_i_i826|0)==-1;
 if($cmp_i7_i26_i_i814){label=55;break;}else{label=57;break;}
 case 55: 
 HEAP32[(($__sbuf__i11_i_i649)>>2)]=0;
 label=56;break;
 case 56: 
 if($cmp_i_i_i796){var $__trailing_sign_1=$__trailing_sign_0468;var $add_ptr277=$add_ptr276465;var $__gb_sroa_0_0_load261283=$__gb_sroa_0_0_load261282462;var $282=$1;var $__gb_sroa_1_4_load271296=$__gb_sroa_1_4_load271297459;var $__we304=$__we303456;label=273;break;}else{var $44=0;label=58;break;}
 case 57: 
 if($cmp_i_i_i796){var $44=$33;label=58;break;}else{var $__trailing_sign_1=$__trailing_sign_0468;var $add_ptr277=$add_ptr276465;var $__gb_sroa_0_0_load261283=$__gb_sroa_0_0_load261282462;var $282=$1;var $__gb_sroa_1_4_load271296=$__gb_sroa_1_4_load271297459;var $__we304=$__we303456;label=273;break;}
 case 58: 
 var $44;
 var $45=HEAP32[(($__sbuf__i_i_i627)>>2)];
 var $__ninp__i_i835=(($45+12)|0);
 var $46=HEAP32[(($__ninp__i_i835)>>2)];
 var $__einp__i_i836=(($45+16)|0);
 var $47=HEAP32[(($__einp__i_i836)>>2)];
 var $cmp_i_i837=($46|0)==($47|0);
 if($cmp_i_i837){label=59;break;}else{label=61;break;}
 case 59: 
 var $48=$45;
 var $vtable_i_i838=HEAP32[(($48)>>2)];
 var $vfn_i_i839=(($vtable_i_i838+36)|0);
 var $49=HEAP32[(($vfn_i_i839)>>2)];
 var $call_i_i846=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$49]($45) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=60;break; } else { label=23;break; }
 case 60: 
 var $extract_t143=(($call_i_i846)&255);
 var $retval_i_i829_0_off0=$extract_t143;label=62;break;
 case 61: 
 var $50=HEAP8[($46)];
 var $retval_i_i829_0_off0=$50;label=62;break;
 case 62: 
 var $retval_i_i829_0_off0;
 var $conv_i852=(($retval_i_i829_0_off0<<24)>>24);
 var $call_i865=(function() { try { __THREW__ = 0; return _isascii($conv_i852) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=63;break; } else { label=23;break; }
 case 63: 
 var $tobool_i853=($call_i865|0)==0;
 if($tobool_i853){var $__trailing_sign_1=$__trailing_sign_0468;var $add_ptr277=$add_ptr276465;var $__gb_sroa_0_0_load261283=$__gb_sroa_0_0_load261282462;var $282=$1;var $__gb_sroa_1_4_load271296=$__gb_sroa_1_4_load271297459;var $__we304=$__we303456;label=273;break;}else{label=64;break;}
 case 64: 
 var $51=HEAP32[(($__tab__i)>>2)];
 var $arrayidx_i856=(($51+($conv_i852<<1))|0);
 var $52=HEAP16[(($arrayidx_i856)>>1)];
 var $and_i859=$52&8192;
 var $cmp_i860=(($and_i859<<16)>>16)==0;
 if($cmp_i860){var $__trailing_sign_1=$__trailing_sign_0468;var $add_ptr277=$add_ptr276465;var $__gb_sroa_0_0_load261283=$__gb_sroa_0_0_load261282462;var $282=$1;var $__gb_sroa_1_4_load271296=$__gb_sroa_1_4_load271297459;var $__we304=$__we303456;label=273;break;}else{label=65;break;}
 case 65: 
 var $53=HEAP32[(($__sbuf__i_i_i627)>>2)];
 var $__ninp__i_i881=(($53+12)|0);
 var $54=HEAP32[(($__ninp__i_i881)>>2)];
 var $__einp__i_i882=(($53+16)|0);
 var $55=HEAP32[(($__einp__i_i882)>>2)];
 var $cmp_i_i883=($54|0)==($55|0);
 if($cmp_i_i883){label=66;break;}else{label=68;break;}
 case 66: 
 var $56=$53;
 var $vtable_i_i884=HEAP32[(($56)>>2)];
 var $vfn_i_i885=(($vtable_i_i884+40)|0);
 var $57=HEAP32[(($vfn_i_i885)>>2)];
 var $call_i_i898=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$57]($53) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=67;break; } else { label=23;break; }
 case 67: 
 var $extract_t145=(($call_i_i898)&255);
 var $retval_i_i874_0_off0=$extract_t145;label=69;break;
 case 68: 
 var $incdec_ptr_i_i888=(($54+1)|0);
 HEAP32[(($__ninp__i_i881)>>2)]=$incdec_ptr_i_i888;
 var $58=HEAP8[($54)];
 var $retval_i_i874_0_off0=$58;label=69;break;
 case 69: 
 var $retval_i_i874_0_off0;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($__spaces,$retval_i_i874_0_off0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $33=$44;label=44;break; } else { label=23;break; }
 case 70: 
 var $59=HEAP8[($__size__i_i920)];
 var $conv_i_i921=($59&255);
 var $and_i_i922=$conv_i_i921&1;
 var $tobool_i_i923=($and_i_i922|0)==0;
 var $60=HEAP32[(($__size__i23_i1319)>>2)];
 var $shr_i_i940126=$conv_i_i921>>>1;
 var $cond_i942=($tobool_i_i923?$shr_i_i940126:$60);
 var $61=HEAP8[($__size__i_i961)];
 var $conv_i_i962=($61&255);
 var $and_i_i963=$conv_i_i962&1;
 var $tobool_i_i964=($and_i_i963|0)==0;
 var $62=HEAP32[(($__size__i23_i1466)>>2)];
 var $shr_i_i981127=$conv_i_i962>>>1;
 var $cond_i983=($tobool_i_i964?$shr_i_i981127:$62);
 var $add=(((-$cond_i983))|0);
 var $cmp35=($cond_i942|0)==($add|0);
 if($cmp35){var $__trailing_sign_1=$__trailing_sign_0468;var $add_ptr277=$add_ptr276465;var $__gb_sroa_0_0_load261283=$__gb_sroa_0_0_load261282462;var $282=$1;var $__gb_sroa_1_4_load271296=$__gb_sroa_1_4_load271297459;var $__we304=$__we303456;label=273;break;}else{label=71;break;}
 case 71: 
 var $cmp38=($cond_i942|0)==0;
 var $cmp40=($cond_i983|0)==0;
 var $or_cond584=$cmp38|$cmp40;
 var $63=HEAP32[(($__sbuf__i_i_i627)>>2)];
 var $__ninp__i_i1340=(($63+12)|0);
 var $64=HEAP32[(($__ninp__i_i1340)>>2)];
 var $__einp__i_i1341=(($63+16)|0);
 var $65=HEAP32[(($__einp__i_i1341)>>2)];
 var $cmp_i_i1342=($64|0)==($65|0);
 if($or_cond584){label=72;break;}else{label=92;break;}
 case 72: 
 if($cmp38){label=83;break;}else{label=73;break;}
 case 73: 
 if($cmp_i_i1342){label=74;break;}else{label=76;break;}
 case 74: 
 var $66=$63;
 var $vtable_i_i1177=HEAP32[(($66)>>2)];
 var $vfn_i_i1178=(($vtable_i_i1177+36)|0);
 var $67=HEAP32[(($vfn_i_i1178)>>2)];
 var $call_i_i1185=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$67]($63) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=75;break; } else { var $_ph_ph334_ph_ph_ph_ph_ph=$1;var $__gb_sroa_1_4_load271290_ph_ph333_ph_ph_ph_ph_ph=$__gb_sroa_1_4_load271297459;label=24;break; }
 case 75: 
 var $extract_t140=(($call_i_i1185)&255);
 var $_pre540=HEAP8[($__size__i_i920)];
 var $retval_i_i1168_0_off0=$extract_t140;var $69=$_pre540;label=77;break;
 case 76: 
 var $68=HEAP8[($64)];
 var $retval_i_i1168_0_off0=$68;var $69=$59;label=77;break;
 case 77: 
 var $69;
 var $retval_i_i1168_0_off0;
 var $and_i_i_i=$69&1;
 var $tobool_i_i_i1201=(($and_i_i_i<<24)>>24)==0;
 var $70=HEAP32[(($__data__i21_i_i)>>2)];
 var $arrayidx_i_i_i1202_=($tobool_i_i_i1201?$arrayidx_i_i_i1202:$70);
 var $71=HEAP8[($arrayidx_i_i_i1202_)];
 var $cmp51=(($retval_i_i1168_0_off0<<24)>>24)==(($71<<24)>>24);
 if($cmp51){label=78;break;}else{label=82;break;}
 case 78: 
 var $72=HEAP32[(($__sbuf__i_i_i627)>>2)];
 var $__ninp__i_i1279=(($72+12)|0);
 var $73=HEAP32[(($__ninp__i_i1279)>>2)];
 var $__einp__i_i1280=(($72+16)|0);
 var $74=HEAP32[(($__einp__i_i1280)>>2)];
 var $cmp_i_i1281=($73|0)==($74|0);
 if($cmp_i_i1281){label=79;break;}else{label=80;break;}
 case 79: 
 var $75=$72;
 var $vtable_i_i1282=HEAP32[(($75)>>2)];
 var $vfn_i_i1283=(($vtable_i_i1282+40)|0);
 var $76=HEAP32[(($vfn_i_i1283)>>2)];
 var $call_i_i1290=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$76]($72) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=81;break; } else { var $_ph_ph334_ph_ph_ph_ph_ph=$1;var $__gb_sroa_1_4_load271290_ph_ph333_ph_ph_ph_ph_ph=$__gb_sroa_1_4_load271297459;label=24;break; }
 case 80: 
 var $incdec_ptr_i_i1286=(($73+1)|0);
 HEAP32[(($__ninp__i_i1279)>>2)]=$incdec_ptr_i_i1286;
 label=81;break;
 case 81: 
 var $77=HEAP8[($__size__i_i920)];
 var $conv_i_i1310=($77&255);
 var $and_i_i1311=$conv_i_i1310&1;
 var $tobool_i_i1312=($and_i_i1311|0)==0;
 var $78=HEAP32[(($__size__i23_i1319)>>2)];
 var $shr_i_i1329142=$conv_i_i1310>>>1;
 var $cond_i1331=($tobool_i_i1312?$shr_i_i1329142:$78);
 var $cmp56=($cond_i1331>>>0)>1;
 var $__psn___trailing_sign_0=($cmp56?$__psn:$__trailing_sign_0468);
 var $__trailing_sign_1=$__psn___trailing_sign_0;var $add_ptr277=$add_ptr276465;var $__gb_sroa_0_0_load261283=$__gb_sroa_0_0_load261282462;var $282=$1;var $__gb_sroa_1_4_load271296=$__gb_sroa_1_4_load271297459;var $__we304=$__we303456;label=273;break;
 case 82: 
 HEAP8[($__neg)]=1;
 var $__trailing_sign_1=$__trailing_sign_0468;var $add_ptr277=$add_ptr276465;var $__gb_sroa_0_0_load261283=$__gb_sroa_0_0_load261282462;var $282=$1;var $__gb_sroa_1_4_load271296=$__gb_sroa_1_4_load271297459;var $__we304=$__we303456;label=273;break;
 case 83: 
 if($cmp_i_i1342){label=84;break;}else{label=86;break;}
 case 84: 
 var $79=$63;
 var $vtable_i_i1343=HEAP32[(($79)>>2)];
 var $vfn_i_i1344=(($vtable_i_i1343+36)|0);
 var $80=HEAP32[(($vfn_i_i1344)>>2)];
 var $call_i_i1351=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$80]($63) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=85;break; } else { var $_ph_ph334_ph_ph_ph_ph_ph=$1;var $__gb_sroa_1_4_load271290_ph_ph333_ph_ph_ph_ph_ph=$__gb_sroa_1_4_load271297459;label=24;break; }
 case 85: 
 var $extract_t137=(($call_i_i1351)&255);
 var $_pre=HEAP8[($__size__i_i961)];
 var $retval_i_i1334_0_off0=$extract_t137;var $82=$_pre;label=87;break;
 case 86: 
 var $81=HEAP8[($64)];
 var $retval_i_i1334_0_off0=$81;var $82=$61;label=87;break;
 case 87: 
 var $82;
 var $retval_i_i1334_0_off0;
 var $and_i_i_i1377=$82&1;
 var $tobool_i_i_i1378=(($and_i_i_i1377<<24)>>24)==0;
 var $83=HEAP32[(($__data__i21_i_i1385)>>2)];
 var $arrayidx_i_i_i1394_=($tobool_i_i_i1378?$arrayidx_i_i_i1394:$83);
 var $84=HEAP8[($arrayidx_i_i_i1394_)];
 var $cmp68=(($retval_i_i1334_0_off0<<24)>>24)==(($84<<24)>>24);
 if($cmp68){label=88;break;}else{var $__trailing_sign_1=$__trailing_sign_0468;var $add_ptr277=$add_ptr276465;var $__gb_sroa_0_0_load261283=$__gb_sroa_0_0_load261282462;var $282=$1;var $__gb_sroa_1_4_load271296=$__gb_sroa_1_4_load271297459;var $__we304=$__we303456;label=273;break;}
 case 88: 
 var $85=HEAP32[(($__sbuf__i_i_i627)>>2)];
 var $__ninp__i_i1426=(($85+12)|0);
 var $86=HEAP32[(($__ninp__i_i1426)>>2)];
 var $__einp__i_i1427=(($85+16)|0);
 var $87=HEAP32[(($__einp__i_i1427)>>2)];
 var $cmp_i_i1428=($86|0)==($87|0);
 if($cmp_i_i1428){label=89;break;}else{label=90;break;}
 case 89: 
 var $88=$85;
 var $vtable_i_i1429=HEAP32[(($88)>>2)];
 var $vfn_i_i1430=(($vtable_i_i1429+40)|0);
 var $89=HEAP32[(($vfn_i_i1430)>>2)];
 var $call_i_i1437=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$89]($85) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=91;break; } else { var $_ph_ph334_ph_ph_ph_ph_ph=$1;var $__gb_sroa_1_4_load271290_ph_ph333_ph_ph_ph_ph_ph=$__gb_sroa_1_4_load271297459;label=24;break; }
 case 90: 
 var $incdec_ptr_i_i1433=(($86+1)|0);
 HEAP32[(($__ninp__i_i1426)>>2)]=$incdec_ptr_i_i1433;
 label=91;break;
 case 91: 
 HEAP8[($__neg)]=1;
 var $90=HEAP8[($__size__i_i961)];
 var $conv_i_i1457=($90&255);
 var $and_i_i1458=$conv_i_i1457&1;
 var $tobool_i_i1459=($and_i_i1458|0)==0;
 var $91=HEAP32[(($__size__i23_i1466)>>2)];
 var $shr_i_i1476139=$conv_i_i1457>>>1;
 var $cond_i1478=($tobool_i_i1459?$shr_i_i1476139:$91);
 var $cmp73=($cond_i1478>>>0)>1;
 var $__nsn___trailing_sign_0=($cmp73?$__nsn:$__trailing_sign_0468);
 var $__trailing_sign_1=$__nsn___trailing_sign_0;var $add_ptr277=$add_ptr276465;var $__gb_sroa_0_0_load261283=$__gb_sroa_0_0_load261282462;var $282=$1;var $__gb_sroa_1_4_load271296=$__gb_sroa_1_4_load271297459;var $__we304=$__we303456;label=273;break;
 case 92: 
 if($cmp_i_i1342){label=93;break;}else{label=95;break;}
 case 93: 
 var $92=$63;
 var $vtable_i_i1510=HEAP32[(($92)>>2)];
 var $vfn_i_i1511=(($vtable_i_i1510+36)|0);
 var $93=HEAP32[(($vfn_i_i1511)>>2)];
 var $call_i_i1518=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$93]($63) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=94;break; } else { var $_ph_ph334_ph_ph_ph_ph_ph=$1;var $__gb_sroa_1_4_load271290_ph_ph333_ph_ph_ph_ph_ph=$__gb_sroa_1_4_load271297459;label=24;break; }
 case 94: 
 var $extract_t130=(($call_i_i1518)&255);
 var $_pre541=HEAP8[($__size__i_i920)];
 var $_pre716=HEAP32[(($__sbuf__i_i_i627)>>2)];
 var $__ninp__i_i1641_phi_trans_insert=(($_pre716+12)|0);
 var $_pre717=HEAP32[(($__ninp__i_i1641_phi_trans_insert)>>2)];
 var $__einp__i_i1642_phi_trans_insert=(($_pre716+16)|0);
 var $_pre718=HEAP32[(($__einp__i_i1642_phi_trans_insert)>>2)];
 var $retval_i_i1501_0_off0=$extract_t130;var $98=$_pre541;var $97=$_pre716;var $96=$_pre717;var $95=$_pre718;label=96;break;
 case 95: 
 var $94=HEAP8[($64)];
 var $retval_i_i1501_0_off0=$94;var $98=$59;var $97=$63;var $96=$64;var $95=$65;label=96;break;
 case 96: 
 var $95;
 var $96;
 var $97;
 var $98;
 var $retval_i_i1501_0_off0;
 var $and_i_i_i1544=$98&1;
 var $tobool_i_i_i1545=(($and_i_i_i1544<<24)>>24)==0;
 var $99=HEAP32[(($__data__i21_i_i)>>2)];
 var $arrayidx_i_i_i1202_575=($tobool_i_i_i1545?$arrayidx_i_i_i1202:$99);
 var $100=HEAP8[($arrayidx_i_i_i1202_575)];
 var $cmp85=(($retval_i_i1501_0_off0<<24)>>24)==(($100<<24)>>24);
 var $__ninp__i_i1641=(($97+12)|0);
 var $cmp_i_i1643=($96|0)==($95|0);
 if($cmp85){label=97;break;}else{label=101;break;}
 case 97: 
 if($cmp_i_i1643){label=98;break;}else{label=99;break;}
 case 98: 
 var $101=$97;
 var $vtable_i_i1644=HEAP32[(($101)>>2)];
 var $vfn_i_i1645=(($vtable_i_i1644+40)|0);
 var $102=HEAP32[(($vfn_i_i1645)>>2)];
 var $call_i_i1652=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$102]($97) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=100;break; } else { var $_ph_ph334_ph_ph_ph_ph_ph=$1;var $__gb_sroa_1_4_load271290_ph_ph333_ph_ph_ph_ph_ph=$__gb_sroa_1_4_load271297459;label=24;break; }
 case 99: 
 var $incdec_ptr_i_i1648=(($96+1)|0);
 HEAP32[(($__ninp__i_i1641)>>2)]=$incdec_ptr_i_i1648;
 label=100;break;
 case 100: 
 var $103=HEAP8[($__size__i_i920)];
 var $conv_i_i1672=($103&255);
 var $and_i_i1673=$conv_i_i1672&1;
 var $tobool_i_i1674=($and_i_i1673|0)==0;
 var $104=HEAP32[(($__size__i23_i1319)>>2)];
 var $shr_i_i1691135=$conv_i_i1672>>>1;
 var $cond_i1693=($tobool_i_i1674?$shr_i_i1691135:$104);
 var $cmp90=($cond_i1693>>>0)>1;
 var $__psn___trailing_sign_0151=($cmp90?$__psn:$__trailing_sign_0468);
 var $__trailing_sign_1=$__psn___trailing_sign_0151;var $add_ptr277=$add_ptr276465;var $__gb_sroa_0_0_load261283=$__gb_sroa_0_0_load261282462;var $282=$1;var $__gb_sroa_1_4_load271296=$__gb_sroa_1_4_load271297459;var $__we304=$__we303456;label=273;break;
 case 101: 
 if($cmp_i_i1643){label=102;break;}else{label=104;break;}
 case 102: 
 var $105=$97;
 var $vtable_i_i1705=HEAP32[(($105)>>2)];
 var $vfn_i_i1706=(($vtable_i_i1705+36)|0);
 var $106=HEAP32[(($vfn_i_i1706)>>2)];
 var $call_i_i1713=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$106]($97) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=103;break; } else { var $_ph_ph334_ph_ph_ph_ph_ph=$1;var $__gb_sroa_1_4_load271290_ph_ph333_ph_ph_ph_ph_ph=$__gb_sroa_1_4_load271297459;label=24;break; }
 case 103: 
 var $extract_t132=(($call_i_i1713)&255);
 var $retval_i_i1696_0_off0=$extract_t132;label=105;break;
 case 104: 
 var $107=HEAP8[($96)];
 var $retval_i_i1696_0_off0=$107;label=105;break;
 case 105: 
 var $retval_i_i1696_0_off0;
 var $108=HEAP8[($__size__i_i961)];
 var $and_i_i_i1739=$108&1;
 var $tobool_i_i_i1740=(($and_i_i_i1739<<24)>>24)==0;
 var $109=HEAP32[(($__data__i21_i_i1385)>>2)];
 var $arrayidx_i_i_i1394_576=($tobool_i_i_i1740?$arrayidx_i_i_i1394:$109);
 var $110=HEAP8[($arrayidx_i_i_i1394_576)];
 var $cmp100=(($retval_i_i1696_0_off0<<24)>>24)==(($110<<24)>>24);
 if($cmp100){label=106;break;}else{label=110;break;}
 case 106: 
 var $111=HEAP32[(($__sbuf__i_i_i627)>>2)];
 var $__ninp__i_i1768=(($111+12)|0);
 var $112=HEAP32[(($__ninp__i_i1768)>>2)];
 var $__einp__i_i1769=(($111+16)|0);
 var $113=HEAP32[(($__einp__i_i1769)>>2)];
 var $cmp_i_i1770=($112|0)==($113|0);
 if($cmp_i_i1770){label=107;break;}else{label=108;break;}
 case 107: 
 var $114=$111;
 var $vtable_i_i1771=HEAP32[(($114)>>2)];
 var $vfn_i_i1772=(($vtable_i_i1771+40)|0);
 var $115=HEAP32[(($vfn_i_i1772)>>2)];
 var $call_i_i1779=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$115]($111) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=109;break; } else { var $_ph_ph334_ph_ph_ph_ph_ph=$1;var $__gb_sroa_1_4_load271290_ph_ph333_ph_ph_ph_ph_ph=$__gb_sroa_1_4_load271297459;label=24;break; }
 case 108: 
 var $incdec_ptr_i_i1775=(($112+1)|0);
 HEAP32[(($__ninp__i_i1768)>>2)]=$incdec_ptr_i_i1775;
 label=109;break;
 case 109: 
 HEAP8[($__neg)]=1;
 var $116=HEAP8[($__size__i_i961)];
 var $conv_i_i1799=($116&255);
 var $and_i_i1800=$conv_i_i1799&1;
 var $tobool_i_i1801=($and_i_i1800|0)==0;
 var $117=HEAP32[(($__size__i23_i1466)>>2)];
 var $shr_i_i1818134=$conv_i_i1799>>>1;
 var $cond_i1820=($tobool_i_i1801?$shr_i_i1818134:$117);
 var $cmp105=($cond_i1820>>>0)>1;
 var $__nsn___trailing_sign_0152=($cmp105?$__nsn:$__trailing_sign_0468);
 var $__trailing_sign_1=$__nsn___trailing_sign_0152;var $add_ptr277=$add_ptr276465;var $__gb_sroa_0_0_load261283=$__gb_sroa_0_0_load261282462;var $282=$1;var $__gb_sroa_1_4_load271296=$__gb_sroa_1_4_load271297459;var $__we304=$__we303456;label=273;break;
 case 110: 
 var $118=HEAP32[(($__err)>>2)];
 var $or109=$118|4;
 HEAP32[(($__err)>>2)]=$or109;
 var $retval_0=0;var $313=$1;var $__gb_sroa_1_4_load271298=$__gb_sroa_1_4_load271297459;label=308;break;
 case 111: 
 var $tobool116=($__trailing_sign_0468|0)!=0;
 var $cmp118=($__p_0470>>>0)<2;
 var $or_cond=$tobool116|$cmp118;
 if($or_cond){label=115;break;}else{label=112;break;}
 case 112: 
 var $cmp119=($__p_0470|0)==2;
 if($cmp119){label=113;break;}else{var $120=0;label=114;break;}
 case 113: 
 var $119=HEAP8[($arrayidx122)];
 var $cmp124=(($119<<24)>>24)!=0;
 var $120=$cmp124;label=114;break;
 case 114: 
 var $120;
 var $brmerge=$cmp128316|$120;
 if($brmerge){label=115;break;}else{var $__trailing_sign_1=0;var $add_ptr277=$add_ptr276465;var $__gb_sroa_0_0_load261283=$__gb_sroa_0_0_load261282462;var $282=$1;var $__gb_sroa_1_4_load271296=$__gb_sroa_1_4_load271297459;var $__we304=$__we303456;label=273;break;}
 case 115: 
 var $121=HEAP8[($__size__i_i_i1871)];
 var $and_i_i_i1873=$121&1;
 var $tobool_i_i_i1874=(($and_i_i_i1873<<24)>>24)==0;
 var $122=HEAP32[(($__data__i21_i_i1977)>>2)];
 var $arrayidx_i_i_i1890_=($tobool_i_i_i1874?$arrayidx_i_i_i1890:$122);
 var $cmp136=($__p_0470|0)==0;
 if($cmp136){var $__sym_curr_char_sroa_0_0_ph=$arrayidx_i_i_i1890_;var $_ph=$121;var $137=$122;label=128;break;}else{label=116;break;}
 case 116: 
 var $sub=((($__p_0470)-(1))|0);
 var $arrayidx138=(($__pat+$sub)|0);
 var $123=HEAP8[($arrayidx138)];
 var $switch=($123&255)<2;
 if($switch){label=117;break;}else{var $__sym_curr_char_sroa_0_0_ph=$arrayidx_i_i_i1890_;var $_ph=$121;var $137=$122;label=128;break;}
 case 117: 
 var $conv_i_i22_i602=($121&255);
 var $and_i_i23_i603=$conv_i_i22_i602&1;
 var $tobool_i_i24_i604=($and_i_i23_i603|0)==0;
 var $124=HEAP32[(($__size__i23_i_i)>>2)];
 var $shr_i_i_i122605=$conv_i_i22_i602>>>1;
 var $cond_i34_i606=($tobool_i_i24_i604?$shr_i_i_i122605:$124);
 var $lnot_i2016608=($cond_i34_i606|0)==0;
 if($lnot_i2016608){var $__sym_space_end_sroa_0_0_lcssa=$arrayidx_i_i_i1890_;var $131=$121;var $130=$122;label=123;break;}else{var $__sym_space_end_sroa_0_0609=$arrayidx_i_i_i1890_;label=118;break;}
 case 118: 
 var $__sym_space_end_sroa_0_0609;
 var $125=HEAP8[($__sym_space_end_sroa_0_0609)];
 var $conv_i2112=(($125<<24)>>24);
 var $call_i2125=(function() { try { __THREW__ = 0; return _isascii($conv_i2112) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=119;break; } else { label=21;break; }
 case 119: 
 var $tobool_i2113=($call_i2125|0)==0;
 if($tobool_i2113){label=122;break;}else{label=120;break;}
 case 120: 
 var $126=HEAP32[(($__tab__i)>>2)];
 var $arrayidx_i2116=(($126+($conv_i2112<<1))|0);
 var $127=HEAP16[(($arrayidx_i2116)>>1)];
 var $and_i2119=$127&8192;
 var $cmp_i2120=(($and_i2119<<16)>>16)==0;
 if($cmp_i2120){label=122;break;}else{label=121;break;}
 case 121: 
 var $incdec_ptr_i=(($__sym_space_end_sroa_0_0609+1)|0);
 var $_pre546=HEAP8[($__size__i_i_i1871)];
 var $and_i_i_i1969=$_pre546&1;
 var $tobool_i_i_i1970=(($and_i_i_i1969<<24)>>24)==0;
 var $128=HEAP32[(($__data__i21_i_i1977)>>2)];
 var $arrayidx_i_i_i1890_577=($tobool_i_i_i1970?$arrayidx_i_i_i1890:$128);
 var $conv_i_i22_i=($_pre546&255);
 var $and_i_i23_i=$conv_i_i22_i&1;
 var $tobool_i_i24_i=($and_i_i23_i|0)==0;
 var $129=HEAP32[(($__size__i23_i_i)>>2)];
 var $shr_i_i_i122=$conv_i_i22_i>>>1;
 var $cond_i34_i=($tobool_i_i24_i?$shr_i_i_i122:$129);
 var $add_ptr_i1989=(($arrayidx_i_i_i1890_577+$cond_i34_i)|0);
 var $lnot_i2016=($incdec_ptr_i|0)==($add_ptr_i1989|0);
 if($lnot_i2016){var $__sym_space_end_sroa_0_0_lcssa=$incdec_ptr_i;var $131=$_pre546;var $130=$128;label=123;break;}else{var $__sym_space_end_sroa_0_0609=$incdec_ptr_i;label=118;break;}
 case 122: 
 var $_pre719=HEAP8[($__size__i_i_i1871)];
 var $_pre720=HEAP32[(($__data__i21_i_i1977)>>2)];
 var $__sym_space_end_sroa_0_0_lcssa=$__sym_space_end_sroa_0_0609;var $131=$_pre719;var $130=$_pre720;label=123;break;
 case 123: 
 var $130;
 var $131;
 var $__sym_space_end_sroa_0_0_lcssa;
 var $and_i_i_i2157=$131&1;
 var $tobool_i_i_i2158=(($and_i_i_i2157<<24)>>24)==0;
 var $arrayidx_i_i_i1890_578=($tobool_i_i_i2158?$arrayidx_i_i_i1890:$130);
 var $sub_ptr_lhs_cast_i=$__sym_space_end_sroa_0_0_lcssa;
 var $sub_ptr_rhs_cast_i=$arrayidx_i_i_i1890_578;
 var $sub_ptr_sub_i=((($sub_ptr_lhs_cast_i)-($sub_ptr_rhs_cast_i))|0);
 var $132=HEAP8[($__size__i_i2356)];
 var $conv_i_i2357=($132&255);
 var $and_i_i2358=$conv_i_i2357&1;
 var $tobool_i_i2359=($and_i_i2358|0)==0;
 var $133=HEAP32[(($__size__i23_i_i2870)>>2)];
 var $shr_i_i2376123=$conv_i_i2357>>>1;
 var $cond_i2378=($tobool_i_i2359?$shr_i_i2376123:$133);
 var $cmp163=($sub_ptr_sub_i>>>0)>($cond_i2378>>>0);
 if($cmp163){var $__sym_curr_char_sroa_0_0_ph=$arrayidx_i_i_i1890_578;var $_ph=$131;var $137=$130;label=128;break;}else{label=124;break;}
 case 124: 
 var $and_i_i_i2486=$132&1;
 var $tobool_i_i_i2487=(($and_i_i_i2486<<24)>>24)==0;
 var $134=HEAP32[(($__data__i21_i_i2840)>>2)];
 var $arrayidx_i_i_i2503_=($tobool_i_i_i2487?$arrayidx_i_i_i2503:$134);
 var $add_ptr_i2883=(($arrayidx_i_i_i2503_+$cond_i2378)|0);
 var $lnot_i_i_i368=($__sym_space_end_sroa_0_0_lcssa|0)==($arrayidx_i_i_i1890_578|0);
 if($lnot_i_i_i368){var $__sym_curr_char_sroa_0_0_ph=$__sym_space_end_sroa_0_0_lcssa;var $_ph=$131;var $137=$130;label=128;break;}else{label=125;break;}
 case 125: 
 var $add_ptr_i2537_sum=((($cond_i2378)-($sub_ptr_sub_i))|0);
 var $add_ptr_i_i_i=(($arrayidx_i_i_i2503_+$add_ptr_i2537_sum)|0);
 var $agg_tmp4_i_sroa_0_0369=$add_ptr_i_i_i;var $agg_tmp29_i_sroa_0_0370=$arrayidx_i_i_i1890_578;label=126;break;
 case 126: 
 var $agg_tmp29_i_sroa_0_0370;
 var $agg_tmp4_i_sroa_0_0369;
 var $135=HEAP8[($agg_tmp4_i_sroa_0_0369)];
 var $136=HEAP8[($agg_tmp29_i_sroa_0_0370)];
 var $cmp_i_i_i2737=(($135<<24)>>24)==(($136<<24)>>24);
 if($cmp_i_i_i2737){label=127;break;}else{var $__sym_curr_char_sroa_0_0_ph=$arrayidx_i_i_i1890_578;var $_ph=$131;var $137=$130;label=128;break;}
 case 127: 
 var $incdec_ptr_i9_i_i=(($agg_tmp4_i_sroa_0_0369+1)|0);
 var $incdec_ptr_i_i_i=(($agg_tmp29_i_sroa_0_0370+1)|0);
 var $lnot_i_i_i=($incdec_ptr_i9_i_i|0)==($add_ptr_i2883|0);
 if($lnot_i_i_i){var $__sym_curr_char_sroa_0_0_ph=$__sym_space_end_sroa_0_0_lcssa;var $_ph=$131;var $137=$130;label=128;break;}else{var $agg_tmp4_i_sroa_0_0369=$incdec_ptr_i9_i_i;var $agg_tmp29_i_sroa_0_0370=$incdec_ptr_i_i_i;label=126;break;}
 case 128: 
 var $137;
 var $_ph;
 var $__sym_curr_char_sroa_0_0_ph;
 var $and_i_i_i2598611=$_ph&1;
 var $tobool_i_i_i2599612=(($and_i_i_i2598611<<24)>>24)==0;
 var $arrayidx_i_i_i1890_582613=($tobool_i_i_i2599612?$arrayidx_i_i_i1890:$137);
 var $conv_i_i22_i2626614=($_ph&255);
 var $and_i_i23_i2627615=$conv_i_i22_i2626614&1;
 var $tobool_i_i24_i2628616=($and_i_i23_i2627615|0)==0;
 var $138=HEAP32[(($__size__i23_i_i)>>2)];
 var $shr_i_i_i2646118617=$conv_i_i22_i2626614>>>1;
 var $cond_i34_i2648618=($tobool_i_i24_i2628616?$shr_i_i_i2646118617:$138);
 var $add_ptr_i2649619=(($arrayidx_i_i_i1890_582613+$cond_i34_i2648618)|0);
 var $lnot_i2560620=($__sym_curr_char_sroa_0_0_ph|0)==($add_ptr_i2649619|0);
 if($lnot_i2560620){var $__sym_curr_char_sroa_0_0_lcssa=$__sym_curr_char_sroa_0_0_ph;label=152;break;}else{var $139=$13;var $__sym_curr_char_sroa_0_0621=$__sym_curr_char_sroa_0_0_ph;label=129;break;}
 case 129: 
 var $__sym_curr_char_sroa_0_0621;
 var $139;
 var $140=HEAP32[(($__sbuf__i_i_i627)>>2)];
 var $tobool_i_i_i2399=($140|0)==0;
 if($tobool_i_i_i2399){var $145=0;label=135;break;}else{label=130;break;}
 case 130: 
 var $__ninp__i_i_i_i2402=(($140+12)|0);
 var $141=HEAP32[(($__ninp__i_i_i_i2402)>>2)];
 var $__einp__i_i_i_i2403=(($140+16)|0);
 var $142=HEAP32[(($__einp__i_i_i_i2403)>>2)];
 var $cmp_i_i_i_i2404=($141|0)==($142|0);
 if($cmp_i_i_i_i2404){label=131;break;}else{var $145=$140;label=135;break;}
 case 131: 
 var $143=$140;
 var $vtable_i_i_i_i2406=HEAP32[(($143)>>2)];
 var $vfn_i_i_i_i2407=(($vtable_i_i_i_i2406+36)|0);
 var $144=HEAP32[(($vfn_i_i_i_i2407)>>2)];
 var $call_i_i_i_i2445=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$144]($140) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=132;break; } else { label=22;break; }
 case 132: 
 var $cmp_i7_i_i_i2412=($call_i_i_i_i2445|0)==-1;
 if($cmp_i7_i_i_i2412){label=134;break;}else{label=133;break;}
 case 133: 
 var $_pre547=HEAP32[(($__sbuf__i_i_i627)>>2)];
 var $145=$_pre547;label=135;break;
 case 134: 
 HEAP32[(($__sbuf__i_i_i627)>>2)]=0;
 var $145=0;label=135;break;
 case 135: 
 var $145;
 var $cmp_i_i_i2417=($145|0)==0;
 var $tobool_i12_i_i2421=($139|0)==0;
 if($tobool_i12_i_i2421){label=141;break;}else{label=136;break;}
 case 136: 
 var $__ninp__i_i15_i_i2425=(($139+12)|0);
 var $146=HEAP32[(($__ninp__i_i15_i_i2425)>>2)];
 var $__einp__i_i16_i_i2426=(($139+16)|0);
 var $147=HEAP32[(($__einp__i_i16_i_i2426)>>2)];
 var $cmp_i_i17_i_i2427=($146|0)==($147|0);
 if($cmp_i_i17_i_i2427){label=138;break;}else{label=137;break;}
 case 137: 
 if($cmp_i_i_i2417){var $150=$139;label=143;break;}else{var $__sym_curr_char_sroa_0_0_lcssa=$__sym_curr_char_sroa_0_0621;label=152;break;}
 case 138: 
 var $148=$139;
 var $vtable_i_i19_i_i2429=HEAP32[(($148)>>2)];
 var $vfn_i_i20_i_i2430=(($vtable_i_i19_i_i2429+36)|0);
 var $149=HEAP32[(($vfn_i_i20_i_i2430)>>2)];
 var $call_i_i21_i_i2447=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$149]($139) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=139;break; } else { label=22;break; }
 case 139: 
 var $cmp_i7_i26_i_i2435=($call_i_i21_i_i2447|0)==-1;
 if($cmp_i7_i26_i_i2435){label=140;break;}else{label=142;break;}
 case 140: 
 HEAP32[(($__sbuf__i11_i_i649)>>2)]=0;
 label=141;break;
 case 141: 
 if($cmp_i_i_i2417){var $__sym_curr_char_sroa_0_0_lcssa=$__sym_curr_char_sroa_0_0621;label=152;break;}else{var $150=0;label=143;break;}
 case 142: 
 if($cmp_i_i_i2417){var $150=$139;label=143;break;}else{var $__sym_curr_char_sroa_0_0_lcssa=$__sym_curr_char_sroa_0_0621;label=152;break;}
 case 143: 
 var $150;
 var $151=HEAP32[(($__sbuf__i_i_i627)>>2)];
 var $__ninp__i_i2326=(($151+12)|0);
 var $152=HEAP32[(($__ninp__i_i2326)>>2)];
 var $__einp__i_i2327=(($151+16)|0);
 var $153=HEAP32[(($__einp__i_i2327)>>2)];
 var $cmp_i_i2328=($152|0)==($153|0);
 if($cmp_i_i2328){label=144;break;}else{label=146;break;}
 case 144: 
 var $154=$151;
 var $vtable_i_i2329=HEAP32[(($154)>>2)];
 var $vfn_i_i2330=(($vtable_i_i2329+36)|0);
 var $155=HEAP32[(($vfn_i_i2330)>>2)];
 var $call_i_i2337=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$155]($151) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=145;break; } else { label=22;break; }
 case 145: 
 var $extract_t120=(($call_i_i2337)&255);
 var $retval_i_i2320_0_off0=$extract_t120;label=147;break;
 case 146: 
 var $156=HEAP8[($152)];
 var $retval_i_i2320_0_off0=$156;label=147;break;
 case 147: 
 var $retval_i_i2320_0_off0;
 var $157=HEAP8[($__sym_curr_char_sroa_0_0621)];
 var $cmp188=(($retval_i_i2320_0_off0<<24)>>24)==(($157<<24)>>24);
 if($cmp188){label=148;break;}else{var $__sym_curr_char_sroa_0_0_lcssa=$__sym_curr_char_sroa_0_0621;label=152;break;}
 case 148: 
 var $158=HEAP32[(($__sbuf__i_i_i627)>>2)];
 var $__ninp__i_i2298=(($158+12)|0);
 var $159=HEAP32[(($__ninp__i_i2298)>>2)];
 var $__einp__i_i2299=(($158+16)|0);
 var $160=HEAP32[(($__einp__i_i2299)>>2)];
 var $cmp_i_i2300=($159|0)==($160|0);
 if($cmp_i_i2300){label=149;break;}else{label=150;break;}
 case 149: 
 var $161=$158;
 var $vtable_i_i2301=HEAP32[(($161)>>2)];
 var $vfn_i_i2302=(($vtable_i_i2301+40)|0);
 var $162=HEAP32[(($vfn_i_i2302)>>2)];
 var $call_i_i2309=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$162]($158) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=151;break; } else { label=22;break; }
 case 150: 
 var $incdec_ptr_i_i2305=(($159+1)|0);
 HEAP32[(($__ninp__i_i2298)>>2)]=$incdec_ptr_i_i2305;
 label=151;break;
 case 151: 
 var $incdec_ptr_i2290=(($__sym_curr_char_sroa_0_0621+1)|0);
 var $_pre542=HEAP8[($__size__i_i_i1871)];
 var $and_i_i_i2598=$_pre542&1;
 var $tobool_i_i_i2599=(($and_i_i_i2598<<24)>>24)==0;
 var $163=HEAP32[(($__data__i21_i_i1977)>>2)];
 var $arrayidx_i_i_i1890_582=($tobool_i_i_i2599?$arrayidx_i_i_i1890:$163);
 var $conv_i_i22_i2626=($_pre542&255);
 var $and_i_i23_i2627=$conv_i_i22_i2626&1;
 var $tobool_i_i24_i2628=($and_i_i23_i2627|0)==0;
 var $164=HEAP32[(($__size__i23_i_i)>>2)];
 var $shr_i_i_i2646118=$conv_i_i22_i2626>>>1;
 var $cond_i34_i2648=($tobool_i_i24_i2628?$shr_i_i_i2646118:$164);
 var $add_ptr_i2649=(($arrayidx_i_i_i1890_582+$cond_i34_i2648)|0);
 var $lnot_i2560=($incdec_ptr_i2290|0)==($add_ptr_i2649|0);
 if($lnot_i2560){var $__sym_curr_char_sroa_0_0_lcssa=$incdec_ptr_i2290;label=152;break;}else{var $139=$150;var $__sym_curr_char_sroa_0_0621=$incdec_ptr_i2290;label=129;break;}
 case 152: 
 var $__sym_curr_char_sroa_0_0_lcssa;
 if($cmp128316){label=153;break;}else{var $__trailing_sign_1=$__trailing_sign_0468;var $add_ptr277=$add_ptr276465;var $__gb_sroa_0_0_load261283=$__gb_sroa_0_0_load261282462;var $282=$1;var $__gb_sroa_1_4_load271296=$__gb_sroa_1_4_load271297459;var $__we304=$__we303456;label=273;break;}
 case 153: 
 var $165=HEAP8[($__size__i_i_i1871)];
 var $and_i_i_i2231=$165&1;
 var $tobool_i_i_i2232=(($and_i_i_i2231<<24)>>24)==0;
 var $166=HEAP32[(($__data__i21_i_i1977)>>2)];
 var $arrayidx_i_i_i1890_583=($tobool_i_i_i2232?$arrayidx_i_i_i1890:$166);
 var $conv_i_i22_i2259=($165&255);
 var $and_i_i23_i2260=$conv_i_i22_i2259&1;
 var $tobool_i_i24_i2261=($and_i_i23_i2260|0)==0;
 var $167=HEAP32[(($__size__i23_i_i)>>2)];
 var $shr_i_i_i2279119=$conv_i_i22_i2259>>>1;
 var $cond_i34_i2281=($tobool_i_i24_i2261?$shr_i_i_i2279119:$167);
 var $add_ptr_i2282=(($arrayidx_i_i_i1890_583+$cond_i34_i2281)|0);
 var $lnot_i2193=($__sym_curr_char_sroa_0_0_lcssa|0)==($add_ptr_i2282|0);
 if($lnot_i2193){var $__trailing_sign_1=$__trailing_sign_0468;var $add_ptr277=$add_ptr276465;var $__gb_sroa_0_0_load261283=$__gb_sroa_0_0_load261282462;var $282=$1;var $__gb_sroa_1_4_load271296=$__gb_sroa_1_4_load271297459;var $__we304=$__we303456;label=273;break;}else{label=154;break;}
 case 154: 
 var $168=HEAP32[(($__err)>>2)];
 var $or200=$168|4;
 HEAP32[(($__err)>>2)]=$or200;
 var $retval_0=0;var $313=$1;var $__gb_sroa_1_4_load271298=$__gb_sroa_1_4_load271297459;label=308;break;
 case 155: 
 var $__we308;
 var $__gb_sroa_1_4_load271295;
 var $169;
 var $__gb_sroa_0_0_load261285;
 var $add_ptr279;
 var $__ng_0;
 var $170=HEAP32[(($__sbuf__i_i_i627)>>2)];
 var $tobool_i_i_i2058=($170|0)==0;
 if($tobool_i_i_i2058){var $175=0;label=161;break;}else{label=156;break;}
 case 156: 
 var $__ninp__i_i_i_i2061=(($170+12)|0);
 var $171=HEAP32[(($__ninp__i_i_i_i2061)>>2)];
 var $__einp__i_i_i_i2062=(($170+16)|0);
 var $172=HEAP32[(($__einp__i_i_i_i2062)>>2)];
 var $cmp_i_i_i_i2063=($171|0)==($172|0);
 if($cmp_i_i_i_i2063){label=157;break;}else{var $175=$170;label=161;break;}
 case 157: 
 var $173=$170;
 var $vtable_i_i_i_i2065=HEAP32[(($173)>>2)];
 var $vfn_i_i_i_i2066=(($vtable_i_i_i_i2065+36)|0);
 var $174=HEAP32[(($vfn_i_i_i_i2066)>>2)];
 var $call_i_i_i_i2104=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$174]($170) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=158;break; } else { var $_ph_ph=$169;var $__gb_sroa_1_4_load271290_ph_ph=$__gb_sroa_1_4_load271295;label=19;break; }
 case 158: 
 var $cmp_i7_i_i_i2071=($call_i_i_i_i2104|0)==-1;
 if($cmp_i7_i_i_i2071){label=160;break;}else{label=159;break;}
 case 159: 
 var $_pre548=HEAP32[(($__sbuf__i_i_i627)>>2)];
 var $175=$_pre548;label=161;break;
 case 160: 
 HEAP32[(($__sbuf__i_i_i627)>>2)]=0;
 var $175=0;label=161;break;
 case 161: 
 var $175;
 var $cmp_i_i_i2076=($175|0)==0;
 var $176=HEAP32[(($__sbuf__i11_i_i649)>>2)];
 var $tobool_i12_i_i2080=($176|0)==0;
 if($tobool_i12_i_i2080){label=167;break;}else{label=162;break;}
 case 162: 
 var $__ninp__i_i15_i_i2084=(($176+12)|0);
 var $177=HEAP32[(($__ninp__i_i15_i_i2084)>>2)];
 var $__einp__i_i16_i_i2085=(($176+16)|0);
 var $178=HEAP32[(($__einp__i_i16_i_i2085)>>2)];
 var $cmp_i_i17_i_i2086=($177|0)==($178|0);
 if($cmp_i_i17_i_i2086){label=164;break;}else{label=163;break;}
 case 163: 
 if($cmp_i_i_i2076){label=169;break;}else{label=199;break;}
 case 164: 
 var $179=$176;
 var $vtable_i_i19_i_i2088=HEAP32[(($179)>>2)];
 var $vfn_i_i20_i_i2089=(($vtable_i_i19_i_i2088+36)|0);
 var $180=HEAP32[(($vfn_i_i20_i_i2089)>>2)];
 var $call_i_i21_i_i2106=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$180]($176) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=165;break; } else { var $_ph_ph=$169;var $__gb_sroa_1_4_load271290_ph_ph=$__gb_sroa_1_4_load271295;label=19;break; }
 case 165: 
 var $cmp_i7_i26_i_i2094=($call_i_i21_i_i2106|0)==-1;
 if($cmp_i7_i26_i_i2094){label=166;break;}else{label=168;break;}
 case 166: 
 HEAP32[(($__sbuf__i11_i_i649)>>2)]=0;
 label=167;break;
 case 167: 
 if($cmp_i_i_i2076){label=199;break;}else{label=169;break;}
 case 168: 
 if($cmp_i_i_i2076){label=169;break;}else{label=199;break;}
 case 169: 
 var $181=HEAP32[(($__sbuf__i_i_i627)>>2)];
 var $__ninp__i_i2024=(($181+12)|0);
 var $182=HEAP32[(($__ninp__i_i2024)>>2)];
 var $__einp__i_i2025=(($181+16)|0);
 var $183=HEAP32[(($__einp__i_i2025)>>2)];
 var $cmp_i_i2026=($182|0)==($183|0);
 if($cmp_i_i2026){label=170;break;}else{label=172;break;}
 case 170: 
 var $184=$181;
 var $vtable_i_i2027=HEAP32[(($184)>>2)];
 var $vfn_i_i2028=(($vtable_i_i2027+36)|0);
 var $185=HEAP32[(($vfn_i_i2028)>>2)];
 var $call_i_i2035=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$185]($181) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=171;break; } else { var $_ph_ph=$169;var $__gb_sroa_1_4_load271290_ph_ph=$__gb_sroa_1_4_load271295;label=19;break; }
 case 171: 
 var $extract_t115=(($call_i_i2035)&255);
 var $retval_i_i2018_0_off0=$extract_t115;label=173;break;
 case 172: 
 var $186=HEAP8[($182)];
 var $retval_i_i2018_0_off0=$186;label=173;break;
 case 173: 
 var $retval_i_i2018_0_off0;
 var $conv_i1996=(($retval_i_i2018_0_off0<<24)>>24);
 var $call_i2009=(function() { try { __THREW__ = 0; return _isascii($conv_i1996) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=174;break; } else { var $_ph_ph=$169;var $__gb_sroa_1_4_load271290_ph_ph=$__gb_sroa_1_4_load271295;label=19;break; }
 case 174: 
 var $tobool_i1997=($call_i2009|0)==0;
 if($tobool_i1997){label=187;break;}else{label=175;break;}
 case 175: 
 var $187=HEAP32[(($__tab__i)>>2)];
 var $arrayidx_i2000=(($187+($conv_i1996<<1))|0);
 var $188=HEAP16[(($arrayidx_i2000)>>1)];
 var $and_i2003=$188&2048;
 var $cmp_i2004=(($and_i2003<<16)>>16)==0;
 if($cmp_i2004){label=187;break;}else{label=176;break;}
 case 176: 
 var $189=HEAP32[(($__wn)>>2)];
 var $cmp215=($189|0)==($__we308|0);
 if($cmp215){label=177;break;}else{var $__we310=$__we308;var $196=$189;label=186;break;}
 case 177: 
 var $190=HEAP32[(($__second__i_i_i_i)>>2)];
 var $cmp_i155=($190|0)!=((448)|0);
 var $191=HEAP32[(($__first__i_i_i570)>>2)];
 var $sub_ptr_lhs_cast_i156=$__we308;
 var $sub_ptr_rhs_cast_i157=$191;
 var $sub_ptr_sub_i158=((($sub_ptr_lhs_cast_i156)-($sub_ptr_rhs_cast_i157))|0);
 var $cmp3_i=($sub_ptr_sub_i158>>>0)<2147483647;
 var $mul4_i=$sub_ptr_sub_i158<<1;
 var $cond_i159=($cmp3_i?$mul4_i:-1);
 var $__i=($cmp_i155?$191:0);
 var $call15_i=_realloc($__i,$cond_i159);
 var $cmp16_i=($call15_i|0)==0;
 if($cmp16_i){label=178;break;}else{label=179;break;}
 case 178: 
 (function() { try { __THREW__ = 0; return __ZSt17__throw_bad_allocv() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=179;break; } else { var $_ph_ph=$169;var $__gb_sroa_1_4_load271290_ph_ph=$__gb_sroa_1_4_load271295;label=19;break; }
 case 179: 
 if($cmp_i155){label=180;break;}else{label=181;break;}
 case 180: 
 HEAP32[(($__first__i_i_i570)>>2)]=$call15_i;
 var $194=$call15_i;label=185;break;
 case 181: 
 var $_pr_i=HEAP32[(($__first__i_i_i570)>>2)];
 HEAP32[(($__first__i_i_i570)>>2)]=$call15_i;
 var $tobool_i_i_i160=($_pr_i|0)==0;
 if($tobool_i_i_i160){var $194=$call15_i;label=185;break;}else{label=182;break;}
 case 182: 
 var $192=HEAP32[(($__second__i_i_i_i)>>2)];
 (function() { try { __THREW__ = 0; return FUNCTION_TABLE[$192]($_pr_i) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=183;break; } else { label=184;break; }
 case 183: 
 var $_pre_i=HEAP32[(($__first__i_i_i570)>>2)];
 var $194=$_pre_i;label=185;break;
 case 184: 
 var $193$0 = ___cxa_find_matching_catch(-1, -1,0); var $193$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 185: 
 var $194;
 HEAP32[(($__second__i_i_i_i)>>2)]=236;
 var $add_ptr_i163=(($194+$sub_ptr_sub_i158)|0);
 HEAP32[(($__wn)>>2)]=$add_ptr_i163;
 var $195=HEAP32[(($__first__i_i_i570)>>2)];
 var $add_ptr26_i=(($195+$cond_i159)|0);
 var $__we310=$add_ptr26_i;var $196=$add_ptr_i163;label=186;break;
 case 186: 
 var $196;
 var $__we310;
 var $incdec_ptr=(($196+1)|0);
 HEAP32[(($__wn)>>2)]=$incdec_ptr;
 HEAP8[($196)]=$retval_i_i2018_0_off0;
 var $inc=((($__ng_0)+(1))|0);
 var $__ng_1=$inc;var $add_ptr280=$add_ptr279;var $__gb_sroa_0_0_load261286=$__gb_sroa_0_0_load261285;var $202=$169;var $__gb_sroa_1_4_load271293=$__gb_sroa_1_4_load271295;var $__we309=$__we310;label=196;break;
 case 187: 
 var $197=HEAP8[($__size__i_i1919)];
 var $conv_i_i1920=($197&255);
 var $and_i_i1921=$conv_i_i1920&1;
 var $tobool_i_i1922=($and_i_i1921|0)==0;
 var $198=HEAP32[(($__size__i23_i1929)>>2)];
 var $shr_i_i1939117=$conv_i_i1920>>>1;
 var $cond_i1941=($tobool_i_i1922?$shr_i_i1939117:$198);
 var $cmp221=($cond_i1941|0)==0;
 var $cmp223=($__ng_0|0)==0;
 var $or_cond153=$cmp221|$cmp223;
 if($or_cond153){label=199;break;}else{label=188;break;}
 case 188: 
 var $199=HEAP8[($__ts)];
 var $cmp227=(($retval_i_i2018_0_off0<<24)>>24)==(($199<<24)>>24);
 if($cmp227){label=189;break;}else{label=199;break;}
 case 189: 
 var $cmp229=($__gb_sroa_0_0_load261285|0)==($add_ptr279|0);
 if($cmp229){label=190;break;}else{var $add_ptr281=$add_ptr279;var $__gb_sroa_0_0_load261287=$__gb_sroa_0_0_load261285;var $201=$169;var $__gb_sroa_1_4_load271294=$__gb_sroa_1_4_load271295;label=195;break;}
 case 190: 
 var $cmp_i165=($__gb_sroa_1_4_load271295|0)==((448)|0);
 var $sub_ptr_lhs_cast_i166=$__gb_sroa_0_0_load261285;
 var $sub_ptr_rhs_cast_i167=$169;
 var $sub_ptr_sub_i168=((($sub_ptr_lhs_cast_i166)-($sub_ptr_rhs_cast_i167))|0);
 var $cmp3_i169=($sub_ptr_sub_i168>>>0)<2147483647;
 var $mul4_i170=$sub_ptr_sub_i168<<1;
 var $cond_i171=($cmp3_i169?$mul4_i170:-1);
 var $sub_ptr_div10_i=$sub_ptr_sub_i168>>2;
 if($cmp_i165){var $cond15_i=0;label=192;break;}else{label=191;break;}
 case 191: 
 var $phitmp_i=$169;
 var $cond15_i=$phitmp_i;label=192;break;
 case 192: 
 var $cond15_i;
 var $call16_i=_realloc($cond15_i,$cond_i171);
 var $200=$call16_i;
 var $cmp17_i=($call16_i|0)==0;
 if($cmp17_i){label=193;break;}else{label=194;break;}
 case 193: 
 (function() { try { __THREW__ = 0; return __ZSt17__throw_bad_allocv() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=194;break; } else { var $_ph_ph=$169;var $__gb_sroa_1_4_load271290_ph_ph=$__gb_sroa_1_4_load271295;label=19;break; }
 case 194: 
 var $div24_i=$cond_i171>>>2;
 var $add_ptr_i181=(($200+($sub_ptr_div10_i<<2))|0);
 var $add_ptr27_i=(($200+($div24_i<<2))|0);
 var $add_ptr281=$add_ptr27_i;var $__gb_sroa_0_0_load261287=$add_ptr_i181;var $201=$200;var $__gb_sroa_1_4_load271294=236;label=195;break;
 case 195: 
 var $__gb_sroa_1_4_load271294;
 var $201;
 var $__gb_sroa_0_0_load261287;
 var $add_ptr281;
 var $incdec_ptr233=(($__gb_sroa_0_0_load261287+4)|0);
 HEAP32[(($__gb_sroa_0_0_load261287)>>2)]=$__ng_0;
 var $__ng_1=0;var $add_ptr280=$add_ptr281;var $__gb_sroa_0_0_load261286=$incdec_ptr233;var $202=$201;var $__gb_sroa_1_4_load271293=$__gb_sroa_1_4_load271294;var $__we309=$__we308;label=196;break;
 case 196: 
 var $__we309;
 var $__gb_sroa_1_4_load271293;
 var $202;
 var $__gb_sroa_0_0_load261286;
 var $add_ptr280;
 var $__ng_1;
 var $203=HEAP32[(($__sbuf__i_i_i627)>>2)];
 var $__ninp__i_i1837=(($203+12)|0);
 var $204=HEAP32[(($__ninp__i_i1837)>>2)];
 var $__einp__i_i1838=(($203+16)|0);
 var $205=HEAP32[(($__einp__i_i1838)>>2)];
 var $cmp_i_i1839=($204|0)==($205|0);
 if($cmp_i_i1839){label=197;break;}else{label=198;break;}
 case 197: 
 var $206=$203;
 var $vtable_i_i1840=HEAP32[(($206)>>2)];
 var $vfn_i_i1841=(($vtable_i_i1840+40)|0);
 var $207=HEAP32[(($vfn_i_i1841)>>2)];
 var $call_i_i1848=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$207]($203) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $__ng_0=$__ng_1;var $add_ptr279=$add_ptr280;var $__gb_sroa_0_0_load261285=$__gb_sroa_0_0_load261286;var $169=$202;var $__gb_sroa_1_4_load271295=$__gb_sroa_1_4_load271293;var $__we308=$__we309;label=155;break; } else { var $_ph_ph=$202;var $__gb_sroa_1_4_load271290_ph_ph=$__gb_sroa_1_4_load271293;label=19;break; }
 case 198: 
 var $incdec_ptr_i_i1844=(($204+1)|0);
 HEAP32[(($__ninp__i_i1837)>>2)]=$incdec_ptr_i_i1844;
 var $__ng_0=$__ng_1;var $add_ptr279=$add_ptr280;var $__gb_sroa_0_0_load261285=$__gb_sroa_0_0_load261286;var $169=$202;var $__gb_sroa_1_4_load271295=$__gb_sroa_1_4_load271293;var $__we308=$__we309;label=155;break;
 case 199: 
 var $cmp240=($169|0)==($__gb_sroa_0_0_load261285|0);
 var $cmp242=($__ng_0|0)==0;
 var $or_cond154=$cmp240|$cmp242;
 if($or_cond154){var $add_ptr278=$add_ptr279;var $__gb_sroa_0_0_load261284=$__gb_sroa_0_0_load261285;var $210=$169;var $__gb_sroa_1_4_load271292=$__gb_sroa_1_4_load271295;label=207;break;}else{label=200;break;}
 case 200: 
 var $cmp244=($__gb_sroa_0_0_load261285|0)==($add_ptr279|0);
 if($cmp244){label=201;break;}else{var $add_ptr275=$add_ptr279;var $__gb_sroa_0_0_load261288=$__gb_sroa_0_0_load261285;var $209=$169;var $__gb_sroa_1_4_load271291=$__gb_sroa_1_4_load271295;label=206;break;}
 case 201: 
 var $cmp_i184=($__gb_sroa_1_4_load271295|0)==((448)|0);
 var $sub_ptr_lhs_cast_i186=$__gb_sroa_0_0_load261285;
 var $sub_ptr_rhs_cast_i187=$169;
 var $sub_ptr_sub_i188=((($sub_ptr_lhs_cast_i186)-($sub_ptr_rhs_cast_i187))|0);
 var $cmp3_i189=($sub_ptr_sub_i188>>>0)<2147483647;
 var $mul4_i190=$sub_ptr_sub_i188<<1;
 var $cond_i191=($cmp3_i189?$mul4_i190:-1);
 var $sub_ptr_div10_i194=$sub_ptr_sub_i188>>2;
 if($cmp_i184){var $cond15_i197=0;label=203;break;}else{label=202;break;}
 case 202: 
 var $phitmp_i195=$169;
 var $cond15_i197=$phitmp_i195;label=203;break;
 case 203: 
 var $cond15_i197;
 var $call16_i198=_realloc($cond15_i197,$cond_i191);
 var $208=$call16_i198;
 var $cmp17_i199=($call16_i198|0)==0;
 if($cmp17_i199){label=204;break;}else{label=205;break;}
 case 204: 
 (function() { try { __THREW__ = 0; return __ZSt17__throw_bad_allocv() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=205;break; } else { var $_ph_ph334_ph_ph_ph_ph_ph=$169;var $__gb_sroa_1_4_load271290_ph_ph333_ph_ph_ph_ph_ph=$__gb_sroa_1_4_load271295;label=24;break; }
 case 205: 
 var $div24_i211=$cond_i191>>>2;
 var $add_ptr_i212=(($208+($sub_ptr_div10_i194<<2))|0);
 var $add_ptr27_i213=(($208+($div24_i211<<2))|0);
 var $add_ptr275=$add_ptr27_i213;var $__gb_sroa_0_0_load261288=$add_ptr_i212;var $209=$208;var $__gb_sroa_1_4_load271291=236;label=206;break;
 case 206: 
 var $__gb_sroa_1_4_load271291;
 var $209;
 var $__gb_sroa_0_0_load261288;
 var $add_ptr275;
 var $incdec_ptr248=(($__gb_sroa_0_0_load261288+4)|0);
 HEAP32[(($__gb_sroa_0_0_load261288)>>2)]=$__ng_0;
 var $add_ptr278=$add_ptr275;var $__gb_sroa_0_0_load261284=$incdec_ptr248;var $210=$209;var $__gb_sroa_1_4_load271292=$__gb_sroa_1_4_load271291;label=207;break;
 case 207: 
 var $__gb_sroa_1_4_load271292;
 var $210;
 var $__gb_sroa_0_0_load261284;
 var $add_ptr278;
 var $211=HEAP32[(($__fd)>>2)];
 var $cmp250=($211|0)>0;
 if($cmp250){label=208;break;}else{var $__we305=$__we308;label=271;break;}
 case 208: 
 var $212=HEAP32[(($__sbuf__i_i_i627)>>2)];
 var $tobool_i_i_i1585=($212|0)==0;
 if($tobool_i_i_i1585){var $217=0;label=214;break;}else{label=209;break;}
 case 209: 
 var $__ninp__i_i_i_i1588=(($212+12)|0);
 var $213=HEAP32[(($__ninp__i_i_i_i1588)>>2)];
 var $__einp__i_i_i_i1589=(($212+16)|0);
 var $214=HEAP32[(($__einp__i_i_i_i1589)>>2)];
 var $cmp_i_i_i_i1590=($213|0)==($214|0);
 if($cmp_i_i_i_i1590){label=210;break;}else{var $217=$212;label=214;break;}
 case 210: 
 var $215=$212;
 var $vtable_i_i_i_i1592=HEAP32[(($215)>>2)];
 var $vfn_i_i_i_i1593=(($vtable_i_i_i_i1592+36)|0);
 var $216=HEAP32[(($vfn_i_i_i_i1593)>>2)];
 var $call_i_i_i_i1630=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$216]($212) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=211;break; } else { var $_ph_ph334_ph_ph_ph_ph_ph=$210;var $__gb_sroa_1_4_load271290_ph_ph333_ph_ph_ph_ph_ph=$__gb_sroa_1_4_load271292;label=24;break; }
 case 211: 
 var $cmp_i7_i_i_i1598=($call_i_i_i_i1630|0)==-1;
 if($cmp_i7_i_i_i1598){label=213;break;}else{label=212;break;}
 case 212: 
 var $_pre549=HEAP32[(($__sbuf__i_i_i627)>>2)];
 var $217=$_pre549;label=214;break;
 case 213: 
 HEAP32[(($__sbuf__i_i_i627)>>2)]=0;
 var $217=0;label=214;break;
 case 214: 
 var $217;
 var $cmp_i_i_i1603=($217|0)==0;
 var $218=HEAP32[(($__sbuf__i11_i_i649)>>2)];
 var $tobool_i12_i_i1607=($218|0)==0;
 if($tobool_i12_i_i1607){label=220;break;}else{label=215;break;}
 case 215: 
 var $__ninp__i_i15_i_i1611=(($218+12)|0);
 var $219=HEAP32[(($__ninp__i_i15_i_i1611)>>2)];
 var $__einp__i_i16_i_i1612=(($218+16)|0);
 var $220=HEAP32[(($__einp__i_i16_i_i1612)>>2)];
 var $cmp_i_i17_i_i1613=($219|0)==($220|0);
 if($cmp_i_i17_i_i1613){label=217;break;}else{label=216;break;}
 case 216: 
 if($cmp_i_i_i1603){var $223=$218;label=222;break;}else{label=227;break;}
 case 217: 
 var $221=$218;
 var $vtable_i_i19_i_i1615=HEAP32[(($221)>>2)];
 var $vfn_i_i20_i_i1616=(($vtable_i_i19_i_i1615+36)|0);
 var $222=HEAP32[(($vfn_i_i20_i_i1616)>>2)];
 var $call_i_i21_i_i1632=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$222]($218) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=218;break; } else { var $_ph_ph334_ph_ph_ph_ph_ph=$210;var $__gb_sroa_1_4_load271290_ph_ph333_ph_ph_ph_ph_ph=$__gb_sroa_1_4_load271292;label=24;break; }
 case 218: 
 var $cmp_i7_i26_i_i1621=($call_i_i21_i_i1632|0)==-1;
 if($cmp_i7_i26_i_i1621){label=219;break;}else{label=221;break;}
 case 219: 
 HEAP32[(($__sbuf__i11_i_i649)>>2)]=0;
 label=220;break;
 case 220: 
 if($cmp_i_i_i1603){label=227;break;}else{var $223=0;label=222;break;}
 case 221: 
 if($cmp_i_i_i1603){var $223=$218;label=222;break;}else{label=227;break;}
 case 222: 
 var $223;
 var $224=HEAP32[(($__sbuf__i_i_i627)>>2)];
 var $__ninp__i_i1487=(($224+12)|0);
 var $225=HEAP32[(($__ninp__i_i1487)>>2)];
 var $__einp__i_i1488=(($224+16)|0);
 var $226=HEAP32[(($__einp__i_i1488)>>2)];
 var $cmp_i_i1489=($225|0)==($226|0);
 if($cmp_i_i1489){label=223;break;}else{label=225;break;}
 case 223: 
 var $227=$224;
 var $vtable_i_i1490=HEAP32[(($227)>>2)];
 var $vfn_i_i1491=(($vtable_i_i1490+36)|0);
 var $228=HEAP32[(($vfn_i_i1491)>>2)];
 var $call_i_i1498=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$228]($224) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=224;break; } else { var $_ph_ph334_ph_ph_ph_ph_ph=$210;var $__gb_sroa_1_4_load271290_ph_ph333_ph_ph_ph_ph_ph=$__gb_sroa_1_4_load271292;label=24;break; }
 case 224: 
 var $extract_t109=(($call_i_i1498)&255);
 var $retval_i_i1481_0_off0=$extract_t109;label=226;break;
 case 225: 
 var $229=HEAP8[($225)];
 var $retval_i_i1481_0_off0=$229;label=226;break;
 case 226: 
 var $retval_i_i1481_0_off0;
 var $230=HEAP8[($__dp)];
 var $cmp259=(($retval_i_i1481_0_off0<<24)>>24)==(($230<<24)>>24);
 if($cmp259){label=228;break;}else{label=227;break;}
 case 227: 
 var $231=HEAP32[(($__err)>>2)];
 var $or261=$231|4;
 HEAP32[(($__err)>>2)]=$or261;
 var $retval_0=0;var $313=$210;var $__gb_sroa_1_4_load271298=$__gb_sroa_1_4_load271292;label=308;break;
 case 228: 
 var $232=HEAP32[(($__sbuf__i_i_i627)>>2)];
 var $__ninp__i_i1406=(($232+12)|0);
 var $233=HEAP32[(($__ninp__i_i1406)>>2)];
 var $__einp__i_i1407=(($232+16)|0);
 var $234=HEAP32[(($__einp__i_i1407)>>2)];
 var $cmp_i_i1408=($233|0)==($234|0);
 if($cmp_i_i1408){label=229;break;}else{label=230;break;}
 case 229: 
 var $235=$232;
 var $vtable_i_i1409=HEAP32[(($235)>>2)];
 var $vfn_i_i1410=(($vtable_i_i1409+40)|0);
 var $236=HEAP32[(($vfn_i_i1410)>>2)];
 var $call_i_i1417=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$236]($232) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $__we307363=$__we308;var $237=$223;label=231;break; } else { var $_ph_ph334_ph_ph_ph_ph_ph=$210;var $__gb_sroa_1_4_load271290_ph_ph333_ph_ph_ph_ph_ph=$__gb_sroa_1_4_load271292;label=24;break; }
 case 230: 
 var $incdec_ptr_i_i1413=(($233+1)|0);
 HEAP32[(($__ninp__i_i1406)>>2)]=$incdec_ptr_i_i1413;
 var $__we307363=$__we308;var $237=$223;label=231;break;
 case 231: 
 var $237;
 var $__we307363;
 var $238=HEAP32[(($__sbuf__i_i_i627)>>2)];
 var $tobool_i_i_i1223=($238|0)==0;
 if($tobool_i_i_i1223){var $243=0;label=237;break;}else{label=232;break;}
 case 232: 
 var $__ninp__i_i_i_i1226=(($238+12)|0);
 var $239=HEAP32[(($__ninp__i_i_i_i1226)>>2)];
 var $__einp__i_i_i_i1227=(($238+16)|0);
 var $240=HEAP32[(($__einp__i_i_i_i1227)>>2)];
 var $cmp_i_i_i_i1228=($239|0)==($240|0);
 if($cmp_i_i_i_i1228){label=233;break;}else{var $243=$238;label=237;break;}
 case 233: 
 var $241=$238;
 var $vtable_i_i_i_i1230=HEAP32[(($241)>>2)];
 var $vfn_i_i_i_i1231=(($vtable_i_i_i_i1230+36)|0);
 var $242=HEAP32[(($vfn_i_i_i_i1231)>>2)];
 var $call_i_i_i_i1268=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$242]($238) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=234;break; } else { label=20;break; }
 case 234: 
 var $cmp_i7_i_i_i1236=($call_i_i_i_i1268|0)==-1;
 if($cmp_i7_i_i_i1236){label=236;break;}else{label=235;break;}
 case 235: 
 var $_pre550=HEAP32[(($__sbuf__i_i_i627)>>2)];
 var $243=$_pre550;label=237;break;
 case 236: 
 HEAP32[(($__sbuf__i_i_i627)>>2)]=0;
 var $243=0;label=237;break;
 case 237: 
 var $243;
 var $cmp_i_i_i1241=($243|0)==0;
 var $tobool_i12_i_i1245=($237|0)==0;
 if($tobool_i12_i_i1245){label=243;break;}else{label=238;break;}
 case 238: 
 var $__ninp__i_i15_i_i1249=(($237+12)|0);
 var $244=HEAP32[(($__ninp__i_i15_i_i1249)>>2)];
 var $__einp__i_i16_i_i1250=(($237+16)|0);
 var $245=HEAP32[(($__einp__i_i16_i_i1250)>>2)];
 var $cmp_i_i17_i_i1251=($244|0)==($245|0);
 if($cmp_i_i17_i_i1251){label=240;break;}else{label=239;break;}
 case 239: 
 if($cmp_i_i_i1241){var $248=$237;label=245;break;}else{label=252;break;}
 case 240: 
 var $246=$237;
 var $vtable_i_i19_i_i1253=HEAP32[(($246)>>2)];
 var $vfn_i_i20_i_i1254=(($vtable_i_i19_i_i1253+36)|0);
 var $247=HEAP32[(($vfn_i_i20_i_i1254)>>2)];
 var $call_i_i21_i_i1270=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$247]($237) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=241;break; } else { label=20;break; }
 case 241: 
 var $cmp_i7_i26_i_i1259=($call_i_i21_i_i1270|0)==-1;
 if($cmp_i7_i26_i_i1259){label=242;break;}else{label=244;break;}
 case 242: 
 HEAP32[(($__sbuf__i11_i_i649)>>2)]=0;
 label=243;break;
 case 243: 
 if($cmp_i_i_i1241){label=252;break;}else{var $248=0;label=245;break;}
 case 244: 
 if($cmp_i_i_i1241){var $248=$237;label=245;break;}else{label=252;break;}
 case 245: 
 var $248;
 var $249=HEAP32[(($__sbuf__i_i_i627)>>2)];
 var $__ninp__i_i1154=(($249+12)|0);
 var $250=HEAP32[(($__ninp__i_i1154)>>2)];
 var $__einp__i_i1155=(($249+16)|0);
 var $251=HEAP32[(($__einp__i_i1155)>>2)];
 var $cmp_i_i1156=($250|0)==($251|0);
 if($cmp_i_i1156){label=246;break;}else{label=248;break;}
 case 246: 
 var $252=$249;
 var $vtable_i_i1157=HEAP32[(($252)>>2)];
 var $vfn_i_i1158=(($vtable_i_i1157+36)|0);
 var $253=HEAP32[(($vfn_i_i1158)>>2)];
 var $call_i_i1165=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$253]($249) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=247;break; } else { label=20;break; }
 case 247: 
 var $extract_t111=(($call_i_i1165)&255);
 var $retval_i_i1148_0_off0=$extract_t111;label=249;break;
 case 248: 
 var $254=HEAP8[($250)];
 var $retval_i_i1148_0_off0=$254;label=249;break;
 case 249: 
 var $retval_i_i1148_0_off0;
 var $conv_i1091=(($retval_i_i1148_0_off0<<24)>>24);
 var $call_i1104=(function() { try { __THREW__ = 0; return _isascii($conv_i1091) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=250;break; } else { label=20;break; }
 case 250: 
 var $tobool_i1092=($call_i1104|0)==0;
 if($tobool_i1092){label=252;break;}else{label=251;break;}
 case 251: 
 var $255=HEAP32[(($__tab__i)>>2)];
 var $arrayidx_i1095=(($255+($conv_i1091<<1))|0);
 var $256=HEAP16[(($arrayidx_i1095)>>1)];
 var $and_i1098=$256&2048;
 var $cmp_i1099=(($and_i1098<<16)>>16)==0;
 if($cmp_i1099){label=252;break;}else{label=253;break;}
 case 252: 
 var $257=HEAP32[(($__err)>>2)];
 var $or276=$257|4;
 HEAP32[(($__err)>>2)]=$or276;
 var $retval_0=0;var $313=$210;var $__gb_sroa_1_4_load271298=$__gb_sroa_1_4_load271292;label=308;break;
 case 253: 
 var $258=HEAP32[(($__wn)>>2)];
 var $cmp278=($258|0)==($__we307363|0);
 if($cmp278){label=254;break;}else{var $__we306=$__we307363;var $265=$258;label=263;break;}
 case 254: 
 var $259=HEAP32[(($__second__i_i_i_i)>>2)];
 var $cmp_i217=($259|0)!=((448)|0);
 var $260=HEAP32[(($__first__i_i_i570)>>2)];
 var $sub_ptr_lhs_cast_i219=$__we307363;
 var $sub_ptr_rhs_cast_i220=$260;
 var $sub_ptr_sub_i221=((($sub_ptr_lhs_cast_i219)-($sub_ptr_rhs_cast_i220))|0);
 var $cmp3_i222=($sub_ptr_sub_i221>>>0)<2147483647;
 var $mul4_i223=$sub_ptr_sub_i221<<1;
 var $cond_i224=($cmp3_i222?$mul4_i223:-1);
 var $__i227=($cmp_i217?$260:0);
 var $call15_i228=_realloc($__i227,$cond_i224);
 var $cmp16_i229=($call15_i228|0)==0;
 if($cmp16_i229){label=255;break;}else{label=256;break;}
 case 255: 
 (function() { try { __THREW__ = 0; return __ZSt17__throw_bad_allocv() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=256;break; } else { label=20;break; }
 case 256: 
 if($cmp_i217){label=257;break;}else{label=258;break;}
 case 257: 
 HEAP32[(($__first__i_i_i570)>>2)]=$call15_i228;
 var $263=$call15_i228;label=262;break;
 case 258: 
 var $_pr_i233=HEAP32[(($__first__i_i_i570)>>2)];
 HEAP32[(($__first__i_i_i570)>>2)]=$call15_i228;
 var $tobool_i_i_i234=($_pr_i233|0)==0;
 if($tobool_i_i_i234){var $263=$call15_i228;label=262;break;}else{label=259;break;}
 case 259: 
 var $261=HEAP32[(($__second__i_i_i_i)>>2)];
 (function() { try { __THREW__ = 0; return FUNCTION_TABLE[$261]($_pr_i233) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=260;break; } else { label=261;break; }
 case 260: 
 var $_pre_i237=HEAP32[(($__first__i_i_i570)>>2)];
 var $263=$_pre_i237;label=262;break;
 case 261: 
 var $262$0 = ___cxa_find_matching_catch(-1, -1,0); var $262$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 262: 
 var $263;
 HEAP32[(($__second__i_i_i_i)>>2)]=236;
 var $add_ptr_i240=(($263+$sub_ptr_sub_i221)|0);
 HEAP32[(($__wn)>>2)]=$add_ptr_i240;
 var $264=HEAP32[(($__first__i_i_i570)>>2)];
 var $add_ptr26_i241=(($264+$cond_i224)|0);
 var $__we306=$add_ptr26_i241;var $265=$add_ptr_i240;label=263;break;
 case 263: 
 var $265;
 var $__we306;
 var $266=HEAP32[(($__sbuf__i_i_i627)>>2)];
 var $__ninp__i_i992=(($266+12)|0);
 var $267=HEAP32[(($__ninp__i_i992)>>2)];
 var $__einp__i_i993=(($266+16)|0);
 var $268=HEAP32[(($__einp__i_i993)>>2)];
 var $cmp_i_i994=($267|0)==($268|0);
 if($cmp_i_i994){label=264;break;}else{label=266;break;}
 case 264: 
 var $269=$266;
 var $vtable_i_i995=HEAP32[(($269)>>2)];
 var $vfn_i_i996=(($vtable_i_i995+36)|0);
 var $270=HEAP32[(($vfn_i_i996)>>2)];
 var $call_i_i1003=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$270]($266) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=265;break; } else { label=20;break; }
 case 265: 
 var $extract_t113=(($call_i_i1003)&255);
 var $_pre543=HEAP32[(($__wn)>>2)];
 var $retval_i_i986_0_off0=$extract_t113;var $272=$_pre543;label=267;break;
 case 266: 
 var $271=HEAP8[($267)];
 var $retval_i_i986_0_off0=$271;var $272=$265;label=267;break;
 case 267: 
 var $272;
 var $retval_i_i986_0_off0;
 var $incdec_ptr284=(($272+1)|0);
 HEAP32[(($__wn)>>2)]=$incdec_ptr284;
 HEAP8[($272)]=$retval_i_i986_0_off0;
 var $273=HEAP32[(($__fd)>>2)];
 var $dec=((($273)-(1))|0);
 HEAP32[(($__fd)>>2)]=$dec;
 var $274=HEAP32[(($__sbuf__i_i_i627)>>2)];
 var $__ninp__i_i596=(($274+12)|0);
 var $275=HEAP32[(($__ninp__i_i596)>>2)];
 var $__einp__i_i597=(($274+16)|0);
 var $276=HEAP32[(($__einp__i_i597)>>2)];
 var $cmp_i_i598=($275|0)==($276|0);
 if($cmp_i_i598){label=268;break;}else{label=270;break;}
 case 268: 
 var $277=$274;
 var $vtable_i_i599=HEAP32[(($277)>>2)];
 var $vfn_i_i600=(($vtable_i_i599+40)|0);
 var $278=HEAP32[(($vfn_i_i600)>>2)];
 var $call_i_i607=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$278]($274) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=269;break; } else { label=20;break; }
 case 269: 
 var $cmp266=($dec|0)>0;
 if($cmp266){var $__we307363=$__we306;var $237=$248;label=231;break;}else{var $__we305=$__we306;label=271;break;}
 case 270: 
 var $incdec_ptr_i_i603=(($275+1)|0);
 HEAP32[(($__ninp__i_i596)>>2)]=$incdec_ptr_i_i603;
 label=269;break;
 case 271: 
 var $__we305;
 var $279=HEAP32[(($__wn)>>2)];
 var $280=HEAP32[(($__first__i_i_i570)>>2)];
 var $cmp291=($279|0)==($280|0);
 if($cmp291){label=272;break;}else{var $__trailing_sign_1=$__trailing_sign_0468;var $add_ptr277=$add_ptr278;var $__gb_sroa_0_0_load261283=$__gb_sroa_0_0_load261284;var $282=$210;var $__gb_sroa_1_4_load271296=$__gb_sroa_1_4_load271292;var $__we304=$__we305;label=273;break;}
 case 272: 
 var $281=HEAP32[(($__err)>>2)];
 var $or293=$281|4;
 HEAP32[(($__err)>>2)]=$or293;
 var $retval_0=0;var $313=$210;var $__gb_sroa_1_4_load271298=$__gb_sroa_1_4_load271292;label=308;break;
 case 273: 
 var $__we304;
 var $__gb_sroa_1_4_load271296;
 var $282;
 var $__gb_sroa_0_0_load261283;
 var $add_ptr277;
 var $__trailing_sign_1;
 var $inc296=((($__p_0470)+(1))|0);
 var $cmp=($inc296>>>0)<4;
 if($cmp){var $__we303456=$__we304;var $__gb_sroa_1_4_load271297459=$__gb_sroa_1_4_load271296;var $1=$282;var $__gb_sroa_0_0_load261282462=$__gb_sroa_0_0_load261283;var $add_ptr276465=$add_ptr277;var $__trailing_sign_0468=$__trailing_sign_1;var $__p_0470=$inc296;label=3;break;}else{var $__gb_sroa_1_4_load271297_lcssa=$__gb_sroa_1_4_load271296;var $_lcssa=$282;var $__gb_sroa_0_0_load261282_lcssa=$__gb_sroa_0_0_load261283;var $__trailing_sign_0_lcssa=$__trailing_sign_1;label=274;break;}
 case 274: 
 var $__trailing_sign_0_lcssa;
 var $__gb_sroa_0_0_load261282_lcssa;
 var $_lcssa;
 var $__gb_sroa_1_4_load271297_lcssa;
 var $tobool298=($__trailing_sign_0_lcssa|0)==0;
 if($tobool298){label=305;break;}else{label=275;break;}
 case 275: 
 var $__s_i_i=$__trailing_sign_0_lcssa;
 var $__size__i_i=$__trailing_sign_0_lcssa;
 var $arrayidx_i_i_i_i=(($__s_i_i+1)|0);
 var $__data__i21_i_i_i=(($__trailing_sign_0_lcssa+8)|0);
 var $__size__i23_i=(($__trailing_sign_0_lcssa+4)|0);
 var $__i_0=1;label=276;break;
 case 276: 
 var $__i_0;
 var $283=HEAP8[($__size__i_i)];
 var $conv_i_i580=($283&255);
 var $and_i_i=$conv_i_i580&1;
 var $tobool_i_i=($and_i_i|0)==0;
 if($tobool_i_i){label=278;break;}else{label=277;break;}
 case 277: 
 var $284=HEAP32[(($__size__i23_i)>>2)];
 var $cond_i=$284;label=279;break;
 case 278: 
 var $shr_i_i107=$conv_i_i580>>>1;
 var $cond_i=$shr_i_i107;label=279;break;
 case 279: 
 var $cond_i;
 var $cmp303=($__i_0>>>0)<($cond_i>>>0);
 if($cmp303){label=280;break;}else{label=305;break;}
 case 280: 
 var $285=HEAP32[(($__sbuf__i_i_i627)>>2)];
 var $tobool_i_i_i524=($285|0)==0;
 if($tobool_i_i_i524){var $290=0;label=286;break;}else{label=281;break;}
 case 281: 
 var $__ninp__i_i_i_i=(($285+12)|0);
 var $286=HEAP32[(($__ninp__i_i_i_i)>>2)];
 var $__einp__i_i_i_i=(($285+16)|0);
 var $287=HEAP32[(($__einp__i_i_i_i)>>2)];
 var $cmp_i_i_i_i=($286|0)==($287|0);
 if($cmp_i_i_i_i){label=282;break;}else{var $290=$285;label=286;break;}
 case 282: 
 var $288=$285;
 var $vtable_i_i_i_i=HEAP32[(($288)>>2)];
 var $vfn_i_i_i_i=(($vtable_i_i_i_i+36)|0);
 var $289=HEAP32[(($vfn_i_i_i_i)>>2)];
 var $call_i_i_i_i529=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$289]($285) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=283;break; } else { label=18;break; }
 case 283: 
 var $cmp_i7_i_i_i=($call_i_i_i_i529|0)==-1;
 if($cmp_i7_i_i_i){label=285;break;}else{label=284;break;}
 case 284: 
 var $_pre551=HEAP32[(($__sbuf__i_i_i627)>>2)];
 var $290=$_pre551;label=286;break;
 case 285: 
 HEAP32[(($__sbuf__i_i_i627)>>2)]=0;
 var $290=0;label=286;break;
 case 286: 
 var $290;
 var $cmp_i_i_i527=($290|0)==0;
 var $291=HEAP32[(($__sbuf__i11_i_i649)>>2)];
 var $tobool_i12_i_i=($291|0)==0;
 if($tobool_i12_i_i){label=292;break;}else{label=287;break;}
 case 287: 
 var $__ninp__i_i15_i_i=(($291+12)|0);
 var $292=HEAP32[(($__ninp__i_i15_i_i)>>2)];
 var $__einp__i_i16_i_i=(($291+16)|0);
 var $293=HEAP32[(($__einp__i_i16_i_i)>>2)];
 var $cmp_i_i17_i_i=($292|0)==($293|0);
 if($cmp_i_i17_i_i){label=289;break;}else{label=288;break;}
 case 288: 
 if($cmp_i_i_i527){label=294;break;}else{label=301;break;}
 case 289: 
 var $294=$291;
 var $vtable_i_i19_i_i=HEAP32[(($294)>>2)];
 var $vfn_i_i20_i_i=(($vtable_i_i19_i_i+36)|0);
 var $295=HEAP32[(($vfn_i_i20_i_i)>>2)];
 var $call_i_i21_i_i530=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$295]($291) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=290;break; } else { label=18;break; }
 case 290: 
 var $cmp_i7_i26_i_i=($call_i_i21_i_i530|0)==-1;
 if($cmp_i7_i26_i_i){label=291;break;}else{label=293;break;}
 case 291: 
 HEAP32[(($__sbuf__i11_i_i649)>>2)]=0;
 label=292;break;
 case 292: 
 if($cmp_i_i_i527){label=301;break;}else{label=294;break;}
 case 293: 
 if($cmp_i_i_i527){label=294;break;}else{label=301;break;}
 case 294: 
 var $296=HEAP32[(($__sbuf__i_i_i627)>>2)];
 var $__ninp__i_i476=(($296+12)|0);
 var $297=HEAP32[(($__ninp__i_i476)>>2)];
 var $__einp__i_i477=(($296+16)|0);
 var $298=HEAP32[(($__einp__i_i477)>>2)];
 var $cmp_i_i478=($297|0)==($298|0);
 if($cmp_i_i478){label=295;break;}else{label=297;break;}
 case 295: 
 var $299=$296;
 var $vtable_i_i479=HEAP32[(($299)>>2)];
 var $vfn_i_i480=(($vtable_i_i479+36)|0);
 var $300=HEAP32[(($vfn_i_i480)>>2)];
 var $call_i_i486=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$300]($296) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=296;break; } else { label=18;break; }
 case 296: 
 var $extract_t=(($call_i_i486)&255);
 var $retval_i_i470_0_off0=$extract_t;label=298;break;
 case 297: 
 var $301=HEAP8[($297)];
 var $retval_i_i470_0_off0=$301;label=298;break;
 case 298: 
 var $retval_i_i470_0_off0;
 var $302=HEAP8[($__size__i_i)];
 var $and_i_i_i_i=$302&1;
 var $tobool_i_i_i_i=(($and_i_i_i_i<<24)>>24)==0;
 if($tobool_i_i_i_i){var $cond_i_i_i=$arrayidx_i_i_i_i;label=300;break;}else{label=299;break;}
 case 299: 
 var $303=HEAP32[(($__data__i21_i_i_i)>>2)];
 var $cond_i_i_i=$303;label=300;break;
 case 300: 
 var $cond_i_i_i;
 var $add_ptr_i=(($cond_i_i_i+$__i_0)|0);
 var $304=HEAP8[($add_ptr_i)];
 var $cmp314=(($retval_i_i470_0_off0<<24)>>24)==(($304<<24)>>24);
 if($cmp314){label=302;break;}else{label=301;break;}
 case 301: 
 var $305=HEAP32[(($__err)>>2)];
 var $or316=$305|4;
 HEAP32[(($__err)>>2)]=$or316;
 var $retval_0=0;var $313=$_lcssa;var $__gb_sroa_1_4_load271298=$__gb_sroa_1_4_load271297_lcssa;label=308;break;
 case 302: 
 var $inc319=((($__i_0)+(1))|0);
 var $306=HEAP32[(($__sbuf__i_i_i627)>>2)];
 var $__ninp__i_i=(($306+12)|0);
 var $307=HEAP32[(($__ninp__i_i)>>2)];
 var $__einp__i_i=(($306+16)|0);
 var $308=HEAP32[(($__einp__i_i)>>2)];
 var $cmp_i_i=($307|0)==($308|0);
 if($cmp_i_i){label=303;break;}else{label=304;break;}
 case 303: 
 var $309=$306;
 var $vtable_i_i=HEAP32[(($309)>>2)];
 var $vfn_i_i=(($vtable_i_i+40)|0);
 var $310=HEAP32[(($vfn_i_i)>>2)];
 var $call_i_i422=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$310]($306) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $__i_0=$inc319;label=276;break; } else { label=18;break; }
 case 304: 
 var $incdec_ptr_i_i=(($307+1)|0);
 HEAP32[(($__ninp__i_i)>>2)]=$incdec_ptr_i_i;
 var $__i_0=$inc319;label=276;break;
 case 305: 
 var $cmp325=($_lcssa|0)==($__gb_sroa_0_0_load261282_lcssa|0);
 if($cmp325){var $retval_0=1;var $313=$__gb_sroa_0_0_load261282_lcssa;var $__gb_sroa_1_4_load271298=$__gb_sroa_1_4_load271297_lcssa;label=308;break;}else{label=306;break;}
 case 306: 
 HEAP32[(($__et)>>2)]=0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grp,$_lcssa,$__gb_sroa_0_0_load261282_lcssa,$__et);
 var $311=HEAP32[(($__et)>>2)];
 var $tobool330=($311|0)==0;
 if($tobool330){var $retval_0=1;var $313=$_lcssa;var $__gb_sroa_1_4_load271298=$__gb_sroa_1_4_load271297_lcssa;label=308;break;}else{label=307;break;}
 case 307: 
 var $312=HEAP32[(($__err)>>2)];
 var $or332=$312|4;
 HEAP32[(($__err)>>2)]=$or332;
 var $retval_0=0;var $313=$_lcssa;var $__gb_sroa_1_4_load271298=$__gb_sroa_1_4_load271297_lcssa;label=308;break;
 case 308: 
 var $__gb_sroa_1_4_load271298;
 var $313;
 var $retval_0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__spaces);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__nsn);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__psn);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grp);
 var $tobool_i_i_i=($313|0)==0;
 if($tobool_i_i_i){label=311;break;}else{label=309;break;}
 case 309: 
 var $314=$313;
 (function() { try { __THREW__ = 0; return FUNCTION_TABLE[$__gb_sroa_1_4_load271298]($314) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=311;break; } else { label=310;break; }
 case 310: 
 var $315$0 = ___cxa_find_matching_catch(-1, -1,0); var $315$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 311: 
 STACKTOP=sp;return $retval_0;
 case 312: 
 ___resumeException($lpad_phi$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__121__throw_runtime_errorEPKc($msg){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $exception=___cxa_allocate_exception(8);
 var $0=$exception;
 (function() { try { __THREW__ = 0; return __ZNSt13runtime_errorC2EPKc($0,$msg) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=3;break; }
 case 2: 
 ___cxa_throw($exception,10280,(46));
 throw "Reached an unreachable!";
 case 3: 
 var $1$0 = ___cxa_find_matching_catch(-1, -1); var $1$1 = tempRet0;
 ___cxa_free_exception($exception);
 ___resumeException($1$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE($agg_result,$this,$__b,$__e,$__intl,$__iob,$__err,$__v){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+160)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__p_i_i_i=sp;
 var $__wbuf=(sp)+(16);
 var $__wb=(sp)+(120);
 var $__wn=(sp)+(128);
 var $__loc=(sp)+(136);
 var $__neg=(sp)+(144);
 var $agg_tmp=(sp)+(152);
 var $arraydecay=(($__wbuf)|0);
 var $__first__i_i_i_i_i=(($__wb)|0);
 HEAP32[(($__first__i_i_i_i_i)>>2)]=$arraydecay;
 var $__second__i_i_i_i_i=(($__wb+4)|0);
 HEAP32[(($__second__i_i_i_i_i)>>2)]=448;
 var $add_ptr=(($__wbuf+100)|0);
 (function() { try { __THREW__ = 0; return __ZNKSt3__18ios_base6getlocEv($__loc,$__iob) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=16;break; }
 case 2: 
 var $__locale__i=(($__loc)|0);
 var $0=HEAP32[(($__locale__i)>>2)];
 var $1=$__p_i_i_i;
 var $2=HEAP32[((15384)>>2)];
 var $cmp_i_i_i12=($2|0)==-1;
 if($cmp_i_i_i12){label=4;break;}else{label=3;break;}
 case 3: 
 var $ref_tmp_i_sroa_0_0__idx_i_i=(($__p_i_i_i)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i)>>2)]=15384;
 var $ref_tmp_i_sroa_1_4__idx6_i_i=(($__p_i_i_i+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i=(($__p_i_i_i+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(15384,$1,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=4;break; } else { label=40;break; }
 case 4: 
 var $3=HEAP32[((15388)>>2)];
 var $sub_i_i=((($3)-(1))|0);
 var $__end__i_i_i_i=(($0+12)|0);
 var $4=HEAP32[(($__end__i_i_i_i)>>2)];
 var $__begin__i_i_i_i=(($0+8)|0);
 var $5=HEAP32[(($__begin__i_i_i_i)>>2)];
 var $sub_ptr_lhs_cast_i_i_i_i=$4;
 var $sub_ptr_rhs_cast_i_i_i_i=$5;
 var $sub_ptr_sub_i_i_i_i=((($sub_ptr_lhs_cast_i_i_i_i)-($sub_ptr_rhs_cast_i_i_i_i))|0);
 var $sub_ptr_div_i_i_i_i=$sub_ptr_sub_i_i_i_i>>2;
 var $cmp_i_i1_i=($sub_ptr_div_i_i_i_i>>>0)>($sub_i_i>>>0);
 if($cmp_i_i1_i){label=5;break;}else{label=6;break;}
 case 5: 
 var $arrayidx_i_i_i_i=(($5+($sub_i_i<<2))|0);
 var $6=HEAP32[(($arrayidx_i_i_i_i)>>2)];
 var $tobool_i_i_i14=($6|0)==0;
 if($tobool_i_i_i14){label=6;break;}else{label=8;break;}
 case 6: 
 var $exception_i_i=___cxa_allocate_exception(4);
 var $7=$exception_i_i;
 __ZNSt8bad_castC2Ev($7);
 (function() { try { __THREW__ = 0; return ___cxa_throw($exception_i_i,10264,(376)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=7;break; } else { label=40;break; }
 case 7: 
 throw "Reached an unreachable!";
 case 8: 
 var $8=$6;
 HEAP8[($__neg)]=0;
 var $9=(($__e)|0);
 var $10=HEAP32[(($9)>>2)];
 var $11=(($agg_tmp)|0);
 HEAP32[(($11)>>2)]=$10;
 var $__fmtflags__i=(($__iob+4)|0);
 var $12=HEAP32[(($__fmtflags__i)>>2)];
 var $call8=(function() { try { __THREW__ = 0; return __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_($__b,$agg_tmp,$__intl,$__loc,$12,$__err,$__neg,$8,$__wb,$__wn,$add_ptr) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=9;break; } else { label=40;break; }
 case 9: 
 if($call8){label=10;break;}else{label=22;break;}
 case 10: 
 var $__size__i46_i=$__v;
 var $13=HEAP8[($__size__i46_i)];
 var $and_i_i=$13&1;
 var $tobool_i_i=(($and_i_i<<24)>>24)==0;
 if($tobool_i_i){label=12;break;}else{label=11;break;}
 case 11: 
 var $__data__i36_i=(($__v+8)|0);
 var $14=HEAP32[(($__data__i36_i)>>2)];
 HEAP8[($14)]=0;
 var $__size__i24_i=(($__v+4)|0);
 HEAP32[(($__size__i24_i)>>2)]=0;
 label=13;break;
 case 12: 
 var $__s_i45_i=$__v;
 var $arrayidx_i_i=(($__s_i45_i+1)|0);
 HEAP8[($arrayidx_i_i)]=0;
 HEAP8[($__size__i46_i)]=0;
 label=13;break;
 case 13: 
 var $15=HEAP8[($__neg)];
 var $16=$15&1;
 var $tobool9=(($16<<24)>>24)==0;
 var $_pre21=$6;
 if($tobool9){label=17;break;}else{label=14;break;}
 case 14: 
 var $vtable_i=HEAP32[(($_pre21)>>2)];
 var $vfn_i=(($vtable_i+28)|0);
 var $17=HEAP32[(($vfn_i)>>2)];
 var $call_i86=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$17]($8,45) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=15;break; } else { label=40;break; }
 case 15: 
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($__v,$call_i86) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=17;break; } else { label=40;break; }
 case 16: 
 var $18$0 = ___cxa_find_matching_catch(-1, -1); var $18$1 = tempRet0;
 var $19=$18$0;
 var $20=$18$1;
 HEAP32[(($__first__i_i_i_i_i)>>2)]=0;
 var $47=$arraydecay;var $ehselector_slot_026=$20;var $exn_slot_028=$19;label=41;break;
 case 17: 
 var $vtable_i90=HEAP32[(($_pre21)>>2)];
 var $vfn_i91=(($vtable_i90+28)|0);
 var $21=HEAP32[(($vfn_i91)>>2)];
 var $call_i92=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$21]($8,48) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=18;break; } else { label=40;break; }
 case 18: 
 var $22=HEAP32[(($__first__i_i_i_i_i)>>2)];
 var $23=HEAP32[(($__wn)>>2)];
 var $add_ptr17=((($23)-(1))|0);
 var $__w_0=$22;label=19;break;
 case 19: 
 var $__w_0;
 var $cmp=($__w_0>>>0)<($add_ptr17>>>0);
 if($cmp){label=20;break;}else{label=21;break;}
 case 20: 
 var $24=HEAP8[($__w_0)];
 var $cmp19=(($24<<24)>>24)==(($call_i92<<24)>>24);
 var $incdec_ptr=(($__w_0+1)|0);
 if($cmp19){var $__w_0=$incdec_ptr;label=19;break;}else{label=21;break;}
 case 21: 
 var $call23=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_($__v,$__w_0,$23) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=22;break; } else { label=40;break; }
 case 22: 
 var $__sbuf__i_i_i=(($__b)|0);
 var $25=HEAP32[(($__sbuf__i_i_i)>>2)];
 var $tobool_i_i_i105=($25|0)==0;
 if($tobool_i_i_i105){var $30=0;label=27;break;}else{label=23;break;}
 case 23: 
 var $__ninp__i_i_i_i=(($25+12)|0);
 var $26=HEAP32[(($__ninp__i_i_i_i)>>2)];
 var $__einp__i_i_i_i=(($25+16)|0);
 var $27=HEAP32[(($__einp__i_i_i_i)>>2)];
 var $cmp_i_i_i_i=($26|0)==($27|0);
 if($cmp_i_i_i_i){label=24;break;}else{var $30=$25;label=27;break;}
 case 24: 
 var $28=$25;
 var $vtable_i_i_i_i=HEAP32[(($28)>>2)];
 var $vfn_i_i_i_i=(($vtable_i_i_i_i+36)|0);
 var $29=HEAP32[(($vfn_i_i_i_i)>>2)];
 var $call_i_i_i_i109=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$29]($25) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=25;break; } else { label=40;break; }
 case 25: 
 var $cmp_i7_i_i_i=($call_i_i_i_i109|0)==-1;
 if($cmp_i7_i_i_i){label=26;break;}else{var $30=$25;label=27;break;}
 case 26: 
 HEAP32[(($__sbuf__i_i_i)>>2)]=0;
 var $30=0;label=27;break;
 case 27: 
 var $30;
 var $cmp_i_i_i=($30|0)==0;
 var $tobool_i12_i_i=($10|0)==0;
 if($tobool_i12_i_i){label=33;break;}else{label=28;break;}
 case 28: 
 var $__ninp__i_i15_i_i=(($10+12)|0);
 var $31=HEAP32[(($__ninp__i_i15_i_i)>>2)];
 var $__einp__i_i16_i_i=(($10+16)|0);
 var $32=HEAP32[(($__einp__i_i16_i_i)>>2)];
 var $cmp_i_i17_i_i=($31|0)==($32|0);
 if($cmp_i_i17_i_i){label=30;break;}else{label=29;break;}
 case 29: 
 if($cmp_i_i_i){label=36;break;}else{label=35;break;}
 case 30: 
 var $33=$10;
 var $vtable_i_i19_i_i=HEAP32[(($33)>>2)];
 var $vfn_i_i20_i_i=(($vtable_i_i19_i_i+36)|0);
 var $34=HEAP32[(($vfn_i_i20_i_i)>>2)];
 var $call_i_i21_i_i110=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$34]($10) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=31;break; } else { label=40;break; }
 case 31: 
 var $cmp_i7_i26_i_i=($call_i_i21_i_i110|0)==-1;
 if($cmp_i7_i26_i_i){label=32;break;}else{label=34;break;}
 case 32: 
 HEAP32[(($9)>>2)]=0;
 label=33;break;
 case 33: 
 if($cmp_i_i_i){label=35;break;}else{label=36;break;}
 case 34: 
 var $cmp_i31_i_i=($10|0)==0;
 var $cmp_i_itmp=$cmp_i_i_i^$cmp_i31_i_i;
 if($cmp_i_itmp){label=36;break;}else{label=35;break;}
 case 35: 
 var $35=HEAP32[(($__err)>>2)];
 var $or=$35|2;
 HEAP32[(($__err)>>2)]=$or;
 label=36;break;
 case 36: 
 var $36=(($agg_result)|0);
 HEAP32[(($36)>>2)]=$30;
 var $37=HEAP32[(($__locale__i)>>2)];
 var $38=(($37)|0);
 var $call_i18=__ZNSt3__114__shared_count16__release_sharedEv($38);
 var $39=HEAP32[(($__first__i_i_i_i_i)>>2)];
 HEAP32[(($__first__i_i_i_i_i)>>2)]=0;
 var $tobool_i_i_i75=($39|0)==0;
 if($tobool_i_i_i75){label=39;break;}else{label=37;break;}
 case 37: 
 var $40=HEAP32[(($__second__i_i_i_i_i)>>2)];
 (function() { try { __THREW__ = 0; return FUNCTION_TABLE[$40]($39) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=39;break; } else { label=38;break; }
 case 38: 
 var $41$0 = ___cxa_find_matching_catch(-1, -1,0); var $41$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 39: 
 STACKTOP=sp;return;
 case 40: 
 var $42$0 = ___cxa_find_matching_catch(-1, -1); var $42$1 = tempRet0;
 var $43=$42$0;
 var $44=$42$1;
 var $45=HEAP32[(($__locale__i)>>2)];
 var $46=(($45)|0);
 var $call_i=__ZNSt3__114__shared_count16__release_sharedEv($46);
 var $_pre=HEAP32[(($__first__i_i_i_i_i)>>2)];
 HEAP32[(($__first__i_i_i_i_i)>>2)]=0;
 var $tobool_i_i_i=($_pre|0)==0;
 if($tobool_i_i_i){var $ehselector_slot_027=$44;var $exn_slot_029=$43;label=43;break;}else{var $47=$_pre;var $ehselector_slot_026=$44;var $exn_slot_028=$43;label=41;break;}
 case 41: 
 var $exn_slot_028;
 var $ehselector_slot_026;
 var $47;
 var $48=HEAP32[(($__second__i_i_i_i_i)>>2)];
 (function() { try { __THREW__ = 0; return FUNCTION_TABLE[$48]($47) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $ehselector_slot_027=$ehselector_slot_026;var $exn_slot_029=$exn_slot_028;label=43;break; } else { label=42;break; }
 case 42: 
 var $49$0 = ___cxa_find_matching_catch(-1, -1,0); var $49$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 43: 
 var $exn_slot_029;
 var $ehselector_slot_027;
 var $lpad_val$0=$exn_slot_029;
 var $lpad_val$1=0;
 var $lpad_val29$0=$lpad_val$0;
 var $lpad_val29$1=$ehselector_slot_027;
 ___resumeException($lpad_val29$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_($this,$__first,$__last){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__s_i_i=$this;
 var $__size__i_i=$this;
 var $sub_ptr_rhs_cast_i_i=$__first;
 var $0=HEAP8[($__size__i_i)];
 var $conv_i_i=($0&255);
 var $and_i_i=$conv_i_i&1;
 var $tobool_i_i=($and_i_i|0)==0;
 if($tobool_i_i){label=3;break;}else{label=2;break;}
 case 2: 
 var $__size__i23_i=(($this+4)|0);
 var $1=HEAP32[(($__size__i23_i)>>2)];
 var $cond_i=$1;label=4;break;
 case 3: 
 var $shr_i_i16=$conv_i_i>>>1;
 var $cond_i=$shr_i_i16;label=4;break;
 case 4: 
 var $cond_i;
 var $and_i_i75=$0&1;
 var $tobool_i_i76=(($and_i_i75<<24)>>24)==0;
 if($tobool_i_i76){var $cond_i84=10;var $4=$0;label=6;break;}else{label=5;break;}
 case 5: 
 var $__cap__i_i=(($this)|0);
 var $2=HEAP32[(($__cap__i_i)>>2)];
 var $and_i11_i=$2&-2;
 var $phitmp=((($and_i11_i)-(1))|0);
 var $3=(($2)&255);
 var $cond_i84=$phitmp;var $4=$3;label=6;break;
 case 6: 
 var $4;
 var $cond_i84;
 var $sub_ptr_lhs_cast_i_i=$__last;
 var $sub_ptr_sub_i_i=((($sub_ptr_lhs_cast_i_i)-($sub_ptr_rhs_cast_i_i))|0);
 var $tobool=($__last|0)==($__first|0);
 if($tobool){label=17;break;}else{label=7;break;}
 case 7: 
 var $sub=((($cond_i84)-($cond_i))|0);
 var $cmp=($sub>>>0)<($sub_ptr_sub_i_i>>>0);
 if($cmp){label=8;break;}else{var $5=$4;label=9;break;}
 case 8: 
 var $add=((($cond_i)+($sub_ptr_sub_i_i))|0);
 var $sub5=((($add)-($cond_i84))|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this,$cond_i84,$sub5,$cond_i,$cond_i,0,0);
 var $_pre=HEAP8[($__size__i_i)];
 var $5=$_pre;label=9;break;
 case 9: 
 var $5;
 var $and_i_i45=$5&1;
 var $tobool_i_i46=(($and_i_i45<<24)>>24)==0;
 if($tobool_i_i46){label=11;break;}else{label=10;break;}
 case 10: 
 var $__data__i21_i=(($this+8)|0);
 var $6=HEAP32[(($__data__i21_i)>>2)];
 var $cond_i61=$6;label=12;break;
 case 11: 
 var $arrayidx_i_i=(($__s_i_i+1)|0);
 var $cond_i61=$arrayidx_i_i;label=12;break;
 case 12: 
 var $cond_i61;
 var $add_ptr=(($cond_i61+$cond_i)|0);
 var $7=((($cond_i)-($sub_ptr_rhs_cast_i_i))|0);
 var $scevgep=(($__last+$7)|0);
 var $scevgep20=$scevgep;
 var $__first_addr_018=$__first;var $__p_019=$add_ptr;label=13;break;
 case 13: 
 var $__p_019;
 var $__first_addr_018;
 var $8=HEAP8[($__first_addr_018)];
 HEAP8[($__p_019)]=$8;
 var $incdec_ptr=(($__p_019+1)|0);
 var $incdec_ptr8=(($__first_addr_018+1)|0);
 var $cmp7=($incdec_ptr8|0)==($__last|0);
 if($cmp7){label=14;break;}else{var $__first_addr_018=$incdec_ptr8;var $__p_019=$incdec_ptr;label=13;break;}
 case 14: 
 var $scevgep21=(($cond_i61+$scevgep20)|0);
 HEAP8[($scevgep21)]=0;
 var $add9=((($cond_i)+($sub_ptr_sub_i_i))|0);
 var $9=HEAP8[($__size__i_i)];
 var $and_i_i24=$9&1;
 var $tobool_i_i25=(($and_i_i24<<24)>>24)==0;
 if($tobool_i_i25){label=16;break;}else{label=15;break;}
 case 15: 
 var $__size__i21_i=(($this+4)|0);
 HEAP32[(($__size__i21_i)>>2)]=$add9;
 label=17;break;
 case 16: 
 var $shl_i_i=$add9<<1;
 var $conv_i6_i=(($shl_i_i)&255);
 HEAP8[($__size__i_i)]=$conv_i6_i;
 label=17;break;
 case 17: 
 return $this;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__111__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri($__intl,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__psn,$__nsn,$__fd){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+56)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__p_i_i_i59=sp;
 var $__p_i_i_i=(sp)+(16);
 var $ref_tmp=(sp)+(32);
 var $ref_tmp1=(sp)+(40);
 var $0=$ref_tmp1;
 var $ref_tmp3=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $1=$ref_tmp3;
 var $ref_tmp7=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $2=$ref_tmp7;
 var $ref_tmp9=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $3=$ref_tmp9;
 var $ref_tmp14=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $ref_tmp15=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $4=$ref_tmp15;
 var $ref_tmp17=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $5=$ref_tmp17;
 var $ref_tmp21=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $6=$ref_tmp21;
 var $ref_tmp23=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $7=$ref_tmp23;
 if($__intl){label=2;break;}else{label=28;break;}
 case 2: 
 var $tmpcast55=$ref_tmp;
 var $__locale__i=(($__loc)|0);
 var $8=HEAP32[(($__locale__i)>>2)];
 var $9=$__p_i_i_i;
 var $10=HEAP32[((15856)>>2)];
 var $cmp_i_i_i56=($10|0)==-1;
 if($cmp_i_i_i56){label=4;break;}else{label=3;break;}
 case 3: 
 var $ref_tmp_i_sroa_0_0__idx_i_i=(($__p_i_i_i)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i)>>2)]=15856;
 var $ref_tmp_i_sroa_1_4__idx6_i_i=(($__p_i_i_i+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i=(($__p_i_i_i+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i)>>2)]=0;
 __ZNSt3__111__call_onceERVmPvPFvS2_E(15856,$9,276);
 label=4;break;
 case 4: 
 var $11=HEAP32[((15860)>>2)];
 var $sub_i_i=((($11)-(1))|0);
 var $__end__i_i_i_i=(($8+12)|0);
 var $12=HEAP32[(($__end__i_i_i_i)>>2)];
 var $__begin__i_i_i_i=(($8+8)|0);
 var $13=HEAP32[(($__begin__i_i_i_i)>>2)];
 var $sub_ptr_lhs_cast_i_i_i_i=$12;
 var $sub_ptr_rhs_cast_i_i_i_i=$13;
 var $sub_ptr_sub_i_i_i_i=((($sub_ptr_lhs_cast_i_i_i_i)-($sub_ptr_rhs_cast_i_i_i_i))|0);
 var $sub_ptr_div_i_i_i_i=$sub_ptr_sub_i_i_i_i>>2;
 var $cmp_i_i1_i=($sub_ptr_div_i_i_i_i>>>0)>($sub_i_i>>>0);
 if($cmp_i_i1_i){label=5;break;}else{label=6;break;}
 case 5: 
 var $arrayidx_i_i_i_i58=(($13+($sub_i_i<<2))|0);
 var $14=HEAP32[(($arrayidx_i_i_i_i58)>>2)];
 var $tobool_i_i_i=($14|0)==0;
 if($tobool_i_i_i){label=6;break;}else{label=7;break;}
 case 6: 
 var $exception_i_i=___cxa_allocate_exception(4);
 var $15=$exception_i_i;
 __ZNSt8bad_castC2Ev($15);
 ___cxa_throw($exception_i_i,10264,(376));
 throw "Reached an unreachable!";
 case 7: 
 var $16=$14;
 var $17=$14;
 var $vtable_i=HEAP32[(($17)>>2)];
 var $vfn_i=(($vtable_i+44)|0);
 var $18=HEAP32[(($vfn_i)>>2)];
 FUNCTION_TABLE[$18]($tmpcast55,$16);
 var $19=$__pat;
 var $20=HEAP32[(($ref_tmp)>>2)];
 tempBigInt=$20;HEAP8[($19)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($19)+(1))|0)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($19)+(2))|0)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($19)+(3))|0)]=tempBigInt&0xff;
 var $21=$14;
 var $vtable_i28=HEAP32[(($21)>>2)];
 var $vfn_i29=(($vtable_i28+32)|0);
 var $22=HEAP32[(($vfn_i29)>>2)];
 FUNCTION_TABLE[$22]($ref_tmp1,$16);
 var $__size__i46_i_i_i=$__nsn;
 var $23=HEAP8[($__size__i46_i_i_i)];
 var $and_i_i_i_i=$23&1;
 var $tobool_i_i_i_i=(($and_i_i_i_i<<24)>>24)==0;
 if($tobool_i_i_i_i){label=9;break;}else{label=8;break;}
 case 8: 
 var $__data__i36_i_i_i=(($__nsn+8)|0);
 var $24=HEAP32[(($__data__i36_i_i_i)>>2)];
 HEAP8[($24)]=0;
 var $__size__i24_i_i_i=(($__nsn+4)|0);
 HEAP32[(($__size__i24_i_i_i)>>2)]=0;
 label=10;break;
 case 9: 
 var $__s_i45_i_i_i=$__nsn;
 var $arrayidx_i_i_i_i=(($__s_i45_i_i_i+1)|0);
 HEAP8[($arrayidx_i_i_i_i)]=0;
 HEAP8[($__size__i46_i_i_i)]=0;
 label=10;break;
 case 10: 
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__nsn,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=12;break; } else { label=11;break; }
 case 11: 
 var $25$0 = ___cxa_find_matching_catch(-1, -1,0); var $25$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 12: 
 assert(12 % 1 === 0);HEAP32[(($__size__i46_i_i_i)>>2)]=HEAP32[(($0)>>2)];HEAP32[((($__size__i46_i_i_i)+(4))>>2)]=HEAP32[((($0)+(4))>>2)];HEAP32[((($__size__i46_i_i_i)+(8))>>2)]=HEAP32[((($0)+(8))>>2)];
 HEAP32[(($0)>>2)]=0; HEAP32[((($0)+(4))>>2)]=0; HEAP32[((($0)+(8))>>2)]=0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($ref_tmp1);
 var $vtable_i34=HEAP32[(($21)>>2)];
 var $vfn_i35=(($vtable_i34+28)|0);
 var $26=HEAP32[(($vfn_i35)>>2)];
 FUNCTION_TABLE[$26]($ref_tmp3,$16);
 var $__size__i46_i_i_i104=$__psn;
 var $27=HEAP8[($__size__i46_i_i_i104)];
 var $and_i_i_i_i106=$27&1;
 var $tobool_i_i_i_i107=(($and_i_i_i_i106<<24)>>24)==0;
 if($tobool_i_i_i_i107){label=14;break;}else{label=13;break;}
 case 13: 
 var $__data__i36_i_i_i114=(($__psn+8)|0);
 var $28=HEAP32[(($__data__i36_i_i_i114)>>2)];
 HEAP8[($28)]=0;
 var $__size__i24_i_i_i121=(($__psn+4)|0);
 HEAP32[(($__size__i24_i_i_i121)>>2)]=0;
 label=15;break;
 case 14: 
 var $__s_i45_i_i_i103=$__psn;
 var $arrayidx_i_i_i_i130=(($__s_i45_i_i_i103+1)|0);
 HEAP8[($arrayidx_i_i_i_i130)]=0;
 HEAP8[($__size__i46_i_i_i104)]=0;
 label=15;break;
 case 15: 
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__psn,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=17;break; } else { label=16;break; }
 case 16: 
 var $29$0 = ___cxa_find_matching_catch(-1, -1,0); var $29$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 17: 
 assert(12 % 1 === 0);HEAP32[(($__size__i46_i_i_i104)>>2)]=HEAP32[(($1)>>2)];HEAP32[((($__size__i46_i_i_i104)+(4))>>2)]=HEAP32[((($1)+(4))>>2)];HEAP32[((($__size__i46_i_i_i104)+(8))>>2)]=HEAP32[((($1)+(8))>>2)];
 HEAP32[(($1)>>2)]=0; HEAP32[((($1)+(4))>>2)]=0; HEAP32[((($1)+(8))>>2)]=0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($ref_tmp3);
 var $30=$14;
 var $vtable_i180=HEAP32[(($30)>>2)];
 var $vfn_i181=(($vtable_i180+12)|0);
 var $31=HEAP32[(($vfn_i181)>>2)];
 var $call_i182=FUNCTION_TABLE[$31]($16);
 HEAP8[($__dp)]=$call_i182;
 var $vtable_i185=HEAP32[(($30)>>2)];
 var $vfn_i186=(($vtable_i185+16)|0);
 var $32=HEAP32[(($vfn_i186)>>2)];
 var $call_i187=FUNCTION_TABLE[$32]($16);
 HEAP8[($__ts)]=$call_i187;
 var $vtable_i190=HEAP32[(($21)>>2)];
 var $vfn_i191=(($vtable_i190+20)|0);
 var $33=HEAP32[(($vfn_i191)>>2)];
 FUNCTION_TABLE[$33]($ref_tmp7,$16);
 var $__size__i46_i_i_i260=$__grp;
 var $34=HEAP8[($__size__i46_i_i_i260)];
 var $and_i_i_i_i262=$34&1;
 var $tobool_i_i_i_i263=(($and_i_i_i_i262<<24)>>24)==0;
 if($tobool_i_i_i_i263){label=19;break;}else{label=18;break;}
 case 18: 
 var $__data__i36_i_i_i270=(($__grp+8)|0);
 var $35=HEAP32[(($__data__i36_i_i_i270)>>2)];
 HEAP8[($35)]=0;
 var $__size__i24_i_i_i277=(($__grp+4)|0);
 HEAP32[(($__size__i24_i_i_i277)>>2)]=0;
 label=20;break;
 case 19: 
 var $__s_i45_i_i_i259=$__grp;
 var $arrayidx_i_i_i_i286=(($__s_i45_i_i_i259+1)|0);
 HEAP8[($arrayidx_i_i_i_i286)]=0;
 HEAP8[($__size__i46_i_i_i260)]=0;
 label=20;break;
 case 20: 
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=22;break; } else { label=21;break; }
 case 21: 
 var $36$0 = ___cxa_find_matching_catch(-1, -1,0); var $36$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 22: 
 assert(12 % 1 === 0);HEAP32[(($__size__i46_i_i_i260)>>2)]=HEAP32[(($2)>>2)];HEAP32[((($__size__i46_i_i_i260)+(4))>>2)]=HEAP32[((($2)+(4))>>2)];HEAP32[((($__size__i46_i_i_i260)+(8))>>2)]=HEAP32[((($2)+(8))>>2)];
 HEAP32[(($2)>>2)]=0; HEAP32[((($2)+(4))>>2)]=0; HEAP32[((($2)+(8))>>2)]=0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($ref_tmp7);
 var $vtable_i336=HEAP32[(($21)>>2)];
 var $vfn_i337=(($vtable_i336+24)|0);
 var $37=HEAP32[(($vfn_i337)>>2)];
 FUNCTION_TABLE[$37]($ref_tmp9,$16);
 var $__size__i46_i_i_i406=$__sym;
 var $38=HEAP8[($__size__i46_i_i_i406)];
 var $and_i_i_i_i408=$38&1;
 var $tobool_i_i_i_i409=(($and_i_i_i_i408<<24)>>24)==0;
 if($tobool_i_i_i_i409){label=24;break;}else{label=23;break;}
 case 23: 
 var $__data__i36_i_i_i416=(($__sym+8)|0);
 var $39=HEAP32[(($__data__i36_i_i_i416)>>2)];
 HEAP8[($39)]=0;
 var $__size__i24_i_i_i423=(($__sym+4)|0);
 HEAP32[(($__size__i24_i_i_i423)>>2)]=0;
 label=25;break;
 case 24: 
 var $__s_i45_i_i_i405=$__sym;
 var $arrayidx_i_i_i_i432=(($__s_i45_i_i_i405+1)|0);
 HEAP8[($arrayidx_i_i_i_i432)]=0;
 HEAP8[($__size__i46_i_i_i406)]=0;
 label=25;break;
 case 25: 
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sym,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=27;break; } else { label=26;break; }
 case 26: 
 var $40$0 = ___cxa_find_matching_catch(-1, -1,0); var $40$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 27: 
 assert(12 % 1 === 0);HEAP32[(($__size__i46_i_i_i406)>>2)]=HEAP32[(($3)>>2)];HEAP32[((($__size__i46_i_i_i406)+(4))>>2)]=HEAP32[((($3)+(4))>>2)];HEAP32[((($__size__i46_i_i_i406)+(8))>>2)]=HEAP32[((($3)+(8))>>2)];
 HEAP32[(($3)>>2)]=0; HEAP32[((($3)+(4))>>2)]=0; HEAP32[((($3)+(8))>>2)]=0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($ref_tmp9);
 var $41=$14;
 var $vtable_i482=HEAP32[(($41)>>2)];
 var $vfn_i483=(($vtable_i482+36)|0);
 var $42=HEAP32[(($vfn_i483)>>2)];
 var $call_i484=FUNCTION_TABLE[$42]($16);
 var $storemerge=$call_i484;label=54;break;
 case 28: 
 var $tmpcast=$ref_tmp14;
 var $__locale__i60=(($__loc)|0);
 var $43=HEAP32[(($__locale__i60)>>2)];
 var $44=$__p_i_i_i59;
 var $45=HEAP32[((15864)>>2)];
 var $cmp_i_i_i61=($45|0)==-1;
 if($cmp_i_i_i61){label=30;break;}else{label=29;break;}
 case 29: 
 var $ref_tmp_i_sroa_0_0__idx_i_i62=(($__p_i_i_i59)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i62)>>2)]=15864;
 var $ref_tmp_i_sroa_1_4__idx6_i_i63=(($__p_i_i_i59+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i63)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i64=(($__p_i_i_i59+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i64)>>2)]=0;
 __ZNSt3__111__call_onceERVmPvPFvS2_E(15864,$44,276);
 label=30;break;
 case 30: 
 var $46=HEAP32[((15868)>>2)];
 var $sub_i_i66=((($46)-(1))|0);
 var $__end__i_i_i_i67=(($43+12)|0);
 var $47=HEAP32[(($__end__i_i_i_i67)>>2)];
 var $__begin__i_i_i_i68=(($43+8)|0);
 var $48=HEAP32[(($__begin__i_i_i_i68)>>2)];
 var $sub_ptr_lhs_cast_i_i_i_i69=$47;
 var $sub_ptr_rhs_cast_i_i_i_i70=$48;
 var $sub_ptr_sub_i_i_i_i71=((($sub_ptr_lhs_cast_i_i_i_i69)-($sub_ptr_rhs_cast_i_i_i_i70))|0);
 var $sub_ptr_div_i_i_i_i72=$sub_ptr_sub_i_i_i_i71>>2;
 var $cmp_i_i1_i73=($sub_ptr_div_i_i_i_i72>>>0)>($sub_i_i66>>>0);
 if($cmp_i_i1_i73){label=31;break;}else{label=32;break;}
 case 31: 
 var $arrayidx_i_i_i_i75=(($48+($sub_i_i66<<2))|0);
 var $49=HEAP32[(($arrayidx_i_i_i_i75)>>2)];
 var $tobool_i_i_i76=($49|0)==0;
 if($tobool_i_i_i76){label=32;break;}else{label=33;break;}
 case 32: 
 var $exception_i_i78=___cxa_allocate_exception(4);
 var $50=$exception_i_i78;
 __ZNSt8bad_castC2Ev($50);
 ___cxa_throw($exception_i_i78,10264,(376));
 throw "Reached an unreachable!";
 case 33: 
 var $51=$49;
 var $52=$49;
 var $vtable_i489=HEAP32[(($52)>>2)];
 var $vfn_i490=(($vtable_i489+44)|0);
 var $53=HEAP32[(($vfn_i490)>>2)];
 FUNCTION_TABLE[$53]($tmpcast,$51);
 var $54=$__pat;
 var $55=HEAP32[(($ref_tmp14)>>2)];
 tempBigInt=$55;HEAP8[($54)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($54)+(1))|0)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($54)+(2))|0)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($54)+(3))|0)]=tempBigInt&0xff;
 var $56=$49;
 var $vtable_i493=HEAP32[(($56)>>2)];
 var $vfn_i494=(($vtable_i493+32)|0);
 var $57=HEAP32[(($vfn_i494)>>2)];
 FUNCTION_TABLE[$57]($ref_tmp15,$51);
 var $__size__i46_i_i_i563=$__nsn;
 var $58=HEAP8[($__size__i46_i_i_i563)];
 var $and_i_i_i_i565=$58&1;
 var $tobool_i_i_i_i566=(($and_i_i_i_i565<<24)>>24)==0;
 if($tobool_i_i_i_i566){label=35;break;}else{label=34;break;}
 case 34: 
 var $__data__i36_i_i_i573=(($__nsn+8)|0);
 var $59=HEAP32[(($__data__i36_i_i_i573)>>2)];
 HEAP8[($59)]=0;
 var $__size__i24_i_i_i580=(($__nsn+4)|0);
 HEAP32[(($__size__i24_i_i_i580)>>2)]=0;
 label=36;break;
 case 35: 
 var $__s_i45_i_i_i562=$__nsn;
 var $arrayidx_i_i_i_i589=(($__s_i45_i_i_i562+1)|0);
 HEAP8[($arrayidx_i_i_i_i589)]=0;
 HEAP8[($__size__i46_i_i_i563)]=0;
 label=36;break;
 case 36: 
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__nsn,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=38;break; } else { label=37;break; }
 case 37: 
 var $60$0 = ___cxa_find_matching_catch(-1, -1,0); var $60$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 38: 
 assert(12 % 1 === 0);HEAP32[(($__size__i46_i_i_i563)>>2)]=HEAP32[(($4)>>2)];HEAP32[((($__size__i46_i_i_i563)+(4))>>2)]=HEAP32[((($4)+(4))>>2)];HEAP32[((($__size__i46_i_i_i563)+(8))>>2)]=HEAP32[((($4)+(8))>>2)];
 HEAP32[(($4)>>2)]=0; HEAP32[((($4)+(4))>>2)]=0; HEAP32[((($4)+(8))>>2)]=0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($ref_tmp15);
 var $vtable_i639=HEAP32[(($56)>>2)];
 var $vfn_i640=(($vtable_i639+28)|0);
 var $61=HEAP32[(($vfn_i640)>>2)];
 FUNCTION_TABLE[$61]($ref_tmp17,$51);
 var $__size__i46_i_i_i709=$__psn;
 var $62=HEAP8[($__size__i46_i_i_i709)];
 var $and_i_i_i_i711=$62&1;
 var $tobool_i_i_i_i712=(($and_i_i_i_i711<<24)>>24)==0;
 if($tobool_i_i_i_i712){label=40;break;}else{label=39;break;}
 case 39: 
 var $__data__i36_i_i_i719=(($__psn+8)|0);
 var $63=HEAP32[(($__data__i36_i_i_i719)>>2)];
 HEAP8[($63)]=0;
 var $__size__i24_i_i_i726=(($__psn+4)|0);
 HEAP32[(($__size__i24_i_i_i726)>>2)]=0;
 label=41;break;
 case 40: 
 var $__s_i45_i_i_i708=$__psn;
 var $arrayidx_i_i_i_i735=(($__s_i45_i_i_i708+1)|0);
 HEAP8[($arrayidx_i_i_i_i735)]=0;
 HEAP8[($__size__i46_i_i_i709)]=0;
 label=41;break;
 case 41: 
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__psn,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=43;break; } else { label=42;break; }
 case 42: 
 var $64$0 = ___cxa_find_matching_catch(-1, -1,0); var $64$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 43: 
 assert(12 % 1 === 0);HEAP32[(($__size__i46_i_i_i709)>>2)]=HEAP32[(($5)>>2)];HEAP32[((($__size__i46_i_i_i709)+(4))>>2)]=HEAP32[((($5)+(4))>>2)];HEAP32[((($__size__i46_i_i_i709)+(8))>>2)]=HEAP32[((($5)+(8))>>2)];
 HEAP32[(($5)>>2)]=0; HEAP32[((($5)+(4))>>2)]=0; HEAP32[((($5)+(8))>>2)]=0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($ref_tmp17);
 var $65=$49;
 var $vtable_i785=HEAP32[(($65)>>2)];
 var $vfn_i786=(($vtable_i785+12)|0);
 var $66=HEAP32[(($vfn_i786)>>2)];
 var $call_i787=FUNCTION_TABLE[$66]($51);
 HEAP8[($__dp)]=$call_i787;
 var $vtable_i790=HEAP32[(($65)>>2)];
 var $vfn_i791=(($vtable_i790+16)|0);
 var $67=HEAP32[(($vfn_i791)>>2)];
 var $call_i792=FUNCTION_TABLE[$67]($51);
 HEAP8[($__ts)]=$call_i792;
 var $vtable_i795=HEAP32[(($56)>>2)];
 var $vfn_i796=(($vtable_i795+20)|0);
 var $68=HEAP32[(($vfn_i796)>>2)];
 FUNCTION_TABLE[$68]($ref_tmp21,$51);
 var $__size__i46_i_i_i865=$__grp;
 var $69=HEAP8[($__size__i46_i_i_i865)];
 var $and_i_i_i_i867=$69&1;
 var $tobool_i_i_i_i868=(($and_i_i_i_i867<<24)>>24)==0;
 if($tobool_i_i_i_i868){label=45;break;}else{label=44;break;}
 case 44: 
 var $__data__i36_i_i_i875=(($__grp+8)|0);
 var $70=HEAP32[(($__data__i36_i_i_i875)>>2)];
 HEAP8[($70)]=0;
 var $__size__i24_i_i_i882=(($__grp+4)|0);
 HEAP32[(($__size__i24_i_i_i882)>>2)]=0;
 label=46;break;
 case 45: 
 var $__s_i45_i_i_i864=$__grp;
 var $arrayidx_i_i_i_i891=(($__s_i45_i_i_i864+1)|0);
 HEAP8[($arrayidx_i_i_i_i891)]=0;
 HEAP8[($__size__i46_i_i_i865)]=0;
 label=46;break;
 case 46: 
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=48;break; } else { label=47;break; }
 case 47: 
 var $71$0 = ___cxa_find_matching_catch(-1, -1,0); var $71$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 48: 
 assert(12 % 1 === 0);HEAP32[(($__size__i46_i_i_i865)>>2)]=HEAP32[(($6)>>2)];HEAP32[((($__size__i46_i_i_i865)+(4))>>2)]=HEAP32[((($6)+(4))>>2)];HEAP32[((($__size__i46_i_i_i865)+(8))>>2)]=HEAP32[((($6)+(8))>>2)];
 HEAP32[(($6)>>2)]=0; HEAP32[((($6)+(4))>>2)]=0; HEAP32[((($6)+(8))>>2)]=0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($ref_tmp21);
 var $vtable_i941=HEAP32[(($56)>>2)];
 var $vfn_i942=(($vtable_i941+24)|0);
 var $72=HEAP32[(($vfn_i942)>>2)];
 FUNCTION_TABLE[$72]($ref_tmp23,$51);
 var $__size__i46_i_i_i1011=$__sym;
 var $73=HEAP8[($__size__i46_i_i_i1011)];
 var $and_i_i_i_i1013=$73&1;
 var $tobool_i_i_i_i1014=(($and_i_i_i_i1013<<24)>>24)==0;
 if($tobool_i_i_i_i1014){label=50;break;}else{label=49;break;}
 case 49: 
 var $__data__i36_i_i_i1021=(($__sym+8)|0);
 var $74=HEAP32[(($__data__i36_i_i_i1021)>>2)];
 HEAP8[($74)]=0;
 var $__size__i24_i_i_i1028=(($__sym+4)|0);
 HEAP32[(($__size__i24_i_i_i1028)>>2)]=0;
 label=51;break;
 case 50: 
 var $__s_i45_i_i_i1010=$__sym;
 var $arrayidx_i_i_i_i1037=(($__s_i45_i_i_i1010+1)|0);
 HEAP8[($arrayidx_i_i_i_i1037)]=0;
 HEAP8[($__size__i46_i_i_i1011)]=0;
 label=51;break;
 case 51: 
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sym,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=53;break; } else { label=52;break; }
 case 52: 
 var $75$0 = ___cxa_find_matching_catch(-1, -1,0); var $75$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 53: 
 assert(12 % 1 === 0);HEAP32[(($__size__i46_i_i_i1011)>>2)]=HEAP32[(($7)>>2)];HEAP32[((($__size__i46_i_i_i1011)+(4))>>2)]=HEAP32[((($7)+(4))>>2)];HEAP32[((($__size__i46_i_i_i1011)+(8))>>2)]=HEAP32[((($7)+(8))>>2)];
 HEAP32[(($7)>>2)]=0; HEAP32[((($7)+(4))>>2)]=0; HEAP32[((($7)+(8))>>2)]=0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($ref_tmp23);
 var $76=$49;
 var $vtable_i1087=HEAP32[(($76)>>2)];
 var $vfn_i1088=(($vtable_i1087+36)|0);
 var $77=HEAP32[(($vfn_i1088)>>2)];
 var $call_i1089=FUNCTION_TABLE[$77]($51);
 var $storemerge=$call_i1089;label=54;break;
 case 54: 
 var $storemerge;
 HEAP32[(($__fd)>>2)]=$storemerge;
 STACKTOP=sp;return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$__g_end,$__err){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__s_i_i=$__grouping;
 var $__size__i_i=$__grouping;
 var $0=HEAP8[($__size__i_i)];
 var $conv_i_i=($0&255);
 var $and_i_i=$conv_i_i&1;
 var $tobool_i_i=($and_i_i|0)==0;
 if($tobool_i_i){label=3;break;}else{label=2;break;}
 case 2: 
 var $__size__i23_i=(($__grouping+4)|0);
 var $1=HEAP32[(($__size__i23_i)>>2)];
 var $cond_i=$1;label=4;break;
 case 3: 
 var $shr_i_i24=$conv_i_i>>>1;
 var $cond_i=$shr_i_i24;label=4;break;
 case 4: 
 var $cond_i;
 var $cmp=($cond_i|0)==0;
 if($cmp){label=24;break;}else{label=5;break;}
 case 5: 
 var $cmp_i_i=($__g|0)==($__g_end|0);
 if($cmp_i_i){var $4=$0;label=9;break;}else{label=6;break;}
 case 6: 
 var $incdec_ptr_i_i43=((($__g_end)-(4))|0);
 var $cmp1_i_i44=($incdec_ptr_i_i43>>>0)>($__g>>>0);
 if($cmp1_i_i44){var $__first_addr_i_i_045=$__g;var $incdec_ptr_i_i46=$incdec_ptr_i_i43;label=7;break;}else{var $4=$0;label=9;break;}
 case 7: 
 var $incdec_ptr_i_i46;
 var $__first_addr_i_i_045;
 var $2=HEAP32[(($__first_addr_i_i_045)>>2)];
 var $3=HEAP32[(($incdec_ptr_i_i46)>>2)];
 HEAP32[(($__first_addr_i_i_045)>>2)]=$3;
 HEAP32[(($incdec_ptr_i_i46)>>2)]=$2;
 var $incdec_ptr2_i_i=(($__first_addr_i_i_045+4)|0);
 var $incdec_ptr_i_i=((($incdec_ptr_i_i46)-(4))|0);
 var $cmp1_i_i=($incdec_ptr2_i_i>>>0)<($incdec_ptr_i_i>>>0);
 if($cmp1_i_i){var $__first_addr_i_i_045=$incdec_ptr2_i_i;var $incdec_ptr_i_i46=$incdec_ptr_i_i;label=7;break;}else{label=8;break;}
 case 8: 
 var $_pre_pre=HEAP8[($__size__i_i)];
 var $4=$_pre_pre;label=9;break;
 case 9: 
 var $4;
 var $and_i_i_i=$4&1;
 var $tobool_i_i_i=(($and_i_i_i<<24)>>24)==0;
 if($tobool_i_i_i){label=11;break;}else{label=10;break;}
 case 10: 
 var $__data__i21_i_i=(($__grouping+8)|0);
 var $5=HEAP32[(($__data__i21_i_i)>>2)];
 var $cond_i_i=$5;label=12;break;
 case 11: 
 var $arrayidx_i_i_i=(($__s_i_i+1)|0);
 var $cond_i_i=$arrayidx_i_i_i;label=12;break;
 case 12: 
 var $cond_i_i;
 var $conv_i_i53=($4&255);
 var $and_i_i54=$conv_i_i53&1;
 var $tobool_i_i55=($and_i_i54|0)==0;
 if($tobool_i_i55){label=14;break;}else{label=13;break;}
 case 13: 
 var $__size__i23_i62=(($__grouping+4)|0);
 var $6=HEAP32[(($__size__i23_i62)>>2)];
 var $cond_i74=$6;label=15;break;
 case 14: 
 var $shr_i_i7225=$conv_i_i53>>>1;
 var $cond_i74=$shr_i_i7225;label=15;break;
 case 15: 
 var $cond_i74;
 var $add_ptr3=((($__g_end)-(4))|0);
 var $cmp432=($add_ptr3>>>0)>($__g>>>0);
 var $7=HEAP8[($cond_i_i)];
 var $conv33=(($7<<24)>>24);
 var $cmp5_not34=(($7<<24)>>24)<1;
 var $cmp935=(($7<<24)>>24)==127;
 var $or_cond36=$cmp5_not34|$cmp935;
 if($cmp432){label=16;break;}else{var $conv_lcssa=$conv33;var $or_cond_lcssa=$or_cond36;label=21;break;}
 case 16: 
 var $add_ptr=(($cond_i_i+$cond_i74)|0);
 var $sub_ptr_lhs_cast=$add_ptr;
 var $__ig_037=$cond_i_i;var $__r_038=$__g;var $conv39=$conv33;var $or_cond40=$or_cond36;label=17;break;
 case 17: 
 var $or_cond40;
 var $conv39;
 var $__r_038;
 var $__ig_037;
 if($or_cond40){label=20;break;}else{label=18;break;}
 case 18: 
 var $8=HEAP32[(($__r_038)>>2)];
 var $cmp12=($conv39|0)==($8|0);
 if($cmp12){label=20;break;}else{label=19;break;}
 case 19: 
 HEAP32[(($__err)>>2)]=4;
 label=24;break;
 case 20: 
 var $sub_ptr_rhs_cast=$__ig_037;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $cmp15=($sub_ptr_sub|0)>1;
 var $incdec_ptr=(($__ig_037+1)|0);
 var $incdec_ptr___ig_0=($cmp15?$incdec_ptr:$__ig_037);
 var $incdec_ptr18=(($__r_038+4)|0);
 var $cmp4=($incdec_ptr18>>>0)<($add_ptr3>>>0);
 var $9=HEAP8[($incdec_ptr___ig_0)];
 var $conv=(($9<<24)>>24);
 var $cmp5_not=(($9<<24)>>24)<1;
 var $cmp9=(($9<<24)>>24)==127;
 var $or_cond=$cmp5_not|$cmp9;
 if($cmp4){var $__ig_037=$incdec_ptr___ig_0;var $__r_038=$incdec_ptr18;var $conv39=$conv;var $or_cond40=$or_cond;label=17;break;}else{var $conv_lcssa=$conv;var $or_cond_lcssa=$or_cond;label=21;break;}
 case 21: 
 var $or_cond_lcssa;
 var $conv_lcssa;
 if($or_cond_lcssa){label=24;break;}else{label=22;break;}
 case 22: 
 var $10=HEAP32[(($add_ptr3)>>2)];
 var $cmp28=($conv_lcssa>>>0)<($10>>>0);
 var $cmp30=($10|0)==0;
 var $or_cond28=$cmp28|$cmp30;
 if($or_cond28){label=23;break;}else{label=24;break;}
 case 23: 
 HEAP32[(($__err)>>2)]=4;
 label=24;break;
 case 24: 
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this){
 var label=0;
 var $0=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($0);
 var $1=$this;
 __ZdlPv($1);
 return;
}
function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev($this){
 var label=0;
 var $0=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($0);
 return;
}
function __ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe($agg_result,$this,$__b,$__e,$__intl,$__iob,$__err,$__v){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+600)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__p_i_i_i=sp;
 var $__wbuf=(sp)+(16);
 var $__wb=(sp)+(416);
 var $__wn=(sp)+(424);
 var $__loc=(sp)+(432);
 var $__neg=(sp)+(440);
 var $agg_tmp=(sp)+(448);
 var $__atoms=(sp)+(456);
 var $__nbuf=(sp)+(496);
 var $arraydecay=(($__wbuf)|0);
 var $__first__i_i_i_i_i=(($__wb)|0);
 HEAP32[(($__first__i_i_i_i_i)>>2)]=$arraydecay;
 var $__second__i_i_i_i_i=(($__wb+4)|0);
 HEAP32[(($__second__i_i_i_i_i)>>2)]=448;
 var $add_ptr=(($__wbuf+400)|0);
 (function() { try { __THREW__ = 0; return __ZNKSt3__18ios_base6getlocEv($__loc,$__iob) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=14;break; }
 case 2: 
 var $__locale__i=(($__loc)|0);
 var $0=HEAP32[(($__locale__i)>>2)];
 var $1=$__p_i_i_i;
 var $2=HEAP32[((15376)>>2)];
 var $cmp_i_i_i23=($2|0)==-1;
 if($cmp_i_i_i23){label=4;break;}else{label=3;break;}
 case 3: 
 var $ref_tmp_i_sroa_0_0__idx_i_i=(($__p_i_i_i)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i)>>2)]=15376;
 var $ref_tmp_i_sroa_1_4__idx6_i_i=(($__p_i_i_i+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i=(($__p_i_i_i+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(15376,$1,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=4;break; } else { label=15;break; }
 case 4: 
 var $3=HEAP32[((15380)>>2)];
 var $sub_i_i=((($3)-(1))|0);
 var $__end__i_i_i_i=(($0+12)|0);
 var $4=HEAP32[(($__end__i_i_i_i)>>2)];
 var $__begin__i_i_i_i=(($0+8)|0);
 var $5=HEAP32[(($__begin__i_i_i_i)>>2)];
 var $sub_ptr_lhs_cast_i_i_i_i=$4;
 var $sub_ptr_rhs_cast_i_i_i_i=$5;
 var $sub_ptr_sub_i_i_i_i=((($sub_ptr_lhs_cast_i_i_i_i)-($sub_ptr_rhs_cast_i_i_i_i))|0);
 var $sub_ptr_div_i_i_i_i=$sub_ptr_sub_i_i_i_i>>2;
 var $cmp_i_i1_i=($sub_ptr_div_i_i_i_i>>>0)>($sub_i_i>>>0);
 if($cmp_i_i1_i){label=5;break;}else{label=6;break;}
 case 5: 
 var $arrayidx_i_i_i_i=(($5+($sub_i_i<<2))|0);
 var $6=HEAP32[(($arrayidx_i_i_i_i)>>2)];
 var $tobool_i_i_i25=($6|0)==0;
 if($tobool_i_i_i25){label=6;break;}else{label=8;break;}
 case 6: 
 var $exception_i_i=___cxa_allocate_exception(4);
 var $7=$exception_i_i;
 __ZNSt8bad_castC2Ev($7);
 (function() { try { __THREW__ = 0; return ___cxa_throw($exception_i_i,10264,(376)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=7;break; } else { label=15;break; }
 case 7: 
 throw "Reached an unreachable!";
 case 8: 
 var $8=$6;
 HEAP8[($__neg)]=0;
 var $9=(($__e)|0);
 var $10=HEAP32[(($9)>>2)];
 var $11=(($agg_tmp)|0);
 HEAP32[(($11)>>2)]=$10;
 var $__fmtflags__i=(($__iob+4)|0);
 var $12=HEAP32[(($__fmtflags__i)>>2)];
 var $call8=(function() { try { __THREW__ = 0; return __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_($__b,$agg_tmp,$__intl,$__loc,$12,$__err,$__neg,$8,$__wb,$__wn,$add_ptr) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=9;break; } else { label=15;break; }
 case 9: 
 if($call8){label=10;break;}else{label=34;break;}
 case 10: 
 var $arraydecay9=(($__atoms)|0);
 var $13=$6;
 var $vtable_i=HEAP32[(($13)>>2)];
 var $vfn_i=(($vtable_i+48)|0);
 var $14=HEAP32[(($vfn_i)>>2)];
 var $call_i78=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$14]($8,3856,3866,$arraydecay9) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=11;break; } else { label=15;break; }
 case 11: 
 var $arraydecay12=(($__nbuf)|0);
 var $15=HEAP32[(($__wn)>>2)];
 var $16=HEAP32[(($__first__i_i_i_i_i)>>2)];
 var $sub_ptr_lhs_cast=$15;
 var $sub_ptr_rhs_cast=$16;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $cmp=($sub_ptr_sub|0)>392;
 if($cmp){label=12;break;}else{var $__nc_0=$arraydecay12;var $__h_sroa_0_1=0;label=19;break;}
 case 12: 
 var $sub_ptr_div=$sub_ptr_sub>>2;
 var $add=((($sub_ptr_div)+(2))|0);
 var $call23=_malloc($add);
 var $cmp25=($call23|0)==0;
 if($cmp25){label=13;break;}else{var $__nc_0=$call23;var $__h_sroa_0_1=$call23;label=19;break;}
 case 13: 
 (function() { try { __THREW__ = 0; return __ZSt17__throw_bad_allocv() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $__nc_0=0;var $__h_sroa_0_1=0;label=19;break; } else { var $__h_sroa_0_0=0;label=16;break; }
 case 14: 
 var $17$0 = ___cxa_find_matching_catch(-1, -1); var $17$1 = tempRet0;
 var $18=$17$0;
 var $19=$17$1;
 HEAP32[(($__first__i_i_i_i_i)>>2)]=0;
 var $57=$arraydecay;var $exn_slot_136=$18;var $ehselector_slot_138=$19;label=54;break;
 case 15: 
 var $20$0 = ___cxa_find_matching_catch(-1, -1); var $20$1 = tempRet0;
 var $21=$20$0;
 var $22=$20$1;
 var $ehselector_slot_0=$22;var $exn_slot_0=$21;label=53;break;
 case 16: 
 var $__h_sroa_0_0;
 var $23$0 = ___cxa_find_matching_catch(-1, -1); var $23$1 = tempRet0;
 var $eh_lpad_body$1=$23$1;var $eh_lpad_body$0=$23$0;var $__h_sroa_0_0_lpad_body=$__h_sroa_0_0;label=17;break;
 case 17: 
 var $__h_sroa_0_0_lpad_body;
 var $eh_lpad_body$0;
 var $eh_lpad_body$1;
 var $24=$eh_lpad_body$0;
 var $25=$eh_lpad_body$1;
 var $tobool_i_i_i191=($__h_sroa_0_0_lpad_body|0)==0;
 if($tobool_i_i_i191){var $ehselector_slot_0=$25;var $exn_slot_0=$24;label=53;break;}else{label=18;break;}
 case 18: 
 _free($__h_sroa_0_0_lpad_body);
 var $ehselector_slot_0=$25;var $exn_slot_0=$24;label=53;break;
 case 19: 
 var $__h_sroa_0_1;
 var $__nc_0;
 var $26=HEAP8[($__neg)];
 var $27=$26&1;
 var $tobool30=(($27<<24)>>24)==0;
 if($tobool30){var $__nc_1=$__nc_0;label=21;break;}else{label=20;break;}
 case 20: 
 var $incdec_ptr=(($__nc_0+1)|0);
 HEAP8[($__nc_0)]=45;
 var $__nc_1=$incdec_ptr;label=21;break;
 case 21: 
 var $__nc_1;
 var $cmp3431=($16>>>0)<($15>>>0);
 if($cmp3431){label=22;break;}else{var $__nc_2_lcssa=$__nc_1;label=27;break;}
 case 22: 
 var $add_ptr_i=(($__atoms+40)|0);
 var $sub_ptr_rhs_cast42=$__atoms;
 var $__nc_232=$__nc_1;var $__w_033=$16;label=23;break;
 case 23: 
 var $__w_033;
 var $__nc_232;
 var $__first_addr_i_0=$arraydecay9;label=24;break;
 case 24: 
 var $__first_addr_i_0;
 var $cmp_i=($__first_addr_i_0|0)==($add_ptr_i|0);
 if($cmp_i){var $__first_addr_i_0_lcssa=$add_ptr_i;label=26;break;}else{label=25;break;}
 case 25: 
 var $28=HEAP32[(($__first_addr_i_0)>>2)];
 var $29=HEAP32[(($__w_033)>>2)];
 var $cmp1_i=($28|0)==($29|0);
 var $incdec_ptr_i=(($__first_addr_i_0+4)|0);
 if($cmp1_i){var $__first_addr_i_0_lcssa=$__first_addr_i_0;label=26;break;}else{var $__first_addr_i_0=$incdec_ptr_i;label=24;break;}
 case 26: 
 var $__first_addr_i_0_lcssa;
 var $sub_ptr_lhs_cast41=$__first_addr_i_0_lcssa;
 var $sub_ptr_sub43=((($sub_ptr_lhs_cast41)-($sub_ptr_rhs_cast42))|0);
 var $sub_ptr_div44=$sub_ptr_sub43>>2;
 var $arrayidx=((3856+$sub_ptr_div44)|0);
 var $30=HEAP8[($arrayidx)];
 HEAP8[($__nc_232)]=$30;
 var $incdec_ptr45=(($__w_033+4)|0);
 var $incdec_ptr46=(($__nc_232+1)|0);
 var $31=HEAP32[(($__wn)>>2)];
 var $cmp34=($incdec_ptr45>>>0)<($31>>>0);
 if($cmp34){var $__nc_232=$incdec_ptr46;var $__w_033=$incdec_ptr45;label=23;break;}else{var $__nc_2_lcssa=$incdec_ptr46;label=27;break;}
 case 27: 
 var $__nc_2_lcssa;
 HEAP8[($__nc_2_lcssa)]=0;
 var $call49=_sscanf($arraydecay12,3096,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAP32[((tempVarArgs)>>2)]=$__v,tempVarArgs)); STACKTOP=tempVarArgs;
 var $cmp50=($call49|0)==1;
 if($cmp50){label=32;break;}else{label=28;break;}
 case 28: 
 var $exception_i=___cxa_allocate_exception(8);
 var $32=$exception_i;
 (function() { try { __THREW__ = 0; return __ZNSt13runtime_errorC2EPKc($32,3040) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=29;break; } else { label=31;break; }
 case 29: 
 (function() { try { __THREW__ = 0; return ___cxa_throw($exception_i,10280,(46)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=30;break; } else { var $__h_sroa_0_0=$__h_sroa_0_1;label=16;break; }
 case 30: 
 throw "Reached an unreachable!";
 case 31: 
 var $33$0 = ___cxa_find_matching_catch(-1, -1); var $33$1 = tempRet0;
 ___cxa_free_exception($exception_i);
 var $eh_lpad_body$1=$33$1;var $eh_lpad_body$0=$33$0;var $__h_sroa_0_0_lpad_body=$__h_sroa_0_1;label=17;break;
 case 32: 
 var $tobool_i_i_i248=($__h_sroa_0_1|0)==0;
 if($tobool_i_i_i248){label=34;break;}else{label=33;break;}
 case 33: 
 _free($__h_sroa_0_1);
 label=34;break;
 case 34: 
 var $__sbuf__i_i_i=(($__b)|0);
 var $34=HEAP32[(($__sbuf__i_i_i)>>2)];
 var $tobool_i_i_i220=($34|0)==0;
 if($tobool_i_i_i220){var $40=0;label=40;break;}else{label=35;break;}
 case 35: 
 var $__ninp__i_i_i_i=(($34+12)|0);
 var $35=HEAP32[(($__ninp__i_i_i_i)>>2)];
 var $__einp__i_i_i_i=(($34+16)|0);
 var $36=HEAP32[(($__einp__i_i_i_i)>>2)];
 var $cmp_i_i_i_i=($35|0)==($36|0);
 if($cmp_i_i_i_i){label=36;break;}else{label=37;break;}
 case 36: 
 var $37=$34;
 var $vtable_i_i_i_i=HEAP32[(($37)>>2)];
 var $vfn_i_i_i_i=(($vtable_i_i_i_i+36)|0);
 var $38=HEAP32[(($vfn_i_i_i_i)>>2)];
 var $call_i_i_i_i223=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$38]($34) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i_i_i_0=$call_i_i_i_i223;label=38;break; } else { label=15;break; }
 case 37: 
 var $39=HEAP32[(($35)>>2)];
 var $retval_i_i_i_i_0=$39;label=38;break;
 case 38: 
 var $retval_i_i_i_i_0;
 var $cmp_i7_i_i_i=($retval_i_i_i_i_0|0)==-1;
 if($cmp_i7_i_i_i){label=39;break;}else{var $40=$34;label=40;break;}
 case 39: 
 HEAP32[(($__sbuf__i_i_i)>>2)]=0;
 var $40=0;label=40;break;
 case 40: 
 var $40;
 var $cmp_i_i_i=($40|0)==0;
 var $41=HEAP32[(($9)>>2)];
 var $tobool_i12_i_i=($41|0)==0;
 if($tobool_i12_i_i){label=46;break;}else{label=41;break;}
 case 41: 
 var $__ninp__i_i15_i_i=(($41+12)|0);
 var $42=HEAP32[(($__ninp__i_i15_i_i)>>2)];
 var $__einp__i_i16_i_i=(($41+16)|0);
 var $43=HEAP32[(($__einp__i_i16_i_i)>>2)];
 var $cmp_i_i17_i_i=($42|0)==($43|0);
 if($cmp_i_i17_i_i){label=42;break;}else{label=43;break;}
 case 42: 
 var $44=$41;
 var $vtable_i_i19_i_i=HEAP32[(($44)>>2)];
 var $vfn_i_i20_i_i=(($vtable_i_i19_i_i+36)|0);
 var $45=HEAP32[(($vfn_i_i20_i_i)>>2)];
 var $call_i_i21_i_i224=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$45]($41) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i7_i_i_0=$call_i_i21_i_i224;label=44;break; } else { label=15;break; }
 case 43: 
 var $46=HEAP32[(($42)>>2)];
 var $retval_i_i7_i_i_0=$46;label=44;break;
 case 44: 
 var $retval_i_i7_i_i_0;
 var $cmp_i7_i25_i_i=($retval_i_i7_i_i_0|0)==-1;
 if($cmp_i7_i25_i_i){label=45;break;}else{label=47;break;}
 case 45: 
 HEAP32[(($9)>>2)]=0;
 label=46;break;
 case 46: 
 if($cmp_i_i_i){label=48;break;}else{label=49;break;}
 case 47: 
 var $cmp_i30_i_i=($41|0)==0;
 var $cmp_i_itmp=$cmp_i_i_i^$cmp_i30_i_i;
 if($cmp_i_itmp){label=49;break;}else{label=48;break;}
 case 48: 
 var $47=HEAP32[(($__err)>>2)];
 var $or=$47|2;
 HEAP32[(($__err)>>2)]=$or;
 label=49;break;
 case 49: 
 var $48=(($agg_result)|0);
 HEAP32[(($48)>>2)]=$40;
 var $49=HEAP32[(($__locale__i)>>2)];
 var $50=(($49)|0);
 var $call_i=__ZNSt3__114__shared_count16__release_sharedEv($50);
 var $51=HEAP32[(($__first__i_i_i_i_i)>>2)];
 HEAP32[(($__first__i_i_i_i_i)>>2)]=0;
 var $tobool_i_i_i135=($51|0)==0;
 if($tobool_i_i_i135){label=52;break;}else{label=50;break;}
 case 50: 
 var $52=HEAP32[(($__second__i_i_i_i_i)>>2)];
 var $53=$51;
 (function() { try { __THREW__ = 0; return FUNCTION_TABLE[$52]($53) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=52;break; } else { label=51;break; }
 case 51: 
 var $54$0 = ___cxa_find_matching_catch(-1, -1,0); var $54$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 52: 
 STACKTOP=sp;return;
 case 53: 
 var $exn_slot_0;
 var $ehselector_slot_0;
 var $55=HEAP32[(($__locale__i)>>2)];
 var $56=(($55)|0);
 var $call_i30=__ZNSt3__114__shared_count16__release_sharedEv($56);
 var $_pre=HEAP32[(($__first__i_i_i_i_i)>>2)];
 HEAP32[(($__first__i_i_i_i_i)>>2)]=0;
 var $tobool_i_i_i=($_pre|0)==0;
 if($tobool_i_i_i){var $exn_slot_137=$exn_slot_0;var $ehselector_slot_139=$ehselector_slot_0;label=56;break;}else{var $57=$_pre;var $exn_slot_136=$exn_slot_0;var $ehselector_slot_138=$ehselector_slot_0;label=54;break;}
 case 54: 
 var $ehselector_slot_138;
 var $exn_slot_136;
 var $57;
 var $58=HEAP32[(($__second__i_i_i_i_i)>>2)];
 var $59=$57;
 (function() { try { __THREW__ = 0; return FUNCTION_TABLE[$58]($59) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $exn_slot_137=$exn_slot_136;var $ehselector_slot_139=$ehselector_slot_138;label=56;break; } else { label=55;break; }
 case 55: 
 var $60$0 = ___cxa_find_matching_catch(-1, -1,0); var $60$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 56: 
 var $ehselector_slot_139;
 var $exn_slot_137;
 var $lpad_val$0=$exn_slot_137;
 var $lpad_val$1=0;
 var $lpad_val60$0=$lpad_val$0;
 var $lpad_val60$1=$ehselector_slot_139;
 ___resumeException($lpad_val60$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_($__b,$__e,$__intl,$__loc,$__flags,$__err,$__neg,$__ct,$__wb,$__wn,$__we){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+448)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__we_addr=sp;
 var $__gbuf=(sp)+(8);
 var $__pat=(sp)+(408);
 var $__dp=(sp)+(416);
 var $__ts=(sp)+(424);
 var $__grp=(sp)+(432);
 var $__size__i_i1837=$__grp;
 var $__sym=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__psn=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__nsn=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__spaces=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__fd=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__et=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 HEAP32[(($__we_addr)>>2)]=$__we;
 var $arraydecay=(($__gbuf)|0);
 HEAP32[(($__size__i_i1837)>>2)]=0; HEAP32[((($__size__i_i1837)+(4))>>2)]=0; HEAP32[((($__size__i_i1837)+(8))>>2)]=0;
 var $__size__i_i_i1789=$__sym;
 var $__size__i_i874=$__psn;
 var $__size__i_i915=$__nsn;
 var $__size__i_i2244=$__spaces;
 HEAP32[(($__size__i_i_i1789)>>2)]=0; HEAP32[((($__size__i_i_i1789)+(4))>>2)]=0; HEAP32[((($__size__i_i_i1789)+(8))>>2)]=0;
 HEAP32[(($__size__i_i874)>>2)]=0; HEAP32[((($__size__i_i874)+(4))>>2)]=0; HEAP32[((($__size__i_i874)+(8))>>2)]=0;
 HEAP32[(($__size__i_i915)>>2)]=0; HEAP32[((($__size__i_i915)+(4))>>2)]=0; HEAP32[((($__size__i_i915)+(8))>>2)]=0;
 HEAP32[(($__size__i_i2244)>>2)]=0; HEAP32[((($__size__i_i2244)+(4))>>2)]=0; HEAP32[((($__size__i_i2244)+(8))>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri($__intl,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__psn,$__nsn,$__fd) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=26;break; }
 case 2: 
 var $add_ptr=(($__gbuf+400)|0);
 var $__first__i_i_i552=(($__wb)|0);
 var $0=HEAP32[(($__first__i_i_i552)>>2)];
 HEAP32[(($__wn)>>2)]=$0;
 var $__sbuf__i_i_i608=(($__b)|0);
 var $__sbuf__i11_i_i629=(($__e)|0);
 var $1=$__ct;
 var $__data__i_i_i1324=(($__nsn+4)|0);
 var $__data__i21_i_i1316=(($__nsn+8)|0);
 var $__data__i_i_i=(($__psn+4)|0);
 var $__data__i21_i_i=(($__psn+8)|0);
 var $and218=$__flags&512;
 var $cmp120219=($and218|0)!=0;
 var $__data__i_i_i1807=(($__sym+4)|0);
 var $__data__i21_i_i1894=(($__sym+8)|0);
 var $__data__i_i_i2388=(($__spaces+4)|0);
 var $__data__i21_i_i2725=(($__spaces+8)|0);
 var $arrayidx114=(($__pat+3)|0);
 var $__size__i23_i1847=(($__grp+4)|0);
 var $__gb_sroa_1_4_load189212327=448;var $2=$arraydecay;var $__gb_sroa_0_0_load179197330=$arraydecay;var $add_ptr191333=$add_ptr;var $__trailing_sign_0336=0;var $__p_0338=0;label=3;break;
 case 3: 
 var $__p_0338;
 var $__trailing_sign_0336;
 var $add_ptr191333;
 var $__gb_sroa_0_0_load179197330;
 var $2;
 var $__gb_sroa_1_4_load189212327;
 var $3=HEAP32[(($__sbuf__i_i_i608)>>2)];
 var $tobool_i_i_i609=($3|0)==0;
 if($tobool_i_i_i609){var $9=1;label=10;break;}else{label=4;break;}
 case 4: 
 var $__ninp__i_i_i_i612=(($3+12)|0);
 var $4=HEAP32[(($__ninp__i_i_i_i612)>>2)];
 var $__einp__i_i_i_i613=(($3+16)|0);
 var $5=HEAP32[(($__einp__i_i_i_i613)>>2)];
 var $cmp_i_i_i_i614=($4|0)==($5|0);
 if($cmp_i_i_i_i614){label=5;break;}else{label=6;break;}
 case 5: 
 var $6=$3;
 var $vtable_i_i_i_i616=HEAP32[(($6)>>2)];
 var $vfn_i_i_i_i617=(($vtable_i_i_i_i616+36)|0);
 var $7=HEAP32[(($vfn_i_i_i_i617)>>2)];
 var $call_i_i_i_i652=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$7]($3) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i_i_i599_0=$call_i_i_i_i652;label=7;break; } else { var $_ph_ph227_ph_ph_ph_ph_ph=$2;var $__gb_sroa_1_4_load189205_ph_ph226_ph_ph_ph_ph_ph=$__gb_sroa_1_4_load189212327;label=25;break; }
 case 6: 
 var $8=HEAP32[(($4)>>2)];
 var $retval_i_i_i_i599_0=$8;label=7;break;
 case 7: 
 var $retval_i_i_i_i599_0;
 var $cmp_i7_i_i_i621=($retval_i_i_i_i599_0|0)==-1;
 if($cmp_i7_i_i_i621){label=9;break;}else{label=8;break;}
 case 8: 
 var $_pre394=HEAP32[(($__sbuf__i_i_i608)>>2)];
 var $phitmp=($_pre394|0)==0;
 var $9=$phitmp;label=10;break;
 case 9: 
 HEAP32[(($__sbuf__i_i_i608)>>2)]=0;
 var $9=1;label=10;break;
 case 10: 
 var $9;
 var $10=HEAP32[(($__sbuf__i11_i_i629)>>2)];
 var $tobool_i12_i_i630=($10|0)==0;
 if($tobool_i12_i_i630){label=16;break;}else{label=11;break;}
 case 11: 
 var $__ninp__i_i15_i_i634=(($10+12)|0);
 var $11=HEAP32[(($__ninp__i_i15_i_i634)>>2)];
 var $__einp__i_i16_i_i635=(($10+16)|0);
 var $12=HEAP32[(($__einp__i_i16_i_i635)>>2)];
 var $cmp_i_i17_i_i636=($11|0)==($12|0);
 if($cmp_i_i17_i_i636){label=12;break;}else{label=13;break;}
 case 12: 
 var $13=$10;
 var $vtable_i_i19_i_i638=HEAP32[(($13)>>2)];
 var $vfn_i_i20_i_i639=(($vtable_i_i19_i_i638+36)|0);
 var $14=HEAP32[(($vfn_i_i20_i_i639)>>2)];
 var $call_i_i21_i_i654=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$14]($10) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i7_i_i593_0=$call_i_i21_i_i654;label=14;break; } else { var $_ph_ph227_ph_ph_ph_ph_ph=$2;var $__gb_sroa_1_4_load189205_ph_ph226_ph_ph_ph_ph_ph=$__gb_sroa_1_4_load189212327;label=25;break; }
 case 13: 
 var $15=HEAP32[(($11)>>2)];
 var $retval_i_i7_i_i593_0=$15;label=14;break;
 case 14: 
 var $retval_i_i7_i_i593_0;
 var $cmp_i7_i25_i_i643=($retval_i_i7_i_i593_0|0)==-1;
 if($cmp_i7_i25_i_i643){label=15;break;}else{label=17;break;}
 case 15: 
 HEAP32[(($__sbuf__i11_i_i629)>>2)]=0;
 label=16;break;
 case 16: 
 if($9){var $__gb_sroa_1_4_load189212_lcssa=$__gb_sroa_1_4_load189212327;var $_lcssa=$2;var $__gb_sroa_0_0_load179197_lcssa=$__gb_sroa_0_0_load179197330;var $__trailing_sign_0_lcssa=$__trailing_sign_0336;label=256;break;}else{var $16=0;label=18;break;}
 case 17: 
 var $cmp_i30_i_i648=($10|0)==0;
 var $lnot_i=$9^$cmp_i30_i_i648;
 if($lnot_i){var $16=$10;label=18;break;}else{var $__gb_sroa_1_4_load189212_lcssa=$__gb_sroa_1_4_load189212327;var $_lcssa=$2;var $__gb_sroa_0_0_load179197_lcssa=$__gb_sroa_0_0_load179197330;var $__trailing_sign_0_lcssa=$__trailing_sign_0336;label=256;break;}
 case 18: 
 var $16;
 var $arrayidx=(($__pat+$__p_0338)|0);
 var $17=HEAP8[($arrayidx)];
 var $conv=(($17<<24)>>24);
 switch(($conv|0)){case 2:{ label=107;break;}case 4:{ var $__ng_0=0;var $add_ptr194=$add_ptr191333;var $__gb_sroa_0_0_load179200=$__gb_sroa_0_0_load179197330;var $183=$2;var $__gb_sroa_1_4_load189210=$__gb_sroa_1_4_load189212327;label=151;break;}case 1:{ label=30;break;}case 0:{ label=41;break;}case 3:{ label=66;break;}default:{var $__trailing_sign_1=$__trailing_sign_0336;var $add_ptr192=$add_ptr191333;var $__gb_sroa_0_0_load179198=$__gb_sroa_0_0_load179197330;var $289=$2;var $__gb_sroa_1_4_load189211=$__gb_sroa_1_4_load189212327;label=255;break;}}break;
 case 19: 
 var $lpad_loopexit224$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_loopexit224$1 = tempRet0;
 var $lpad_phi$1=$lpad_loopexit224$1;var $lpad_phi$0=$lpad_loopexit224$0;var $18=$_lcssa;var $__gb_sroa_1_4_load189205=$__gb_sroa_1_4_load189212_lcssa;label=27;break;
 case 20: 
 var $__gb_sroa_1_4_load189205_ph_ph;
 var $_ph_ph;
 var $lpad_loopexit228$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_loopexit228$1 = tempRet0;
 var $lpad_phi$1=$lpad_loopexit228$1;var $lpad_phi$0=$lpad_loopexit228$0;var $18=$_ph_ph;var $__gb_sroa_1_4_load189205=$__gb_sroa_1_4_load189205_ph_ph;label=27;break;
 case 21: 
 var $lpad_loopexit241$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_loopexit241$1 = tempRet0;
 var $lpad_phi$1=$lpad_loopexit241$1;var $lpad_phi$0=$lpad_loopexit241$0;var $18=$220;var $__gb_sroa_1_4_load189205=$__gb_sroa_1_4_load189207;label=27;break;
 case 22: 
 var $lpad_loopexit245$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_loopexit245$1 = tempRet0;
 var $lpad_phi$1=$lpad_loopexit245$1;var $lpad_phi$0=$lpad_loopexit245$0;var $18=$2;var $__gb_sroa_1_4_load189205=$__gb_sroa_1_4_load189212327;label=27;break;
 case 23: 
 var $lpad_loopexit252$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_loopexit252$1 = tempRet0;
 var $lpad_phi$1=$lpad_loopexit252$1;var $lpad_phi$0=$lpad_loopexit252$0;var $18=$2;var $__gb_sroa_1_4_load189205=$__gb_sroa_1_4_load189212327;label=27;break;
 case 24: 
 var $lpad_loopexit256$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_loopexit256$1 = tempRet0;
 var $lpad_phi$1=$lpad_loopexit256$1;var $lpad_phi$0=$lpad_loopexit256$0;var $18=$2;var $__gb_sroa_1_4_load189205=$__gb_sroa_1_4_load189212327;label=27;break;
 case 25: 
 var $__gb_sroa_1_4_load189205_ph_ph226_ph_ph_ph_ph_ph;
 var $_ph_ph227_ph_ph_ph_ph_ph;
 var $lpad_loopexit259$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_loopexit259$1 = tempRet0;
 var $lpad_phi$1=$lpad_loopexit259$1;var $lpad_phi$0=$lpad_loopexit259$0;var $18=$_ph_ph227_ph_ph_ph_ph_ph;var $__gb_sroa_1_4_load189205=$__gb_sroa_1_4_load189205_ph_ph226_ph_ph_ph_ph_ph;label=27;break;
 case 26: 
 var $lpad_nonloopexit260$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_nonloopexit260$1 = tempRet0;
 var $lpad_phi$1=$lpad_nonloopexit260$1;var $lpad_phi$0=$lpad_nonloopexit260$0;var $18=$arraydecay;var $__gb_sroa_1_4_load189205=448;label=27;break;
 case 27: 
 var $__gb_sroa_1_4_load189205;
 var $18;
 var $lpad_phi$0;
 var $lpad_phi$1;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($__spaces);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($__nsn);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($__psn);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grp);
 var $tobool_i_i_i677=($18|0)==0;
 if($tobool_i_i_i677){label=294;break;}else{label=28;break;}
 case 28: 
 var $19=$18;
 (function() { try { __THREW__ = 0; return FUNCTION_TABLE[$__gb_sroa_1_4_load189205]($19) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=294;break; } else { label=29;break; }
 case 29: 
 var $20$0 = ___cxa_find_matching_catch(-1, -1,0); var $20$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 30: 
 var $cond=($__p_0338|0)==3;
 if($cond){var $__gb_sroa_1_4_load189212_lcssa=$__gb_sroa_1_4_load189212327;var $_lcssa=$2;var $__gb_sroa_0_0_load179197_lcssa=$__gb_sroa_0_0_load179197330;var $__trailing_sign_0_lcssa=$__trailing_sign_0336;label=256;break;}else{label=31;break;}
 case 31: 
 var $21=HEAP32[(($__sbuf__i_i_i608)>>2)];
 var $__ninp__i_i693=(($21+12)|0);
 var $22=HEAP32[(($__ninp__i_i693)>>2)];
 var $__einp__i_i694=(($21+16)|0);
 var $23=HEAP32[(($__einp__i_i694)>>2)];
 var $cmp_i_i695=($22|0)==($23|0);
 if($cmp_i_i695){label=32;break;}else{label=33;break;}
 case 32: 
 var $24=$21;
 var $vtable_i_i696=HEAP32[(($24)>>2)];
 var $vfn_i_i697=(($vtable_i_i696+36)|0);
 var $25=HEAP32[(($vfn_i_i697)>>2)];
 var $call_i_i702=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$25]($21) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i687_0=$call_i_i702;label=34;break; } else { var $_ph_ph227_ph_ph_ph_ph_ph=$2;var $__gb_sroa_1_4_load189205_ph_ph226_ph_ph_ph_ph_ph=$__gb_sroa_1_4_load189212327;label=25;break; }
 case 33: 
 var $26=HEAP32[(($22)>>2)];
 var $retval_i_i687_0=$26;label=34;break;
 case 34: 
 var $retval_i_i687_0;
 var $vtable_i=HEAP32[(($1)>>2)];
 var $vfn_i=(($vtable_i+12)|0);
 var $27=HEAP32[(($vfn_i)>>2)];
 var $call_i706=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$27]($__ct,8192,$retval_i_i687_0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=35;break; } else { var $_ph_ph227_ph_ph_ph_ph_ph=$2;var $__gb_sroa_1_4_load189205_ph_ph226_ph_ph_ph_ph_ph=$__gb_sroa_1_4_load189212327;label=25;break; }
 case 35: 
 if($call_i706){label=36;break;}else{label=40;break;}
 case 36: 
 var $28=HEAP32[(($__sbuf__i_i_i608)>>2)];
 var $__ninp__i_i715=(($28+12)|0);
 var $29=HEAP32[(($__ninp__i_i715)>>2)];
 var $__einp__i_i716=(($28+16)|0);
 var $30=HEAP32[(($__einp__i_i716)>>2)];
 var $cmp_i_i717=($29|0)==($30|0);
 if($cmp_i_i717){label=37;break;}else{label=38;break;}
 case 37: 
 var $31=$28;
 var $vtable_i_i718=HEAP32[(($31)>>2)];
 var $vfn_i_i719=(($vtable_i_i718+40)|0);
 var $32=HEAP32[(($vfn_i_i719)>>2)];
 var $call_i_i727=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$32]($28) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i709_0=$call_i_i727;label=39;break; } else { var $_ph_ph227_ph_ph_ph_ph_ph=$2;var $__gb_sroa_1_4_load189205_ph_ph226_ph_ph_ph_ph_ph=$__gb_sroa_1_4_load189212327;label=25;break; }
 case 38: 
 var $incdec_ptr_i_i722=(($29+4)|0);
 HEAP32[(($__ninp__i_i715)>>2)]=$incdec_ptr_i_i722;
 var $33=HEAP32[(($29)>>2)];
 var $retval_i_i709_0=$33;label=39;break;
 case 39: 
 var $retval_i_i709_0;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($__spaces,$retval_i_i709_0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=41;break; } else { var $_ph_ph227_ph_ph_ph_ph_ph=$2;var $__gb_sroa_1_4_load189205_ph_ph226_ph_ph_ph_ph_ph=$__gb_sroa_1_4_load189212327;label=25;break; }
 case 40: 
 var $34=HEAP32[(($__err)>>2)];
 var $or=$34|4;
 HEAP32[(($__err)>>2)]=$or;
 var $retval_0=0;var $322=$2;var $__gb_sroa_1_4_load189213=$__gb_sroa_1_4_load189212327;label=290;break;
 case 41: 
 var $cmp16=($__p_0338|0)==3;
 if($cmp16){var $__gb_sroa_1_4_load189212_lcssa=$__gb_sroa_1_4_load189212327;var $_lcssa=$2;var $__gb_sroa_0_0_load179197_lcssa=$__gb_sroa_0_0_load179197330;var $__trailing_sign_0_lcssa=$__trailing_sign_0336;label=256;break;}else{var $35=$16;label=42;break;}
 case 42: 
 var $35;
 var $36=HEAP32[(($__sbuf__i_i_i608)>>2)];
 var $tobool_i_i_i749=($36|0)==0;
 if($tobool_i_i_i749){var $42=1;label=49;break;}else{label=43;break;}
 case 43: 
 var $__ninp__i_i_i_i752=(($36+12)|0);
 var $37=HEAP32[(($__ninp__i_i_i_i752)>>2)];
 var $__einp__i_i_i_i753=(($36+16)|0);
 var $38=HEAP32[(($__einp__i_i_i_i753)>>2)];
 var $cmp_i_i_i_i754=($37|0)==($38|0);
 if($cmp_i_i_i_i754){label=44;break;}else{label=45;break;}
 case 44: 
 var $39=$36;
 var $vtable_i_i_i_i756=HEAP32[(($39)>>2)];
 var $vfn_i_i_i_i757=(($vtable_i_i_i_i756+36)|0);
 var $40=HEAP32[(($vfn_i_i_i_i757)>>2)];
 var $call_i_i_i_i793=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$40]($36) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i_i_i739_0=$call_i_i_i_i793;label=46;break; } else { label=24;break; }
 case 45: 
 var $41=HEAP32[(($37)>>2)];
 var $retval_i_i_i_i739_0=$41;label=46;break;
 case 46: 
 var $retval_i_i_i_i739_0;
 var $cmp_i7_i_i_i761=($retval_i_i_i_i739_0|0)==-1;
 if($cmp_i7_i_i_i761){label=48;break;}else{label=47;break;}
 case 47: 
 var $_pre395=HEAP32[(($__sbuf__i_i_i608)>>2)];
 var $phitmp412=($_pre395|0)==0;
 var $42=$phitmp412;label=49;break;
 case 48: 
 HEAP32[(($__sbuf__i_i_i608)>>2)]=0;
 var $42=1;label=49;break;
 case 49: 
 var $42;
 var $tobool_i12_i_i770=($35|0)==0;
 if($tobool_i12_i_i770){label=55;break;}else{label=50;break;}
 case 50: 
 var $__ninp__i_i15_i_i774=(($35+12)|0);
 var $43=HEAP32[(($__ninp__i_i15_i_i774)>>2)];
 var $__einp__i_i16_i_i775=(($35+16)|0);
 var $44=HEAP32[(($__einp__i_i16_i_i775)>>2)];
 var $cmp_i_i17_i_i776=($43|0)==($44|0);
 if($cmp_i_i17_i_i776){label=51;break;}else{label=52;break;}
 case 51: 
 var $45=$35;
 var $vtable_i_i19_i_i778=HEAP32[(($45)>>2)];
 var $vfn_i_i20_i_i779=(($vtable_i_i19_i_i778+36)|0);
 var $46=HEAP32[(($vfn_i_i20_i_i779)>>2)];
 var $call_i_i21_i_i795=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$46]($35) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i7_i_i733_0=$call_i_i21_i_i795;label=53;break; } else { label=24;break; }
 case 52: 
 var $47=HEAP32[(($43)>>2)];
 var $retval_i_i7_i_i733_0=$47;label=53;break;
 case 53: 
 var $retval_i_i7_i_i733_0;
 var $cmp_i7_i25_i_i783=($retval_i_i7_i_i733_0|0)==-1;
 if($cmp_i7_i25_i_i783){label=54;break;}else{label=56;break;}
 case 54: 
 HEAP32[(($__sbuf__i11_i_i629)>>2)]=0;
 label=55;break;
 case 55: 
 if($42){var $__trailing_sign_1=$__trailing_sign_0336;var $add_ptr192=$add_ptr191333;var $__gb_sroa_0_0_load179198=$__gb_sroa_0_0_load179197330;var $289=$2;var $__gb_sroa_1_4_load189211=$__gb_sroa_1_4_load189212327;label=255;break;}else{var $48=0;label=57;break;}
 case 56: 
 var $cmp_i30_i_i788=($35|0)==0;
 var $lnot_i791=$42^$cmp_i30_i_i788;
 if($lnot_i791){var $48=$35;label=57;break;}else{var $__trailing_sign_1=$__trailing_sign_0336;var $add_ptr192=$add_ptr191333;var $__gb_sroa_0_0_load179198=$__gb_sroa_0_0_load179197330;var $289=$2;var $__gb_sroa_1_4_load189211=$__gb_sroa_1_4_load189212327;label=255;break;}
 case 57: 
 var $48;
 var $49=HEAP32[(($__sbuf__i_i_i608)>>2)];
 var $__ninp__i_i804=(($49+12)|0);
 var $50=HEAP32[(($__ninp__i_i804)>>2)];
 var $__einp__i_i805=(($49+16)|0);
 var $51=HEAP32[(($__einp__i_i805)>>2)];
 var $cmp_i_i806=($50|0)==($51|0);
 if($cmp_i_i806){label=58;break;}else{label=59;break;}
 case 58: 
 var $52=$49;
 var $vtable_i_i807=HEAP32[(($52)>>2)];
 var $vfn_i_i808=(($vtable_i_i807+36)|0);
 var $53=HEAP32[(($vfn_i_i808)>>2)];
 var $call_i_i813=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$53]($49) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i798_0=$call_i_i813;label=60;break; } else { label=24;break; }
 case 59: 
 var $54=HEAP32[(($50)>>2)];
 var $retval_i_i798_0=$54;label=60;break;
 case 60: 
 var $retval_i_i798_0;
 var $vtable_i819=HEAP32[(($1)>>2)];
 var $vfn_i820=(($vtable_i819+12)|0);
 var $55=HEAP32[(($vfn_i820)>>2)];
 var $call_i821=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$55]($__ct,8192,$retval_i_i798_0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=61;break; } else { label=24;break; }
 case 61: 
 if($call_i821){label=62;break;}else{var $__trailing_sign_1=$__trailing_sign_0336;var $add_ptr192=$add_ptr191333;var $__gb_sroa_0_0_load179198=$__gb_sroa_0_0_load179197330;var $289=$2;var $__gb_sroa_1_4_load189211=$__gb_sroa_1_4_load189212327;label=255;break;}
 case 62: 
 var $56=HEAP32[(($__sbuf__i_i_i608)>>2)];
 var $__ninp__i_i837=(($56+12)|0);
 var $57=HEAP32[(($__ninp__i_i837)>>2)];
 var $__einp__i_i838=(($56+16)|0);
 var $58=HEAP32[(($__einp__i_i838)>>2)];
 var $cmp_i_i839=($57|0)==($58|0);
 if($cmp_i_i839){label=63;break;}else{label=64;break;}
 case 63: 
 var $59=$56;
 var $vtable_i_i840=HEAP32[(($59)>>2)];
 var $vfn_i_i841=(($vtable_i_i840+40)|0);
 var $60=HEAP32[(($vfn_i_i841)>>2)];
 var $call_i_i852=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$60]($56) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i830_0=$call_i_i852;label=65;break; } else { label=24;break; }
 case 64: 
 var $incdec_ptr_i_i844=(($57+4)|0);
 HEAP32[(($__ninp__i_i837)>>2)]=$incdec_ptr_i_i844;
 var $61=HEAP32[(($57)>>2)];
 var $retval_i_i830_0=$61;label=65;break;
 case 65: 
 var $retval_i_i830_0;
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($__spaces,$retval_i_i830_0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $35=$48;label=42;break; } else { label=24;break; }
 case 66: 
 var $62=HEAP8[($__size__i_i874)];
 var $conv_i_i875=($62&255);
 var $and_i_i876=$conv_i_i875&1;
 var $tobool_i_i877=($and_i_i876|0)==0;
 var $63=HEAP32[(($__data__i_i_i)>>2)];
 var $shr_i_i894108=$conv_i_i875>>>1;
 var $cond_i896=($tobool_i_i877?$shr_i_i894108:$63);
 var $64=HEAP8[($__size__i_i915)];
 var $conv_i_i916=($64&255);
 var $and_i_i917=$conv_i_i916&1;
 var $tobool_i_i918=($and_i_i917|0)==0;
 var $65=HEAP32[(($__data__i_i_i1324)>>2)];
 var $shr_i_i935109=$conv_i_i916>>>1;
 var $cond_i937=($tobool_i_i918?$shr_i_i935109:$65);
 var $add=(((-$cond_i937))|0);
 var $cmp35=($cond_i896|0)==($add|0);
 if($cmp35){var $__trailing_sign_1=$__trailing_sign_0336;var $add_ptr192=$add_ptr191333;var $__gb_sroa_0_0_load179198=$__gb_sroa_0_0_load179197330;var $289=$2;var $__gb_sroa_1_4_load189211=$__gb_sroa_1_4_load189212327;label=255;break;}else{label=67;break;}
 case 67: 
 var $66=HEAP32[(($__data__i_i_i)>>2)];
 var $shr_i_i994110=$conv_i_i875>>>1;
 var $cond_i996=($tobool_i_i877?$shr_i_i994110:$66);
 var $cmp38=($cond_i996|0)==0;
 if($cmp38){label=69;break;}else{label=68;break;}
 case 68: 
 var $67=HEAP32[(($__data__i_i_i1324)>>2)];
 var $shr_i_i1035111=$conv_i_i916>>>1;
 var $cond_i1037=($tobool_i_i918?$shr_i_i1035111:$67);
 var $cmp40=($cond_i1037|0)==0;
 if($cmp40){label=69;break;}else{label=89;break;}
 case 69: 
 var $68=HEAP32[(($__data__i_i_i)>>2)];
 var $shr_i_i1084114=$conv_i_i875>>>1;
 var $cond_i1086=($tobool_i_i877?$shr_i_i1084114:$68);
 var $cmp43=($cond_i1086|0)==0;
 var $69=HEAP32[(($__sbuf__i_i_i608)>>2)];
 var $__ninp__i_i1273=(($69+12)|0);
 var $70=HEAP32[(($__ninp__i_i1273)>>2)];
 var $__einp__i_i1274=(($69+16)|0);
 var $71=HEAP32[(($__einp__i_i1274)>>2)];
 var $cmp_i_i1275=($70|0)==($71|0);
 if($cmp43){label=80;break;}else{label=70;break;}
 case 70: 
 if($cmp_i_i1275){label=71;break;}else{label=73;break;}
 case 71: 
 var $72=$69;
 var $vtable_i_i1116=HEAP32[(($72)>>2)];
 var $vfn_i_i1117=(($vtable_i_i1116+36)|0);
 var $73=HEAP32[(($vfn_i_i1117)>>2)];
 var $call_i_i1122=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$73]($69) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=72;break; } else { var $_ph_ph227_ph_ph_ph_ph_ph=$2;var $__gb_sroa_1_4_load189205_ph_ph226_ph_ph_ph_ph_ph=$__gb_sroa_1_4_load189212327;label=25;break; }
 case 72: 
 var $_pre397=HEAP8[($__size__i_i874)];
 var $retval_i_i1107_0=$call_i_i1122;var $75=$_pre397;label=74;break;
 case 73: 
 var $74=HEAP32[(($70)>>2)];
 var $retval_i_i1107_0=$74;var $75=$62;label=74;break;
 case 74: 
 var $75;
 var $retval_i_i1107_0;
 var $and_i_i_i=$75&1;
 var $tobool_i_i_i1137=(($and_i_i_i<<24)>>24)==0;
 var $76=HEAP32[(($__data__i21_i_i)>>2)];
 var $__data__i_i_i_=($tobool_i_i_i1137?$__data__i_i_i:$76);
 var $77=HEAP32[(($__data__i_i_i_)>>2)];
 var $cmp49=($retval_i_i1107_0|0)==($77|0);
 if($cmp49){label=75;break;}else{label=79;break;}
 case 75: 
 var $78=HEAP32[(($__sbuf__i_i_i608)>>2)];
 var $__ninp__i_i1213=(($78+12)|0);
 var $79=HEAP32[(($__ninp__i_i1213)>>2)];
 var $__einp__i_i1214=(($78+16)|0);
 var $80=HEAP32[(($__einp__i_i1214)>>2)];
 var $cmp_i_i1215=($79|0)==($80|0);
 if($cmp_i_i1215){label=76;break;}else{label=77;break;}
 case 76: 
 var $81=$78;
 var $vtable_i_i1216=HEAP32[(($81)>>2)];
 var $vfn_i_i1217=(($vtable_i_i1216+40)|0);
 var $82=HEAP32[(($vfn_i_i1217)>>2)];
 var $call_i_i1223=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$82]($78) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=78;break; } else { var $_ph_ph227_ph_ph_ph_ph_ph=$2;var $__gb_sroa_1_4_load189205_ph_ph226_ph_ph_ph_ph_ph=$__gb_sroa_1_4_load189212327;label=25;break; }
 case 77: 
 var $incdec_ptr_i_i1220=(($79+4)|0);
 HEAP32[(($__ninp__i_i1213)>>2)]=$incdec_ptr_i_i1220;
 label=78;break;
 case 78: 
 var $83=HEAP8[($__size__i_i874)];
 var $conv_i_i1243=($83&255);
 var $and_i_i1244=$conv_i_i1243&1;
 var $tobool_i_i1245=($and_i_i1244|0)==0;
 var $84=HEAP32[(($__data__i_i_i)>>2)];
 var $shr_i_i1262116=$conv_i_i1243>>>1;
 var $cond_i1264=($tobool_i_i1245?$shr_i_i1262116:$84);
 var $cmp54=($cond_i1264>>>0)>1;
 var $__psn___trailing_sign_0=($cmp54?$__psn:$__trailing_sign_0336);
 var $__trailing_sign_1=$__psn___trailing_sign_0;var $add_ptr192=$add_ptr191333;var $__gb_sroa_0_0_load179198=$__gb_sroa_0_0_load179197330;var $289=$2;var $__gb_sroa_1_4_load189211=$__gb_sroa_1_4_load189212327;label=255;break;
 case 79: 
 HEAP8[($__neg)]=1;
 var $__trailing_sign_1=$__trailing_sign_0336;var $add_ptr192=$add_ptr191333;var $__gb_sroa_0_0_load179198=$__gb_sroa_0_0_load179197330;var $289=$2;var $__gb_sroa_1_4_load189211=$__gb_sroa_1_4_load189212327;label=255;break;
 case 80: 
 if($cmp_i_i1275){label=81;break;}else{label=83;break;}
 case 81: 
 var $85=$69;
 var $vtable_i_i1276=HEAP32[(($85)>>2)];
 var $vfn_i_i1277=(($vtable_i_i1276+36)|0);
 var $86=HEAP32[(($vfn_i_i1277)>>2)];
 var $call_i_i1282=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$86]($69) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=82;break; } else { var $_ph_ph227_ph_ph_ph_ph_ph=$2;var $__gb_sroa_1_4_load189205_ph_ph226_ph_ph_ph_ph_ph=$__gb_sroa_1_4_load189212327;label=25;break; }
 case 82: 
 var $_pre396=HEAP8[($__size__i_i915)];
 var $retval_i_i1267_0=$call_i_i1282;var $88=$_pre396;label=84;break;
 case 83: 
 var $87=HEAP32[(($70)>>2)];
 var $retval_i_i1267_0=$87;var $88=$64;label=84;break;
 case 84: 
 var $88;
 var $retval_i_i1267_0;
 var $and_i_i_i1308=$88&1;
 var $tobool_i_i_i1309=(($and_i_i_i1308<<24)>>24)==0;
 var $89=HEAP32[(($__data__i21_i_i1316)>>2)];
 var $__data__i_i_i1324_=($tobool_i_i_i1309?$__data__i_i_i1324:$89);
 var $90=HEAP32[(($__data__i_i_i1324_)>>2)];
 var $cmp64=($retval_i_i1267_0|0)==($90|0);
 if($cmp64){label=85;break;}else{var $__trailing_sign_1=$__trailing_sign_0336;var $add_ptr192=$add_ptr191333;var $__gb_sroa_0_0_load179198=$__gb_sroa_0_0_load179197330;var $289=$2;var $__gb_sroa_1_4_load189211=$__gb_sroa_1_4_load189212327;label=255;break;}
 case 85: 
 var $91=HEAP32[(($__sbuf__i_i_i608)>>2)];
 var $__ninp__i_i1356=(($91+12)|0);
 var $92=HEAP32[(($__ninp__i_i1356)>>2)];
 var $__einp__i_i1357=(($91+16)|0);
 var $93=HEAP32[(($__einp__i_i1357)>>2)];
 var $cmp_i_i1358=($92|0)==($93|0);
 if($cmp_i_i1358){label=86;break;}else{label=87;break;}
 case 86: 
 var $94=$91;
 var $vtable_i_i1359=HEAP32[(($94)>>2)];
 var $vfn_i_i1360=(($vtable_i_i1359+40)|0);
 var $95=HEAP32[(($vfn_i_i1360)>>2)];
 var $call_i_i1366=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$95]($91) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=88;break; } else { var $_ph_ph227_ph_ph_ph_ph_ph=$2;var $__gb_sroa_1_4_load189205_ph_ph226_ph_ph_ph_ph_ph=$__gb_sroa_1_4_load189212327;label=25;break; }
 case 87: 
 var $incdec_ptr_i_i1363=(($92+4)|0);
 HEAP32[(($__ninp__i_i1356)>>2)]=$incdec_ptr_i_i1363;
 label=88;break;
 case 88: 
 HEAP8[($__neg)]=1;
 var $96=HEAP8[($__size__i_i915)];
 var $conv_i_i1386=($96&255);
 var $and_i_i1387=$conv_i_i1386&1;
 var $tobool_i_i1388=($and_i_i1387|0)==0;
 var $97=HEAP32[(($__data__i_i_i1324)>>2)];
 var $shr_i_i1405115=$conv_i_i1386>>>1;
 var $cond_i1407=($tobool_i_i1388?$shr_i_i1405115:$97);
 var $cmp69=($cond_i1407>>>0)>1;
 var $__nsn___trailing_sign_0=($cmp69?$__nsn:$__trailing_sign_0336);
 var $__trailing_sign_1=$__nsn___trailing_sign_0;var $add_ptr192=$add_ptr191333;var $__gb_sroa_0_0_load179198=$__gb_sroa_0_0_load179197330;var $289=$2;var $__gb_sroa_1_4_load189211=$__gb_sroa_1_4_load189212327;label=255;break;
 case 89: 
 var $98=HEAP32[(($__sbuf__i_i_i608)>>2)];
 var $__ninp__i_i1434=(($98+12)|0);
 var $99=HEAP32[(($__ninp__i_i1434)>>2)];
 var $__einp__i_i1435=(($98+16)|0);
 var $100=HEAP32[(($__einp__i_i1435)>>2)];
 var $cmp_i_i1436=($99|0)==($100|0);
 if($cmp_i_i1436){label=90;break;}else{label=92;break;}
 case 90: 
 var $101=$98;
 var $vtable_i_i1437=HEAP32[(($101)>>2)];
 var $vfn_i_i1438=(($vtable_i_i1437+36)|0);
 var $102=HEAP32[(($vfn_i_i1438)>>2)];
 var $call_i_i1443=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$102]($98) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=91;break; } else { var $_ph_ph227_ph_ph_ph_ph_ph=$2;var $__gb_sroa_1_4_load189205_ph_ph226_ph_ph_ph_ph_ph=$__gb_sroa_1_4_load189212327;label=25;break; }
 case 91: 
 var $_pre398=HEAP8[($__size__i_i874)];
 var $retval_i_i1428_0=$call_i_i1443;var $104=$_pre398;label=93;break;
 case 92: 
 var $103=HEAP32[(($99)>>2)];
 var $retval_i_i1428_0=$103;var $104=$62;label=93;break;
 case 93: 
 var $104;
 var $retval_i_i1428_0;
 var $and_i_i_i1469=$104&1;
 var $tobool_i_i_i1470=(($and_i_i_i1469<<24)>>24)==0;
 var $105=HEAP32[(($__data__i21_i_i)>>2)];
 var $__data__i_i_i_422=($tobool_i_i_i1470?$__data__i_i_i:$105);
 var $106=HEAP32[(($__data__i_i_i_422)>>2)];
 var $cmp79=($retval_i_i1428_0|0)==($106|0);
 var $107=HEAP32[(($__sbuf__i_i_i608)>>2)];
 var $__ninp__i_i1564=(($107+12)|0);
 var $108=HEAP32[(($__ninp__i_i1564)>>2)];
 var $__einp__i_i1565=(($107+16)|0);
 var $109=HEAP32[(($__einp__i_i1565)>>2)];
 var $cmp_i_i1566=($108|0)==($109|0);
 if($cmp79){label=94;break;}else{label=98;break;}
 case 94: 
 if($cmp_i_i1566){label=95;break;}else{label=96;break;}
 case 95: 
 var $110=$107;
 var $vtable_i_i1567=HEAP32[(($110)>>2)];
 var $vfn_i_i1568=(($vtable_i_i1567+40)|0);
 var $111=HEAP32[(($vfn_i_i1568)>>2)];
 var $call_i_i1574=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$111]($107) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=97;break; } else { var $_ph_ph227_ph_ph_ph_ph_ph=$2;var $__gb_sroa_1_4_load189205_ph_ph226_ph_ph_ph_ph_ph=$__gb_sroa_1_4_load189212327;label=25;break; }
 case 96: 
 var $incdec_ptr_i_i1571=(($108+4)|0);
 HEAP32[(($__ninp__i_i1564)>>2)]=$incdec_ptr_i_i1571;
 label=97;break;
 case 97: 
 var $112=HEAP8[($__size__i_i874)];
 var $conv_i_i1594=($112&255);
 var $and_i_i1595=$conv_i_i1594&1;
 var $tobool_i_i1596=($and_i_i1595|0)==0;
 var $113=HEAP32[(($__data__i_i_i)>>2)];
 var $shr_i_i1613113=$conv_i_i1594>>>1;
 var $cond_i1615=($tobool_i_i1596?$shr_i_i1613113:$113);
 var $cmp84=($cond_i1615>>>0)>1;
 var $__psn___trailing_sign_0117=($cmp84?$__psn:$__trailing_sign_0336);
 var $__trailing_sign_1=$__psn___trailing_sign_0117;var $add_ptr192=$add_ptr191333;var $__gb_sroa_0_0_load179198=$__gb_sroa_0_0_load179197330;var $289=$2;var $__gb_sroa_1_4_load189211=$__gb_sroa_1_4_load189212327;label=255;break;
 case 98: 
 if($cmp_i_i1566){label=99;break;}else{label=100;break;}
 case 99: 
 var $114=$107;
 var $vtable_i_i1627=HEAP32[(($114)>>2)];
 var $vfn_i_i1628=(($vtable_i_i1627+36)|0);
 var $115=HEAP32[(($vfn_i_i1628)>>2)];
 var $call_i_i1633=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$115]($107) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i1618_0=$call_i_i1633;label=101;break; } else { var $_ph_ph227_ph_ph_ph_ph_ph=$2;var $__gb_sroa_1_4_load189205_ph_ph226_ph_ph_ph_ph_ph=$__gb_sroa_1_4_load189212327;label=25;break; }
 case 100: 
 var $116=HEAP32[(($108)>>2)];
 var $retval_i_i1618_0=$116;label=101;break;
 case 101: 
 var $retval_i_i1618_0;
 var $117=HEAP8[($__size__i_i915)];
 var $and_i_i_i1659=$117&1;
 var $tobool_i_i_i1660=(($and_i_i_i1659<<24)>>24)==0;
 var $118=HEAP32[(($__data__i21_i_i1316)>>2)];
 var $__data__i_i_i1324_423=($tobool_i_i_i1660?$__data__i_i_i1324:$118);
 var $119=HEAP32[(($__data__i_i_i1324_423)>>2)];
 var $cmp92=($retval_i_i1618_0|0)==($119|0);
 if($cmp92){label=102;break;}else{label=106;break;}
 case 102: 
 var $120=HEAP32[(($__sbuf__i_i_i608)>>2)];
 var $__ninp__i_i1688=(($120+12)|0);
 var $121=HEAP32[(($__ninp__i_i1688)>>2)];
 var $__einp__i_i1689=(($120+16)|0);
 var $122=HEAP32[(($__einp__i_i1689)>>2)];
 var $cmp_i_i1690=($121|0)==($122|0);
 if($cmp_i_i1690){label=103;break;}else{label=104;break;}
 case 103: 
 var $123=$120;
 var $vtable_i_i1691=HEAP32[(($123)>>2)];
 var $vfn_i_i1692=(($vtable_i_i1691+40)|0);
 var $124=HEAP32[(($vfn_i_i1692)>>2)];
 var $call_i_i1698=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$124]($120) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=105;break; } else { var $_ph_ph227_ph_ph_ph_ph_ph=$2;var $__gb_sroa_1_4_load189205_ph_ph226_ph_ph_ph_ph_ph=$__gb_sroa_1_4_load189212327;label=25;break; }
 case 104: 
 var $incdec_ptr_i_i1695=(($121+4)|0);
 HEAP32[(($__ninp__i_i1688)>>2)]=$incdec_ptr_i_i1695;
 label=105;break;
 case 105: 
 HEAP8[($__neg)]=1;
 var $125=HEAP8[($__size__i_i915)];
 var $conv_i_i1718=($125&255);
 var $and_i_i1719=$conv_i_i1718&1;
 var $tobool_i_i1720=($and_i_i1719|0)==0;
 var $126=HEAP32[(($__data__i_i_i1324)>>2)];
 var $shr_i_i1737112=$conv_i_i1718>>>1;
 var $cond_i1739=($tobool_i_i1720?$shr_i_i1737112:$126);
 var $cmp97=($cond_i1739>>>0)>1;
 var $__nsn___trailing_sign_0118=($cmp97?$__nsn:$__trailing_sign_0336);
 var $__trailing_sign_1=$__nsn___trailing_sign_0118;var $add_ptr192=$add_ptr191333;var $__gb_sroa_0_0_load179198=$__gb_sroa_0_0_load179197330;var $289=$2;var $__gb_sroa_1_4_load189211=$__gb_sroa_1_4_load189212327;label=255;break;
 case 106: 
 var $127=HEAP32[(($__err)>>2)];
 var $or101=$127|4;
 HEAP32[(($__err)>>2)]=$or101;
 var $retval_0=0;var $322=$2;var $__gb_sroa_1_4_load189213=$__gb_sroa_1_4_load189212327;label=290;break;
 case 107: 
 var $tobool108=($__trailing_sign_0336|0)!=0;
 var $cmp110=($__p_0338>>>0)<2;
 var $or_cond=$tobool108|$cmp110;
 if($or_cond){label=111;break;}else{label=108;break;}
 case 108: 
 var $cmp111=($__p_0338|0)==2;
 if($cmp111){label=109;break;}else{var $129=0;label=110;break;}
 case 109: 
 var $128=HEAP8[($arrayidx114)];
 var $cmp116=(($128<<24)>>24)!=0;
 var $129=$cmp116;label=110;break;
 case 110: 
 var $129;
 var $brmerge=$cmp120219|$129;
 if($brmerge){label=111;break;}else{var $__trailing_sign_1=0;var $add_ptr192=$add_ptr191333;var $__gb_sroa_0_0_load179198=$__gb_sroa_0_0_load179197330;var $289=$2;var $__gb_sroa_1_4_load189211=$__gb_sroa_1_4_load189212327;label=255;break;}
 case 111: 
 var $130=HEAP8[($__size__i_i_i1789)];
 var $and_i_i_i1791=$130&1;
 var $tobool_i_i_i1792=(($and_i_i_i1791<<24)>>24)==0;
 var $131=HEAP32[(($__data__i21_i_i1894)>>2)];
 var $__data__i_i_i1807_=($tobool_i_i_i1792?$__data__i_i_i1807:$131);
 var $cmp128=($__p_0338|0)==0;
 if($cmp128){var $__sym_curr_char_sroa_0_0=$__data__i_i_i1807_;var $151=$130;var $150=$16;label=124;break;}else{label=112;break;}
 case 112: 
 var $sub=((($__p_0338)-(1))|0);
 var $arrayidx130=(($__pat+$sub)|0);
 var $132=HEAP8[($arrayidx130)];
 var $switch=($132&255)<2;
 if($switch){var $__sym_space_end_sroa_0_0=$__data__i_i_i1807_;var $133=$130;label=113;break;}else{var $__sym_curr_char_sroa_0_0=$__data__i_i_i1807_;var $151=$130;var $150=$16;label=124;break;}
 case 113: 
 var $133;
 var $__sym_space_end_sroa_0_0;
 var $and_i_i_i1886=$133&1;
 var $tobool_i_i_i1887=(($and_i_i_i1886<<24)>>24)==0;
 var $134=HEAP32[(($__data__i21_i_i1894)>>2)];
 var $__data__i_i_i1807_424=($tobool_i_i_i1887?$__data__i_i_i1807:$134);
 var $conv_i_i22_i=($133&255);
 var $and_i_i23_i=$conv_i_i22_i&1;
 var $tobool_i_i24_i=($and_i_i23_i|0)==0;
 var $135=HEAP32[(($__data__i_i_i1807)>>2)];
 var $shr_i_i_i104=$conv_i_i22_i>>>1;
 var $cond_i34_i=($tobool_i_i24_i?$shr_i_i_i104:$135);
 var $add_ptr_i1906=(($__data__i_i_i1807_424+($cond_i34_i<<2))|0);
 var $lnot_i1922=($__sym_space_end_sroa_0_0|0)==($add_ptr_i1906|0);
 if($lnot_i1922){var $138=$133;label=118;break;}else{label=114;break;}
 case 114: 
 var $136=HEAP32[(($__sym_space_end_sroa_0_0)>>2)];
 var $vtable_i2014=HEAP32[(($1)>>2)];
 var $vfn_i2015=(($vtable_i2014+12)|0);
 var $137=HEAP32[(($vfn_i2015)>>2)];
 var $call_i2016=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$137]($__ct,8192,$136) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=115;break; } else { label=22;break; }
 case 115: 
 if($call_i2016){label=116;break;}else{label=117;break;}
 case 116: 
 var $incdec_ptr_i=(($__sym_space_end_sroa_0_0+4)|0);
 var $_pre399=HEAP8[($__size__i_i_i1789)];
 var $__sym_space_end_sroa_0_0=$incdec_ptr_i;var $133=$_pre399;label=113;break;
 case 117: 
 var $_pre400=HEAP8[($__size__i_i_i1789)];
 var $138=$_pre400;label=118;break;
 case 118: 
 var $138;
 var $and_i_i_i2048=$138&1;
 var $tobool_i_i_i2049=(($and_i_i_i2048<<24)>>24)==0;
 var $139=HEAP32[(($__data__i21_i_i1894)>>2)];
 var $__data__i_i_i1807_425=($tobool_i_i_i2049?$__data__i_i_i1807:$139);
 var $sub_ptr_lhs_cast_i=$__sym_space_end_sroa_0_0;
 var $sub_ptr_rhs_cast_i=$__data__i_i_i1807_425;
 var $sub_ptr_sub_i=((($sub_ptr_lhs_cast_i)-($sub_ptr_rhs_cast_i))|0);
 var $sub_ptr_div_i=$sub_ptr_sub_i>>2;
 var $140=HEAP8[($__size__i_i2244)];
 var $conv_i_i2245=($140&255);
 var $and_i_i2246=$conv_i_i2245&1;
 var $tobool_i_i2247=($and_i_i2246|0)==0;
 var $141=HEAP32[(($__data__i_i_i2388)>>2)];
 var $shr_i_i2264105=$conv_i_i2245>>>1;
 var $cond_i2266=($tobool_i_i2247?$shr_i_i2264105:$141);
 var $cmp155=($sub_ptr_div_i>>>0)>($cond_i2266>>>0);
 if($cmp155){label=123;break;}else{label=119;break;}
 case 119: 
 var $and_i_i_i2372=$140&1;
 var $tobool_i_i_i2373=(($and_i_i_i2372<<24)>>24)==0;
 var $142=HEAP32[(($__data__i21_i_i2725)>>2)];
 var $__data__i_i_i2388_=($tobool_i_i_i2373?$__data__i_i_i2388:$142);
 var $143=HEAP32[(($__data__i_i_i2388)>>2)];
 var $shr_i_i_i2420106=$conv_i_i2245>>>1;
 var $cond_i34_i2422=($tobool_i_i2247?$shr_i_i_i2420106:$143);
 var $add_ptr_i2423_sum=((($cond_i34_i2422)-($sub_ptr_div_i))|0);
 var $add_ptr_i_i_i=(($__data__i_i_i2388_+($add_ptr_i2423_sum<<2))|0);
 var $144=HEAP32[(($__data__i21_i_i2725)>>2)];
 var $__data__i_i_i2388_426=($tobool_i_i_i2373?$__data__i_i_i2388:$144);
 var $145=HEAP32[(($__data__i_i_i2388)>>2)];
 var $shr_i_i_i2765107=$conv_i_i2245>>>1;
 var $cond_i34_i2767=($tobool_i_i2247?$shr_i_i_i2765107:$145);
 var $add_ptr_i2768=(($__data__i_i_i2388_426+($cond_i34_i2767<<2))|0);
 var $146=HEAP32[(($__data__i21_i_i1894)>>2)];
 var $__data__i_i_i1807_427=($tobool_i_i_i2049?$__data__i_i_i1807:$146);
 var $lnot_i_i_i249=($add_ptr_i_i_i|0)==($add_ptr_i2768|0);
 if($lnot_i_i_i249){var $__sym_curr_char_sroa_0_0=$__sym_space_end_sroa_0_0;var $151=$138;var $150=$16;label=124;break;}else{var $agg_tmp4_i_sroa_0_0250=$add_ptr_i_i_i;var $agg_tmp29_i_sroa_0_0251=$__data__i_i_i1807_427;label=120;break;}
 case 120: 
 var $agg_tmp29_i_sroa_0_0251;
 var $agg_tmp4_i_sroa_0_0250;
 var $147=HEAP32[(($agg_tmp4_i_sroa_0_0250)>>2)];
 var $148=HEAP32[(($agg_tmp29_i_sroa_0_0251)>>2)];
 var $cmp_i_i_i2622=($147|0)==($148|0);
 if($cmp_i_i_i2622){label=121;break;}else{label=123;break;}
 case 121: 
 var $incdec_ptr_i9_i_i=(($agg_tmp4_i_sroa_0_0250+4)|0);
 var $lnot_i_i_i=($incdec_ptr_i9_i_i|0)==($add_ptr_i2768|0);
 if($lnot_i_i_i){var $__sym_curr_char_sroa_0_0=$__sym_space_end_sroa_0_0;var $151=$138;var $150=$16;label=124;break;}else{label=122;break;}
 case 122: 
 var $incdec_ptr_i_i_i=(($agg_tmp29_i_sroa_0_0251+4)|0);
 var $agg_tmp4_i_sroa_0_0250=$incdec_ptr_i9_i_i;var $agg_tmp29_i_sroa_0_0251=$incdec_ptr_i_i_i;label=120;break;
 case 123: 
 var $149=HEAP32[(($__data__i21_i_i1894)>>2)];
 var $__data__i_i_i1807_428=($tobool_i_i_i2049?$__data__i_i_i1807:$149);
 var $__sym_curr_char_sroa_0_0=$__data__i_i_i1807_428;var $151=$138;var $150=$16;label=124;break;
 case 124: 
 var $150;
 var $151;
 var $__sym_curr_char_sroa_0_0;
 var $and_i_i_i2484=$151&1;
 var $tobool_i_i_i2485=(($and_i_i_i2484<<24)>>24)==0;
 var $152=HEAP32[(($__data__i21_i_i1894)>>2)];
 var $__data__i_i_i1807_429=($tobool_i_i_i2485?$__data__i_i_i1807:$152);
 var $conv_i_i22_i2512=($151&255);
 var $and_i_i23_i2513=$conv_i_i22_i2512&1;
 var $tobool_i_i24_i2514=($and_i_i23_i2513|0)==0;
 var $153=HEAP32[(($__data__i_i_i1807)>>2)];
 var $shr_i_i_i2532102=$conv_i_i22_i2512>>>1;
 var $cond_i34_i2534=($tobool_i_i24_i2514?$shr_i_i_i2532102:$153);
 var $add_ptr_i2535=(($__data__i_i_i1807_429+($cond_i34_i2534<<2))|0);
 var $lnot_i2446=($__sym_curr_char_sroa_0_0|0)==($add_ptr_i2535|0);
 if($lnot_i2446){label=148;break;}else{label=125;break;}
 case 125: 
 var $154=HEAP32[(($__sbuf__i_i_i608)>>2)];
 var $tobool_i_i_i2287=($154|0)==0;
 if($tobool_i_i_i2287){var $160=1;label=132;break;}else{label=126;break;}
 case 126: 
 var $__ninp__i_i_i_i2290=(($154+12)|0);
 var $155=HEAP32[(($__ninp__i_i_i_i2290)>>2)];
 var $__einp__i_i_i_i2291=(($154+16)|0);
 var $156=HEAP32[(($__einp__i_i_i_i2291)>>2)];
 var $cmp_i_i_i_i2292=($155|0)==($156|0);
 if($cmp_i_i_i_i2292){label=127;break;}else{label=128;break;}
 case 127: 
 var $157=$154;
 var $vtable_i_i_i_i2294=HEAP32[(($157)>>2)];
 var $vfn_i_i_i_i2295=(($vtable_i_i_i_i2294+36)|0);
 var $158=HEAP32[(($vfn_i_i_i_i2295)>>2)];
 var $call_i_i_i_i2331=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$158]($154) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i_i_i2277_0=$call_i_i_i_i2331;label=129;break; } else { label=23;break; }
 case 128: 
 var $159=HEAP32[(($155)>>2)];
 var $retval_i_i_i_i2277_0=$159;label=129;break;
 case 129: 
 var $retval_i_i_i_i2277_0;
 var $cmp_i7_i_i_i2299=($retval_i_i_i_i2277_0|0)==-1;
 if($cmp_i7_i_i_i2299){label=131;break;}else{label=130;break;}
 case 130: 
 var $_pre401=HEAP32[(($__sbuf__i_i_i608)>>2)];
 var $phitmp411=($_pre401|0)==0;
 var $160=$phitmp411;label=132;break;
 case 131: 
 HEAP32[(($__sbuf__i_i_i608)>>2)]=0;
 var $160=1;label=132;break;
 case 132: 
 var $160;
 var $tobool_i12_i_i2308=($150|0)==0;
 if($tobool_i12_i_i2308){label=138;break;}else{label=133;break;}
 case 133: 
 var $__ninp__i_i15_i_i2312=(($150+12)|0);
 var $161=HEAP32[(($__ninp__i_i15_i_i2312)>>2)];
 var $__einp__i_i16_i_i2313=(($150+16)|0);
 var $162=HEAP32[(($__einp__i_i16_i_i2313)>>2)];
 var $cmp_i_i17_i_i2314=($161|0)==($162|0);
 if($cmp_i_i17_i_i2314){label=134;break;}else{label=135;break;}
 case 134: 
 var $163=$150;
 var $vtable_i_i19_i_i2316=HEAP32[(($163)>>2)];
 var $vfn_i_i20_i_i2317=(($vtable_i_i19_i_i2316+36)|0);
 var $164=HEAP32[(($vfn_i_i20_i_i2317)>>2)];
 var $call_i_i21_i_i2333=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$164]($150) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i7_i_i2271_0=$call_i_i21_i_i2333;label=136;break; } else { label=23;break; }
 case 135: 
 var $165=HEAP32[(($161)>>2)];
 var $retval_i_i7_i_i2271_0=$165;label=136;break;
 case 136: 
 var $retval_i_i7_i_i2271_0;
 var $cmp_i7_i25_i_i2321=($retval_i_i7_i_i2271_0|0)==-1;
 if($cmp_i7_i25_i_i2321){label=137;break;}else{label=139;break;}
 case 137: 
 HEAP32[(($__sbuf__i11_i_i629)>>2)]=0;
 label=138;break;
 case 138: 
 if($160){label=148;break;}else{var $166=0;label=140;break;}
 case 139: 
 var $cmp_i30_i_i2326=($150|0)==0;
 var $lnot_i2329=$160^$cmp_i30_i_i2326;
 if($lnot_i2329){var $166=$150;label=140;break;}else{label=148;break;}
 case 140: 
 var $166;
 var $167=HEAP32[(($__sbuf__i_i_i608)>>2)];
 var $__ninp__i_i2216=(($167+12)|0);
 var $168=HEAP32[(($__ninp__i_i2216)>>2)];
 var $__einp__i_i2217=(($167+16)|0);
 var $169=HEAP32[(($__einp__i_i2217)>>2)];
 var $cmp_i_i2218=($168|0)==($169|0);
 if($cmp_i_i2218){label=141;break;}else{label=142;break;}
 case 141: 
 var $170=$167;
 var $vtable_i_i2219=HEAP32[(($170)>>2)];
 var $vfn_i_i2220=(($vtable_i_i2219+36)|0);
 var $171=HEAP32[(($vfn_i_i2220)>>2)];
 var $call_i_i2225=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$171]($167) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i2210_0=$call_i_i2225;label=143;break; } else { label=23;break; }
 case 142: 
 var $172=HEAP32[(($168)>>2)];
 var $retval_i_i2210_0=$172;label=143;break;
 case 143: 
 var $retval_i_i2210_0;
 var $173=HEAP32[(($__sym_curr_char_sroa_0_0)>>2)];
 var $cmp178=($retval_i_i2210_0|0)==($173|0);
 if($cmp178){label=144;break;}else{label=148;break;}
 case 144: 
 var $174=HEAP32[(($__sbuf__i_i_i608)>>2)];
 var $__ninp__i_i2189=(($174+12)|0);
 var $175=HEAP32[(($__ninp__i_i2189)>>2)];
 var $__einp__i_i2190=(($174+16)|0);
 var $176=HEAP32[(($__einp__i_i2190)>>2)];
 var $cmp_i_i2191=($175|0)==($176|0);
 if($cmp_i_i2191){label=145;break;}else{label=146;break;}
 case 145: 
 var $177=$174;
 var $vtable_i_i2192=HEAP32[(($177)>>2)];
 var $vfn_i_i2193=(($vtable_i_i2192+40)|0);
 var $178=HEAP32[(($vfn_i_i2193)>>2)];
 var $call_i_i2199=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$178]($174) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=147;break; } else { label=23;break; }
 case 146: 
 var $incdec_ptr_i_i2196=(($175+4)|0);
 HEAP32[(($__ninp__i_i2189)>>2)]=$incdec_ptr_i_i2196;
 label=147;break;
 case 147: 
 var $incdec_ptr_i2181=(($__sym_curr_char_sroa_0_0+4)|0);
 var $_pre=HEAP8[($__size__i_i_i1789)];
 var $__sym_curr_char_sroa_0_0=$incdec_ptr_i2181;var $151=$_pre;var $150=$166;label=124;break;
 case 148: 
 if($cmp120219){label=149;break;}else{var $__trailing_sign_1=$__trailing_sign_0336;var $add_ptr192=$add_ptr191333;var $__gb_sroa_0_0_load179198=$__gb_sroa_0_0_load179197330;var $289=$2;var $__gb_sroa_1_4_load189211=$__gb_sroa_1_4_load189212327;label=255;break;}
 case 149: 
 var $179=HEAP8[($__size__i_i_i1789)];
 var $and_i_i_i2122=$179&1;
 var $tobool_i_i_i2123=(($and_i_i_i2122<<24)>>24)==0;
 var $180=HEAP32[(($__data__i21_i_i1894)>>2)];
 var $__data__i_i_i1807_430=($tobool_i_i_i2123?$__data__i_i_i1807:$180);
 var $conv_i_i22_i2150=($179&255);
 var $and_i_i23_i2151=$conv_i_i22_i2150&1;
 var $tobool_i_i24_i2152=($and_i_i23_i2151|0)==0;
 var $181=HEAP32[(($__data__i_i_i1807)>>2)];
 var $shr_i_i_i2170103=$conv_i_i22_i2150>>>1;
 var $cond_i34_i2172=($tobool_i_i24_i2152?$shr_i_i_i2170103:$181);
 var $add_ptr_i2173=(($__data__i_i_i1807_430+($cond_i34_i2172<<2))|0);
 var $lnot_i2084=($__sym_curr_char_sroa_0_0|0)==($add_ptr_i2173|0);
 if($lnot_i2084){var $__trailing_sign_1=$__trailing_sign_0336;var $add_ptr192=$add_ptr191333;var $__gb_sroa_0_0_load179198=$__gb_sroa_0_0_load179197330;var $289=$2;var $__gb_sroa_1_4_load189211=$__gb_sroa_1_4_load189212327;label=255;break;}else{label=150;break;}
 case 150: 
 var $182=HEAP32[(($__err)>>2)];
 var $or190=$182|4;
 HEAP32[(($__err)>>2)]=$or190;
 var $retval_0=0;var $322=$2;var $__gb_sroa_1_4_load189213=$__gb_sroa_1_4_load189212327;label=290;break;
 case 151: 
 var $__gb_sroa_1_4_load189210;
 var $183;
 var $__gb_sroa_0_0_load179200;
 var $add_ptr194;
 var $__ng_0;
 var $184=HEAP32[(($__sbuf__i_i_i608)>>2)];
 var $tobool_i_i_i1962=($184|0)==0;
 if($tobool_i_i_i1962){var $190=1;label=158;break;}else{label=152;break;}
 case 152: 
 var $__ninp__i_i_i_i1965=(($184+12)|0);
 var $185=HEAP32[(($__ninp__i_i_i_i1965)>>2)];
 var $__einp__i_i_i_i1966=(($184+16)|0);
 var $186=HEAP32[(($__einp__i_i_i_i1966)>>2)];
 var $cmp_i_i_i_i1967=($185|0)==($186|0);
 if($cmp_i_i_i_i1967){label=153;break;}else{label=154;break;}
 case 153: 
 var $187=$184;
 var $vtable_i_i_i_i1969=HEAP32[(($187)>>2)];
 var $vfn_i_i_i_i1970=(($vtable_i_i_i_i1969+36)|0);
 var $188=HEAP32[(($vfn_i_i_i_i1970)>>2)];
 var $call_i_i_i_i2006=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$188]($184) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i_i_i1952_0=$call_i_i_i_i2006;label=155;break; } else { var $_ph_ph=$183;var $__gb_sroa_1_4_load189205_ph_ph=$__gb_sroa_1_4_load189210;label=20;break; }
 case 154: 
 var $189=HEAP32[(($185)>>2)];
 var $retval_i_i_i_i1952_0=$189;label=155;break;
 case 155: 
 var $retval_i_i_i_i1952_0;
 var $cmp_i7_i_i_i1974=($retval_i_i_i_i1952_0|0)==-1;
 if($cmp_i7_i_i_i1974){label=157;break;}else{label=156;break;}
 case 156: 
 var $_pre402=HEAP32[(($__sbuf__i_i_i608)>>2)];
 var $phitmp408=($_pre402|0)==0;
 var $190=$phitmp408;label=158;break;
 case 157: 
 HEAP32[(($__sbuf__i_i_i608)>>2)]=0;
 var $190=1;label=158;break;
 case 158: 
 var $190;
 var $191=HEAP32[(($__sbuf__i11_i_i629)>>2)];
 var $tobool_i12_i_i1983=($191|0)==0;
 if($tobool_i12_i_i1983){label=164;break;}else{label=159;break;}
 case 159: 
 var $__ninp__i_i15_i_i1987=(($191+12)|0);
 var $192=HEAP32[(($__ninp__i_i15_i_i1987)>>2)];
 var $__einp__i_i16_i_i1988=(($191+16)|0);
 var $193=HEAP32[(($__einp__i_i16_i_i1988)>>2)];
 var $cmp_i_i17_i_i1989=($192|0)==($193|0);
 if($cmp_i_i17_i_i1989){label=160;break;}else{label=161;break;}
 case 160: 
 var $194=$191;
 var $vtable_i_i19_i_i1991=HEAP32[(($194)>>2)];
 var $vfn_i_i20_i_i1992=(($vtable_i_i19_i_i1991+36)|0);
 var $195=HEAP32[(($vfn_i_i20_i_i1992)>>2)];
 var $call_i_i21_i_i2008=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$195]($191) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i7_i_i1946_0=$call_i_i21_i_i2008;label=162;break; } else { var $_ph_ph=$183;var $__gb_sroa_1_4_load189205_ph_ph=$__gb_sroa_1_4_load189210;label=20;break; }
 case 161: 
 var $196=HEAP32[(($192)>>2)];
 var $retval_i_i7_i_i1946_0=$196;label=162;break;
 case 162: 
 var $retval_i_i7_i_i1946_0;
 var $cmp_i7_i25_i_i1996=($retval_i_i7_i_i1946_0|0)==-1;
 if($cmp_i7_i25_i_i1996){label=163;break;}else{label=165;break;}
 case 163: 
 HEAP32[(($__sbuf__i11_i_i629)>>2)]=0;
 label=164;break;
 case 164: 
 if($190){label=189;break;}else{label=166;break;}
 case 165: 
 var $cmp_i30_i_i2001=($191|0)==0;
 var $lnot_i2004=$190^$cmp_i30_i_i2001;
 if($lnot_i2004){label=166;break;}else{label=189;break;}
 case 166: 
 var $197=HEAP32[(($__sbuf__i_i_i608)>>2)];
 var $__ninp__i_i1930=(($197+12)|0);
 var $198=HEAP32[(($__ninp__i_i1930)>>2)];
 var $__einp__i_i1931=(($197+16)|0);
 var $199=HEAP32[(($__einp__i_i1931)>>2)];
 var $cmp_i_i1932=($198|0)==($199|0);
 if($cmp_i_i1932){label=167;break;}else{label=168;break;}
 case 167: 
 var $200=$197;
 var $vtable_i_i1933=HEAP32[(($200)>>2)];
 var $vfn_i_i1934=(($vtable_i_i1933+36)|0);
 var $201=HEAP32[(($vfn_i_i1934)>>2)];
 var $call_i_i1939=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$201]($197) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i1924_0=$call_i_i1939;label=169;break; } else { var $_ph_ph=$183;var $__gb_sroa_1_4_load189205_ph_ph=$__gb_sroa_1_4_load189210;label=20;break; }
 case 168: 
 var $202=HEAP32[(($198)>>2)];
 var $retval_i_i1924_0=$202;label=169;break;
 case 169: 
 var $retval_i_i1924_0;
 var $vtable_i1913=HEAP32[(($1)>>2)];
 var $vfn_i1914=(($vtable_i1913+12)|0);
 var $203=HEAP32[(($vfn_i1914)>>2)];
 var $call_i1915=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$203]($__ct,2048,$retval_i_i1924_0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=170;break; } else { var $_ph_ph=$183;var $__gb_sroa_1_4_load189205_ph_ph=$__gb_sroa_1_4_load189210;label=20;break; }
 case 170: 
 if($call_i1915){label=171;break;}else{label=175;break;}
 case 171: 
 var $204=HEAP32[(($__wn)>>2)];
 var $205=HEAP32[(($__we_addr)>>2)];
 var $cmp205=($204|0)==($205|0);
 if($cmp205){label=172;break;}else{var $206=$204;label=174;break;}
 case 172: 
 (function() { try { __THREW__ = 0; return __ZNSt3__119__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__wb,$__wn,$__we_addr) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=173;break; } else { var $_ph_ph=$183;var $__gb_sroa_1_4_load189205_ph_ph=$__gb_sroa_1_4_load189210;label=20;break; }
 case 173: 
 var $_pre403=HEAP32[(($__wn)>>2)];
 var $206=$_pre403;label=174;break;
 case 174: 
 var $206;
 var $incdec_ptr=(($206+4)|0);
 HEAP32[(($__wn)>>2)]=$incdec_ptr;
 HEAP32[(($206)>>2)]=$retval_i_i1924_0;
 var $inc=((($__ng_0)+(1))|0);
 var $__ng_1=$inc;var $add_ptr195=$add_ptr194;var $__gb_sroa_0_0_load179201=$__gb_sroa_0_0_load179200;var $212=$183;var $__gb_sroa_1_4_load189208=$__gb_sroa_1_4_load189210;label=186;break;
 case 175: 
 var $207=HEAP8[($__size__i_i1837)];
 var $conv_i_i1838=($207&255);
 var $and_i_i1839=$conv_i_i1838&1;
 var $tobool_i_i1840=($and_i_i1839|0)==0;
 var $208=HEAP32[(($__size__i23_i1847)>>2)];
 var $shr_i_i1857101=$conv_i_i1838>>>1;
 var $cond_i1859=($tobool_i_i1840?$shr_i_i1857101:$208);
 var $cmp211=($cond_i1859|0)==0;
 var $cmp213=($__ng_0|0)==0;
 var $or_cond119=$cmp211|$cmp213;
 if($or_cond119){label=189;break;}else{label=176;break;}
 case 176: 
 var $209=HEAP32[(($__ts)>>2)];
 var $cmp215=($retval_i_i1924_0|0)==($209|0);
 if($cmp215){label=177;break;}else{label=189;break;}
 case 177: 
 var $cmp217=($__gb_sroa_0_0_load179200|0)==($add_ptr194|0);
 if($cmp217){label=178;break;}else{var $add_ptr196=$add_ptr194;var $__gb_sroa_0_0_load179202=$__gb_sroa_0_0_load179200;var $211=$183;var $__gb_sroa_1_4_load189209=$__gb_sroa_1_4_load189210;label=185;break;}
 case 178: 
 var $cmp_i=($__gb_sroa_1_4_load189210|0)!=((448)|0);
 var $sub_ptr_lhs_cast_i121=$__gb_sroa_0_0_load179200;
 var $sub_ptr_rhs_cast_i122=$183;
 var $sub_ptr_sub_i123=((($sub_ptr_lhs_cast_i121)-($sub_ptr_rhs_cast_i122))|0);
 var $cmp3_i=($sub_ptr_sub_i123>>>0)<2147483647;
 var $mul4_i=$sub_ptr_sub_i123<<1;
 var $cond_i124=($cmp3_i?$mul4_i:-1);
 var $sub_ptr_div10_i=$sub_ptr_sub_i123>>2;
 if($cmp_i){label=179;break;}else{var $cond15_i=0;label=180;break;}
 case 179: 
 var $phitmp_i=$183;
 var $cond15_i=$phitmp_i;label=180;break;
 case 180: 
 var $cond15_i;
 var $call16_i=_realloc($cond15_i,$cond_i124);
 var $210=$call16_i;
 var $cmp17_i=($call16_i|0)==0;
 if($cmp17_i){label=181;break;}else{label=182;break;}
 case 181: 
 (function() { try { __THREW__ = 0; return __ZSt17__throw_bad_allocv() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=182;break; } else { var $_ph_ph=$183;var $__gb_sroa_1_4_load189205_ph_ph=$__gb_sroa_1_4_load189210;label=20;break; }
 case 182: 
 var $tobool_i_i_i125=($183|0)==0;
 var $or_cond222=$cmp_i|$tobool_i_i_i125;
 if($or_cond222){label=184;break;}else{label=183;break;}
 case 183: 
 label=184;break;
 case 184: 
 var $div24_i=$cond_i124>>>2;
 var $add_ptr_i128=(($210+($sub_ptr_div10_i<<2))|0);
 var $add_ptr27_i=(($210+($div24_i<<2))|0);
 var $add_ptr196=$add_ptr27_i;var $__gb_sroa_0_0_load179202=$add_ptr_i128;var $211=$210;var $__gb_sroa_1_4_load189209=236;label=185;break;
 case 185: 
 var $__gb_sroa_1_4_load189209;
 var $211;
 var $__gb_sroa_0_0_load179202;
 var $add_ptr196;
 var $incdec_ptr221=(($__gb_sroa_0_0_load179202+4)|0);
 HEAP32[(($__gb_sroa_0_0_load179202)>>2)]=$__ng_0;
 var $__ng_1=0;var $add_ptr195=$add_ptr196;var $__gb_sroa_0_0_load179201=$incdec_ptr221;var $212=$211;var $__gb_sroa_1_4_load189208=$__gb_sroa_1_4_load189209;label=186;break;
 case 186: 
 var $__gb_sroa_1_4_load189208;
 var $212;
 var $__gb_sroa_0_0_load179201;
 var $add_ptr195;
 var $__ng_1;
 var $213=HEAP32[(($__sbuf__i_i_i608)>>2)];
 var $__ninp__i_i1756=(($213+12)|0);
 var $214=HEAP32[(($__ninp__i_i1756)>>2)];
 var $__einp__i_i1757=(($213+16)|0);
 var $215=HEAP32[(($__einp__i_i1757)>>2)];
 var $cmp_i_i1758=($214|0)==($215|0);
 if($cmp_i_i1758){label=187;break;}else{label=188;break;}
 case 187: 
 var $216=$213;
 var $vtable_i_i1759=HEAP32[(($216)>>2)];
 var $vfn_i_i1760=(($vtable_i_i1759+40)|0);
 var $217=HEAP32[(($vfn_i_i1760)>>2)];
 var $call_i_i1766=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$217]($213) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $__ng_0=$__ng_1;var $add_ptr194=$add_ptr195;var $__gb_sroa_0_0_load179200=$__gb_sroa_0_0_load179201;var $183=$212;var $__gb_sroa_1_4_load189210=$__gb_sroa_1_4_load189208;label=151;break; } else { var $_ph_ph=$212;var $__gb_sroa_1_4_load189205_ph_ph=$__gb_sroa_1_4_load189208;label=20;break; }
 case 188: 
 var $incdec_ptr_i_i1763=(($214+4)|0);
 HEAP32[(($__ninp__i_i1756)>>2)]=$incdec_ptr_i_i1763;
 var $__ng_0=$__ng_1;var $add_ptr194=$add_ptr195;var $__gb_sroa_0_0_load179200=$__gb_sroa_0_0_load179201;var $183=$212;var $__gb_sroa_1_4_load189210=$__gb_sroa_1_4_load189208;label=151;break;
 case 189: 
 var $cmp228=($183|0)==($__gb_sroa_0_0_load179200|0);
 var $cmp230=($__ng_0|0)==0;
 var $or_cond120=$cmp228|$cmp230;
 if($or_cond120){var $add_ptr193=$add_ptr194;var $__gb_sroa_0_0_load179199=$__gb_sroa_0_0_load179200;var $220=$183;var $__gb_sroa_1_4_load189207=$__gb_sroa_1_4_load189210;label=199;break;}else{label=190;break;}
 case 190: 
 var $cmp232=($__gb_sroa_0_0_load179200|0)==($add_ptr194|0);
 if($cmp232){label=191;break;}else{var $add_ptr190=$add_ptr194;var $__gb_sroa_0_0_load179203=$__gb_sroa_0_0_load179200;var $219=$183;var $__gb_sroa_1_4_load189206=$__gb_sroa_1_4_load189210;label=198;break;}
 case 191: 
 var $cmp_i130=($__gb_sroa_1_4_load189210|0)!=((448)|0);
 var $sub_ptr_lhs_cast_i132=$__gb_sroa_0_0_load179200;
 var $sub_ptr_rhs_cast_i133=$183;
 var $sub_ptr_sub_i134=((($sub_ptr_lhs_cast_i132)-($sub_ptr_rhs_cast_i133))|0);
 var $cmp3_i135=($sub_ptr_sub_i134>>>0)<2147483647;
 var $mul4_i136=$sub_ptr_sub_i134<<1;
 var $cond_i137=($cmp3_i135?$mul4_i136:-1);
 var $sub_ptr_div10_i140=$sub_ptr_sub_i134>>2;
 if($cmp_i130){label=192;break;}else{var $cond15_i143=0;label=193;break;}
 case 192: 
 var $phitmp_i141=$183;
 var $cond15_i143=$phitmp_i141;label=193;break;
 case 193: 
 var $cond15_i143;
 var $call16_i144=_realloc($cond15_i143,$cond_i137);
 var $218=$call16_i144;
 var $cmp17_i145=($call16_i144|0)==0;
 if($cmp17_i145){label=194;break;}else{label=195;break;}
 case 194: 
 (function() { try { __THREW__ = 0; return __ZSt17__throw_bad_allocv() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=195;break; } else { var $_ph_ph227_ph_ph_ph_ph_ph=$183;var $__gb_sroa_1_4_load189205_ph_ph226_ph_ph_ph_ph_ph=$__gb_sroa_1_4_load189210;label=25;break; }
 case 195: 
 var $tobool_i_i_i151=($183|0)==0;
 var $or_cond223=$cmp_i130|$tobool_i_i_i151;
 if($or_cond223){label=197;break;}else{label=196;break;}
 case 196: 
 label=197;break;
 case 197: 
 var $div24_i157=$cond_i137>>>2;
 var $add_ptr_i158=(($218+($sub_ptr_div10_i140<<2))|0);
 var $add_ptr27_i159=(($218+($div24_i157<<2))|0);
 var $add_ptr190=$add_ptr27_i159;var $__gb_sroa_0_0_load179203=$add_ptr_i158;var $219=$218;var $__gb_sroa_1_4_load189206=236;label=198;break;
 case 198: 
 var $__gb_sroa_1_4_load189206;
 var $219;
 var $__gb_sroa_0_0_load179203;
 var $add_ptr190;
 var $incdec_ptr236=(($__gb_sroa_0_0_load179203+4)|0);
 HEAP32[(($__gb_sroa_0_0_load179203)>>2)]=$__ng_0;
 var $add_ptr193=$add_ptr190;var $__gb_sroa_0_0_load179199=$incdec_ptr236;var $220=$219;var $__gb_sroa_1_4_load189207=$__gb_sroa_1_4_load189206;label=199;break;
 case 199: 
 var $__gb_sroa_1_4_load189207;
 var $220;
 var $__gb_sroa_0_0_load179199;
 var $add_ptr193;
 var $221=HEAP32[(($__fd)>>2)];
 var $cmp238=($221|0)>0;
 if($cmp238){label=200;break;}else{label=253;break;}
 case 200: 
 var $222=HEAP32[(($__sbuf__i_i_i608)>>2)];
 var $tobool_i_i_i1510=($222|0)==0;
 if($tobool_i_i_i1510){var $228=1;label=207;break;}else{label=201;break;}
 case 201: 
 var $__ninp__i_i_i_i1513=(($222+12)|0);
 var $223=HEAP32[(($__ninp__i_i_i_i1513)>>2)];
 var $__einp__i_i_i_i1514=(($222+16)|0);
 var $224=HEAP32[(($__einp__i_i_i_i1514)>>2)];
 var $cmp_i_i_i_i1515=($223|0)==($224|0);
 if($cmp_i_i_i_i1515){label=202;break;}else{label=203;break;}
 case 202: 
 var $225=$222;
 var $vtable_i_i_i_i1517=HEAP32[(($225)>>2)];
 var $vfn_i_i_i_i1518=(($vtable_i_i_i_i1517+36)|0);
 var $226=HEAP32[(($vfn_i_i_i_i1518)>>2)];
 var $call_i_i_i_i1553=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$226]($222) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i_i_i1500_0=$call_i_i_i_i1553;label=204;break; } else { var $_ph_ph227_ph_ph_ph_ph_ph=$220;var $__gb_sroa_1_4_load189205_ph_ph226_ph_ph_ph_ph_ph=$__gb_sroa_1_4_load189207;label=25;break; }
 case 203: 
 var $227=HEAP32[(($223)>>2)];
 var $retval_i_i_i_i1500_0=$227;label=204;break;
 case 204: 
 var $retval_i_i_i_i1500_0;
 var $cmp_i7_i_i_i1522=($retval_i_i_i_i1500_0|0)==-1;
 if($cmp_i7_i_i_i1522){label=206;break;}else{label=205;break;}
 case 205: 
 var $_pre404=HEAP32[(($__sbuf__i_i_i608)>>2)];
 var $phitmp409=($_pre404|0)==0;
 var $228=$phitmp409;label=207;break;
 case 206: 
 HEAP32[(($__sbuf__i_i_i608)>>2)]=0;
 var $228=1;label=207;break;
 case 207: 
 var $228;
 var $229=HEAP32[(($__sbuf__i11_i_i629)>>2)];
 var $tobool_i12_i_i1531=($229|0)==0;
 if($tobool_i12_i_i1531){label=213;break;}else{label=208;break;}
 case 208: 
 var $__ninp__i_i15_i_i1535=(($229+12)|0);
 var $230=HEAP32[(($__ninp__i_i15_i_i1535)>>2)];
 var $__einp__i_i16_i_i1536=(($229+16)|0);
 var $231=HEAP32[(($__einp__i_i16_i_i1536)>>2)];
 var $cmp_i_i17_i_i1537=($230|0)==($231|0);
 if($cmp_i_i17_i_i1537){label=209;break;}else{label=210;break;}
 case 209: 
 var $232=$229;
 var $vtable_i_i19_i_i1539=HEAP32[(($232)>>2)];
 var $vfn_i_i20_i_i1540=(($vtable_i_i19_i_i1539+36)|0);
 var $233=HEAP32[(($vfn_i_i20_i_i1540)>>2)];
 var $call_i_i21_i_i1555=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$233]($229) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i7_i_i1494_0=$call_i_i21_i_i1555;label=211;break; } else { var $_ph_ph227_ph_ph_ph_ph_ph=$220;var $__gb_sroa_1_4_load189205_ph_ph226_ph_ph_ph_ph_ph=$__gb_sroa_1_4_load189207;label=25;break; }
 case 210: 
 var $234=HEAP32[(($230)>>2)];
 var $retval_i_i7_i_i1494_0=$234;label=211;break;
 case 211: 
 var $retval_i_i7_i_i1494_0;
 var $cmp_i7_i25_i_i1544=($retval_i_i7_i_i1494_0|0)==-1;
 if($cmp_i7_i25_i_i1544){label=212;break;}else{label=214;break;}
 case 212: 
 HEAP32[(($__sbuf__i11_i_i629)>>2)]=0;
 label=213;break;
 case 213: 
 if($228){label=219;break;}else{var $235=0;label=215;break;}
 case 214: 
 var $cmp_i30_i_i1549=($229|0)==0;
 var $cmp_i_i1551tmp=$228^$cmp_i30_i_i1549;
 if($cmp_i_i1551tmp){var $235=$229;label=215;break;}else{label=219;break;}
 case 215: 
 var $235;
 var $236=HEAP32[(($__sbuf__i_i_i608)>>2)];
 var $__ninp__i_i1416=(($236+12)|0);
 var $237=HEAP32[(($__ninp__i_i1416)>>2)];
 var $__einp__i_i1417=(($236+16)|0);
 var $238=HEAP32[(($__einp__i_i1417)>>2)];
 var $cmp_i_i1418=($237|0)==($238|0);
 if($cmp_i_i1418){label=216;break;}else{label=217;break;}
 case 216: 
 var $239=$236;
 var $vtable_i_i1419=HEAP32[(($239)>>2)];
 var $vfn_i_i1420=(($vtable_i_i1419+36)|0);
 var $240=HEAP32[(($vfn_i_i1420)>>2)];
 var $call_i_i1425=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$240]($236) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i1410_0=$call_i_i1425;label=218;break; } else { var $_ph_ph227_ph_ph_ph_ph_ph=$220;var $__gb_sroa_1_4_load189205_ph_ph226_ph_ph_ph_ph_ph=$__gb_sroa_1_4_load189207;label=25;break; }
 case 217: 
 var $241=HEAP32[(($237)>>2)];
 var $retval_i_i1410_0=$241;label=218;break;
 case 218: 
 var $retval_i_i1410_0;
 var $242=HEAP32[(($__dp)>>2)];
 var $cmp245=($retval_i_i1410_0|0)==($242|0);
 if($cmp245){label=220;break;}else{label=219;break;}
 case 219: 
 var $243=HEAP32[(($__err)>>2)];
 var $or247=$243|4;
 HEAP32[(($__err)>>2)]=$or247;
 var $retval_0=0;var $322=$220;var $__gb_sroa_1_4_load189213=$__gb_sroa_1_4_load189207;label=290;break;
 case 220: 
 var $244=HEAP32[(($__sbuf__i_i_i608)>>2)];
 var $__ninp__i_i1337=(($244+12)|0);
 var $245=HEAP32[(($__ninp__i_i1337)>>2)];
 var $__einp__i_i1338=(($244+16)|0);
 var $246=HEAP32[(($__einp__i_i1338)>>2)];
 var $cmp_i_i1339=($245|0)==($246|0);
 if($cmp_i_i1339){label=221;break;}else{label=222;break;}
 case 221: 
 var $247=$244;
 var $vtable_i_i1340=HEAP32[(($247)>>2)];
 var $vfn_i_i1341=(($vtable_i_i1340+40)|0);
 var $248=HEAP32[(($vfn_i_i1341)>>2)];
 var $call_i_i1347=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$248]($244) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $250=$235;var $249=$221;label=223;break; } else { var $_ph_ph227_ph_ph_ph_ph_ph=$220;var $__gb_sroa_1_4_load189205_ph_ph226_ph_ph_ph_ph_ph=$__gb_sroa_1_4_load189207;label=25;break; }
 case 222: 
 var $incdec_ptr_i_i1344=(($245+4)|0);
 HEAP32[(($__ninp__i_i1337)>>2)]=$incdec_ptr_i_i1344;
 var $250=$235;var $249=$221;label=223;break;
 case 223: 
 var $249;
 var $250;
 var $251=HEAP32[(($__sbuf__i_i_i608)>>2)];
 var $tobool_i_i_i1159=($251|0)==0;
 if($tobool_i_i_i1159){var $257=1;label=230;break;}else{label=224;break;}
 case 224: 
 var $__ninp__i_i_i_i1162=(($251+12)|0);
 var $252=HEAP32[(($__ninp__i_i_i_i1162)>>2)];
 var $__einp__i_i_i_i1163=(($251+16)|0);
 var $253=HEAP32[(($__einp__i_i_i_i1163)>>2)];
 var $cmp_i_i_i_i1164=($252|0)==($253|0);
 if($cmp_i_i_i_i1164){label=225;break;}else{label=226;break;}
 case 225: 
 var $254=$251;
 var $vtable_i_i_i_i1166=HEAP32[(($254)>>2)];
 var $vfn_i_i_i_i1167=(($vtable_i_i_i_i1166+36)|0);
 var $255=HEAP32[(($vfn_i_i_i_i1167)>>2)];
 var $call_i_i_i_i1202=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$255]($251) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i_i_i1149_0=$call_i_i_i_i1202;label=227;break; } else { label=21;break; }
 case 226: 
 var $256=HEAP32[(($252)>>2)];
 var $retval_i_i_i_i1149_0=$256;label=227;break;
 case 227: 
 var $retval_i_i_i_i1149_0;
 var $cmp_i7_i_i_i1171=($retval_i_i_i_i1149_0|0)==-1;
 if($cmp_i7_i_i_i1171){label=229;break;}else{label=228;break;}
 case 228: 
 var $_pre405=HEAP32[(($__sbuf__i_i_i608)>>2)];
 var $phitmp410=($_pre405|0)==0;
 var $257=$phitmp410;label=230;break;
 case 229: 
 HEAP32[(($__sbuf__i_i_i608)>>2)]=0;
 var $257=1;label=230;break;
 case 230: 
 var $257;
 var $tobool_i12_i_i1180=($250|0)==0;
 if($tobool_i12_i_i1180){label=236;break;}else{label=231;break;}
 case 231: 
 var $__ninp__i_i15_i_i1184=(($250+12)|0);
 var $258=HEAP32[(($__ninp__i_i15_i_i1184)>>2)];
 var $__einp__i_i16_i_i1185=(($250+16)|0);
 var $259=HEAP32[(($__einp__i_i16_i_i1185)>>2)];
 var $cmp_i_i17_i_i1186=($258|0)==($259|0);
 if($cmp_i_i17_i_i1186){label=232;break;}else{label=233;break;}
 case 232: 
 var $260=$250;
 var $vtable_i_i19_i_i1188=HEAP32[(($260)>>2)];
 var $vfn_i_i20_i_i1189=(($vtable_i_i19_i_i1188+36)|0);
 var $261=HEAP32[(($vfn_i_i20_i_i1189)>>2)];
 var $call_i_i21_i_i1204=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$261]($250) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i7_i_i1143_0=$call_i_i21_i_i1204;label=234;break; } else { label=21;break; }
 case 233: 
 var $262=HEAP32[(($258)>>2)];
 var $retval_i_i7_i_i1143_0=$262;label=234;break;
 case 234: 
 var $retval_i_i7_i_i1143_0;
 var $cmp_i7_i25_i_i1193=($retval_i_i7_i_i1143_0|0)==-1;
 if($cmp_i7_i25_i_i1193){label=235;break;}else{label=237;break;}
 case 235: 
 HEAP32[(($__sbuf__i11_i_i629)>>2)]=0;
 label=236;break;
 case 236: 
 if($257){label=243;break;}else{var $263=0;label=238;break;}
 case 237: 
 var $cmp_i30_i_i1198=($250|0)==0;
 var $cmp_i_i1200tmp=$257^$cmp_i30_i_i1198;
 if($cmp_i_i1200tmp){var $263=$250;label=238;break;}else{label=243;break;}
 case 238: 
 var $263;
 var $264=HEAP32[(($__sbuf__i_i_i608)>>2)];
 var $__ninp__i_i1095=(($264+12)|0);
 var $265=HEAP32[(($__ninp__i_i1095)>>2)];
 var $__einp__i_i1096=(($264+16)|0);
 var $266=HEAP32[(($__einp__i_i1096)>>2)];
 var $cmp_i_i1097=($265|0)==($266|0);
 if($cmp_i_i1097){label=239;break;}else{label=240;break;}
 case 239: 
 var $267=$264;
 var $vtable_i_i1098=HEAP32[(($267)>>2)];
 var $vfn_i_i1099=(($vtable_i_i1098+36)|0);
 var $268=HEAP32[(($vfn_i_i1099)>>2)];
 var $call_i_i1104=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$268]($264) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i1089_0=$call_i_i1104;label=241;break; } else { label=21;break; }
 case 240: 
 var $269=HEAP32[(($265)>>2)];
 var $retval_i_i1089_0=$269;label=241;break;
 case 241: 
 var $retval_i_i1089_0;
 var $vtable_i1043=HEAP32[(($1)>>2)];
 var $vfn_i1044=(($vtable_i1043+12)|0);
 var $270=HEAP32[(($vfn_i1044)>>2)];
 var $call_i1045=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$270]($__ct,2048,$retval_i_i1089_0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=242;break; } else { label=21;break; }
 case 242: 
 if($call_i1045){label=244;break;}else{label=243;break;}
 case 243: 
 var $271=HEAP32[(($__err)>>2)];
 var $or262=$271|4;
 HEAP32[(($__err)>>2)]=$or262;
 var $retval_0=0;var $322=$220;var $__gb_sroa_1_4_load189213=$__gb_sroa_1_4_load189207;label=290;break;
 case 244: 
 var $272=HEAP32[(($__wn)>>2)];
 var $273=HEAP32[(($__we_addr)>>2)];
 var $cmp264=($272|0)==($273|0);
 if($cmp264){label=245;break;}else{label=246;break;}
 case 245: 
 (function() { try { __THREW__ = 0; return __ZNSt3__119__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__wb,$__wn,$__we_addr) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=246;break; } else { label=21;break; }
 case 246: 
 var $274=HEAP32[(($__sbuf__i_i_i608)>>2)];
 var $__ninp__i_i946=(($274+12)|0);
 var $275=HEAP32[(($__ninp__i_i946)>>2)];
 var $__einp__i_i947=(($274+16)|0);
 var $276=HEAP32[(($__einp__i_i947)>>2)];
 var $cmp_i_i948=($275|0)==($276|0);
 if($cmp_i_i948){label=247;break;}else{label=248;break;}
 case 247: 
 var $277=$274;
 var $vtable_i_i949=HEAP32[(($277)>>2)];
 var $vfn_i_i950=(($vtable_i_i949+36)|0);
 var $278=HEAP32[(($vfn_i_i950)>>2)];
 var $call_i_i955=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$278]($274) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i940_0=$call_i_i955;label=249;break; } else { label=21;break; }
 case 248: 
 var $279=HEAP32[(($275)>>2)];
 var $retval_i_i940_0=$279;label=249;break;
 case 249: 
 var $retval_i_i940_0;
 var $280=HEAP32[(($__wn)>>2)];
 var $incdec_ptr270=(($280+4)|0);
 HEAP32[(($__wn)>>2)]=$incdec_ptr270;
 HEAP32[(($280)>>2)]=$retval_i_i940_0;
 var $dec=((($249)-(1))|0);
 HEAP32[(($__fd)>>2)]=$dec;
 var $281=HEAP32[(($__sbuf__i_i_i608)>>2)];
 var $__ninp__i_i578=(($281+12)|0);
 var $282=HEAP32[(($__ninp__i_i578)>>2)];
 var $__einp__i_i579=(($281+16)|0);
 var $283=HEAP32[(($__einp__i_i579)>>2)];
 var $cmp_i_i580=($282|0)==($283|0);
 if($cmp_i_i580){label=250;break;}else{label=252;break;}
 case 250: 
 var $284=$281;
 var $vtable_i_i581=HEAP32[(($284)>>2)];
 var $vfn_i_i582=(($vtable_i_i581+40)|0);
 var $285=HEAP32[(($vfn_i_i582)>>2)];
 var $call_i_i588=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$285]($281) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=251;break; } else { label=21;break; }
 case 251: 
 var $cmp252=($dec|0)>0;
 if($cmp252){var $250=$263;var $249=$dec;label=223;break;}else{label=253;break;}
 case 252: 
 var $incdec_ptr_i_i585=(($282+4)|0);
 HEAP32[(($__ninp__i_i578)>>2)]=$incdec_ptr_i_i585;
 label=251;break;
 case 253: 
 var $286=HEAP32[(($__wn)>>2)];
 var $287=HEAP32[(($__first__i_i_i552)>>2)];
 var $cmp277=($286|0)==($287|0);
 if($cmp277){label=254;break;}else{var $__trailing_sign_1=$__trailing_sign_0336;var $add_ptr192=$add_ptr193;var $__gb_sroa_0_0_load179198=$__gb_sroa_0_0_load179199;var $289=$220;var $__gb_sroa_1_4_load189211=$__gb_sroa_1_4_load189207;label=255;break;}
 case 254: 
 var $288=HEAP32[(($__err)>>2)];
 var $or279=$288|4;
 HEAP32[(($__err)>>2)]=$or279;
 var $retval_0=0;var $322=$220;var $__gb_sroa_1_4_load189213=$__gb_sroa_1_4_load189207;label=290;break;
 case 255: 
 var $__gb_sroa_1_4_load189211;
 var $289;
 var $__gb_sroa_0_0_load179198;
 var $add_ptr192;
 var $__trailing_sign_1;
 var $inc282=((($__p_0338)+(1))|0);
 var $cmp=($inc282>>>0)<4;
 if($cmp){var $__gb_sroa_1_4_load189212327=$__gb_sroa_1_4_load189211;var $2=$289;var $__gb_sroa_0_0_load179197330=$__gb_sroa_0_0_load179198;var $add_ptr191333=$add_ptr192;var $__trailing_sign_0336=$__trailing_sign_1;var $__p_0338=$inc282;label=3;break;}else{var $__gb_sroa_1_4_load189212_lcssa=$__gb_sroa_1_4_load189211;var $_lcssa=$289;var $__gb_sroa_0_0_load179197_lcssa=$__gb_sroa_0_0_load179198;var $__trailing_sign_0_lcssa=$__trailing_sign_1;label=256;break;}
 case 256: 
 var $__trailing_sign_0_lcssa;
 var $__gb_sroa_0_0_load179197_lcssa;
 var $_lcssa;
 var $__gb_sroa_1_4_load189212_lcssa;
 var $tobool284=($__trailing_sign_0_lcssa|0)==0;
 if($tobool284){label=287;break;}else{label=257;break;}
 case 257: 
 var $__size__i_i=$__trailing_sign_0_lcssa;
 var $__data__i_i_i_i=(($__trailing_sign_0_lcssa+4)|0);
 var $__data__i21_i_i_i=(($__trailing_sign_0_lcssa+8)|0);
 var $__i_0=1;label=258;break;
 case 258: 
 var $__i_0;
 var $290=HEAP8[($__size__i_i)];
 var $conv_i_i562=($290&255);
 var $and_i_i=$conv_i_i562&1;
 var $tobool_i_i=($and_i_i|0)==0;
 if($tobool_i_i){label=260;break;}else{label=259;break;}
 case 259: 
 var $291=HEAP32[(($__data__i_i_i_i)>>2)];
 var $cond_i=$291;label=261;break;
 case 260: 
 var $shr_i_i100=$conv_i_i562>>>1;
 var $cond_i=$shr_i_i100;label=261;break;
 case 261: 
 var $cond_i;
 var $cmp289=($__i_0>>>0)<($cond_i>>>0);
 if($cmp289){label=262;break;}else{label=287;break;}
 case 262: 
 var $292=HEAP32[(($__sbuf__i_i_i608)>>2)];
 var $tobool_i_i_i506=($292|0)==0;
 if($tobool_i_i_i506){var $298=1;label=269;break;}else{label=263;break;}
 case 263: 
 var $__ninp__i_i_i_i=(($292+12)|0);
 var $293=HEAP32[(($__ninp__i_i_i_i)>>2)];
 var $__einp__i_i_i_i=(($292+16)|0);
 var $294=HEAP32[(($__einp__i_i_i_i)>>2)];
 var $cmp_i_i_i_i=($293|0)==($294|0);
 if($cmp_i_i_i_i){label=264;break;}else{label=265;break;}
 case 264: 
 var $295=$292;
 var $vtable_i_i_i_i=HEAP32[(($295)>>2)];
 var $vfn_i_i_i_i=(($vtable_i_i_i_i+36)|0);
 var $296=HEAP32[(($vfn_i_i_i_i)>>2)];
 var $call_i_i_i_i511=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$296]($292) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i_i_i_0=$call_i_i_i_i511;label=266;break; } else { label=19;break; }
 case 265: 
 var $297=HEAP32[(($293)>>2)];
 var $retval_i_i_i_i_0=$297;label=266;break;
 case 266: 
 var $retval_i_i_i_i_0;
 var $cmp_i7_i_i_i=($retval_i_i_i_i_0|0)==-1;
 if($cmp_i7_i_i_i){label=268;break;}else{label=267;break;}
 case 267: 
 var $_pre406=HEAP32[(($__sbuf__i_i_i608)>>2)];
 var $phitmp407=($_pre406|0)==0;
 var $298=$phitmp407;label=269;break;
 case 268: 
 HEAP32[(($__sbuf__i_i_i608)>>2)]=0;
 var $298=1;label=269;break;
 case 269: 
 var $298;
 var $299=HEAP32[(($__sbuf__i11_i_i629)>>2)];
 var $tobool_i12_i_i=($299|0)==0;
 if($tobool_i12_i_i){label=275;break;}else{label=270;break;}
 case 270: 
 var $__ninp__i_i15_i_i=(($299+12)|0);
 var $300=HEAP32[(($__ninp__i_i15_i_i)>>2)];
 var $__einp__i_i16_i_i=(($299+16)|0);
 var $301=HEAP32[(($__einp__i_i16_i_i)>>2)];
 var $cmp_i_i17_i_i=($300|0)==($301|0);
 if($cmp_i_i17_i_i){label=271;break;}else{label=272;break;}
 case 271: 
 var $302=$299;
 var $vtable_i_i19_i_i=HEAP32[(($302)>>2)];
 var $vfn_i_i20_i_i=(($vtable_i_i19_i_i+36)|0);
 var $303=HEAP32[(($vfn_i_i20_i_i)>>2)];
 var $call_i_i21_i_i512=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$303]($299) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i7_i_i_0=$call_i_i21_i_i512;label=273;break; } else { label=19;break; }
 case 272: 
 var $304=HEAP32[(($300)>>2)];
 var $retval_i_i7_i_i_0=$304;label=273;break;
 case 273: 
 var $retval_i_i7_i_i_0;
 var $cmp_i7_i25_i_i=($retval_i_i7_i_i_0|0)==-1;
 if($cmp_i7_i25_i_i){label=274;break;}else{label=276;break;}
 case 274: 
 HEAP32[(($__sbuf__i11_i_i629)>>2)]=0;
 label=275;break;
 case 275: 
 if($298){label=283;break;}else{label=277;break;}
 case 276: 
 var $cmp_i30_i_i=($299|0)==0;
 var $cmp_i_i510tmp=$298^$cmp_i30_i_i;
 if($cmp_i_i510tmp){label=277;break;}else{label=283;break;}
 case 277: 
 var $305=HEAP32[(($__sbuf__i_i_i608)>>2)];
 var $__ninp__i_i459=(($305+12)|0);
 var $306=HEAP32[(($__ninp__i_i459)>>2)];
 var $__einp__i_i460=(($305+16)|0);
 var $307=HEAP32[(($__einp__i_i460)>>2)];
 var $cmp_i_i461=($306|0)==($307|0);
 if($cmp_i_i461){label=278;break;}else{label=279;break;}
 case 278: 
 var $308=$305;
 var $vtable_i_i462=HEAP32[(($308)>>2)];
 var $vfn_i_i463=(($vtable_i_i462+36)|0);
 var $309=HEAP32[(($vfn_i_i463)>>2)];
 var $call_i_i468=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$309]($305) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i453_0=$call_i_i468;label=280;break; } else { label=19;break; }
 case 279: 
 var $310=HEAP32[(($306)>>2)];
 var $retval_i_i453_0=$310;label=280;break;
 case 280: 
 var $retval_i_i453_0;
 var $311=HEAP8[($__size__i_i)];
 var $and_i_i_i_i=$311&1;
 var $tobool_i_i_i_i=(($and_i_i_i_i<<24)>>24)==0;
 if($tobool_i_i_i_i){var $cond_i_i_i=$__data__i_i_i_i;label=282;break;}else{label=281;break;}
 case 281: 
 var $312=HEAP32[(($__data__i21_i_i_i)>>2)];
 var $cond_i_i_i=$312;label=282;break;
 case 282: 
 var $cond_i_i_i;
 var $add_ptr_i=(($cond_i_i_i+($__i_0<<2))|0);
 var $313=HEAP32[(($add_ptr_i)>>2)];
 var $cmp298=($retval_i_i453_0|0)==($313|0);
 if($cmp298){label=284;break;}else{label=283;break;}
 case 283: 
 var $314=HEAP32[(($__err)>>2)];
 var $or300=$314|4;
 HEAP32[(($__err)>>2)]=$or300;
 var $retval_0=0;var $322=$_lcssa;var $__gb_sroa_1_4_load189213=$__gb_sroa_1_4_load189212_lcssa;label=290;break;
 case 284: 
 var $inc303=((($__i_0)+(1))|0);
 var $315=HEAP32[(($__sbuf__i_i_i608)>>2)];
 var $__ninp__i_i=(($315+12)|0);
 var $316=HEAP32[(($__ninp__i_i)>>2)];
 var $__einp__i_i=(($315+16)|0);
 var $317=HEAP32[(($__einp__i_i)>>2)];
 var $cmp_i_i=($316|0)==($317|0);
 if($cmp_i_i){label=285;break;}else{label=286;break;}
 case 285: 
 var $318=$315;
 var $vtable_i_i=HEAP32[(($318)>>2)];
 var $vfn_i_i=(($vtable_i_i+40)|0);
 var $319=HEAP32[(($vfn_i_i)>>2)];
 var $call_i_i405=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$319]($315) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $__i_0=$inc303;label=258;break; } else { label=19;break; }
 case 286: 
 var $incdec_ptr_i_i=(($316+4)|0);
 HEAP32[(($__ninp__i_i)>>2)]=$incdec_ptr_i_i;
 var $__i_0=$inc303;label=258;break;
 case 287: 
 var $cmp309=($_lcssa|0)==($__gb_sroa_0_0_load179197_lcssa|0);
 if($cmp309){var $retval_0=1;var $322=$__gb_sroa_0_0_load179197_lcssa;var $__gb_sroa_1_4_load189213=$__gb_sroa_1_4_load189212_lcssa;label=290;break;}else{label=288;break;}
 case 288: 
 HEAP32[(($__et)>>2)]=0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grp,$_lcssa,$__gb_sroa_0_0_load179197_lcssa,$__et);
 var $320=HEAP32[(($__et)>>2)];
 var $tobool314=($320|0)==0;
 if($tobool314){var $retval_0=1;var $322=$_lcssa;var $__gb_sroa_1_4_load189213=$__gb_sroa_1_4_load189212_lcssa;label=290;break;}else{label=289;break;}
 case 289: 
 var $321=HEAP32[(($__err)>>2)];
 var $or316=$321|4;
 HEAP32[(($__err)>>2)]=$or316;
 var $retval_0=0;var $322=$_lcssa;var $__gb_sroa_1_4_load189213=$__gb_sroa_1_4_load189212_lcssa;label=290;break;
 case 290: 
 var $__gb_sroa_1_4_load189213;
 var $322;
 var $retval_0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($__spaces);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($__nsn);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($__psn);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grp);
 var $tobool_i_i_i=($322|0)==0;
 if($tobool_i_i_i){label=293;break;}else{label=291;break;}
 case 291: 
 var $323=$322;
 (function() { try { __THREW__ = 0; return FUNCTION_TABLE[$__gb_sroa_1_4_load189213]($323) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=293;break; } else { label=292;break; }
 case 292: 
 var $324$0 = ___cxa_find_matching_catch(-1, -1,0); var $324$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 293: 
 STACKTOP=sp;return $retval_0;
 case 294: 
 ___resumeException($lpad_phi$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE($agg_result,$this,$__b,$__e,$__intl,$__iob,$__err,$__v){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+456)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__b; $__b=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__b)>>2)]=HEAP32[((tempParam)>>2)];
 var tempParam = $__e; $__e=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__e)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__p_i_i_i=sp;
 var $__wbuf=(sp)+(16);
 var $__wb=(sp)+(416);
 var $__wn=(sp)+(424);
 var $__loc=(sp)+(432);
 var $__neg=(sp)+(440);
 var $agg_tmp=(sp)+(448);
 var $arraydecay=(($__wbuf)|0);
 var $__first__i_i_i_i_i=(($__wb)|0);
 HEAP32[(($__first__i_i_i_i_i)>>2)]=$arraydecay;
 var $__second__i_i_i_i_i=(($__wb+4)|0);
 HEAP32[(($__second__i_i_i_i_i)>>2)]=448;
 var $add_ptr=(($__wbuf+400)|0);
 (function() { try { __THREW__ = 0; return __ZNKSt3__18ios_base6getlocEv($__loc,$__iob) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=16;break; }
 case 2: 
 var $__locale__i=(($__loc)|0);
 var $0=HEAP32[(($__locale__i)>>2)];
 var $1=$__p_i_i_i;
 var $2=HEAP32[((15376)>>2)];
 var $cmp_i_i_i12=($2|0)==-1;
 if($cmp_i_i_i12){label=4;break;}else{label=3;break;}
 case 3: 
 var $ref_tmp_i_sroa_0_0__idx_i_i=(($__p_i_i_i)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i)>>2)]=15376;
 var $ref_tmp_i_sroa_1_4__idx6_i_i=(($__p_i_i_i+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i=(($__p_i_i_i+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(15376,$1,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=4;break; } else { label=41;break; }
 case 4: 
 var $3=HEAP32[((15380)>>2)];
 var $sub_i_i=((($3)-(1))|0);
 var $__end__i_i_i_i=(($0+12)|0);
 var $4=HEAP32[(($__end__i_i_i_i)>>2)];
 var $__begin__i_i_i_i=(($0+8)|0);
 var $5=HEAP32[(($__begin__i_i_i_i)>>2)];
 var $sub_ptr_lhs_cast_i_i_i_i=$4;
 var $sub_ptr_rhs_cast_i_i_i_i=$5;
 var $sub_ptr_sub_i_i_i_i=((($sub_ptr_lhs_cast_i_i_i_i)-($sub_ptr_rhs_cast_i_i_i_i))|0);
 var $sub_ptr_div_i_i_i_i=$sub_ptr_sub_i_i_i_i>>2;
 var $cmp_i_i1_i=($sub_ptr_div_i_i_i_i>>>0)>($sub_i_i>>>0);
 if($cmp_i_i1_i){label=5;break;}else{label=6;break;}
 case 5: 
 var $arrayidx_i_i_i_i=(($5+($sub_i_i<<2))|0);
 var $6=HEAP32[(($arrayidx_i_i_i_i)>>2)];
 var $tobool_i_i_i14=($6|0)==0;
 if($tobool_i_i_i14){label=6;break;}else{label=8;break;}
 case 6: 
 var $exception_i_i=___cxa_allocate_exception(4);
 var $7=$exception_i_i;
 __ZNSt8bad_castC2Ev($7);
 (function() { try { __THREW__ = 0; return ___cxa_throw($exception_i_i,10264,(376)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=7;break; } else { label=41;break; }
 case 7: 
 throw "Reached an unreachable!";
 case 8: 
 var $8=$6;
 HEAP8[($__neg)]=0;
 var $9=(($__e)|0);
 var $10=HEAP32[(($9)>>2)];
 var $11=(($agg_tmp)|0);
 HEAP32[(($11)>>2)]=$10;
 var $__fmtflags__i=(($__iob+4)|0);
 var $12=HEAP32[(($__fmtflags__i)>>2)];
 var $call8=(function() { try { __THREW__ = 0; return __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_($__b,$agg_tmp,$__intl,$__loc,$12,$__err,$__neg,$8,$__wb,$__wn,$add_ptr) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=9;break; } else { label=41;break; }
 case 9: 
 if($call8){label=10;break;}else{label=22;break;}
 case 10: 
 var $__size__i46_i=$__v;
 var $13=HEAP8[($__size__i46_i)];
 var $and_i_i=$13&1;
 var $tobool_i_i=(($and_i_i<<24)>>24)==0;
 if($tobool_i_i){label=12;break;}else{label=11;break;}
 case 11: 
 var $__data__i36_i=(($__v+8)|0);
 var $14=HEAP32[(($__data__i36_i)>>2)];
 HEAP32[(($14)>>2)]=0;
 var $__size__i24_i=(($__v+4)|0);
 HEAP32[(($__size__i24_i)>>2)]=0;
 label=13;break;
 case 12: 
 var $__data__i_i=(($__v+4)|0);
 HEAP32[(($__data__i_i)>>2)]=0;
 HEAP8[($__size__i46_i)]=0;
 label=13;break;
 case 13: 
 var $15=HEAP8[($__neg)];
 var $16=$15&1;
 var $tobool9=(($16<<24)>>24)==0;
 var $_pre19=$6;
 if($tobool9){label=17;break;}else{label=14;break;}
 case 14: 
 var $vtable_i=HEAP32[(($_pre19)>>2)];
 var $vfn_i=(($vtable_i+44)|0);
 var $17=HEAP32[(($vfn_i)>>2)];
 var $call_i85=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$17]($8,45) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=15;break; } else { label=41;break; }
 case 15: 
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($__v,$call_i85) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=17;break; } else { label=41;break; }
 case 16: 
 var $18$0 = ___cxa_find_matching_catch(-1, -1); var $18$1 = tempRet0;
 var $19=$18$0;
 var $20=$18$1;
 HEAP32[(($__first__i_i_i_i_i)>>2)]=0;
 var $50=$arraydecay;var $ehselector_slot_022=$20;var $exn_slot_024=$19;label=42;break;
 case 17: 
 var $vtable_i89=HEAP32[(($_pre19)>>2)];
 var $vfn_i90=(($vtable_i89+44)|0);
 var $21=HEAP32[(($vfn_i90)>>2)];
 var $call_i91=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$21]($8,48) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=18;break; } else { label=41;break; }
 case 18: 
 var $22=HEAP32[(($__first__i_i_i_i_i)>>2)];
 var $23=HEAP32[(($__wn)>>2)];
 var $add_ptr17=((($23)-(4))|0);
 var $__w_0=$22;label=19;break;
 case 19: 
 var $__w_0;
 var $cmp=($__w_0>>>0)<($add_ptr17>>>0);
 if($cmp){label=20;break;}else{label=21;break;}
 case 20: 
 var $24=HEAP32[(($__w_0)>>2)];
 var $cmp18=($24|0)==($call_i91|0);
 var $incdec_ptr=(($__w_0+4)|0);
 if($cmp18){var $__w_0=$incdec_ptr;label=19;break;}else{label=21;break;}
 case 21: 
 var $call22=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendIPwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_($__v,$__w_0,$23) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=22;break; } else { label=41;break; }
 case 22: 
 var $__sbuf__i_i_i=(($__b)|0);
 var $25=HEAP32[(($__sbuf__i_i_i)>>2)];
 var $tobool_i_i_i104=($25|0)==0;
 if($tobool_i_i_i104){var $31=0;label=28;break;}else{label=23;break;}
 case 23: 
 var $__ninp__i_i_i_i=(($25+12)|0);
 var $26=HEAP32[(($__ninp__i_i_i_i)>>2)];
 var $__einp__i_i_i_i=(($25+16)|0);
 var $27=HEAP32[(($__einp__i_i_i_i)>>2)];
 var $cmp_i_i_i_i=($26|0)==($27|0);
 if($cmp_i_i_i_i){label=24;break;}else{label=25;break;}
 case 24: 
 var $28=$25;
 var $vtable_i_i_i_i=HEAP32[(($28)>>2)];
 var $vfn_i_i_i_i=(($vtable_i_i_i_i+36)|0);
 var $29=HEAP32[(($vfn_i_i_i_i)>>2)];
 var $call_i_i_i_i108=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$29]($25) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i_i_i_0=$call_i_i_i_i108;label=26;break; } else { label=41;break; }
 case 25: 
 var $30=HEAP32[(($26)>>2)];
 var $retval_i_i_i_i_0=$30;label=26;break;
 case 26: 
 var $retval_i_i_i_i_0;
 var $cmp_i7_i_i_i=($retval_i_i_i_i_0|0)==-1;
 if($cmp_i7_i_i_i){label=27;break;}else{var $31=$25;label=28;break;}
 case 27: 
 HEAP32[(($__sbuf__i_i_i)>>2)]=0;
 var $31=0;label=28;break;
 case 28: 
 var $31;
 var $cmp_i_i_i=($31|0)==0;
 var $tobool_i12_i_i=($10|0)==0;
 if($tobool_i12_i_i){label=34;break;}else{label=29;break;}
 case 29: 
 var $__ninp__i_i15_i_i=(($10+12)|0);
 var $32=HEAP32[(($__ninp__i_i15_i_i)>>2)];
 var $__einp__i_i16_i_i=(($10+16)|0);
 var $33=HEAP32[(($__einp__i_i16_i_i)>>2)];
 var $cmp_i_i17_i_i=($32|0)==($33|0);
 if($cmp_i_i17_i_i){label=30;break;}else{label=31;break;}
 case 30: 
 var $34=$10;
 var $vtable_i_i19_i_i=HEAP32[(($34)>>2)];
 var $vfn_i_i20_i_i=(($vtable_i_i19_i_i+36)|0);
 var $35=HEAP32[(($vfn_i_i20_i_i)>>2)];
 var $call_i_i21_i_i109=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$35]($10) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_i_i7_i_i_0=$call_i_i21_i_i109;label=32;break; } else { label=41;break; }
 case 31: 
 var $36=HEAP32[(($32)>>2)];
 var $retval_i_i7_i_i_0=$36;label=32;break;
 case 32: 
 var $retval_i_i7_i_i_0;
 var $cmp_i7_i25_i_i=($retval_i_i7_i_i_0|0)==-1;
 if($cmp_i7_i25_i_i){label=33;break;}else{label=35;break;}
 case 33: 
 HEAP32[(($9)>>2)]=0;
 label=34;break;
 case 34: 
 if($cmp_i_i_i){label=36;break;}else{label=37;break;}
 case 35: 
 var $cmp_i30_i_i=($10|0)==0;
 var $cmp_i_itmp=$cmp_i_i_i^$cmp_i30_i_i;
 if($cmp_i_itmp){label=37;break;}else{label=36;break;}
 case 36: 
 var $37=HEAP32[(($__err)>>2)];
 var $or=$37|2;
 HEAP32[(($__err)>>2)]=$or;
 label=37;break;
 case 37: 
 var $38=(($agg_result)|0);
 HEAP32[(($38)>>2)]=$31;
 var $39=HEAP32[(($__locale__i)>>2)];
 var $40=(($39)|0);
 var $call_i18=__ZNSt3__114__shared_count16__release_sharedEv($40);
 var $41=HEAP32[(($__first__i_i_i_i_i)>>2)];
 HEAP32[(($__first__i_i_i_i_i)>>2)]=0;
 var $tobool_i_i_i74=($41|0)==0;
 if($tobool_i_i_i74){label=40;break;}else{label=38;break;}
 case 38: 
 var $42=HEAP32[(($__second__i_i_i_i_i)>>2)];
 var $43=$41;
 (function() { try { __THREW__ = 0; return FUNCTION_TABLE[$42]($43) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=40;break; } else { label=39;break; }
 case 39: 
 var $44$0 = ___cxa_find_matching_catch(-1, -1,0); var $44$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 40: 
 STACKTOP=sp;return;
 case 41: 
 var $45$0 = ___cxa_find_matching_catch(-1, -1); var $45$1 = tempRet0;
 var $46=$45$0;
 var $47=$45$1;
 var $48=HEAP32[(($__locale__i)>>2)];
 var $49=(($48)|0);
 var $call_i=__ZNSt3__114__shared_count16__release_sharedEv($49);
 var $_pre=HEAP32[(($__first__i_i_i_i_i)>>2)];
 HEAP32[(($__first__i_i_i_i_i)>>2)]=0;
 var $tobool_i_i_i=($_pre|0)==0;
 if($tobool_i_i_i){var $ehselector_slot_023=$47;var $exn_slot_025=$46;label=44;break;}else{var $50=$_pre;var $ehselector_slot_022=$47;var $exn_slot_024=$46;label=42;break;}
 case 42: 
 var $exn_slot_024;
 var $ehselector_slot_022;
 var $50;
 var $51=HEAP32[(($__second__i_i_i_i_i)>>2)];
 var $52=$50;
 (function() { try { __THREW__ = 0; return FUNCTION_TABLE[$51]($52) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $ehselector_slot_023=$ehselector_slot_022;var $exn_slot_025=$exn_slot_024;label=44;break; } else { label=43;break; }
 case 43: 
 var $53$0 = ___cxa_find_matching_catch(-1, -1,0); var $53$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 44: 
 var $exn_slot_025;
 var $ehselector_slot_023;
 var $lpad_val$0=$exn_slot_025;
 var $lpad_val$1=0;
 var $lpad_val28$0=$lpad_val$0;
 var $lpad_val28$1=$ehselector_slot_023;
 ___resumeException($lpad_val28$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendIPwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_($this,$__first,$__last){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__size__i_i=$this;
 var $sub_ptr_rhs_cast_i_i=$__first;
 var $0=HEAP8[($__size__i_i)];
 var $conv_i_i=($0&255);
 var $and_i_i=$conv_i_i&1;
 var $tobool_i_i=($and_i_i|0)==0;
 if($tobool_i_i){label=3;break;}else{label=2;break;}
 case 2: 
 var $__size__i23_i=(($this+4)|0);
 var $1=HEAP32[(($__size__i23_i)>>2)];
 var $cond_i=$1;label=4;break;
 case 3: 
 var $shr_i_i16=$conv_i_i>>>1;
 var $cond_i=$shr_i_i16;label=4;break;
 case 4: 
 var $cond_i;
 var $and_i_i75=$0&1;
 var $tobool_i_i76=(($and_i_i75<<24)>>24)==0;
 if($tobool_i_i76){var $cond_i84=1;var $4=$0;label=6;break;}else{label=5;break;}
 case 5: 
 var $__cap__i_i=(($this)|0);
 var $2=HEAP32[(($__cap__i_i)>>2)];
 var $and_i11_i=$2&-2;
 var $phitmp=((($and_i11_i)-(1))|0);
 var $3=(($2)&255);
 var $cond_i84=$phitmp;var $4=$3;label=6;break;
 case 6: 
 var $4;
 var $cond_i84;
 var $sub_ptr_lhs_cast_i_i=$__last;
 var $sub_ptr_sub_i_i=((($sub_ptr_lhs_cast_i_i)-($sub_ptr_rhs_cast_i_i))|0);
 var $sub_ptr_div_i_i=$sub_ptr_sub_i_i>>2;
 var $tobool=($sub_ptr_div_i_i|0)==0;
 if($tobool){label=19;break;}else{label=7;break;}
 case 7: 
 var $sub=((($cond_i84)-($cond_i))|0);
 var $cmp=($sub>>>0)<($sub_ptr_div_i_i>>>0);
 if($cmp){label=8;break;}else{var $5=$4;label=9;break;}
 case 8: 
 var $add=((($cond_i)+($sub_ptr_div_i_i))|0);
 var $sub5=((($add)-($cond_i84))|0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($this,$cond_i84,$sub5,$cond_i,$cond_i,0,0);
 var $_pre=HEAP8[($__size__i_i)];
 var $5=$_pre;label=9;break;
 case 9: 
 var $5;
 var $and_i_i45=$5&1;
 var $tobool_i_i46=(($and_i_i45<<24)>>24)==0;
 if($tobool_i_i46){label=11;break;}else{label=10;break;}
 case 10: 
 var $__data__i21_i=(($this+8)|0);
 var $6=HEAP32[(($__data__i21_i)>>2)];
 var $cond_i61=$6;label=12;break;
 case 11: 
 var $__data__i_i=(($this+4)|0);
 var $cond_i61=$__data__i_i;label=12;break;
 case 12: 
 var $cond_i61;
 var $add_ptr=(($cond_i61+($cond_i<<2))|0);
 var $cmp717=($__first|0)==($__last|0);
 if($cmp717){var $__p_0_lcssa=$add_ptr;label=16;break;}else{label=13;break;}
 case 13: 
 var $scevgep=((($__last)-(4))|0);
 var $scevgep20=$scevgep;
 var $7=(((-$sub_ptr_rhs_cast_i_i))|0);
 var $uglygep=(($scevgep20+$7)|0);
 var $uglygep21=$uglygep;
 var $8=$uglygep21>>>2;
 var $9=((($cond_i)+($8))|0);
 var $10=((($9)+(1))|0);
 var $__first_addr_018=$__first;var $__p_019=$add_ptr;label=14;break;
 case 14: 
 var $__p_019;
 var $__first_addr_018;
 var $11=HEAP32[(($__first_addr_018)>>2)];
 HEAP32[(($__p_019)>>2)]=$11;
 var $incdec_ptr=(($__p_019+4)|0);
 var $incdec_ptr8=(($__first_addr_018+4)|0);
 var $cmp7=($incdec_ptr8|0)==($__last|0);
 if($cmp7){label=15;break;}else{var $__first_addr_018=$incdec_ptr8;var $__p_019=$incdec_ptr;label=14;break;}
 case 15: 
 var $scevgep22=(($cond_i61+($10<<2))|0);
 var $__p_0_lcssa=$scevgep22;label=16;break;
 case 16: 
 var $__p_0_lcssa;
 HEAP32[(($__p_0_lcssa)>>2)]=0;
 var $add9=((($cond_i)+($sub_ptr_div_i_i))|0);
 var $12=HEAP8[($__size__i_i)];
 var $and_i_i24=$12&1;
 var $tobool_i_i25=(($and_i_i24<<24)>>24)==0;
 if($tobool_i_i25){label=18;break;}else{label=17;break;}
 case 17: 
 var $__size__i21_i=(($this+4)|0);
 HEAP32[(($__size__i21_i)>>2)]=$add9;
 label=19;break;
 case 18: 
 var $shl_i_i=$add9<<1;
 var $conv_i6_i=(($shl_i_i)&255);
 HEAP8[($__size__i_i)]=$conv_i6_i;
 label=19;break;
 case 19: 
 return $this;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__111__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri($__intl,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__psn,$__nsn,$__fd){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+56)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__p_i_i_i58=sp;
 var $__p_i_i_i=(sp)+(16);
 var $ref_tmp=(sp)+(32);
 var $ref_tmp1=(sp)+(40);
 var $0=$ref_tmp1;
 var $ref_tmp3=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $1=$ref_tmp3;
 var $ref_tmp7=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $2=$ref_tmp7;
 var $ref_tmp9=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $3=$ref_tmp9;
 var $ref_tmp14=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $ref_tmp15=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $4=$ref_tmp15;
 var $ref_tmp17=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $5=$ref_tmp17;
 var $ref_tmp21=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $6=$ref_tmp21;
 var $ref_tmp23=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $7=$ref_tmp23;
 if($__intl){label=2;break;}else{label=28;break;}
 case 2: 
 var $tmpcast55=$ref_tmp;
 var $__locale__i=(($__loc)|0);
 var $8=HEAP32[(($__locale__i)>>2)];
 var $9=$__p_i_i_i;
 var $10=HEAP32[((15840)>>2)];
 var $cmp_i_i_i56=($10|0)==-1;
 if($cmp_i_i_i56){label=4;break;}else{label=3;break;}
 case 3: 
 var $ref_tmp_i_sroa_0_0__idx_i_i=(($__p_i_i_i)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i)>>2)]=15840;
 var $ref_tmp_i_sroa_1_4__idx6_i_i=(($__p_i_i_i+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i=(($__p_i_i_i+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i)>>2)]=0;
 __ZNSt3__111__call_onceERVmPvPFvS2_E(15840,$9,276);
 label=4;break;
 case 4: 
 var $11=HEAP32[((15844)>>2)];
 var $sub_i_i=((($11)-(1))|0);
 var $__end__i_i_i_i=(($8+12)|0);
 var $12=HEAP32[(($__end__i_i_i_i)>>2)];
 var $__begin__i_i_i_i=(($8+8)|0);
 var $13=HEAP32[(($__begin__i_i_i_i)>>2)];
 var $sub_ptr_lhs_cast_i_i_i_i=$12;
 var $sub_ptr_rhs_cast_i_i_i_i=$13;
 var $sub_ptr_sub_i_i_i_i=((($sub_ptr_lhs_cast_i_i_i_i)-($sub_ptr_rhs_cast_i_i_i_i))|0);
 var $sub_ptr_div_i_i_i_i=$sub_ptr_sub_i_i_i_i>>2;
 var $cmp_i_i1_i=($sub_ptr_div_i_i_i_i>>>0)>($sub_i_i>>>0);
 if($cmp_i_i1_i){label=5;break;}else{label=6;break;}
 case 5: 
 var $arrayidx_i_i_i_i=(($13+($sub_i_i<<2))|0);
 var $14=HEAP32[(($arrayidx_i_i_i_i)>>2)];
 var $tobool_i_i_i=($14|0)==0;
 if($tobool_i_i_i){label=6;break;}else{label=7;break;}
 case 6: 
 var $exception_i_i=___cxa_allocate_exception(4);
 var $15=$exception_i_i;
 __ZNSt8bad_castC2Ev($15);
 ___cxa_throw($exception_i_i,10264,(376));
 throw "Reached an unreachable!";
 case 7: 
 var $16=$14;
 var $17=$14;
 var $vtable_i=HEAP32[(($17)>>2)];
 var $vfn_i=(($vtable_i+44)|0);
 var $18=HEAP32[(($vfn_i)>>2)];
 FUNCTION_TABLE[$18]($tmpcast55,$16);
 var $19=$__pat;
 var $20=HEAP32[(($ref_tmp)>>2)];
 tempBigInt=$20;HEAP8[($19)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($19)+(1))|0)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($19)+(2))|0)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($19)+(3))|0)]=tempBigInt&0xff;
 var $21=$14;
 var $vtable_i28=HEAP32[(($21)>>2)];
 var $vfn_i29=(($vtable_i28+32)|0);
 var $22=HEAP32[(($vfn_i29)>>2)];
 FUNCTION_TABLE[$22]($ref_tmp1,$16);
 var $__size__i46_i_i_i=$__nsn;
 var $23=HEAP8[($__size__i46_i_i_i)];
 var $and_i_i_i_i=$23&1;
 var $tobool_i_i_i_i=(($and_i_i_i_i<<24)>>24)==0;
 if($tobool_i_i_i_i){label=9;break;}else{label=8;break;}
 case 8: 
 var $__data__i36_i_i_i=(($__nsn+8)|0);
 var $24=HEAP32[(($__data__i36_i_i_i)>>2)];
 HEAP32[(($24)>>2)]=0;
 var $__size__i24_i_i_i=(($__nsn+4)|0);
 HEAP32[(($__size__i24_i_i_i)>>2)]=0;
 label=10;break;
 case 9: 
 var $__data__i_i_i_i=(($__nsn+4)|0);
 HEAP32[(($__data__i_i_i_i)>>2)]=0;
 HEAP8[($__size__i46_i_i_i)]=0;
 label=10;break;
 case 10: 
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__nsn,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=12;break; } else { label=11;break; }
 case 11: 
 var $25$0 = ___cxa_find_matching_catch(-1, -1,0); var $25$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 12: 
 assert(12 % 1 === 0);HEAP32[(($__size__i46_i_i_i)>>2)]=HEAP32[(($0)>>2)];HEAP32[((($__size__i46_i_i_i)+(4))>>2)]=HEAP32[((($0)+(4))>>2)];HEAP32[((($__size__i46_i_i_i)+(8))>>2)]=HEAP32[((($0)+(8))>>2)];
 HEAP32[(($0)>>2)]=0; HEAP32[((($0)+(4))>>2)]=0; HEAP32[((($0)+(8))>>2)]=0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($ref_tmp1);
 var $vtable_i34=HEAP32[(($21)>>2)];
 var $vfn_i35=(($vtable_i34+28)|0);
 var $26=HEAP32[(($vfn_i35)>>2)];
 FUNCTION_TABLE[$26]($ref_tmp3,$16);
 var $__size__i46_i_i_i104=$__psn;
 var $27=HEAP8[($__size__i46_i_i_i104)];
 var $and_i_i_i_i106=$27&1;
 var $tobool_i_i_i_i107=(($and_i_i_i_i106<<24)>>24)==0;
 if($tobool_i_i_i_i107){label=14;break;}else{label=13;break;}
 case 13: 
 var $__data__i36_i_i_i114=(($__psn+8)|0);
 var $28=HEAP32[(($__data__i36_i_i_i114)>>2)];
 HEAP32[(($28)>>2)]=0;
 var $__size__i24_i_i_i121=(($__psn+4)|0);
 HEAP32[(($__size__i24_i_i_i121)>>2)]=0;
 label=15;break;
 case 14: 
 var $__data__i_i_i_i129=(($__psn+4)|0);
 HEAP32[(($__data__i_i_i_i129)>>2)]=0;
 HEAP8[($__size__i46_i_i_i104)]=0;
 label=15;break;
 case 15: 
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__psn,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=17;break; } else { label=16;break; }
 case 16: 
 var $29$0 = ___cxa_find_matching_catch(-1, -1,0); var $29$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 17: 
 assert(12 % 1 === 0);HEAP32[(($__size__i46_i_i_i104)>>2)]=HEAP32[(($1)>>2)];HEAP32[((($__size__i46_i_i_i104)+(4))>>2)]=HEAP32[((($1)+(4))>>2)];HEAP32[((($__size__i46_i_i_i104)+(8))>>2)]=HEAP32[((($1)+(8))>>2)];
 HEAP32[(($1)>>2)]=0; HEAP32[((($1)+(4))>>2)]=0; HEAP32[((($1)+(8))>>2)]=0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($ref_tmp3);
 var $30=$14;
 var $vtable_i180=HEAP32[(($30)>>2)];
 var $vfn_i181=(($vtable_i180+12)|0);
 var $31=HEAP32[(($vfn_i181)>>2)];
 var $call_i182=FUNCTION_TABLE[$31]($16);
 HEAP32[(($__dp)>>2)]=$call_i182;
 var $vtable_i185=HEAP32[(($30)>>2)];
 var $vfn_i186=(($vtable_i185+16)|0);
 var $32=HEAP32[(($vfn_i186)>>2)];
 var $call_i187=FUNCTION_TABLE[$32]($16);
 HEAP32[(($__ts)>>2)]=$call_i187;
 var $33=$14;
 var $vtable_i190=HEAP32[(($33)>>2)];
 var $vfn_i191=(($vtable_i190+20)|0);
 var $34=HEAP32[(($vfn_i191)>>2)];
 FUNCTION_TABLE[$34]($ref_tmp7,$16);
 var $__size__i46_i_i_i260=$__grp;
 var $35=HEAP8[($__size__i46_i_i_i260)];
 var $and_i_i_i_i262=$35&1;
 var $tobool_i_i_i_i263=(($and_i_i_i_i262<<24)>>24)==0;
 if($tobool_i_i_i_i263){label=19;break;}else{label=18;break;}
 case 18: 
 var $__data__i36_i_i_i270=(($__grp+8)|0);
 var $36=HEAP32[(($__data__i36_i_i_i270)>>2)];
 HEAP8[($36)]=0;
 var $__size__i24_i_i_i277=(($__grp+4)|0);
 HEAP32[(($__size__i24_i_i_i277)>>2)]=0;
 label=20;break;
 case 19: 
 var $__s_i45_i_i_i259=$__grp;
 var $arrayidx_i_i_i_i286=(($__s_i45_i_i_i259+1)|0);
 HEAP8[($arrayidx_i_i_i_i286)]=0;
 HEAP8[($__size__i46_i_i_i260)]=0;
 label=20;break;
 case 20: 
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=22;break; } else { label=21;break; }
 case 21: 
 var $37$0 = ___cxa_find_matching_catch(-1, -1,0); var $37$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 22: 
 assert(12 % 1 === 0);HEAP32[(($__size__i46_i_i_i260)>>2)]=HEAP32[(($2)>>2)];HEAP32[((($__size__i46_i_i_i260)+(4))>>2)]=HEAP32[((($2)+(4))>>2)];HEAP32[((($__size__i46_i_i_i260)+(8))>>2)]=HEAP32[((($2)+(8))>>2)];
 HEAP32[(($2)>>2)]=0; HEAP32[((($2)+(4))>>2)]=0; HEAP32[((($2)+(8))>>2)]=0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($ref_tmp7);
 var $vtable_i333=HEAP32[(($21)>>2)];
 var $vfn_i334=(($vtable_i333+24)|0);
 var $38=HEAP32[(($vfn_i334)>>2)];
 FUNCTION_TABLE[$38]($ref_tmp9,$16);
 var $__size__i46_i_i_i403=$__sym;
 var $39=HEAP8[($__size__i46_i_i_i403)];
 var $and_i_i_i_i405=$39&1;
 var $tobool_i_i_i_i406=(($and_i_i_i_i405<<24)>>24)==0;
 if($tobool_i_i_i_i406){label=24;break;}else{label=23;break;}
 case 23: 
 var $__data__i36_i_i_i413=(($__sym+8)|0);
 var $40=HEAP32[(($__data__i36_i_i_i413)>>2)];
 HEAP32[(($40)>>2)]=0;
 var $__size__i24_i_i_i420=(($__sym+4)|0);
 HEAP32[(($__size__i24_i_i_i420)>>2)]=0;
 label=25;break;
 case 24: 
 var $__data__i_i_i_i428=(($__sym+4)|0);
 HEAP32[(($__data__i_i_i_i428)>>2)]=0;
 HEAP8[($__size__i46_i_i_i403)]=0;
 label=25;break;
 case 25: 
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sym,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=27;break; } else { label=26;break; }
 case 26: 
 var $41$0 = ___cxa_find_matching_catch(-1, -1,0); var $41$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 27: 
 assert(12 % 1 === 0);HEAP32[(($__size__i46_i_i_i403)>>2)]=HEAP32[(($3)>>2)];HEAP32[((($__size__i46_i_i_i403)+(4))>>2)]=HEAP32[((($3)+(4))>>2)];HEAP32[((($__size__i46_i_i_i403)+(8))>>2)]=HEAP32[((($3)+(8))>>2)];
 HEAP32[(($3)>>2)]=0; HEAP32[((($3)+(4))>>2)]=0; HEAP32[((($3)+(8))>>2)]=0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($ref_tmp9);
 var $vtable_i479=HEAP32[(($30)>>2)];
 var $vfn_i480=(($vtable_i479+36)|0);
 var $42=HEAP32[(($vfn_i480)>>2)];
 var $call_i481=FUNCTION_TABLE[$42]($16);
 var $storemerge=$call_i481;label=54;break;
 case 28: 
 var $tmpcast=$ref_tmp14;
 var $__locale__i59=(($__loc)|0);
 var $43=HEAP32[(($__locale__i59)>>2)];
 var $44=$__p_i_i_i58;
 var $45=HEAP32[((15848)>>2)];
 var $cmp_i_i_i60=($45|0)==-1;
 if($cmp_i_i_i60){label=30;break;}else{label=29;break;}
 case 29: 
 var $ref_tmp_i_sroa_0_0__idx_i_i61=(($__p_i_i_i58)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i61)>>2)]=15848;
 var $ref_tmp_i_sroa_1_4__idx6_i_i62=(($__p_i_i_i58+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i62)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i63=(($__p_i_i_i58+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i63)>>2)]=0;
 __ZNSt3__111__call_onceERVmPvPFvS2_E(15848,$44,276);
 label=30;break;
 case 30: 
 var $46=HEAP32[((15852)>>2)];
 var $sub_i_i65=((($46)-(1))|0);
 var $__end__i_i_i_i66=(($43+12)|0);
 var $47=HEAP32[(($__end__i_i_i_i66)>>2)];
 var $__begin__i_i_i_i67=(($43+8)|0);
 var $48=HEAP32[(($__begin__i_i_i_i67)>>2)];
 var $sub_ptr_lhs_cast_i_i_i_i68=$47;
 var $sub_ptr_rhs_cast_i_i_i_i69=$48;
 var $sub_ptr_sub_i_i_i_i70=((($sub_ptr_lhs_cast_i_i_i_i68)-($sub_ptr_rhs_cast_i_i_i_i69))|0);
 var $sub_ptr_div_i_i_i_i71=$sub_ptr_sub_i_i_i_i70>>2;
 var $cmp_i_i1_i72=($sub_ptr_div_i_i_i_i71>>>0)>($sub_i_i65>>>0);
 if($cmp_i_i1_i72){label=31;break;}else{label=32;break;}
 case 31: 
 var $arrayidx_i_i_i_i74=(($48+($sub_i_i65<<2))|0);
 var $49=HEAP32[(($arrayidx_i_i_i_i74)>>2)];
 var $tobool_i_i_i75=($49|0)==0;
 if($tobool_i_i_i75){label=32;break;}else{label=33;break;}
 case 32: 
 var $exception_i_i77=___cxa_allocate_exception(4);
 var $50=$exception_i_i77;
 __ZNSt8bad_castC2Ev($50);
 ___cxa_throw($exception_i_i77,10264,(376));
 throw "Reached an unreachable!";
 case 33: 
 var $51=$49;
 var $52=$49;
 var $vtable_i486=HEAP32[(($52)>>2)];
 var $vfn_i487=(($vtable_i486+44)|0);
 var $53=HEAP32[(($vfn_i487)>>2)];
 FUNCTION_TABLE[$53]($tmpcast,$51);
 var $54=$__pat;
 var $55=HEAP32[(($ref_tmp14)>>2)];
 tempBigInt=$55;HEAP8[($54)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($54)+(1))|0)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($54)+(2))|0)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($54)+(3))|0)]=tempBigInt&0xff;
 var $56=$49;
 var $vtable_i490=HEAP32[(($56)>>2)];
 var $vfn_i491=(($vtable_i490+32)|0);
 var $57=HEAP32[(($vfn_i491)>>2)];
 FUNCTION_TABLE[$57]($ref_tmp15,$51);
 var $__size__i46_i_i_i560=$__nsn;
 var $58=HEAP8[($__size__i46_i_i_i560)];
 var $and_i_i_i_i562=$58&1;
 var $tobool_i_i_i_i563=(($and_i_i_i_i562<<24)>>24)==0;
 if($tobool_i_i_i_i563){label=35;break;}else{label=34;break;}
 case 34: 
 var $__data__i36_i_i_i570=(($__nsn+8)|0);
 var $59=HEAP32[(($__data__i36_i_i_i570)>>2)];
 HEAP32[(($59)>>2)]=0;
 var $__size__i24_i_i_i577=(($__nsn+4)|0);
 HEAP32[(($__size__i24_i_i_i577)>>2)]=0;
 label=36;break;
 case 35: 
 var $__data__i_i_i_i585=(($__nsn+4)|0);
 HEAP32[(($__data__i_i_i_i585)>>2)]=0;
 HEAP8[($__size__i46_i_i_i560)]=0;
 label=36;break;
 case 36: 
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__nsn,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=38;break; } else { label=37;break; }
 case 37: 
 var $60$0 = ___cxa_find_matching_catch(-1, -1,0); var $60$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 38: 
 assert(12 % 1 === 0);HEAP32[(($__size__i46_i_i_i560)>>2)]=HEAP32[(($4)>>2)];HEAP32[((($__size__i46_i_i_i560)+(4))>>2)]=HEAP32[((($4)+(4))>>2)];HEAP32[((($__size__i46_i_i_i560)+(8))>>2)]=HEAP32[((($4)+(8))>>2)];
 HEAP32[(($4)>>2)]=0; HEAP32[((($4)+(4))>>2)]=0; HEAP32[((($4)+(8))>>2)]=0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($ref_tmp15);
 var $vtable_i636=HEAP32[(($56)>>2)];
 var $vfn_i637=(($vtable_i636+28)|0);
 var $61=HEAP32[(($vfn_i637)>>2)];
 FUNCTION_TABLE[$61]($ref_tmp17,$51);
 var $__size__i46_i_i_i706=$__psn;
 var $62=HEAP8[($__size__i46_i_i_i706)];
 var $and_i_i_i_i708=$62&1;
 var $tobool_i_i_i_i709=(($and_i_i_i_i708<<24)>>24)==0;
 if($tobool_i_i_i_i709){label=40;break;}else{label=39;break;}
 case 39: 
 var $__data__i36_i_i_i716=(($__psn+8)|0);
 var $63=HEAP32[(($__data__i36_i_i_i716)>>2)];
 HEAP32[(($63)>>2)]=0;
 var $__size__i24_i_i_i723=(($__psn+4)|0);
 HEAP32[(($__size__i24_i_i_i723)>>2)]=0;
 label=41;break;
 case 40: 
 var $__data__i_i_i_i731=(($__psn+4)|0);
 HEAP32[(($__data__i_i_i_i731)>>2)]=0;
 HEAP8[($__size__i46_i_i_i706)]=0;
 label=41;break;
 case 41: 
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__psn,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=43;break; } else { label=42;break; }
 case 42: 
 var $64$0 = ___cxa_find_matching_catch(-1, -1,0); var $64$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 43: 
 assert(12 % 1 === 0);HEAP32[(($__size__i46_i_i_i706)>>2)]=HEAP32[(($5)>>2)];HEAP32[((($__size__i46_i_i_i706)+(4))>>2)]=HEAP32[((($5)+(4))>>2)];HEAP32[((($__size__i46_i_i_i706)+(8))>>2)]=HEAP32[((($5)+(8))>>2)];
 HEAP32[(($5)>>2)]=0; HEAP32[((($5)+(4))>>2)]=0; HEAP32[((($5)+(8))>>2)]=0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($ref_tmp17);
 var $65=$49;
 var $vtable_i782=HEAP32[(($65)>>2)];
 var $vfn_i783=(($vtable_i782+12)|0);
 var $66=HEAP32[(($vfn_i783)>>2)];
 var $call_i784=FUNCTION_TABLE[$66]($51);
 HEAP32[(($__dp)>>2)]=$call_i784;
 var $vtable_i787=HEAP32[(($65)>>2)];
 var $vfn_i788=(($vtable_i787+16)|0);
 var $67=HEAP32[(($vfn_i788)>>2)];
 var $call_i789=FUNCTION_TABLE[$67]($51);
 HEAP32[(($__ts)>>2)]=$call_i789;
 var $68=$49;
 var $vtable_i792=HEAP32[(($68)>>2)];
 var $vfn_i793=(($vtable_i792+20)|0);
 var $69=HEAP32[(($vfn_i793)>>2)];
 FUNCTION_TABLE[$69]($ref_tmp21,$51);
 var $__size__i46_i_i_i862=$__grp;
 var $70=HEAP8[($__size__i46_i_i_i862)];
 var $and_i_i_i_i864=$70&1;
 var $tobool_i_i_i_i865=(($and_i_i_i_i864<<24)>>24)==0;
 if($tobool_i_i_i_i865){label=45;break;}else{label=44;break;}
 case 44: 
 var $__data__i36_i_i_i872=(($__grp+8)|0);
 var $71=HEAP32[(($__data__i36_i_i_i872)>>2)];
 HEAP8[($71)]=0;
 var $__size__i24_i_i_i879=(($__grp+4)|0);
 HEAP32[(($__size__i24_i_i_i879)>>2)]=0;
 label=46;break;
 case 45: 
 var $__s_i45_i_i_i861=$__grp;
 var $arrayidx_i_i_i_i888=(($__s_i45_i_i_i861+1)|0);
 HEAP8[($arrayidx_i_i_i_i888)]=0;
 HEAP8[($__size__i46_i_i_i862)]=0;
 label=46;break;
 case 46: 
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=48;break; } else { label=47;break; }
 case 47: 
 var $72$0 = ___cxa_find_matching_catch(-1, -1,0); var $72$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 48: 
 assert(12 % 1 === 0);HEAP32[(($__size__i46_i_i_i862)>>2)]=HEAP32[(($6)>>2)];HEAP32[((($__size__i46_i_i_i862)+(4))>>2)]=HEAP32[((($6)+(4))>>2)];HEAP32[((($__size__i46_i_i_i862)+(8))>>2)]=HEAP32[((($6)+(8))>>2)];
 HEAP32[(($6)>>2)]=0; HEAP32[((($6)+(4))>>2)]=0; HEAP32[((($6)+(8))>>2)]=0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($ref_tmp21);
 var $vtable_i938=HEAP32[(($56)>>2)];
 var $vfn_i939=(($vtable_i938+24)|0);
 var $73=HEAP32[(($vfn_i939)>>2)];
 FUNCTION_TABLE[$73]($ref_tmp23,$51);
 var $__size__i46_i_i_i1008=$__sym;
 var $74=HEAP8[($__size__i46_i_i_i1008)];
 var $and_i_i_i_i1010=$74&1;
 var $tobool_i_i_i_i1011=(($and_i_i_i_i1010<<24)>>24)==0;
 if($tobool_i_i_i_i1011){label=50;break;}else{label=49;break;}
 case 49: 
 var $__data__i36_i_i_i1018=(($__sym+8)|0);
 var $75=HEAP32[(($__data__i36_i_i_i1018)>>2)];
 HEAP32[(($75)>>2)]=0;
 var $__size__i24_i_i_i1025=(($__sym+4)|0);
 HEAP32[(($__size__i24_i_i_i1025)>>2)]=0;
 label=51;break;
 case 50: 
 var $__data__i_i_i_i1033=(($__sym+4)|0);
 HEAP32[(($__data__i_i_i_i1033)>>2)]=0;
 HEAP8[($__size__i46_i_i_i1008)]=0;
 label=51;break;
 case 51: 
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sym,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=53;break; } else { label=52;break; }
 case 52: 
 var $76$0 = ___cxa_find_matching_catch(-1, -1,0); var $76$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 53: 
 assert(12 % 1 === 0);HEAP32[(($__size__i46_i_i_i1008)>>2)]=HEAP32[(($7)>>2)];HEAP32[((($__size__i46_i_i_i1008)+(4))>>2)]=HEAP32[((($7)+(4))>>2)];HEAP32[((($__size__i46_i_i_i1008)+(8))>>2)]=HEAP32[((($7)+(8))>>2)];
 HEAP32[(($7)>>2)]=0; HEAP32[((($7)+(4))>>2)]=0; HEAP32[((($7)+(8))>>2)]=0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($ref_tmp23);
 var $vtable_i1084=HEAP32[(($65)>>2)];
 var $vfn_i1085=(($vtable_i1084+36)|0);
 var $77=HEAP32[(($vfn_i1085)>>2)];
 var $call_i1086=FUNCTION_TABLE[$77]($51);
 var $storemerge=$call_i1086;label=54;break;
 case 54: 
 var $storemerge;
 HEAP32[(($__fd)>>2)]=$storemerge;
 STACKTOP=sp;return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__119__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__b,$__n,$__e){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__second__i_i_i=(($__b+4)|0);
 var $0=HEAP32[(($__second__i_i_i)>>2)];
 var $cmp=($0|0)!=((448)|0);
 var $1=HEAP32[(($__e)>>2)];
 var $__first__i_i_i56=(($__b)|0);
 var $2=HEAP32[(($__first__i_i_i56)>>2)];
 var $sub_ptr_lhs_cast=$1;
 var $sub_ptr_rhs_cast=$2;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $cmp3=($sub_ptr_sub>>>0)<2147483647;
 var $mul4=$sub_ptr_sub<<1;
 var $cond=($cmp3?$mul4:-1);
 var $3=HEAP32[(($__n)>>2)];
 var $sub_ptr_lhs_cast7=$3;
 var $sub_ptr_sub9=((($sub_ptr_lhs_cast7)-($sub_ptr_rhs_cast))|0);
 var $sub_ptr_div10=$sub_ptr_sub9>>2;
 if($cmp){label=2;break;}else{var $cond15=0;label=3;break;}
 case 2: 
 var $phitmp=$2;
 var $cond15=$phitmp;label=3;break;
 case 3: 
 var $cond15;
 var $call16=_realloc($cond15,$cond);
 var $4=$call16;
 var $cmp17=($call16|0)==0;
 if($cmp17){label=4;break;}else{label=5;break;}
 case 4: 
 __ZSt17__throw_bad_allocv();
 label=5;break;
 case 5: 
 if($cmp){label=6;break;}else{label=7;break;}
 case 6: 
 HEAP32[(($__first__i_i_i56)>>2)]=$4;
 var $8=$4;label=11;break;
 case 7: 
 var $_pr=HEAP32[(($__first__i_i_i56)>>2)];
 HEAP32[(($__first__i_i_i56)>>2)]=$4;
 var $tobool_i_i=($_pr|0)==0;
 if($tobool_i_i){var $8=$4;label=11;break;}else{label=8;break;}
 case 8: 
 var $5=HEAP32[(($__second__i_i_i)>>2)];
 var $6=$_pr;
 (function() { try { __THREW__ = 0; return FUNCTION_TABLE[$5]($6) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=9;break; } else { label=10;break; }
 case 9: 
 var $_pre=HEAP32[(($__first__i_i_i56)>>2)];
 var $8=$_pre;label=11;break;
 case 10: 
 var $7$0 = ___cxa_find_matching_catch(-1, -1,0); var $7$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 11: 
 var $8;
 HEAP32[(($__second__i_i_i)>>2)]=236;
 var $div24=$cond>>>2;
 var $add_ptr=(($8+($sub_ptr_div10<<2))|0);
 HEAP32[(($__n)>>2)]=$add_ptr;
 var $9=HEAP32[(($__first__i_i_i56)>>2)];
 var $add_ptr27=(($9+($div24<<2))|0);
 HEAP32[(($__e)>>2)]=$add_ptr27;
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this){
 var label=0;
 var $0=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($0);
 var $1=$this;
 __ZdlPv($1);
 return;
}
function __ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev($this){
 var label=0;
 var $0=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($0);
 return;
}
function __ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce($agg_result,$this,$__s,$__intl,$__iob,$__fl,$__units){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+280)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__s; $__s=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__s)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__p_i_i_i=sp;
 var $__buf=(sp)+(16);
 var $__bb=(sp)+(120);
 var $__digits=(sp)+(128);
 var $__loc=(sp)+(232);
 var $__pat=(sp)+(240);
 var $__dp=(sp)+(248);
 var $__ts=(sp)+(256);
 var $__grp=(sp)+(264);
 var $__grp64=$__grp;
 var $__sym=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__size__i_i354=$__sym;
 var $__sn=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__size__i_i=$__sn;
 var $__fd=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__mbuf=STACKTOP;STACKTOP = (STACKTOP + 100)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__mi=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__me=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $agg_tmp=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $arraydecay=(($__buf)|0);
 HEAP32[(($__bb)>>2)]=$arraydecay;
 var $arraydecay2=(($__digits)|0);
 var $call=_snprintf($arraydecay,100,3008,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAPF64[((tempVarArgs)>>3)]=$__units,tempVarArgs)); STACKTOP=tempVarArgs;
 var $cmp=($call>>>0)>99;
 if($cmp){label=2;break;}else{var $__db_0=$arraydecay2;var $__n_0=$call;var $__hn_sroa_0_1=0;var $__hd_sroa_0_1=0;label=15;break;}
 case 2: 
 var $0=HEAP8[(15944)];
 var $guard_uninitialized_i=(($0<<24)>>24)==0;
 if($guard_uninitialized_i){label=3;break;}else{label=7;break;}
 case 3: 
 var $1=___cxa_guard_acquire(15944);
 var $tobool_i=($1|0)==0;
 if($tobool_i){label=7;break;}else{label=4;break;}
 case 4: 
 var $call_i=(function() { try { __THREW__ = 0; return _newlocale(2147483647,2960,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=5;break; } else { label=6;break; }
 case 5: 
 HEAP32[((13952)>>2)]=$call_i;
 label=7;break;
 case 6: 
 var $2$0 = ___cxa_find_matching_catch(-1, -1); var $2$1 = tempRet0;
 var $eh_lpad_body$1=$2$1;var $eh_lpad_body$0=$2$0;var $__hn_sroa_0_0_lpad_body=0;var $__hd_sroa_0_0_lpad_body=0;label=12;break;
 case 7: 
 var $3=HEAP32[((13952)>>2)];
 var $call6=(function() { try { __THREW__ = 0; return __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__bb,$3,3008,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAPF64[((tempVarArgs)>>3)]=$__units,tempVarArgs)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })(); STACKTOP=tempVarArgs;if (!__THREW__) { label=8;break; } else { var $__hn_sroa_0_0=0;var $__hd_sroa_0_0=0;label=11;break; }
 case 8: 
 var $4=HEAP32[(($__bb)>>2)];
 var $cmp7=($4|0)==0;
 if($cmp7){label=9;break;}else{var $8=$4;label=13;break;}
 case 9: 
 (function() { try { __THREW__ = 0; return __ZSt17__throw_bad_allocv() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=10;break; } else { var $__hn_sroa_0_0=0;var $__hd_sroa_0_0=0;label=11;break; }
 case 10: 
 var $_pre=HEAP32[(($__bb)>>2)];
 var $8=$_pre;label=13;break;
 case 11: 
 var $__hd_sroa_0_0;
 var $__hn_sroa_0_0;
 var $5$0 = ___cxa_find_matching_catch(-1, -1); var $5$1 = tempRet0;
 var $eh_lpad_body$1=$5$1;var $eh_lpad_body$0=$5$0;var $__hn_sroa_0_0_lpad_body=$__hn_sroa_0_0;var $__hd_sroa_0_0_lpad_body=$__hd_sroa_0_0;label=12;break;
 case 12: 
 var $__hd_sroa_0_0_lpad_body;
 var $__hn_sroa_0_0_lpad_body;
 var $eh_lpad_body$0;
 var $eh_lpad_body$1;
 var $6=$eh_lpad_body$0;
 var $7=$eh_lpad_body$1;
 var $ehselector_slot_2=$7;var $exn_slot_2=$6;var $__hn_sroa_0_2=$__hn_sroa_0_0_lpad_body;var $__hd_sroa_0_2=$__hd_sroa_0_0_lpad_body;label=60;break;
 case 13: 
 var $8;
 var $call11=_malloc($call6);
 var $lnot_i=($call11|0)==0;
 if($lnot_i){label=14;break;}else{var $__db_0=$call11;var $__n_0=$call6;var $__hn_sroa_0_1=$8;var $__hd_sroa_0_1=$call11;label=15;break;}
 case 14: 
 (function() { try { __THREW__ = 0; return __ZSt17__throw_bad_allocv() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $__db_0=0;var $__n_0=$call6;var $__hn_sroa_0_1=$8;var $__hd_sroa_0_1=0;label=15;break; } else { var $__hn_sroa_0_0=$8;var $__hd_sroa_0_0=0;label=11;break; }
 case 15: 
 var $__hd_sroa_0_1;
 var $__hn_sroa_0_1;
 var $__n_0;
 var $__db_0;
 (function() { try { __THREW__ = 0; return __ZNKSt3__18ios_base6getlocEv($__loc,$__iob) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=16;break; } else { var $__hn_sroa_0_0=$__hn_sroa_0_1;var $__hd_sroa_0_0=$__hd_sroa_0_1;label=11;break; }
 case 16: 
 var $__locale__i=(($__loc)|0);
 var $9=HEAP32[(($__locale__i)>>2)];
 var $10=$__p_i_i_i;
 var $11=HEAP32[((15384)>>2)];
 var $cmp_i_i_i51=($11|0)==-1;
 if($cmp_i_i_i51){label=18;break;}else{label=17;break;}
 case 17: 
 var $ref_tmp_i_sroa_0_0__idx_i_i=(($__p_i_i_i)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i)>>2)]=15384;
 var $ref_tmp_i_sroa_1_4__idx6_i_i=(($__p_i_i_i+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i=(($__p_i_i_i+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(15384,$10,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=18;break; } else { label=45;break; }
 case 18: 
 var $12=HEAP32[((15388)>>2)];
 var $sub_i_i=((($12)-(1))|0);
 var $__end__i_i_i_i=(($9+12)|0);
 var $13=HEAP32[(($__end__i_i_i_i)>>2)];
 var $__begin__i_i_i_i=(($9+8)|0);
 var $14=HEAP32[(($__begin__i_i_i_i)>>2)];
 var $sub_ptr_lhs_cast_i_i_i_i=$13;
 var $sub_ptr_rhs_cast_i_i_i_i=$14;
 var $sub_ptr_sub_i_i_i_i=((($sub_ptr_lhs_cast_i_i_i_i)-($sub_ptr_rhs_cast_i_i_i_i))|0);
 var $sub_ptr_div_i_i_i_i=$sub_ptr_sub_i_i_i_i>>2;
 var $cmp_i_i1_i=($sub_ptr_div_i_i_i_i>>>0)>($sub_i_i>>>0);
 if($cmp_i_i1_i){label=19;break;}else{label=20;break;}
 case 19: 
 var $arrayidx_i_i_i_i=(($14+($sub_i_i<<2))|0);
 var $15=HEAP32[(($arrayidx_i_i_i_i)>>2)];
 var $tobool_i_i_i53=($15|0)==0;
 if($tobool_i_i_i53){label=20;break;}else{label=22;break;}
 case 20: 
 var $exception_i_i=___cxa_allocate_exception(4);
 var $16=$exception_i_i;
 __ZNSt8bad_castC2Ev($16);
 (function() { try { __THREW__ = 0; return ___cxa_throw($exception_i_i,10264,(376)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=21;break; } else { label=45;break; }
 case 21: 
 throw "Reached an unreachable!";
 case 22: 
 var $17=$15;
 var $18=HEAP32[(($__bb)>>2)];
 var $add_ptr=(($18+$__n_0)|0);
 var $19=$15;
 var $vtable_i=HEAP32[(($19)>>2)];
 var $vfn_i=(($vtable_i+32)|0);
 var $20=HEAP32[(($vfn_i)>>2)];
 var $call_i160=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$20]($17,$18,$add_ptr,$__db_0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=23;break; } else { label=45;break; }
 case 23: 
 var $cmp24=($__n_0|0)==0;
 if($cmp24){var $23=0;label=25;break;}else{label=24;break;}
 case 24: 
 var $21=HEAP32[(($__bb)>>2)];
 var $22=HEAP8[($21)];
 var $cmp25=(($22<<24)>>24)==45;
 var $23=$cmp25;label=25;break;
 case 25: 
 var $23;
 HEAP32[(($__grp64)>>2)]=0; HEAP32[((($__grp64)+(4))>>2)]=0; HEAP32[((($__grp64)+(8))>>2)]=0;
 HEAP32[(($__size__i_i354)>>2)]=0; HEAP32[((($__size__i_i354)+(4))>>2)]=0; HEAP32[((($__size__i_i354)+(8))>>2)]=0;
 HEAP32[(($__size__i_i)>>2)]=0; HEAP32[((($__size__i_i)+(4))>>2)]=0; HEAP32[((($__size__i_i)+(8))>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri($__intl,$23,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=26;break; } else { label=46;break; }
 case 26: 
 var $arraydecay30=(($__mbuf)|0);
 var $24=HEAP32[(($__fd)>>2)];
 var $cmp32=($__n_0|0)>($24|0);
 if($cmp32){label=27;break;}else{label=34;break;}
 case 27: 
 var $sub=((($__n_0)-($24))|0);
 var $mul33=$sub<<1;
 var $25=HEAP8[($__size__i_i)];
 var $conv_i_i=($25&255);
 var $and_i_i=$conv_i_i&1;
 var $tobool_i_i=($and_i_i|0)==0;
 if($tobool_i_i){label=29;break;}else{label=28;break;}
 case 28: 
 var $__size__i23_i=(($__sn+4)|0);
 var $26=HEAP32[(($__size__i23_i)>>2)];
 var $cond_i=$26;label=30;break;
 case 29: 
 var $shr_i_i49=$conv_i_i>>>1;
 var $cond_i=$shr_i_i49;label=30;break;
 case 30: 
 var $cond_i;
 var $27=HEAP8[($__size__i_i354)];
 var $conv_i_i355=($27&255);
 var $and_i_i356=$conv_i_i355&1;
 var $tobool_i_i357=($and_i_i356|0)==0;
 if($tobool_i_i357){label=32;break;}else{label=31;break;}
 case 31: 
 var $__size__i23_i364=(($__sym+4)|0);
 var $28=HEAP32[(($__size__i23_i364)>>2)];
 var $cond_i376=$28;label=33;break;
 case 32: 
 var $shr_i_i37450=$conv_i_i355>>>1;
 var $cond_i376=$shr_i_i37450;label=33;break;
 case 33: 
 var $cond_i376;
 var $add63=$mul33|1;
 var $add36=((($add63)+($cond_i))|0);
 var $add37=((($add36)+($cond_i376))|0);
 var $add37_pn=$add37;label=41;break;
 case 34: 
 var $29=HEAP8[($__size__i_i)];
 var $conv_i_i427=($29&255);
 var $and_i_i428=$conv_i_i427&1;
 var $tobool_i_i429=($and_i_i428|0)==0;
 if($tobool_i_i429){label=36;break;}else{label=35;break;}
 case 35: 
 var $__size__i23_i436=(($__sn+4)|0);
 var $30=HEAP32[(($__size__i23_i436)>>2)];
 var $cond_i448=$30;label=37;break;
 case 36: 
 var $shr_i_i44647=$conv_i_i427>>>1;
 var $cond_i448=$shr_i_i44647;label=37;break;
 case 37: 
 var $cond_i448;
 var $31=HEAP8[($__size__i_i354)];
 var $conv_i_i468=($31&255);
 var $and_i_i469=$conv_i_i468&1;
 var $tobool_i_i470=($and_i_i469|0)==0;
 if($tobool_i_i470){label=39;break;}else{label=38;break;}
 case 38: 
 var $__size__i23_i477=(($__sym+4)|0);
 var $32=HEAP32[(($__size__i23_i477)>>2)];
 var $cond_i489=$32;label=40;break;
 case 39: 
 var $shr_i_i48748=$conv_i_i468>>>1;
 var $cond_i489=$shr_i_i48748;label=40;break;
 case 40: 
 var $cond_i489;
 var $add41=((($cond_i448)+(2))|0);
 var $add42=((($add41)+($cond_i489))|0);
 var $add37_pn=$add42;label=41;break;
 case 41: 
 var $add37_pn;
 var $cond=((($add37_pn)+($24))|0);
 var $cmp44=($cond>>>0)>100;
 if($cmp44){label=42;break;}else{var $__mb_0=$arraydecay30;var $__hw_sroa_0_1=0;label=49;break;}
 case 42: 
 var $call49=_malloc($cond);
 var $cmp51=($call49|0)==0;
 if($cmp51){label=43;break;}else{var $__mb_0=$call49;var $__hw_sroa_0_1=$call49;label=49;break;}
 case 43: 
 (function() { try { __THREW__ = 0; return __ZSt17__throw_bad_allocv() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $__mb_0=0;var $__hw_sroa_0_1=0;label=49;break; } else { label=44;break; }
 case 44: 
 var $33$0 = ___cxa_find_matching_catch(-1, -1); var $33$1 = tempRet0;
 var $34=$33$0;
 var $35=$33$1;
 var $ehselector_slot_0=$35;var $exn_slot_0=$34;label=58;break;
 case 45: 
 var $36$0 = ___cxa_find_matching_catch(-1, -1); var $36$1 = tempRet0;
 var $37=$36$0;
 var $38=$36$1;
 var $ehselector_slot_1=$38;var $exn_slot_1=$37;label=59;break;
 case 46: 
 var $39$0 = ___cxa_find_matching_catch(-1, -1); var $39$1 = tempRet0;
 var $40=$39$0;
 var $41=$39$1;
 var $ehselector_slot_0=$41;var $exn_slot_0=$40;label=58;break;
 case 47: 
 var $42$0 = ___cxa_find_matching_catch(-1, -1); var $42$1 = tempRet0;
 var $43=$42$0;
 var $44=$42$1;
 var $tobool_i_i_i548=($__hw_sroa_0_1|0)==0;
 if($tobool_i_i_i548){var $ehselector_slot_0=$44;var $exn_slot_0=$43;label=58;break;}else{label=48;break;}
 case 48: 
 _free($__hw_sroa_0_1);
 var $ehselector_slot_0=$44;var $exn_slot_0=$43;label=58;break;
 case 49: 
 var $__hw_sroa_0_1;
 var $__mb_0;
 var $__fmtflags__i=(($__iob+4)|0);
 var $45=HEAP32[(($__fmtflags__i)>>2)];
 var $add_ptr58=(($__db_0+$__n_0)|0);
 var $46=HEAP8[($__dp)];
 var $47=HEAP8[($__ts)];
 (function() { try { __THREW__ = 0; return __ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i($__mb_0,$__mi,$__me,$45,$__db_0,$add_ptr58,$17,$23,$__pat,$46,$47,$__grp,$__sym,$__sn,$24) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=50;break; } else { label=47;break; }
 case 50: 
 var $48=(($__s)|0);
 var $49=HEAP32[(($48)>>2)];
 var $50=(($agg_tmp)|0);
 HEAP32[(($50)>>2)]=$49;
 var $51=HEAP32[(($__mi)>>2)];
 var $52=HEAP32[(($__me)>>2)];
 (function() { try { __THREW__ = 0; return __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result,$agg_tmp,$__mb_0,$51,$52,$__iob,$__fl) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=51;break; } else { label=47;break; }
 case 51: 
 var $tobool_i_i_i581=($__hw_sroa_0_1|0)==0;
 if($tobool_i_i_i581){label=53;break;}else{label=52;break;}
 case 52: 
 _free($__hw_sroa_0_1);
 label=53;break;
 case 53: 
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__sn);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grp);
 var $53=HEAP32[(($__locale__i)>>2)];
 var $54=(($53)|0);
 var $call_i56=__ZNSt3__114__shared_count16__release_sharedEv($54);
 var $tobool_i_i_i400=($__hd_sroa_0_1|0)==0;
 if($tobool_i_i_i400){label=55;break;}else{label=54;break;}
 case 54: 
 _free($__hd_sroa_0_1);
 label=55;break;
 case 55: 
 var $tobool_i_i_i317=($__hn_sroa_0_1|0)==0;
 if($tobool_i_i_i317){label=57;break;}else{label=56;break;}
 case 56: 
 _free($__hn_sroa_0_1);
 label=57;break;
 case 57: 
 STACKTOP=sp;return;
 case 58: 
 var $exn_slot_0;
 var $ehselector_slot_0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__sn);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grp);
 var $ehselector_slot_1=$ehselector_slot_0;var $exn_slot_1=$exn_slot_0;label=59;break;
 case 59: 
 var $exn_slot_1;
 var $ehselector_slot_1;
 var $55=HEAP32[(($__locale__i)>>2)];
 var $56=(($55)|0);
 var $call_i58=__ZNSt3__114__shared_count16__release_sharedEv($56);
 var $ehselector_slot_2=$ehselector_slot_1;var $exn_slot_2=$exn_slot_1;var $__hn_sroa_0_2=$__hn_sroa_0_1;var $__hd_sroa_0_2=$__hd_sroa_0_1;label=60;break;
 case 60: 
 var $__hd_sroa_0_2;
 var $__hn_sroa_0_2;
 var $exn_slot_2;
 var $ehselector_slot_2;
 var $tobool_i_i_i194=($__hd_sroa_0_2|0)==0;
 if($tobool_i_i_i194){label=62;break;}else{label=61;break;}
 case 61: 
 _free($__hd_sroa_0_2);
 label=62;break;
 case 62: 
 var $tobool_i_i_i=($__hn_sroa_0_2|0)==0;
 if($tobool_i_i_i){label=64;break;}else{label=63;break;}
 case 63: 
 _free($__hn_sroa_0_2);
 label=64;break;
 case 64: 
 var $lpad_val$0=$exn_slot_2;
 var $lpad_val$1=0;
 var $lpad_val67$0=$lpad_val$0;
 var $lpad_val67$1=$ehselector_slot_2;
 ___resumeException($lpad_val67$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri($__intl,$__neg,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+40)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__p_i_i_i63=sp;
 var $__p_i_i_i=(sp)+(16);
 var $ref_tmp=(sp)+(32);
 var $tmpcast59=$ref_tmp;
 var $ref_tmp4=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $0=$ref_tmp4;
 var $ref_tmp6=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $tmpcast58=$ref_tmp6;
 var $ref_tmp7=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $1=$ref_tmp7;
 var $ref_tmp11=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $2=$ref_tmp11;
 var $ref_tmp13=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $3=$ref_tmp13;
 var $ref_tmp21=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $tmpcast57=$ref_tmp21;
 var $ref_tmp22=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $4=$ref_tmp22;
 var $ref_tmp25=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $tmpcast=$ref_tmp25;
 var $ref_tmp26=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $5=$ref_tmp26;
 var $ref_tmp31=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $6=$ref_tmp31;
 var $ref_tmp33=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $7=$ref_tmp33;
 var $__locale__i=(($__loc)|0);
 var $8=HEAP32[(($__locale__i)>>2)];
 if($__intl){label=2;break;}else{label=31;break;}
 case 2: 
 var $9=$__p_i_i_i;
 var $10=HEAP32[((15856)>>2)];
 var $cmp_i_i_i60=($10|0)==-1;
 if($cmp_i_i_i60){label=4;break;}else{label=3;break;}
 case 3: 
 var $ref_tmp_i_sroa_0_0__idx_i_i=(($__p_i_i_i)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i)>>2)]=15856;
 var $ref_tmp_i_sroa_1_4__idx6_i_i=(($__p_i_i_i+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i=(($__p_i_i_i+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i)>>2)]=0;
 __ZNSt3__111__call_onceERVmPvPFvS2_E(15856,$9,276);
 label=4;break;
 case 4: 
 var $11=HEAP32[((15860)>>2)];
 var $sub_i_i=((($11)-(1))|0);
 var $__end__i_i_i_i=(($8+12)|0);
 var $12=HEAP32[(($__end__i_i_i_i)>>2)];
 var $__begin__i_i_i_i=(($8+8)|0);
 var $13=HEAP32[(($__begin__i_i_i_i)>>2)];
 var $sub_ptr_lhs_cast_i_i_i_i=$12;
 var $sub_ptr_rhs_cast_i_i_i_i=$13;
 var $sub_ptr_sub_i_i_i_i=((($sub_ptr_lhs_cast_i_i_i_i)-($sub_ptr_rhs_cast_i_i_i_i))|0);
 var $sub_ptr_div_i_i_i_i=$sub_ptr_sub_i_i_i_i>>2;
 var $cmp_i_i1_i=($sub_ptr_div_i_i_i_i>>>0)>($sub_i_i>>>0);
 if($cmp_i_i1_i){label=5;break;}else{label=6;break;}
 case 5: 
 var $arrayidx_i_i_i_i62=(($13+($sub_i_i<<2))|0);
 var $14=HEAP32[(($arrayidx_i_i_i_i62)>>2)];
 var $tobool_i_i_i=($14|0)==0;
 if($tobool_i_i_i){label=6;break;}else{label=7;break;}
 case 6: 
 var $exception_i_i=___cxa_allocate_exception(4);
 var $15=$exception_i_i;
 __ZNSt8bad_castC2Ev($15);
 ___cxa_throw($exception_i_i,10264,(376));
 throw "Reached an unreachable!";
 case 7: 
 var $16=$14;
 var $17=$14;
 var $vtable_i=HEAP32[(($17)>>2)];
 if($__neg){label=8;break;}else{label=14;break;}
 case 8: 
 var $vfn_i=(($vtable_i+44)|0);
 var $18=HEAP32[(($vfn_i)>>2)];
 FUNCTION_TABLE[$18]($tmpcast59,$16);
 var $19=$__pat;
 var $20=HEAP32[(($ref_tmp)>>2)];
 tempBigInt=$20;HEAP8[($19)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($19)+(1))|0)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($19)+(2))|0)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($19)+(3))|0)]=tempBigInt&0xff;
 var $21=$14;
 var $vtable_i39=HEAP32[(($21)>>2)];
 var $vfn_i40=(($vtable_i39+32)|0);
 var $22=HEAP32[(($vfn_i40)>>2)];
 FUNCTION_TABLE[$22]($ref_tmp4,$16);
 var $__size__i46_i_i_i=$__sn;
 var $23=HEAP8[($__size__i46_i_i_i)];
 var $and_i_i_i_i=$23&1;
 var $tobool_i_i_i_i=(($and_i_i_i_i<<24)>>24)==0;
 if($tobool_i_i_i_i){label=10;break;}else{label=9;break;}
 case 9: 
 var $__data__i36_i_i_i=(($__sn+8)|0);
 var $24=HEAP32[(($__data__i36_i_i_i)>>2)];
 HEAP8[($24)]=0;
 var $__size__i24_i_i_i=(($__sn+4)|0);
 HEAP32[(($__size__i24_i_i_i)>>2)]=0;
 label=11;break;
 case 10: 
 var $__s_i45_i_i_i=$__sn;
 var $arrayidx_i_i_i_i=(($__s_i45_i_i_i+1)|0);
 HEAP8[($arrayidx_i_i_i_i)]=0;
 HEAP8[($__size__i46_i_i_i)]=0;
 label=11;break;
 case 11: 
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sn,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=13;break; } else { label=12;break; }
 case 12: 
 var $25$0 = ___cxa_find_matching_catch(-1, -1,0); var $25$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 13: 
 assert(12 % 1 === 0);HEAP32[(($__size__i46_i_i_i)>>2)]=HEAP32[(($0)>>2)];HEAP32[((($__size__i46_i_i_i)+(4))>>2)]=HEAP32[((($0)+(4))>>2)];HEAP32[((($__size__i46_i_i_i)+(8))>>2)]=HEAP32[((($0)+(8))>>2)];
 HEAP32[(($0)>>2)]=0; HEAP32[((($0)+(4))>>2)]=0; HEAP32[((($0)+(8))>>2)]=0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($ref_tmp4);
 label=20;break;
 case 14: 
 var $vfn_i46=(($vtable_i+40)|0);
 var $26=HEAP32[(($vfn_i46)>>2)];
 FUNCTION_TABLE[$26]($tmpcast58,$16);
 var $27=$__pat;
 var $28=HEAP32[(($ref_tmp6)>>2)];
 tempBigInt=$28;HEAP8[($27)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($27)+(1))|0)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($27)+(2))|0)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($27)+(3))|0)]=tempBigInt&0xff;
 var $29=$14;
 var $vtable_i49=HEAP32[(($29)>>2)];
 var $vfn_i50=(($vtable_i49+28)|0);
 var $30=HEAP32[(($vfn_i50)>>2)];
 FUNCTION_TABLE[$30]($ref_tmp7,$16);
 var $__size__i46_i_i_i119=$__sn;
 var $31=HEAP8[($__size__i46_i_i_i119)];
 var $and_i_i_i_i121=$31&1;
 var $tobool_i_i_i_i122=(($and_i_i_i_i121<<24)>>24)==0;
 if($tobool_i_i_i_i122){label=16;break;}else{label=15;break;}
 case 15: 
 var $__data__i36_i_i_i129=(($__sn+8)|0);
 var $32=HEAP32[(($__data__i36_i_i_i129)>>2)];
 HEAP8[($32)]=0;
 var $__size__i24_i_i_i136=(($__sn+4)|0);
 HEAP32[(($__size__i24_i_i_i136)>>2)]=0;
 label=17;break;
 case 16: 
 var $__s_i45_i_i_i118=$__sn;
 var $arrayidx_i_i_i_i145=(($__s_i45_i_i_i118+1)|0);
 HEAP8[($arrayidx_i_i_i_i145)]=0;
 HEAP8[($__size__i46_i_i_i119)]=0;
 label=17;break;
 case 17: 
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sn,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=19;break; } else { label=18;break; }
 case 18: 
 var $33$0 = ___cxa_find_matching_catch(-1, -1,0); var $33$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 19: 
 assert(12 % 1 === 0);HEAP32[(($__size__i46_i_i_i119)>>2)]=HEAP32[(($1)>>2)];HEAP32[((($__size__i46_i_i_i119)+(4))>>2)]=HEAP32[((($1)+(4))>>2)];HEAP32[((($__size__i46_i_i_i119)+(8))>>2)]=HEAP32[((($1)+(8))>>2)];
 HEAP32[(($1)>>2)]=0; HEAP32[((($1)+(4))>>2)]=0; HEAP32[((($1)+(8))>>2)]=0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($ref_tmp7);
 label=20;break;
 case 20: 
 var $34=$14;
 var $vtable_i195=HEAP32[(($34)>>2)];
 var $vfn_i196=(($vtable_i195+12)|0);
 var $35=HEAP32[(($vfn_i196)>>2)];
 var $call_i197=FUNCTION_TABLE[$35]($16);
 HEAP8[($__dp)]=$call_i197;
 var $vtable_i200=HEAP32[(($34)>>2)];
 var $vfn_i201=(($vtable_i200+16)|0);
 var $36=HEAP32[(($vfn_i201)>>2)];
 var $call_i202=FUNCTION_TABLE[$36]($16);
 HEAP8[($__ts)]=$call_i202;
 var $37=$14;
 var $vtable_i205=HEAP32[(($37)>>2)];
 var $vfn_i206=(($vtable_i205+20)|0);
 var $38=HEAP32[(($vfn_i206)>>2)];
 FUNCTION_TABLE[$38]($ref_tmp11,$16);
 var $__size__i46_i_i_i275=$__grp;
 var $39=HEAP8[($__size__i46_i_i_i275)];
 var $and_i_i_i_i277=$39&1;
 var $tobool_i_i_i_i278=(($and_i_i_i_i277<<24)>>24)==0;
 if($tobool_i_i_i_i278){label=22;break;}else{label=21;break;}
 case 21: 
 var $__data__i36_i_i_i285=(($__grp+8)|0);
 var $40=HEAP32[(($__data__i36_i_i_i285)>>2)];
 HEAP8[($40)]=0;
 var $__size__i24_i_i_i292=(($__grp+4)|0);
 HEAP32[(($__size__i24_i_i_i292)>>2)]=0;
 label=23;break;
 case 22: 
 var $__s_i45_i_i_i274=$__grp;
 var $arrayidx_i_i_i_i301=(($__s_i45_i_i_i274+1)|0);
 HEAP8[($arrayidx_i_i_i_i301)]=0;
 HEAP8[($__size__i46_i_i_i275)]=0;
 label=23;break;
 case 23: 
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=25;break; } else { label=24;break; }
 case 24: 
 var $41$0 = ___cxa_find_matching_catch(-1, -1,0); var $41$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 25: 
 assert(12 % 1 === 0);HEAP32[(($__size__i46_i_i_i275)>>2)]=HEAP32[(($2)>>2)];HEAP32[((($__size__i46_i_i_i275)+(4))>>2)]=HEAP32[((($2)+(4))>>2)];HEAP32[((($__size__i46_i_i_i275)+(8))>>2)]=HEAP32[((($2)+(8))>>2)];
 HEAP32[(($2)>>2)]=0; HEAP32[((($2)+(4))>>2)]=0; HEAP32[((($2)+(8))>>2)]=0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($ref_tmp11);
 var $vtable_i351=HEAP32[(($37)>>2)];
 var $vfn_i352=(($vtable_i351+24)|0);
 var $42=HEAP32[(($vfn_i352)>>2)];
 FUNCTION_TABLE[$42]($ref_tmp13,$16);
 var $__size__i46_i_i_i421=$__sym;
 var $43=HEAP8[($__size__i46_i_i_i421)];
 var $and_i_i_i_i423=$43&1;
 var $tobool_i_i_i_i424=(($and_i_i_i_i423<<24)>>24)==0;
 if($tobool_i_i_i_i424){label=27;break;}else{label=26;break;}
 case 26: 
 var $__data__i36_i_i_i431=(($__sym+8)|0);
 var $44=HEAP32[(($__data__i36_i_i_i431)>>2)];
 HEAP8[($44)]=0;
 var $__size__i24_i_i_i438=(($__sym+4)|0);
 HEAP32[(($__size__i24_i_i_i438)>>2)]=0;
 label=28;break;
 case 27: 
 var $__s_i45_i_i_i420=$__sym;
 var $arrayidx_i_i_i_i447=(($__s_i45_i_i_i420+1)|0);
 HEAP8[($arrayidx_i_i_i_i447)]=0;
 HEAP8[($__size__i46_i_i_i421)]=0;
 label=28;break;
 case 28: 
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sym,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=30;break; } else { label=29;break; }
 case 29: 
 var $45$0 = ___cxa_find_matching_catch(-1, -1,0); var $45$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 30: 
 assert(12 % 1 === 0);HEAP32[(($__size__i46_i_i_i421)>>2)]=HEAP32[(($3)>>2)];HEAP32[((($__size__i46_i_i_i421)+(4))>>2)]=HEAP32[((($3)+(4))>>2)];HEAP32[((($__size__i46_i_i_i421)+(8))>>2)]=HEAP32[((($3)+(8))>>2)];
 HEAP32[(($3)>>2)]=0; HEAP32[((($3)+(4))>>2)]=0; HEAP32[((($3)+(8))>>2)]=0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($ref_tmp13);
 var $46=$14;
 var $vtable_i497=HEAP32[(($46)>>2)];
 var $vfn_i498=(($vtable_i497+36)|0);
 var $47=HEAP32[(($vfn_i498)>>2)];
 var $call_i499=FUNCTION_TABLE[$47]($16);
 var $storemerge=$call_i499;label=60;break;
 case 31: 
 var $48=$__p_i_i_i63;
 var $49=HEAP32[((15864)>>2)];
 var $cmp_i_i_i65=($49|0)==-1;
 if($cmp_i_i_i65){label=33;break;}else{label=32;break;}
 case 32: 
 var $ref_tmp_i_sroa_0_0__idx_i_i66=(($__p_i_i_i63)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i66)>>2)]=15864;
 var $ref_tmp_i_sroa_1_4__idx6_i_i67=(($__p_i_i_i63+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i67)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i68=(($__p_i_i_i63+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i68)>>2)]=0;
 __ZNSt3__111__call_onceERVmPvPFvS2_E(15864,$48,276);
 label=33;break;
 case 33: 
 var $50=HEAP32[((15868)>>2)];
 var $sub_i_i70=((($50)-(1))|0);
 var $__end__i_i_i_i71=(($8+12)|0);
 var $51=HEAP32[(($__end__i_i_i_i71)>>2)];
 var $__begin__i_i_i_i72=(($8+8)|0);
 var $52=HEAP32[(($__begin__i_i_i_i72)>>2)];
 var $sub_ptr_lhs_cast_i_i_i_i73=$51;
 var $sub_ptr_rhs_cast_i_i_i_i74=$52;
 var $sub_ptr_sub_i_i_i_i75=((($sub_ptr_lhs_cast_i_i_i_i73)-($sub_ptr_rhs_cast_i_i_i_i74))|0);
 var $sub_ptr_div_i_i_i_i76=$sub_ptr_sub_i_i_i_i75>>2;
 var $cmp_i_i1_i77=($sub_ptr_div_i_i_i_i76>>>0)>($sub_i_i70>>>0);
 if($cmp_i_i1_i77){label=34;break;}else{label=35;break;}
 case 34: 
 var $arrayidx_i_i_i_i79=(($52+($sub_i_i70<<2))|0);
 var $53=HEAP32[(($arrayidx_i_i_i_i79)>>2)];
 var $tobool_i_i_i80=($53|0)==0;
 if($tobool_i_i_i80){label=35;break;}else{label=36;break;}
 case 35: 
 var $exception_i_i82=___cxa_allocate_exception(4);
 var $54=$exception_i_i82;
 __ZNSt8bad_castC2Ev($54);
 ___cxa_throw($exception_i_i82,10264,(376));
 throw "Reached an unreachable!";
 case 36: 
 var $55=$53;
 var $56=$53;
 var $vtable_i504=HEAP32[(($56)>>2)];
 if($__neg){label=37;break;}else{label=43;break;}
 case 37: 
 var $vfn_i505=(($vtable_i504+44)|0);
 var $57=HEAP32[(($vfn_i505)>>2)];
 FUNCTION_TABLE[$57]($tmpcast57,$55);
 var $58=$__pat;
 var $59=HEAP32[(($ref_tmp21)>>2)];
 tempBigInt=$59;HEAP8[($58)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($58)+(1))|0)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($58)+(2))|0)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($58)+(3))|0)]=tempBigInt&0xff;
 var $60=$53;
 var $vtable_i508=HEAP32[(($60)>>2)];
 var $vfn_i509=(($vtable_i508+32)|0);
 var $61=HEAP32[(($vfn_i509)>>2)];
 FUNCTION_TABLE[$61]($ref_tmp22,$55);
 var $__size__i46_i_i_i578=$__sn;
 var $62=HEAP8[($__size__i46_i_i_i578)];
 var $and_i_i_i_i580=$62&1;
 var $tobool_i_i_i_i581=(($and_i_i_i_i580<<24)>>24)==0;
 if($tobool_i_i_i_i581){label=39;break;}else{label=38;break;}
 case 38: 
 var $__data__i36_i_i_i588=(($__sn+8)|0);
 var $63=HEAP32[(($__data__i36_i_i_i588)>>2)];
 HEAP8[($63)]=0;
 var $__size__i24_i_i_i595=(($__sn+4)|0);
 HEAP32[(($__size__i24_i_i_i595)>>2)]=0;
 label=40;break;
 case 39: 
 var $__s_i45_i_i_i577=$__sn;
 var $arrayidx_i_i_i_i604=(($__s_i45_i_i_i577+1)|0);
 HEAP8[($arrayidx_i_i_i_i604)]=0;
 HEAP8[($__size__i46_i_i_i578)]=0;
 label=40;break;
 case 40: 
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sn,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=42;break; } else { label=41;break; }
 case 41: 
 var $64$0 = ___cxa_find_matching_catch(-1, -1,0); var $64$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 42: 
 assert(12 % 1 === 0);HEAP32[(($__size__i46_i_i_i578)>>2)]=HEAP32[(($4)>>2)];HEAP32[((($__size__i46_i_i_i578)+(4))>>2)]=HEAP32[((($4)+(4))>>2)];HEAP32[((($__size__i46_i_i_i578)+(8))>>2)]=HEAP32[((($4)+(8))>>2)];
 HEAP32[(($4)>>2)]=0; HEAP32[((($4)+(4))>>2)]=0; HEAP32[((($4)+(8))>>2)]=0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($ref_tmp22);
 label=49;break;
 case 43: 
 var $vfn_i655=(($vtable_i504+40)|0);
 var $65=HEAP32[(($vfn_i655)>>2)];
 FUNCTION_TABLE[$65]($tmpcast,$55);
 var $66=$__pat;
 var $67=HEAP32[(($ref_tmp25)>>2)];
 tempBigInt=$67;HEAP8[($66)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($66)+(1))|0)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($66)+(2))|0)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($66)+(3))|0)]=tempBigInt&0xff;
 var $68=$53;
 var $vtable_i658=HEAP32[(($68)>>2)];
 var $vfn_i659=(($vtable_i658+28)|0);
 var $69=HEAP32[(($vfn_i659)>>2)];
 FUNCTION_TABLE[$69]($ref_tmp26,$55);
 var $__size__i46_i_i_i728=$__sn;
 var $70=HEAP8[($__size__i46_i_i_i728)];
 var $and_i_i_i_i730=$70&1;
 var $tobool_i_i_i_i731=(($and_i_i_i_i730<<24)>>24)==0;
 if($tobool_i_i_i_i731){label=45;break;}else{label=44;break;}
 case 44: 
 var $__data__i36_i_i_i738=(($__sn+8)|0);
 var $71=HEAP32[(($__data__i36_i_i_i738)>>2)];
 HEAP8[($71)]=0;
 var $__size__i24_i_i_i745=(($__sn+4)|0);
 HEAP32[(($__size__i24_i_i_i745)>>2)]=0;
 label=46;break;
 case 45: 
 var $__s_i45_i_i_i727=$__sn;
 var $arrayidx_i_i_i_i754=(($__s_i45_i_i_i727+1)|0);
 HEAP8[($arrayidx_i_i_i_i754)]=0;
 HEAP8[($__size__i46_i_i_i728)]=0;
 label=46;break;
 case 46: 
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sn,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=48;break; } else { label=47;break; }
 case 47: 
 var $72$0 = ___cxa_find_matching_catch(-1, -1,0); var $72$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 48: 
 assert(12 % 1 === 0);HEAP32[(($__size__i46_i_i_i728)>>2)]=HEAP32[(($5)>>2)];HEAP32[((($__size__i46_i_i_i728)+(4))>>2)]=HEAP32[((($5)+(4))>>2)];HEAP32[((($__size__i46_i_i_i728)+(8))>>2)]=HEAP32[((($5)+(8))>>2)];
 HEAP32[(($5)>>2)]=0; HEAP32[((($5)+(4))>>2)]=0; HEAP32[((($5)+(8))>>2)]=0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($ref_tmp26);
 label=49;break;
 case 49: 
 var $73=$53;
 var $vtable_i804=HEAP32[(($73)>>2)];
 var $vfn_i805=(($vtable_i804+12)|0);
 var $74=HEAP32[(($vfn_i805)>>2)];
 var $call_i806=FUNCTION_TABLE[$74]($55);
 HEAP8[($__dp)]=$call_i806;
 var $vtable_i809=HEAP32[(($73)>>2)];
 var $vfn_i810=(($vtable_i809+16)|0);
 var $75=HEAP32[(($vfn_i810)>>2)];
 var $call_i811=FUNCTION_TABLE[$75]($55);
 HEAP8[($__ts)]=$call_i811;
 var $76=$53;
 var $vtable_i814=HEAP32[(($76)>>2)];
 var $vfn_i815=(($vtable_i814+20)|0);
 var $77=HEAP32[(($vfn_i815)>>2)];
 FUNCTION_TABLE[$77]($ref_tmp31,$55);
 var $__size__i46_i_i_i884=$__grp;
 var $78=HEAP8[($__size__i46_i_i_i884)];
 var $and_i_i_i_i886=$78&1;
 var $tobool_i_i_i_i887=(($and_i_i_i_i886<<24)>>24)==0;
 if($tobool_i_i_i_i887){label=51;break;}else{label=50;break;}
 case 50: 
 var $__data__i36_i_i_i894=(($__grp+8)|0);
 var $79=HEAP32[(($__data__i36_i_i_i894)>>2)];
 HEAP8[($79)]=0;
 var $__size__i24_i_i_i901=(($__grp+4)|0);
 HEAP32[(($__size__i24_i_i_i901)>>2)]=0;
 label=52;break;
 case 51: 
 var $__s_i45_i_i_i883=$__grp;
 var $arrayidx_i_i_i_i910=(($__s_i45_i_i_i883+1)|0);
 HEAP8[($arrayidx_i_i_i_i910)]=0;
 HEAP8[($__size__i46_i_i_i884)]=0;
 label=52;break;
 case 52: 
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=54;break; } else { label=53;break; }
 case 53: 
 var $80$0 = ___cxa_find_matching_catch(-1, -1,0); var $80$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 54: 
 assert(12 % 1 === 0);HEAP32[(($__size__i46_i_i_i884)>>2)]=HEAP32[(($6)>>2)];HEAP32[((($__size__i46_i_i_i884)+(4))>>2)]=HEAP32[((($6)+(4))>>2)];HEAP32[((($__size__i46_i_i_i884)+(8))>>2)]=HEAP32[((($6)+(8))>>2)];
 HEAP32[(($6)>>2)]=0; HEAP32[((($6)+(4))>>2)]=0; HEAP32[((($6)+(8))>>2)]=0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($ref_tmp31);
 var $vtable_i960=HEAP32[(($76)>>2)];
 var $vfn_i961=(($vtable_i960+24)|0);
 var $81=HEAP32[(($vfn_i961)>>2)];
 FUNCTION_TABLE[$81]($ref_tmp33,$55);
 var $__size__i46_i_i_i1030=$__sym;
 var $82=HEAP8[($__size__i46_i_i_i1030)];
 var $and_i_i_i_i1032=$82&1;
 var $tobool_i_i_i_i1033=(($and_i_i_i_i1032<<24)>>24)==0;
 if($tobool_i_i_i_i1033){label=56;break;}else{label=55;break;}
 case 55: 
 var $__data__i36_i_i_i1040=(($__sym+8)|0);
 var $83=HEAP32[(($__data__i36_i_i_i1040)>>2)];
 HEAP8[($83)]=0;
 var $__size__i24_i_i_i1047=(($__sym+4)|0);
 HEAP32[(($__size__i24_i_i_i1047)>>2)]=0;
 label=57;break;
 case 56: 
 var $__s_i45_i_i_i1029=$__sym;
 var $arrayidx_i_i_i_i1056=(($__s_i45_i_i_i1029+1)|0);
 HEAP8[($arrayidx_i_i_i_i1056)]=0;
 HEAP8[($__size__i46_i_i_i1030)]=0;
 label=57;break;
 case 57: 
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sym,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=59;break; } else { label=58;break; }
 case 58: 
 var $84$0 = ___cxa_find_matching_catch(-1, -1,0); var $84$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 59: 
 assert(12 % 1 === 0);HEAP32[(($__size__i46_i_i_i1030)>>2)]=HEAP32[(($7)>>2)];HEAP32[((($__size__i46_i_i_i1030)+(4))>>2)]=HEAP32[((($7)+(4))>>2)];HEAP32[((($__size__i46_i_i_i1030)+(8))>>2)]=HEAP32[((($7)+(8))>>2)];
 HEAP32[(($7)>>2)]=0; HEAP32[((($7)+(4))>>2)]=0; HEAP32[((($7)+(8))>>2)]=0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($ref_tmp33);
 var $85=$53;
 var $vtable_i1106=HEAP32[(($85)>>2)];
 var $vfn_i1107=(($vtable_i1106+36)|0);
 var $86=HEAP32[(($vfn_i1107)>>2)];
 var $call_i1108=FUNCTION_TABLE[$86]($55);
 var $storemerge=$call_i1108;label=60;break;
 case 60: 
 var $storemerge;
 HEAP32[(($__fd)>>2)]=$storemerge;
 STACKTOP=sp;return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i($__mb,$__mi,$__me,$__flags,$__db,$__de,$__ct,$__neg,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 HEAP32[(($__me)>>2)]=$__mb;
 var $0=$__ct;
 var $__s_i_i_i=$__sn;
 var $__size__i_i_i=$__sn;
 var $arrayidx_i_i_i_i468=(($__s_i_i_i+1)|0);
 var $__data__i21_i_i_i459=(($__sn+8)|0);
 var $__size__i23_i_i=(($__sn+4)|0);
 var $__s_i_i_i497=$__sym;
 var $__size__i_i_i498=$__sym;
 var $and=$__flags&512;
 var $tobool=($and|0)==0;
 var $arrayidx_i_i_i575=(($__s_i_i_i497+1)|0);
 var $__size__i23_i_i706=(($__sym+4)|0);
 var $__data__i21_i_i676=(($__sym+8)|0);
 var $__tab__i=(($__ct+8)|0);
 var $cmp24=($__fd|0)>0;
 var $__s_i_i_i392=$__grp;
 var $__size__i_i_i393=$__grp;
 var $arrayidx_i_i_i_i369=(($__s_i_i_i392+1)|0);
 var $__data__i21_i_i_i360=(($__grp+8)|0);
 var $__size__i23_i311=(($__grp+4)|0);
 var $1=(((-$__fd))|0);
 var $__db_addr_0121=$__db;var $__p_0122=0;label=2;break;
 case 2: 
 var $__p_0122;
 var $__db_addr_0121;
 var $arrayidx=(($__pat+$__p_0122)|0);
 var $2=HEAP8[($arrayidx)];
 var $conv=(($2<<24)>>24);
 switch(($conv|0)){case 2:{ label=12;break;}case 4:{ label=24;break;}case 0:{ label=3;break;}case 1:{ label=4;break;}case 3:{ label=5;break;}default:{var $__db_addr_2=$__db_addr_0121;label=62;break;}}break;
 case 3: 
 var $3=HEAP32[(($__me)>>2)];
 HEAP32[(($__mi)>>2)]=$3;
 var $__db_addr_2=$__db_addr_0121;label=62;break;
 case 4: 
 var $4=HEAP32[(($__me)>>2)];
 HEAP32[(($__mi)>>2)]=$4;
 var $vtable_i=HEAP32[(($0)>>2)];
 var $vfn_i=(($vtable_i+28)|0);
 var $5=HEAP32[(($vfn_i)>>2)];
 var $call_i=FUNCTION_TABLE[$5]($__ct,32);
 var $6=HEAP32[(($__me)>>2)];
 var $incdec_ptr=(($6+1)|0);
 HEAP32[(($__me)>>2)]=$incdec_ptr;
 HEAP8[($6)]=$call_i;
 var $__db_addr_2=$__db_addr_0121;label=62;break;
 case 5: 
 var $7=HEAP8[($__size__i_i_i)];
 var $conv_i_i_i=($7&255);
 var $and_i_i_i=$conv_i_i_i&1;
 var $tobool_i_i_i=($and_i_i_i|0)==0;
 if($tobool_i_i_i){label=7;break;}else{label=6;break;}
 case 6: 
 var $8=HEAP32[(($__size__i23_i_i)>>2)];
 var $cond_i_i=$8;label=8;break;
 case 7: 
 var $shr_i_i_i90=$conv_i_i_i>>>1;
 var $cond_i_i=$shr_i_i_i90;label=8;break;
 case 8: 
 var $cond_i_i;
 var $cmp_i=($cond_i_i|0)==0;
 if($cmp_i){var $__db_addr_2=$__db_addr_0121;label=62;break;}else{label=9;break;}
 case 9: 
 var $and_i_i_i_i451=$7&1;
 var $tobool_i_i_i_i452=(($and_i_i_i_i451<<24)>>24)==0;
 if($tobool_i_i_i_i452){var $cond_i_i_i470=$arrayidx_i_i_i_i468;label=11;break;}else{label=10;break;}
 case 10: 
 var $9=HEAP32[(($__data__i21_i_i_i459)>>2)];
 var $cond_i_i_i470=$9;label=11;break;
 case 11: 
 var $cond_i_i_i470;
 var $10=HEAP8[($cond_i_i_i470)];
 var $11=HEAP32[(($__me)>>2)];
 var $incdec_ptr5=(($11+1)|0);
 HEAP32[(($__me)>>2)]=$incdec_ptr5;
 HEAP8[($11)]=$10;
 var $__db_addr_2=$__db_addr_0121;label=62;break;
 case 12: 
 var $12=HEAP8[($__size__i_i_i498)];
 var $conv_i_i_i499=($12&255);
 var $and_i_i_i500=$conv_i_i_i499&1;
 var $tobool_i_i_i501=($and_i_i_i500|0)==0;
 if($tobool_i_i_i501){label=14;break;}else{label=13;break;}
 case 13: 
 var $13=HEAP32[(($__size__i23_i_i706)>>2)];
 var $cond_i_i520=$13;label=15;break;
 case 14: 
 var $shr_i_i_i51888=$conv_i_i_i499>>>1;
 var $cond_i_i520=$shr_i_i_i51888;label=15;break;
 case 15: 
 var $cond_i_i520;
 var $cmp_i521=($cond_i_i520|0)==0;
 var $brmerge=$cmp_i521|$tobool;
 if($brmerge){var $__db_addr_2=$__db_addr_0121;label=62;break;}else{label=16;break;}
 case 16: 
 var $and_i_i_i558=$12&1;
 var $tobool_i_i_i559=(($and_i_i_i558<<24)>>24)==0;
 if($tobool_i_i_i559){var $cond_i_i687=$arrayidx_i_i_i575;var $cond_i_i577138=$arrayidx_i_i_i575;label=18;break;}else{label=17;break;}
 case 17: 
 var $14=HEAP32[(($__data__i21_i_i676)>>2)];
 var $cond_i_i687=$14;var $cond_i_i577138=$14;label=18;break;
 case 18: 
 var $cond_i_i577138;
 var $cond_i_i687;
 if($tobool_i_i_i501){label=20;break;}else{label=19;break;}
 case 19: 
 var $15=HEAP32[(($__size__i23_i_i706)>>2)];
 var $cond_i34_i718=$15;label=21;break;
 case 20: 
 var $shr_i_i_i71689=$conv_i_i_i499>>>1;
 var $cond_i34_i718=$shr_i_i_i71689;label=21;break;
 case 21: 
 var $cond_i34_i718;
 var $add_ptr_i719=(($cond_i_i687+$cond_i34_i718)|0);
 var $16=HEAP32[(($__me)>>2)];
 var $lnot_i_i_i621117=($cond_i_i577138|0)==($add_ptr_i719|0);
 if($lnot_i_i_i621117){var $__result_addr_i_i599_0_lcssa=$16;label=23;break;}else{var $agg_tmp7_i601_sroa_0_0118=$cond_i_i577138;var $__result_addr_i_i599_0119=$16;label=22;break;}
 case 22: 
 var $__result_addr_i_i599_0119;
 var $agg_tmp7_i601_sroa_0_0118;
 var $17=HEAP8[($agg_tmp7_i601_sroa_0_0118)];
 HEAP8[($__result_addr_i_i599_0119)]=$17;
 var $incdec_ptr_i_i_i627=(($agg_tmp7_i601_sroa_0_0118+1)|0);
 var $incdec_ptr_i_i628=(($__result_addr_i_i599_0119+1)|0);
 var $lnot_i_i_i621=($incdec_ptr_i_i_i627|0)==($add_ptr_i719|0);
 if($lnot_i_i_i621){var $__result_addr_i_i599_0_lcssa=$incdec_ptr_i_i628;label=23;break;}else{var $agg_tmp7_i601_sroa_0_0118=$incdec_ptr_i_i_i627;var $__result_addr_i_i599_0119=$incdec_ptr_i_i628;label=22;break;}
 case 23: 
 var $__result_addr_i_i599_0_lcssa;
 HEAP32[(($__me)>>2)]=$__result_addr_i_i599_0_lcssa;
 var $__db_addr_2=$__db_addr_0121;label=62;break;
 case 24: 
 var $18=HEAP32[(($__me)>>2)];
 var $incdec_ptr15=(($__db_addr_0121+1)|0);
 var $incdec_ptr15___db_addr_0=($__neg?$incdec_ptr15:$__db_addr_0121);
 var $__d_0=$incdec_ptr15___db_addr_0;label=25;break;
 case 25: 
 var $__d_0;
 var $cmp18=($__d_0>>>0)<($__de>>>0);
 if($cmp18){label=26;break;}else{label=28;break;}
 case 26: 
 var $19=HEAP8[($__d_0)];
 var $tobool_i=(($19<<24)>>24)<0;
 if($tobool_i){label=28;break;}else{label=27;break;}
 case 27: 
 var $conv_i=(($19<<24)>>24);
 var $20=HEAP32[(($__tab__i)>>2)];
 var $arrayidx_i=(($20+($conv_i<<1))|0);
 var $21=HEAP16[(($arrayidx_i)>>1)];
 var $and_i=$21&2048;
 var $cmp_i527=(($and_i<<16)>>16)==0;
 var $incdec_ptr23=(($__d_0+1)|0);
 if($cmp_i527){label=28;break;}else{var $__d_0=$incdec_ptr23;label=25;break;}
 case 28: 
 var $__d_0_lcssa127=$__d_0;
 if($cmp24){label=29;break;}else{var $__d_2=$__d_0;label=38;break;}
 case 29: 
 var $cmp2796=($__d_0>>>0)>($incdec_ptr15___db_addr_0>>>0);
 if($cmp2796){label=30;break;}else{var $__f_0_lcssa141=$__fd;var $__d_1_lcssa143=$__d_0;label=34;break;}
 case 30: 
 var $22=(((-$__d_0_lcssa127))|0);
 var $scevgep=(($incdec_ptr15___db_addr_0+$22)|0);
 var $scevgep128=$scevgep;
 var $23=($scevgep128>>>0)<($1>>>0);
 var $umax=($23?$1:$scevgep128);
 var $umax129=$umax;
 var $scevgep130=(($umax129+$__fd)|0);
 var $scevgep130131=$scevgep130;
 var $__d_199=$__d_0;var $__f_0100=$__fd;var $24=$18;label=31;break;
 case 31: 
 var $24;
 var $__f_0100;
 var $__d_199;
 var $incdec_ptr30=((($__d_199)-(1))|0);
 var $25=HEAP8[($incdec_ptr30)];
 var $incdec_ptr31=(($24+1)|0);
 HEAP32[(($__me)>>2)]=$incdec_ptr31;
 HEAP8[($24)]=$25;
 var $dec=((($__f_0100)-(1))|0);
 var $cmp27=($incdec_ptr30>>>0)>($incdec_ptr15___db_addr_0>>>0);
 var $cmp28=($dec|0)>0;
 var $or_cond=$cmp27&$cmp28;
 if($or_cond){label=32;break;}else{label=33;break;}
 case 32: 
 var $_pre=HEAP32[(($__me)>>2)];
 var $__d_199=$incdec_ptr30;var $__f_0100=$dec;var $24=$_pre;label=31;break;
 case 33: 
 var $scevgep132=(($__d_0+$umax)|0);
 if($cmp28){var $__f_0_lcssa141=$scevgep130131;var $__d_1_lcssa143=$scevgep132;label=34;break;}else{var $cond=0;var $__f_0_lcssa140=$scevgep130131;var $__d_1_lcssa142=$scevgep132;label=35;break;}
 case 34: 
 var $__d_1_lcssa143;
 var $__f_0_lcssa141;
 var $vtable_i476=HEAP32[(($0)>>2)];
 var $vfn_i477=(($vtable_i476+28)|0);
 var $26=HEAP32[(($vfn_i477)>>2)];
 var $call_i478=FUNCTION_TABLE[$26]($__ct,48);
 var $cond=$call_i478;var $__f_0_lcssa140=$__f_0_lcssa141;var $__d_1_lcssa142=$__d_1_lcssa143;label=35;break;
 case 35: 
 var $__d_1_lcssa142;
 var $__f_0_lcssa140;
 var $cond;
 var $cmp37104=($__f_0_lcssa140|0)>0;
 var $27=HEAP32[(($__me)>>2)];
 var $incdec_ptr39105=(($27+1)|0);
 HEAP32[(($__me)>>2)]=$incdec_ptr39105;
 if($cmp37104){var $__f_1106=$__f_0_lcssa140;var $28=$27;label=36;break;}else{var $_lcssa=$27;label=37;break;}
 case 36: 
 var $28;
 var $__f_1106;
 HEAP8[($28)]=$cond;
 var $dec41=((($__f_1106)-(1))|0);
 var $cmp37=($dec41|0)>0;
 var $29=HEAP32[(($__me)>>2)];
 var $incdec_ptr39=(($29+1)|0);
 HEAP32[(($__me)>>2)]=$incdec_ptr39;
 if($cmp37){var $__f_1106=$dec41;var $28=$29;label=36;break;}else{var $_lcssa=$29;label=37;break;}
 case 37: 
 var $_lcssa;
 HEAP8[($_lcssa)]=$__dp;
 var $__d_2=$__d_1_lcssa142;label=38;break;
 case 38: 
 var $__d_2;
 var $cmp45=($__d_2|0)==($incdec_ptr15___db_addr_0|0);
 if($cmp45){label=39;break;}else{label=40;break;}
 case 39: 
 var $vtable_i421=HEAP32[(($0)>>2)];
 var $vfn_i422=(($vtable_i421+28)|0);
 var $30=HEAP32[(($vfn_i422)>>2)];
 var $call_i423=FUNCTION_TABLE[$30]($__ct,48);
 var $31=HEAP32[(($__me)>>2)];
 var $incdec_ptr48=(($31+1)|0);
 HEAP32[(($__me)>>2)]=$incdec_ptr48;
 HEAP8[($31)]=$call_i423;
 label=59;break;
 case 40: 
 var $32=HEAP8[($__size__i_i_i393)];
 var $conv_i_i_i394=($32&255);
 var $and_i_i_i395=$conv_i_i_i394&1;
 var $tobool_i_i_i396=($and_i_i_i395|0)==0;
 if($tobool_i_i_i396){label=42;break;}else{label=41;break;}
 case 41: 
 var $33=HEAP32[(($__size__i23_i311)>>2)];
 var $cond_i_i415=$33;label=43;break;
 case 42: 
 var $shr_i_i_i41386=$conv_i_i_i394>>>1;
 var $cond_i_i415=$shr_i_i_i41386;label=43;break;
 case 43: 
 var $cond_i_i415;
 var $cmp_i416=($cond_i_i415|0)==0;
 if($cmp_i416){var $__d_3109=$__d_2;var $__ng_0110=0;var $__ig_0111=0;var $__gl_0112=-1;label=47;break;}else{label=44;break;}
 case 44: 
 var $and_i_i_i_i352=$32&1;
 var $tobool_i_i_i_i353=(($and_i_i_i_i352<<24)>>24)==0;
 if($tobool_i_i_i_i353){var $cond_i_i_i371=$arrayidx_i_i_i_i369;label=46;break;}else{label=45;break;}
 case 45: 
 var $34=HEAP32[(($__data__i21_i_i_i360)>>2)];
 var $cond_i_i_i371=$34;label=46;break;
 case 46: 
 var $cond_i_i_i371;
 var $35=HEAP8[($cond_i_i_i371)];
 var $conv54=(($35<<24)>>24);
 var $__d_3109=$__d_2;var $__ng_0110=0;var $__ig_0111=0;var $__gl_0112=$conv54;label=47;break;
 case 47: 
 var $__gl_0112;
 var $__ig_0111;
 var $__ng_0110;
 var $__d_3109;
 var $cmp58=($__ng_0110|0)==($__gl_0112|0);
 if($cmp58){label=48;break;}else{var $__gl_1=$__gl_0112;var $__ig_1=$__ig_0111;var $__ng_1=$__ng_0110;label=58;break;}
 case 48: 
 var $36=HEAP32[(($__me)>>2)];
 var $incdec_ptr60=(($36+1)|0);
 HEAP32[(($__me)>>2)]=$incdec_ptr60;
 HEAP8[($36)]=$__ts;
 var $inc=((($__ig_0111)+(1))|0);
 var $37=HEAP8[($__size__i_i_i393)];
 var $conv_i_i302=($37&255);
 var $and_i_i303=$conv_i_i302&1;
 var $tobool_i_i304=($and_i_i303|0)==0;
 if($tobool_i_i304){label=50;break;}else{label=49;break;}
 case 49: 
 var $38=HEAP32[(($__size__i23_i311)>>2)];
 var $cond_i323=$38;label=51;break;
 case 50: 
 var $shr_i_i32187=$conv_i_i302>>>1;
 var $cond_i323=$shr_i_i32187;label=51;break;
 case 51: 
 var $cond_i323;
 var $cmp62=($inc>>>0)<($cond_i323>>>0);
 if($cmp62){label=52;break;}else{var $__gl_1=$__gl_0112;var $__ig_1=$inc;var $__ng_1=0;label=58;break;}
 case 52: 
 var $and_i_i_i_i262=$37&1;
 var $tobool_i_i_i_i263=(($and_i_i_i_i262<<24)>>24)==0;
 if($tobool_i_i_i_i263){var $cond_i_i_i281=$arrayidx_i_i_i_i369;label=54;break;}else{label=53;break;}
 case 53: 
 var $39=HEAP32[(($__data__i21_i_i_i360)>>2)];
 var $cond_i_i_i281=$39;label=54;break;
 case 54: 
 var $cond_i_i_i281;
 var $add_ptr_i282=(($cond_i_i_i281+$inc)|0);
 var $40=HEAP8[($add_ptr_i282)];
 var $cmp68=(($40<<24)>>24)==127;
 if($cmp68){var $__gl_1=-1;var $__ig_1=$inc;var $__ng_1=0;label=58;break;}else{label=55;break;}
 case 55: 
 if($tobool_i_i_i_i263){var $cond_i_i_i=$arrayidx_i_i_i_i369;label=57;break;}else{label=56;break;}
 case 56: 
 var $41=HEAP32[(($__data__i21_i_i_i360)>>2)];
 var $cond_i_i_i=$41;label=57;break;
 case 57: 
 var $cond_i_i_i;
 var $add_ptr_i234=(($cond_i_i_i+$inc)|0);
 var $42=HEAP8[($add_ptr_i234)];
 var $conv73=(($42<<24)>>24);
 var $__gl_1=$conv73;var $__ig_1=$inc;var $__ng_1=0;label=58;break;
 case 58: 
 var $__ng_1;
 var $__ig_1;
 var $__gl_1;
 var $incdec_ptr78=((($__d_3109)-(1))|0);
 var $43=HEAP8[($incdec_ptr78)];
 var $44=HEAP32[(($__me)>>2)];
 var $incdec_ptr79=(($44+1)|0);
 HEAP32[(($__me)>>2)]=$incdec_ptr79;
 HEAP8[($44)]=$43;
 var $inc80=((($__ng_1)+(1))|0);
 var $cmp57=($incdec_ptr78|0)==($incdec_ptr15___db_addr_0|0);
 if($cmp57){label=59;break;}else{var $__d_3109=$incdec_ptr78;var $__ng_0110=$inc80;var $__ig_0111=$__ig_1;var $__gl_0112=$__gl_1;label=47;break;}
 case 59: 
 var $45=HEAP32[(($__me)>>2)];
 var $cmp_i_i=($18|0)==($45|0);
 if($cmp_i_i){var $__db_addr_2=$incdec_ptr15___db_addr_0;label=62;break;}else{label=60;break;}
 case 60: 
 var $incdec_ptr_i_i221113=((($45)-(1))|0);
 var $cmp1_i_i114=($18>>>0)<($incdec_ptr_i_i221113>>>0);
 if($cmp1_i_i114){var $__first_addr_i_i_0115=$18;var $incdec_ptr_i_i221116=$incdec_ptr_i_i221113;label=61;break;}else{var $__db_addr_2=$incdec_ptr15___db_addr_0;label=62;break;}
 case 61: 
 var $incdec_ptr_i_i221116;
 var $__first_addr_i_i_0115;
 var $46=HEAP8[($__first_addr_i_i_0115)];
 var $47=HEAP8[($incdec_ptr_i_i221116)];
 HEAP8[($__first_addr_i_i_0115)]=$47;
 HEAP8[($incdec_ptr_i_i221116)]=$46;
 var $incdec_ptr2_i_i=(($__first_addr_i_i_0115+1)|0);
 var $incdec_ptr_i_i221=((($incdec_ptr_i_i221116)-(1))|0);
 var $cmp1_i_i=($incdec_ptr2_i_i>>>0)<($incdec_ptr_i_i221>>>0);
 if($cmp1_i_i){var $__first_addr_i_i_0115=$incdec_ptr2_i_i;var $incdec_ptr_i_i221116=$incdec_ptr_i_i221;label=61;break;}else{var $__db_addr_2=$incdec_ptr15___db_addr_0;label=62;break;}
 case 62: 
 var $__db_addr_2;
 var $inc83=((($__p_0122)+(1))|0);
 var $cmp=($inc83>>>0)<4;
 if($cmp){var $__db_addr_0121=$__db_addr_2;var $__p_0122=$inc83;label=2;break;}else{label=63;break;}
 case 63: 
 var $48=HEAP8[($__size__i_i_i)];
 var $conv_i_i=($48&255);
 var $and_i_i=$conv_i_i&1;
 var $tobool_i_i=($and_i_i|0)==0;
 if($tobool_i_i){label=65;break;}else{label=64;break;}
 case 64: 
 var $49=HEAP32[(($__size__i23_i_i)>>2)];
 var $cond_i=$49;label=66;break;
 case 65: 
 var $shr_i_i84=$conv_i_i>>>1;
 var $cond_i=$shr_i_i84;label=66;break;
 case 66: 
 var $cond_i;
 var $cmp86=($cond_i>>>0)>1;
 if($cmp86){label=67;break;}else{label=75;break;}
 case 67: 
 var $and_i_i_i186=$48&1;
 var $tobool_i_i_i187=(($and_i_i_i186<<24)>>24)==0;
 if($tobool_i_i_i187){var $cond_i_i146=$arrayidx_i_i_i_i468;var $cond_i_i205144=$arrayidx_i_i_i_i468;label=69;break;}else{label=68;break;}
 case 68: 
 var $50=HEAP32[(($__data__i21_i_i_i459)>>2)];
 var $cond_i_i146=$50;var $cond_i_i205144=$50;label=69;break;
 case 69: 
 var $cond_i_i205144;
 var $cond_i_i146;
 if($tobool_i_i){label=71;break;}else{label=70;break;}
 case 70: 
 var $51=HEAP32[(($__size__i23_i_i)>>2)];
 var $cond_i34_i=$51;label=72;break;
 case 71: 
 var $shr_i_i_i15585=$conv_i_i>>>1;
 var $cond_i34_i=$shr_i_i_i15585;label=72;break;
 case 72: 
 var $cond_i34_i;
 var $add_ptr_i=(($cond_i_i146+$cond_i34_i)|0);
 var $52=HEAP32[(($__me)>>2)];
 var $agg_tmp7_i_sroa_0_092=(($cond_i_i205144+1)|0);
 var $lnot_i_i_i93=($agg_tmp7_i_sroa_0_092|0)==($add_ptr_i|0);
 if($lnot_i_i_i93){var $__result_addr_i_i_0_lcssa=$52;label=74;break;}else{var $__result_addr_i_i_094=$52;var $agg_tmp7_i_sroa_0_095=$agg_tmp7_i_sroa_0_092;label=73;break;}
 case 73: 
 var $agg_tmp7_i_sroa_0_095;
 var $__result_addr_i_i_094;
 var $53=HEAP8[($agg_tmp7_i_sroa_0_095)];
 HEAP8[($__result_addr_i_i_094)]=$53;
 var $incdec_ptr_i_i=(($__result_addr_i_i_094+1)|0);
 var $agg_tmp7_i_sroa_0_0=(($agg_tmp7_i_sroa_0_095+1)|0);
 var $lnot_i_i_i=($agg_tmp7_i_sroa_0_0|0)==($add_ptr_i|0);
 if($lnot_i_i_i){var $__result_addr_i_i_0_lcssa=$incdec_ptr_i_i;label=74;break;}else{var $__result_addr_i_i_094=$incdec_ptr_i_i;var $agg_tmp7_i_sroa_0_095=$agg_tmp7_i_sroa_0_0;label=73;break;}
 case 74: 
 var $__result_addr_i_i_0_lcssa;
 HEAP32[(($__me)>>2)]=$__result_addr_i_i_0_lcssa;
 label=75;break;
 case 75: 
 var $and92=$__flags&176;
 if(($and92|0)==32){ label=76;break;}else if(($and92|0)==16){ label=78;break;}else{label=77;break;}
 case 76: 
 var $54=HEAP32[(($__me)>>2)];
 HEAP32[(($__mi)>>2)]=$54;
 label=78;break;
 case 77: 
 HEAP32[(($__mi)>>2)]=$__mb;
 label=78;break;
 case 78: 
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE($agg_result,$this,$__s,$__intl,$__iob,$__fl,$__digits){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+64)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__s; $__s=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__s)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__p_i_i_i=sp;
 var $__loc=(sp)+(16);
 var $__pat=(sp)+(24);
 var $__dp=(sp)+(32);
 var $__ts=(sp)+(40);
 var $__grp=(sp)+(48);
 var $__grp49=$__grp;
 var $__sym=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__size__i_i452=$__sym;
 var $__sn=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__size__i_i395=$__sn;
 var $__fd=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__mbuf=STACKTOP;STACKTOP = (STACKTOP + 100)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__mi=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__me=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $agg_tmp=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 __ZNKSt3__18ios_base6getlocEv($__loc,$__iob);
 var $__locale__i=(($__loc)|0);
 var $0=HEAP32[(($__locale__i)>>2)];
 var $1=$__p_i_i_i;
 var $2=HEAP32[((15384)>>2)];
 var $cmp_i_i_i36=($2|0)==-1;
 if($cmp_i_i_i36){label=3;break;}else{label=2;break;}
 case 2: 
 var $ref_tmp_i_sroa_0_0__idx_i_i=(($__p_i_i_i)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i)>>2)]=15384;
 var $ref_tmp_i_sroa_1_4__idx6_i_i=(($__p_i_i_i+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i=(($__p_i_i_i+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(15384,$1,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=3;break; } else { label=43;break; }
 case 3: 
 var $3=HEAP32[((15388)>>2)];
 var $sub_i_i=((($3)-(1))|0);
 var $__end__i_i_i_i=(($0+12)|0);
 var $4=HEAP32[(($__end__i_i_i_i)>>2)];
 var $__begin__i_i_i_i=(($0+8)|0);
 var $5=HEAP32[(($__begin__i_i_i_i)>>2)];
 var $sub_ptr_lhs_cast_i_i_i_i=$4;
 var $sub_ptr_rhs_cast_i_i_i_i=$5;
 var $sub_ptr_sub_i_i_i_i=((($sub_ptr_lhs_cast_i_i_i_i)-($sub_ptr_rhs_cast_i_i_i_i))|0);
 var $sub_ptr_div_i_i_i_i=$sub_ptr_sub_i_i_i_i>>2;
 var $cmp_i_i1_i=($sub_ptr_div_i_i_i_i>>>0)>($sub_i_i>>>0);
 if($cmp_i_i1_i){label=4;break;}else{label=5;break;}
 case 4: 
 var $arrayidx_i_i_i_i38=(($5+($sub_i_i<<2))|0);
 var $6=HEAP32[(($arrayidx_i_i_i_i38)>>2)];
 var $tobool_i_i_i39=($6|0)==0;
 if($tobool_i_i_i39){label=5;break;}else{label=7;break;}
 case 5: 
 var $exception_i_i=___cxa_allocate_exception(4);
 var $7=$exception_i_i;
 __ZNSt8bad_castC2Ev($7);
 (function() { try { __THREW__ = 0; return ___cxa_throw($exception_i_i,10264,(376)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=6;break; } else { label=43;break; }
 case 6: 
 throw "Reached an unreachable!";
 case 7: 
 var $8=$6;
 var $__s_i_i=$__digits;
 var $__size__i_i=$__digits;
 var $9=HEAP8[($__size__i_i)];
 var $conv_i_i=($9&255);
 var $and_i_i=$conv_i_i&1;
 var $tobool_i_i=($and_i_i|0)==0;
 if($tobool_i_i){label=9;break;}else{label=8;break;}
 case 8: 
 var $__size__i23_i=(($__digits+4)|0);
 var $10=HEAP32[(($__size__i23_i)>>2)];
 var $cond_i=$10;label=10;break;
 case 9: 
 var $shr_i_i28=$conv_i_i>>>1;
 var $cond_i=$shr_i_i28;label=10;break;
 case 10: 
 var $cond_i;
 var $cmp=($cond_i|0)==0;
 if($cmp){var $15=0;label=16;break;}else{label=11;break;}
 case 11: 
 var $and_i_i_i_i=$9&1;
 var $tobool_i_i_i_i=(($and_i_i_i_i<<24)>>24)==0;
 if($tobool_i_i_i_i){label=13;break;}else{label=12;break;}
 case 12: 
 var $__data__i21_i_i_i=(($__digits+8)|0);
 var $11=HEAP32[(($__data__i21_i_i_i)>>2)];
 var $cond_i_i_i=$11;label=14;break;
 case 13: 
 var $arrayidx_i_i_i_i=(($__s_i_i+1)|0);
 var $cond_i_i_i=$arrayidx_i_i_i_i;label=14;break;
 case 14: 
 var $cond_i_i_i;
 var $12=HEAP8[($cond_i_i_i)];
 var $13=$6;
 var $vtable_i=HEAP32[(($13)>>2)];
 var $vfn_i=(($vtable_i+28)|0);
 var $14=HEAP32[(($vfn_i)>>2)];
 var $call_i59=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$14]($8,45) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=15;break; } else { label=43;break; }
 case 15: 
 var $cmp8=(($12<<24)>>24)==(($call_i59<<24)>>24);
 var $15=$cmp8;label=16;break;
 case 16: 
 var $15;
 HEAP32[(($__grp49)>>2)]=0; HEAP32[((($__grp49)+(4))>>2)]=0; HEAP32[((($__grp49)+(8))>>2)]=0;
 HEAP32[(($__size__i_i452)>>2)]=0; HEAP32[((($__size__i_i452)+(4))>>2)]=0; HEAP32[((($__size__i_i452)+(8))>>2)]=0;
 HEAP32[(($__size__i_i395)>>2)]=0; HEAP32[((($__size__i_i395)+(4))>>2)]=0; HEAP32[((($__size__i_i395)+(8))>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri($__intl,$15,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=17;break; } else { label=44;break; }
 case 17: 
 var $arraydecay=(($__mbuf)|0);
 var $16=HEAP8[($__size__i_i)];
 var $conv_i_i180=($16&255);
 var $and_i_i181=$conv_i_i180&1;
 var $tobool_i_i182=($and_i_i181|0)==0;
 if($tobool_i_i182){label=19;break;}else{label=18;break;}
 case 18: 
 var $__size__i23_i189=(($__digits+4)|0);
 var $17=HEAP32[(($__size__i23_i189)>>2)];
 var $cond_i201=$17;label=20;break;
 case 19: 
 var $shr_i_i19929=$conv_i_i180>>>1;
 var $cond_i201=$shr_i_i19929;label=20;break;
 case 20: 
 var $cond_i201;
 var $18=HEAP32[(($__fd)>>2)];
 var $cmp14=($cond_i201|0)>($18|0);
 if($cmp14){label=21;break;}else{label=31;break;}
 case 21: 
 if($tobool_i_i182){label=23;break;}else{label=22;break;}
 case 22: 
 var $__size__i23_i364=(($__digits+4)|0);
 var $19=HEAP32[(($__size__i23_i364)>>2)];
 var $cond_i376=$19;label=24;break;
 case 23: 
 var $shr_i_i37433=$conv_i_i180>>>1;
 var $cond_i376=$shr_i_i37433;label=24;break;
 case 24: 
 var $cond_i376;
 var $sub=((($cond_i376)-($18))|0);
 var $mul=$sub<<1;
 var $20=HEAP8[($__size__i_i395)];
 var $conv_i_i396=($20&255);
 var $and_i_i397=$conv_i_i396&1;
 var $tobool_i_i398=($and_i_i397|0)==0;
 if($tobool_i_i398){label=26;break;}else{label=25;break;}
 case 25: 
 var $__size__i23_i405=(($__sn+4)|0);
 var $21=HEAP32[(($__size__i23_i405)>>2)];
 var $cond_i417=$21;label=27;break;
 case 26: 
 var $shr_i_i41534=$conv_i_i396>>>1;
 var $cond_i417=$shr_i_i41534;label=27;break;
 case 27: 
 var $cond_i417;
 var $22=HEAP8[($__size__i_i452)];
 var $conv_i_i453=($22&255);
 var $and_i_i454=$conv_i_i453&1;
 var $tobool_i_i455=($and_i_i454|0)==0;
 if($tobool_i_i455){label=29;break;}else{label=28;break;}
 case 28: 
 var $__size__i23_i462=(($__sym+4)|0);
 var $23=HEAP32[(($__size__i23_i462)>>2)];
 var $cond_i474=$23;label=30;break;
 case 29: 
 var $shr_i_i47235=$conv_i_i453>>>1;
 var $cond_i474=$shr_i_i47235;label=30;break;
 case 30: 
 var $cond_i474;
 var $add48=$mul|1;
 var $add18=((($add48)+($cond_i417))|0);
 var $add19=((($add18)+($cond_i474))|0);
 var $add19_pn=$add19;label=38;break;
 case 31: 
 var $24=HEAP8[($__size__i_i395)];
 var $conv_i_i494=($24&255);
 var $and_i_i495=$conv_i_i494&1;
 var $tobool_i_i496=($and_i_i495|0)==0;
 if($tobool_i_i496){label=33;break;}else{label=32;break;}
 case 32: 
 var $__size__i23_i503=(($__sn+4)|0);
 var $25=HEAP32[(($__size__i23_i503)>>2)];
 var $cond_i515=$25;label=34;break;
 case 33: 
 var $shr_i_i51330=$conv_i_i494>>>1;
 var $cond_i515=$shr_i_i51330;label=34;break;
 case 34: 
 var $cond_i515;
 var $26=HEAP8[($__size__i_i452)];
 var $conv_i_i535=($26&255);
 var $and_i_i536=$conv_i_i535&1;
 var $tobool_i_i537=($and_i_i536|0)==0;
 if($tobool_i_i537){label=36;break;}else{label=35;break;}
 case 35: 
 var $__size__i23_i544=(($__sym+4)|0);
 var $27=HEAP32[(($__size__i23_i544)>>2)];
 var $cond_i556=$27;label=37;break;
 case 36: 
 var $shr_i_i55431=$conv_i_i535>>>1;
 var $cond_i556=$shr_i_i55431;label=37;break;
 case 37: 
 var $cond_i556;
 var $add23=((($cond_i515)+(2))|0);
 var $add24=((($add23)+($cond_i556))|0);
 var $add19_pn=$add24;label=38;break;
 case 38: 
 var $add19_pn;
 var $cond=((($add19_pn)+($18))|0);
 var $cmp26=($cond>>>0)>100;
 if($cmp26){label=39;break;}else{var $__mb_0=$arraydecay;var $__h_sroa_0_1=0;var $40=$16;label=47;break;}
 case 39: 
 var $call30=_malloc($cond);
 var $cmp32=($call30|0)==0;
 if($cmp32){label=40;break;}else{var $__mb_0=$call30;var $__h_sroa_0_1=$call30;var $40=$16;label=47;break;}
 case 40: 
 (function() { try { __THREW__ = 0; return __ZSt17__throw_bad_allocv() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=41;break; } else { label=42;break; }
 case 41: 
 var $_pre=HEAP8[($__size__i_i)];
 var $__mb_0=0;var $__h_sroa_0_1=0;var $40=$_pre;label=47;break;
 case 42: 
 var $28$0 = ___cxa_find_matching_catch(-1, -1); var $28$1 = tempRet0;
 var $29=$28$0;
 var $30=$28$1;
 var $ehselector_slot_0=$30;var $exn_slot_0=$29;label=58;break;
 case 43: 
 var $31$0 = ___cxa_find_matching_catch(-1, -1); var $31$1 = tempRet0;
 var $32=$31$0;
 var $33=$31$1;
 var $ehselector_slot_1=$33;var $exn_slot_1=$32;label=59;break;
 case 44: 
 var $34$0 = ___cxa_find_matching_catch(-1, -1); var $34$1 = tempRet0;
 var $35=$34$0;
 var $36=$34$1;
 var $ehselector_slot_0=$36;var $exn_slot_0=$35;label=58;break;
 case 45: 
 var $37$0 = ___cxa_find_matching_catch(-1, -1); var $37$1 = tempRet0;
 var $38=$37$0;
 var $39=$37$1;
 var $tobool_i_i_i328=($__h_sroa_0_1|0)==0;
 if($tobool_i_i_i328){var $ehselector_slot_0=$39;var $exn_slot_0=$38;label=58;break;}else{label=46;break;}
 case 46: 
 _free($__h_sroa_0_1);
 var $ehselector_slot_0=$39;var $exn_slot_0=$38;label=58;break;
 case 47: 
 var $40;
 var $__h_sroa_0_1;
 var $__mb_0;
 var $__fmtflags__i=(($__iob+4)|0);
 var $41=HEAP32[(($__fmtflags__i)>>2)];
 var $and_i_i_i283=$40&1;
 var $tobool_i_i_i284=(($and_i_i_i283<<24)>>24)==0;
 if($tobool_i_i_i284){label=49;break;}else{label=48;break;}
 case 48: 
 var $__data__i21_i_i291=(($__digits+8)|0);
 var $42=HEAP32[(($__data__i21_i_i291)>>2)];
 var $cond_i_i=$42;var $cond_i_i30250=$42;label=50;break;
 case 49: 
 var $arrayidx_i_i_i300=(($__s_i_i+1)|0);
 var $arrayidx_i_i_i258=(($__s_i_i+1)|0);
 var $cond_i_i=$arrayidx_i_i_i258;var $cond_i_i30250=$arrayidx_i_i_i300;label=50;break;
 case 50: 
 var $cond_i_i30250;
 var $cond_i_i;
 var $conv_i_i221=($40&255);
 var $and_i_i222=$conv_i_i221&1;
 var $tobool_i_i223=($and_i_i222|0)==0;
 if($tobool_i_i223){label=52;break;}else{label=51;break;}
 case 51: 
 var $__size__i23_i230=(($__digits+4)|0);
 var $43=HEAP32[(($__size__i23_i230)>>2)];
 var $cond_i242=$43;label=53;break;
 case 52: 
 var $shr_i_i24032=$conv_i_i221>>>1;
 var $cond_i242=$shr_i_i24032;label=53;break;
 case 53: 
 var $cond_i242;
 var $add_ptr=(($cond_i_i+$cond_i242)|0);
 var $44=HEAP8[($__dp)];
 var $45=HEAP8[($__ts)];
 (function() { try { __THREW__ = 0; return __ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i($__mb_0,$__mi,$__me,$41,$cond_i_i30250,$add_ptr,$8,$15,$__pat,$44,$45,$__grp,$__sym,$__sn,$18) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=54;break; } else { label=45;break; }
 case 54: 
 var $46=(($__s)|0);
 var $47=HEAP32[(($46)>>2)];
 var $48=(($agg_tmp)|0);
 HEAP32[(($48)>>2)]=$47;
 var $49=HEAP32[(($__mi)>>2)];
 var $50=HEAP32[(($__me)>>2)];
 (function() { try { __THREW__ = 0; return __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result,$agg_tmp,$__mb_0,$49,$50,$__iob,$__fl) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=55;break; } else { label=45;break; }
 case 55: 
 var $tobool_i_i_i=($__h_sroa_0_1|0)==0;
 if($tobool_i_i_i){label=57;break;}else{label=56;break;}
 case 56: 
 _free($__h_sroa_0_1);
 label=57;break;
 case 57: 
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__sn);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grp);
 var $51=HEAP32[(($__locale__i)>>2)];
 var $52=(($51)|0);
 var $call_i=__ZNSt3__114__shared_count16__release_sharedEv($52);
 STACKTOP=sp;return;
 case 58: 
 var $exn_slot_0;
 var $ehselector_slot_0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__sn);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grp);
 var $ehselector_slot_1=$ehselector_slot_0;var $exn_slot_1=$exn_slot_0;label=59;break;
 case 59: 
 var $exn_slot_1;
 var $ehselector_slot_1;
 var $53=HEAP32[(($__locale__i)>>2)];
 var $54=(($53)|0);
 var $call_i43=__ZNSt3__114__shared_count16__release_sharedEv($54);
 var $lpad_val$0=$exn_slot_1;
 var $lpad_val$1=0;
 var $lpad_val47$0=$lpad_val$0;
 var $lpad_val47$1=$ehselector_slot_1;
 ___resumeException($lpad_val47$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this){
 var label=0;
 var $0=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($0);
 var $1=$this;
 __ZdlPv($1);
 return;
}
function __ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev($this){
 var label=0;
 var $0=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($0);
 return;
}
function __ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe($agg_result,$this,$__s,$__intl,$__iob,$__fl,$__units){
 var label=0;
 var tempVarArgs=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+576)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__s; $__s=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__s)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__p_i_i_i=sp;
 var $__buf=(sp)+(16);
 var $__bb=(sp)+(120);
 var $__digits=(sp)+(128);
 var $__loc=(sp)+(528);
 var $__pat=(sp)+(536);
 var $__dp=(sp)+(544);
 var $__ts=(sp)+(552);
 var $__grp=(sp)+(560);
 var $__grp63=$__grp;
 var $__sym=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__size__i_i351=$__sym;
 var $__sn=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__size__i_i=$__sn;
 var $__fd=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__mbuf=STACKTOP;STACKTOP = (STACKTOP + 400)|0;(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__mi=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__me=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $agg_tmp=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $arraydecay=(($__buf)|0);
 HEAP32[(($__bb)>>2)]=$arraydecay;
 var $arraydecay2=(($__digits)|0);
 var $call=_snprintf($arraydecay,100,3008,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAPF64[((tempVarArgs)>>3)]=$__units,tempVarArgs)); STACKTOP=tempVarArgs;
 var $cmp=($call>>>0)>99;
 if($cmp){label=2;break;}else{var $__db_0=$arraydecay2;var $__n_0=$call;var $__hn_sroa_0_1=0;var $__hd_sroa_0_1=0;label=15;break;}
 case 2: 
 var $0=HEAP8[(15944)];
 var $guard_uninitialized_i=(($0<<24)>>24)==0;
 if($guard_uninitialized_i){label=3;break;}else{label=7;break;}
 case 3: 
 var $1=___cxa_guard_acquire(15944);
 var $tobool_i=($1|0)==0;
 if($tobool_i){label=7;break;}else{label=4;break;}
 case 4: 
 var $call_i=(function() { try { __THREW__ = 0; return _newlocale(2147483647,2960,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=5;break; } else { label=6;break; }
 case 5: 
 HEAP32[((13952)>>2)]=$call_i;
 label=7;break;
 case 6: 
 var $2$0 = ___cxa_find_matching_catch(-1, -1); var $2$1 = tempRet0;
 var $eh_lpad_body$1=$2$1;var $eh_lpad_body$0=$2$0;var $__hn_sroa_0_0_lpad_body=0;var $__hd_sroa_0_0_lpad_body=0;label=12;break;
 case 7: 
 var $3=HEAP32[((13952)>>2)];
 var $call6=(function() { try { __THREW__ = 0; return __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__bb,$3,3008,(tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,(assert((STACKTOP|0) < (STACK_MAX|0))|0),HEAPF64[((tempVarArgs)>>3)]=$__units,tempVarArgs)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })(); STACKTOP=tempVarArgs;if (!__THREW__) { label=8;break; } else { var $__hn_sroa_0_0=0;var $__hd_sroa_0_0=0;label=11;break; }
 case 8: 
 var $4=HEAP32[(($__bb)>>2)];
 var $cmp7=($4|0)==0;
 if($cmp7){label=9;break;}else{var $8=$4;label=13;break;}
 case 9: 
 (function() { try { __THREW__ = 0; return __ZSt17__throw_bad_allocv() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=10;break; } else { var $__hn_sroa_0_0=0;var $__hd_sroa_0_0=0;label=11;break; }
 case 10: 
 var $_pre=HEAP32[(($__bb)>>2)];
 var $8=$_pre;label=13;break;
 case 11: 
 var $__hd_sroa_0_0;
 var $__hn_sroa_0_0;
 var $5$0 = ___cxa_find_matching_catch(-1, -1); var $5$1 = tempRet0;
 var $eh_lpad_body$1=$5$1;var $eh_lpad_body$0=$5$0;var $__hn_sroa_0_0_lpad_body=$__hn_sroa_0_0;var $__hd_sroa_0_0_lpad_body=$__hd_sroa_0_0;label=12;break;
 case 12: 
 var $__hd_sroa_0_0_lpad_body;
 var $__hn_sroa_0_0_lpad_body;
 var $eh_lpad_body$0;
 var $eh_lpad_body$1;
 var $6=$eh_lpad_body$0;
 var $7=$eh_lpad_body$1;
 var $ehselector_slot_2=$7;var $exn_slot_2=$6;var $__hn_sroa_0_2=$__hn_sroa_0_0_lpad_body;var $__hd_sroa_0_2=$__hd_sroa_0_0_lpad_body;label=59;break;
 case 13: 
 var $8;
 var $mul=$call6<<2;
 var $call11=_malloc($mul);
 var $9=$call11;
 var $lnot_i=($call11|0)==0;
 if($lnot_i){label=14;break;}else{var $__db_0=$9;var $__n_0=$call6;var $__hn_sroa_0_1=$8;var $__hd_sroa_0_1=$9;label=15;break;}
 case 14: 
 (function() { try { __THREW__ = 0; return __ZSt17__throw_bad_allocv() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $__db_0=$9;var $__n_0=$call6;var $__hn_sroa_0_1=$8;var $__hd_sroa_0_1=$9;label=15;break; } else { var $__hn_sroa_0_0=$8;var $__hd_sroa_0_0=$9;label=11;break; }
 case 15: 
 var $__hd_sroa_0_1;
 var $__hn_sroa_0_1;
 var $__n_0;
 var $__db_0;
 (function() { try { __THREW__ = 0; return __ZNKSt3__18ios_base6getlocEv($__loc,$__iob) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=16;break; } else { var $__hn_sroa_0_0=$__hn_sroa_0_1;var $__hd_sroa_0_0=$__hd_sroa_0_1;label=11;break; }
 case 16: 
 var $__locale__i=(($__loc)|0);
 var $10=HEAP32[(($__locale__i)>>2)];
 var $11=$__p_i_i_i;
 var $12=HEAP32[((15376)>>2)];
 var $cmp_i_i_i51=($12|0)==-1;
 if($cmp_i_i_i51){label=18;break;}else{label=17;break;}
 case 17: 
 var $ref_tmp_i_sroa_0_0__idx_i_i=(($__p_i_i_i)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i)>>2)]=15376;
 var $ref_tmp_i_sroa_1_4__idx6_i_i=(($__p_i_i_i+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i=(($__p_i_i_i+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(15376,$11,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=18;break; } else { label=44;break; }
 case 18: 
 var $13=HEAP32[((15380)>>2)];
 var $sub_i_i=((($13)-(1))|0);
 var $__end__i_i_i_i=(($10+12)|0);
 var $14=HEAP32[(($__end__i_i_i_i)>>2)];
 var $__begin__i_i_i_i=(($10+8)|0);
 var $15=HEAP32[(($__begin__i_i_i_i)>>2)];
 var $sub_ptr_lhs_cast_i_i_i_i=$14;
 var $sub_ptr_rhs_cast_i_i_i_i=$15;
 var $sub_ptr_sub_i_i_i_i=((($sub_ptr_lhs_cast_i_i_i_i)-($sub_ptr_rhs_cast_i_i_i_i))|0);
 var $sub_ptr_div_i_i_i_i=$sub_ptr_sub_i_i_i_i>>2;
 var $cmp_i_i1_i=($sub_ptr_div_i_i_i_i>>>0)>($sub_i_i>>>0);
 if($cmp_i_i1_i){label=19;break;}else{label=20;break;}
 case 19: 
 var $arrayidx_i_i_i_i=(($15+($sub_i_i<<2))|0);
 var $16=HEAP32[(($arrayidx_i_i_i_i)>>2)];
 var $tobool_i_i_i53=($16|0)==0;
 if($tobool_i_i_i53){label=20;break;}else{label=22;break;}
 case 20: 
 var $exception_i_i=___cxa_allocate_exception(4);
 var $17=$exception_i_i;
 __ZNSt8bad_castC2Ev($17);
 (function() { try { __THREW__ = 0; return ___cxa_throw($exception_i_i,10264,(376)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=21;break; } else { label=44;break; }
 case 21: 
 throw "Reached an unreachable!";
 case 22: 
 var $18=$16;
 var $19=HEAP32[(($__bb)>>2)];
 var $add_ptr=(($19+$__n_0)|0);
 var $20=$16;
 var $vtable_i=HEAP32[(($20)>>2)];
 var $vfn_i=(($vtable_i+48)|0);
 var $21=HEAP32[(($vfn_i)>>2)];
 var $call_i159=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$21]($18,$19,$add_ptr,$__db_0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=23;break; } else { label=44;break; }
 case 23: 
 var $cmp24=($__n_0|0)==0;
 if($cmp24){var $24=0;label=25;break;}else{label=24;break;}
 case 24: 
 var $22=HEAP32[(($__bb)>>2)];
 var $23=HEAP8[($22)];
 var $cmp25=(($23<<24)>>24)==45;
 var $24=$cmp25;label=25;break;
 case 25: 
 var $24;
 HEAP32[(($__grp63)>>2)]=0; HEAP32[((($__grp63)+(4))>>2)]=0; HEAP32[((($__grp63)+(8))>>2)]=0;
 HEAP32[(($__size__i_i351)>>2)]=0; HEAP32[((($__size__i_i351)+(4))>>2)]=0; HEAP32[((($__size__i_i351)+(8))>>2)]=0;
 HEAP32[(($__size__i_i)>>2)]=0; HEAP32[((($__size__i_i)+(4))>>2)]=0; HEAP32[((($__size__i_i)+(8))>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri($__intl,$24,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=26;break; } else { label=45;break; }
 case 26: 
 var $arraydecay30=(($__mbuf)|0);
 var $25=HEAP32[(($__fd)>>2)];
 var $cmp32=($__n_0|0)>($25|0);
 if($cmp32){label=27;break;}else{label=34;break;}
 case 27: 
 var $sub=((($__n_0)-($25))|0);
 var $mul33=$sub<<1;
 var $26=HEAP8[($__size__i_i)];
 var $conv_i_i=($26&255);
 var $and_i_i=$conv_i_i&1;
 var $tobool_i_i=($and_i_i|0)==0;
 if($tobool_i_i){label=29;break;}else{label=28;break;}
 case 28: 
 var $__size__i23_i=(($__sn+4)|0);
 var $27=HEAP32[(($__size__i23_i)>>2)];
 var $cond_i=$27;label=30;break;
 case 29: 
 var $shr_i_i49=$conv_i_i>>>1;
 var $cond_i=$shr_i_i49;label=30;break;
 case 30: 
 var $cond_i;
 var $28=HEAP8[($__size__i_i351)];
 var $conv_i_i352=($28&255);
 var $and_i_i353=$conv_i_i352&1;
 var $tobool_i_i354=($and_i_i353|0)==0;
 if($tobool_i_i354){label=32;break;}else{label=31;break;}
 case 31: 
 var $__size__i23_i361=(($__sym+4)|0);
 var $29=HEAP32[(($__size__i23_i361)>>2)];
 var $cond_i373=$29;label=33;break;
 case 32: 
 var $shr_i_i37150=$conv_i_i352>>>1;
 var $cond_i373=$shr_i_i37150;label=33;break;
 case 33: 
 var $cond_i373;
 var $add62=$mul33|1;
 var $add36=((($add62)+($cond_i))|0);
 var $add37=((($add36)+($cond_i373))|0);
 var $add37_pn=$add37;label=41;break;
 case 34: 
 var $30=HEAP8[($__size__i_i)];
 var $conv_i_i424=($30&255);
 var $and_i_i425=$conv_i_i424&1;
 var $tobool_i_i426=($and_i_i425|0)==0;
 if($tobool_i_i426){label=36;break;}else{label=35;break;}
 case 35: 
 var $__size__i23_i433=(($__sn+4)|0);
 var $31=HEAP32[(($__size__i23_i433)>>2)];
 var $cond_i445=$31;label=37;break;
 case 36: 
 var $shr_i_i44347=$conv_i_i424>>>1;
 var $cond_i445=$shr_i_i44347;label=37;break;
 case 37: 
 var $cond_i445;
 var $32=HEAP8[($__size__i_i351)];
 var $conv_i_i465=($32&255);
 var $and_i_i466=$conv_i_i465&1;
 var $tobool_i_i467=($and_i_i466|0)==0;
 if($tobool_i_i467){label=39;break;}else{label=38;break;}
 case 38: 
 var $__size__i23_i474=(($__sym+4)|0);
 var $33=HEAP32[(($__size__i23_i474)>>2)];
 var $cond_i486=$33;label=40;break;
 case 39: 
 var $shr_i_i48448=$conv_i_i465>>>1;
 var $cond_i486=$shr_i_i48448;label=40;break;
 case 40: 
 var $cond_i486;
 var $add41=((($cond_i445)+(2))|0);
 var $add42=((($add41)+($cond_i486))|0);
 var $add37_pn=$add42;label=41;break;
 case 41: 
 var $add37_pn;
 var $cond=((($add37_pn)+($25))|0);
 var $cmp44=($cond>>>0)>100;
 if($cmp44){label=42;break;}else{var $__mb_0=$arraydecay30;var $__hw_sroa_0_1=0;label=48;break;}
 case 42: 
 var $mul46=$cond<<2;
 var $call49=_malloc($mul46);
 var $34=$call49;
 var $cmp51=($call49|0)==0;
 if($cmp51){label=43;break;}else{var $__mb_0=$34;var $__hw_sroa_0_1=$34;label=48;break;}
 case 43: 
 (function() { try { __THREW__ = 0; return __ZSt17__throw_bad_allocv() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $__mb_0=$34;var $__hw_sroa_0_1=$34;label=48;break; } else { var $__hw_sroa_0_0=$34;label=46;break; }
 case 44: 
 var $35$0 = ___cxa_find_matching_catch(-1, -1); var $35$1 = tempRet0;
 var $36=$35$0;
 var $37=$35$1;
 var $ehselector_slot_1=$37;var $exn_slot_1=$36;label=58;break;
 case 45: 
 var $38$0 = ___cxa_find_matching_catch(-1, -1); var $38$1 = tempRet0;
 var $39=$38$0;
 var $40=$38$1;
 var $ehselector_slot_0=$40;var $exn_slot_0=$39;label=57;break;
 case 46: 
 var $__hw_sroa_0_0;
 var $41$0 = ___cxa_find_matching_catch(-1, -1); var $41$1 = tempRet0;
 var $42=$41$0;
 var $43=$41$1;
 var $tobool_i_i_i545=($__hw_sroa_0_0|0)==0;
 if($tobool_i_i_i545){var $ehselector_slot_0=$43;var $exn_slot_0=$42;label=57;break;}else{label=47;break;}
 case 47: 
 var $44=$__hw_sroa_0_0;
 _free($44);
 var $ehselector_slot_0=$43;var $exn_slot_0=$42;label=57;break;
 case 48: 
 var $__hw_sroa_0_1;
 var $__mb_0;
 var $__fmtflags__i=(($__iob+4)|0);
 var $45=HEAP32[(($__fmtflags__i)>>2)];
 var $add_ptr58=(($__db_0+($__n_0<<2))|0);
 var $46=HEAP32[(($__dp)>>2)];
 var $47=HEAP32[(($__ts)>>2)];
 (function() { try { __THREW__ = 0; return __ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i($__mb_0,$__mi,$__me,$45,$__db_0,$add_ptr58,$18,$24,$__pat,$46,$47,$__grp,$__sym,$__sn,$25) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=49;break; } else { var $__hw_sroa_0_0=$__hw_sroa_0_1;label=46;break; }
 case 49: 
 var $48=(($__s)|0);
 var $49=HEAP32[(($48)>>2)];
 var $50=(($agg_tmp)|0);
 HEAP32[(($50)>>2)]=$49;
 var $51=HEAP32[(($__mi)>>2)];
 var $52=HEAP32[(($__me)>>2)];
 (function() { try { __THREW__ = 0; return __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result,$agg_tmp,$__mb_0,$51,$52,$__iob,$__fl) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=50;break; } else { var $__hw_sroa_0_0=$__hw_sroa_0_1;label=46;break; }
 case 50: 
 var $tobool_i_i_i578=($__hw_sroa_0_1|0)==0;
 if($tobool_i_i_i578){label=52;break;}else{label=51;break;}
 case 51: 
 var $53=$__hw_sroa_0_1;
 _free($53);
 label=52;break;
 case 52: 
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($__sn);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grp);
 var $54=HEAP32[(($__locale__i)>>2)];
 var $55=(($54)|0);
 var $call_i56=__ZNSt3__114__shared_count16__release_sharedEv($55);
 var $tobool_i_i_i397=($__hd_sroa_0_1|0)==0;
 if($tobool_i_i_i397){label=54;break;}else{label=53;break;}
 case 53: 
 var $56=$__hd_sroa_0_1;
 _free($56);
 label=54;break;
 case 54: 
 var $tobool_i_i_i314=($__hn_sroa_0_1|0)==0;
 if($tobool_i_i_i314){label=56;break;}else{label=55;break;}
 case 55: 
 _free($__hn_sroa_0_1);
 label=56;break;
 case 56: 
 STACKTOP=sp;return;
 case 57: 
 var $exn_slot_0;
 var $ehselector_slot_0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($__sn);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grp);
 var $ehselector_slot_1=$ehselector_slot_0;var $exn_slot_1=$exn_slot_0;label=58;break;
 case 58: 
 var $exn_slot_1;
 var $ehselector_slot_1;
 var $57=HEAP32[(($__locale__i)>>2)];
 var $58=(($57)|0);
 var $call_i58=__ZNSt3__114__shared_count16__release_sharedEv($58);
 var $ehselector_slot_2=$ehselector_slot_1;var $exn_slot_2=$exn_slot_1;var $__hn_sroa_0_2=$__hn_sroa_0_1;var $__hd_sroa_0_2=$__hd_sroa_0_1;label=59;break;
 case 59: 
 var $__hd_sroa_0_2;
 var $__hn_sroa_0_2;
 var $exn_slot_2;
 var $ehselector_slot_2;
 var $tobool_i_i_i193=($__hd_sroa_0_2|0)==0;
 if($tobool_i_i_i193){label=61;break;}else{label=60;break;}
 case 60: 
 var $59=$__hd_sroa_0_2;
 _free($59);
 label=61;break;
 case 61: 
 var $tobool_i_i_i=($__hn_sroa_0_2|0)==0;
 if($tobool_i_i_i){label=63;break;}else{label=62;break;}
 case 62: 
 _free($__hn_sroa_0_2);
 label=63;break;
 case 63: 
 var $lpad_val$0=$exn_slot_2;
 var $lpad_val$1=0;
 var $lpad_val67$0=$lpad_val$0;
 var $lpad_val67$1=$ehselector_slot_2;
 ___resumeException($lpad_val67$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri($__intl,$__neg,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+40)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__p_i_i_i62=sp;
 var $__p_i_i_i=(sp)+(16);
 var $ref_tmp=(sp)+(32);
 var $tmpcast59=$ref_tmp;
 var $ref_tmp4=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $0=$ref_tmp4;
 var $ref_tmp6=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $tmpcast58=$ref_tmp6;
 var $ref_tmp7=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $1=$ref_tmp7;
 var $ref_tmp11=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $2=$ref_tmp11;
 var $ref_tmp13=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $3=$ref_tmp13;
 var $ref_tmp21=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $tmpcast57=$ref_tmp21;
 var $ref_tmp22=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $4=$ref_tmp22;
 var $ref_tmp25=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $tmpcast=$ref_tmp25;
 var $ref_tmp26=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $5=$ref_tmp26;
 var $ref_tmp31=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $6=$ref_tmp31;
 var $ref_tmp33=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $7=$ref_tmp33;
 var $__locale__i=(($__loc)|0);
 var $8=HEAP32[(($__locale__i)>>2)];
 if($__intl){label=2;break;}else{label=31;break;}
 case 2: 
 var $9=$__p_i_i_i;
 var $10=HEAP32[((15840)>>2)];
 var $cmp_i_i_i60=($10|0)==-1;
 if($cmp_i_i_i60){label=4;break;}else{label=3;break;}
 case 3: 
 var $ref_tmp_i_sroa_0_0__idx_i_i=(($__p_i_i_i)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i)>>2)]=15840;
 var $ref_tmp_i_sroa_1_4__idx6_i_i=(($__p_i_i_i+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i=(($__p_i_i_i+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i)>>2)]=0;
 __ZNSt3__111__call_onceERVmPvPFvS2_E(15840,$9,276);
 label=4;break;
 case 4: 
 var $11=HEAP32[((15844)>>2)];
 var $sub_i_i=((($11)-(1))|0);
 var $__end__i_i_i_i=(($8+12)|0);
 var $12=HEAP32[(($__end__i_i_i_i)>>2)];
 var $__begin__i_i_i_i=(($8+8)|0);
 var $13=HEAP32[(($__begin__i_i_i_i)>>2)];
 var $sub_ptr_lhs_cast_i_i_i_i=$12;
 var $sub_ptr_rhs_cast_i_i_i_i=$13;
 var $sub_ptr_sub_i_i_i_i=((($sub_ptr_lhs_cast_i_i_i_i)-($sub_ptr_rhs_cast_i_i_i_i))|0);
 var $sub_ptr_div_i_i_i_i=$sub_ptr_sub_i_i_i_i>>2;
 var $cmp_i_i1_i=($sub_ptr_div_i_i_i_i>>>0)>($sub_i_i>>>0);
 if($cmp_i_i1_i){label=5;break;}else{label=6;break;}
 case 5: 
 var $arrayidx_i_i_i_i=(($13+($sub_i_i<<2))|0);
 var $14=HEAP32[(($arrayidx_i_i_i_i)>>2)];
 var $tobool_i_i_i=($14|0)==0;
 if($tobool_i_i_i){label=6;break;}else{label=7;break;}
 case 6: 
 var $exception_i_i=___cxa_allocate_exception(4);
 var $15=$exception_i_i;
 __ZNSt8bad_castC2Ev($15);
 ___cxa_throw($exception_i_i,10264,(376));
 throw "Reached an unreachable!";
 case 7: 
 var $16=$14;
 var $17=$14;
 var $vtable_i=HEAP32[(($17)>>2)];
 if($__neg){label=8;break;}else{label=14;break;}
 case 8: 
 var $vfn_i=(($vtable_i+44)|0);
 var $18=HEAP32[(($vfn_i)>>2)];
 FUNCTION_TABLE[$18]($tmpcast59,$16);
 var $19=$__pat;
 var $20=HEAP32[(($ref_tmp)>>2)];
 tempBigInt=$20;HEAP8[($19)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($19)+(1))|0)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($19)+(2))|0)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($19)+(3))|0)]=tempBigInt&0xff;
 var $21=$14;
 var $vtable_i39=HEAP32[(($21)>>2)];
 var $vfn_i40=(($vtable_i39+32)|0);
 var $22=HEAP32[(($vfn_i40)>>2)];
 FUNCTION_TABLE[$22]($ref_tmp4,$16);
 var $__size__i46_i_i_i=$__sn;
 var $23=HEAP8[($__size__i46_i_i_i)];
 var $and_i_i_i_i=$23&1;
 var $tobool_i_i_i_i=(($and_i_i_i_i<<24)>>24)==0;
 if($tobool_i_i_i_i){label=10;break;}else{label=9;break;}
 case 9: 
 var $__data__i36_i_i_i=(($__sn+8)|0);
 var $24=HEAP32[(($__data__i36_i_i_i)>>2)];
 HEAP32[(($24)>>2)]=0;
 var $__size__i24_i_i_i=(($__sn+4)|0);
 HEAP32[(($__size__i24_i_i_i)>>2)]=0;
 label=11;break;
 case 10: 
 var $__data__i_i_i_i=(($__sn+4)|0);
 HEAP32[(($__data__i_i_i_i)>>2)]=0;
 HEAP8[($__size__i46_i_i_i)]=0;
 label=11;break;
 case 11: 
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sn,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=13;break; } else { label=12;break; }
 case 12: 
 var $25$0 = ___cxa_find_matching_catch(-1, -1,0); var $25$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 13: 
 assert(12 % 1 === 0);HEAP32[(($__size__i46_i_i_i)>>2)]=HEAP32[(($0)>>2)];HEAP32[((($__size__i46_i_i_i)+(4))>>2)]=HEAP32[((($0)+(4))>>2)];HEAP32[((($__size__i46_i_i_i)+(8))>>2)]=HEAP32[((($0)+(8))>>2)];
 HEAP32[(($0)>>2)]=0; HEAP32[((($0)+(4))>>2)]=0; HEAP32[((($0)+(8))>>2)]=0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($ref_tmp4);
 label=20;break;
 case 14: 
 var $vfn_i46=(($vtable_i+40)|0);
 var $26=HEAP32[(($vfn_i46)>>2)];
 FUNCTION_TABLE[$26]($tmpcast58,$16);
 var $27=$__pat;
 var $28=HEAP32[(($ref_tmp6)>>2)];
 tempBigInt=$28;HEAP8[($27)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($27)+(1))|0)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($27)+(2))|0)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($27)+(3))|0)]=tempBigInt&0xff;
 var $29=$14;
 var $vtable_i49=HEAP32[(($29)>>2)];
 var $vfn_i50=(($vtable_i49+28)|0);
 var $30=HEAP32[(($vfn_i50)>>2)];
 FUNCTION_TABLE[$30]($ref_tmp7,$16);
 var $__size__i46_i_i_i119=$__sn;
 var $31=HEAP8[($__size__i46_i_i_i119)];
 var $and_i_i_i_i121=$31&1;
 var $tobool_i_i_i_i122=(($and_i_i_i_i121<<24)>>24)==0;
 if($tobool_i_i_i_i122){label=16;break;}else{label=15;break;}
 case 15: 
 var $__data__i36_i_i_i129=(($__sn+8)|0);
 var $32=HEAP32[(($__data__i36_i_i_i129)>>2)];
 HEAP32[(($32)>>2)]=0;
 var $__size__i24_i_i_i136=(($__sn+4)|0);
 HEAP32[(($__size__i24_i_i_i136)>>2)]=0;
 label=17;break;
 case 16: 
 var $__data__i_i_i_i144=(($__sn+4)|0);
 HEAP32[(($__data__i_i_i_i144)>>2)]=0;
 HEAP8[($__size__i46_i_i_i119)]=0;
 label=17;break;
 case 17: 
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sn,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=19;break; } else { label=18;break; }
 case 18: 
 var $33$0 = ___cxa_find_matching_catch(-1, -1,0); var $33$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 19: 
 assert(12 % 1 === 0);HEAP32[(($__size__i46_i_i_i119)>>2)]=HEAP32[(($1)>>2)];HEAP32[((($__size__i46_i_i_i119)+(4))>>2)]=HEAP32[((($1)+(4))>>2)];HEAP32[((($__size__i46_i_i_i119)+(8))>>2)]=HEAP32[((($1)+(8))>>2)];
 HEAP32[(($1)>>2)]=0; HEAP32[((($1)+(4))>>2)]=0; HEAP32[((($1)+(8))>>2)]=0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($ref_tmp7);
 label=20;break;
 case 20: 
 var $34=$14;
 var $vtable_i195=HEAP32[(($34)>>2)];
 var $vfn_i196=(($vtable_i195+12)|0);
 var $35=HEAP32[(($vfn_i196)>>2)];
 var $call_i197=FUNCTION_TABLE[$35]($16);
 HEAP32[(($__dp)>>2)]=$call_i197;
 var $vtable_i200=HEAP32[(($34)>>2)];
 var $vfn_i201=(($vtable_i200+16)|0);
 var $36=HEAP32[(($vfn_i201)>>2)];
 var $call_i202=FUNCTION_TABLE[$36]($16);
 HEAP32[(($__ts)>>2)]=$call_i202;
 var $37=$14;
 var $vtable_i205=HEAP32[(($37)>>2)];
 var $vfn_i206=(($vtable_i205+20)|0);
 var $38=HEAP32[(($vfn_i206)>>2)];
 FUNCTION_TABLE[$38]($ref_tmp11,$16);
 var $__size__i46_i_i_i275=$__grp;
 var $39=HEAP8[($__size__i46_i_i_i275)];
 var $and_i_i_i_i277=$39&1;
 var $tobool_i_i_i_i278=(($and_i_i_i_i277<<24)>>24)==0;
 if($tobool_i_i_i_i278){label=22;break;}else{label=21;break;}
 case 21: 
 var $__data__i36_i_i_i285=(($__grp+8)|0);
 var $40=HEAP32[(($__data__i36_i_i_i285)>>2)];
 HEAP8[($40)]=0;
 var $__size__i24_i_i_i292=(($__grp+4)|0);
 HEAP32[(($__size__i24_i_i_i292)>>2)]=0;
 label=23;break;
 case 22: 
 var $__s_i45_i_i_i274=$__grp;
 var $arrayidx_i_i_i_i301=(($__s_i45_i_i_i274+1)|0);
 HEAP8[($arrayidx_i_i_i_i301)]=0;
 HEAP8[($__size__i46_i_i_i275)]=0;
 label=23;break;
 case 23: 
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=25;break; } else { label=24;break; }
 case 24: 
 var $41$0 = ___cxa_find_matching_catch(-1, -1,0); var $41$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 25: 
 assert(12 % 1 === 0);HEAP32[(($__size__i46_i_i_i275)>>2)]=HEAP32[(($2)>>2)];HEAP32[((($__size__i46_i_i_i275)+(4))>>2)]=HEAP32[((($2)+(4))>>2)];HEAP32[((($__size__i46_i_i_i275)+(8))>>2)]=HEAP32[((($2)+(8))>>2)];
 HEAP32[(($2)>>2)]=0; HEAP32[((($2)+(4))>>2)]=0; HEAP32[((($2)+(8))>>2)]=0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($ref_tmp11);
 var $42=$14;
 var $vtable_i348=HEAP32[(($42)>>2)];
 var $vfn_i349=(($vtable_i348+24)|0);
 var $43=HEAP32[(($vfn_i349)>>2)];
 FUNCTION_TABLE[$43]($ref_tmp13,$16);
 var $__size__i46_i_i_i418=$__sym;
 var $44=HEAP8[($__size__i46_i_i_i418)];
 var $and_i_i_i_i420=$44&1;
 var $tobool_i_i_i_i421=(($and_i_i_i_i420<<24)>>24)==0;
 if($tobool_i_i_i_i421){label=27;break;}else{label=26;break;}
 case 26: 
 var $__data__i36_i_i_i428=(($__sym+8)|0);
 var $45=HEAP32[(($__data__i36_i_i_i428)>>2)];
 HEAP32[(($45)>>2)]=0;
 var $__size__i24_i_i_i435=(($__sym+4)|0);
 HEAP32[(($__size__i24_i_i_i435)>>2)]=0;
 label=28;break;
 case 27: 
 var $__data__i_i_i_i443=(($__sym+4)|0);
 HEAP32[(($__data__i_i_i_i443)>>2)]=0;
 HEAP8[($__size__i46_i_i_i418)]=0;
 label=28;break;
 case 28: 
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sym,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=30;break; } else { label=29;break; }
 case 29: 
 var $46$0 = ___cxa_find_matching_catch(-1, -1,0); var $46$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 30: 
 assert(12 % 1 === 0);HEAP32[(($__size__i46_i_i_i418)>>2)]=HEAP32[(($3)>>2)];HEAP32[((($__size__i46_i_i_i418)+(4))>>2)]=HEAP32[((($3)+(4))>>2)];HEAP32[((($__size__i46_i_i_i418)+(8))>>2)]=HEAP32[((($3)+(8))>>2)];
 HEAP32[(($3)>>2)]=0; HEAP32[((($3)+(4))>>2)]=0; HEAP32[((($3)+(8))>>2)]=0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($ref_tmp13);
 var $vtable_i494=HEAP32[(($34)>>2)];
 var $vfn_i495=(($vtable_i494+36)|0);
 var $47=HEAP32[(($vfn_i495)>>2)];
 var $call_i496=FUNCTION_TABLE[$47]($16);
 var $storemerge=$call_i496;label=60;break;
 case 31: 
 var $48=$__p_i_i_i62;
 var $49=HEAP32[((15848)>>2)];
 var $cmp_i_i_i64=($49|0)==-1;
 if($cmp_i_i_i64){label=33;break;}else{label=32;break;}
 case 32: 
 var $ref_tmp_i_sroa_0_0__idx_i_i65=(($__p_i_i_i62)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i65)>>2)]=15848;
 var $ref_tmp_i_sroa_1_4__idx6_i_i66=(($__p_i_i_i62+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i66)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i67=(($__p_i_i_i62+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i67)>>2)]=0;
 __ZNSt3__111__call_onceERVmPvPFvS2_E(15848,$48,276);
 label=33;break;
 case 33: 
 var $50=HEAP32[((15852)>>2)];
 var $sub_i_i69=((($50)-(1))|0);
 var $__end__i_i_i_i70=(($8+12)|0);
 var $51=HEAP32[(($__end__i_i_i_i70)>>2)];
 var $__begin__i_i_i_i71=(($8+8)|0);
 var $52=HEAP32[(($__begin__i_i_i_i71)>>2)];
 var $sub_ptr_lhs_cast_i_i_i_i72=$51;
 var $sub_ptr_rhs_cast_i_i_i_i73=$52;
 var $sub_ptr_sub_i_i_i_i74=((($sub_ptr_lhs_cast_i_i_i_i72)-($sub_ptr_rhs_cast_i_i_i_i73))|0);
 var $sub_ptr_div_i_i_i_i75=$sub_ptr_sub_i_i_i_i74>>2;
 var $cmp_i_i1_i76=($sub_ptr_div_i_i_i_i75>>>0)>($sub_i_i69>>>0);
 if($cmp_i_i1_i76){label=34;break;}else{label=35;break;}
 case 34: 
 var $arrayidx_i_i_i_i78=(($52+($sub_i_i69<<2))|0);
 var $53=HEAP32[(($arrayidx_i_i_i_i78)>>2)];
 var $tobool_i_i_i79=($53|0)==0;
 if($tobool_i_i_i79){label=35;break;}else{label=36;break;}
 case 35: 
 var $exception_i_i81=___cxa_allocate_exception(4);
 var $54=$exception_i_i81;
 __ZNSt8bad_castC2Ev($54);
 ___cxa_throw($exception_i_i81,10264,(376));
 throw "Reached an unreachable!";
 case 36: 
 var $55=$53;
 var $56=$53;
 var $vtable_i501=HEAP32[(($56)>>2)];
 if($__neg){label=37;break;}else{label=43;break;}
 case 37: 
 var $vfn_i502=(($vtable_i501+44)|0);
 var $57=HEAP32[(($vfn_i502)>>2)];
 FUNCTION_TABLE[$57]($tmpcast57,$55);
 var $58=$__pat;
 var $59=HEAP32[(($ref_tmp21)>>2)];
 tempBigInt=$59;HEAP8[($58)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($58)+(1))|0)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($58)+(2))|0)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($58)+(3))|0)]=tempBigInt&0xff;
 var $60=$53;
 var $vtable_i505=HEAP32[(($60)>>2)];
 var $vfn_i506=(($vtable_i505+32)|0);
 var $61=HEAP32[(($vfn_i506)>>2)];
 FUNCTION_TABLE[$61]($ref_tmp22,$55);
 var $__size__i46_i_i_i575=$__sn;
 var $62=HEAP8[($__size__i46_i_i_i575)];
 var $and_i_i_i_i577=$62&1;
 var $tobool_i_i_i_i578=(($and_i_i_i_i577<<24)>>24)==0;
 if($tobool_i_i_i_i578){label=39;break;}else{label=38;break;}
 case 38: 
 var $__data__i36_i_i_i585=(($__sn+8)|0);
 var $63=HEAP32[(($__data__i36_i_i_i585)>>2)];
 HEAP32[(($63)>>2)]=0;
 var $__size__i24_i_i_i592=(($__sn+4)|0);
 HEAP32[(($__size__i24_i_i_i592)>>2)]=0;
 label=40;break;
 case 39: 
 var $__data__i_i_i_i600=(($__sn+4)|0);
 HEAP32[(($__data__i_i_i_i600)>>2)]=0;
 HEAP8[($__size__i46_i_i_i575)]=0;
 label=40;break;
 case 40: 
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sn,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=42;break; } else { label=41;break; }
 case 41: 
 var $64$0 = ___cxa_find_matching_catch(-1, -1,0); var $64$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 42: 
 assert(12 % 1 === 0);HEAP32[(($__size__i46_i_i_i575)>>2)]=HEAP32[(($4)>>2)];HEAP32[((($__size__i46_i_i_i575)+(4))>>2)]=HEAP32[((($4)+(4))>>2)];HEAP32[((($__size__i46_i_i_i575)+(8))>>2)]=HEAP32[((($4)+(8))>>2)];
 HEAP32[(($4)>>2)]=0; HEAP32[((($4)+(4))>>2)]=0; HEAP32[((($4)+(8))>>2)]=0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($ref_tmp22);
 label=49;break;
 case 43: 
 var $vfn_i652=(($vtable_i501+40)|0);
 var $65=HEAP32[(($vfn_i652)>>2)];
 FUNCTION_TABLE[$65]($tmpcast,$55);
 var $66=$__pat;
 var $67=HEAP32[(($ref_tmp25)>>2)];
 tempBigInt=$67;HEAP8[($66)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($66)+(1))|0)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($66)+(2))|0)]=tempBigInt&0xff;tempBigInt = tempBigInt>>8;HEAP8[((($66)+(3))|0)]=tempBigInt&0xff;
 var $68=$53;
 var $vtable_i655=HEAP32[(($68)>>2)];
 var $vfn_i656=(($vtable_i655+28)|0);
 var $69=HEAP32[(($vfn_i656)>>2)];
 FUNCTION_TABLE[$69]($ref_tmp26,$55);
 var $__size__i46_i_i_i725=$__sn;
 var $70=HEAP8[($__size__i46_i_i_i725)];
 var $and_i_i_i_i727=$70&1;
 var $tobool_i_i_i_i728=(($and_i_i_i_i727<<24)>>24)==0;
 if($tobool_i_i_i_i728){label=45;break;}else{label=44;break;}
 case 44: 
 var $__data__i36_i_i_i735=(($__sn+8)|0);
 var $71=HEAP32[(($__data__i36_i_i_i735)>>2)];
 HEAP32[(($71)>>2)]=0;
 var $__size__i24_i_i_i742=(($__sn+4)|0);
 HEAP32[(($__size__i24_i_i_i742)>>2)]=0;
 label=46;break;
 case 45: 
 var $__data__i_i_i_i750=(($__sn+4)|0);
 HEAP32[(($__data__i_i_i_i750)>>2)]=0;
 HEAP8[($__size__i46_i_i_i725)]=0;
 label=46;break;
 case 46: 
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sn,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=48;break; } else { label=47;break; }
 case 47: 
 var $72$0 = ___cxa_find_matching_catch(-1, -1,0); var $72$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 48: 
 assert(12 % 1 === 0);HEAP32[(($__size__i46_i_i_i725)>>2)]=HEAP32[(($5)>>2)];HEAP32[((($__size__i46_i_i_i725)+(4))>>2)]=HEAP32[((($5)+(4))>>2)];HEAP32[((($__size__i46_i_i_i725)+(8))>>2)]=HEAP32[((($5)+(8))>>2)];
 HEAP32[(($5)>>2)]=0; HEAP32[((($5)+(4))>>2)]=0; HEAP32[((($5)+(8))>>2)]=0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($ref_tmp26);
 label=49;break;
 case 49: 
 var $73=$53;
 var $vtable_i801=HEAP32[(($73)>>2)];
 var $vfn_i802=(($vtable_i801+12)|0);
 var $74=HEAP32[(($vfn_i802)>>2)];
 var $call_i803=FUNCTION_TABLE[$74]($55);
 HEAP32[(($__dp)>>2)]=$call_i803;
 var $vtable_i806=HEAP32[(($73)>>2)];
 var $vfn_i807=(($vtable_i806+16)|0);
 var $75=HEAP32[(($vfn_i807)>>2)];
 var $call_i808=FUNCTION_TABLE[$75]($55);
 HEAP32[(($__ts)>>2)]=$call_i808;
 var $76=$53;
 var $vtable_i811=HEAP32[(($76)>>2)];
 var $vfn_i812=(($vtable_i811+20)|0);
 var $77=HEAP32[(($vfn_i812)>>2)];
 FUNCTION_TABLE[$77]($ref_tmp31,$55);
 var $__size__i46_i_i_i881=$__grp;
 var $78=HEAP8[($__size__i46_i_i_i881)];
 var $and_i_i_i_i883=$78&1;
 var $tobool_i_i_i_i884=(($and_i_i_i_i883<<24)>>24)==0;
 if($tobool_i_i_i_i884){label=51;break;}else{label=50;break;}
 case 50: 
 var $__data__i36_i_i_i891=(($__grp+8)|0);
 var $79=HEAP32[(($__data__i36_i_i_i891)>>2)];
 HEAP8[($79)]=0;
 var $__size__i24_i_i_i898=(($__grp+4)|0);
 HEAP32[(($__size__i24_i_i_i898)>>2)]=0;
 label=52;break;
 case 51: 
 var $__s_i45_i_i_i880=$__grp;
 var $arrayidx_i_i_i_i907=(($__s_i45_i_i_i880+1)|0);
 HEAP8[($arrayidx_i_i_i_i907)]=0;
 HEAP8[($__size__i46_i_i_i881)]=0;
 label=52;break;
 case 52: 
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=54;break; } else { label=53;break; }
 case 53: 
 var $80$0 = ___cxa_find_matching_catch(-1, -1,0); var $80$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 54: 
 assert(12 % 1 === 0);HEAP32[(($__size__i46_i_i_i881)>>2)]=HEAP32[(($6)>>2)];HEAP32[((($__size__i46_i_i_i881)+(4))>>2)]=HEAP32[((($6)+(4))>>2)];HEAP32[((($__size__i46_i_i_i881)+(8))>>2)]=HEAP32[((($6)+(8))>>2)];
 HEAP32[(($6)>>2)]=0; HEAP32[((($6)+(4))>>2)]=0; HEAP32[((($6)+(8))>>2)]=0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($ref_tmp31);
 var $81=$53;
 var $vtable_i957=HEAP32[(($81)>>2)];
 var $vfn_i958=(($vtable_i957+24)|0);
 var $82=HEAP32[(($vfn_i958)>>2)];
 FUNCTION_TABLE[$82]($ref_tmp33,$55);
 var $__size__i46_i_i_i1027=$__sym;
 var $83=HEAP8[($__size__i46_i_i_i1027)];
 var $and_i_i_i_i1029=$83&1;
 var $tobool_i_i_i_i1030=(($and_i_i_i_i1029<<24)>>24)==0;
 if($tobool_i_i_i_i1030){label=56;break;}else{label=55;break;}
 case 55: 
 var $__data__i36_i_i_i1037=(($__sym+8)|0);
 var $84=HEAP32[(($__data__i36_i_i_i1037)>>2)];
 HEAP32[(($84)>>2)]=0;
 var $__size__i24_i_i_i1044=(($__sym+4)|0);
 HEAP32[(($__size__i24_i_i_i1044)>>2)]=0;
 label=57;break;
 case 56: 
 var $__data__i_i_i_i1052=(($__sym+4)|0);
 HEAP32[(($__data__i_i_i_i1052)>>2)]=0;
 HEAP8[($__size__i46_i_i_i1027)]=0;
 label=57;break;
 case 57: 
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sym,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=59;break; } else { label=58;break; }
 case 58: 
 var $85$0 = ___cxa_find_matching_catch(-1, -1,0); var $85$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 59: 
 assert(12 % 1 === 0);HEAP32[(($__size__i46_i_i_i1027)>>2)]=HEAP32[(($7)>>2)];HEAP32[((($__size__i46_i_i_i1027)+(4))>>2)]=HEAP32[((($7)+(4))>>2)];HEAP32[((($__size__i46_i_i_i1027)+(8))>>2)]=HEAP32[((($7)+(8))>>2)];
 HEAP32[(($7)>>2)]=0; HEAP32[((($7)+(4))>>2)]=0; HEAP32[((($7)+(8))>>2)]=0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($ref_tmp33);
 var $vtable_i1103=HEAP32[(($73)>>2)];
 var $vfn_i1104=(($vtable_i1103+36)|0);
 var $86=HEAP32[(($vfn_i1104)>>2)];
 var $call_i1105=FUNCTION_TABLE[$86]($55);
 var $storemerge=$call_i1105;label=60;break;
 case 60: 
 var $storemerge;
 HEAP32[(($__fd)>>2)]=$storemerge;
 STACKTOP=sp;return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i($__mb,$__mi,$__me,$__flags,$__db,$__de,$__ct,$__neg,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 HEAP32[(($__me)>>2)]=$__mb;
 var $0=$__ct;
 var $__size__i_i_i=$__sn;
 var $__data__i_i_i_i465=(($__sn+4)|0);
 var $__data__i21_i_i_i457=(($__sn+8)|0);
 var $__size__i_i_i495=$__sym;
 var $and=$__flags&512;
 var $tobool=($and|0)==0;
 var $__data__i_i_i569=(($__sym+4)|0);
 var $__data__i21_i_i671=(($__sym+8)|0);
 var $1=$__ct;
 var $cmp24=($__fd|0)>0;
 var $__s_i_i_i391=$__grp;
 var $__size__i_i_i392=$__grp;
 var $arrayidx_i_i_i_i368=(($__s_i_i_i391+1)|0);
 var $__data__i21_i_i_i359=(($__grp+8)|0);
 var $__size__i23_i311=(($__grp+4)|0);
 var $__db_addr_0119=$__db;var $__p_0120=0;label=2;break;
 case 2: 
 var $__p_0120;
 var $__db_addr_0119;
 var $arrayidx=(($__pat+$__p_0120)|0);
 var $2=HEAP8[($arrayidx)];
 var $conv=(($2<<24)>>24);
 switch(($conv|0)){case 2:{ label=12;break;}case 4:{ label=28;break;}case 0:{ label=3;break;}case 1:{ label=4;break;}case 3:{ label=5;break;}default:{var $__db_addr_2=$__db_addr_0119;label=63;break;}}break;
 case 3: 
 var $3=HEAP32[(($__me)>>2)];
 HEAP32[(($__mi)>>2)]=$3;
 var $__db_addr_2=$__db_addr_0119;label=63;break;
 case 4: 
 var $4=HEAP32[(($__me)>>2)];
 HEAP32[(($__mi)>>2)]=$4;
 var $vtable_i=HEAP32[(($0)>>2)];
 var $vfn_i=(($vtable_i+44)|0);
 var $5=HEAP32[(($vfn_i)>>2)];
 var $call_i=FUNCTION_TABLE[$5]($__ct,32);
 var $6=HEAP32[(($__me)>>2)];
 var $incdec_ptr=(($6+4)|0);
 HEAP32[(($__me)>>2)]=$incdec_ptr;
 HEAP32[(($6)>>2)]=$call_i;
 var $__db_addr_2=$__db_addr_0119;label=63;break;
 case 5: 
 var $7=HEAP8[($__size__i_i_i)];
 var $conv_i_i_i=($7&255);
 var $and_i_i_i=$conv_i_i_i&1;
 var $tobool_i_i_i=($and_i_i_i|0)==0;
 if($tobool_i_i_i){label=7;break;}else{label=6;break;}
 case 6: 
 var $8=HEAP32[(($__data__i_i_i_i465)>>2)];
 var $cond_i_i=$8;label=8;break;
 case 7: 
 var $shr_i_i_i89=$conv_i_i_i>>>1;
 var $cond_i_i=$shr_i_i_i89;label=8;break;
 case 8: 
 var $cond_i_i;
 var $cmp_i=($cond_i_i|0)==0;
 if($cmp_i){var $__db_addr_2=$__db_addr_0119;label=63;break;}else{label=9;break;}
 case 9: 
 var $and_i_i_i_i449=$7&1;
 var $tobool_i_i_i_i450=(($and_i_i_i_i449<<24)>>24)==0;
 if($tobool_i_i_i_i450){var $cond_i_i_i468=$__data__i_i_i_i465;label=11;break;}else{label=10;break;}
 case 10: 
 var $9=HEAP32[(($__data__i21_i_i_i457)>>2)];
 var $cond_i_i_i468=$9;label=11;break;
 case 11: 
 var $cond_i_i_i468;
 var $10=HEAP32[(($cond_i_i_i468)>>2)];
 var $11=HEAP32[(($__me)>>2)];
 var $incdec_ptr5=(($11+4)|0);
 HEAP32[(($__me)>>2)]=$incdec_ptr5;
 HEAP32[(($11)>>2)]=$10;
 var $__db_addr_2=$__db_addr_0119;label=63;break;
 case 12: 
 var $12=HEAP8[($__size__i_i_i495)];
 var $conv_i_i_i496=($12&255);
 var $and_i_i_i497=$conv_i_i_i496&1;
 var $tobool_i_i_i498=($and_i_i_i497|0)==0;
 if($tobool_i_i_i498){label=14;break;}else{label=13;break;}
 case 13: 
 var $13=HEAP32[(($__data__i_i_i569)>>2)];
 var $cond_i_i517=$13;label=15;break;
 case 14: 
 var $shr_i_i_i51587=$conv_i_i_i496>>>1;
 var $cond_i_i517=$shr_i_i_i51587;label=15;break;
 case 15: 
 var $cond_i_i517;
 var $cmp_i518=($cond_i_i517|0)==0;
 var $brmerge=$cmp_i518|$tobool;
 if($brmerge){var $__db_addr_2=$__db_addr_0119;label=63;break;}else{label=16;break;}
 case 16: 
 var $and_i_i_i553=$12&1;
 var $tobool_i_i_i554=(($and_i_i_i553<<24)>>24)==0;
 if($tobool_i_i_i554){label=18;break;}else{label=17;break;}
 case 17: 
 var $14=HEAP32[(($__data__i21_i_i671)>>2)];
 var $cond_i_i682=$14;var $cond_i_i572136=$14;var $cond_i_i572131138_in=$14;label=19;break;
 case 18: 
 var $cond_i_i682=$__data__i_i_i569;var $cond_i_i572136=$__data__i_i_i569;var $cond_i_i572131138_in=$__data__i_i_i569;label=19;break;
 case 19: 
 var $cond_i_i572131138_in;
 var $cond_i_i572136;
 var $cond_i_i682;
 var $cond_i_i572131138=$cond_i_i572131138_in;
 if($tobool_i_i_i498){label=21;break;}else{label=20;break;}
 case 20: 
 var $15=HEAP32[(($__data__i_i_i569)>>2)];
 var $cond_i34_i713=$15;label=22;break;
 case 21: 
 var $shr_i_i_i71188=$conv_i_i_i496>>>1;
 var $cond_i34_i713=$shr_i_i_i71188;label=22;break;
 case 22: 
 var $cond_i34_i713;
 var $add_ptr_i714=(($cond_i_i682+($cond_i34_i713<<2))|0);
 var $16=HEAP32[(($__me)>>2)];
 var $lnot_i_i_i616115=($cond_i_i572136|0)==($add_ptr_i714|0);
 if($lnot_i_i_i616115){var $__result_addr_i_i594_0_lcssa=$16;label=27;break;}else{label=23;break;}
 case 23: 
 var $scevgep128_sum=((($cond_i34_i713)-(1))|0);
 var $scevgep129=(($cond_i_i682+($scevgep128_sum<<2))|0);
 var $scevgep129130=$scevgep129;
 var $17=(((-$cond_i_i572131138))|0);
 var $uglygep132=(($scevgep129130+$17)|0);
 var $uglygep132133=$uglygep132;
 var $18=$uglygep132133>>>2;
 var $agg_tmp7_i596_sroa_0_0116=$cond_i_i572136;var $__result_addr_i_i594_0117=$16;label=24;break;
 case 24: 
 var $__result_addr_i_i594_0117;
 var $agg_tmp7_i596_sroa_0_0116;
 var $19=HEAP32[(($agg_tmp7_i596_sroa_0_0116)>>2)];
 HEAP32[(($__result_addr_i_i594_0117)>>2)]=$19;
 var $incdec_ptr_i_i_i622=(($agg_tmp7_i596_sroa_0_0116+4)|0);
 var $lnot_i_i_i616=($incdec_ptr_i_i_i622|0)==($add_ptr_i714|0);
 if($lnot_i_i_i616){label=26;break;}else{label=25;break;}
 case 25: 
 var $incdec_ptr_i_i623=(($__result_addr_i_i594_0117+4)|0);
 var $agg_tmp7_i596_sroa_0_0116=$incdec_ptr_i_i_i622;var $__result_addr_i_i594_0117=$incdec_ptr_i_i623;label=24;break;
 case 26: 
 var $scevgep127_sum=((($18)+(1))|0);
 var $scevgep134=(($16+($scevgep127_sum<<2))|0);
 var $__result_addr_i_i594_0_lcssa=$scevgep134;label=27;break;
 case 27: 
 var $__result_addr_i_i594_0_lcssa;
 HEAP32[(($__me)>>2)]=$__result_addr_i_i594_0_lcssa;
 var $__db_addr_2=$__db_addr_0119;label=63;break;
 case 28: 
 var $20=HEAP32[(($__me)>>2)];
 var $incdec_ptr15=(($__db_addr_0119+4)|0);
 var $incdec_ptr15___db_addr_0=($__neg?$incdec_ptr15:$__db_addr_0119);
 var $__d_0=$incdec_ptr15___db_addr_0;label=29;break;
 case 29: 
 var $__d_0;
 var $cmp18=($__d_0>>>0)<($__de>>>0);
 if($cmp18){label=30;break;}else{label=31;break;}
 case 30: 
 var $21=HEAP32[(($__d_0)>>2)];
 var $vtable_i523=HEAP32[(($1)>>2)];
 var $vfn_i524=(($vtable_i523+12)|0);
 var $22=HEAP32[(($vfn_i524)>>2)];
 var $call_i525=FUNCTION_TABLE[$22]($__ct,2048,$21);
 var $incdec_ptr23=(($__d_0+4)|0);
 if($call_i525){var $__d_0=$incdec_ptr23;label=29;break;}else{label=31;break;}
 case 31: 
 if($cmp24){label=32;break;}else{var $__d_2=$__d_0;label=39;break;}
 case 32: 
 var $cmp2794=($__d_0>>>0)>($incdec_ptr15___db_addr_0>>>0);
 if($cmp2794){var $__d_197=$__d_0;var $__f_098=$__fd;label=33;break;}else{var $__f_0_lcssa141=$__fd;var $__d_1_lcssa143=$__d_0;label=35;break;}
 case 33: 
 var $__f_098;
 var $__d_197;
 var $incdec_ptr30=((($__d_197)-(4))|0);
 var $23=HEAP32[(($incdec_ptr30)>>2)];
 var $24=HEAP32[(($__me)>>2)];
 var $incdec_ptr31=(($24+4)|0);
 HEAP32[(($__me)>>2)]=$incdec_ptr31;
 HEAP32[(($24)>>2)]=$23;
 var $dec=((($__f_098)-(1))|0);
 var $cmp27=($incdec_ptr30>>>0)>($incdec_ptr15___db_addr_0>>>0);
 var $cmp28=($dec|0)>0;
 var $or_cond=$cmp27&$cmp28;
 if($or_cond){var $__d_197=$incdec_ptr30;var $__f_098=$dec;label=33;break;}else{label=34;break;}
 case 34: 
 if($cmp28){var $__f_0_lcssa141=$dec;var $__d_1_lcssa143=$incdec_ptr30;label=35;break;}else{var $cond=0;var $__f_0_lcssa140=$dec;var $__d_1_lcssa142=$incdec_ptr30;label=36;break;}
 case 35: 
 var $__d_1_lcssa143;
 var $__f_0_lcssa141;
 var $vtable_i473=HEAP32[(($0)>>2)];
 var $vfn_i474=(($vtable_i473+44)|0);
 var $25=HEAP32[(($vfn_i474)>>2)];
 var $call_i475=FUNCTION_TABLE[$25]($__ct,48);
 var $cond=$call_i475;var $__f_0_lcssa140=$__f_0_lcssa141;var $__d_1_lcssa142=$__d_1_lcssa143;label=36;break;
 case 36: 
 var $__d_1_lcssa142;
 var $__f_0_lcssa140;
 var $cond;
 var $cmp37102=($__f_0_lcssa140|0)>0;
 var $26=HEAP32[(($__me)>>2)];
 var $incdec_ptr39103=(($26+4)|0);
 HEAP32[(($__me)>>2)]=$incdec_ptr39103;
 if($cmp37102){var $__f_1104=$__f_0_lcssa140;var $27=$26;label=37;break;}else{var $_lcssa=$26;label=38;break;}
 case 37: 
 var $27;
 var $__f_1104;
 HEAP32[(($27)>>2)]=$cond;
 var $dec41=((($__f_1104)-(1))|0);
 var $cmp37=($dec41|0)>0;
 var $28=HEAP32[(($__me)>>2)];
 var $incdec_ptr39=(($28+4)|0);
 HEAP32[(($__me)>>2)]=$incdec_ptr39;
 if($cmp37){var $__f_1104=$dec41;var $27=$28;label=37;break;}else{var $_lcssa=$28;label=38;break;}
 case 38: 
 var $_lcssa;
 HEAP32[(($_lcssa)>>2)]=$__dp;
 var $__d_2=$__d_1_lcssa142;label=39;break;
 case 39: 
 var $__d_2;
 var $cmp45=($__d_2|0)==($incdec_ptr15___db_addr_0|0);
 if($cmp45){label=40;break;}else{label=41;break;}
 case 40: 
 var $vtable_i419=HEAP32[(($0)>>2)];
 var $vfn_i420=(($vtable_i419+44)|0);
 var $29=HEAP32[(($vfn_i420)>>2)];
 var $call_i421=FUNCTION_TABLE[$29]($__ct,48);
 var $30=HEAP32[(($__me)>>2)];
 var $incdec_ptr48=(($30+4)|0);
 HEAP32[(($__me)>>2)]=$incdec_ptr48;
 HEAP32[(($30)>>2)]=$call_i421;
 label=60;break;
 case 41: 
 var $31=HEAP8[($__size__i_i_i392)];
 var $conv_i_i_i393=($31&255);
 var $and_i_i_i394=$conv_i_i_i393&1;
 var $tobool_i_i_i395=($and_i_i_i394|0)==0;
 if($tobool_i_i_i395){label=43;break;}else{label=42;break;}
 case 42: 
 var $32=HEAP32[(($__size__i23_i311)>>2)];
 var $cond_i_i414=$32;label=44;break;
 case 43: 
 var $shr_i_i_i41285=$conv_i_i_i393>>>1;
 var $cond_i_i414=$shr_i_i_i41285;label=44;break;
 case 44: 
 var $cond_i_i414;
 var $cmp_i415=($cond_i_i414|0)==0;
 if($cmp_i415){var $__d_3107=$__d_2;var $__ng_0108=0;var $__ig_0109=0;var $__gl_0110=-1;label=48;break;}else{label=45;break;}
 case 45: 
 var $and_i_i_i_i351=$31&1;
 var $tobool_i_i_i_i352=(($and_i_i_i_i351<<24)>>24)==0;
 if($tobool_i_i_i_i352){var $cond_i_i_i370=$arrayidx_i_i_i_i368;label=47;break;}else{label=46;break;}
 case 46: 
 var $33=HEAP32[(($__data__i21_i_i_i359)>>2)];
 var $cond_i_i_i370=$33;label=47;break;
 case 47: 
 var $cond_i_i_i370;
 var $34=HEAP8[($cond_i_i_i370)];
 var $conv54=(($34<<24)>>24);
 var $__d_3107=$__d_2;var $__ng_0108=0;var $__ig_0109=0;var $__gl_0110=$conv54;label=48;break;
 case 48: 
 var $__gl_0110;
 var $__ig_0109;
 var $__ng_0108;
 var $__d_3107;
 var $cmp58=($__ng_0108|0)==($__gl_0110|0);
 if($cmp58){label=49;break;}else{var $__gl_1=$__gl_0110;var $__ig_1=$__ig_0109;var $__ng_1=$__ng_0108;label=59;break;}
 case 49: 
 var $35=HEAP32[(($__me)>>2)];
 var $incdec_ptr60=(($35+4)|0);
 HEAP32[(($__me)>>2)]=$incdec_ptr60;
 HEAP32[(($35)>>2)]=$__ts;
 var $inc=((($__ig_0109)+(1))|0);
 var $36=HEAP8[($__size__i_i_i392)];
 var $conv_i_i302=($36&255);
 var $and_i_i303=$conv_i_i302&1;
 var $tobool_i_i304=($and_i_i303|0)==0;
 if($tobool_i_i304){label=51;break;}else{label=50;break;}
 case 50: 
 var $37=HEAP32[(($__size__i23_i311)>>2)];
 var $cond_i323=$37;label=52;break;
 case 51: 
 var $shr_i_i32186=$conv_i_i302>>>1;
 var $cond_i323=$shr_i_i32186;label=52;break;
 case 52: 
 var $cond_i323;
 var $cmp62=($inc>>>0)<($cond_i323>>>0);
 if($cmp62){label=53;break;}else{var $__gl_1=$__gl_0110;var $__ig_1=$inc;var $__ng_1=0;label=59;break;}
 case 53: 
 var $and_i_i_i_i262=$36&1;
 var $tobool_i_i_i_i263=(($and_i_i_i_i262<<24)>>24)==0;
 if($tobool_i_i_i_i263){var $cond_i_i_i281=$arrayidx_i_i_i_i368;label=55;break;}else{label=54;break;}
 case 54: 
 var $38=HEAP32[(($__data__i21_i_i_i359)>>2)];
 var $cond_i_i_i281=$38;label=55;break;
 case 55: 
 var $cond_i_i_i281;
 var $add_ptr_i282=(($cond_i_i_i281+$inc)|0);
 var $39=HEAP8[($add_ptr_i282)];
 var $cmp68=(($39<<24)>>24)==127;
 if($cmp68){var $__gl_1=-1;var $__ig_1=$inc;var $__ng_1=0;label=59;break;}else{label=56;break;}
 case 56: 
 if($tobool_i_i_i_i263){var $cond_i_i_i=$arrayidx_i_i_i_i368;label=58;break;}else{label=57;break;}
 case 57: 
 var $40=HEAP32[(($__data__i21_i_i_i359)>>2)];
 var $cond_i_i_i=$40;label=58;break;
 case 58: 
 var $cond_i_i_i;
 var $add_ptr_i234=(($cond_i_i_i+$inc)|0);
 var $41=HEAP8[($add_ptr_i234)];
 var $conv73=(($41<<24)>>24);
 var $__gl_1=$conv73;var $__ig_1=$inc;var $__ng_1=0;label=59;break;
 case 59: 
 var $__ng_1;
 var $__ig_1;
 var $__gl_1;
 var $incdec_ptr78=((($__d_3107)-(4))|0);
 var $42=HEAP32[(($incdec_ptr78)>>2)];
 var $43=HEAP32[(($__me)>>2)];
 var $incdec_ptr79=(($43+4)|0);
 HEAP32[(($__me)>>2)]=$incdec_ptr79;
 HEAP32[(($43)>>2)]=$42;
 var $inc80=((($__ng_1)+(1))|0);
 var $cmp57=($incdec_ptr78|0)==($incdec_ptr15___db_addr_0|0);
 if($cmp57){label=60;break;}else{var $__d_3107=$incdec_ptr78;var $__ng_0108=$inc80;var $__ig_0109=$__ig_1;var $__gl_0110=$__gl_1;label=48;break;}
 case 60: 
 var $44=HEAP32[(($__me)>>2)];
 var $cmp_i_i=($20|0)==($44|0);
 if($cmp_i_i){var $__db_addr_2=$incdec_ptr15___db_addr_0;label=63;break;}else{label=61;break;}
 case 61: 
 var $incdec_ptr_i_i221111=((($44)-(4))|0);
 var $cmp1_i_i112=($20>>>0)<($incdec_ptr_i_i221111>>>0);
 if($cmp1_i_i112){var $__first_addr_i_i_0113=$20;var $incdec_ptr_i_i221114=$incdec_ptr_i_i221111;label=62;break;}else{var $__db_addr_2=$incdec_ptr15___db_addr_0;label=63;break;}
 case 62: 
 var $incdec_ptr_i_i221114;
 var $__first_addr_i_i_0113;
 var $45=HEAP32[(($__first_addr_i_i_0113)>>2)];
 var $46=HEAP32[(($incdec_ptr_i_i221114)>>2)];
 HEAP32[(($__first_addr_i_i_0113)>>2)]=$46;
 HEAP32[(($incdec_ptr_i_i221114)>>2)]=$45;
 var $incdec_ptr2_i_i=(($__first_addr_i_i_0113+4)|0);
 var $incdec_ptr_i_i221=((($incdec_ptr_i_i221114)-(4))|0);
 var $cmp1_i_i=($incdec_ptr2_i_i>>>0)<($incdec_ptr_i_i221>>>0);
 if($cmp1_i_i){var $__first_addr_i_i_0113=$incdec_ptr2_i_i;var $incdec_ptr_i_i221114=$incdec_ptr_i_i221;label=62;break;}else{var $__db_addr_2=$incdec_ptr15___db_addr_0;label=63;break;}
 case 63: 
 var $__db_addr_2;
 var $inc83=((($__p_0120)+(1))|0);
 var $cmp=($inc83>>>0)<4;
 if($cmp){var $__db_addr_0119=$__db_addr_2;var $__p_0120=$inc83;label=2;break;}else{label=64;break;}
 case 64: 
 var $47=HEAP8[($__size__i_i_i)];
 var $conv_i_i=($47&255);
 var $and_i_i=$conv_i_i&1;
 var $tobool_i_i=($and_i_i|0)==0;
 if($tobool_i_i){label=66;break;}else{label=65;break;}
 case 65: 
 var $48=HEAP32[(($__data__i_i_i_i465)>>2)];
 var $cond_i=$48;label=67;break;
 case 66: 
 var $shr_i_i83=$conv_i_i>>>1;
 var $cond_i=$shr_i_i83;label=67;break;
 case 67: 
 var $cond_i;
 var $cmp86=($cond_i>>>0)>1;
 if($cmp86){label=68;break;}else{label=79;break;}
 case 68: 
 var $and_i_i_i186=$47&1;
 var $tobool_i_i_i187=(($and_i_i_i186<<24)>>24)==0;
 if($tobool_i_i_i187){label=70;break;}else{label=69;break;}
 case 69: 
 var $49=HEAP32[(($__data__i21_i_i_i457)>>2)];
 var $cond_i_i146=$49;var $cond_i_i205145=$49;var $cond_i_i205122147_in=$49;label=71;break;
 case 70: 
 var $cond_i_i146=$__data__i_i_i_i465;var $cond_i_i205145=$__data__i_i_i_i465;var $cond_i_i205122147_in=$__data__i_i_i_i465;label=71;break;
 case 71: 
 var $cond_i_i205122147_in;
 var $cond_i_i205145;
 var $cond_i_i146;
 var $cond_i_i205122147=$cond_i_i205122147_in;
 if($tobool_i_i){label=73;break;}else{label=72;break;}
 case 72: 
 var $50=HEAP32[(($__data__i_i_i_i465)>>2)];
 var $cond_i34_i=$50;label=74;break;
 case 73: 
 var $shr_i_i_i15584=$conv_i_i>>>1;
 var $cond_i34_i=$shr_i_i_i15584;label=74;break;
 case 74: 
 var $cond_i34_i;
 var $add_ptr_i=(($cond_i_i146+($cond_i34_i<<2))|0);
 var $51=HEAP32[(($__me)>>2)];
 var $agg_tmp7_i_sroa_0_090=(($cond_i_i205145+4)|0);
 var $lnot_i_i_i91=($agg_tmp7_i_sroa_0_090|0)==($add_ptr_i|0);
 if($lnot_i_i_i91){var $__result_addr_i_i_0_lcssa=$51;label=78;break;}else{label=75;break;}
 case 75: 
 var $52=((($cond_i34_i)-(2))|0);
 var $scevgep=(($cond_i_i146+($52<<2))|0);
 var $scevgep121=$scevgep;
 var $53=(((-$cond_i_i205122147))|0);
 var $uglygep=(($scevgep121+$53)|0);
 var $uglygep123=$uglygep;
 var $54=$uglygep123>>>2;
 var $55=((($54)+(1))|0);
 var $__result_addr_i_i_092=$51;var $agg_tmp7_i_sroa_0_093=$agg_tmp7_i_sroa_0_090;label=76;break;
 case 76: 
 var $agg_tmp7_i_sroa_0_093;
 var $__result_addr_i_i_092;
 var $56=HEAP32[(($agg_tmp7_i_sroa_0_093)>>2)];
 HEAP32[(($__result_addr_i_i_092)>>2)]=$56;
 var $incdec_ptr_i_i=(($__result_addr_i_i_092+4)|0);
 var $agg_tmp7_i_sroa_0_0=(($agg_tmp7_i_sroa_0_093+4)|0);
 var $lnot_i_i_i=($agg_tmp7_i_sroa_0_0|0)==($add_ptr_i|0);
 if($lnot_i_i_i){label=77;break;}else{var $__result_addr_i_i_092=$incdec_ptr_i_i;var $agg_tmp7_i_sroa_0_093=$agg_tmp7_i_sroa_0_0;label=76;break;}
 case 77: 
 var $scevgep124=(($51+($55<<2))|0);
 var $__result_addr_i_i_0_lcssa=$scevgep124;label=78;break;
 case 78: 
 var $__result_addr_i_i_0_lcssa;
 HEAP32[(($__me)>>2)]=$__result_addr_i_i_0_lcssa;
 label=79;break;
 case 79: 
 var $and92=$__flags&176;
 if(($and92|0)==32){ label=80;break;}else if(($and92|0)==16){ label=82;break;}else{label=81;break;}
 case 80: 
 var $57=HEAP32[(($__me)>>2)];
 HEAP32[(($__mi)>>2)]=$57;
 label=82;break;
 case 81: 
 HEAP32[(($__mi)>>2)]=$__mb;
 label=82;break;
 case 82: 
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE($agg_result,$this,$__s,$__intl,$__iob,$__fl,$__digits){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+64)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var tempParam = $__s; $__s=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);HEAP32[(($__s)>>2)]=HEAP32[((tempParam)>>2)];
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__p_i_i_i=sp;
 var $__loc=(sp)+(16);
 var $__pat=(sp)+(24);
 var $__dp=(sp)+(32);
 var $__ts=(sp)+(40);
 var $__grp=(sp)+(48);
 var $__grp47=$__grp;
 var $__sym=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__size__i_i450=$__sym;
 var $__sn=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__size__i_i393=$__sn;
 var $__fd=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__mbuf=STACKTOP;STACKTOP = (STACKTOP + 400)|0;(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__mi=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $__me=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $agg_tmp=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 __ZNKSt3__18ios_base6getlocEv($__loc,$__iob);
 var $__locale__i=(($__loc)|0);
 var $0=HEAP32[(($__locale__i)>>2)];
 var $1=$__p_i_i_i;
 var $2=HEAP32[((15376)>>2)];
 var $cmp_i_i_i36=($2|0)==-1;
 if($cmp_i_i_i36){label=3;break;}else{label=2;break;}
 case 2: 
 var $ref_tmp_i_sroa_0_0__idx_i_i=(($__p_i_i_i)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i)>>2)]=15376;
 var $ref_tmp_i_sroa_1_4__idx6_i_i=(($__p_i_i_i+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i=(($__p_i_i_i+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(15376,$1,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=3;break; } else { label=42;break; }
 case 3: 
 var $3=HEAP32[((15380)>>2)];
 var $sub_i_i=((($3)-(1))|0);
 var $__end__i_i_i_i=(($0+12)|0);
 var $4=HEAP32[(($__end__i_i_i_i)>>2)];
 var $__begin__i_i_i_i=(($0+8)|0);
 var $5=HEAP32[(($__begin__i_i_i_i)>>2)];
 var $sub_ptr_lhs_cast_i_i_i_i=$4;
 var $sub_ptr_rhs_cast_i_i_i_i=$5;
 var $sub_ptr_sub_i_i_i_i=((($sub_ptr_lhs_cast_i_i_i_i)-($sub_ptr_rhs_cast_i_i_i_i))|0);
 var $sub_ptr_div_i_i_i_i=$sub_ptr_sub_i_i_i_i>>2;
 var $cmp_i_i1_i=($sub_ptr_div_i_i_i_i>>>0)>($sub_i_i>>>0);
 if($cmp_i_i1_i){label=4;break;}else{label=5;break;}
 case 4: 
 var $arrayidx_i_i_i_i=(($5+($sub_i_i<<2))|0);
 var $6=HEAP32[(($arrayidx_i_i_i_i)>>2)];
 var $tobool_i_i_i38=($6|0)==0;
 if($tobool_i_i_i38){label=5;break;}else{label=7;break;}
 case 5: 
 var $exception_i_i=___cxa_allocate_exception(4);
 var $7=$exception_i_i;
 __ZNSt8bad_castC2Ev($7);
 (function() { try { __THREW__ = 0; return ___cxa_throw($exception_i_i,10264,(376)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=6;break; } else { label=42;break; }
 case 6: 
 throw "Reached an unreachable!";
 case 7: 
 var $8=$6;
 var $__size__i_i=$__digits;
 var $9=HEAP8[($__size__i_i)];
 var $conv_i_i=($9&255);
 var $and_i_i=$conv_i_i&1;
 var $tobool_i_i=($and_i_i|0)==0;
 if($tobool_i_i){label=9;break;}else{label=8;break;}
 case 8: 
 var $__size__i23_i=(($__digits+4)|0);
 var $10=HEAP32[(($__size__i23_i)>>2)];
 var $cond_i=$10;label=10;break;
 case 9: 
 var $shr_i_i28=$conv_i_i>>>1;
 var $cond_i=$shr_i_i28;label=10;break;
 case 10: 
 var $cond_i;
 var $cmp=($cond_i|0)==0;
 if($cmp){var $15=0;label=16;break;}else{label=11;break;}
 case 11: 
 var $and_i_i_i_i=$9&1;
 var $tobool_i_i_i_i=(($and_i_i_i_i<<24)>>24)==0;
 if($tobool_i_i_i_i){label=13;break;}else{label=12;break;}
 case 12: 
 var $__data__i21_i_i_i=(($__digits+8)|0);
 var $11=HEAP32[(($__data__i21_i_i_i)>>2)];
 var $cond_i_i_i=$11;label=14;break;
 case 13: 
 var $__data__i_i_i_i=(($__digits+4)|0);
 var $cond_i_i_i=$__data__i_i_i_i;label=14;break;
 case 14: 
 var $cond_i_i_i;
 var $12=HEAP32[(($cond_i_i_i)>>2)];
 var $13=$6;
 var $vtable_i=HEAP32[(($13)>>2)];
 var $vfn_i=(($vtable_i+44)|0);
 var $14=HEAP32[(($vfn_i)>>2)];
 var $call_i58=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$14]($8,45) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=15;break; } else { label=42;break; }
 case 15: 
 var $cmp7=($12|0)==($call_i58|0);
 var $15=$cmp7;label=16;break;
 case 16: 
 var $15;
 HEAP32[(($__grp47)>>2)]=0; HEAP32[((($__grp47)+(4))>>2)]=0; HEAP32[((($__grp47)+(8))>>2)]=0;
 HEAP32[(($__size__i_i450)>>2)]=0; HEAP32[((($__size__i_i450)+(4))>>2)]=0; HEAP32[((($__size__i_i450)+(8))>>2)]=0;
 HEAP32[(($__size__i_i393)>>2)]=0; HEAP32[((($__size__i_i393)+(4))>>2)]=0; HEAP32[((($__size__i_i393)+(8))>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri($__intl,$15,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=17;break; } else { label=43;break; }
 case 17: 
 var $arraydecay=(($__mbuf)|0);
 var $16=HEAP8[($__size__i_i)];
 var $conv_i_i178=($16&255);
 var $and_i_i179=$conv_i_i178&1;
 var $tobool_i_i180=($and_i_i179|0)==0;
 if($tobool_i_i180){label=19;break;}else{label=18;break;}
 case 18: 
 var $__size__i23_i187=(($__digits+4)|0);
 var $17=HEAP32[(($__size__i23_i187)>>2)];
 var $cond_i199=$17;label=20;break;
 case 19: 
 var $shr_i_i19729=$conv_i_i178>>>1;
 var $cond_i199=$shr_i_i19729;label=20;break;
 case 20: 
 var $cond_i199;
 var $18=HEAP32[(($__fd)>>2)];
 var $cmp13=($cond_i199|0)>($18|0);
 if($cmp13){label=21;break;}else{label=31;break;}
 case 21: 
 if($tobool_i_i180){label=23;break;}else{label=22;break;}
 case 22: 
 var $__size__i23_i362=(($__digits+4)|0);
 var $19=HEAP32[(($__size__i23_i362)>>2)];
 var $cond_i374=$19;label=24;break;
 case 23: 
 var $shr_i_i37233=$conv_i_i178>>>1;
 var $cond_i374=$shr_i_i37233;label=24;break;
 case 24: 
 var $cond_i374;
 var $sub=((($cond_i374)-($18))|0);
 var $mul=$sub<<1;
 var $20=HEAP8[($__size__i_i393)];
 var $conv_i_i394=($20&255);
 var $and_i_i395=$conv_i_i394&1;
 var $tobool_i_i396=($and_i_i395|0)==0;
 if($tobool_i_i396){label=26;break;}else{label=25;break;}
 case 25: 
 var $__size__i23_i403=(($__sn+4)|0);
 var $21=HEAP32[(($__size__i23_i403)>>2)];
 var $cond_i415=$21;label=27;break;
 case 26: 
 var $shr_i_i41334=$conv_i_i394>>>1;
 var $cond_i415=$shr_i_i41334;label=27;break;
 case 27: 
 var $cond_i415;
 var $22=HEAP8[($__size__i_i450)];
 var $conv_i_i451=($22&255);
 var $and_i_i452=$conv_i_i451&1;
 var $tobool_i_i453=($and_i_i452|0)==0;
 if($tobool_i_i453){label=29;break;}else{label=28;break;}
 case 28: 
 var $__size__i23_i460=(($__sym+4)|0);
 var $23=HEAP32[(($__size__i23_i460)>>2)];
 var $cond_i472=$23;label=30;break;
 case 29: 
 var $shr_i_i47035=$conv_i_i451>>>1;
 var $cond_i472=$shr_i_i47035;label=30;break;
 case 30: 
 var $cond_i472;
 var $add46=$mul|1;
 var $add17=((($add46)+($cond_i415))|0);
 var $add18=((($add17)+($cond_i472))|0);
 var $add18_pn=$add18;label=38;break;
 case 31: 
 var $24=HEAP8[($__size__i_i393)];
 var $conv_i_i492=($24&255);
 var $and_i_i493=$conv_i_i492&1;
 var $tobool_i_i494=($and_i_i493|0)==0;
 if($tobool_i_i494){label=33;break;}else{label=32;break;}
 case 32: 
 var $__size__i23_i501=(($__sn+4)|0);
 var $25=HEAP32[(($__size__i23_i501)>>2)];
 var $cond_i513=$25;label=34;break;
 case 33: 
 var $shr_i_i51130=$conv_i_i492>>>1;
 var $cond_i513=$shr_i_i51130;label=34;break;
 case 34: 
 var $cond_i513;
 var $26=HEAP8[($__size__i_i450)];
 var $conv_i_i533=($26&255);
 var $and_i_i534=$conv_i_i533&1;
 var $tobool_i_i535=($and_i_i534|0)==0;
 if($tobool_i_i535){label=36;break;}else{label=35;break;}
 case 35: 
 var $__size__i23_i542=(($__sym+4)|0);
 var $27=HEAP32[(($__size__i23_i542)>>2)];
 var $cond_i554=$27;label=37;break;
 case 36: 
 var $shr_i_i55231=$conv_i_i533>>>1;
 var $cond_i554=$shr_i_i55231;label=37;break;
 case 37: 
 var $cond_i554;
 var $add22=((($cond_i513)+(2))|0);
 var $add23=((($add22)+($cond_i554))|0);
 var $add18_pn=$add23;label=38;break;
 case 38: 
 var $add18_pn;
 var $cond=((($add18_pn)+($18))|0);
 var $cmp25=($cond>>>0)>100;
 if($cmp25){label=39;break;}else{var $__mb_0=$arraydecay;var $__h_sroa_0_1=0;var $39=$16;label=46;break;}
 case 39: 
 var $mul26=$cond<<2;
 var $call29=_malloc($mul26);
 var $28=$call29;
 var $cmp31=($call29|0)==0;
 if($cmp31){label=40;break;}else{var $__mb_0=$28;var $__h_sroa_0_1=$28;var $39=$16;label=46;break;}
 case 40: 
 (function() { try { __THREW__ = 0; return __ZSt17__throw_bad_allocv() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=41;break; } else { var $__h_sroa_0_0=$28;label=44;break; }
 case 41: 
 var $_pre=HEAP8[($__size__i_i)];
 var $__mb_0=$28;var $__h_sroa_0_1=$28;var $39=$_pre;label=46;break;
 case 42: 
 var $29$0 = ___cxa_find_matching_catch(-1, -1); var $29$1 = tempRet0;
 var $30=$29$0;
 var $31=$29$1;
 var $ehselector_slot_1=$31;var $exn_slot_1=$30;label=58;break;
 case 43: 
 var $32$0 = ___cxa_find_matching_catch(-1, -1); var $32$1 = tempRet0;
 var $33=$32$0;
 var $34=$32$1;
 var $ehselector_slot_0=$34;var $exn_slot_0=$33;label=57;break;
 case 44: 
 var $__h_sroa_0_0;
 var $35$0 = ___cxa_find_matching_catch(-1, -1); var $35$1 = tempRet0;
 var $36=$35$0;
 var $37=$35$1;
 var $tobool_i_i_i326=($__h_sroa_0_0|0)==0;
 if($tobool_i_i_i326){var $ehselector_slot_0=$37;var $exn_slot_0=$36;label=57;break;}else{label=45;break;}
 case 45: 
 var $38=$__h_sroa_0_0;
 _free($38);
 var $ehselector_slot_0=$37;var $exn_slot_0=$36;label=57;break;
 case 46: 
 var $39;
 var $__h_sroa_0_1;
 var $__mb_0;
 var $__fmtflags__i=(($__iob+4)|0);
 var $40=HEAP32[(($__fmtflags__i)>>2)];
 var $and_i_i_i281=$39&1;
 var $tobool_i_i_i282=(($and_i_i_i281<<24)>>24)==0;
 if($tobool_i_i_i282){label=48;break;}else{label=47;break;}
 case 47: 
 var $__data__i21_i_i289=(($__digits+8)|0);
 var $41=HEAP32[(($__data__i21_i_i289)>>2)];
 var $cond_i_i=$41;var $cond_i_i30048=$41;label=49;break;
 case 48: 
 var $__data__i_i_i297=(($__digits+4)|0);
 var $__data__i_i_i=(($__digits+4)|0);
 var $cond_i_i=$__data__i_i_i;var $cond_i_i30048=$__data__i_i_i297;label=49;break;
 case 49: 
 var $cond_i_i30048;
 var $cond_i_i;
 var $conv_i_i219=($39&255);
 var $and_i_i220=$conv_i_i219&1;
 var $tobool_i_i221=($and_i_i220|0)==0;
 if($tobool_i_i221){label=51;break;}else{label=50;break;}
 case 50: 
 var $__size__i23_i228=(($__digits+4)|0);
 var $42=HEAP32[(($__size__i23_i228)>>2)];
 var $cond_i240=$42;label=52;break;
 case 51: 
 var $shr_i_i23832=$conv_i_i219>>>1;
 var $cond_i240=$shr_i_i23832;label=52;break;
 case 52: 
 var $cond_i240;
 var $add_ptr=(($cond_i_i+($cond_i240<<2))|0);
 var $43=HEAP32[(($__dp)>>2)];
 var $44=HEAP32[(($__ts)>>2)];
 (function() { try { __THREW__ = 0; return __ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i($__mb_0,$__mi,$__me,$40,$cond_i_i30048,$add_ptr,$8,$15,$__pat,$43,$44,$__grp,$__sym,$__sn,$18) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=53;break; } else { var $__h_sroa_0_0=$__h_sroa_0_1;label=44;break; }
 case 53: 
 var $45=(($__s)|0);
 var $46=HEAP32[(($45)>>2)];
 var $47=(($agg_tmp)|0);
 HEAP32[(($47)>>2)]=$46;
 var $48=HEAP32[(($__mi)>>2)];
 var $49=HEAP32[(($__me)>>2)];
 (function() { try { __THREW__ = 0; return __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg_result,$agg_tmp,$__mb_0,$48,$49,$__iob,$__fl) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=54;break; } else { var $__h_sroa_0_0=$__h_sroa_0_1;label=44;break; }
 case 54: 
 var $tobool_i_i_i=($__h_sroa_0_1|0)==0;
 if($tobool_i_i_i){label=56;break;}else{label=55;break;}
 case 55: 
 var $50=$__h_sroa_0_1;
 _free($50);
 label=56;break;
 case 56: 
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($__sn);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grp);
 var $51=HEAP32[(($__locale__i)>>2)];
 var $52=(($51)|0);
 var $call_i=__ZNSt3__114__shared_count16__release_sharedEv($52);
 STACKTOP=sp;return;
 case 57: 
 var $exn_slot_0;
 var $ehselector_slot_0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($__sn);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grp);
 var $ehselector_slot_1=$ehselector_slot_0;var $exn_slot_1=$exn_slot_0;label=58;break;
 case 58: 
 var $exn_slot_1;
 var $ehselector_slot_1;
 var $53=HEAP32[(($__locale__i)>>2)];
 var $54=(($53)|0);
 var $call_i42=__ZNSt3__114__shared_count16__release_sharedEv($54);
 var $lpad_val$0=$exn_slot_1;
 var $lpad_val$1=0;
 var $lpad_val46$0=$lpad_val$0;
 var $lpad_val46$1=$ehselector_slot_1;
 ___resumeException($lpad_val46$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__18messagesIcED0Ev($this){
 var label=0;
 var $0=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($0);
 var $1=$this;
 __ZdlPv($1);
 return;
}
function __ZNSt3__18messagesIcED1Ev($this){
 var label=0;
 var $0=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($0);
 return;
}
function __ZNKSt3__18messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE($this,$__nm,$0){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__size__i_i_i_i=$__nm;
 var $1=HEAP8[($__size__i_i_i_i)];
 var $and_i_i_i_i=$1&1;
 var $tobool_i_i_i_i=(($and_i_i_i_i<<24)>>24)==0;
 if($tobool_i_i_i_i){label=3;break;}else{label=2;break;}
 case 2: 
 var $__data__i21_i_i_i=(($__nm+8)|0);
 var $2=HEAP32[(($__data__i21_i_i_i)>>2)];
 var $cond_i_i_i=$2;label=4;break;
 case 3: 
 var $__s_i_i_i_i=$__nm;
 var $arrayidx_i_i_i_i=(($__s_i_i_i_i+1)|0);
 var $cond_i_i_i=$arrayidx_i_i_i_i;label=4;break;
 case 4: 
 var $cond_i_i_i;
 var $call2=_catopen($cond_i_i_i,1);
 var $3=$call2;
 var $not_cmp=($call2|0)!=-1;
 var $shr=($not_cmp&1);
 var $__cat_0=$3>>>($shr>>>0);
 return $__cat_0;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__18messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($agg_result,$this,$__c,$__set,$__msgid,$__dflt){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__ndflt=sp;
 var $__size__i_i_i_i=$__ndflt;
 HEAP32[(($__size__i_i_i_i)>>2)]=0; HEAP32[((($__size__i_i_i_i)+(4))>>2)]=0; HEAP32[((($__size__i_i_i_i)+(8))>>2)]=0;
 var $agg_result26=$agg_result;
 var $__s_i_i_i_i125=$__dflt;
 var $__size__i_i_i_i126=$__dflt;
 var $0=HEAP8[($__size__i_i_i_i126)];
 var $and_i_i_i_i128=$0&1;
 var $tobool_i_i_i_i129=(($and_i_i_i_i128<<24)>>24)==0;
 if($tobool_i_i_i_i129){label=3;break;}else{label=2;break;}
 case 2: 
 var $__data__i21_i_i_i136=(($__dflt+8)|0);
 var $1=HEAP32[(($__data__i21_i_i_i136)>>2)];
 var $cond_i_i_i205=$1;var $cond_i_i_i14728=$1;label=4;break;
 case 3: 
 var $arrayidx_i_i_i_i145=(($__s_i_i_i_i125+1)|0);
 var $arrayidx_i_i_i_i203=(($__s_i_i_i_i125+1)|0);
 var $cond_i_i_i205=$arrayidx_i_i_i_i203;var $cond_i_i_i14728=$arrayidx_i_i_i_i145;label=4;break;
 case 4: 
 var $cond_i_i_i14728;
 var $cond_i_i_i205;
 var $conv_i_i=($0&255);
 var $and_i_i=$conv_i_i&1;
 var $tobool_i_i=($and_i_i|0)==0;
 if($tobool_i_i){label=6;break;}else{label=5;break;}
 case 5: 
 var $__size__i23_i=(($__dflt+4)|0);
 var $2=HEAP32[(($__size__i23_i)>>2)];
 var $cond_i=$2;label=7;break;
 case 6: 
 var $shr_i_i17=$conv_i_i>>>1;
 var $cond_i=$shr_i_i17;label=7;break;
 case 7: 
 var $cond_i;
 var $add_ptr=(($cond_i_i_i205+$cond_i)|0);
 var $cmp_i9323=($cond_i_i_i14728>>>0)<($add_ptr>>>0);
 if($cmp_i9323){var $__wb_addr_i_024=$cond_i_i_i14728;label=9;break;}else{label=8;break;}
 case 8: 
 var $cmp30=($__c|0)==-1;
 var $shl31=$__c<<1;
 var $3=$shl31;
 var $4=($cmp30?-1:$3);
 var $11=$4;label=16;break;
 case 9: 
 var $__wb_addr_i_024;
 var $5=HEAP8[($__wb_addr_i_024)];
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($__ndflt,$5) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=10;break; } else { label=12;break; }
 case 10: 
 var $incdec_ptr_i99=(($__wb_addr_i_024+1)|0);
 var $cmp_i93=($incdec_ptr_i99>>>0)<($add_ptr>>>0);
 if($cmp_i93){var $__wb_addr_i_024=$incdec_ptr_i99;label=9;break;}else{label=11;break;}
 case 11: 
 var $_pre=HEAP8[($__size__i_i_i_i)];
 var $phitmp=$_pre&1;
 var $phitmp27=(($phitmp<<24)>>24)==0;
 var $cmp=($__c|0)==-1;
 var $shl=$__c<<1;
 var $6=$shl;
 var $7=($cmp?-1:$6);
 if($phitmp27){var $11=$7;label=16;break;}else{label=15;break;}
 case 12: 
 var $lpad_loopexit21$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_loopexit21$1 = tempRet0;
 var $lpad_phi$1=$lpad_loopexit21$1;var $lpad_phi$0=$lpad_loopexit21$0;label=14;break;
 case 13: 
 var $lpad_nonloopexit22$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_nonloopexit22$1 = tempRet0;
 var $lpad_phi$1=$lpad_nonloopexit22$1;var $lpad_phi$0=$lpad_nonloopexit22$0;label=14;break;
 case 14: 
 var $lpad_phi$0;
 var $lpad_phi$1;
 var $8=$lpad_phi$0;
 var $9=$lpad_phi$1;
 var $ehselector_slot_0=$9;var $exn_slot_0=$8;label=23;break;
 case 15: 
 var $__data__i21_i_i_i=(($__ndflt+8)|0);
 var $10=HEAP32[(($__data__i21_i_i_i)>>2)];
 var $cond_i_i_i=$10;var $12=$7;label=17;break;
 case 16: 
 var $11;
 var $__s_i_i_i_i=$__ndflt;
 var $arrayidx_i_i_i_i=(($__s_i_i_i_i+1)|0);
 var $cond_i_i_i=$arrayidx_i_i_i_i;var $12=$11;label=17;break;
 case 17: 
 var $12;
 var $cond_i_i_i;
 var $call10=(function() { try { __THREW__ = 0; return _catgets($12,$__set,$__msgid,$cond_i_i_i) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=18;break; } else { label=13;break; }
 case 18: 
 HEAP32[(($agg_result26)>>2)]=0; HEAP32[((($agg_result26)+(4))>>2)]=0; HEAP32[((($agg_result26)+(8))>>2)]=0;
 var $call16=_strlen($call10);
 var $add_ptr17=(($call10+$call16)|0);
 var $cmp_i18=($call16|0)>0;
 if($cmp_i18){var $__nb_addr_i_019=$call10;label=19;break;}else{label=22;break;}
 case 19: 
 var $__nb_addr_i_019;
 var $13=HEAP8[($__nb_addr_i_019)];
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($agg_result,$13) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=20;break; } else { label=21;break; }
 case 20: 
 var $incdec_ptr_i=(($__nb_addr_i_019+1)|0);
 var $cmp_i=($incdec_ptr_i>>>0)<($add_ptr17>>>0);
 if($cmp_i){var $__nb_addr_i_019=$incdec_ptr_i;label=19;break;}else{label=22;break;}
 case 21: 
 var $14$0 = ___cxa_find_matching_catch(-1, -1); var $14$1 = tempRet0;
 var $15=$14$0;
 var $16=$14$1;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($agg_result);
 var $ehselector_slot_0=$16;var $exn_slot_0=$15;label=23;break;
 case 22: 
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__ndflt);
 STACKTOP=sp;return;
 case 23: 
 var $exn_slot_0;
 var $ehselector_slot_0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__ndflt);
 var $lpad_val$0=$exn_slot_0;
 var $lpad_val$1=0;
 var $lpad_val20$0=$lpad_val$0;
 var $lpad_val20$1=$ehselector_slot_0;
 ___resumeException($lpad_val20$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__18messagesIcE8do_closeEi($this,$__c){
 var label=0;
 var $cmp=($__c|0)==-1;
 var $shl=$__c<<1;
 var $0=$shl;
 var $1=($cmp?-1:$0);
 var $call=_catclose($1);
 return;
}
function __ZNSt3__18messagesIwED0Ev($this){
 var label=0;
 var $0=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($0);
 var $1=$this;
 __ZdlPv($1);
 return;
}
function __ZNSt3__18messagesIwED1Ev($this){
 var label=0;
 var $0=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($0);
 return;
}
function __ZNKSt3__18messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE($this,$__nm,$0){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__size__i_i_i_i=$__nm;
 var $1=HEAP8[($__size__i_i_i_i)];
 var $and_i_i_i_i=$1&1;
 var $tobool_i_i_i_i=(($and_i_i_i_i<<24)>>24)==0;
 if($tobool_i_i_i_i){label=3;break;}else{label=2;break;}
 case 2: 
 var $__data__i21_i_i_i=(($__nm+8)|0);
 var $2=HEAP32[(($__data__i21_i_i_i)>>2)];
 var $cond_i_i_i=$2;label=4;break;
 case 3: 
 var $__s_i_i_i_i=$__nm;
 var $arrayidx_i_i_i_i=(($__s_i_i_i_i+1)|0);
 var $cond_i_i_i=$arrayidx_i_i_i_i;label=4;break;
 case 4: 
 var $cond_i_i_i;
 var $call2=_catopen($cond_i_i_i,1);
 var $3=$call2;
 var $not_cmp=($call2|0)!=-1;
 var $shr=($not_cmp&1);
 var $__cat_0=$3>>>($shr>>>0);
 return $__cat_0;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__18messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE($agg_result,$this,$__c,$__set,$__msgid,$__dflt){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+224)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__mb_i232=sp;
 var $__buf_i234=(sp)+(8);
 var $__bn_i235=(sp)+(40);
 var $__wn_i=(sp)+(48);
 var $__mb_i=(sp)+(56);
 var $__buf_i=(sp)+(64);
 var $__bn_i=(sp)+(192);
 var $__nn_i=(sp)+(200);
 var $__ndflt=(sp)+(208);
 var $__size__i_i_i_i202=$__ndflt;
 var $temp_lvalue=STACKTOP;STACKTOP = (STACKTOP + 8)|0;(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $temp_lvalue12=STACKTOP;STACKTOP = (STACKTOP + 8)|0;(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 HEAP32[(($__size__i_i_i_i202)>>2)]=0; HEAP32[((($__size__i_i_i_i202)+(4))>>2)]=0; HEAP32[((($__size__i_i_i_i202)+(8))>>2)]=0;
 var $agg_result59=$agg_result;
 var $0=(($temp_lvalue)|0);
 var $1=(($temp_lvalue)|0);
 var $__shared_owners__i_i_i_i_i=(($temp_lvalue+4)|0);
 HEAP32[(($__shared_owners__i_i_i_i_i)>>2)]=0;
 HEAP32[(($1)>>2)]=5864;
 var $__size__i_i_i_i=$__dflt;
 var $2=HEAP8[($__size__i_i_i_i)];
 var $and_i_i_i_i=$2&1;
 var $tobool_i_i_i_i=(($and_i_i_i_i<<24)>>24)==0;
 if($tobool_i_i_i_i){label=3;break;}else{label=2;break;}
 case 2: 
 var $__data__i21_i_i_i=(($__dflt+8)|0);
 var $3=HEAP32[(($__data__i21_i_i_i)>>2)];
 var $cond_i_i_i105=$3;var $cond_i_i_i63=$3;label=4;break;
 case 3: 
 var $__data__i_i_i_i=(($__dflt+4)|0);
 var $__data__i_i_i_i102=(($__dflt+4)|0);
 var $cond_i_i_i105=$__data__i_i_i_i102;var $cond_i_i_i63=$__data__i_i_i_i;label=4;break;
 case 4: 
 var $cond_i_i_i63;
 var $cond_i_i_i105;
 var $conv_i_i=($2&255);
 var $and_i_i=$conv_i_i&1;
 var $tobool_i_i=($and_i_i|0)==0;
 if($tobool_i_i){label=6;break;}else{label=5;break;}
 case 5: 
 var $__size__i23_i=(($__dflt+4)|0);
 var $4=HEAP32[(($__size__i23_i)>>2)];
 var $cond_i118=$4;label=7;break;
 case 6: 
 var $shr_i_i30=$conv_i_i>>>1;
 var $cond_i118=$shr_i_i30;label=7;break;
 case 7: 
 var $cond_i118;
 var $add_ptr=(($cond_i_i_i105+($cond_i118<<2))|0);
 var $cmp_i23856=($cond_i_i_i63>>>0)<($add_ptr>>>0);
 if($cmp_i23856){label=8;break;}else{label=21;break;}
 case 8: 
 var $5=$temp_lvalue;
 var $arraydecay_i245=(($__buf_i234)|0);
 var $add_ptr_i246=(($__buf_i234+32)|0);
 var $__wb_addr_i_057=$cond_i_i_i63;var $vtable_i243=5864;label=9;break;
 case 9: 
 var $vtable_i243;
 var $__wb_addr_i_057;
 HEAP32[(($__wn_i)>>2)]=$__wb_addr_i_057;
 var $vfn_i244=(($vtable_i243+12)|0);
 var $6=HEAP32[(($vfn_i244)>>2)];
 var $call_i260=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$6]($0,$__mb_i232,$__wb_addr_i_057,$add_ptr,$__wn_i,$arraydecay_i245,$add_ptr_i246,$__bn_i235) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=10;break; } else { label=24;break; }
 case 10: 
 var $cmp4_i=($call_i260|0)==2;
 var $7=HEAP32[(($__wn_i)>>2)];
 var $cmp5_i=($7|0)==($__wb_addr_i_057|0);
 var $or_cond31=$cmp4_i|$cmp5_i;
 if($or_cond31){label=12;break;}else{label=11;break;}
 case 11: 
 var $8=HEAP32[(($__bn_i235)>>2)];
 var $cmp7_i25151=($arraydecay_i245>>>0)<($8>>>0);
 if($cmp7_i25151){var $__p_i236_052=$arraydecay_i245;label=16;break;}else{var $13=$7;label=19;break;}
 case 12: 
 var $exception_i=___cxa_allocate_exception(8);
 var $9=$exception_i;
 (function() { try { __THREW__ = 0; return __ZNSt13runtime_errorC2EPKc($9,1248) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=13;break; } else { label=15;break; }
 case 13: 
 (function() { try { __THREW__ = 0; return ___cxa_throw($exception_i,10280,(46)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=14;break; } else { label=25;break; }
 case 14: 
 throw "Reached an unreachable!";
 case 15: 
 var $10$0 = ___cxa_find_matching_catch(-1, -1); var $10$1 = tempRet0;
 ___cxa_free_exception($exception_i);
 var $eh_lpad_body$1=$10$1;var $eh_lpad_body$0=$10$0;label=26;break;
 case 16: 
 var $__p_i236_052;
 var $11=HEAP8[($__p_i236_052)];
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($__ndflt,$11) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=17;break; } else { label=23;break; }
 case 17: 
 var $incdec_ptr_i257=(($__p_i236_052+1)|0);
 var $12=HEAP32[(($__bn_i235)>>2)];
 var $cmp7_i251=($incdec_ptr_i257>>>0)<($12>>>0);
 if($cmp7_i251){var $__p_i236_052=$incdec_ptr_i257;label=16;break;}else{label=18;break;}
 case 18: 
 var $_pre60=HEAP32[(($__wn_i)>>2)];
 var $13=$_pre60;label=19;break;
 case 19: 
 var $13;
 var $cmp_i238=($13>>>0)<($add_ptr>>>0);
 if($cmp_i238){label=20;break;}else{label=21;break;}
 case 20: 
 var $vtable_i243_pre=HEAP32[(($5)>>2)];
 var $__wb_addr_i_057=$13;var $vtable_i243=$vtable_i243_pre;label=9;break;
 case 21: 
 var $14=(($temp_lvalue)|0);
 __ZNSt3__114__shared_countD2Ev($14);
 var $cmp=($__c|0)==-1;
 var $shl=$__c<<1;
 var $15=$shl;
 var $16=($cmp?-1:$15);
 var $17=HEAP8[($__size__i_i_i_i202)];
 var $and_i_i_i_i204=$17&1;
 var $tobool_i_i_i_i205=(($and_i_i_i_i204<<24)>>24)==0;
 if($tobool_i_i_i_i205){label=28;break;}else{label=27;break;}
 case 22: 
 var $18$0 = ___cxa_find_matching_catch(-1, -1); var $18$1 = tempRet0;
 var $19=$18$0;
 var $20=$18$1;
 var $ehselector_slot_0=$20;var $exn_slot_0=$19;label=49;break;
 case 23: 
 var $lpad_loopexit49$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_loopexit49$1 = tempRet0;
 var $eh_lpad_body$1=$lpad_loopexit49$1;var $eh_lpad_body$0=$lpad_loopexit49$0;label=26;break;
 case 24: 
 var $lpad_loopexit53$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_loopexit53$1 = tempRet0;
 var $eh_lpad_body$1=$lpad_loopexit53$1;var $eh_lpad_body$0=$lpad_loopexit53$0;label=26;break;
 case 25: 
 var $lpad_nonloopexit54$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_nonloopexit54$1 = tempRet0;
 var $eh_lpad_body$1=$lpad_nonloopexit54$1;var $eh_lpad_body$0=$lpad_nonloopexit54$0;label=26;break;
 case 26: 
 var $eh_lpad_body$0;
 var $eh_lpad_body$1;
 var $21=$eh_lpad_body$0;
 var $22=$eh_lpad_body$1;
 var $23=(($temp_lvalue)|0);
 __ZNSt3__114__shared_countD2Ev($23);
 var $ehselector_slot_0=$22;var $exn_slot_0=$21;label=49;break;
 case 27: 
 var $__data__i21_i_i_i212=(($__ndflt+8)|0);
 var $24=HEAP32[(($__data__i21_i_i_i212)>>2)];
 var $cond_i_i_i223=$24;label=29;break;
 case 28: 
 var $__s_i_i_i_i201=$__ndflt;
 var $arrayidx_i_i_i_i221=(($__s_i_i_i_i201+1)|0);
 var $cond_i_i_i223=$arrayidx_i_i_i_i221;label=29;break;
 case 29: 
 var $cond_i_i_i223;
 var $call11=(function() { try { __THREW__ = 0; return _catgets($16,$__set,$__msgid,$cond_i_i_i223) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=30;break; } else { label=22;break; }
 case 30: 
 HEAP32[(($agg_result59)>>2)]=0; HEAP32[((($agg_result59)+(4))>>2)]=0; HEAP32[((($agg_result59)+(8))>>2)]=0;
 var $25=(($temp_lvalue12)|0);
 var $26=(($temp_lvalue12)|0);
 var $__shared_owners__i_i_i_i_i145=(($temp_lvalue12+4)|0);
 HEAP32[(($__shared_owners__i_i_i_i_i145)>>2)]=0;
 HEAP32[(($26)>>2)]=5808;
 var $call19=_strlen($call11);
 var $add_ptr20=(($call11+$call19)|0);
 var $cmp_i46=($call19|0)<1;
 if($cmp_i46){label=44;break;}else{label=31;break;}
 case 31: 
 var $27=$temp_lvalue12;
 var $sub_ptr_lhs_cast_i=$add_ptr20;
 var $arraydecay_i=(($__buf_i)|0);
 var $add_ptr5_i=(($__buf_i+128)|0);
 var $__nb_addr_i_047=$call11;var $vtable_i=5808;label=32;break;
 case 32: 
 var $vtable_i;
 var $__nb_addr_i_047;
 HEAP32[(($__nn_i)>>2)]=$__nb_addr_i_047;
 var $vfn_i=(($vtable_i+16)|0);
 var $28=HEAP32[(($vfn_i)>>2)];
 var $sub_ptr_rhs_cast_i=$__nb_addr_i_047;
 var $sub_ptr_sub_i=((($sub_ptr_lhs_cast_i)-($sub_ptr_rhs_cast_i))|0);
 var $cmp3_i=($sub_ptr_sub_i|0)>32;
 var $add_ptr_i=(($__nb_addr_i_047+32)|0);
 var $cond_i=($cmp3_i?$add_ptr_i:$add_ptr20);
 var $call_i46=(function() { try { __THREW__ = 0; return FUNCTION_TABLE[$28]($25,$__mb_i,$__nb_addr_i_047,$cond_i,$__nn_i,$arraydecay_i,$add_ptr5_i,$__bn_i) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=33;break; } else { label=46;break; }
 case 33: 
 var $cmp6_i=($call_i46|0)==2;
 var $29=HEAP32[(($__nn_i)>>2)];
 var $cmp7_i=($29|0)==($__nb_addr_i_047|0);
 var $or_cond33=$cmp6_i|$cmp7_i;
 if($or_cond33){label=35;break;}else{label=34;break;}
 case 34: 
 var $30=HEAP32[(($__bn_i)>>2)];
 var $cmp9_i41=($arraydecay_i>>>0)<($30>>>0);
 if($cmp9_i41){var $__p_i_042=$arraydecay_i;label=39;break;}else{var $35=$29;label=42;break;}
 case 35: 
 var $exception_i34=___cxa_allocate_exception(8);
 var $31=$exception_i34;
 (function() { try { __THREW__ = 0; return __ZNSt13runtime_errorC2EPKc($31,1248) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=36;break; } else { label=38;break; }
 case 36: 
 (function() { try { __THREW__ = 0; return ___cxa_throw($exception_i34,10280,(46)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=37;break; } else { label=47;break; }
 case 37: 
 throw "Reached an unreachable!";
 case 38: 
 var $32$0 = ___cxa_find_matching_catch(-1, -1); var $32$1 = tempRet0;
 ___cxa_free_exception($exception_i34);
 var $eh_lpad_body38$1=$32$1;var $eh_lpad_body38$0=$32$0;label=48;break;
 case 39: 
 var $__p_i_042;
 var $33=HEAP32[(($__p_i_042)>>2)];
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($agg_result,$33) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=40;break; } else { label=45;break; }
 case 40: 
 var $incdec_ptr_i=(($__p_i_042+4)|0);
 var $34=HEAP32[(($__bn_i)>>2)];
 var $cmp9_i=($incdec_ptr_i>>>0)<($34>>>0);
 if($cmp9_i){var $__p_i_042=$incdec_ptr_i;label=39;break;}else{label=41;break;}
 case 41: 
 var $_pre=HEAP32[(($__nn_i)>>2)];
 var $35=$_pre;label=42;break;
 case 42: 
 var $35;
 var $cmp_i=($35>>>0)<($add_ptr20>>>0);
 if($cmp_i){label=43;break;}else{label=44;break;}
 case 43: 
 var $vtable_i_pre=HEAP32[(($27)>>2)];
 var $__nb_addr_i_047=$35;var $vtable_i=$vtable_i_pre;label=32;break;
 case 44: 
 var $36=(($temp_lvalue12)|0);
 __ZNSt3__114__shared_countD2Ev($36);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__ndflt);
 STACKTOP=sp;return;
 case 45: 
 var $lpad_loopexit$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_loopexit$1 = tempRet0;
 var $eh_lpad_body38$1=$lpad_loopexit$1;var $eh_lpad_body38$0=$lpad_loopexit$0;label=48;break;
 case 46: 
 var $lpad_loopexit43$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_loopexit43$1 = tempRet0;
 var $eh_lpad_body38$1=$lpad_loopexit43$1;var $eh_lpad_body38$0=$lpad_loopexit43$0;label=48;break;
 case 47: 
 var $lpad_nonloopexit44$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_nonloopexit44$1 = tempRet0;
 var $eh_lpad_body38$1=$lpad_nonloopexit44$1;var $eh_lpad_body38$0=$lpad_nonloopexit44$0;label=48;break;
 case 48: 
 var $eh_lpad_body38$0;
 var $eh_lpad_body38$1;
 var $37=$eh_lpad_body38$0;
 var $38=$eh_lpad_body38$1;
 var $39=(($temp_lvalue12)|0);
 __ZNSt3__114__shared_countD2Ev($39);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($agg_result);
 var $ehselector_slot_0=$38;var $exn_slot_0=$37;label=49;break;
 case 49: 
 var $exn_slot_0;
 var $ehselector_slot_0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__ndflt);
 var $lpad_val$0=$exn_slot_0;
 var $lpad_val$1=0;
 var $lpad_val24$0=$lpad_val$0;
 var $lpad_val24$1=$ehselector_slot_0;
 ___resumeException($lpad_val24$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__18messagesIwE8do_closeEi($this,$__c){
 var label=0;
 var $cmp=($__c|0)==-1;
 var $shl=$__c<<1;
 var $0=$shl;
 var $1=($cmp?-1:$0);
 var $call=_catclose($1);
 return;
}
function __ZNSt3__17codecvtIwc11__mbstate_tED2Ev($this){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $0=(($this)|0);
 HEAP32[(($0)>>2)]=5328;
 var $__l=(($this+8)|0);
 var $1=HEAP32[(($__l)>>2)];
 var $2=HEAP8[(15944)];
 var $guard_uninitialized_i=(($2<<24)>>24)==0;
 if($guard_uninitialized_i){label=2;break;}else{label=6;break;}
 case 2: 
 var $3=___cxa_guard_acquire(15944);
 var $tobool_i=($3|0)==0;
 if($tobool_i){label=6;break;}else{label=3;break;}
 case 3: 
 var $call_i=(function() { try { __THREW__ = 0; return _newlocale(2147483647,2960,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=4;break; } else { label=5;break; }
 case 4: 
 HEAP32[((13952)>>2)]=$call_i;
 label=6;break;
 case 5: 
 var $4$0 = ___cxa_find_matching_catch(-1, -1,0); var $4$1 = tempRet0;
 label=9;break;
 case 6: 
 var $5=HEAP32[((13952)>>2)];
 var $cmp=($1|0)==($5|0);
 if($cmp){label=10;break;}else{label=7;break;}
 case 7: 
 var $6=HEAP32[(($__l)>>2)];
 (function() { try { __THREW__ = 0; return _freelocale($6) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=10;break; } else { label=8;break; }
 case 8: 
 var $7$0 = ___cxa_find_matching_catch(-1, -1,0); var $7$1 = tempRet0;
 label=9;break;
 case 9: 
 var $8=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($8);
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 10: 
 var $9=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($9);
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $exception=___cxa_allocate_exception(8);
 var $0=$exception;
 (function() { try { __THREW__ = 0; return __ZNSt11logic_errorC2EPKc($0,2992) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=3;break; }
 case 2: 
 var $1=$exception;
 HEAP32[(($1)>>2)]=4264;
 ___cxa_throw($exception,10296,(78));
 throw "Reached an unreachable!";
 case 3: 
 var $2$0 = ___cxa_find_matching_catch(-1, -1); var $2$1 = tempRet0;
 ___cxa_free_exception($exception);
 ___resumeException($2$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__16locale5__impC2Ej($this,$refs){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+448)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__p_i_i_i278=sp;
 var $__p_i_i_i268=(sp)+(16);
 var $__p_i_i_i258=(sp)+(32);
 var $__p_i_i_i239=(sp)+(48);
 var $__p_i_i_i227=(sp)+(64);
 var $__p_i_i_i217=(sp)+(80);
 var $__p_i_i_i207=(sp)+(96);
 var $__p_i_i_i197=(sp)+(112);
 var $__p_i_i_i187=(sp)+(128);
 var $__p_i_i_i177=(sp)+(144);
 var $__p_i_i_i167=(sp)+(160);
 var $__p_i_i_i157=(sp)+(176);
 var $__p_i_i_i147=(sp)+(192);
 var $__p_i_i_i137=(sp)+(208);
 var $__p_i_i_i127=(sp)+(224);
 var $__p_i_i_i117=(sp)+(240);
 var $__p_i_i_i107=(sp)+(256);
 var $__p_i_i_i97=(sp)+(272);
 var $__p_i_i_i87=(sp)+(288);
 var $__p_i_i_i77=(sp)+(304);
 var $__p_i_i_i67=(sp)+(320);
 var $__p_i_i_i57=(sp)+(336);
 var $__p_i_i_i47=(sp)+(352);
 var $__p_i_i_i36=(sp)+(368);
 var $__p_i_i_i26=(sp)+(384);
 var $__p_i_i_i16=(sp)+(400);
 var $__p_i_i_i6=(sp)+(416);
 var $__p_i_i_i=(sp)+(432);
 var $sub_i=((($refs)-(1))|0);
 var $0=(($this)|0);
 var $__shared_owners__i_i=(($this+4)|0);
 HEAP32[(($__shared_owners__i_i)>>2)]=$sub_i;
 HEAP32[(($0)>>2)]=5584;
 var $__begin__i_i2=(($this+8)|0);
 var $__end__i_i=(($this+12)|0);
 var $__first__i_i_i_i_i=(($this+16)|0);
 var $__allocated__i_i_i_i_i_i_i=(($this+136)|0);
 HEAP8[($__allocated__i_i_i_i_i_i_i)]=1;
 var $buf__i_i_i_i=(($this+24)|0);
 var $1=$buf__i_i_i_i;
 HEAP32[(($__end__i_i)>>2)]=$1;
 HEAP32[(($__begin__i_i2)>>2)]=$1;
 var $add_ptr_i_i288=(($buf__i_i_i_i+112)|0);
 var $add_ptr_i_i=$add_ptr_i_i288;
 HEAP32[(($__first__i_i_i_i_i)>>2)]=$add_ptr_i_i;
 var $__n_addr_0_i_i=28;var $2=$1;label=2;break;
 case 2: 
 var $2;
 var $__n_addr_0_i_i;
 var $new_isnull_i_i_i_i=($2|0)==0;
 if($new_isnull_i_i_i_i){var $3=0;label=4;break;}else{label=3;break;}
 case 3: 
 HEAP32[(($2)>>2)]=0;
 var $_pre2_i_i=HEAP32[(($__end__i_i)>>2)];
 var $3=$_pre2_i_i;label=4;break;
 case 4: 
 var $3;
 var $incdec_ptr_i_i=(($3+4)|0);
 HEAP32[(($__end__i_i)>>2)]=$incdec_ptr_i_i;
 var $dec_i_i=((($__n_addr_0_i_i)-(1))|0);
 var $cmp_i8_i=($dec_i_i|0)==0;
 if($cmp_i8_i){label=5;break;}else{var $__n_addr_0_i_i=$dec_i_i;var $2=$incdec_ptr_i_i;label=2;break;}
 case 5: 
 var $name_=(($this+144)|0);
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($name_,2960,1) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=6;break; } else { label=110;break; }
 case 6: 
 var $4=HEAP32[(($__begin__i_i2)>>2)];
 var $5=HEAP32[(($__end__i_i)>>2)];
 var $cmp_i_i_i289=($4|0)==($5|0);
 if($cmp_i_i_i289){label=8;break;}else{label=7;break;}
 case 7: 
 var $6=$4;
 var $scevgep=((($5)-(4))|0);
 var $scevgep290=$scevgep;
 var $7=(((-$6))|0);
 var $uglygep=(($scevgep290+$7)|0);
 var $uglygep291=$uglygep;
 var $8=$uglygep291>>>2;
 var $9=$8^-1;
 var $scevgep292=(($5+($9<<2))|0);
 HEAP32[(($__end__i_i)>>2)]=$scevgep292;
 label=8;break;
 case 8: 
 HEAP32[((14084)>>2)]=0;
 HEAP32[((14080)>>2)]=5288;
 var $10=$__p_i_i_i;
 var $11=HEAP32[((15064)>>2)];
 var $cmp_i_i_i4=($11|0)==-1;
 if($cmp_i_i_i4){label=10;break;}else{label=9;break;}
 case 9: 
 var $ref_tmp_i_sroa_0_0__idx_i_i=(($__p_i_i_i)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i)>>2)]=15064;
 var $ref_tmp_i_sroa_1_4__idx6_i_i=(($__p_i_i_i+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i=(($__p_i_i_i+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(15064,$10,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=10;break; } else { label=111;break; }
 case 10: 
 var $12=HEAP32[((15068)>>2)];
 var $sub_i_i=((($12)-(1))|0);
 (function() { try { __THREW__ = 0; return __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,14080,$sub_i_i) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=11;break; } else { label=111;break; }
 case 11: 
 HEAP32[((14076)>>2)]=0;
 HEAP32[((14072)>>2)]=5248;
 var $13=$__p_i_i_i6;
 var $14=HEAP32[((15056)>>2)];
 var $cmp_i_i_i7=($14|0)==-1;
 if($cmp_i_i_i7){label=13;break;}else{label=12;break;}
 case 12: 
 var $ref_tmp_i_sroa_0_0__idx_i_i8=(($__p_i_i_i6)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i8)>>2)]=15056;
 var $ref_tmp_i_sroa_1_4__idx6_i_i9=(($__p_i_i_i6+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i9)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i10=(($__p_i_i_i6+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i10)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(15056,$13,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=13;break; } else { label=111;break; }
 case 13: 
 var $15=HEAP32[((15060)>>2)];
 var $sub_i_i12=((($15)-(1))|0);
 (function() { try { __THREW__ = 0; return __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,14072,$sub_i_i12) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=14;break; } else { label=111;break; }
 case 14: 
 HEAP32[((14284)>>2)]=0;
 HEAP32[((14280)>>2)]=5696;
 HEAP32[((14288)>>2)]=0;
 HEAP8[(14292)]=0;
 var $call_i_i_i=(function() { try { __THREW__ = 0; return ___ctype_b_loc() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=16;break; } else { label=15;break; }
 case 15: 
 var $16$0 = ___cxa_find_matching_catch(-1, -1,0); var $16$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 16: 
 var $17=HEAP32[(($call_i_i_i)>>2)];
 HEAP32[((14288)>>2)]=$17;
 var $18=$__p_i_i_i16;
 var $19=HEAP32[((15384)>>2)];
 var $cmp_i_i_i17=($19|0)==-1;
 if($cmp_i_i_i17){label=18;break;}else{label=17;break;}
 case 17: 
 var $ref_tmp_i_sroa_0_0__idx_i_i18=(($__p_i_i_i16)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i18)>>2)]=15384;
 var $ref_tmp_i_sroa_1_4__idx6_i_i19=(($__p_i_i_i16+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i19)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i20=(($__p_i_i_i16+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i20)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(15384,$18,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=18;break; } else { label=111;break; }
 case 18: 
 var $20=HEAP32[((15388)>>2)];
 var $sub_i_i22=((($20)-(1))|0);
 (function() { try { __THREW__ = 0; return __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,14280,$sub_i_i22) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=19;break; } else { label=111;break; }
 case 19: 
 HEAP32[((14276)>>2)]=0;
 HEAP32[((14272)>>2)]=5616;
 var $21=$__p_i_i_i26;
 var $22=HEAP32[((15376)>>2)];
 var $cmp_i_i_i27=($22|0)==-1;
 if($cmp_i_i_i27){label=21;break;}else{label=20;break;}
 case 20: 
 var $ref_tmp_i_sroa_0_0__idx_i_i28=(($__p_i_i_i26)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i28)>>2)]=15376;
 var $ref_tmp_i_sroa_1_4__idx6_i_i29=(($__p_i_i_i26+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i29)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i30=(($__p_i_i_i26+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i30)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(15376,$21,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=21;break; } else { label=111;break; }
 case 21: 
 var $23=HEAP32[((15380)>>2)];
 var $sub_i_i32=((($23)-(1))|0);
 (function() { try { __THREW__ = 0; return __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,14272,$sub_i_i32) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=22;break; } else { label=111;break; }
 case 22: 
 HEAP32[((14092)>>2)]=0;
 HEAP32[((14088)>>2)]=5384;
 var $24=$__p_i_i_i36;
 var $25=HEAP32[((15080)>>2)];
 var $cmp_i_i_i37=($25|0)==-1;
 if($cmp_i_i_i37){label=24;break;}else{label=23;break;}
 case 23: 
 var $ref_tmp_i_sroa_0_0__idx_i_i38=(($__p_i_i_i36)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i38)>>2)]=15080;
 var $ref_tmp_i_sroa_1_4__idx6_i_i39=(($__p_i_i_i36+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i39)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i40=(($__p_i_i_i36+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i40)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(15080,$24,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=24;break; } else { label=111;break; }
 case 24: 
 var $26=HEAP32[((15084)>>2)];
 var $sub_i_i42=((($26)-(1))|0);
 (function() { try { __THREW__ = 0; return __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,14088,$sub_i_i42) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=25;break; } else { label=111;break; }
 case 25: 
 HEAP32[((3844)>>2)]=0;
 HEAP32[((3840)>>2)]=5328;
 var $27=HEAP8[(15944)];
 var $guard_uninitialized_i_i_i=(($27<<24)>>24)==0;
 if($guard_uninitialized_i_i_i){label=26;break;}else{label=30;break;}
 case 26: 
 var $28=___cxa_guard_acquire(15944);
 var $tobool_i_i_i=($28|0)==0;
 if($tobool_i_i_i){label=30;break;}else{label=27;break;}
 case 27: 
 var $call_i_i_i46=(function() { try { __THREW__ = 0; return _newlocale(2147483647,2960,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=28;break; } else { label=29;break; }
 case 28: 
 HEAP32[((13952)>>2)]=$call_i_i_i46;
 label=30;break;
 case 29: 
 var $29$0 = ___cxa_find_matching_catch(-1, -1); var $29$1 = tempRet0;
 __ZNSt3__114__shared_countD2Ev(3840);
 var $eh_lpad_body$1=$29$1;var $eh_lpad_body$0=$29$0;label=112;break;
 case 30: 
 var $30=HEAP32[((13952)>>2)];
 HEAP32[((3848)>>2)]=$30;
 var $31=$__p_i_i_i47;
 var $32=HEAP32[((15072)>>2)];
 var $cmp_i_i_i48=($32|0)==-1;
 if($cmp_i_i_i48){label=32;break;}else{label=31;break;}
 case 31: 
 var $ref_tmp_i_sroa_0_0__idx_i_i49=(($__p_i_i_i47)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i49)>>2)]=15072;
 var $ref_tmp_i_sroa_1_4__idx6_i_i50=(($__p_i_i_i47+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i50)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i51=(($__p_i_i_i47+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i51)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(15072,$31,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=32;break; } else { label=111;break; }
 case 32: 
 var $33=HEAP32[((15076)>>2)];
 var $sub_i_i53=((($33)-(1))|0);
 (function() { try { __THREW__ = 0; return __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,3840,$sub_i_i53) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=33;break; } else { label=111;break; }
 case 33: 
 HEAP32[((14100)>>2)]=0;
 HEAP32[((14096)>>2)]=5440;
 var $34=$__p_i_i_i57;
 var $35=HEAP32[((15088)>>2)];
 var $cmp_i_i_i58=($35|0)==-1;
 if($cmp_i_i_i58){label=35;break;}else{label=34;break;}
 case 34: 
 var $ref_tmp_i_sroa_0_0__idx_i_i59=(($__p_i_i_i57)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i59)>>2)]=15088;
 var $ref_tmp_i_sroa_1_4__idx6_i_i60=(($__p_i_i_i57+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i60)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i61=(($__p_i_i_i57+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i61)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(15088,$34,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=35;break; } else { label=111;break; }
 case 35: 
 var $36=HEAP32[((15092)>>2)];
 var $sub_i_i63=((($36)-(1))|0);
 (function() { try { __THREW__ = 0; return __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,14096,$sub_i_i63) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=36;break; } else { label=111;break; }
 case 36: 
 HEAP32[((14108)>>2)]=0;
 HEAP32[((14104)>>2)]=5496;
 var $37=$__p_i_i_i67;
 var $38=HEAP32[((15096)>>2)];
 var $cmp_i_i_i68=($38|0)==-1;
 if($cmp_i_i_i68){label=38;break;}else{label=37;break;}
 case 37: 
 var $ref_tmp_i_sroa_0_0__idx_i_i69=(($__p_i_i_i67)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i69)>>2)]=15096;
 var $ref_tmp_i_sroa_1_4__idx6_i_i70=(($__p_i_i_i67+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i70)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i71=(($__p_i_i_i67+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i71)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(15096,$37,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=38;break; } else { label=111;break; }
 case 38: 
 var $39=HEAP32[((15100)>>2)];
 var $sub_i_i73=((($39)-(1))|0);
 (function() { try { __THREW__ = 0; return __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,14104,$sub_i_i73) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=39;break; } else { label=111;break; }
 case 39: 
 HEAP32[((14004)>>2)]=0;
 HEAP32[((14000)>>2)]=4792;
 HEAP8[(14008)]=46;
 HEAP8[(14009)]=44;
 HEAP32[((14012)>>2)]=0; HEAP32[((14016)>>2)]=0; HEAP32[((14020)>>2)]=0;
 var $40=$__p_i_i_i77;
 var $41=HEAP32[((15000)>>2)];
 var $cmp_i_i_i78=($41|0)==-1;
 if($cmp_i_i_i78){label=41;break;}else{label=40;break;}
 case 40: 
 var $ref_tmp_i_sroa_0_0__idx_i_i79=(($__p_i_i_i77)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i79)>>2)]=15000;
 var $ref_tmp_i_sroa_1_4__idx6_i_i80=(($__p_i_i_i77+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i80)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i81=(($__p_i_i_i77+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i81)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(15000,$40,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=41;break; } else { label=111;break; }
 case 41: 
 var $42=HEAP32[((15004)>>2)];
 var $sub_i_i83=((($42)-(1))|0);
 (function() { try { __THREW__ = 0; return __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,14000,$sub_i_i83) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=42;break; } else { label=111;break; }
 case 42: 
 HEAP32[((3812)>>2)]=0;
 HEAP32[((3808)>>2)]=4744;
 HEAP32[((3816)>>2)]=46;
 HEAP32[((3820)>>2)]=44;
 HEAP32[((3824)>>2)]=0; HEAP32[((3828)>>2)]=0; HEAP32[((3832)>>2)]=0;
 var $43=$__p_i_i_i87;
 var $44=HEAP32[((14992)>>2)];
 var $cmp_i_i_i88=($44|0)==-1;
 if($cmp_i_i_i88){label=44;break;}else{label=43;break;}
 case 43: 
 var $ref_tmp_i_sroa_0_0__idx_i_i89=(($__p_i_i_i87)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i89)>>2)]=14992;
 var $ref_tmp_i_sroa_1_4__idx6_i_i90=(($__p_i_i_i87+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i90)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i91=(($__p_i_i_i87+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i91)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(14992,$43,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=44;break; } else { label=111;break; }
 case 44: 
 var $45=HEAP32[((14996)>>2)];
 var $sub_i_i93=((($45)-(1))|0);
 (function() { try { __THREW__ = 0; return __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,3808,$sub_i_i93) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=45;break; } else { label=111;break; }
 case 45: 
 HEAP32[((14068)>>2)]=0;
 HEAP32[((14064)>>2)]=5176;
 var $46=$__p_i_i_i97;
 var $47=HEAP32[((15048)>>2)];
 var $cmp_i_i_i98=($47|0)==-1;
 if($cmp_i_i_i98){label=47;break;}else{label=46;break;}
 case 46: 
 var $ref_tmp_i_sroa_0_0__idx_i_i99=(($__p_i_i_i97)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i99)>>2)]=15048;
 var $ref_tmp_i_sroa_1_4__idx6_i_i100=(($__p_i_i_i97+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i100)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i101=(($__p_i_i_i97+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i101)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(15048,$46,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=47;break; } else { label=111;break; }
 case 47: 
 var $48=HEAP32[((15052)>>2)];
 var $sub_i_i103=((($48)-(1))|0);
 (function() { try { __THREW__ = 0; return __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,14064,$sub_i_i103) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=48;break; } else { label=111;break; }
 case 48: 
 HEAP32[((14060)>>2)]=0;
 HEAP32[((14056)>>2)]=5104;
 var $49=$__p_i_i_i107;
 var $50=HEAP32[((15040)>>2)];
 var $cmp_i_i_i108=($50|0)==-1;
 if($cmp_i_i_i108){label=50;break;}else{label=49;break;}
 case 49: 
 var $ref_tmp_i_sroa_0_0__idx_i_i109=(($__p_i_i_i107)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i109)>>2)]=15040;
 var $ref_tmp_i_sroa_1_4__idx6_i_i110=(($__p_i_i_i107+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i110)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i111=(($__p_i_i_i107+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i111)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(15040,$49,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=50;break; } else { label=111;break; }
 case 50: 
 var $51=HEAP32[((15044)>>2)];
 var $sub_i_i113=((($51)-(1))|0);
 (function() { try { __THREW__ = 0; return __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,14056,$sub_i_i113) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=51;break; } else { label=111;break; }
 case 51: 
 HEAP32[((14052)>>2)]=0;
 HEAP32[((14048)>>2)]=5040;
 var $52=$__p_i_i_i117;
 var $53=HEAP32[((15032)>>2)];
 var $cmp_i_i_i118=($53|0)==-1;
 if($cmp_i_i_i118){label=53;break;}else{label=52;break;}
 case 52: 
 var $ref_tmp_i_sroa_0_0__idx_i_i119=(($__p_i_i_i117)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i119)>>2)]=15032;
 var $ref_tmp_i_sroa_1_4__idx6_i_i120=(($__p_i_i_i117+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i120)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i121=(($__p_i_i_i117+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i121)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(15032,$52,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=53;break; } else { label=111;break; }
 case 53: 
 var $54=HEAP32[((15036)>>2)];
 var $sub_i_i123=((($54)-(1))|0);
 (function() { try { __THREW__ = 0; return __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,14048,$sub_i_i123) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=54;break; } else { label=111;break; }
 case 54: 
 HEAP32[((14044)>>2)]=0;
 HEAP32[((14040)>>2)]=4976;
 var $55=$__p_i_i_i127;
 var $56=HEAP32[((15024)>>2)];
 var $cmp_i_i_i128=($56|0)==-1;
 if($cmp_i_i_i128){label=56;break;}else{label=55;break;}
 case 55: 
 var $ref_tmp_i_sroa_0_0__idx_i_i129=(($__p_i_i_i127)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i129)>>2)]=15024;
 var $ref_tmp_i_sroa_1_4__idx6_i_i130=(($__p_i_i_i127+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i130)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i131=(($__p_i_i_i127+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i131)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(15024,$55,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=56;break; } else { label=111;break; }
 case 56: 
 var $57=HEAP32[((15028)>>2)];
 var $sub_i_i133=((($57)-(1))|0);
 (function() { try { __THREW__ = 0; return __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,14040,$sub_i_i133) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=57;break; } else { label=111;break; }
 case 57: 
 HEAP32[((14324)>>2)]=0;
 HEAP32[((14320)>>2)]=6624;
 var $58=$__p_i_i_i137;
 var $59=HEAP32[((15864)>>2)];
 var $cmp_i_i_i138=($59|0)==-1;
 if($cmp_i_i_i138){label=59;break;}else{label=58;break;}
 case 58: 
 var $ref_tmp_i_sroa_0_0__idx_i_i139=(($__p_i_i_i137)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i139)>>2)]=15864;
 var $ref_tmp_i_sroa_1_4__idx6_i_i140=(($__p_i_i_i137+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i140)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i141=(($__p_i_i_i137+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i141)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(15864,$58,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=59;break; } else { label=111;break; }
 case 59: 
 var $60=HEAP32[((15868)>>2)];
 var $sub_i_i143=((($60)-(1))|0);
 (function() { try { __THREW__ = 0; return __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,14320,$sub_i_i143) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=60;break; } else { label=111;break; }
 case 60: 
 HEAP32[((14316)>>2)]=0;
 HEAP32[((14312)>>2)]=6560;
 var $61=$__p_i_i_i147;
 var $62=HEAP32[((15856)>>2)];
 var $cmp_i_i_i148=($62|0)==-1;
 if($cmp_i_i_i148){label=62;break;}else{label=61;break;}
 case 61: 
 var $ref_tmp_i_sroa_0_0__idx_i_i149=(($__p_i_i_i147)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i149)>>2)]=15856;
 var $ref_tmp_i_sroa_1_4__idx6_i_i150=(($__p_i_i_i147+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i150)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i151=(($__p_i_i_i147+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i151)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(15856,$61,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=62;break; } else { label=111;break; }
 case 62: 
 var $63=HEAP32[((15860)>>2)];
 var $sub_i_i153=((($63)-(1))|0);
 (function() { try { __THREW__ = 0; return __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,14312,$sub_i_i153) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=63;break; } else { label=111;break; }
 case 63: 
 HEAP32[((14308)>>2)]=0;
 HEAP32[((14304)>>2)]=6496;
 var $64=$__p_i_i_i157;
 var $65=HEAP32[((15848)>>2)];
 var $cmp_i_i_i158=($65|0)==-1;
 if($cmp_i_i_i158){label=65;break;}else{label=64;break;}
 case 64: 
 var $ref_tmp_i_sroa_0_0__idx_i_i159=(($__p_i_i_i157)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i159)>>2)]=15848;
 var $ref_tmp_i_sroa_1_4__idx6_i_i160=(($__p_i_i_i157+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i160)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i161=(($__p_i_i_i157+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i161)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(15848,$64,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=65;break; } else { label=111;break; }
 case 65: 
 var $66=HEAP32[((15852)>>2)];
 var $sub_i_i163=((($66)-(1))|0);
 (function() { try { __THREW__ = 0; return __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,14304,$sub_i_i163) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=66;break; } else { label=111;break; }
 case 66: 
 HEAP32[((14300)>>2)]=0;
 HEAP32[((14296)>>2)]=6432;
 var $67=$__p_i_i_i167;
 var $68=HEAP32[((15840)>>2)];
 var $cmp_i_i_i168=($68|0)==-1;
 if($cmp_i_i_i168){label=68;break;}else{label=67;break;}
 case 67: 
 var $ref_tmp_i_sroa_0_0__idx_i_i169=(($__p_i_i_i167)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i169)>>2)]=15840;
 var $ref_tmp_i_sroa_1_4__idx6_i_i170=(($__p_i_i_i167+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i170)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i171=(($__p_i_i_i167+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i171)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(15840,$67,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=68;break; } else { label=111;break; }
 case 68: 
 var $69=HEAP32[((15844)>>2)];
 var $sub_i_i173=((($69)-(1))|0);
 (function() { try { __THREW__ = 0; return __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,14296,$sub_i_i173) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=69;break; } else { label=111;break; }
 case 69: 
 HEAP32[((13996)>>2)]=0;
 HEAP32[((13992)>>2)]=4448;
 var $70=$__p_i_i_i177;
 var $71=HEAP32[((14952)>>2)];
 var $cmp_i_i_i178=($71|0)==-1;
 if($cmp_i_i_i178){label=71;break;}else{label=70;break;}
 case 70: 
 var $ref_tmp_i_sroa_0_0__idx_i_i179=(($__p_i_i_i177)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i179)>>2)]=14952;
 var $ref_tmp_i_sroa_1_4__idx6_i_i180=(($__p_i_i_i177+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i180)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i181=(($__p_i_i_i177+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i181)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(14952,$70,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=71;break; } else { label=111;break; }
 case 71: 
 var $72=HEAP32[((14956)>>2)];
 var $sub_i_i183=((($72)-(1))|0);
 (function() { try { __THREW__ = 0; return __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,13992,$sub_i_i183) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=72;break; } else { label=111;break; }
 case 72: 
 HEAP32[((13988)>>2)]=0;
 HEAP32[((13984)>>2)]=4408;
 var $73=$__p_i_i_i187;
 var $74=HEAP32[((14944)>>2)];
 var $cmp_i_i_i188=($74|0)==-1;
 if($cmp_i_i_i188){label=74;break;}else{label=73;break;}
 case 73: 
 var $ref_tmp_i_sroa_0_0__idx_i_i189=(($__p_i_i_i187)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i189)>>2)]=14944;
 var $ref_tmp_i_sroa_1_4__idx6_i_i190=(($__p_i_i_i187+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i190)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i191=(($__p_i_i_i187+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i191)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(14944,$73,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=74;break; } else { label=111;break; }
 case 74: 
 var $75=HEAP32[((14948)>>2)];
 var $sub_i_i193=((($75)-(1))|0);
 (function() { try { __THREW__ = 0; return __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,13984,$sub_i_i193) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=75;break; } else { label=111;break; }
 case 75: 
 HEAP32[((13980)>>2)]=0;
 HEAP32[((13976)>>2)]=4368;
 var $76=$__p_i_i_i197;
 var $77=HEAP32[((14936)>>2)];
 var $cmp_i_i_i198=($77|0)==-1;
 if($cmp_i_i_i198){label=77;break;}else{label=76;break;}
 case 76: 
 var $ref_tmp_i_sroa_0_0__idx_i_i199=(($__p_i_i_i197)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i199)>>2)]=14936;
 var $ref_tmp_i_sroa_1_4__idx6_i_i200=(($__p_i_i_i197+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i200)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i201=(($__p_i_i_i197+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i201)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(14936,$76,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=77;break; } else { label=111;break; }
 case 77: 
 var $78=HEAP32[((14940)>>2)];
 var $sub_i_i203=((($78)-(1))|0);
 (function() { try { __THREW__ = 0; return __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,13976,$sub_i_i203) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=78;break; } else { label=111;break; }
 case 78: 
 HEAP32[((13972)>>2)]=0;
 HEAP32[((13968)>>2)]=4328;
 var $79=$__p_i_i_i207;
 var $80=HEAP32[((14928)>>2)];
 var $cmp_i_i_i208=($80|0)==-1;
 if($cmp_i_i_i208){label=80;break;}else{label=79;break;}
 case 79: 
 var $ref_tmp_i_sroa_0_0__idx_i_i209=(($__p_i_i_i207)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i209)>>2)]=14928;
 var $ref_tmp_i_sroa_1_4__idx6_i_i210=(($__p_i_i_i207+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i210)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i211=(($__p_i_i_i207+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i211)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(14928,$79,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=80;break; } else { label=111;break; }
 case 80: 
 var $81=HEAP32[((14932)>>2)];
 var $sub_i_i213=((($81)-(1))|0);
 (function() { try { __THREW__ = 0; return __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,13968,$sub_i_i213) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=81;break; } else { label=111;break; }
 case 81: 
 HEAP32[((3796)>>2)]=0;
 HEAP32[((3792)>>2)]=4648;
 HEAP32[((3800)>>2)]=4696;
 var $82=$__p_i_i_i217;
 var $83=HEAP32[((14984)>>2)];
 var $cmp_i_i_i218=($83|0)==-1;
 if($cmp_i_i_i218){label=83;break;}else{label=82;break;}
 case 82: 
 var $ref_tmp_i_sroa_0_0__idx_i_i219=(($__p_i_i_i217)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i219)>>2)]=14984;
 var $ref_tmp_i_sroa_1_4__idx6_i_i220=(($__p_i_i_i217+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i220)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i221=(($__p_i_i_i217+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i221)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(14984,$82,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=83;break; } else { label=111;break; }
 case 83: 
 var $84=HEAP32[((14988)>>2)];
 var $sub_i_i223=((($84)-(1))|0);
 (function() { try { __THREW__ = 0; return __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,3792,$sub_i_i223) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=84;break; } else { label=111;break; }
 case 84: 
 HEAP32[((3780)>>2)]=0;
 HEAP32[((3776)>>2)]=4552;
 HEAP32[((3784)>>2)]=4600;
 var $85=$__p_i_i_i227;
 var $86=HEAP32[((14976)>>2)];
 var $cmp_i_i_i228=($86|0)==-1;
 if($cmp_i_i_i228){label=86;break;}else{label=85;break;}
 case 85: 
 var $ref_tmp_i_sroa_0_0__idx_i_i229=(($__p_i_i_i227)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i229)>>2)]=14976;
 var $ref_tmp_i_sroa_1_4__idx6_i_i230=(($__p_i_i_i227+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i230)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i231=(($__p_i_i_i227+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i231)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(14976,$85,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=86;break; } else { label=111;break; }
 case 86: 
 var $87=HEAP32[((14980)>>2)];
 var $sub_i_i233=((($87)-(1))|0);
 (function() { try { __THREW__ = 0; return __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,3776,$sub_i_i233) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=87;break; } else { label=111;break; }
 case 87: 
 HEAP32[((3764)>>2)]=0;
 HEAP32[((3760)>>2)]=5552;
 var $88=HEAP8[(15944)];
 var $guard_uninitialized_i_i=(($88<<24)>>24)==0;
 if($guard_uninitialized_i_i){label=88;break;}else{label=92;break;}
 case 88: 
 var $89=___cxa_guard_acquire(15944);
 var $tobool_i_i=($89|0)==0;
 if($tobool_i_i){label=92;break;}else{label=89;break;}
 case 89: 
 var $call_i_i=(function() { try { __THREW__ = 0; return _newlocale(2147483647,2960,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=90;break; } else { label=91;break; }
 case 90: 
 HEAP32[((13952)>>2)]=$call_i_i;
 label=92;break;
 case 91: 
 var $90$0 = ___cxa_find_matching_catch(-1, -1); var $90$1 = tempRet0;
 __ZNSt3__114__shared_countD2Ev(3760);
 var $eh_lpad_body$1=$90$1;var $eh_lpad_body$0=$90$0;label=112;break;
 case 92: 
 var $91=HEAP32[((13952)>>2)];
 HEAP32[((3768)>>2)]=$91;
 HEAP32[((3760)>>2)]=4520;
 var $92=$__p_i_i_i239;
 var $93=HEAP32[((14968)>>2)];
 var $cmp_i_i_i240=($93|0)==-1;
 if($cmp_i_i_i240){label=94;break;}else{label=93;break;}
 case 93: 
 var $ref_tmp_i_sroa_0_0__idx_i_i241=(($__p_i_i_i239)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i241)>>2)]=14968;
 var $ref_tmp_i_sroa_1_4__idx6_i_i242=(($__p_i_i_i239+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i242)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i243=(($__p_i_i_i239+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i243)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(14968,$92,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=94;break; } else { label=111;break; }
 case 94: 
 var $94=HEAP32[((14972)>>2)];
 var $sub_i_i245=((($94)-(1))|0);
 (function() { try { __THREW__ = 0; return __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,3760,$sub_i_i245) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=95;break; } else { label=111;break; }
 case 95: 
 HEAP32[((3748)>>2)]=0;
 HEAP32[((3744)>>2)]=5552;
 var $95=HEAP8[(15944)];
 var $guard_uninitialized_i_i249=(($95<<24)>>24)==0;
 if($guard_uninitialized_i_i249){label=96;break;}else{label=100;break;}
 case 96: 
 var $96=___cxa_guard_acquire(15944);
 var $tobool_i_i250=($96|0)==0;
 if($tobool_i_i250){label=100;break;}else{label=97;break;}
 case 97: 
 var $call_i_i252=(function() { try { __THREW__ = 0; return _newlocale(2147483647,2960,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=98;break; } else { label=99;break; }
 case 98: 
 HEAP32[((13952)>>2)]=$call_i_i252;
 label=100;break;
 case 99: 
 var $97$0 = ___cxa_find_matching_catch(-1, -1); var $97$1 = tempRet0;
 __ZNSt3__114__shared_countD2Ev(3744);
 var $eh_lpad_body$1=$97$1;var $eh_lpad_body$0=$97$0;label=112;break;
 case 100: 
 var $98=HEAP32[((13952)>>2)];
 HEAP32[((3752)>>2)]=$98;
 HEAP32[((3744)>>2)]=4488;
 var $99=$__p_i_i_i258;
 var $100=HEAP32[((14960)>>2)];
 var $cmp_i_i_i259=($100|0)==-1;
 if($cmp_i_i_i259){label=102;break;}else{label=101;break;}
 case 101: 
 var $ref_tmp_i_sroa_0_0__idx_i_i260=(($__p_i_i_i258)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i260)>>2)]=14960;
 var $ref_tmp_i_sroa_1_4__idx6_i_i261=(($__p_i_i_i258+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i261)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i262=(($__p_i_i_i258+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i262)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(14960,$99,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=102;break; } else { label=111;break; }
 case 102: 
 var $101=HEAP32[((14964)>>2)];
 var $sub_i_i264=((($101)-(1))|0);
 (function() { try { __THREW__ = 0; return __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,3744,$sub_i_i264) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=103;break; } else { label=111;break; }
 case 103: 
 HEAP32[((14036)>>2)]=0;
 HEAP32[((14032)>>2)]=4880;
 var $102=$__p_i_i_i268;
 var $103=HEAP32[((15016)>>2)];
 var $cmp_i_i_i269=($103|0)==-1;
 if($cmp_i_i_i269){label=105;break;}else{label=104;break;}
 case 104: 
 var $ref_tmp_i_sroa_0_0__idx_i_i270=(($__p_i_i_i268)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i270)>>2)]=15016;
 var $ref_tmp_i_sroa_1_4__idx6_i_i271=(($__p_i_i_i268+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i271)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i272=(($__p_i_i_i268+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i272)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(15016,$102,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=105;break; } else { label=111;break; }
 case 105: 
 var $104=HEAP32[((15020)>>2)];
 var $sub_i_i274=((($104)-(1))|0);
 (function() { try { __THREW__ = 0; return __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,14032,$sub_i_i274) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=106;break; } else { label=111;break; }
 case 106: 
 HEAP32[((14028)>>2)]=0;
 HEAP32[((14024)>>2)]=4840;
 var $105=$__p_i_i_i278;
 var $106=HEAP32[((15008)>>2)];
 var $cmp_i_i_i279=($106|0)==-1;
 if($cmp_i_i_i279){label=108;break;}else{label=107;break;}
 case 107: 
 var $ref_tmp_i_sroa_0_0__idx_i_i280=(($__p_i_i_i278)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i_i280)>>2)]=15008;
 var $ref_tmp_i_sroa_1_4__idx6_i_i281=(($__p_i_i_i278+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i_i281)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i_i282=(($__p_i_i_i278+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i_i282)>>2)]=0;
 (function() { try { __THREW__ = 0; return __ZNSt3__111__call_onceERVmPvPFvS2_E(15008,$105,276) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=108;break; } else { label=111;break; }
 case 108: 
 var $107=HEAP32[((15012)>>2)];
 var $sub_i_i284=((($107)-(1))|0);
 (function() { try { __THREW__ = 0; return __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,14024,$sub_i_i284) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=109;break; } else { label=111;break; }
 case 109: 
 STACKTOP=sp;return;
 case 110: 
 var $108$0 = ___cxa_find_matching_catch(-1, -1); var $108$1 = tempRet0;
 var $109=$108$0;
 var $110=$108$1;
 var $ehselector_slot_0=$110;var $exn_slot_0=$109;label=113;break;
 case 111: 
 var $111$0 = ___cxa_find_matching_catch(-1, -1); var $111$1 = tempRet0;
 var $eh_lpad_body$1=$111$1;var $eh_lpad_body$0=$111$0;label=112;break;
 case 112: 
 var $eh_lpad_body$0;
 var $eh_lpad_body$1;
 var $112=$eh_lpad_body$0;
 var $113=$eh_lpad_body$1;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($name_);
 var $ehselector_slot_0=$113;var $exn_slot_0=$112;label=113;break;
 case 113: 
 var $exn_slot_0;
 var $ehselector_slot_0;
 var $114=HEAP32[(($__begin__i_i2)>>2)];
 var $115=$114;
 var $cmp_i_i_i3=($114|0)==0;
 if($cmp_i_i_i3){label=119;break;}else{label=114;break;}
 case 114: 
 var $116=HEAP32[(($__end__i_i)>>2)];
 var $cmp_i_i2_i_i_i=($114|0)==($116|0);
 if($cmp_i_i2_i_i_i){label=116;break;}else{label=115;break;}
 case 115: 
 var $scevgep_i_i_i=((($116)-(4))|0);
 var $scevgep3_i_i_i=$scevgep_i_i_i;
 var $117=(((-$115))|0);
 var $uglygep_i_i_i=(($scevgep3_i_i_i+$117)|0);
 var $uglygep4_i_i_i=$uglygep_i_i_i;
 var $118=$uglygep4_i_i_i>>>2;
 var $119=$118^-1;
 var $scevgep5_i_i_i=(($116+($119<<2))|0);
 HEAP32[(($__end__i_i)>>2)]=$scevgep5_i_i_i;
 label=116;break;
 case 116: 
 var $__second__i_i_i_i_i_i=(($this+24)|0);
 var $120=$__second__i_i_i_i_i_i;
 var $cmp_i_i6_i_i_i=($114|0)==($120|0);
 if($cmp_i_i6_i_i_i){label=117;break;}else{label=118;break;}
 case 117: 
 HEAP8[($__allocated__i_i_i_i_i_i_i)]=0;
 label=119;break;
 case 118: 
 var $121=$114;
 __ZdlPv($121);
 label=119;break;
 case 119: 
 var $122=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($122);
 var $lpad_val$0=$exn_slot_0;
 var $lpad_val$1=0;
 var $lpad_val90$0=$lpad_val$0;
 var $lpad_val90$1=$ehselector_slot_0;
 ___resumeException($lpad_val90$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$id){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $0=(($f)|0);
 __ZNSt3__114__shared_count12__add_sharedEv($0);
 var $facets_=(($this+8)|0);
 var $__end__i=(($this+12)|0);
 var $1=HEAP32[(($__end__i)>>2)];
 var $__begin__i=(($facets_)|0);
 var $2=HEAP32[(($__begin__i)>>2)];
 var $sub_ptr_lhs_cast_i=$1;
 var $sub_ptr_rhs_cast_i=$2;
 var $sub_ptr_sub_i=((($sub_ptr_lhs_cast_i)-($sub_ptr_rhs_cast_i))|0);
 var $sub_ptr_div_i=$sub_ptr_sub_i>>2;
 var $cmp=($sub_ptr_div_i>>>0)>($id>>>0);
 if($cmp){var $7=$2;label=11;break;}else{label=2;break;}
 case 2: 
 var $add=((($id)+(1))|0);
 var $cmp_i=($sub_ptr_div_i>>>0)<($add>>>0);
 if($cmp_i){label=3;break;}else{label=5;break;}
 case 3: 
 var $sub_i=((($add)-($sub_ptr_div_i))|0);
 (function() { try { __THREW__ = 0; return __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($facets_,$sub_i) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=4;break; } else { label=8;break; }
 case 4: 
 var $_pre14=HEAP32[(($__begin__i)>>2)];
 var $7=$_pre14;label=11;break;
 case 5: 
 var $cmp2_i=($sub_ptr_div_i>>>0)>($add>>>0);
 if($cmp2_i){label=6;break;}else{var $7=$2;label=11;break;}
 case 6: 
 var $add_ptr_i=(($2+($add<<2))|0);
 var $cmp_i_i6_i=($add_ptr_i|0)==($1|0);
 if($cmp_i_i6_i){var $7=$2;label=11;break;}else{label=7;break;}
 case 7: 
 var $scevgep_i=((($1)-(4))|0);
 var $scevgep7_i=$scevgep_i;
 var $scevgep89_i=$add_ptr_i;
 var $3=(((-$scevgep89_i))|0);
 var $uglygep_i=(($scevgep7_i+$3)|0);
 var $uglygep10_i=$uglygep_i;
 var $4=$uglygep10_i>>>2;
 var $5=$4^-1;
 var $scevgep11_i=(($1+($5<<2))|0);
 HEAP32[(($__end__i)>>2)]=$scevgep11_i;
 var $7=$2;label=11;break;
 case 8: 
 var $6$0 = ___cxa_find_matching_catch(-1, -1); var $6$1 = tempRet0;
 var $tobool_i_i8=($f|0)==0;
 if($tobool_i_i8){label=10;break;}else{label=9;break;}
 case 9: 
 var $call_i_i9=__ZNSt3__114__shared_count16__release_sharedEv($0);
 label=10;break;
 case 10: 
 ___resumeException($6$0)
 case 11: 
 var $7;
 var $arrayidx_i=(($7+($id<<2))|0);
 var $8=HEAP32[(($arrayidx_i)>>2)];
 var $tobool=($8|0)==0;
 if($tobool){var $10=$7;label=13;break;}else{label=12;break;}
 case 12: 
 var $9=(($8)|0);
 var $call10=__ZNSt3__114__shared_count16__release_sharedEv($9);
 var $_pre=HEAP32[(($__begin__i)>>2)];
 var $10=$_pre;label=13;break;
 case 13: 
 var $10;
 var $arrayidx_i24=(($10+($id<<2))|0);
 HEAP32[(($arrayidx_i24)>>2)]=$f;
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__16locale5__impD0Ev($this){
 var label=0;
 __ZNSt3__16locale5__impD2Ev($this);
 var $0=$this;
 __ZdlPv($0);
 return;
}
function __ZNSt3__16locale5__impD2Ev($this){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $0=(($this)|0);
 HEAP32[(($0)>>2)]=5584;
 var $__end__i=(($this+12)|0);
 var $1=HEAP32[(($__end__i)>>2)];
 var $__begin__i=(($this+8)|0);
 var $2=HEAP32[(($__begin__i)>>2)];
 var $cmp8=($1|0)==($2|0);
 if($cmp8){label=5;break;}else{var $i_09=0;var $4=$2;var $3=$1;label=2;break;}
 case 2: 
 var $3;
 var $4;
 var $i_09;
 var $arrayidx_i=(($4+($i_09<<2))|0);
 var $5=HEAP32[(($arrayidx_i)>>2)];
 var $tobool=($5|0)==0;
 if($tobool){var $8=$3;var $7=$4;label=4;break;}else{label=3;break;}
 case 3: 
 var $6=(($5)|0);
 var $call7=__ZNSt3__114__shared_count16__release_sharedEv($6);
 var $_pre=HEAP32[(($__end__i)>>2)];
 var $_pre10=HEAP32[(($__begin__i)>>2)];
 var $8=$_pre;var $7=$_pre10;label=4;break;
 case 4: 
 var $7;
 var $8;
 var $inc=((($i_09)+(1))|0);
 var $sub_ptr_lhs_cast_i=$8;
 var $sub_ptr_rhs_cast_i=$7;
 var $sub_ptr_sub_i=((($sub_ptr_lhs_cast_i)-($sub_ptr_rhs_cast_i))|0);
 var $sub_ptr_div_i=$sub_ptr_sub_i>>2;
 var $cmp=($inc>>>0)<($sub_ptr_div_i>>>0);
 if($cmp){var $i_09=$inc;var $4=$7;var $3=$8;label=2;break;}else{label=5;break;}
 case 5: 
 var $name_=(($this+144)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($name_);
 var $9=HEAP32[(($__begin__i)>>2)];
 var $10=$9;
 var $cmp_i_i_i=($9|0)==0;
 if($cmp_i_i_i){label=11;break;}else{label=6;break;}
 case 6: 
 var $11=HEAP32[(($__end__i)>>2)];
 var $cmp_i_i2_i_i_i=($9|0)==($11|0);
 if($cmp_i_i2_i_i_i){label=8;break;}else{label=7;break;}
 case 7: 
 var $scevgep_i_i_i=((($11)-(4))|0);
 var $scevgep3_i_i_i=$scevgep_i_i_i;
 var $12=(((-$10))|0);
 var $uglygep_i_i_i=(($scevgep3_i_i_i+$12)|0);
 var $uglygep4_i_i_i=$uglygep_i_i_i;
 var $13=$uglygep4_i_i_i>>>2;
 var $14=$13^-1;
 var $scevgep5_i_i_i=(($11+($14<<2))|0);
 HEAP32[(($__end__i)>>2)]=$scevgep5_i_i_i;
 label=8;break;
 case 8: 
 var $__second__i_i_i_i_i_i=(($this+24)|0);
 var $15=$__second__i_i_i_i_i_i;
 var $cmp_i_i6_i_i_i=($9|0)==($15|0);
 if($cmp_i_i6_i_i_i){label=9;break;}else{label=10;break;}
 case 9: 
 var $__allocated__i_i_i_i_i=(($this+136)|0);
 HEAP8[($__allocated__i_i_i_i_i)]=0;
 label=11;break;
 case 10: 
 var $16=$9;
 __ZdlPv($16);
 label=11;break;
 case 11: 
 var $17=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($17);
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__16locale8__globalEv(){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $0=HEAP8[(15928)];
 var $guard_uninitialized=(($0<<24)>>24)==0;
 if($guard_uninitialized){label=2;break;}else{label=8;break;}
 case 2: 
 var $1=___cxa_guard_acquire(15928);
 var $tobool=($1|0)==0;
 if($tobool){label=8;break;}else{label=3;break;}
 case 3: 
 var $2=HEAP8[(15936)];
 var $guard_uninitialized_i_i=(($2<<24)>>24)==0;
 if($guard_uninitialized_i_i){label=4;break;}else{label=7;break;}
 case 4: 
 var $3=___cxa_guard_acquire(15936);
 var $tobool_i_i=($3|0)==0;
 if($tobool_i_i){label=7;break;}else{label=5;break;}
 case 5: 
 (function() { try { __THREW__ = 0; return __ZNSt3__16locale5__impC2Ej(14112,1) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=6;break; } else { label=9;break; }
 case 6: 
 HEAP32[((13936)>>2)]=14112;
 HEAP32[((13928)>>2)]=13936;
 label=7;break;
 case 7: 
 var $4=HEAP32[((13928)>>2)];
 var $__locale_2_i_i=(($4)|0);
 var $5=HEAP32[(($__locale_2_i_i)>>2)];
 HEAP32[((13944)>>2)]=$5;
 var $6=(($5)|0);
 __ZNSt3__114__shared_count12__add_sharedEv($6);
 HEAP32[((13920)>>2)]=13944;
 label=8;break;
 case 8: 
 var $7=HEAP32[((13920)>>2)];
 return $7;
 case 9: 
 var $8$0 = ___cxa_find_matching_catch(-1, -1); var $8$1 = tempRet0;
 ___resumeException($8$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__16localeC2Ev($this){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $call=(function() { try { __THREW__ = 0; return __ZNSt3__16locale8__globalEv() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=3;break; }
 case 2: 
 var $__locale_=(($this)|0);
 var $__locale_2=(($call)|0);
 var $0=HEAP32[(($__locale_2)>>2)];
 HEAP32[(($__locale_)>>2)]=$0;
 var $1=(($0)|0);
 __ZNSt3__114__shared_count12__add_sharedEv($1);
 return;
 case 3: 
 var $2$0 = ___cxa_find_matching_catch(-1, -1,0); var $2$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__16localeC2ERKS0_($this,$l){
 var label=0;
 var $__locale_=(($this)|0);
 var $__locale_2=(($l)|0);
 var $0=HEAP32[(($__locale_2)>>2)];
 HEAP32[(($__locale_)>>2)]=$0;
 var $1=(($0)|0);
 __ZNSt3__114__shared_count12__add_sharedEv($1);
 return;
}
function __ZNSt3__16localeD2Ev($this){
 var label=0;
 var $__locale_=(($this)|0);
 var $0=HEAP32[(($__locale_)>>2)];
 var $1=(($0)|0);
 var $call=__ZNSt3__114__shared_count16__release_sharedEv($1);
 return;
}
function __ZNKSt3__16locale9use_facetERNS0_2idE($this,$x){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__p_i_i=sp;
 var $__locale_=(($this)|0);
 var $0=HEAP32[(($__locale_)>>2)];
 var $1=$__p_i_i;
 var $__state__i_i=(($x)|0);
 var $2=HEAP32[(($__state__i_i)>>2)];
 var $cmp_i_i=($2|0)==-1;
 if($cmp_i_i){label=3;break;}else{label=2;break;}
 case 2: 
 var $ref_tmp_i_sroa_0_0__idx_i=(($__p_i_i)|0);
 HEAP32[(($ref_tmp_i_sroa_0_0__idx_i)>>2)]=$x;
 var $ref_tmp_i_sroa_1_4__idx6_i=(($__p_i_i+4)|0);
 HEAP32[(($ref_tmp_i_sroa_1_4__idx6_i)>>2)]=(28);
 var $ref_tmp_i_sroa_2_8__idx7_i=(($__p_i_i+8)|0);
 HEAP32[(($ref_tmp_i_sroa_2_8__idx7_i)>>2)]=0;
 __ZNSt3__111__call_onceERVmPvPFvS2_E($__state__i_i,$1,276);
 label=3;break;
 case 3: 
 var $__id__i=(($x+4)|0);
 var $3=HEAP32[(($__id__i)>>2)];
 var $sub_i=((($3)-(1))|0);
 var $__end__i_i_i=(($0+12)|0);
 var $4=HEAP32[(($__end__i_i_i)>>2)];
 var $__begin__i_i_i=(($0+8)|0);
 var $5=HEAP32[(($__begin__i_i_i)>>2)];
 var $sub_ptr_lhs_cast_i_i_i=$4;
 var $sub_ptr_rhs_cast_i_i_i=$5;
 var $sub_ptr_sub_i_i_i=((($sub_ptr_lhs_cast_i_i_i)-($sub_ptr_rhs_cast_i_i_i))|0);
 var $sub_ptr_div_i_i_i=$sub_ptr_sub_i_i_i>>2;
 var $cmp_i_i1=($sub_ptr_div_i_i_i>>>0)>($sub_i>>>0);
 if($cmp_i_i1){label=4;break;}else{label=5;break;}
 case 4: 
 var $arrayidx_i_i_i=(($5+($sub_i<<2))|0);
 var $6=HEAP32[(($arrayidx_i_i_i)>>2)];
 var $tobool_i_i=($6|0)==0;
 if($tobool_i_i){label=5;break;}else{label=6;break;}
 case 5: 
 var $exception_i=___cxa_allocate_exception(4);
 var $7=$exception_i;
 __ZNSt8bad_castC2Ev($7);
 ___cxa_throw($exception_i,10264,(376));
 throw "Reached an unreachable!";
 case 6: 
 STACKTOP=sp;return $6;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__16locale5facetD0Ev($this){
 var label=0;
 var $0=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($0);
 var $1=$this;
 __ZdlPv($1);
 return;
}
function __ZNSt3__16locale5facet16__on_zero_sharedEv($this){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $isnull=($this|0)==0;
 if($isnull){label=3;break;}else{label=2;break;}
 case 2: 
 var $0=$this;
 var $vtable=HEAP32[(($0)>>2)];
 var $vfn=(($vtable+4)|0);
 var $1=HEAP32[(($vfn)>>2)];
 FUNCTION_TABLE[$1]($this);
 label=3;break;
 case 3: 
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__16locale2id6__initEv($this){
 var label=0;
 var $0=(tempValue=HEAP32[((15104)>>2)],HEAP32[((15104)>>2)]=tempValue+1,tempValue);
 var $1=((($0)+(1))|0);
 var $__id_=(($this+4)|0);
 HEAP32[(($__id_)>>2)]=$1;
 return;
}
function __ZNSt3__15ctypeIwED0Ev($this){
 var label=0;
 var $0=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($0);
 var $1=$this;
 __ZdlPv($1);
 return;
}
function __ZNKSt3__15ctypeIwE5do_isEtw($this,$m,$c){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $isascii=($c>>>0)<128;
 if($isascii){label=2;break;}else{var $cond=0;label=5;break;}
 case 2: 
 var $call_i=(function() { try { __THREW__ = 0; return ___ctype_b_loc() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=4;break; } else { label=3;break; }
 case 3: 
 var $0$0 = ___cxa_find_matching_catch(-1, -1,0); var $0$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 4: 
 var $1=HEAP32[(($call_i)>>2)];
 var $arrayidx=(($1+($c<<1))|0);
 var $2=HEAP16[(($arrayidx)>>1)];
 var $and2=$2&$m;
 var $cmp=(($and2<<16)>>16)!=0;
 var $cond=$cmp;label=5;break;
 case 5: 
 var $cond;
 return $cond;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__15ctypeIwE5do_isEPKwS3_Pt($this,$low,$high,$vec){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $cmp6=($low|0)==($high|0);
 if($cmp6){var $low_addr_0_lcssa=$low;label=7;break;}else{var $low_addr_07=$low;var $vec_addr_08=$vec;label=2;break;}
 case 2: 
 var $vec_addr_08;
 var $low_addr_07;
 var $0=HEAP32[(($low_addr_07)>>2)];
 var $isascii=($0>>>0)<128;
 if($isascii){label=3;break;}else{var $cond_off0=0;label=6;break;}
 case 3: 
 var $call_i=(function() { try { __THREW__ = 0; return ___ctype_b_loc() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=5;break; } else { label=4;break; }
 case 4: 
 var $1$0 = ___cxa_find_matching_catch(-1, -1,0); var $1$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 5: 
 var $2=HEAP32[(($call_i)>>2)];
 var $arrayidx=(($2+($0<<1))|0);
 var $3=HEAP16[(($arrayidx)>>1)];
 var $cond_off0=$3;label=6;break;
 case 6: 
 var $cond_off0;
 HEAP16[(($vec_addr_08)>>1)]=$cond_off0;
 var $incdec_ptr=(($low_addr_07+4)|0);
 var $incdec_ptr4=(($vec_addr_08+2)|0);
 var $cmp=($incdec_ptr|0)==($high|0);
 if($cmp){var $low_addr_0_lcssa=$high;label=7;break;}else{var $low_addr_07=$incdec_ptr;var $vec_addr_08=$incdec_ptr4;label=2;break;}
 case 7: 
 var $low_addr_0_lcssa;
 return $low_addr_0_lcssa;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__15ctypeIwE10do_scan_isEtPKwS3_($this,$m,$low,$high){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $cmp7=($low|0)==($high|0);
 if($cmp7){var $low_addr_0_lcssa=$low;label=7;break;}else{var $low_addr_08=$low;label=2;break;}
 case 2: 
 var $low_addr_08;
 var $0=HEAP32[(($low_addr_08)>>2)];
 var $isascii=($0>>>0)<128;
 if($isascii){label=3;break;}else{label=6;break;}
 case 3: 
 var $call_i=(function() { try { __THREW__ = 0; return ___ctype_b_loc() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=5;break; } else { label=4;break; }
 case 4: 
 var $1$0 = ___cxa_find_matching_catch(-1, -1,0); var $1$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 5: 
 var $2=HEAP32[(($call_i)>>2)];
 var $arrayidx=(($2+($0<<1))|0);
 var $3=HEAP16[(($arrayidx)>>1)];
 var $and5=$3&$m;
 var $tobool4=(($and5<<16)>>16)==0;
 if($tobool4){label=6;break;}else{var $low_addr_0_lcssa=$low_addr_08;label=7;break;}
 case 6: 
 var $incdec_ptr=(($low_addr_08+4)|0);
 var $cmp=($incdec_ptr|0)==($high|0);
 if($cmp){var $low_addr_0_lcssa=$high;label=7;break;}else{var $low_addr_08=$incdec_ptr;label=2;break;}
 case 7: 
 var $low_addr_0_lcssa;
 return $low_addr_0_lcssa;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__15ctypeIwE11do_scan_notEtPKwS3_($this,$m,$low,$high){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $low_addr_0=$low;label=2;break;
 case 2: 
 var $low_addr_0;
 var $cmp=($low_addr_0|0)==($high|0);
 if($cmp){var $low_addr_0_lcssa=$high;label=7;break;}else{label=3;break;}
 case 3: 
 var $0=HEAP32[(($low_addr_0)>>2)];
 var $isascii=($0>>>0)<128;
 if($isascii){label=4;break;}else{var $low_addr_0_lcssa=$low_addr_0;label=7;break;}
 case 4: 
 var $call_i=(function() { try { __THREW__ = 0; return ___ctype_b_loc() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=6;break; } else { label=5;break; }
 case 5: 
 var $1$0 = ___cxa_find_matching_catch(-1, -1,0); var $1$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 6: 
 var $2=HEAP32[(($call_i)>>2)];
 var $arrayidx=(($2+($0<<1))|0);
 var $3=HEAP16[(($arrayidx)>>1)];
 var $and5=$3&$m;
 var $tobool4=(($and5<<16)>>16)==0;
 var $incdec_ptr=(($low_addr_0+4)|0);
 if($tobool4){var $low_addr_0_lcssa=$low_addr_0;label=7;break;}else{var $low_addr_0=$incdec_ptr;label=2;break;}
 case 7: 
 var $low_addr_0_lcssa;
 return $low_addr_0_lcssa;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__15ctypeIwE10do_toupperEw($this,$c){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $isascii=($c>>>0)<128;
 if($isascii){label=2;break;}else{var $cond=$c;label=5;break;}
 case 2: 
 var $call_i=(function() { try { __THREW__ = 0; return ___ctype_toupper_loc() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=4;break; } else { label=3;break; }
 case 3: 
 var $0$0 = ___cxa_find_matching_catch(-1, -1,0); var $0$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 4: 
 var $1=HEAP32[(($call_i)>>2)];
 var $arrayidx=(($1+($c<<2))|0);
 var $2=HEAP32[(($arrayidx)>>2)];
 var $cond=$2;label=5;break;
 case 5: 
 var $cond;
 return $cond;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__15ctypeIwE10do_toupperEPwPKw($this,$low,$high){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $cmp6=($low|0)==($high|0);
 if($cmp6){var $low_addr_0_lcssa=$low;label=7;break;}else{var $low_addr_07=$low;label=2;break;}
 case 2: 
 var $low_addr_07;
 var $0=HEAP32[(($low_addr_07)>>2)];
 var $isascii=($0>>>0)<128;
 if($isascii){label=3;break;}else{var $cond=$0;label=6;break;}
 case 3: 
 var $call_i=(function() { try { __THREW__ = 0; return ___ctype_toupper_loc() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=5;break; } else { label=4;break; }
 case 4: 
 var $1$0 = ___cxa_find_matching_catch(-1, -1,0); var $1$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 5: 
 var $2=HEAP32[(($call_i)>>2)];
 var $arrayidx=(($2+($0<<2))|0);
 var $3=HEAP32[(($arrayidx)>>2)];
 var $cond=$3;label=6;break;
 case 6: 
 var $cond;
 HEAP32[(($low_addr_07)>>2)]=$cond;
 var $incdec_ptr=(($low_addr_07+4)|0);
 var $cmp=($incdec_ptr|0)==($high|0);
 if($cmp){var $low_addr_0_lcssa=$high;label=7;break;}else{var $low_addr_07=$incdec_ptr;label=2;break;}
 case 7: 
 var $low_addr_0_lcssa;
 return $low_addr_0_lcssa;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__15ctypeIwE10do_tolowerEw($this,$c){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $isascii=($c>>>0)<128;
 if($isascii){label=2;break;}else{var $cond=$c;label=5;break;}
 case 2: 
 var $call_i=(function() { try { __THREW__ = 0; return ___ctype_tolower_loc() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=4;break; } else { label=3;break; }
 case 3: 
 var $0$0 = ___cxa_find_matching_catch(-1, -1,0); var $0$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 4: 
 var $1=HEAP32[(($call_i)>>2)];
 var $arrayidx=(($1+($c<<2))|0);
 var $2=HEAP32[(($arrayidx)>>2)];
 var $cond=$2;label=5;break;
 case 5: 
 var $cond;
 return $cond;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__15ctypeIwE10do_tolowerEPwPKw($this,$low,$high){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $cmp6=($low|0)==($high|0);
 if($cmp6){var $low_addr_0_lcssa=$low;label=7;break;}else{var $low_addr_07=$low;label=2;break;}
 case 2: 
 var $low_addr_07;
 var $0=HEAP32[(($low_addr_07)>>2)];
 var $isascii=($0>>>0)<128;
 if($isascii){label=3;break;}else{var $cond=$0;label=6;break;}
 case 3: 
 var $call_i=(function() { try { __THREW__ = 0; return ___ctype_tolower_loc() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=5;break; } else { label=4;break; }
 case 4: 
 var $1$0 = ___cxa_find_matching_catch(-1, -1,0); var $1$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 5: 
 var $2=HEAP32[(($call_i)>>2)];
 var $arrayidx=(($2+($0<<2))|0);
 var $3=HEAP32[(($arrayidx)>>2)];
 var $cond=$3;label=6;break;
 case 6: 
 var $cond;
 HEAP32[(($low_addr_07)>>2)]=$cond;
 var $incdec_ptr=(($low_addr_07+4)|0);
 var $cmp=($incdec_ptr|0)==($high|0);
 if($cmp){var $low_addr_0_lcssa=$high;label=7;break;}else{var $low_addr_07=$incdec_ptr;label=2;break;}
 case 7: 
 var $low_addr_0_lcssa;
 return $low_addr_0_lcssa;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__15ctypeIwE8do_widenEc($this,$c){
 var label=0;
 var $conv=(($c<<24)>>24);
 return $conv;
}
function __ZNKSt3__15ctypeIwE8do_widenEPKcS3_Pw($this,$low,$high,$dest){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $cmp4=($low|0)==($high|0);
 if($cmp4){var $low_addr_0_lcssa=$low;label=3;break;}else{var $low_addr_05=$low;var $dest_addr_06=$dest;label=2;break;}
 case 2: 
 var $dest_addr_06;
 var $low_addr_05;
 var $0=HEAP8[($low_addr_05)];
 var $conv=(($0<<24)>>24);
 HEAP32[(($dest_addr_06)>>2)]=$conv;
 var $incdec_ptr=(($low_addr_05+1)|0);
 var $incdec_ptr2=(($dest_addr_06+4)|0);
 var $cmp=($incdec_ptr|0)==($high|0);
 if($cmp){var $low_addr_0_lcssa=$high;label=3;break;}else{var $low_addr_05=$incdec_ptr;var $dest_addr_06=$incdec_ptr2;label=2;break;}
 case 3: 
 var $low_addr_0_lcssa;
 return $low_addr_0_lcssa;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__15ctypeIwE9do_narrowEwc($this,$c,$dfault){
 var label=0;
 var $isascii=($c>>>0)<128;
 var $conv=(($c)&255);
 var $retval_0=($isascii?$conv:$dfault);
 return $retval_0;
}
function __ZNKSt3__15ctypeIwE9do_narrowEPKwS3_cPc($this,$low,$high,$dfault,$dest){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $cmp6=($low|0)==($high|0);
 if($cmp6){var $low_addr_0_lcssa=$low;label=5;break;}else{label=2;break;}
 case 2: 
 var $low10=$low;
 var $scevgep=((($high)-(4))|0);
 var $scevgep9=$scevgep;
 var $0=(((-$low10))|0);
 var $uglygep=(($scevgep9+$0)|0);
 var $uglygep11=$uglygep;
 var $1=$uglygep11>>>2;
 var $2=((($1)+(1))|0);
 var $low_addr_07=$low;var $dest_addr_08=$dest;label=3;break;
 case 3: 
 var $dest_addr_08;
 var $low_addr_07;
 var $3=HEAP32[(($low_addr_07)>>2)];
 var $isascii=($3>>>0)<128;
 var $conv=(($3)&255);
 var $conv_dfault=($isascii?$conv:$dfault);
 HEAP8[($dest_addr_08)]=$conv_dfault;
 var $incdec_ptr=(($low_addr_07+4)|0);
 var $incdec_ptr2=(($dest_addr_08+1)|0);
 var $cmp=($incdec_ptr|0)==($high|0);
 if($cmp){label=4;break;}else{var $low_addr_07=$incdec_ptr;var $dest_addr_08=$incdec_ptr2;label=3;break;}
 case 4: 
 var $scevgep12=(($low+($2<<2))|0);
 var $low_addr_0_lcssa=$scevgep12;label=5;break;
 case 5: 
 var $low_addr_0_lcssa;
 return $low_addr_0_lcssa;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__15ctypeIcED0Ev($this){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $0=(($this)|0);
 HEAP32[(($0)>>2)]=5696;
 var $__tab__i=(($this+8)|0);
 var $1=HEAP32[(($__tab__i)>>2)];
 var $tobool_i=($1|0)==0;
 if($tobool_i){label=4;break;}else{label=2;break;}
 case 2: 
 var $__del__i=(($this+12)|0);
 var $2=HEAP8[($__del__i)];
 var $3=$2&1;
 var $tobool2_i=(($3<<24)>>24)==0;
 if($tobool2_i){label=4;break;}else{label=3;break;}
 case 3: 
 var $4=$1;
 __ZdaPv($4);
 label=4;break;
 case 4: 
 var $5=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($5);
 var $6=$this;
 __ZdlPv($6);
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__15ctypeIcED2Ev($this){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $0=(($this)|0);
 HEAP32[(($0)>>2)]=5696;
 var $__tab_=(($this+8)|0);
 var $1=HEAP32[(($__tab_)>>2)];
 var $tobool=($1|0)==0;
 if($tobool){label=4;break;}else{label=2;break;}
 case 2: 
 var $__del_=(($this+12)|0);
 var $2=HEAP8[($__del_)];
 var $3=$2&1;
 var $tobool2=(($3<<24)>>24)==0;
 if($tobool2){label=4;break;}else{label=3;break;}
 case 3: 
 var $4=$1;
 __ZdaPv($4);
 label=4;break;
 case 4: 
 var $5=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($5);
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__15ctypeIcE10do_toupperEc($this,$c){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $tobool=(($c<<24)>>24)<0;
 if($tobool){var $cond=$c;label=5;break;}else{label=2;break;}
 case 2: 
 var $call_i=(function() { try { __THREW__ = 0; return ___ctype_toupper_loc() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=4;break; } else { label=3;break; }
 case 3: 
 var $0$0 = ___cxa_find_matching_catch(-1, -1,0); var $0$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 4: 
 var $idxprom=($c&255);
 var $1=HEAP32[(($call_i)>>2)];
 var $arrayidx=(($1+($idxprom<<2))|0);
 var $2=HEAP32[(($arrayidx)>>2)];
 var $conv3=(($2)&255);
 var $cond=$conv3;label=5;break;
 case 5: 
 var $cond;
 return $cond;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__15ctypeIcE10do_toupperEPcPKc($this,$low,$high){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $cmp7=($low|0)==($high|0);
 if($cmp7){var $low_addr_0_lcssa=$low;label=7;break;}else{var $low_addr_08=$low;label=2;break;}
 case 2: 
 var $low_addr_08;
 var $0=HEAP8[($low_addr_08)];
 var $tobool=(($0<<24)>>24)<0;
 if($tobool){var $cond=$0;label=6;break;}else{label=3;break;}
 case 3: 
 var $call_i=(function() { try { __THREW__ = 0; return ___ctype_toupper_loc() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=5;break; } else { label=4;break; }
 case 4: 
 var $1$0 = ___cxa_find_matching_catch(-1, -1,0); var $1$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 5: 
 var $conv2=(($0<<24)>>24);
 var $2=HEAP32[(($call_i)>>2)];
 var $arrayidx=(($2+($conv2<<2))|0);
 var $3=HEAP32[(($arrayidx)>>2)];
 var $conv4=(($3)&255);
 var $cond=$conv4;label=6;break;
 case 6: 
 var $cond;
 HEAP8[($low_addr_08)]=$cond;
 var $incdec_ptr=(($low_addr_08+1)|0);
 var $cmp=($incdec_ptr|0)==($high|0);
 if($cmp){var $low_addr_0_lcssa=$high;label=7;break;}else{var $low_addr_08=$incdec_ptr;label=2;break;}
 case 7: 
 var $low_addr_0_lcssa;
 return $low_addr_0_lcssa;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__15ctypeIcE10do_tolowerEc($this,$c){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $conv=(($c<<24)>>24);
 var $tobool=(($c<<24)>>24)<0;
 if($tobool){var $cond=$c;label=5;break;}else{label=2;break;}
 case 2: 
 var $call_i=(function() { try { __THREW__ = 0; return ___ctype_tolower_loc() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=4;break; } else { label=3;break; }
 case 3: 
 var $0$0 = ___cxa_find_matching_catch(-1, -1,0); var $0$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 4: 
 var $1=HEAP32[(($call_i)>>2)];
 var $arrayidx=(($1+($conv<<2))|0);
 var $2=HEAP32[(($arrayidx)>>2)];
 var $conv4=(($2)&255);
 var $cond=$conv4;label=5;break;
 case 5: 
 var $cond;
 return $cond;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__15ctypeIcE10do_tolowerEPcPKc($this,$low,$high){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $cmp7=($low|0)==($high|0);
 if($cmp7){var $low_addr_0_lcssa=$low;label=7;break;}else{var $low_addr_08=$low;label=2;break;}
 case 2: 
 var $low_addr_08;
 var $0=HEAP8[($low_addr_08)];
 var $tobool=(($0<<24)>>24)<0;
 if($tobool){var $cond=$0;label=6;break;}else{label=3;break;}
 case 3: 
 var $call_i=(function() { try { __THREW__ = 0; return ___ctype_tolower_loc() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=5;break; } else { label=4;break; }
 case 4: 
 var $1$0 = ___cxa_find_matching_catch(-1, -1,0); var $1$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 5: 
 var $conv2=(($0<<24)>>24);
 var $2=HEAP32[(($call_i)>>2)];
 var $arrayidx=(($2+($conv2<<2))|0);
 var $3=HEAP32[(($arrayidx)>>2)];
 var $conv4=(($3)&255);
 var $cond=$conv4;label=6;break;
 case 6: 
 var $cond;
 HEAP8[($low_addr_08)]=$cond;
 var $incdec_ptr=(($low_addr_08+1)|0);
 var $cmp=($incdec_ptr|0)==($high|0);
 if($cmp){var $low_addr_0_lcssa=$high;label=7;break;}else{var $low_addr_08=$incdec_ptr;label=2;break;}
 case 7: 
 var $low_addr_0_lcssa;
 return $low_addr_0_lcssa;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__15ctypeIcE8do_widenEc($this,$c){
 var label=0;
 return $c;
}
function __ZNKSt3__15ctypeIcE8do_widenEPKcS3_Pc($this,$low,$high,$dest){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $cmp4=($low|0)==($high|0);
 if($cmp4){var $low_addr_0_lcssa=$low;label=3;break;}else{var $low_addr_05=$low;var $dest_addr_06=$dest;label=2;break;}
 case 2: 
 var $dest_addr_06;
 var $low_addr_05;
 var $0=HEAP8[($low_addr_05)];
 HEAP8[($dest_addr_06)]=$0;
 var $incdec_ptr=(($low_addr_05+1)|0);
 var $incdec_ptr2=(($dest_addr_06+1)|0);
 var $cmp=($incdec_ptr|0)==($high|0);
 if($cmp){var $low_addr_0_lcssa=$high;label=3;break;}else{var $low_addr_05=$incdec_ptr;var $dest_addr_06=$incdec_ptr2;label=2;break;}
 case 3: 
 var $low_addr_0_lcssa;
 return $low_addr_0_lcssa;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__15ctypeIcE9do_narrowEcc($this,$c,$dfault){
 var label=0;
 var $tobool=(($c<<24)>>24)<0;
 var $dfault_c=($tobool?$dfault:$c);
 return $dfault_c;
}
function __ZNKSt3__15ctypeIcE9do_narrowEPKcS3_cPc($this,$low,$high,$dfault,$dest){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $cmp7=($low|0)==($high|0);
 if($cmp7){var $low_addr_0_lcssa=$low;label=3;break;}else{var $low_addr_08=$low;var $dest_addr_09=$dest;label=2;break;}
 case 2: 
 var $dest_addr_09;
 var $low_addr_08;
 var $0=HEAP8[($low_addr_08)];
 var $tobool=(($0<<24)>>24)<0;
 var $dfault_=($tobool?$dfault:$0);
 HEAP8[($dest_addr_09)]=$dfault_;
 var $incdec_ptr=(($low_addr_08+1)|0);
 var $incdec_ptr2=(($dest_addr_09+1)|0);
 var $cmp=($incdec_ptr|0)==($high|0);
 if($cmp){var $low_addr_0_lcssa=$high;label=3;break;}else{var $low_addr_08=$incdec_ptr;var $dest_addr_09=$incdec_ptr2;label=2;break;}
 case 3: 
 var $low_addr_0_lcssa;
 return $low_addr_0_lcssa;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__17codecvtIcc11__mbstate_tED0Ev($this){
 var label=0;
 var $0=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($0);
 var $1=$this;
 __ZdlPv($1);
 return;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_($this,$0,$frm,$1,$frm_nxt,$to,$2,$to_nxt){
 var label=0;
 HEAP32[(($frm_nxt)>>2)]=$frm;
 HEAP32[(($to_nxt)>>2)]=$to;
 return 3;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_($this,$0,$frm,$1,$frm_nxt,$to,$2,$to_nxt){
 var label=0;
 HEAP32[(($frm_nxt)>>2)]=$frm;
 HEAP32[(($to_nxt)>>2)]=$to;
 return 3;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this,$0,$to,$1,$to_nxt){
 var label=0;
 HEAP32[(($to_nxt)>>2)]=$to;
 return 3;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE11do_encodingEv($this){
 var label=0;
 return 1;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE16do_always_noconvEv($this){
 var label=0;
 return 1;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_j($this,$0,$frm,$end,$mx){
 var label=0;
 var $sub_ptr_lhs_cast=$end;
 var $sub_ptr_rhs_cast=$frm;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $cmp_i_i_i=($sub_ptr_sub>>>0)<($mx>>>0);
 var $_sroa_speculated=($cmp_i_i_i?$sub_ptr_sub:$mx);
 return $_sroa_speculated;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE13do_max_lengthEv($this){
 var label=0;
 return 1;
}
function __ZNSt3__17codecvtIwc11__mbstate_tED0Ev($this){
 var label=0;
 __ZNSt3__17codecvtIwc11__mbstate_tED2Ev($this);
 var $0=$this;
 __ZdlPv($0);
 return;
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_($this,$st,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $save_state=sp;
 var $tmpcast=$save_state;
 var $tmp=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);(assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $fend_0=$frm;label=2;break;
 case 2: 
 var $fend_0;
 var $cmp=($fend_0|0)==($frm_end|0);
 if($cmp){var $fend_0_lcssa=$frm_end;label=4;break;}else{label=3;break;}
 case 3: 
 var $0=HEAP32[(($fend_0)>>2)];
 var $cmp2=($0|0)==0;
 var $incdec_ptr=(($fend_0+4)|0);
 if($cmp2){var $fend_0_lcssa=$fend_0;label=4;break;}else{var $fend_0=$incdec_ptr;label=2;break;}
 case 4: 
 var $fend_0_lcssa;
 HEAP32[(($to_nxt)>>2)]=$to;
 HEAP32[(($frm_nxt)>>2)]=$frm;
 var $cmp494=($frm|0)==($frm_end|0);
 var $cmp595=($to|0)==($to_end|0);
 var $or_cond96=$cmp494|$cmp595;
 if($or_cond96){var $28=$frm;label=49;break;}else{label=5;break;}
 case 5: 
 var $1=$st;
 var $sub_ptr_lhs_cast7=$to_end;
 var $__l=(($this+8)|0);
 var $arraydecay=(($tmp)|0);
 var $to_addr_097=$to;var $frm_addr_098=$frm;var $fend_199=$fend_0_lcssa;label=6;break;
 case 6: 
 var $fend_199;
 var $frm_addr_098;
 var $to_addr_097;
 var $ld$0$0=(($1)|0);
 var $2$0=HEAP32[(($ld$0$0)>>2)];
 var $ld$1$1=(($1+4)|0);
 var $2$1=HEAP32[(($ld$1$1)>>2)];
 var $st$2$0=(($save_state)|0);
 HEAP32[(($st$2$0)>>2)]=$2$0;
 var $st$3$1=(($save_state+4)|0);
 HEAP32[(($st$3$1)>>2)]=$2$1;
 var $sub_ptr_lhs_cast=$fend_199;
 var $sub_ptr_rhs_cast=$frm_addr_098;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $sub_ptr_div=$sub_ptr_sub>>2;
 var $sub_ptr_rhs_cast8=$to_addr_097;
 var $sub_ptr_sub9=((($sub_ptr_lhs_cast7)-($sub_ptr_rhs_cast8))|0);
 var $3=HEAP32[(($__l)>>2)];
 var $call_i=_uselocale($3);
 var $call1_i=(function() { try { __THREW__ = 0; return _wcsnrtombs($to_addr_097,$frm_nxt,$sub_ptr_div,$sub_ptr_sub9,$st) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=7;break; } else { label=10;break; }
 case 7: 
 var $tobool_i_i_i37_i=($call_i|0)==0;
 if($tobool_i_i_i37_i){label=14;break;}else{label=8;break;}
 case 8: 
 var $call6_i_i_i42_i=(function() { try { __THREW__ = 0; return _uselocale($call_i) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=14;break; } else { label=9;break; }
 case 9: 
 var $4$0 = ___cxa_find_matching_catch(-1, -1,0); var $4$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 10: 
 var $5$0 = ___cxa_find_matching_catch(-1, -1); var $5$1 = tempRet0;
 var $tobool_i_i_i_i=($call_i|0)==0;
 if($tobool_i_i_i_i){label=13;break;}else{label=11;break;}
 case 11: 
 var $call6_i_i_i_i=(function() { try { __THREW__ = 0; return _uselocale($call_i) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=13;break; } else { label=12;break; }
 case 12: 
 var $6$0 = ___cxa_find_matching_catch(-1, -1,0); var $6$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 13: 
 ___resumeException($5$0)
 case 14: 
 if(($call1_i|0)==-1){ label=15;break;}else if(($call1_i|0)==0){ var $retval_0=1;label=50;break;}else{label=27;break;}
 case 15: 
 HEAP32[(($to_nxt)>>2)]=$to_addr_097;
 var $7=HEAP32[(($frm_nxt)>>2)];
 var $cmp1366=($frm_addr_098|0)==($7|0);
 if($cmp1366){var $frm_addr_1_lcssa=$frm_addr_098;label=26;break;}else{var $frm_addr_167=$frm_addr_098;var $8=$to_addr_097;label=16;break;}
 case 16: 
 var $8;
 var $frm_addr_167;
 var $9=HEAP32[(($frm_addr_167)>>2)];
 var $10=HEAP32[(($__l)>>2)];
 var $call_i115=_uselocale($10);
 var $call1_i124=(function() { try { __THREW__ = 0; return _wcrtomb($8,$9,$tmpcast) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=17;break; } else { label=20;break; }
 case 17: 
 var $tobool_i_i_i37_i136=($call_i115|0)==0;
 if($tobool_i_i_i37_i136){label=24;break;}else{label=18;break;}
 case 18: 
 var $call6_i_i_i42_i142=(function() { try { __THREW__ = 0; return _uselocale($call_i115) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=24;break; } else { label=19;break; }
 case 19: 
 var $11$0 = ___cxa_find_matching_catch(-1, -1,0); var $11$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 20: 
 var $12$0 = ___cxa_find_matching_catch(-1, -1); var $12$1 = tempRet0;
 var $tobool_i_i_i_i157=($call_i115|0)==0;
 if($tobool_i_i_i_i157){label=23;break;}else{label=21;break;}
 case 21: 
 var $call6_i_i_i_i163=(function() { try { __THREW__ = 0; return _uselocale($call_i115) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=23;break; } else { label=22;break; }
 case 22: 
 var $13$0 = ___cxa_find_matching_catch(-1, -1,0); var $13$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 23: 
 ___resumeException($12$0)
 case 24: 
 var $cmp17=($call1_i124|0)==-1;
 if($cmp17){var $frm_addr_1_lcssa=$frm_addr_167;label=26;break;}else{label=25;break;}
 case 25: 
 var $14=HEAP32[(($to_nxt)>>2)];
 var $add_ptr=(($14+$call1_i124)|0);
 HEAP32[(($to_nxt)>>2)]=$add_ptr;
 var $incdec_ptr21=(($frm_addr_167+4)|0);
 var $15=HEAP32[(($frm_nxt)>>2)];
 var $cmp13=($incdec_ptr21|0)==($15|0);
 if($cmp13){var $frm_addr_1_lcssa=$incdec_ptr21;label=26;break;}else{var $frm_addr_167=$incdec_ptr21;var $8=$add_ptr;label=16;break;}
 case 26: 
 var $frm_addr_1_lcssa;
 HEAP32[(($frm_nxt)>>2)]=$frm_addr_1_lcssa;
 var $retval_0=2;label=50;break;
 case 27: 
 var $16=HEAP32[(($to_nxt)>>2)];
 var $add_ptr27=(($16+$call1_i)|0);
 HEAP32[(($to_nxt)>>2)]=$add_ptr27;
 var $cmp28=($add_ptr27|0)==($to_end|0);
 if($cmp28){label=48;break;}else{label=28;break;}
 case 28: 
 var $cmp31=($fend_199|0)==($frm_end|0);
 if($cmp31){label=29;break;}else{label=30;break;}
 case 29: 
 var $_pre129=HEAP32[(($frm_nxt)>>2)];
 var $fend_3=$frm_end;var $27=$add_ptr27;var $26=$_pre129;label=47;break;
 case 30: 
 var $17=HEAP32[(($__l)>>2)];
 var $call_i223=_uselocale($17);
 var $call1_i232=(function() { try { __THREW__ = 0; return _wcrtomb($arraydecay,0,$st) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=31;break; } else { label=34;break; }
 case 31: 
 var $tobool_i_i_i37_i244=($call_i223|0)==0;
 if($tobool_i_i_i37_i244){label=38;break;}else{label=32;break;}
 case 32: 
 var $call6_i_i_i42_i250=(function() { try { __THREW__ = 0; return _uselocale($call_i223) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=38;break; } else { label=33;break; }
 case 33: 
 var $18$0 = ___cxa_find_matching_catch(-1, -1,0); var $18$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 34: 
 var $19$0 = ___cxa_find_matching_catch(-1, -1); var $19$1 = tempRet0;
 var $tobool_i_i_i_i265=($call_i223|0)==0;
 if($tobool_i_i_i_i265){label=37;break;}else{label=35;break;}
 case 35: 
 var $call6_i_i_i_i271=(function() { try { __THREW__ = 0; return _uselocale($call_i223) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=37;break; } else { label=36;break; }
 case 36: 
 var $20$0 = ___cxa_find_matching_catch(-1, -1,0); var $20$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 37: 
 ___resumeException($19$0)
 case 38: 
 var $cmp35=($call1_i232|0)==-1;
 if($cmp35){var $retval_0=2;label=50;break;}else{label=39;break;}
 case 39: 
 var $21=HEAP32[(($to_nxt)>>2)];
 var $sub_ptr_rhs_cast39=$21;
 var $sub_ptr_sub40=((($sub_ptr_lhs_cast7)-($sub_ptr_rhs_cast39))|0);
 var $cmp41=($call1_i232>>>0)>($sub_ptr_sub40>>>0);
 if($cmp41){var $retval_0=1;label=50;break;}else{label=40;break;}
 case 40: 
 var $tobool68=($call1_i232|0)==0;
 if($tobool68){label=43;break;}else{var $n_069=$call1_i232;var $p_070=$arraydecay;var $22=$21;label=41;break;}
 case 41: 
 var $22;
 var $p_070;
 var $n_069;
 var $23=HEAP8[($p_070)];
 var $incdec_ptr49=(($22+1)|0);
 HEAP32[(($to_nxt)>>2)]=$incdec_ptr49;
 HEAP8[($22)]=$23;
 var $dec=((($n_069)-(1))|0);
 var $tobool=($dec|0)==0;
 if($tobool){label=43;break;}else{label=42;break;}
 case 42: 
 var $incdec_ptr48=(($p_070+1)|0);
 var $_pre130=HEAP32[(($to_nxt)>>2)];
 var $n_069=$dec;var $p_070=$incdec_ptr48;var $22=$_pre130;label=41;break;
 case 43: 
 var $24=HEAP32[(($frm_nxt)>>2)];
 var $incdec_ptr52=(($24+4)|0);
 HEAP32[(($frm_nxt)>>2)]=$incdec_ptr52;
 var $fend_2=$incdec_ptr52;label=44;break;
 case 44: 
 var $fend_2;
 var $cmp54=($fend_2|0)==($frm_end|0);
 if($cmp54){var $fend_2_lcssa=$frm_end;label=46;break;}else{label=45;break;}
 case 45: 
 var $25=HEAP32[(($fend_2)>>2)];
 var $cmp56=($25|0)==0;
 var $incdec_ptr60=(($fend_2+4)|0);
 if($cmp56){var $fend_2_lcssa=$fend_2;label=46;break;}else{var $fend_2=$incdec_ptr60;label=44;break;}
 case 46: 
 var $fend_2_lcssa;
 var $_pre128=HEAP32[(($to_nxt)>>2)];
 var $fend_3=$fend_2_lcssa;var $27=$_pre128;var $26=$incdec_ptr52;label=47;break;
 case 47: 
 var $26;
 var $27;
 var $fend_3;
 var $cmp4=($26|0)==($frm_end|0);
 var $cmp5=($27|0)==($to_end|0);
 var $or_cond=$cmp4|$cmp5;
 if($or_cond){var $28=$26;label=49;break;}else{var $to_addr_097=$27;var $frm_addr_098=$26;var $fend_199=$fend_3;label=6;break;}
 case 48: 
 var $_pre=HEAP32[(($frm_nxt)>>2)];
 var $28=$_pre;label=49;break;
 case 49: 
 var $28;
 var $not_cmp65=($28|0)!=($frm_end|0);
 var $cond=($not_cmp65&1);
 var $retval_0=$cond;label=50;break;
 case 50: 
 var $retval_0;
 STACKTOP=sp;return $retval_0;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_($this,$st,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $save_state=sp;
 var $tmpcast=$save_state;
 var $fend_0=$frm;label=2;break;
 case 2: 
 var $fend_0;
 var $cmp=($fend_0|0)==($frm_end|0);
 if($cmp){var $fend_0_lcssa=$frm_end;label=4;break;}else{label=3;break;}
 case 3: 
 var $0=HEAP8[($fend_0)];
 var $cmp2=(($0<<24)>>24)==0;
 var $incdec_ptr=(($fend_0+1)|0);
 if($cmp2){var $fend_0_lcssa=$fend_0;label=4;break;}else{var $fend_0=$incdec_ptr;label=2;break;}
 case 4: 
 var $fend_0_lcssa;
 HEAP32[(($to_nxt)>>2)]=$to;
 HEAP32[(($frm_nxt)>>2)]=$frm;
 var $cmp4107=($frm|0)==($frm_end|0);
 var $cmp5108=($to|0)==($to_end|0);
 var $or_cond109=$cmp4107|$cmp5108;
 if($or_cond109){var $24=$frm;label=48;break;}else{label=5;break;}
 case 5: 
 var $1=$st;
 var $sub_ptr_lhs_cast7=$to_end;
 var $__l=(($this+8)|0);
 var $to_addr_0110=$to;var $frm_addr_0111=$frm;var $fend_1112=$fend_0_lcssa;label=6;break;
 case 6: 
 var $fend_1112;
 var $frm_addr_0111;
 var $to_addr_0110;
 var $ld$0$0=(($1)|0);
 var $2$0=HEAP32[(($ld$0$0)>>2)];
 var $ld$1$1=(($1+4)|0);
 var $2$1=HEAP32[(($ld$1$1)>>2)];
 var $st$2$0=(($save_state)|0);
 HEAP32[(($st$2$0)>>2)]=$2$0;
 var $st$3$1=(($save_state+4)|0);
 HEAP32[(($st$3$1)>>2)]=$2$1;
 var $sub_ptr_lhs_cast=$fend_1112;
 var $sub_ptr_rhs_cast=$frm_addr_0111;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $sub_ptr_rhs_cast8=$to_addr_0110;
 var $sub_ptr_sub9=((($sub_ptr_lhs_cast7)-($sub_ptr_rhs_cast8))|0);
 var $sub_ptr_div=$sub_ptr_sub9>>2;
 var $3=HEAP32[(($__l)>>2)];
 var $call_i=_uselocale($3);
 var $call1_i=(function() { try { __THREW__ = 0; return _mbsnrtowcs($to_addr_0110,$frm_nxt,$sub_ptr_sub,$sub_ptr_div,$st) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=7;break; } else { label=10;break; }
 case 7: 
 var $tobool_i_i_i37_i=($call_i|0)==0;
 if($tobool_i_i_i37_i){label=14;break;}else{label=8;break;}
 case 8: 
 var $call6_i_i_i42_i=(function() { try { __THREW__ = 0; return _uselocale($call_i) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=14;break; } else { label=9;break; }
 case 9: 
 var $4$0 = ___cxa_find_matching_catch(-1, -1,0); var $4$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 10: 
 var $5$0 = ___cxa_find_matching_catch(-1, -1); var $5$1 = tempRet0;
 var $tobool_i_i_i_i=($call_i|0)==0;
 if($tobool_i_i_i_i){label=13;break;}else{label=11;break;}
 case 11: 
 var $call6_i_i_i_i=(function() { try { __THREW__ = 0; return _uselocale($call_i) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=13;break; } else { label=12;break; }
 case 12: 
 var $6$0 = ___cxa_find_matching_catch(-1, -1,0); var $6$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 13: 
 ___resumeException($5$0)
 case 14: 
 if(($call1_i|0)==-1){ label=15;break;}else if(($call1_i|0)==0){ var $retval_0=2;label=49;break;}else{label=31;break;}
 case 15: 
 HEAP32[(($to_nxt)>>2)]=$to_addr_0110;
 var $7=HEAP32[(($frm_nxt)>>2)];
 var $cmp1376=($frm_addr_0111|0)==($7|0);
 if($cmp1376){var $frm_addr_1_lcssa=$frm_addr_0111;label=30;break;}else{var $storemerge77=$to_addr_0110;var $frm_addr_178=$frm_addr_0111;label=16;break;}
 case 16: 
 var $frm_addr_178;
 var $storemerge77;
 var $sub_ptr_rhs_cast16=$frm_addr_178;
 var $sub_ptr_sub17=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast16))|0);
 var $8=HEAP32[(($__l)>>2)];
 var $call_i108=_uselocale($8);
 var $call1_i117=(function() { try { __THREW__ = 0; return _mbrtowc($storemerge77,$frm_addr_178,$sub_ptr_sub17,$tmpcast) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=17;break; } else { label=20;break; }
 case 17: 
 var $tobool_i_i_i37_i129=($call_i108|0)==0;
 if($tobool_i_i_i37_i129){label=24;break;}else{label=18;break;}
 case 18: 
 var $call6_i_i_i42_i135=(function() { try { __THREW__ = 0; return _uselocale($call_i108) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=24;break; } else { label=19;break; }
 case 19: 
 var $9$0 = ___cxa_find_matching_catch(-1, -1,0); var $9$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 20: 
 var $10$0 = ___cxa_find_matching_catch(-1, -1); var $10$1 = tempRet0;
 var $tobool_i_i_i_i150=($call_i108|0)==0;
 if($tobool_i_i_i_i150){label=23;break;}else{label=21;break;}
 case 21: 
 var $call6_i_i_i_i156=(function() { try { __THREW__ = 0; return _uselocale($call_i108) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=23;break; } else { label=22;break; }
 case 22: 
 var $11$0 = ___cxa_find_matching_catch(-1, -1,0); var $11$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 23: 
 ___resumeException($10$0)
 case 24: 
 if(($call1_i117|0)==0){ label=25;break;}else if(($call1_i117|0)==-1){ label=26;break;}else if(($call1_i117|0)==-2){ label=27;break;}else{label=28;break;}
 case 25: 
 var $incdec_ptr20=(($frm_addr_178+1)|0);
 var $frm_addr_2=$incdec_ptr20;label=29;break;
 case 26: 
 HEAP32[(($frm_nxt)>>2)]=$frm_addr_178;
 var $retval_0=2;label=49;break;
 case 27: 
 HEAP32[(($frm_nxt)>>2)]=$frm_addr_178;
 var $retval_0=1;label=49;break;
 case 28: 
 var $add_ptr=(($frm_addr_178+$call1_i117)|0);
 var $frm_addr_2=$add_ptr;label=29;break;
 case 29: 
 var $frm_addr_2;
 var $12=HEAP32[(($to_nxt)>>2)];
 var $incdec_ptr24=(($12+4)|0);
 HEAP32[(($to_nxt)>>2)]=$incdec_ptr24;
 var $13=HEAP32[(($frm_nxt)>>2)];
 var $cmp13=($frm_addr_2|0)==($13|0);
 if($cmp13){var $frm_addr_1_lcssa=$frm_addr_2;label=30;break;}else{var $storemerge77=$incdec_ptr24;var $frm_addr_178=$frm_addr_2;label=16;break;}
 case 30: 
 var $frm_addr_1_lcssa;
 HEAP32[(($frm_nxt)>>2)]=$frm_addr_1_lcssa;
 var $not_cmp26=($frm_addr_1_lcssa|0)!=($frm_end|0);
 var $cond=($not_cmp26&1);
 var $retval_0=$cond;label=49;break;
 case 31: 
 var $14=HEAP32[(($to_nxt)>>2)];
 var $add_ptr31=(($14+($call1_i<<2))|0);
 HEAP32[(($to_nxt)>>2)]=$add_ptr31;
 var $cmp32=($add_ptr31|0)==($to_end|0);
 if($cmp32){label=47;break;}else{label=32;break;}
 case 32: 
 var $cmp35=($fend_1112|0)==($frm_end|0);
 var $_pre151=HEAP32[(($frm_nxt)>>2)];
 if($cmp35){var $fend_3=$frm_end;var $23=$add_ptr31;var $22=$_pre151;label=46;break;}else{label=33;break;}
 case 33: 
 var $15=HEAP32[(($__l)>>2)];
 var $call_i217=_uselocale($15);
 var $call1_i226=(function() { try { __THREW__ = 0; return _mbrtowc($add_ptr31,$_pre151,1,$st) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=34;break; } else { label=37;break; }
 case 34: 
 var $tobool_i_i_i37_i238=($call_i217|0)==0;
 if($tobool_i_i_i37_i238){label=41;break;}else{label=35;break;}
 case 35: 
 var $call6_i_i_i42_i244=(function() { try { __THREW__ = 0; return _uselocale($call_i217) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=41;break; } else { label=36;break; }
 case 36: 
 var $16$0 = ___cxa_find_matching_catch(-1, -1,0); var $16$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 37: 
 var $17$0 = ___cxa_find_matching_catch(-1, -1); var $17$1 = tempRet0;
 var $tobool_i_i_i_i259=($call_i217|0)==0;
 if($tobool_i_i_i_i259){label=40;break;}else{label=38;break;}
 case 38: 
 var $call6_i_i_i_i265=(function() { try { __THREW__ = 0; return _uselocale($call_i217) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=40;break; } else { label=39;break; }
 case 39: 
 var $18$0 = ___cxa_find_matching_catch(-1, -1,0); var $18$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 40: 
 ___resumeException($17$0)
 case 41: 
 var $cmp39=($call1_i226|0)==0;
 if($cmp39){label=42;break;}else{var $retval_0=2;label=49;break;}
 case 42: 
 var $19=HEAP32[(($to_nxt)>>2)];
 var $incdec_ptr42=(($19+4)|0);
 HEAP32[(($to_nxt)>>2)]=$incdec_ptr42;
 var $20=HEAP32[(($frm_nxt)>>2)];
 var $incdec_ptr43=(($20+1)|0);
 HEAP32[(($frm_nxt)>>2)]=$incdec_ptr43;
 var $fend_2=$incdec_ptr43;label=43;break;
 case 43: 
 var $fend_2;
 var $cmp45=($fend_2|0)==($frm_end|0);
 if($cmp45){var $fend_2_lcssa=$frm_end;label=45;break;}else{label=44;break;}
 case 44: 
 var $21=HEAP8[($fend_2)];
 var $cmp48=(($21<<24)>>24)==0;
 var $incdec_ptr52=(($fend_2+1)|0);
 if($cmp48){var $fend_2_lcssa=$fend_2;label=45;break;}else{var $fend_2=$incdec_ptr52;label=43;break;}
 case 45: 
 var $fend_2_lcssa;
 var $_pre150=HEAP32[(($to_nxt)>>2)];
 var $fend_3=$fend_2_lcssa;var $23=$_pre150;var $22=$incdec_ptr43;label=46;break;
 case 46: 
 var $22;
 var $23;
 var $fend_3;
 var $cmp4=($22|0)==($frm_end|0);
 var $cmp5=($23|0)==($to_end|0);
 var $or_cond=$cmp4|$cmp5;
 if($or_cond){var $24=$22;label=48;break;}else{var $to_addr_0110=$23;var $frm_addr_0111=$22;var $fend_1112=$fend_3;label=6;break;}
 case 47: 
 var $_pre=HEAP32[(($frm_nxt)>>2)];
 var $24=$_pre;label=48;break;
 case 48: 
 var $24;
 var $not_cmp57=($24|0)!=($frm_end|0);
 var $cond58=($not_cmp57&1);
 var $retval_0=$cond58;label=49;break;
 case 49: 
 var $retval_0;
 STACKTOP=sp;return $retval_0;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this,$st,$to,$to_end,$to_nxt){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $tmp=sp;
 HEAP32[(($to_nxt)>>2)]=$to;
 var $arraydecay=(($tmp)|0);
 var $__l=(($this+8)|0);
 var $0=HEAP32[(($__l)>>2)];
 var $call_i=_uselocale($0);
 var $call1_i=(function() { try { __THREW__ = 0; return _wcrtomb($arraydecay,0,$st) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=5;break; }
 case 2: 
 var $tobool_i_i_i37_i=($call_i|0)==0;
 if($tobool_i_i_i37_i){label=9;break;}else{label=3;break;}
 case 3: 
 var $call6_i_i_i42_i=(function() { try { __THREW__ = 0; return _uselocale($call_i) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=9;break; } else { label=4;break; }
 case 4: 
 var $1$0 = ___cxa_find_matching_catch(-1, -1,0); var $1$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 5: 
 var $2$0 = ___cxa_find_matching_catch(-1, -1); var $2$1 = tempRet0;
 var $tobool_i_i_i_i=($call_i|0)==0;
 if($tobool_i_i_i_i){label=8;break;}else{label=6;break;}
 case 6: 
 var $call6_i_i_i_i=(function() { try { __THREW__ = 0; return _uselocale($call_i) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=8;break; } else { label=7;break; }
 case 7: 
 var $3$0 = ___cxa_find_matching_catch(-1, -1,0); var $3$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 8: 
 ___resumeException($2$0)
 case 9: 
 if(($call1_i|0)==-1|($call1_i|0)==0){ var $retval_0=2;label=14;break;}else{label=10;break;}
 case 10: 
 var $dec=((($call1_i)-(1))|0);
 var $4=HEAP32[(($to_nxt)>>2)];
 var $sub_ptr_lhs_cast=$to_end;
 var $sub_ptr_rhs_cast=$4;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $cmp4=($dec>>>0)>($sub_ptr_sub>>>0);
 if($cmp4){var $retval_0=1;label=14;break;}else{label=11;break;}
 case 11: 
 var $tobool12=($dec|0)==0;
 if($tobool12){var $retval_0=0;label=14;break;}else{var $n_013=$dec;var $p_014=$arraydecay;var $5=$4;label=12;break;}
 case 12: 
 var $5;
 var $p_014;
 var $n_013;
 var $6=HEAP8[($p_014)];
 var $incdec_ptr9=(($5+1)|0);
 HEAP32[(($to_nxt)>>2)]=$incdec_ptr9;
 HEAP8[($5)]=$6;
 var $dec10=((($n_013)-(1))|0);
 var $tobool=($dec10|0)==0;
 if($tobool){var $retval_0=0;label=14;break;}else{label=13;break;}
 case 13: 
 var $incdec_ptr=(($p_014+1)|0);
 var $_pre=HEAP32[(($to_nxt)>>2)];
 var $n_013=$dec10;var $p_014=$incdec_ptr;var $5=$_pre;label=12;break;
 case 14: 
 var $retval_0;
 STACKTOP=sp;return $retval_0;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE11do_encodingEv($this){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__l=(($this+8)|0);
 var $0=HEAP32[(($__l)>>2)];
 var $call_i10=(function() { try { __THREW__ = 0; return _uselocale($0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=16;break; }
 case 2: 
 var $call1_i=(function() { try { __THREW__ = 0; return _mbtowc(0,0,4) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=3;break; } else { label=6;break; }
 case 3: 
 var $tobool_i_i_i37_i=($call_i10|0)==0;
 if($tobool_i_i_i37_i){label=9;break;}else{label=4;break;}
 case 4: 
 var $call6_i_i_i42_i=(function() { try { __THREW__ = 0; return _uselocale($call_i10) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=9;break; } else { label=5;break; }
 case 5: 
 var $1$0 = ___cxa_find_matching_catch(-1, -1,0); var $1$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 6: 
 var $2$0 = ___cxa_find_matching_catch(-1, -1,0); var $2$1 = tempRet0;
 var $tobool_i_i_i_i=($call_i10|0)==0;
 if($tobool_i_i_i_i){label=17;break;}else{label=7;break;}
 case 7: 
 var $call6_i_i_i_i=(function() { try { __THREW__ = 0; return _uselocale($call_i10) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=17;break; } else { label=8;break; }
 case 8: 
 var $3$0 = ___cxa_find_matching_catch(-1, -1,0); var $3$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 9: 
 var $cmp=($call1_i|0)==0;
 if($cmp){label=10;break;}else{var $retval_0=-1;label=15;break;}
 case 10: 
 var $4=HEAP32[(($__l)>>2)];
 var $cmp3=($4|0)==0;
 if($cmp3){var $retval_0=1;label=15;break;}else{label=11;break;}
 case 11: 
 var $call_i64=(function() { try { __THREW__ = 0; return _uselocale($4) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=12;break; } else { label=16;break; }
 case 12: 
 var $tobool_i_i_i_i54=($call_i64|0)==0;
 if($tobool_i_i_i_i54){var $retval_0=0;label=15;break;}else{label=13;break;}
 case 13: 
 var $call6_i_i_i_i58=(function() { try { __THREW__ = 0; return _uselocale($call_i64) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $retval_0=0;label=15;break; } else { label=14;break; }
 case 14: 
 var $5$0 = ___cxa_find_matching_catch(-1, -1,0); var $5$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 15: 
 var $retval_0;
 return $retval_0;
 case 16: 
 var $6$0 = ___cxa_find_matching_catch(-1, -1,0); var $6$1 = tempRet0;
 label=17;break;
 case 17: 
 __ZSt9terminatev();
 throw "Reached an unreachable!";
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE16do_always_noconvEv($this){
 var label=0;
 return 0;
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_j($this,$st,$frm,$frm_end,$mx){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $cmp19=($mx|0)==0;
 var $cmp220=($frm|0)==($frm_end|0);
 var $or_cond21=$cmp19|$cmp220;
 if($or_cond21){var $nbytes_0_lcssa=0;label=15;break;}else{label=2;break;}
 case 2: 
 var $sub_ptr_lhs_cast=$frm_end;
 var $__l=(($this+8)|0);
 var $frm_addr_022=$frm;var $nbytes_023=0;var $nwchar_t_024=0;label=3;break;
 case 3: 
 var $nwchar_t_024;
 var $nbytes_023;
 var $frm_addr_022;
 var $sub_ptr_rhs_cast=$frm_addr_022;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $0=HEAP32[(($__l)>>2)];
 var $call_i=_uselocale($0);
 var $call1_i=(function() { try { __THREW__ = 0; return _mbrlen($frm_addr_022,$sub_ptr_sub,$st) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=4;break; } else { label=7;break; }
 case 4: 
 var $tobool_i_i_i37_i=($call_i|0)==0;
 if($tobool_i_i_i37_i){label=11;break;}else{label=5;break;}
 case 5: 
 var $call6_i_i_i42_i=(function() { try { __THREW__ = 0; return _uselocale($call_i) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=11;break; } else { label=6;break; }
 case 6: 
 var $1$0 = ___cxa_find_matching_catch(-1, -1,0); var $1$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 7: 
 var $2$0 = ___cxa_find_matching_catch(-1, -1); var $2$1 = tempRet0;
 var $tobool_i_i_i_i=($call_i|0)==0;
 if($tobool_i_i_i_i){label=10;break;}else{label=8;break;}
 case 8: 
 var $call6_i_i_i_i=(function() { try { __THREW__ = 0; return _uselocale($call_i) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=10;break; } else { label=9;break; }
 case 9: 
 var $3$0 = ___cxa_find_matching_catch(-1, -1,0); var $3$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 10: 
 ___resumeException($2$0)
 case 11: 
 if(($call1_i|0)==0){ label=12;break;}else if(($call1_i|0)==-1|($call1_i|0)==-2){ var $nbytes_0_lcssa=$nbytes_023;label=15;break;}else{label=13;break;}
 case 12: 
 var $incdec_ptr=(($frm_addr_022+1)|0);
 var $call1_i_pn=1;var $frm_addr_1=$incdec_ptr;label=14;break;
 case 13: 
 var $add_ptr=(($frm_addr_022+$call1_i)|0);
 var $call1_i_pn=$call1_i;var $frm_addr_1=$add_ptr;label=14;break;
 case 14: 
 var $frm_addr_1;
 var $call1_i_pn;
 var $nbytes_1=((($call1_i_pn)+($nbytes_023))|0);
 var $inc4=((($nwchar_t_024)+(1))|0);
 var $cmp=($inc4>>>0)>=($mx>>>0);
 var $cmp2=($frm_addr_1|0)==($frm_end|0);
 var $or_cond=$cmp|$cmp2;
 if($or_cond){var $nbytes_0_lcssa=$nbytes_1;label=15;break;}else{var $frm_addr_022=$frm_addr_1;var $nbytes_023=$nbytes_1;var $nwchar_t_024=$inc4;label=3;break;}
 case 15: 
 var $nbytes_0_lcssa;
 return $nbytes_0_lcssa;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE13do_max_lengthEv($this){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__l=(($this+8)|0);
 var $0=HEAP32[(($__l)>>2)];
 var $cmp=($0|0)==0;
 if($cmp){var $cond=1;label=6;break;}else{label=2;break;}
 case 2: 
 var $call_i3=(function() { try { __THREW__ = 0; return _uselocale($0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=3;break; } else { label=7;break; }
 case 3: 
 var $tobool_i_i_i_i=($call_i3|0)==0;
 if($tobool_i_i_i_i){var $cond=4;label=6;break;}else{label=4;break;}
 case 4: 
 var $call6_i_i_i_i=(function() { try { __THREW__ = 0; return _uselocale($call_i3) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { var $cond=4;label=6;break; } else { label=5;break; }
 case 5: 
 var $1$0 = ___cxa_find_matching_catch(-1, -1,0); var $1$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
 case 6: 
 var $cond;
 return $cond;
 case 7: 
 var $2$0 = ___cxa_find_matching_catch(-1, -1,0); var $2$1 = tempRet0;
 __ZSt9terminatev();
 throw "Reached an unreachable!";
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__17codecvtIDsc11__mbstate_tED0Ev($this){
 var label=0;
 var $0=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($0);
 var $1=$this;
 __ZdlPv($1);
 return;
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_($this,$0,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $_frm_nxt=sp;
 var $_to_nxt=(sp)+(8);
 HEAP32[(($_frm_nxt)>>2)]=$frm;
 HEAP32[(($_to_nxt)>>2)]=$to;
 var $call=__ZNSt3__1L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$_frm_nxt,$to,$to_end,$_to_nxt,1114111,0);
 var $1=HEAP32[(($_frm_nxt)>>2)];
 var $sub_ptr_lhs_cast=$1;
 var $sub_ptr_rhs_cast=$frm;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $sub_ptr_div=$sub_ptr_sub>>1;
 var $add_ptr=(($frm+($sub_ptr_div<<1))|0);
 HEAP32[(($frm_nxt)>>2)]=$add_ptr;
 var $2=HEAP32[(($_to_nxt)>>2)];
 var $sub_ptr_lhs_cast2=$2;
 var $sub_ptr_rhs_cast3=$to;
 var $sub_ptr_sub4=((($sub_ptr_lhs_cast2)-($sub_ptr_rhs_cast3))|0);
 var $add_ptr5=(($to+$sub_ptr_sub4)|0);
 HEAP32[(($to_nxt)>>2)]=$add_ptr5;
 STACKTOP=sp;return $call;
}
function __ZNSt3__1L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt,$Maxcode,$mode){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 HEAP32[(($frm_nxt)>>2)]=$frm;
 HEAP32[(($to_nxt)>>2)]=$to;
 var $and=$mode&2;
 var $tobool=($and|0)==0;
 if($tobool){label=4;break;}else{label=2;break;}
 case 2: 
 var $sub_ptr_lhs_cast=$to_end;
 var $sub_ptr_rhs_cast=$to;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $cmp=($sub_ptr_sub|0)<3;
 if($cmp){var $retval_0=1;label=26;break;}else{label=3;break;}
 case 3: 
 var $incdec_ptr=(($to+1)|0);
 HEAP32[(($to_nxt)>>2)]=$incdec_ptr;
 HEAP8[($to)]=-17;
 var $0=HEAP32[(($to_nxt)>>2)];
 var $incdec_ptr2=(($0+1)|0);
 HEAP32[(($to_nxt)>>2)]=$incdec_ptr2;
 HEAP8[($0)]=-69;
 var $1=HEAP32[(($to_nxt)>>2)];
 var $incdec_ptr3=(($1+1)|0);
 HEAP32[(($to_nxt)>>2)]=$incdec_ptr3;
 HEAP8[($1)]=-65;
 label=4;break;
 case 4: 
 var $sub_ptr_lhs_cast67=$frm_end;
 var $2=HEAP32[(($frm_nxt)>>2)];
 var $cmp568=($2>>>0)<($frm_end>>>0);
 if($cmp568){label=5;break;}else{var $retval_0=0;label=26;break;}
 case 5: 
 var $sub_ptr_lhs_cast12=$to_end;
 var $3=$2;label=6;break;
 case 6: 
 var $3;
 var $4=HEAP16[(($3)>>1)];
 var $conv=($4&65535);
 var $cmp6=($conv>>>0)>($Maxcode>>>0);
 if($cmp6){var $retval_0=2;label=26;break;}else{label=7;break;}
 case 7: 
 var $cmp10=($4&65535)<128;
 if($cmp10){label=8;break;}else{label=10;break;}
 case 8: 
 var $5=HEAP32[(($to_nxt)>>2)];
 var $sub_ptr_rhs_cast13=$5;
 var $sub_ptr_sub14=((($sub_ptr_lhs_cast12)-($sub_ptr_rhs_cast13))|0);
 var $cmp15=($sub_ptr_sub14|0)<1;
 if($cmp15){var $retval_0=1;label=26;break;}else{label=9;break;}
 case 9: 
 var $conv18=(($4)&255);
 var $incdec_ptr19=(($5+1)|0);
 HEAP32[(($to_nxt)>>2)]=$incdec_ptr19;
 HEAP8[($5)]=$conv18;
 label=25;break;
 case 10: 
 var $cmp21=($4&65535)<2048;
 if($cmp21){label=11;break;}else{label=13;break;}
 case 11: 
 var $6=HEAP32[(($to_nxt)>>2)];
 var $sub_ptr_rhs_cast24=$6;
 var $sub_ptr_sub25=((($sub_ptr_lhs_cast12)-($sub_ptr_rhs_cast24))|0);
 var $cmp26=($sub_ptr_sub25|0)<2;
 if($cmp26){var $retval_0=1;label=26;break;}else{label=12;break;}
 case 12: 
 var $shr67=$conv>>>6;
 var $or=$shr67|192;
 var $conv30=(($or)&255);
 var $incdec_ptr31=(($6+1)|0);
 HEAP32[(($to_nxt)>>2)]=$incdec_ptr31;
 HEAP8[($6)]=$conv30;
 var $and33=$conv&63;
 var $or34=$and33|128;
 var $conv35=(($or34)&255);
 var $7=HEAP32[(($to_nxt)>>2)];
 var $incdec_ptr36=(($7+1)|0);
 HEAP32[(($to_nxt)>>2)]=$incdec_ptr36;
 HEAP8[($7)]=$conv35;
 label=25;break;
 case 13: 
 var $cmp39=($4&65535)<55296;
 if($cmp39){label=14;break;}else{label=16;break;}
 case 14: 
 var $8=HEAP32[(($to_nxt)>>2)];
 var $sub_ptr_rhs_cast42=$8;
 var $sub_ptr_sub43=((($sub_ptr_lhs_cast12)-($sub_ptr_rhs_cast42))|0);
 var $cmp44=($sub_ptr_sub43|0)<3;
 if($cmp44){var $retval_0=1;label=26;break;}else{label=15;break;}
 case 15: 
 var $shr4865=$conv>>>12;
 var $or49=$shr4865|224;
 var $conv50=(($or49)&255);
 var $incdec_ptr51=(($8+1)|0);
 HEAP32[(($to_nxt)>>2)]=$incdec_ptr51;
 HEAP8[($8)]=$conv50;
 var $and53=$conv>>>6;
 var $shr5466=$and53&63;
 var $or55=$shr5466|128;
 var $conv56=(($or55)&255);
 var $9=HEAP32[(($to_nxt)>>2)];
 var $incdec_ptr57=(($9+1)|0);
 HEAP32[(($to_nxt)>>2)]=$incdec_ptr57;
 HEAP8[($9)]=$conv56;
 var $and59=$conv&63;
 var $or60=$and59|128;
 var $conv61=(($or60)&255);
 var $10=HEAP32[(($to_nxt)>>2)];
 var $incdec_ptr62=(($10+1)|0);
 HEAP32[(($to_nxt)>>2)]=$incdec_ptr62;
 HEAP8[($10)]=$conv61;
 label=25;break;
 case 16: 
 var $cmp65=($4&65535)<56320;
 if($cmp65){label=17;break;}else{label=22;break;}
 case 17: 
 var $sub_ptr_rhs_cast68=$3;
 var $sub_ptr_sub69=((($sub_ptr_lhs_cast67)-($sub_ptr_rhs_cast68))|0);
 var $cmp70=($sub_ptr_sub69|0)<4;
 if($cmp70){var $retval_0=1;label=26;break;}else{label=18;break;}
 case 18: 
 var $arrayidx=(($3+2)|0);
 var $11=HEAP16[(($arrayidx)>>1)];
 var $conv73=($11&65535);
 var $and74=$conv73&64512;
 var $cmp75=($and74|0)==56320;
 if($cmp75){label=19;break;}else{var $retval_0=2;label=26;break;}
 case 19: 
 var $12=HEAP32[(($to_nxt)>>2)];
 var $sub_ptr_rhs_cast79=$12;
 var $sub_ptr_sub80=((($sub_ptr_lhs_cast12)-($sub_ptr_rhs_cast79))|0);
 var $cmp81=($sub_ptr_sub80|0)<4;
 if($cmp81){var $retval_0=1;label=26;break;}else{label=20;break;}
 case 20: 
 var $and85=$conv&960;
 var $add=$and85<<10;
 var $shl=((($add)+(65536))|0);
 var $and88=$conv<<10;
 var $shl89=$and88&64512;
 var $add90=$shl|$shl89;
 var $and92=$conv73&1023;
 var $add93=$add90|$and92;
 var $cmp94=($add93>>>0)>($Maxcode>>>0);
 if($cmp94){var $retval_0=2;label=26;break;}else{label=21;break;}
 case 21: 
 HEAP32[(($frm_nxt)>>2)]=$arrayidx;
 var $shr10061=$and85>>>6;
 var $add101=((($shr10061)+(1))|0);
 var $shr10462=$add101>>>2;
 var $or105=$shr10462|240;
 var $conv106=(($or105)&255);
 var $13=HEAP32[(($to_nxt)>>2)];
 var $incdec_ptr107=(($13+1)|0);
 HEAP32[(($to_nxt)>>2)]=$incdec_ptr107;
 HEAP8[($13)]=$conv106;
 var $and109=$add101<<4;
 var $shl110=$and109&48;
 var $and113=$conv>>>2;
 var $shr11463=$and113&15;
 var $or111=$shr11463|$shl110;
 var $or115=$or111|128;
 var $conv116=(($or115)&255);
 var $14=HEAP32[(($to_nxt)>>2)];
 var $incdec_ptr117=(($14+1)|0);
 HEAP32[(($to_nxt)>>2)]=$incdec_ptr117;
 HEAP8[($14)]=$conv116;
 var $and119=$conv<<4;
 var $shl120=$and119&48;
 var $and123=$conv73>>>6;
 var $shr12464=$and123&15;
 var $or121=$shl120|$shr12464;
 var $or125=$or121|128;
 var $conv126=(($or125)&255);
 var $15=HEAP32[(($to_nxt)>>2)];
 var $incdec_ptr127=(($15+1)|0);
 HEAP32[(($to_nxt)>>2)]=$incdec_ptr127;
 HEAP8[($15)]=$conv126;
 var $and129=$conv73&63;
 var $or130=$and129|128;
 var $conv131=(($or130)&255);
 var $16=HEAP32[(($to_nxt)>>2)];
 var $incdec_ptr132=(($16+1)|0);
 HEAP32[(($to_nxt)>>2)]=$incdec_ptr132;
 HEAP8[($16)]=$conv131;
 label=25;break;
 case 22: 
 var $cmp135=($4&65535)<57344;
 if($cmp135){var $retval_0=2;label=26;break;}else{label=23;break;}
 case 23: 
 var $17=HEAP32[(($to_nxt)>>2)];
 var $sub_ptr_rhs_cast139=$17;
 var $sub_ptr_sub140=((($sub_ptr_lhs_cast12)-($sub_ptr_rhs_cast139))|0);
 var $cmp141=($sub_ptr_sub140|0)<3;
 if($cmp141){var $retval_0=1;label=26;break;}else{label=24;break;}
 case 24: 
 var $shr14559=$conv>>>12;
 var $or146=$shr14559|224;
 var $conv147=(($or146)&255);
 var $incdec_ptr148=(($17+1)|0);
 HEAP32[(($to_nxt)>>2)]=$incdec_ptr148;
 HEAP8[($17)]=$conv147;
 var $and150=$conv>>>6;
 var $shr15160=$and150&63;
 var $or152=$shr15160|128;
 var $conv153=(($or152)&255);
 var $18=HEAP32[(($to_nxt)>>2)];
 var $incdec_ptr154=(($18+1)|0);
 HEAP32[(($to_nxt)>>2)]=$incdec_ptr154;
 HEAP8[($18)]=$conv153;
 var $and156=$conv&63;
 var $or157=$and156|128;
 var $conv158=(($or157)&255);
 var $19=HEAP32[(($to_nxt)>>2)];
 var $incdec_ptr159=(($19+1)|0);
 HEAP32[(($to_nxt)>>2)]=$incdec_ptr159;
 HEAP8[($19)]=$conv158;
 label=25;break;
 case 25: 
 var $20=HEAP32[(($frm_nxt)>>2)];
 var $incdec_ptr165=(($20+2)|0);
 HEAP32[(($frm_nxt)>>2)]=$incdec_ptr165;
 var $cmp5=($incdec_ptr165>>>0)<($frm_end>>>0);
 if($cmp5){var $3=$incdec_ptr165;label=6;break;}else{var $retval_0=0;label=26;break;}
 case 26: 
 var $retval_0;
 return $retval_0;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_($this,$0,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $_frm_nxt=sp;
 var $_to_nxt=(sp)+(8);
 HEAP32[(($_frm_nxt)>>2)]=$frm;
 HEAP32[(($_to_nxt)>>2)]=$to;
 var $call=__ZNSt3__1L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$_frm_nxt,$to,$to_end,$_to_nxt,1114111,0);
 var $1=HEAP32[(($_frm_nxt)>>2)];
 var $sub_ptr_lhs_cast=$1;
 var $sub_ptr_rhs_cast=$frm;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $add_ptr=(($frm+$sub_ptr_sub)|0);
 HEAP32[(($frm_nxt)>>2)]=$add_ptr;
 var $2=HEAP32[(($_to_nxt)>>2)];
 var $sub_ptr_lhs_cast2=$2;
 var $sub_ptr_rhs_cast3=$to;
 var $sub_ptr_sub4=((($sub_ptr_lhs_cast2)-($sub_ptr_rhs_cast3))|0);
 var $sub_ptr_div=$sub_ptr_sub4>>1;
 var $add_ptr5=(($to+($sub_ptr_div<<1))|0);
 HEAP32[(($to_nxt)>>2)]=$add_ptr5;
 STACKTOP=sp;return $call;
}
function __ZNSt3__1L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt,$Maxcode,$mode){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 HEAP32[(($frm_nxt)>>2)]=$frm;
 HEAP32[(($to_nxt)>>2)]=$to;
 var $and=$mode&4;
 var $tobool=($and|0)==0;
 var $_pre73=HEAP32[(($frm_nxt)>>2)];
 if($tobool){var $3=$_pre73;label=7;break;}else{label=2;break;}
 case 2: 
 var $sub_ptr_lhs_cast=$frm_end;
 var $sub_ptr_rhs_cast=$_pre73;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $cmp=($sub_ptr_sub|0)>2;
 if($cmp){label=3;break;}else{var $3=$_pre73;label=7;break;}
 case 3: 
 var $0=HEAP8[($_pre73)];
 var $cmp1=(($0<<24)>>24)==-17;
 if($cmp1){label=4;break;}else{var $3=$_pre73;label=7;break;}
 case 4: 
 var $arrayidx3=(($_pre73+1)|0);
 var $1=HEAP8[($arrayidx3)];
 var $cmp5=(($1<<24)>>24)==-69;
 if($cmp5){label=5;break;}else{var $3=$_pre73;label=7;break;}
 case 5: 
 var $arrayidx7=(($_pre73+2)|0);
 var $2=HEAP8[($arrayidx7)];
 var $cmp9=(($2<<24)>>24)==-65;
 if($cmp9){label=6;break;}else{var $3=$_pre73;label=7;break;}
 case 6: 
 var $add_ptr=(($_pre73+3)|0);
 HEAP32[(($frm_nxt)>>2)]=$add_ptr;
 var $3=$add_ptr;label=7;break;
 case 7: 
 var $3;
 var $cmp1270=($3>>>0)<($frm_end>>>0);
 if($cmp1270){label=8;break;}else{var $21=$3;label=40;break;}
 case 8: 
 var $sub_ptr_lhs_cast29=$frm_end;
 var $sub_ptr_lhs_cast148=$to_end;
 var $_pre=HEAP32[(($to_nxt)>>2)];
 var $5=$_pre;var $4=$3;label=9;break;
 case 9: 
 var $4;
 var $5;
 var $cmp13=($5>>>0)<($to_end>>>0);
 if($cmp13){label=10;break;}else{var $21=$4;label=40;break;}
 case 10: 
 var $6=HEAP8[($4)];
 var $conv14=($6&255);
 var $cmp15=($conv14>>>0)>($Maxcode>>>0);
 if($cmp15){var $retval_0=2;label=41;break;}else{label=11;break;}
 case 11: 
 var $cmp19=(($6<<24)>>24)>-1;
 if($cmp19){label=12;break;}else{label=13;break;}
 case 12: 
 var $conv21=($6&255);
 HEAP16[(($5)>>1)]=$conv21;
 var $7=HEAP32[(($frm_nxt)>>2)];
 var $incdec_ptr=(($7+1)|0);
 HEAP32[(($frm_nxt)>>2)]=$incdec_ptr;
 label=39;break;
 case 13: 
 var $cmp23=($6&255)<194;
 if($cmp23){var $retval_0=2;label=41;break;}else{label=14;break;}
 case 14: 
 var $cmp27=($6&255)<224;
 if($cmp27){label=15;break;}else{label=19;break;}
 case 15: 
 var $sub_ptr_rhs_cast30=$4;
 var $sub_ptr_sub31=((($sub_ptr_lhs_cast29)-($sub_ptr_rhs_cast30))|0);
 var $cmp32=($sub_ptr_sub31|0)<2;
 if($cmp32){var $retval_0=1;label=41;break;}else{label=16;break;}
 case 16: 
 var $arrayidx35=(($4+1)|0);
 var $8=HEAP8[($arrayidx35)];
 var $conv36=($8&255);
 var $and37=$conv36&192;
 var $cmp38=($and37|0)==128;
 if($cmp38){label=17;break;}else{var $retval_0=2;label=41;break;}
 case 17: 
 var $and42=$conv14<<6;
 var $shl=$and42&1984;
 var $and44=$conv36&63;
 var $or=$and44|$shl;
 var $cmp47=($or>>>0)>($Maxcode>>>0);
 if($cmp47){var $retval_0=2;label=41;break;}else{label=18;break;}
 case 18: 
 var $conv45=(($or)&65535);
 HEAP16[(($5)>>1)]=$conv45;
 var $9=HEAP32[(($frm_nxt)>>2)];
 var $add_ptr50=(($9+2)|0);
 HEAP32[(($frm_nxt)>>2)]=$add_ptr50;
 label=39;break;
 case 19: 
 var $cmp53=($6&255)<240;
 if($cmp53){label=20;break;}else{label=28;break;}
 case 20: 
 var $sub_ptr_rhs_cast56=$4;
 var $sub_ptr_sub57=((($sub_ptr_lhs_cast29)-($sub_ptr_rhs_cast56))|0);
 var $cmp58=($sub_ptr_sub57|0)<3;
 if($cmp58){var $retval_0=1;label=41;break;}else{label=21;break;}
 case 21: 
 var $arrayidx62=(($4+1)|0);
 var $10=HEAP8[($arrayidx62)];
 var $arrayidx63=(($4+2)|0);
 var $11=HEAP8[($arrayidx63)];
 if(($conv14|0)==224){ label=22;break;}else if(($conv14|0)==237){ label=23;break;}else{label=24;break;}
 case 22: 
 var $and66=$10&-32;
 var $cmp67=(($and66<<24)>>24)==-96;
 if($cmp67){label=25;break;}else{var $retval_0=2;label=41;break;}
 case 23: 
 var $and72=$10&-32;
 var $cmp73=(($and72<<24)>>24)==-128;
 if($cmp73){label=25;break;}else{var $retval_0=2;label=41;break;}
 case 24: 
 var $and77=$10&-64;
 var $cmp78=(($and77<<24)>>24)==-128;
 if($cmp78){label=25;break;}else{var $retval_0=2;label=41;break;}
 case 25: 
 var $conv81=($11&255);
 var $and82=$conv81&192;
 var $cmp83=($and82|0)==128;
 if($cmp83){label=26;break;}else{var $retval_0=2;label=41;break;}
 case 26: 
 var $and88=$conv14<<12;
 var $conv90=($10&255);
 var $and91=$conv90<<6;
 var $shl92=$and91&4032;
 var $or93=$shl92|$and88;
 var $and95=$conv81&63;
 var $or96=$or93|$and95;
 var $conv98=$or96&65535;
 var $cmp99=($conv98>>>0)>($Maxcode>>>0);
 if($cmp99){var $retval_0=2;label=41;break;}else{label=27;break;}
 case 27: 
 var $conv97=(($or96)&65535);
 HEAP16[(($5)>>1)]=$conv97;
 var $12=HEAP32[(($frm_nxt)>>2)];
 var $add_ptr102=(($12+3)|0);
 HEAP32[(($frm_nxt)>>2)]=$add_ptr102;
 label=39;break;
 case 28: 
 var $cmp105=($6&255)<245;
 if($cmp105){label=29;break;}else{var $retval_0=2;label=41;break;}
 case 29: 
 var $sub_ptr_rhs_cast108=$4;
 var $sub_ptr_sub109=((($sub_ptr_lhs_cast29)-($sub_ptr_rhs_cast108))|0);
 var $cmp110=($sub_ptr_sub109|0)<4;
 if($cmp110){var $retval_0=1;label=41;break;}else{label=30;break;}
 case 30: 
 var $arrayidx114=(($4+1)|0);
 var $13=HEAP8[($arrayidx114)];
 var $arrayidx116=(($4+2)|0);
 var $14=HEAP8[($arrayidx116)];
 var $arrayidx117=(($4+3)|0);
 var $15=HEAP8[($arrayidx117)];
 if(($conv14|0)==240){ label=31;break;}else if(($conv14|0)==244){ label=32;break;}else{label=33;break;}
 case 31: 
 var $_off=((($13)+(112))&255);
 var $16=($_off&255)<48;
 if($16){label=34;break;}else{var $retval_0=2;label=41;break;}
 case 32: 
 var $and129=$13&-16;
 var $cmp130=(($and129<<24)>>24)==-128;
 if($cmp130){label=34;break;}else{var $retval_0=2;label=41;break;}
 case 33: 
 var $and135=$13&-64;
 var $cmp136=(($and135<<24)>>24)==-128;
 if($cmp136){label=34;break;}else{var $retval_0=2;label=41;break;}
 case 34: 
 var $conv140=($14&255);
 var $and141=$conv140&192;
 var $cmp142=($and141|0)==128;
 if($cmp142){label=35;break;}else{var $retval_0=2;label=41;break;}
 case 35: 
 var $conv143=($15&255);
 var $and144=$conv143&192;
 var $cmp145=($and144|0)==128;
 if($cmp145){label=36;break;}else{var $retval_0=2;label=41;break;}
 case 36: 
 var $sub_ptr_rhs_cast149=$5;
 var $sub_ptr_sub150=((($sub_ptr_lhs_cast148)-($sub_ptr_rhs_cast149))|0);
 var $cmp151=($sub_ptr_sub150|0)<4;
 if($cmp151){var $retval_0=1;label=41;break;}else{label=37;break;}
 case 37: 
 var $and155=$conv14&7;
 var $shl156=$and155<<18;
 var $conv157=($13&255);
 var $and158=$conv157<<12;
 var $shl159=$and158&258048;
 var $add=$shl159|$shl156;
 var $and161=$conv140<<6;
 var $shl162=$and161&4032;
 var $add163=$add|$shl162;
 var $and165=$conv143&63;
 var $add166=$add163|$and165;
 var $cmp167=($add166>>>0)>($Maxcode>>>0);
 if($cmp167){var $retval_0=2;label=41;break;}else{label=38;break;}
 case 38: 
 var $shl172=$and155<<2;
 var $and174=$conv157>>>4;
 var $shr67=$and174&3;
 var $or175=$shr67|$shl172;
 var $sub=$or175<<6;
 var $shl176=((($sub)+(16320))|0);
 var $and179=$conv157<<2;
 var $shl180=$and179&60;
 var $and183=$conv140>>>4;
 var $shr18468=$and183&3;
 var $or177=$shl180|$shr18468;
 var $or181=$or177|$shl176;
 var $or185=$or181|55296;
 var $conv186=(($or185)&65535);
 HEAP16[(($5)>>1)]=$conv186;
 var $shl189=$and161&960;
 var $or190=$and165|$shl189;
 var $or193=$or190|56320;
 var $conv194=(($or193)&65535);
 var $17=HEAP32[(($to_nxt)>>2)];
 var $incdec_ptr195=(($17+2)|0);
 HEAP32[(($to_nxt)>>2)]=$incdec_ptr195;
 HEAP16[(($incdec_ptr195)>>1)]=$conv194;
 var $18=HEAP32[(($frm_nxt)>>2)];
 var $add_ptr196=(($18+4)|0);
 HEAP32[(($frm_nxt)>>2)]=$add_ptr196;
 label=39;break;
 case 39: 
 var $19=HEAP32[(($to_nxt)>>2)];
 var $incdec_ptr203=(($19+2)|0);
 HEAP32[(($to_nxt)>>2)]=$incdec_ptr203;
 var $20=HEAP32[(($frm_nxt)>>2)];
 var $cmp12=($20>>>0)<($frm_end>>>0);
 if($cmp12){var $5=$incdec_ptr203;var $4=$20;label=9;break;}else{var $21=$20;label=40;break;}
 case 40: 
 var $21;
 var $cmp204=($21>>>0)<($frm_end>>>0);
 var $cond=($cmp204&1);
 var $retval_0=$cond;label=41;break;
 case 41: 
 var $retval_0;
 return $retval_0;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this,$0,$to,$1,$to_nxt){
 var label=0;
 HEAP32[(($to_nxt)>>2)]=$to;
 return 3;
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE11do_encodingEv($this){
 var label=0;
 return 0;
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE16do_always_noconvEv($this){
 var label=0;
 return 0;
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_j($this,$0,$frm,$frm_end,$mx){
 var label=0;
 var $call=__ZNSt3__1L20utf8_to_utf16_lengthEPKhS1_jmNS_12codecvt_modeE($frm,$frm_end,$mx,1114111,0);
 return $call;
}
function __ZNSt3__1L20utf8_to_utf16_lengthEPKhS1_jmNS_12codecvt_modeE($frm,$frm_end,$mx,$Maxcode,$mode){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $and=$mode&4;
 var $tobool=($and|0)==0;
 if($tobool){var $frm_nxt_1_ph=$frm;label=6;break;}else{label=2;break;}
 case 2: 
 var $sub_ptr_lhs_cast=$frm_end;
 var $sub_ptr_rhs_cast=$frm;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $cmp=($sub_ptr_sub|0)>2;
 if($cmp){label=3;break;}else{var $frm_nxt_1_ph=$frm;label=6;break;}
 case 3: 
 var $0=HEAP8[($frm)];
 var $cmp1=(($0<<24)>>24)==-17;
 if($cmp1){label=4;break;}else{var $frm_nxt_1_ph=$frm;label=6;break;}
 case 4: 
 var $arrayidx3=(($frm+1)|0);
 var $1=HEAP8[($arrayidx3)];
 var $cmp5=(($1<<24)>>24)==-69;
 if($cmp5){label=5;break;}else{var $frm_nxt_1_ph=$frm;label=6;break;}
 case 5: 
 var $arrayidx7=(($frm+2)|0);
 var $2=HEAP8[($arrayidx7)];
 var $cmp9=(($2<<24)>>24)==-65;
 var $add_ptr=(($frm+3)|0);
 var $add_ptr_frm=($cmp9?$add_ptr:$frm);
 var $frm_nxt_1_ph=$add_ptr_frm;label=6;break;
 case 6: 
 var $frm_nxt_1_ph;
 var $cmp1277=($frm_nxt_1_ph>>>0)<($frm_end>>>0);
 var $cmp1378=($mx|0)!=0;
 var $or_cond79=$cmp1277&$cmp1378;
 if($or_cond79){label=7;break;}else{var $frm_nxt_1_lcssa=$frm_nxt_1_ph;label=44;break;}
 case 7: 
 var $sub_ptr_lhs_cast28=$frm_end;
 var $nchar16_t_080=0;var $frm_nxt_181=$frm_nxt_1_ph;label=8;break;
 case 8: 
 var $frm_nxt_181;
 var $nchar16_t_080;
 var $3=HEAP8[($frm_nxt_181)];
 var $conv14=($3&255);
 var $cmp15=($conv14>>>0)>($Maxcode>>>0);
 if($cmp15){var $frm_nxt_1_lcssa=$frm_nxt_181;label=44;break;}else{label=9;break;}
 case 9: 
 var $cmp19=(($3<<24)>>24)>-1;
 if($cmp19){label=10;break;}else{label=11;break;}
 case 10: 
 var $incdec_ptr=(($frm_nxt_181+1)|0);
 var $frm_nxt_2=$incdec_ptr;var $nchar16_t_1=$nchar16_t_080;label=43;break;
 case 11: 
 var $cmp22=($3&255)<194;
 if($cmp22){var $frm_nxt_1_lcssa=$frm_nxt_181;label=44;break;}else{label=12;break;}
 case 12: 
 var $cmp26=($3&255)<224;
 if($cmp26){label=13;break;}else{label=17;break;}
 case 13: 
 var $sub_ptr_rhs_cast29=$frm_nxt_181;
 var $sub_ptr_sub30=((($sub_ptr_lhs_cast28)-($sub_ptr_rhs_cast29))|0);
 var $cmp31=($sub_ptr_sub30|0)<2;
 if($cmp31){var $frm_nxt_1_lcssa=$frm_nxt_181;label=44;break;}else{label=14;break;}
 case 14: 
 var $arrayidx32=(($frm_nxt_181+1)|0);
 var $4=HEAP8[($arrayidx32)];
 var $conv33=($4&255);
 var $and34=$conv33&192;
 var $cmp35=($and34|0)==128;
 if($cmp35){label=15;break;}else{var $frm_nxt_1_lcssa=$frm_nxt_181;label=44;break;}
 case 15: 
 var $and39=$conv14<<6;
 var $shl=$and39&1984;
 var $and42=$conv33&63;
 var $or=$and42|$shl;
 var $cmp45=($or>>>0)>($Maxcode>>>0);
 if($cmp45){var $frm_nxt_1_lcssa=$frm_nxt_181;label=44;break;}else{label=16;break;}
 case 16: 
 var $add_ptr48=(($frm_nxt_181+2)|0);
 var $frm_nxt_2=$add_ptr48;var $nchar16_t_1=$nchar16_t_080;label=43;break;
 case 17: 
 var $cmp51=($3&255)<240;
 if($cmp51){label=18;break;}else{label=29;break;}
 case 18: 
 var $sub_ptr_rhs_cast54=$frm_nxt_181;
 var $sub_ptr_sub55=((($sub_ptr_lhs_cast28)-($sub_ptr_rhs_cast54))|0);
 var $cmp56=($sub_ptr_sub55|0)<3;
 if($cmp56){var $frm_nxt_1_lcssa=$frm_nxt_181;label=44;break;}else{label=19;break;}
 case 19: 
 var $arrayidx59=(($frm_nxt_181+1)|0);
 var $5=HEAP8[($arrayidx59)];
 var $arrayidx60=(($frm_nxt_181+2)|0);
 var $6=HEAP8[($arrayidx60)];
 if(($conv14|0)==224){ label=20;break;}else if(($conv14|0)==237){ label=22;break;}else{label=24;break;}
 case 20: 
 var $and63=$5&-32;
 var $cmp64=(($and63<<24)>>24)==-96;
 if($cmp64){label=26;break;}else{label=21;break;}
 case 21: 
 var $sub_ptr_rhs_cast67=$frm;
 var $sub_ptr_sub68=((($sub_ptr_rhs_cast54)-($sub_ptr_rhs_cast67))|0);
 var $retval_0=$sub_ptr_sub68;label=45;break;
 case 22: 
 var $and72=$5&-32;
 var $cmp73=(($and72<<24)>>24)==-128;
 if($cmp73){label=26;break;}else{label=23;break;}
 case 23: 
 var $sub_ptr_rhs_cast76=$frm;
 var $sub_ptr_sub77=((($sub_ptr_rhs_cast54)-($sub_ptr_rhs_cast76))|0);
 var $retval_0=$sub_ptr_sub77;label=45;break;
 case 24: 
 var $and80=$5&-64;
 var $cmp81=(($and80<<24)>>24)==-128;
 if($cmp81){label=26;break;}else{label=25;break;}
 case 25: 
 var $sub_ptr_rhs_cast84=$frm;
 var $sub_ptr_sub85=((($sub_ptr_rhs_cast54)-($sub_ptr_rhs_cast84))|0);
 var $retval_0=$sub_ptr_sub85;label=45;break;
 case 26: 
 var $conv87=($6&255);
 var $and88=$conv87&192;
 var $cmp89=($and88|0)==128;
 if($cmp89){label=27;break;}else{var $frm_nxt_1_lcssa=$frm_nxt_181;label=44;break;}
 case 27: 
 var $and93=$conv14<<12;
 var $shl94=$and93&61440;
 var $conv95=($5&255);
 var $and96=$conv95<<6;
 var $shl97=$and96&4032;
 var $or98=$shl97|$shl94;
 var $and100=$conv87&63;
 var $or101=$or98|$and100;
 var $cmp102=($or101>>>0)>($Maxcode>>>0);
 if($cmp102){var $frm_nxt_1_lcssa=$frm_nxt_181;label=44;break;}else{label=28;break;}
 case 28: 
 var $add_ptr105=(($frm_nxt_181+3)|0);
 var $frm_nxt_2=$add_ptr105;var $nchar16_t_1=$nchar16_t_080;label=43;break;
 case 29: 
 var $cmp108=($3&255)<245;
 if($cmp108){label=30;break;}else{var $frm_nxt_1_lcssa=$frm_nxt_181;label=44;break;}
 case 30: 
 var $sub_ptr_rhs_cast111=$frm_nxt_181;
 var $sub_ptr_sub112=((($sub_ptr_lhs_cast28)-($sub_ptr_rhs_cast111))|0);
 var $cmp113=($sub_ptr_sub112|0)<4;
 if($cmp113){var $frm_nxt_1_lcssa=$frm_nxt_181;label=44;break;}else{label=31;break;}
 case 31: 
 var $sub=((($mx)-($nchar16_t_080))|0);
 var $cmp115=($sub>>>0)<2;
 if($cmp115){var $frm_nxt_1_lcssa=$frm_nxt_181;label=44;break;}else{label=32;break;}
 case 32: 
 var $arrayidx119=(($frm_nxt_181+1)|0);
 var $7=HEAP8[($arrayidx119)];
 var $arrayidx121=(($frm_nxt_181+2)|0);
 var $8=HEAP8[($arrayidx121)];
 var $arrayidx122=(($frm_nxt_181+3)|0);
 var $9=HEAP8[($arrayidx122)];
 if(($conv14|0)==240){ label=33;break;}else if(($conv14|0)==244){ label=35;break;}else{label=37;break;}
 case 33: 
 var $_off=((($7)+(112))&255);
 var $10=($_off&255)<48;
 if($10){label=39;break;}else{label=34;break;}
 case 34: 
 var $sub_ptr_rhs_cast132=$frm;
 var $sub_ptr_sub133=((($sub_ptr_rhs_cast111)-($sub_ptr_rhs_cast132))|0);
 var $retval_0=$sub_ptr_sub133;label=45;break;
 case 35: 
 var $and137=$7&-16;
 var $cmp138=(($and137<<24)>>24)==-128;
 if($cmp138){label=39;break;}else{label=36;break;}
 case 36: 
 var $sub_ptr_rhs_cast141=$frm;
 var $sub_ptr_sub142=((($sub_ptr_rhs_cast111)-($sub_ptr_rhs_cast141))|0);
 var $retval_0=$sub_ptr_sub142;label=45;break;
 case 37: 
 var $and146=$7&-64;
 var $cmp147=(($and146<<24)>>24)==-128;
 if($cmp147){label=39;break;}else{label=38;break;}
 case 38: 
 var $sub_ptr_rhs_cast150=$frm;
 var $sub_ptr_sub151=((($sub_ptr_rhs_cast111)-($sub_ptr_rhs_cast150))|0);
 var $retval_0=$sub_ptr_sub151;label=45;break;
 case 39: 
 var $conv154=($8&255);
 var $and155=$conv154&192;
 var $cmp156=($and155|0)==128;
 if($cmp156){label=40;break;}else{var $frm_nxt_1_lcssa=$frm_nxt_181;label=44;break;}
 case 40: 
 var $conv158=($9&255);
 var $and159=$conv158&192;
 var $cmp160=($and159|0)==128;
 if($cmp160){label=41;break;}else{var $frm_nxt_1_lcssa=$frm_nxt_181;label=44;break;}
 case 41: 
 var $and164=$conv14<<18;
 var $shl165=$and164&1835008;
 var $conv166=($7&255);
 var $and167=$conv166<<12;
 var $shl168=$and167&258048;
 var $add=$shl168|$shl165;
 var $and170=$conv154<<6;
 var $shl171=$and170&4032;
 var $add172=$add|$shl171;
 var $and174=$conv158&63;
 var $add175=$add172|$and174;
 var $cmp176=($add175>>>0)>($Maxcode>>>0);
 if($cmp176){var $frm_nxt_1_lcssa=$frm_nxt_181;label=44;break;}else{label=42;break;}
 case 42: 
 var $inc=((($nchar16_t_080)+(1))|0);
 var $add_ptr179=(($frm_nxt_181+4)|0);
 var $frm_nxt_2=$add_ptr179;var $nchar16_t_1=$inc;label=43;break;
 case 43: 
 var $nchar16_t_1;
 var $frm_nxt_2;
 var $inc186=((($nchar16_t_1)+(1))|0);
 var $cmp12=($frm_nxt_2>>>0)<($frm_end>>>0);
 var $cmp13=($inc186>>>0)<($mx>>>0);
 var $or_cond=$cmp12&$cmp13;
 if($or_cond){var $nchar16_t_080=$inc186;var $frm_nxt_181=$frm_nxt_2;label=8;break;}else{var $frm_nxt_1_lcssa=$frm_nxt_2;label=44;break;}
 case 44: 
 var $frm_nxt_1_lcssa;
 var $sub_ptr_lhs_cast187=$frm_nxt_1_lcssa;
 var $sub_ptr_rhs_cast188=$frm;
 var $sub_ptr_sub189=((($sub_ptr_lhs_cast187)-($sub_ptr_rhs_cast188))|0);
 var $retval_0=$sub_ptr_sub189;label=45;break;
 case 45: 
 var $retval_0;
 return $retval_0;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE13do_max_lengthEv($this){
 var label=0;
 return 4;
}
function __ZNSt3__17codecvtIDic11__mbstate_tED0Ev($this){
 var label=0;
 var $0=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($0);
 var $1=$this;
 __ZdlPv($1);
 return;
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_($this,$0,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $_frm_nxt=sp;
 var $_to_nxt=(sp)+(8);
 HEAP32[(($_frm_nxt)>>2)]=$frm;
 HEAP32[(($_to_nxt)>>2)]=$to;
 var $call=__ZNSt3__1L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$_frm_nxt,$to,$to_end,$_to_nxt,1114111,0);
 var $1=HEAP32[(($_frm_nxt)>>2)];
 var $sub_ptr_lhs_cast=$1;
 var $sub_ptr_rhs_cast=$frm;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $sub_ptr_div=$sub_ptr_sub>>2;
 var $add_ptr=(($frm+($sub_ptr_div<<2))|0);
 HEAP32[(($frm_nxt)>>2)]=$add_ptr;
 var $2=HEAP32[(($_to_nxt)>>2)];
 var $sub_ptr_lhs_cast2=$2;
 var $sub_ptr_rhs_cast3=$to;
 var $sub_ptr_sub4=((($sub_ptr_lhs_cast2)-($sub_ptr_rhs_cast3))|0);
 var $add_ptr5=(($to+$sub_ptr_sub4)|0);
 HEAP32[(($to_nxt)>>2)]=$add_ptr5;
 STACKTOP=sp;return $call;
}
function __ZNSt3__1L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt,$Maxcode,$mode){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 HEAP32[(($frm_nxt)>>2)]=$frm;
 HEAP32[(($to_nxt)>>2)]=$to;
 var $and=$mode&2;
 var $tobool=($and|0)==0;
 if($tobool){label=4;break;}else{label=2;break;}
 case 2: 
 var $sub_ptr_lhs_cast=$to_end;
 var $sub_ptr_rhs_cast=$to;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $cmp=($sub_ptr_sub|0)<3;
 if($cmp){var $retval_0=1;label=19;break;}else{label=3;break;}
 case 3: 
 var $incdec_ptr=(($to+1)|0);
 HEAP32[(($to_nxt)>>2)]=$incdec_ptr;
 HEAP8[($to)]=-17;
 var $0=HEAP32[(($to_nxt)>>2)];
 var $incdec_ptr2=(($0+1)|0);
 HEAP32[(($to_nxt)>>2)]=$incdec_ptr2;
 HEAP8[($0)]=-69;
 var $1=HEAP32[(($to_nxt)>>2)];
 var $incdec_ptr3=(($1+1)|0);
 HEAP32[(($to_nxt)>>2)]=$incdec_ptr3;
 HEAP8[($1)]=-65;
 label=4;break;
 case 4: 
 var $2=HEAP32[(($frm_nxt)>>2)];
 var $cmp538=($2>>>0)<($frm_end>>>0);
 if($cmp538){label=5;break;}else{var $retval_0=0;label=19;break;}
 case 5: 
 var $sub_ptr_lhs_cast13=$to_end;
 var $3=$2;label=6;break;
 case 6: 
 var $3;
 var $4=HEAP32[(($3)>>2)];
 var $and6=$4&-2048;
 var $cmp7=($and6|0)==55296;
 var $cmp8=($4>>>0)>($Maxcode>>>0);
 var $or_cond=$cmp7|$cmp8;
 if($or_cond){var $retval_0=2;label=19;break;}else{label=7;break;}
 case 7: 
 var $cmp11=($4>>>0)<128;
 if($cmp11){label=8;break;}else{label=10;break;}
 case 8: 
 var $5=HEAP32[(($to_nxt)>>2)];
 var $sub_ptr_rhs_cast14=$5;
 var $sub_ptr_sub15=((($sub_ptr_lhs_cast13)-($sub_ptr_rhs_cast14))|0);
 var $cmp16=($sub_ptr_sub15|0)<1;
 if($cmp16){var $retval_0=1;label=19;break;}else{label=9;break;}
 case 9: 
 var $conv=(($4)&255);
 var $incdec_ptr19=(($5+1)|0);
 HEAP32[(($to_nxt)>>2)]=$incdec_ptr19;
 HEAP8[($5)]=$conv;
 label=18;break;
 case 10: 
 var $cmp20=($4>>>0)<2048;
 if($cmp20){label=11;break;}else{label=13;break;}
 case 11: 
 var $6=HEAP32[(($to_nxt)>>2)];
 var $sub_ptr_rhs_cast23=$6;
 var $sub_ptr_sub24=((($sub_ptr_lhs_cast13)-($sub_ptr_rhs_cast23))|0);
 var $cmp25=($sub_ptr_sub24|0)<2;
 if($cmp25){var $retval_0=1;label=19;break;}else{label=12;break;}
 case 12: 
 var $shr=$4>>>6;
 var $or=$shr|192;
 var $conv28=(($or)&255);
 var $incdec_ptr29=(($6+1)|0);
 HEAP32[(($to_nxt)>>2)]=$incdec_ptr29;
 HEAP8[($6)]=$conv28;
 var $and30=$4&63;
 var $or31=$and30|128;
 var $conv32=(($or31)&255);
 var $7=HEAP32[(($to_nxt)>>2)];
 var $incdec_ptr33=(($7+1)|0);
 HEAP32[(($to_nxt)>>2)]=$incdec_ptr33;
 HEAP8[($7)]=$conv32;
 label=18;break;
 case 13: 
 var $cmp35=($4>>>0)<65536;
 var $8=HEAP32[(($to_nxt)>>2)];
 var $sub_ptr_rhs_cast38=$8;
 var $sub_ptr_sub39=((($sub_ptr_lhs_cast13)-($sub_ptr_rhs_cast38))|0);
 if($cmp35){label=14;break;}else{label=16;break;}
 case 14: 
 var $cmp40=($sub_ptr_sub39|0)<3;
 if($cmp40){var $retval_0=1;label=19;break;}else{label=15;break;}
 case 15: 
 var $shr43=$4>>>12;
 var $or44=$shr43|224;
 var $conv45=(($or44)&255);
 var $incdec_ptr46=(($8+1)|0);
 HEAP32[(($to_nxt)>>2)]=$incdec_ptr46;
 HEAP8[($8)]=$conv45;
 var $and47=$4>>>6;
 var $shr48=$and47&63;
 var $or49=$shr48|128;
 var $conv50=(($or49)&255);
 var $9=HEAP32[(($to_nxt)>>2)];
 var $incdec_ptr51=(($9+1)|0);
 HEAP32[(($to_nxt)>>2)]=$incdec_ptr51;
 HEAP8[($9)]=$conv50;
 var $and52=$4&63;
 var $or53=$and52|128;
 var $conv54=(($or53)&255);
 var $10=HEAP32[(($to_nxt)>>2)];
 var $incdec_ptr55=(($10+1)|0);
 HEAP32[(($to_nxt)>>2)]=$incdec_ptr55;
 HEAP8[($10)]=$conv54;
 label=18;break;
 case 16: 
 var $cmp60=($sub_ptr_sub39|0)<4;
 if($cmp60){var $retval_0=1;label=19;break;}else{label=17;break;}
 case 17: 
 var $shr63=$4>>>18;
 var $or64=$shr63|240;
 var $conv65=(($or64)&255);
 var $incdec_ptr66=(($8+1)|0);
 HEAP32[(($to_nxt)>>2)]=$incdec_ptr66;
 HEAP8[($8)]=$conv65;
 var $and67=$4>>>12;
 var $shr68=$and67&63;
 var $or69=$shr68|128;
 var $conv70=(($or69)&255);
 var $11=HEAP32[(($to_nxt)>>2)];
 var $incdec_ptr71=(($11+1)|0);
 HEAP32[(($to_nxt)>>2)]=$incdec_ptr71;
 HEAP8[($11)]=$conv70;
 var $and72=$4>>>6;
 var $shr73=$and72&63;
 var $or74=$shr73|128;
 var $conv75=(($or74)&255);
 var $12=HEAP32[(($to_nxt)>>2)];
 var $incdec_ptr76=(($12+1)|0);
 HEAP32[(($to_nxt)>>2)]=$incdec_ptr76;
 HEAP8[($12)]=$conv75;
 var $and77=$4&63;
 var $or78=$and77|128;
 var $conv79=(($or78)&255);
 var $13=HEAP32[(($to_nxt)>>2)];
 var $incdec_ptr80=(($13+1)|0);
 HEAP32[(($to_nxt)>>2)]=$incdec_ptr80;
 HEAP8[($13)]=$conv79;
 label=18;break;
 case 18: 
 var $14=HEAP32[(($frm_nxt)>>2)];
 var $incdec_ptr84=(($14+4)|0);
 HEAP32[(($frm_nxt)>>2)]=$incdec_ptr84;
 var $cmp5=($incdec_ptr84>>>0)<($frm_end>>>0);
 if($cmp5){var $3=$incdec_ptr84;label=6;break;}else{var $retval_0=0;label=19;break;}
 case 19: 
 var $retval_0;
 return $retval_0;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_($this,$0,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+16)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 var $_frm_nxt=sp;
 var $_to_nxt=(sp)+(8);
 HEAP32[(($_frm_nxt)>>2)]=$frm;
 HEAP32[(($_to_nxt)>>2)]=$to;
 var $call=__ZNSt3__1L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$_frm_nxt,$to,$to_end,$_to_nxt,1114111,0);
 var $1=HEAP32[(($_frm_nxt)>>2)];
 var $sub_ptr_lhs_cast=$1;
 var $sub_ptr_rhs_cast=$frm;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $add_ptr=(($frm+$sub_ptr_sub)|0);
 HEAP32[(($frm_nxt)>>2)]=$add_ptr;
 var $2=HEAP32[(($_to_nxt)>>2)];
 var $sub_ptr_lhs_cast2=$2;
 var $sub_ptr_rhs_cast3=$to;
 var $sub_ptr_sub4=((($sub_ptr_lhs_cast2)-($sub_ptr_rhs_cast3))|0);
 var $sub_ptr_div=$sub_ptr_sub4>>2;
 var $add_ptr5=(($to+($sub_ptr_div<<2))|0);
 HEAP32[(($to_nxt)>>2)]=$add_ptr5;
 STACKTOP=sp;return $call;
}
function __ZNSt3__1L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt,$Maxcode,$mode){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 HEAP32[(($frm_nxt)>>2)]=$frm;
 HEAP32[(($to_nxt)>>2)]=$to;
 var $and=$mode&4;
 var $tobool=($and|0)==0;
 var $_pre63=HEAP32[(($frm_nxt)>>2)];
 if($tobool){var $3=$_pre63;label=7;break;}else{label=2;break;}
 case 2: 
 var $sub_ptr_lhs_cast=$frm_end;
 var $sub_ptr_rhs_cast=$_pre63;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $cmp=($sub_ptr_sub|0)>2;
 if($cmp){label=3;break;}else{var $3=$_pre63;label=7;break;}
 case 3: 
 var $0=HEAP8[($_pre63)];
 var $cmp1=(($0<<24)>>24)==-17;
 if($cmp1){label=4;break;}else{var $3=$_pre63;label=7;break;}
 case 4: 
 var $arrayidx3=(($_pre63+1)|0);
 var $1=HEAP8[($arrayidx3)];
 var $cmp5=(($1<<24)>>24)==-69;
 if($cmp5){label=5;break;}else{var $3=$_pre63;label=7;break;}
 case 5: 
 var $arrayidx7=(($_pre63+2)|0);
 var $2=HEAP8[($arrayidx7)];
 var $cmp9=(($2<<24)>>24)==-65;
 if($cmp9){label=6;break;}else{var $3=$_pre63;label=7;break;}
 case 6: 
 var $add_ptr=(($_pre63+3)|0);
 HEAP32[(($frm_nxt)>>2)]=$add_ptr;
 var $3=$add_ptr;label=7;break;
 case 7: 
 var $3;
 var $cmp1260=($3>>>0)<($frm_end>>>0);
 if($cmp1260){label=8;break;}else{var $20=$3;label=39;break;}
 case 8: 
 var $sub_ptr_lhs_cast29=$frm_end;
 var $_pre=HEAP32[(($to_nxt)>>2)];
 var $5=$_pre;var $4=$3;label=9;break;
 case 9: 
 var $4;
 var $5;
 var $cmp13=($5>>>0)<($to_end>>>0);
 if($cmp13){label=10;break;}else{var $20=$4;label=39;break;}
 case 10: 
 var $6=HEAP8[($4)];
 var $conv14=($6&255);
 var $cmp15=(($6<<24)>>24)>-1;
 if($cmp15){label=11;break;}else{label=13;break;}
 case 11: 
 var $cmp18=($conv14>>>0)>($Maxcode>>>0);
 if($cmp18){var $retval_0=2;label=40;break;}else{label=12;break;}
 case 12: 
 HEAP32[(($5)>>2)]=$conv14;
 var $7=HEAP32[(($frm_nxt)>>2)];
 var $incdec_ptr=(($7+1)|0);
 HEAP32[(($frm_nxt)>>2)]=$incdec_ptr;
 label=38;break;
 case 13: 
 var $cmp23=($6&255)<194;
 if($cmp23){var $retval_0=2;label=40;break;}else{label=14;break;}
 case 14: 
 var $cmp27=($6&255)<224;
 if($cmp27){label=15;break;}else{label=19;break;}
 case 15: 
 var $sub_ptr_rhs_cast30=$4;
 var $sub_ptr_sub31=((($sub_ptr_lhs_cast29)-($sub_ptr_rhs_cast30))|0);
 var $cmp32=($sub_ptr_sub31|0)<2;
 if($cmp32){var $retval_0=1;label=40;break;}else{label=16;break;}
 case 16: 
 var $arrayidx35=(($4+1)|0);
 var $8=HEAP8[($arrayidx35)];
 var $conv36=($8&255);
 var $and37=$conv36&192;
 var $cmp38=($and37|0)==128;
 if($cmp38){label=17;break;}else{var $retval_0=2;label=40;break;}
 case 17: 
 var $and42=$conv14<<6;
 var $shl=$and42&1984;
 var $and44=$conv36&63;
 var $or=$and44|$shl;
 var $cmp45=($or>>>0)>($Maxcode>>>0);
 if($cmp45){var $retval_0=2;label=40;break;}else{label=18;break;}
 case 18: 
 HEAP32[(($5)>>2)]=$or;
 var $9=HEAP32[(($frm_nxt)>>2)];
 var $add_ptr48=(($9+2)|0);
 HEAP32[(($frm_nxt)>>2)]=$add_ptr48;
 label=38;break;
 case 19: 
 var $cmp51=($6&255)<240;
 if($cmp51){label=20;break;}else{label=28;break;}
 case 20: 
 var $sub_ptr_rhs_cast54=$4;
 var $sub_ptr_sub55=((($sub_ptr_lhs_cast29)-($sub_ptr_rhs_cast54))|0);
 var $cmp56=($sub_ptr_sub55|0)<3;
 if($cmp56){var $retval_0=1;label=40;break;}else{label=21;break;}
 case 21: 
 var $arrayidx60=(($4+1)|0);
 var $10=HEAP8[($arrayidx60)];
 var $arrayidx61=(($4+2)|0);
 var $11=HEAP8[($arrayidx61)];
 if(($conv14|0)==224){ label=22;break;}else if(($conv14|0)==237){ label=23;break;}else{label=24;break;}
 case 22: 
 var $and64=$10&-32;
 var $cmp65=(($and64<<24)>>24)==-96;
 if($cmp65){label=25;break;}else{var $retval_0=2;label=40;break;}
 case 23: 
 var $and70=$10&-32;
 var $cmp71=(($and70<<24)>>24)==-128;
 if($cmp71){label=25;break;}else{var $retval_0=2;label=40;break;}
 case 24: 
 var $and75=$10&-64;
 var $cmp76=(($and75<<24)>>24)==-128;
 if($cmp76){label=25;break;}else{var $retval_0=2;label=40;break;}
 case 25: 
 var $conv79=($11&255);
 var $and80=$conv79&192;
 var $cmp81=($and80|0)==128;
 if($cmp81){label=26;break;}else{var $retval_0=2;label=40;break;}
 case 26: 
 var $and86=$conv14<<12;
 var $shl87=$and86&61440;
 var $conv88=($10&255);
 var $and89=$conv88<<6;
 var $shl90=$and89&4032;
 var $or91=$shl90|$shl87;
 var $and93=$conv79&63;
 var $or94=$or91|$and93;
 var $cmp95=($or94>>>0)>($Maxcode>>>0);
 if($cmp95){var $retval_0=2;label=40;break;}else{label=27;break;}
 case 27: 
 HEAP32[(($5)>>2)]=$or94;
 var $12=HEAP32[(($frm_nxt)>>2)];
 var $add_ptr98=(($12+3)|0);
 HEAP32[(($frm_nxt)>>2)]=$add_ptr98;
 label=38;break;
 case 28: 
 var $cmp101=($6&255)<245;
 if($cmp101){label=29;break;}else{var $retval_0=2;label=40;break;}
 case 29: 
 var $sub_ptr_rhs_cast104=$4;
 var $sub_ptr_sub105=((($sub_ptr_lhs_cast29)-($sub_ptr_rhs_cast104))|0);
 var $cmp106=($sub_ptr_sub105|0)<4;
 if($cmp106){var $retval_0=1;label=40;break;}else{label=30;break;}
 case 30: 
 var $arrayidx110=(($4+1)|0);
 var $13=HEAP8[($arrayidx110)];
 var $arrayidx112=(($4+2)|0);
 var $14=HEAP8[($arrayidx112)];
 var $arrayidx113=(($4+3)|0);
 var $15=HEAP8[($arrayidx113)];
 if(($conv14|0)==240){ label=31;break;}else if(($conv14|0)==244){ label=32;break;}else{label=33;break;}
 case 31: 
 var $_off=((($13)+(112))&255);
 var $16=($_off&255)<48;
 if($16){label=34;break;}else{var $retval_0=2;label=40;break;}
 case 32: 
 var $and125=$13&-16;
 var $cmp126=(($and125<<24)>>24)==-128;
 if($cmp126){label=34;break;}else{var $retval_0=2;label=40;break;}
 case 33: 
 var $and131=$13&-64;
 var $cmp132=(($and131<<24)>>24)==-128;
 if($cmp132){label=34;break;}else{var $retval_0=2;label=40;break;}
 case 34: 
 var $conv136=($14&255);
 var $and137=$conv136&192;
 var $cmp138=($and137|0)==128;
 if($cmp138){label=35;break;}else{var $retval_0=2;label=40;break;}
 case 35: 
 var $conv139=($15&255);
 var $and140=$conv139&192;
 var $cmp141=($and140|0)==128;
 if($cmp141){label=36;break;}else{var $retval_0=2;label=40;break;}
 case 36: 
 var $and146=$conv14<<18;
 var $shl147=$and146&1835008;
 var $conv148=($13&255);
 var $and149=$conv148<<12;
 var $shl150=$and149&258048;
 var $or151=$shl150|$shl147;
 var $and153=$conv136<<6;
 var $shl154=$and153&4032;
 var $or155=$or151|$shl154;
 var $and157=$conv139&63;
 var $or158=$or155|$and157;
 var $cmp159=($or158>>>0)>($Maxcode>>>0);
 if($cmp159){var $retval_0=2;label=40;break;}else{label=37;break;}
 case 37: 
 HEAP32[(($5)>>2)]=$or158;
 var $17=HEAP32[(($frm_nxt)>>2)];
 var $add_ptr162=(($17+4)|0);
 HEAP32[(($frm_nxt)>>2)]=$add_ptr162;
 label=38;break;
 case 38: 
 var $18=HEAP32[(($to_nxt)>>2)];
 var $incdec_ptr169=(($18+4)|0);
 HEAP32[(($to_nxt)>>2)]=$incdec_ptr169;
 var $19=HEAP32[(($frm_nxt)>>2)];
 var $cmp12=($19>>>0)<($frm_end>>>0);
 if($cmp12){var $5=$incdec_ptr169;var $4=$19;label=9;break;}else{var $20=$19;label=39;break;}
 case 39: 
 var $20;
 var $cmp170=($20>>>0)<($frm_end>>>0);
 var $cond=($cmp170&1);
 var $retval_0=$cond;label=40;break;
 case 40: 
 var $retval_0;
 return $retval_0;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this,$0,$to,$1,$to_nxt){
 var label=0;
 HEAP32[(($to_nxt)>>2)]=$to;
 return 3;
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE11do_encodingEv($this){
 var label=0;
 return 0;
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE16do_always_noconvEv($this){
 var label=0;
 return 0;
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_j($this,$0,$frm,$frm_end,$mx){
 var label=0;
 var $call=__ZNSt3__1L19utf8_to_ucs4_lengthEPKhS1_jmNS_12codecvt_modeE($frm,$frm_end,$mx,1114111,0);
 return $call;
}
function __ZNSt3__1L19utf8_to_ucs4_lengthEPKhS1_jmNS_12codecvt_modeE($frm,$frm_end,$mx,$Maxcode,$mode){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $and=$mode&4;
 var $tobool=($and|0)==0;
 if($tobool){var $frm_nxt_1_ph=$frm;label=6;break;}else{label=2;break;}
 case 2: 
 var $sub_ptr_lhs_cast=$frm_end;
 var $sub_ptr_rhs_cast=$frm;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $cmp=($sub_ptr_sub|0)>2;
 if($cmp){label=3;break;}else{var $frm_nxt_1_ph=$frm;label=6;break;}
 case 3: 
 var $0=HEAP8[($frm)];
 var $cmp1=(($0<<24)>>24)==-17;
 if($cmp1){label=4;break;}else{var $frm_nxt_1_ph=$frm;label=6;break;}
 case 4: 
 var $arrayidx3=(($frm+1)|0);
 var $1=HEAP8[($arrayidx3)];
 var $cmp5=(($1<<24)>>24)==-69;
 if($cmp5){label=5;break;}else{var $frm_nxt_1_ph=$frm;label=6;break;}
 case 5: 
 var $arrayidx7=(($frm+2)|0);
 var $2=HEAP8[($arrayidx7)];
 var $cmp9=(($2<<24)>>24)==-65;
 var $add_ptr=(($frm+3)|0);
 var $add_ptr_frm=($cmp9?$add_ptr:$frm);
 var $frm_nxt_1_ph=$add_ptr_frm;label=6;break;
 case 6: 
 var $frm_nxt_1_ph;
 var $cmp1273=($frm_nxt_1_ph>>>0)<($frm_end>>>0);
 var $cmp1374=($mx|0)!=0;
 var $or_cond75=$cmp1273&$cmp1374;
 if($or_cond75){label=7;break;}else{var $frm_nxt_1_lcssa=$frm_nxt_1_ph;label=44;break;}
 case 7: 
 var $sub_ptr_lhs_cast28=$frm_end;
 var $nchar32_t_076=1;var $frm_nxt_177=$frm_nxt_1_ph;label=8;break;
 case 8: 
 var $frm_nxt_177;
 var $nchar32_t_076;
 var $3=HEAP8[($frm_nxt_177)];
 var $conv14=($3&255);
 var $cmp15=(($3<<24)>>24)>-1;
 if($cmp15){label=9;break;}else{label=11;break;}
 case 9: 
 var $cmp18=($conv14>>>0)>($Maxcode>>>0);
 if($cmp18){var $frm_nxt_1_lcssa=$frm_nxt_177;label=44;break;}else{label=10;break;}
 case 10: 
 var $incdec_ptr=(($frm_nxt_177+1)|0);
 var $frm_nxt_2=$incdec_ptr;label=42;break;
 case 11: 
 var $cmp22=($3&255)<194;
 if($cmp22){var $frm_nxt_1_lcssa=$frm_nxt_177;label=44;break;}else{label=12;break;}
 case 12: 
 var $cmp26=($3&255)<224;
 if($cmp26){label=13;break;}else{label=17;break;}
 case 13: 
 var $sub_ptr_rhs_cast29=$frm_nxt_177;
 var $sub_ptr_sub30=((($sub_ptr_lhs_cast28)-($sub_ptr_rhs_cast29))|0);
 var $cmp31=($sub_ptr_sub30|0)<2;
 if($cmp31){var $frm_nxt_1_lcssa=$frm_nxt_177;label=44;break;}else{label=14;break;}
 case 14: 
 var $arrayidx32=(($frm_nxt_177+1)|0);
 var $4=HEAP8[($arrayidx32)];
 var $conv33=($4&255);
 var $and34=$conv33&192;
 var $cmp35=($and34|0)==128;
 if($cmp35){label=15;break;}else{var $frm_nxt_1_lcssa=$frm_nxt_177;label=44;break;}
 case 15: 
 var $and39=$conv14<<6;
 var $shl=$and39&1984;
 var $and42=$conv33&63;
 var $or=$and42|$shl;
 var $cmp43=($or>>>0)>($Maxcode>>>0);
 if($cmp43){var $frm_nxt_1_lcssa=$frm_nxt_177;label=44;break;}else{label=16;break;}
 case 16: 
 var $add_ptr46=(($frm_nxt_177+2)|0);
 var $frm_nxt_2=$add_ptr46;label=42;break;
 case 17: 
 var $cmp49=($3&255)<240;
 if($cmp49){label=18;break;}else{label=29;break;}
 case 18: 
 var $sub_ptr_rhs_cast52=$frm_nxt_177;
 var $sub_ptr_sub53=((($sub_ptr_lhs_cast28)-($sub_ptr_rhs_cast52))|0);
 var $cmp54=($sub_ptr_sub53|0)<3;
 if($cmp54){var $frm_nxt_1_lcssa=$frm_nxt_177;label=44;break;}else{label=19;break;}
 case 19: 
 var $arrayidx57=(($frm_nxt_177+1)|0);
 var $5=HEAP8[($arrayidx57)];
 var $arrayidx58=(($frm_nxt_177+2)|0);
 var $6=HEAP8[($arrayidx58)];
 if(($conv14|0)==224){ label=20;break;}else if(($conv14|0)==237){ label=22;break;}else{label=24;break;}
 case 20: 
 var $and61=$5&-32;
 var $cmp62=(($and61<<24)>>24)==-96;
 if($cmp62){label=26;break;}else{label=21;break;}
 case 21: 
 var $sub_ptr_rhs_cast65=$frm;
 var $sub_ptr_sub66=((($sub_ptr_rhs_cast52)-($sub_ptr_rhs_cast65))|0);
 var $retval_0=$sub_ptr_sub66;label=45;break;
 case 22: 
 var $and70=$5&-32;
 var $cmp71=(($and70<<24)>>24)==-128;
 if($cmp71){label=26;break;}else{label=23;break;}
 case 23: 
 var $sub_ptr_rhs_cast74=$frm;
 var $sub_ptr_sub75=((($sub_ptr_rhs_cast52)-($sub_ptr_rhs_cast74))|0);
 var $retval_0=$sub_ptr_sub75;label=45;break;
 case 24: 
 var $and78=$5&-64;
 var $cmp79=(($and78<<24)>>24)==-128;
 if($cmp79){label=26;break;}else{label=25;break;}
 case 25: 
 var $sub_ptr_rhs_cast82=$frm;
 var $sub_ptr_sub83=((($sub_ptr_rhs_cast52)-($sub_ptr_rhs_cast82))|0);
 var $retval_0=$sub_ptr_sub83;label=45;break;
 case 26: 
 var $conv85=($6&255);
 var $and86=$conv85&192;
 var $cmp87=($and86|0)==128;
 if($cmp87){label=27;break;}else{var $frm_nxt_1_lcssa=$frm_nxt_177;label=44;break;}
 case 27: 
 var $and91=$conv14<<12;
 var $shl92=$and91&61440;
 var $conv93=($5&255);
 var $and94=$conv93<<6;
 var $shl95=$and94&4032;
 var $or96=$shl95|$shl92;
 var $and98=$conv85&63;
 var $or99=$or96|$and98;
 var $cmp100=($or99>>>0)>($Maxcode>>>0);
 if($cmp100){var $frm_nxt_1_lcssa=$frm_nxt_177;label=44;break;}else{label=28;break;}
 case 28: 
 var $add_ptr103=(($frm_nxt_177+3)|0);
 var $frm_nxt_2=$add_ptr103;label=42;break;
 case 29: 
 var $cmp106=($3&255)<245;
 if($cmp106){label=30;break;}else{var $frm_nxt_1_lcssa=$frm_nxt_177;label=44;break;}
 case 30: 
 var $sub_ptr_rhs_cast109=$frm_nxt_177;
 var $sub_ptr_sub110=((($sub_ptr_lhs_cast28)-($sub_ptr_rhs_cast109))|0);
 var $cmp111=($sub_ptr_sub110|0)<4;
 if($cmp111){var $frm_nxt_1_lcssa=$frm_nxt_177;label=44;break;}else{label=31;break;}
 case 31: 
 var $arrayidx115=(($frm_nxt_177+1)|0);
 var $7=HEAP8[($arrayidx115)];
 var $arrayidx117=(($frm_nxt_177+2)|0);
 var $8=HEAP8[($arrayidx117)];
 var $arrayidx118=(($frm_nxt_177+3)|0);
 var $9=HEAP8[($arrayidx118)];
 if(($conv14|0)==240){ label=32;break;}else if(($conv14|0)==244){ label=34;break;}else{label=36;break;}
 case 32: 
 var $_off=((($7)+(112))&255);
 var $10=($_off&255)<48;
 if($10){label=38;break;}else{label=33;break;}
 case 33: 
 var $sub_ptr_rhs_cast128=$frm;
 var $sub_ptr_sub129=((($sub_ptr_rhs_cast109)-($sub_ptr_rhs_cast128))|0);
 var $retval_0=$sub_ptr_sub129;label=45;break;
 case 34: 
 var $and133=$7&-16;
 var $cmp134=(($and133<<24)>>24)==-128;
 if($cmp134){label=38;break;}else{label=35;break;}
 case 35: 
 var $sub_ptr_rhs_cast137=$frm;
 var $sub_ptr_sub138=((($sub_ptr_rhs_cast109)-($sub_ptr_rhs_cast137))|0);
 var $retval_0=$sub_ptr_sub138;label=45;break;
 case 36: 
 var $and142=$7&-64;
 var $cmp143=(($and142<<24)>>24)==-128;
 if($cmp143){label=38;break;}else{label=37;break;}
 case 37: 
 var $sub_ptr_rhs_cast146=$frm;
 var $sub_ptr_sub147=((($sub_ptr_rhs_cast109)-($sub_ptr_rhs_cast146))|0);
 var $retval_0=$sub_ptr_sub147;label=45;break;
 case 38: 
 var $conv150=($8&255);
 var $and151=$conv150&192;
 var $cmp152=($and151|0)==128;
 if($cmp152){label=39;break;}else{var $frm_nxt_1_lcssa=$frm_nxt_177;label=44;break;}
 case 39: 
 var $conv154=($9&255);
 var $and155=$conv154&192;
 var $cmp156=($and155|0)==128;
 if($cmp156){label=40;break;}else{var $frm_nxt_1_lcssa=$frm_nxt_177;label=44;break;}
 case 40: 
 var $and160=$conv14<<18;
 var $shl161=$and160&1835008;
 var $conv162=($7&255);
 var $and163=$conv162<<12;
 var $shl164=$and163&258048;
 var $or165=$shl164|$shl161;
 var $and167=$conv150<<6;
 var $shl168=$and167&4032;
 var $or169=$or165|$shl168;
 var $and171=$conv154&63;
 var $or172=$or169|$and171;
 var $cmp173=($or172>>>0)>($Maxcode>>>0);
 if($cmp173){var $frm_nxt_1_lcssa=$frm_nxt_177;label=44;break;}else{label=41;break;}
 case 41: 
 var $add_ptr176=(($frm_nxt_177+4)|0);
 var $frm_nxt_2=$add_ptr176;label=42;break;
 case 42: 
 var $frm_nxt_2;
 var $cmp12=($frm_nxt_2>>>0)<($frm_end>>>0);
 var $cmp13=($nchar32_t_076>>>0)<($mx>>>0);
 var $or_cond=$cmp12&$cmp13;
 if($or_cond){label=43;break;}else{var $frm_nxt_1_lcssa=$frm_nxt_2;label=44;break;}
 case 43: 
 var $phitmp=((($nchar32_t_076)+(1))|0);
 var $nchar32_t_076=$phitmp;var $frm_nxt_177=$frm_nxt_2;label=8;break;
 case 44: 
 var $frm_nxt_1_lcssa;
 var $sub_ptr_lhs_cast183=$frm_nxt_1_lcssa;
 var $sub_ptr_rhs_cast184=$frm;
 var $sub_ptr_sub185=((($sub_ptr_lhs_cast183)-($sub_ptr_rhs_cast184))|0);
 var $retval_0=$sub_ptr_sub185;label=45;break;
 case 45: 
 var $retval_0;
 return $retval_0;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE13do_max_lengthEv($this){
 var label=0;
 return 4;
}
function __ZNSt3__116__narrow_to_utf8ILj32EED0Ev($this){
 var label=0;
 var $0=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($0);
 var $1=$this;
 __ZdlPv($1);
 return;
}
function __ZNSt3__117__widen_from_utf8ILj32EED0Ev($this){
 var label=0;
 var $0=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($0);
 var $1=$this;
 __ZdlPv($1);
 return;
}
function __ZNSt3__18numpunctIcED0Ev($this){
 var label=0;
 var $0=(($this)|0);
 HEAP32[(($0)>>2)]=4792;
 var $__grouping__i=(($this+12)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping__i);
 var $1=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($1);
 var $2=$this;
 __ZdlPv($2);
 return;
}
function __ZNSt3__18numpunctIcED2Ev($this){
 var label=0;
 var $0=(($this)|0);
 HEAP32[(($0)>>2)]=4792;
 var $__grouping_=(($this+12)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping_);
 var $1=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($1);
 return;
}
function __ZNSt3__18numpunctIwED0Ev($this){
 var label=0;
 var $0=(($this)|0);
 HEAP32[(($0)>>2)]=4744;
 var $__grouping__i=(($this+16)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping__i);
 var $1=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($1);
 var $2=$this;
 __ZdlPv($2);
 return;
}
function __ZNSt3__18numpunctIwED2Ev($this){
 var label=0;
 var $0=(($this)|0);
 HEAP32[(($0)>>2)]=4744;
 var $__grouping_=(($this+16)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($__grouping_);
 var $1=(($this)|0);
 __ZNSt3__114__shared_countD2Ev($1);
 return;
}
function __ZNKSt3__18numpunctIcE16do_decimal_pointEv($this){
 var label=0;
 var $__decimal_point_=(($this+8)|0);
 var $0=HEAP8[($__decimal_point_)];
 return $0;
}
function __ZNKSt3__18numpunctIwE16do_decimal_pointEv($this){
 var label=0;
 var $__decimal_point_=(($this+8)|0);
 var $0=HEAP32[(($__decimal_point_)>>2)];
 return $0;
}
function __ZNKSt3__18numpunctIcE16do_thousands_sepEv($this){
 var label=0;
 var $__thousands_sep_=(($this+9)|0);
 var $0=HEAP8[($__thousands_sep_)];
 return $0;
}
function __ZNKSt3__18numpunctIwE16do_thousands_sepEv($this){
 var label=0;
 var $__thousands_sep_=(($this+12)|0);
 var $0=HEAP32[(($__thousands_sep_)>>2)];
 return $0;
}
function __ZNKSt3__18numpunctIcE11do_groupingEv($agg_result,$this){
 var label=0;
 var $__grouping_=(($this+12)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_($agg_result,$__grouping_);
 return;
}
function __ZNKSt3__18numpunctIwE11do_groupingEv($agg_result,$this){
 var label=0;
 var $__grouping_=(($this+16)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_($agg_result,$__grouping_);
 return;
}
function __ZNKSt3__18numpunctIcE11do_truenameEv($agg_result,$this){
 var label=0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg_result,2344,4);
 return;
}
function __ZNKSt3__18numpunctIwE11do_truenameEv($agg_result,$this){
 var label=0;
 var $call_i_i_i=_wcslen(2152);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj($agg_result,2152,$call_i_i_i);
 return;
}
function __ZNKSt3__18numpunctIcE12do_falsenameEv($agg_result,$this){
 var label=0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg_result,2112,5);
 return;
}
function __ZNKSt3__18numpunctIwE12do_falsenameEv($agg_result,$this){
 var label=0;
 var $call_i_i_i=_wcslen(2064);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj($agg_result,2064,$call_i_i_i);
 return;
}
function __ZNKSt3__120__time_get_c_storageIcE7__weeksEv($this){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $0=HEAP8[(16024)];
 var $guard_uninitialized=(($0<<24)>>24)==0;
 if($guard_uninitialized){label=2;break;}else{label=21;break;}
 case 2: 
 var $1=___cxa_guard_acquire(16024);
 var $tobool=($1|0)==0;
 if($tobool){label=21;break;}else{label=3;break;}
 case 3: 
 var $2=HEAP8[(15912)];
 var $guard_uninitialized_i=(($2<<24)>>24)==0;
 if($guard_uninitialized_i){label=4;break;}else{label=6;break;}
 case 4: 
 var $3=___cxa_guard_acquire(15912);
 var $tobool_i=($3|0)==0;
 if($tobool_i){label=6;break;}else{label=5;break;}
 case 5: 
 _memset(13464, 0, 168)|0;
 var $4=_atexit(808,0,___dso_handle);
 label=6;break;
 case 6: 
 var $call_i19_i1=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(13464,3240) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=7;break; } else { label=22;break; }
 case 7: 
 var $call_i23_i2=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(13476,3232) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=8;break; } else { label=22;break; }
 case 8: 
 var $call_i27_i3=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(13488,3224) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=9;break; } else { label=22;break; }
 case 9: 
 var $call_i31_i4=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(13500,3208) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=10;break; } else { label=22;break; }
 case 10: 
 var $call_i35_i5=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(13512,3192) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=11;break; } else { label=22;break; }
 case 11: 
 var $call_i39_i6=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(13524,3184) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=12;break; } else { label=22;break; }
 case 12: 
 var $call_i43_i7=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(13536,3168) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=13;break; } else { label=22;break; }
 case 13: 
 var $call_i47_i8=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(13548,3160) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=14;break; } else { label=22;break; }
 case 14: 
 var $call_i51_i9=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(13560,3152) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=15;break; } else { label=22;break; }
 case 15: 
 var $call_i55_i10=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(13572,3120) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=16;break; } else { label=22;break; }
 case 16: 
 var $call_i59_i11=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(13584,3112) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=17;break; } else { label=22;break; }
 case 17: 
 var $call_i63_i12=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(13596,3104) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=18;break; } else { label=22;break; }
 case 18: 
 var $call_i67_i13=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(13608,3072) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=19;break; } else { label=22;break; }
 case 19: 
 var $call_i_i14=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(13620,3064) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=20;break; } else { label=22;break; }
 case 20: 
 HEAP32[((14424)>>2)]=13464;
 label=21;break;
 case 21: 
 var $5=HEAP32[((14424)>>2)];
 return $5;
 case 22: 
 var $6$0 = ___cxa_find_matching_catch(-1, -1); var $6$1 = tempRet0;
 ___resumeException($6$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__120__time_get_c_storageIwE7__weeksEv($this){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $0=HEAP8[(15968)];
 var $guard_uninitialized=(($0<<24)>>24)==0;
 if($guard_uninitialized){label=2;break;}else{label=21;break;}
 case 2: 
 var $1=___cxa_guard_acquire(15968);
 var $tobool=($1|0)==0;
 if($tobool){label=21;break;}else{label=3;break;}
 case 3: 
 var $2=HEAP8[(15888)];
 var $guard_uninitialized_i=(($2<<24)>>24)==0;
 if($guard_uninitialized_i){label=4;break;}else{label=6;break;}
 case 4: 
 var $3=___cxa_guard_acquire(15888);
 var $tobool_i=($3|0)==0;
 if($tobool_i){label=6;break;}else{label=5;break;}
 case 5: 
 _memset(12720, 0, 168)|0;
 var $4=_atexit(408,0,___dso_handle);
 label=6;break;
 case 6: 
 var $call_i19_i1=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(12720,3648) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=7;break; } else { label=22;break; }
 case 7: 
 var $call_i23_i2=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(12732,3616) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=8;break; } else { label=22;break; }
 case 8: 
 var $call_i27_i3=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(12744,3584) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=9;break; } else { label=22;break; }
 case 9: 
 var $call_i31_i4=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(12756,3544) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=10;break; } else { label=22;break; }
 case 10: 
 var $call_i35_i5=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(12768,3496) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=11;break; } else { label=22;break; }
 case 11: 
 var $call_i39_i6=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(12780,3464) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=12;break; } else { label=22;break; }
 case 12: 
 var $call_i43_i7=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(12792,3424) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=13;break; } else { label=22;break; }
 case 13: 
 var $call_i47_i8=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(12804,3408) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=14;break; } else { label=22;break; }
 case 14: 
 var $call_i51_i9=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(12816,3352) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=15;break; } else { label=22;break; }
 case 15: 
 var $call_i55_i10=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(12828,3336) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=16;break; } else { label=22;break; }
 case 16: 
 var $call_i59_i11=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(12840,3320) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=17;break; } else { label=22;break; }
 case 17: 
 var $call_i63_i12=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(12852,3304) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=18;break; } else { label=22;break; }
 case 18: 
 var $call_i67_i13=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(12864,3288) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=19;break; } else { label=22;break; }
 case 19: 
 var $call_i_i14=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(12876,3272) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=20;break; } else { label=22;break; }
 case 20: 
 HEAP32[((14336)>>2)]=12720;
 label=21;break;
 case 21: 
 var $5=HEAP32[((14336)>>2)];
 return $5;
 case 22: 
 var $6$0 = ___cxa_find_matching_catch(-1, -1); var $6$1 = tempRet0;
 ___resumeException($6$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__120__time_get_c_storageIcE8__monthsEv($this){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $0=HEAP8[(16016)];
 var $guard_uninitialized=(($0<<24)>>24)==0;
 if($guard_uninitialized){label=2;break;}else{label=31;break;}
 case 2: 
 var $1=___cxa_guard_acquire(16016);
 var $tobool=($1|0)==0;
 if($tobool){label=31;break;}else{label=3;break;}
 case 3: 
 var $2=HEAP8[(15904)];
 var $guard_uninitialized_i=(($2<<24)>>24)==0;
 if($guard_uninitialized_i){label=4;break;}else{label=6;break;}
 case 4: 
 var $3=___cxa_guard_acquire(15904);
 var $tobool_i=($3|0)==0;
 if($tobool_i){label=6;break;}else{label=5;break;}
 case 5: 
 _memset(13176, 0, 288)|0;
 var $4=_atexit(452,0,___dso_handle);
 label=6;break;
 case 6: 
 var $call_i29_i1=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(13176,392) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=7;break; } else { label=32;break; }
 case 7: 
 var $call_i33_i2=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(13188,376) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=8;break; } else { label=32;break; }
 case 8: 
 var $call_i37_i3=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(13200,368) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=9;break; } else { label=32;break; }
 case 9: 
 var $call_i41_i4=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(13212,360) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=10;break; } else { label=32;break; }
 case 10: 
 var $call_i45_i5=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(13224,352) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=11;break; } else { label=32;break; }
 case 11: 
 var $call_i49_i6=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(13236,344) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=12;break; } else { label=32;break; }
 case 12: 
 var $call_i53_i7=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(13248,336) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=13;break; } else { label=32;break; }
 case 13: 
 var $call_i57_i8=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(13260,328) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=14;break; } else { label=32;break; }
 case 14: 
 var $call_i61_i9=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(13272,208) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=15;break; } else { label=32;break; }
 case 15: 
 var $call_i65_i10=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(13284,200) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=16;break; } else { label=32;break; }
 case 16: 
 var $call_i69_i11=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(13296,184) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=17;break; } else { label=32;break; }
 case 17: 
 var $call_i73_i12=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(13308,168) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=18;break; } else { label=32;break; }
 case 18: 
 var $call_i77_i13=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(13320,160) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=19;break; } else { label=32;break; }
 case 19: 
 var $call_i81_i14=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(13332,152) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=20;break; } else { label=32;break; }
 case 20: 
 var $call_i85_i15=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(13344,104) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=21;break; } else { label=32;break; }
 case 21: 
 var $call_i89_i16=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(13356,96) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=22;break; } else { label=32;break; }
 case 22: 
 var $call_i93_i17=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(13368,352) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=23;break; } else { label=32;break; }
 case 23: 
 var $call_i97_i18=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(13380,88) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=24;break; } else { label=32;break; }
 case 24: 
 var $call_i101_i19=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(13392,80) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=25;break; } else { label=32;break; }
 case 25: 
 var $call_i105_i20=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(13404,3712) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=26;break; } else { label=32;break; }
 case 26: 
 var $call_i109_i21=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(13416,3704) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=27;break; } else { label=32;break; }
 case 27: 
 var $call_i113_i22=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(13428,3696) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=28;break; } else { label=32;break; }
 case 28: 
 var $call_i117_i23=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(13440,3688) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=29;break; } else { label=32;break; }
 case 29: 
 var $call_i_i24=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(13452,3680) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=30;break; } else { label=32;break; }
 case 30: 
 HEAP32[((14416)>>2)]=13176;
 label=31;break;
 case 31: 
 var $5=HEAP32[((14416)>>2)];
 return $5;
 case 32: 
 var $6$0 = ___cxa_find_matching_catch(-1, -1); var $6$1 = tempRet0;
 ___resumeException($6$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__120__time_get_c_storageIwE8__monthsEv($this){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $0=HEAP8[(15960)];
 var $guard_uninitialized=(($0<<24)>>24)==0;
 if($guard_uninitialized){label=2;break;}else{label=31;break;}
 case 2: 
 var $1=___cxa_guard_acquire(15960);
 var $tobool=($1|0)==0;
 if($tobool){label=31;break;}else{label=3;break;}
 case 3: 
 var $2=HEAP8[(15880)];
 var $guard_uninitialized_i=(($2<<24)>>24)==0;
 if($guard_uninitialized_i){label=4;break;}else{label=6;break;}
 case 4: 
 var $3=___cxa_guard_acquire(15880);
 var $tobool_i=($3|0)==0;
 if($tobool_i){label=6;break;}else{label=5;break;}
 case 5: 
 _memset(12432, 0, 288)|0;
 var $4=_atexit(346,0,___dso_handle);
 label=6;break;
 case 6: 
 var $call_i29_i1=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(12432,968) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=7;break; } else { label=32;break; }
 case 7: 
 var $call_i33_i2=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(12444,928) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=8;break; } else { label=32;break; }
 case 8: 
 var $call_i37_i3=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(12456,904) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=9;break; } else { label=32;break; }
 case 9: 
 var $call_i41_i4=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(12468,880) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=10;break; } else { label=32;break; }
 case 10: 
 var $call_i45_i5=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(12480,536) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=11;break; } else { label=32;break; }
 case 11: 
 var $call_i49_i6=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(12492,856) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=12;break; } else { label=32;break; }
 case 12: 
 var $call_i53_i7=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(12504,832) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=13;break; } else { label=32;break; }
 case 13: 
 var $call_i57_i8=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(12516,800) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=14;break; } else { label=32;break; }
 case 14: 
 var $call_i61_i9=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(12528,760) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=15;break; } else { label=32;break; }
 case 15: 
 var $call_i65_i10=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(12540,728) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=16;break; } else { label=32;break; }
 case 16: 
 var $call_i69_i11=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(12552,688) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=17;break; } else { label=32;break; }
 case 17: 
 var $call_i73_i12=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(12564,648) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=18;break; } else { label=32;break; }
 case 18: 
 var $call_i77_i13=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(12576,632) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=19;break; } else { label=32;break; }
 case 19: 
 var $call_i81_i14=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(12588,584) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=20;break; } else { label=32;break; }
 case 20: 
 var $call_i85_i15=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(12600,568) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=21;break; } else { label=32;break; }
 case 21: 
 var $call_i89_i16=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(12612,552) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=22;break; } else { label=32;break; }
 case 22: 
 var $call_i93_i17=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(12624,536) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=23;break; } else { label=32;break; }
 case 23: 
 var $call_i97_i18=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(12636,520) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=24;break; } else { label=32;break; }
 case 24: 
 var $call_i101_i19=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(12648,504) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=25;break; } else { label=32;break; }
 case 25: 
 var $call_i105_i20=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(12660,488) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=26;break; } else { label=32;break; }
 case 26: 
 var $call_i109_i21=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(12672,472) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=27;break; } else { label=32;break; }
 case 27: 
 var $call_i113_i22=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(12684,456) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=28;break; } else { label=32;break; }
 case 28: 
 var $call_i117_i23=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(12696,440) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=29;break; } else { label=32;break; }
 case 29: 
 var $call_i_i24=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(12708,416) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=30;break; } else { label=32;break; }
 case 30: 
 HEAP32[((14328)>>2)]=12432;
 label=31;break;
 case 31: 
 var $5=HEAP32[((14328)>>2)];
 return $5;
 case 32: 
 var $6$0 = ___cxa_find_matching_catch(-1, -1); var $6$1 = tempRet0;
 ___resumeException($6$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__120__time_get_c_storageIcE7__am_pmEv($this){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $0=HEAP8[(16032)];
 var $guard_uninitialized=(($0<<24)>>24)==0;
 if($guard_uninitialized){label=2;break;}else{label=9;break;}
 case 2: 
 var $1=___cxa_guard_acquire(16032);
 var $tobool=($1|0)==0;
 if($tobool){label=9;break;}else{label=3;break;}
 case 3: 
 var $2=HEAP8[(15920)];
 var $guard_uninitialized_i=(($2<<24)>>24)==0;
 if($guard_uninitialized_i){label=4;break;}else{label=6;break;}
 case 4: 
 var $3=___cxa_guard_acquire(15920);
 var $tobool_i=($3|0)==0;
 if($tobool_i){label=6;break;}else{label=5;break;}
 case 5: 
 _memset(13632, 0, 288)|0;
 var $4=_atexit(342,0,___dso_handle);
 label=6;break;
 case 6: 
 var $call_i7_i1=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(13632,1008) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=7;break; } else { label=10;break; }
 case 7: 
 var $call_i_i2=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(13644,1000) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=8;break; } else { label=10;break; }
 case 8: 
 HEAP32[((14432)>>2)]=13632;
 label=9;break;
 case 9: 
 var $5=HEAP32[((14432)>>2)];
 return $5;
 case 10: 
 var $6$0 = ___cxa_find_matching_catch(-1, -1); var $6$1 = tempRet0;
 ___resumeException($6$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__120__time_get_c_storageIwE7__am_pmEv($this){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $0=HEAP8[(15976)];
 var $guard_uninitialized=(($0<<24)>>24)==0;
 if($guard_uninitialized){label=2;break;}else{label=9;break;}
 case 2: 
 var $1=___cxa_guard_acquire(15976);
 var $tobool=($1|0)==0;
 if($tobool){label=9;break;}else{label=3;break;}
 case 3: 
 var $2=HEAP8[(15896)];
 var $guard_uninitialized_i=(($2<<24)>>24)==0;
 if($guard_uninitialized_i){label=4;break;}else{label=6;break;}
 case 4: 
 var $3=___cxa_guard_acquire(15896);
 var $tobool_i=($3|0)==0;
 if($tobool_i){label=6;break;}else{label=5;break;}
 case 5: 
 _memset(12888, 0, 288)|0;
 var $4=_atexit(764,0,___dso_handle);
 label=6;break;
 case 6: 
 var $call_i7_i1=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(12888,1032) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=7;break; } else { label=10;break; }
 case 7: 
 var $call_i_i2=(function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(12900,1016) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=8;break; } else { label=10;break; }
 case 8: 
 HEAP32[((14344)>>2)]=12888;
 label=9;break;
 case 9: 
 var $5=HEAP32[((14344)>>2)];
 return $5;
 case 10: 
 var $6$0 = ___cxa_find_matching_catch(-1, -1); var $6$1 = tempRet0;
 ___resumeException($6$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__120__time_get_c_storageIcE3__xEv($this){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $0=HEAP8[(16040)];
 var $guard_uninitialized=(($0<<24)>>24)==0;
 if($guard_uninitialized){label=2;break;}else{label=5;break;}
 case 2: 
 var $1=___cxa_guard_acquire(16040);
 var $tobool=($1|0)==0;
 if($tobool){label=5;break;}else{label=3;break;}
 case 3: 
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(14440,1832,8) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=4;break; } else { label=6;break; }
 case 4: 
 var $2=_atexit((800),14440,___dso_handle);
 label=5;break;
 case 5: 
 return 14440;
 case 6: 
 var $3$0 = ___cxa_find_matching_catch(-1, -1); var $3$1 = tempRet0;
 ___resumeException($3$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__120__time_get_c_storageIwE3__xEv($this){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $0=HEAP8[(15984)];
 var $guard_uninitialized=(($0<<24)>>24)==0;
 if($guard_uninitialized){label=2;break;}else{label=6;break;}
 case 2: 
 var $1=___cxa_guard_acquire(15984);
 var $tobool=($1|0)==0;
 if($tobool){label=6;break;}else{label=3;break;}
 case 3: 
 var $call_i_i_i3=(function() { try { __THREW__ = 0; return _wcslen(1776) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=4;break; } else { label=7;break; }
 case 4: 
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj(14352,1776,$call_i_i_i3) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=5;break; } else { label=7;break; }
 case 5: 
 var $2=_atexit((534),14352,___dso_handle);
 label=6;break;
 case 6: 
 return 14352;
 case 7: 
 var $3$0 = ___cxa_find_matching_catch(-1, -1); var $3$1 = tempRet0;
 ___resumeException($3$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__120__time_get_c_storageIcE3__XEv($this){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $0=HEAP8[(16064)];
 var $guard_uninitialized=(($0<<24)>>24)==0;
 if($guard_uninitialized){label=2;break;}else{label=5;break;}
 case 2: 
 var $1=___cxa_guard_acquire(16064);
 var $tobool=($1|0)==0;
 if($tobool){label=5;break;}else{label=3;break;}
 case 3: 
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(14488,1656,8) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=4;break; } else { label=6;break; }
 case 4: 
 var $2=_atexit((800),14488,___dso_handle);
 label=5;break;
 case 5: 
 return 14488;
 case 6: 
 var $3$0 = ___cxa_find_matching_catch(-1, -1); var $3$1 = tempRet0;
 ___resumeException($3$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__120__time_get_c_storageIwE3__XEv($this){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $0=HEAP8[(16008)];
 var $guard_uninitialized=(($0<<24)>>24)==0;
 if($guard_uninitialized){label=2;break;}else{label=6;break;}
 case 2: 
 var $1=___cxa_guard_acquire(16008);
 var $tobool=($1|0)==0;
 if($tobool){label=6;break;}else{label=3;break;}
 case 3: 
 var $call_i_i_i3=(function() { try { __THREW__ = 0; return _wcslen(1600) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=4;break; } else { label=7;break; }
 case 4: 
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj(14400,1600,$call_i_i_i3) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=5;break; } else { label=7;break; }
 case 5: 
 var $2=_atexit((534),14400,___dso_handle);
 label=6;break;
 case 6: 
 return 14400;
 case 7: 
 var $3$0 = ___cxa_find_matching_catch(-1, -1); var $3$1 = tempRet0;
 ___resumeException($3$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__120__time_get_c_storageIcE3__cEv($this){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $0=HEAP8[(16056)];
 var $guard_uninitialized=(($0<<24)>>24)==0;
 if($guard_uninitialized){label=2;break;}else{label=5;break;}
 case 2: 
 var $1=___cxa_guard_acquire(16056);
 var $tobool=($1|0)==0;
 if($tobool){label=5;break;}else{label=3;break;}
 case 3: 
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(14472,1552,20) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=4;break; } else { label=6;break; }
 case 4: 
 var $2=_atexit((800),14472,___dso_handle);
 label=5;break;
 case 5: 
 return 14472;
 case 6: 
 var $3$0 = ___cxa_find_matching_catch(-1, -1); var $3$1 = tempRet0;
 ___resumeException($3$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__120__time_get_c_storageIwE3__cEv($this){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $0=HEAP8[(16000)];
 var $guard_uninitialized=(($0<<24)>>24)==0;
 if($guard_uninitialized){label=2;break;}else{label=6;break;}
 case 2: 
 var $1=___cxa_guard_acquire(16000);
 var $tobool=($1|0)==0;
 if($tobool){label=6;break;}else{label=3;break;}
 case 3: 
 var $call_i_i_i3=(function() { try { __THREW__ = 0; return _wcslen(1432) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=4;break; } else { label=7;break; }
 case 4: 
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj(14384,1432,$call_i_i_i3) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=5;break; } else { label=7;break; }
 case 5: 
 var $2=_atexit((534),14384,___dso_handle);
 label=6;break;
 case 6: 
 return 14384;
 case 7: 
 var $3$0 = ___cxa_find_matching_catch(-1, -1); var $3$1 = tempRet0;
 ___resumeException($3$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__120__time_get_c_storageIcE3__rEv($this){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $0=HEAP8[(16048)];
 var $guard_uninitialized=(($0<<24)>>24)==0;
 if($guard_uninitialized){label=2;break;}else{label=5;break;}
 case 2: 
 var $1=___cxa_guard_acquire(16048);
 var $tobool=($1|0)==0;
 if($tobool){label=5;break;}else{label=3;break;}
 case 3: 
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(14456,1408,11) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=4;break; } else { label=6;break; }
 case 4: 
 var $2=_atexit((800),14456,___dso_handle);
 label=5;break;
 case 5: 
 return 14456;
 case 6: 
 var $3$0 = ___cxa_find_matching_catch(-1, -1); var $3$1 = tempRet0;
 ___resumeException($3$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNKSt3__120__time_get_c_storageIwE3__rEv($this){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $0=HEAP8[(15992)];
 var $guard_uninitialized=(($0<<24)>>24)==0;
 if($guard_uninitialized){label=2;break;}else{label=6;break;}
 case 2: 
 var $1=___cxa_guard_acquire(15992);
 var $tobool=($1|0)==0;
 if($tobool){label=6;break;}else{label=3;break;}
 case 3: 
 var $call_i_i_i3=(function() { try { __THREW__ = 0; return _wcslen(1312) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=4;break; } else { label=7;break; }
 case 4: 
 (function() { try { __THREW__ = 0; return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj(14368,1312,$call_i_i_i3) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=5;break; } else { label=7;break; }
 case 5: 
 var $2=_atexit((534),14368,___dso_handle);
 label=6;break;
 case 6: 
 return 14368;
 case 7: 
 var $3$0 = ___cxa_find_matching_catch(-1, -1); var $3$1 = tempRet0;
 ___resumeException($3$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__115__num_get_floatIeEET_PKcS3_Rj($__a,$__a_end,$__err){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__p2=sp;
 var $cmp=($__a|0)==($__a_end|0);
 if($cmp){label=13;break;}else{label=2;break;}
 case 2: 
 var $call=___errno_location();
 var $0=HEAP32[(($call)>>2)];
 HEAP32[(($call)>>2)]=0;
 var $1=HEAP8[(15944)];
 var $guard_uninitialized_i=(($1<<24)>>24)==0;
 if($guard_uninitialized_i){label=3;break;}else{label=7;break;}
 case 3: 
 var $2=___cxa_guard_acquire(15944);
 var $tobool_i=($2|0)==0;
 if($tobool_i){label=7;break;}else{label=4;break;}
 case 4: 
 var $call_i=(function() { try { __THREW__ = 0; return _newlocale(2147483647,2960,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=5;break; } else { label=6;break; }
 case 5: 
 HEAP32[((13952)>>2)]=$call_i;
 label=7;break;
 case 6: 
 var $3$0 = ___cxa_find_matching_catch(-1, -1); var $3$1 = tempRet0;
 ___resumeException($3$0)
 case 7: 
 var $4=HEAP32[((13952)>>2)];
 var $call3=_strtold_l($__a,$__p2,$4);
 var $5=HEAP32[(($call)>>2)];
 var $cmp5=($5|0)==0;
 if($cmp5){label=8;break;}else{label=9;break;}
 case 8: 
 HEAP32[(($call)>>2)]=$0;
 label=9;break;
 case 9: 
 var $6=HEAP32[(($__p2)>>2)];
 var $cmp8=($6|0)==($__a_end|0);
 if($cmp8){label=11;break;}else{label=10;break;}
 case 10: 
 HEAP32[(($__err)>>2)]=4;
 var $retval_0=0;label=14;break;
 case 11: 
 var $cmp10=($5|0)==34;
 if($cmp10){label=12;break;}else{var $retval_0=$call3;label=14;break;}
 case 12: 
 HEAP32[(($__err)>>2)]=4;
 var $retval_0=$call3;label=14;break;
 case 13: 
 HEAP32[(($__err)>>2)]=4;
 var $retval_0=0;label=14;break;
 case 14: 
 var $retval_0;
 STACKTOP=sp;return $retval_0;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__115__num_get_floatIdEET_PKcS3_Rj($__a,$__a_end,$__err){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__p2=sp;
 var $cmp=($__a|0)==($__a_end|0);
 if($cmp){label=13;break;}else{label=2;break;}
 case 2: 
 var $call=___errno_location();
 var $0=HEAP32[(($call)>>2)];
 HEAP32[(($call)>>2)]=0;
 var $1=HEAP8[(15944)];
 var $guard_uninitialized_i=(($1<<24)>>24)==0;
 if($guard_uninitialized_i){label=3;break;}else{label=7;break;}
 case 3: 
 var $2=___cxa_guard_acquire(15944);
 var $tobool_i=($2|0)==0;
 if($tobool_i){label=7;break;}else{label=4;break;}
 case 4: 
 var $call_i=(function() { try { __THREW__ = 0; return _newlocale(2147483647,2960,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=5;break; } else { label=6;break; }
 case 5: 
 HEAP32[((13952)>>2)]=$call_i;
 label=7;break;
 case 6: 
 var $3$0 = ___cxa_find_matching_catch(-1, -1); var $3$1 = tempRet0;
 ___resumeException($3$0)
 case 7: 
 var $4=HEAP32[((13952)>>2)];
 var $call3=_strtold_l($__a,$__p2,$4);
 var $5=HEAP32[(($call)>>2)];
 var $cmp5=($5|0)==0;
 if($cmp5){label=8;break;}else{label=9;break;}
 case 8: 
 HEAP32[(($call)>>2)]=$0;
 label=9;break;
 case 9: 
 var $6=HEAP32[(($__p2)>>2)];
 var $cmp8=($6|0)==($__a_end|0);
 if($cmp8){label=11;break;}else{label=10;break;}
 case 10: 
 HEAP32[(($__err)>>2)]=4;
 var $retval_0=0;label=14;break;
 case 11: 
 var $cmp10=($5|0)==34;
 if($cmp10){label=12;break;}else{var $retval_0=$call3;label=14;break;}
 case 12: 
 HEAP32[(($__err)>>2)]=4;
 var $retval_0=$call3;label=14;break;
 case 13: 
 HEAP32[(($__err)>>2)]=4;
 var $retval_0=0;label=14;break;
 case 14: 
 var $retval_0;
 STACKTOP=sp;return $retval_0;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__115__num_get_floatIfEET_PKcS3_Rj($__a,$__a_end,$__err){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__p2=sp;
 var $cmp=($__a|0)==($__a_end|0);
 if($cmp){label=14;break;}else{label=2;break;}
 case 2: 
 var $call=___errno_location();
 var $0=HEAP32[(($call)>>2)];
 HEAP32[(($call)>>2)]=0;
 var $1=HEAP8[(15944)];
 var $guard_uninitialized_i=(($1<<24)>>24)==0;
 if($guard_uninitialized_i){label=3;break;}else{label=7;break;}
 case 3: 
 var $2=___cxa_guard_acquire(15944);
 var $tobool_i=($2|0)==0;
 if($tobool_i){label=7;break;}else{label=4;break;}
 case 4: 
 var $call_i=(function() { try { __THREW__ = 0; return _newlocale(2147483647,2960,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=5;break; } else { label=6;break; }
 case 5: 
 HEAP32[((13952)>>2)]=$call_i;
 label=7;break;
 case 6: 
 var $3$0 = ___cxa_find_matching_catch(-1, -1); var $3$1 = tempRet0;
 ___resumeException($3$0)
 case 7: 
 var $4=HEAP32[((13952)>>2)];
 var $call3=_strtold_l($__a,$__p2,$4);
 var $5=HEAP32[(($call)>>2)];
 var $cmp5=($5|0)==0;
 if($cmp5){label=8;break;}else{label=9;break;}
 case 8: 
 HEAP32[(($call)>>2)]=$0;
 label=9;break;
 case 9: 
 var $6=HEAP32[(($__p2)>>2)];
 var $cmp8=($6|0)==($__a_end|0);
 if($cmp8){label=11;break;}else{label=10;break;}
 case 10: 
 HEAP32[(($__err)>>2)]=4;
 var $retval_0=0;label=15;break;
 case 11: 
 var $cmp10=($5|0)==34;
 if($cmp10){label=12;break;}else{label=13;break;}
 case 12: 
 HEAP32[(($__err)>>2)]=4;
 label=13;break;
 case 13: 
 var $conv=$call3;
 var $retval_0=$conv;label=15;break;
 case 14: 
 HEAP32[(($__err)>>2)]=4;
 var $retval_0=0;label=15;break;
 case 15: 
 var $retval_0;
 STACKTOP=sp;return $retval_0;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji($__a,$__a_end,$__err,$__base){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__p2=sp;
 var $cmp=($__a|0)==($__a_end|0);
 if($cmp){label=15;break;}else{label=2;break;}
 case 2: 
 var $0=HEAP8[($__a)];
 var $cmp1=(($0<<24)>>24)==45;
 if($cmp1){label=3;break;}else{label=4;break;}
 case 3: 
 HEAP32[(($__err)>>2)]=4;
 var $retval_0$1=0;var $retval_0$0=0;label=16;break;
 case 4: 
 var $call=___errno_location();
 var $1=HEAP32[(($call)>>2)];
 HEAP32[(($call)>>2)]=0;
 var $2=HEAP8[(15944)];
 var $guard_uninitialized_i=(($2<<24)>>24)==0;
 if($guard_uninitialized_i){label=5;break;}else{label=9;break;}
 case 5: 
 var $3=___cxa_guard_acquire(15944);
 var $tobool_i=($3|0)==0;
 if($tobool_i){label=9;break;}else{label=6;break;}
 case 6: 
 var $call_i=(function() { try { __THREW__ = 0; return _newlocale(2147483647,2960,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=7;break; } else { label=8;break; }
 case 7: 
 HEAP32[((13952)>>2)]=$call_i;
 label=9;break;
 case 8: 
 var $4$0 = ___cxa_find_matching_catch(-1, -1); var $4$1 = tempRet0;
 ___resumeException($4$0)
 case 9: 
 var $5=HEAP32[((13952)>>2)];
 var $call5$0=_strtoull($__a,$__p2,$__base,$5);
 var $call5$1=tempRet0;
 var $6=HEAP32[(($call)>>2)];
 var $cmp7=($6|0)==0;
 if($cmp7){label=10;break;}else{label=11;break;}
 case 10: 
 HEAP32[(($call)>>2)]=$1;
 label=11;break;
 case 11: 
 var $7=HEAP32[(($__p2)>>2)];
 var $cmp11=($7|0)==($__a_end|0);
 if($cmp11){label=13;break;}else{label=12;break;}
 case 12: 
 HEAP32[(($__err)>>2)]=4;
 var $retval_0$1=0;var $retval_0$0=0;label=16;break;
 case 13: 
 var $cmp13=($6|0)==34;
 if($cmp13){label=14;break;}else{var $retval_0$1=$call5$1;var $retval_0$0=$call5$0;label=16;break;}
 case 14: 
 HEAP32[(($__err)>>2)]=4;
 var $retval_0$1=-1;var $retval_0$0=-1;label=16;break;
 case 15: 
 HEAP32[(($__err)>>2)]=4;
 var $retval_0$1=0;var $retval_0$0=0;label=16;break;
 case 16: 
 var $retval_0$0;
 var $retval_0$1;
 STACKTOP=sp;return (tempRet0=$retval_0$1,$retval_0$0);
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji($__a,$__a_end,$__err,$__base){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__p2=sp;
 var $cmp=($__a|0)==($__a_end|0);
 if($cmp){label=16;break;}else{label=2;break;}
 case 2: 
 var $0=HEAP8[($__a)];
 var $cmp1=(($0<<24)>>24)==45;
 if($cmp1){label=3;break;}else{label=4;break;}
 case 3: 
 HEAP32[(($__err)>>2)]=4;
 var $retval_0=0;label=17;break;
 case 4: 
 var $call=___errno_location();
 var $1=HEAP32[(($call)>>2)];
 HEAP32[(($call)>>2)]=0;
 var $2=HEAP8[(15944)];
 var $guard_uninitialized_i=(($2<<24)>>24)==0;
 if($guard_uninitialized_i){label=5;break;}else{label=9;break;}
 case 5: 
 var $3=___cxa_guard_acquire(15944);
 var $tobool_i=($3|0)==0;
 if($tobool_i){label=9;break;}else{label=6;break;}
 case 6: 
 var $call_i=(function() { try { __THREW__ = 0; return _newlocale(2147483647,2960,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=7;break; } else { label=8;break; }
 case 7: 
 HEAP32[((13952)>>2)]=$call_i;
 label=9;break;
 case 8: 
 var $4$0 = ___cxa_find_matching_catch(-1, -1); var $4$1 = tempRet0;
 ___resumeException($4$0)
 case 9: 
 var $5=HEAP32[((13952)>>2)];
 var $call5$0=_strtoull($__a,$__p2,$__base,$5);
 var $call5$1=tempRet0;
 var $6=HEAP32[(($call)>>2)];
 var $cmp7=($6|0)==0;
 if($cmp7){label=10;break;}else{label=11;break;}
 case 10: 
 HEAP32[(($call)>>2)]=$1;
 label=11;break;
 case 11: 
 var $7=HEAP32[(($__p2)>>2)];
 var $cmp11=($7|0)==($__a_end|0);
 if($cmp11){label=13;break;}else{label=12;break;}
 case 12: 
 HEAP32[(($__err)>>2)]=4;
 var $retval_0=0;label=17;break;
 case 13: 
 var $cmp13=($6|0)==34;
 var $$etemp$0$0=-1;
 var $$etemp$0$1=0;
 var $cmp16=(($call5$1>>>0) > ($$etemp$0$1>>>0)) | (((($call5$1>>>0) == ($$etemp$0$1>>>0) & ($call5$0>>>0) >  ($$etemp$0$0>>>0))));
 var $or_cond=$cmp13|$cmp16;
 if($or_cond){label=14;break;}else{label=15;break;}
 case 14: 
 HEAP32[(($__err)>>2)]=4;
 var $retval_0=-1;label=17;break;
 case 15: 
 var $conv21$0=$call5$0;
 var $conv21=$conv21$0;
 var $retval_0=$conv21;label=17;break;
 case 16: 
 HEAP32[(($__err)>>2)]=4;
 var $retval_0=0;label=17;break;
 case 17: 
 var $retval_0;
 STACKTOP=sp;return $retval_0;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji($__a,$__a_end,$__err,$__base){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__p2=sp;
 var $cmp=($__a|0)==($__a_end|0);
 if($cmp){label=16;break;}else{label=2;break;}
 case 2: 
 var $0=HEAP8[($__a)];
 var $cmp1=(($0<<24)>>24)==45;
 if($cmp1){label=3;break;}else{label=4;break;}
 case 3: 
 HEAP32[(($__err)>>2)]=4;
 var $retval_0=0;label=17;break;
 case 4: 
 var $call=___errno_location();
 var $1=HEAP32[(($call)>>2)];
 HEAP32[(($call)>>2)]=0;
 var $2=HEAP8[(15944)];
 var $guard_uninitialized_i=(($2<<24)>>24)==0;
 if($guard_uninitialized_i){label=5;break;}else{label=9;break;}
 case 5: 
 var $3=___cxa_guard_acquire(15944);
 var $tobool_i=($3|0)==0;
 if($tobool_i){label=9;break;}else{label=6;break;}
 case 6: 
 var $call_i=(function() { try { __THREW__ = 0; return _newlocale(2147483647,2960,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=7;break; } else { label=8;break; }
 case 7: 
 HEAP32[((13952)>>2)]=$call_i;
 label=9;break;
 case 8: 
 var $4$0 = ___cxa_find_matching_catch(-1, -1); var $4$1 = tempRet0;
 ___resumeException($4$0)
 case 9: 
 var $5=HEAP32[((13952)>>2)];
 var $call5$0=_strtoull($__a,$__p2,$__base,$5);
 var $call5$1=tempRet0;
 var $6=HEAP32[(($call)>>2)];
 var $cmp7=($6|0)==0;
 if($cmp7){label=10;break;}else{label=11;break;}
 case 10: 
 HEAP32[(($call)>>2)]=$1;
 label=11;break;
 case 11: 
 var $7=HEAP32[(($__p2)>>2)];
 var $cmp11=($7|0)==($__a_end|0);
 if($cmp11){label=13;break;}else{label=12;break;}
 case 12: 
 HEAP32[(($__err)>>2)]=4;
 var $retval_0=0;label=17;break;
 case 13: 
 var $cmp13=($6|0)==34;
 var $$etemp$0$0=-1;
 var $$etemp$0$1=0;
 var $cmp16=(($call5$1>>>0) > ($$etemp$0$1>>>0)) | (((($call5$1>>>0) == ($$etemp$0$1>>>0) & ($call5$0>>>0) >  ($$etemp$0$0>>>0))));
 var $or_cond=$cmp13|$cmp16;
 if($or_cond){label=14;break;}else{label=15;break;}
 case 14: 
 HEAP32[(($__err)>>2)]=4;
 var $retval_0=-1;label=17;break;
 case 15: 
 var $conv21$0=$call5$0;
 var $conv21=$conv21$0;
 var $retval_0=$conv21;label=17;break;
 case 16: 
 HEAP32[(($__err)>>2)]=4;
 var $retval_0=0;label=17;break;
 case 17: 
 var $retval_0;
 STACKTOP=sp;return $retval_0;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji($__a,$__a_end,$__err,$__base){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__p2=sp;
 var $cmp=($__a|0)==($__a_end|0);
 if($cmp){label=16;break;}else{label=2;break;}
 case 2: 
 var $0=HEAP8[($__a)];
 var $cmp1=(($0<<24)>>24)==45;
 if($cmp1){label=3;break;}else{label=4;break;}
 case 3: 
 HEAP32[(($__err)>>2)]=4;
 var $retval_0=0;label=17;break;
 case 4: 
 var $call=___errno_location();
 var $1=HEAP32[(($call)>>2)];
 HEAP32[(($call)>>2)]=0;
 var $2=HEAP8[(15944)];
 var $guard_uninitialized_i=(($2<<24)>>24)==0;
 if($guard_uninitialized_i){label=5;break;}else{label=9;break;}
 case 5: 
 var $3=___cxa_guard_acquire(15944);
 var $tobool_i=($3|0)==0;
 if($tobool_i){label=9;break;}else{label=6;break;}
 case 6: 
 var $call_i=(function() { try { __THREW__ = 0; return _newlocale(2147483647,2960,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=7;break; } else { label=8;break; }
 case 7: 
 HEAP32[((13952)>>2)]=$call_i;
 label=9;break;
 case 8: 
 var $4$0 = ___cxa_find_matching_catch(-1, -1); var $4$1 = tempRet0;
 ___resumeException($4$0)
 case 9: 
 var $5=HEAP32[((13952)>>2)];
 var $call5$0=_strtoull($__a,$__p2,$__base,$5);
 var $call5$1=tempRet0;
 var $6=HEAP32[(($call)>>2)];
 var $cmp7=($6|0)==0;
 if($cmp7){label=10;break;}else{label=11;break;}
 case 10: 
 HEAP32[(($call)>>2)]=$1;
 label=11;break;
 case 11: 
 var $7=HEAP32[(($__p2)>>2)];
 var $cmp11=($7|0)==($__a_end|0);
 if($cmp11){label=13;break;}else{label=12;break;}
 case 12: 
 HEAP32[(($__err)>>2)]=4;
 var $retval_0=0;label=17;break;
 case 13: 
 var $cmp13=($6|0)==34;
 var $$etemp$0$0=65535;
 var $$etemp$0$1=0;
 var $cmp16=(($call5$1>>>0) > ($$etemp$0$1>>>0)) | (((($call5$1>>>0) == ($$etemp$0$1>>>0) & ($call5$0>>>0) >  ($$etemp$0$0>>>0))));
 var $or_cond=$cmp13|$cmp16;
 if($or_cond){label=14;break;}else{label=15;break;}
 case 14: 
 HEAP32[(($__err)>>2)]=4;
 var $retval_0=-1;label=17;break;
 case 15: 
 var $conv21$0=$call5$0;
 var $conv21=$conv21$0&65535;
 var $retval_0=$conv21;label=17;break;
 case 16: 
 HEAP32[(($__err)>>2)]=4;
 var $retval_0=0;label=17;break;
 case 17: 
 var $retval_0;
 STACKTOP=sp;return $retval_0;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji($__a,$__a_end,$__err,$__base){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__p2=sp;
 var $cmp=($__a|0)==($__a_end|0);
 if($cmp){label=13;break;}else{label=2;break;}
 case 2: 
 var $call=___errno_location();
 var $0=HEAP32[(($call)>>2)];
 HEAP32[(($call)>>2)]=0;
 var $1=HEAP8[(15944)];
 var $guard_uninitialized_i=(($1<<24)>>24)==0;
 if($guard_uninitialized_i){label=3;break;}else{label=7;break;}
 case 3: 
 var $2=___cxa_guard_acquire(15944);
 var $tobool_i=($2|0)==0;
 if($tobool_i){label=7;break;}else{label=4;break;}
 case 4: 
 var $call_i=(function() { try { __THREW__ = 0; return _newlocale(2147483647,2960,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=5;break; } else { label=6;break; }
 case 5: 
 HEAP32[((13952)>>2)]=$call_i;
 label=7;break;
 case 6: 
 var $3$0 = ___cxa_find_matching_catch(-1, -1); var $3$1 = tempRet0;
 ___resumeException($3$0)
 case 7: 
 var $4=HEAP32[((13952)>>2)];
 var $call3$0=_strtoll($__a,$__p2,$__base,$4);
 var $call3$1=tempRet0;
 var $5=HEAP32[(($call)>>2)];
 var $cmp5=($5|0)==0;
 if($cmp5){label=8;break;}else{label=9;break;}
 case 8: 
 HEAP32[(($call)>>2)]=$0;
 label=9;break;
 case 9: 
 var $6=HEAP32[(($__p2)>>2)];
 var $cmp8=($6|0)==($__a_end|0);
 if($cmp8){label=11;break;}else{label=10;break;}
 case 10: 
 HEAP32[(($__err)>>2)]=4;
 var $retval_0$1=0;var $retval_0$0=0;label=14;break;
 case 11: 
 var $cmp10=($5|0)==34;
 if($cmp10){label=12;break;}else{var $retval_0$1=$call3$1;var $retval_0$0=$call3$0;label=14;break;}
 case 12: 
 HEAP32[(($__err)>>2)]=4;
 var $$etemp$0$0=0;
 var $$etemp$0$1=0;
 var $cmp17=(($call3$1|0) > ($$etemp$0$1|0)) | (((($call3$1|0) == ($$etemp$0$1|0) & ($call3$0>>>0) >  ($$etemp$0$0>>>0))));
 var $$etemp$2$0=0;
 var $$etemp$2$1=-2147483648;
 var $$etemp$1$0=-1;
 var $$etemp$1$1=2147483647;
 var $_$0=($cmp17?$$etemp$1$0:$$etemp$2$0);
 var $_$1=($cmp17?$$etemp$1$1:$$etemp$2$1);
 var $retval_0$1=$_$1;var $retval_0$0=$_$0;label=14;break;
 case 13: 
 HEAP32[(($__err)>>2)]=4;
 var $retval_0$1=0;var $retval_0$0=0;label=14;break;
 case 14: 
 var $retval_0$0;
 var $retval_0$1;
 STACKTOP=sp;return (tempRet0=$retval_0$1,$retval_0$0);
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji($__a,$__a_end,$__err,$__base){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__p2=sp;
 var $cmp=($__a|0)==($__a_end|0);
 if($cmp){label=14;break;}else{label=2;break;}
 case 2: 
 var $call=___errno_location();
 var $0=HEAP32[(($call)>>2)];
 HEAP32[(($call)>>2)]=0;
 var $1=HEAP8[(15944)];
 var $guard_uninitialized_i=(($1<<24)>>24)==0;
 if($guard_uninitialized_i){label=3;break;}else{label=7;break;}
 case 3: 
 var $2=___cxa_guard_acquire(15944);
 var $tobool_i=($2|0)==0;
 if($tobool_i){label=7;break;}else{label=4;break;}
 case 4: 
 var $call_i=(function() { try { __THREW__ = 0; return _newlocale(2147483647,2960,0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=5;break; } else { label=6;break; }
 case 5: 
 HEAP32[((13952)>>2)]=$call_i;
 label=7;break;
 case 6: 
 var $3$0 = ___cxa_find_matching_catch(-1, -1); var $3$1 = tempRet0;
 ___resumeException($3$0)
 case 7: 
 var $4=HEAP32[((13952)>>2)];
 var $call3$0=_strtoll($__a,$__p2,$__base,$4);
 var $call3$1=tempRet0;
 var $5=HEAP32[(($call)>>2)];
 var $cmp5=($5|0)==0;
 if($cmp5){label=8;break;}else{label=9;break;}
 case 8: 
 HEAP32[(($call)>>2)]=$0;
 label=9;break;
 case 9: 
 var $6=HEAP32[(($__p2)>>2)];
 var $cmp8=($6|0)==($__a_end|0);
 if($cmp8){label=11;break;}else{label=10;break;}
 case 10: 
 HEAP32[(($__err)>>2)]=4;
 var $retval_0=0;label=15;break;
 case 11: 
 var $cmp10=($5|0)==34;
 var $$etemp$0$0=-2147483648;
 var $$etemp$0$1=-1;
 var $cmp12=(($call3$1|0) < ($$etemp$0$1|0)) | (((($call3$1|0) == ($$etemp$0$1|0) & ($call3$0>>>0) <  ($$etemp$0$0>>>0))));
 var $or_cond=$cmp10|$cmp12;
 var $$etemp$1$0=2147483647;
 var $$etemp$1$1=0;
 var $cmp16=(($call3$1|0) > ($$etemp$1$1|0)) | (((($call3$1|0) == ($$etemp$1$1|0) & ($call3$0>>>0) >  ($$etemp$1$0>>>0))));
 var $or_cond9=$or_cond|$cmp16;
 if($or_cond9){label=12;break;}else{label=13;break;}
 case 12: 
 HEAP32[(($__err)>>2)]=4;
 var $$etemp$2$0=0;
 var $$etemp$2$1=0;
 var $cmp18=(($call3$1|0) > ($$etemp$2$1|0)) | (((($call3$1|0) == ($$etemp$2$1|0) & ($call3$0>>>0) >  ($$etemp$2$0>>>0))));
 var $_=($cmp18?2147483647:-2147483648);
 var $retval_0=$_;label=15;break;
 case 13: 
 var $conv25$0=$call3$0;
 var $conv25=$conv25$0;
 var $retval_0=$conv25;label=15;break;
 case 14: 
 HEAP32[(($__err)>>2)]=4;
 var $retval_0=0;label=15;break;
 case 15: 
 var $retval_0;
 STACKTOP=sp;return $retval_0;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__117__call_once_proxyINS_5tupleIJNS_12_GLOBAL__N_111__fake_bindEEEEEEvPv($__vp){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $value_i_i_i_i_idx=$__vp;
 var $value_i_i_i_i_idx_val=HEAP32[(($value_i_i_i_i_idx)>>2)];
 var $value_i_i_i_i_idx1=(($__vp+4)|0);
 var $0=$value_i_i_i_i_idx1;
 var $ld$0$0=(($0)|0);
 var $value_i_i_i_i_idx1_val$0=HEAP32[(($ld$0$0)>>2)];
 var $ld$1$1=(($0+4)|0);
 var $value_i_i_i_i_idx1_val$1=HEAP32[(($ld$1$1)>>2)];
 var $memptr_adj_i=$value_i_i_i_i_idx1_val$1;
 var $1=$value_i_i_i_i_idx_val;
 var $2=(($1+$memptr_adj_i)|0);
 var $this_adjusted_i=$2;
 var $memptr_ptr_i=$value_i_i_i_i_idx1_val$0;
 var $3=$memptr_ptr_i&1;
 var $memptr_isvirtual_i=($3|0)==0;
 if($memptr_isvirtual_i){label=3;break;}else{label=2;break;}
 case 2: 
 var $4=$2;
 var $memptr_vtable_i=HEAP32[(($4)>>2)];
 var $5=((($memptr_ptr_i)-(1))|0);
 var $6=(($memptr_vtable_i+$5)|0);
 var $7=$6;
 var $memptr_virtualfn_i=HEAP32[(($7)>>2)];
 var $8=$memptr_virtualfn_i;label=4;break;
 case 3: 
 var $memptr_nonvirtualfn_i=$memptr_ptr_i;
 var $8=$memptr_nonvirtualfn_i;label=4;break;
 case 4: 
 var $8;
 FUNCTION_TABLE[$8]($this_adjusted_i);
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($this,$__n){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $__first__i_i_i=(($this+8)|0);
 var $0=HEAP32[(($__first__i_i_i)>>2)];
 var $__end_=(($this+4)|0);
 var $1=HEAP32[(($__end_)>>2)];
 var $sub_ptr_lhs_cast=$0;
 var $sub_ptr_rhs_cast=$1;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $sub_ptr_div=$sub_ptr_sub>>2;
 var $cmp=($sub_ptr_div>>>0)<($__n>>>0);
 if($cmp){label=5;break;}else{var $__n_addr_0_i=$__n;var $2=$1;label=2;break;}
 case 2: 
 var $2;
 var $__n_addr_0_i;
 var $new_isnull_i_i_i=($2|0)==0;
 if($new_isnull_i_i_i){var $3=0;label=4;break;}else{label=3;break;}
 case 3: 
 HEAP32[(($2)>>2)]=0;
 var $_pre2_i=HEAP32[(($__end_)>>2)];
 var $3=$_pre2_i;label=4;break;
 case 4: 
 var $3;
 var $incdec_ptr_i=(($3+4)|0);
 HEAP32[(($__end_)>>2)]=$incdec_ptr_i;
 var $dec_i=((($__n_addr_0_i)-(1))|0);
 var $cmp_i12=($dec_i|0)==0;
 if($cmp_i12){label=20;break;}else{var $__n_addr_0_i=$dec_i;var $2=$incdec_ptr_i;label=2;break;}
 case 5: 
 var $__second__i_i_i=(($this+16)|0);
 var $__begin__i=(($this)|0);
 var $4=HEAP32[(($__begin__i)>>2)];
 var $sub_ptr_rhs_cast_i=$4;
 var $sub_ptr_sub_i=((($sub_ptr_rhs_cast)-($sub_ptr_rhs_cast_i))|0);
 var $sub_ptr_div_i=$sub_ptr_sub_i>>2;
 var $add=((($sub_ptr_div_i)+($__n))|0);
 var $cmp_i=($add>>>0)>1073741823;
 if($cmp_i){label=6;break;}else{label=7;break;}
 case 6: 
 __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(0);
 throw "Reached an unreachable!";
 case 7: 
 var $sub_ptr_sub_i_i_i=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast_i))|0);
 var $sub_ptr_div_i_i_i=$sub_ptr_sub_i_i_i>>2;
 var $cmp3_i=($sub_ptr_div_i_i_i>>>0)>536870910;
 if($cmp3_i){var $retval_i_03945=1073741823;label=11;break;}else{label=8;break;}
 case 8: 
 var $mul_i=$sub_ptr_sub_i_i_i>>1;
 var $cmp_i_i_i_i=($mul_i>>>0)<($add>>>0);
 var $_sroa_speculated=($cmp_i_i_i_i?$add:$mul_i);
 var $cmp_i_i=($_sroa_speculated|0)==0;
 if($cmp_i_i){var $cond_i_i=0;var $retval_i_040=0;label=12;break;}else{label=9;break;}
 case 9: 
 var $__allocated__i_i_i_i27=(($this+128)|0);
 var $5=HEAP8[($__allocated__i_i_i_i27)];
 var $6=$5&1;
 var $tobool_i_i_i_i=(($6<<24)>>24)==0;
 var $cmp_i_i_i_i28=($_sroa_speculated>>>0)<29;
 var $or_cond_i_i=$tobool_i_i_i_i&$cmp_i_i_i_i28;
 if($or_cond_i_i){label=10;break;}else{var $retval_i_03945=$_sroa_speculated;label=11;break;}
 case 10: 
 HEAP8[($__allocated__i_i_i_i27)]=1;
 var $7=$__second__i_i_i;
 var $cond_i_i=$7;var $retval_i_040=$_sroa_speculated;label=12;break;
 case 11: 
 var $retval_i_03945;
 var $mul_i_i_i_i=$retval_i_03945<<2;
 var $call_i_i_i_i=__Znwj($mul_i_i_i_i);
 var $8=$call_i_i_i_i;
 var $cond_i_i=$8;var $retval_i_040=$retval_i_03945;label=12;break;
 case 12: 
 var $retval_i_040;
 var $cond_i_i;
 var $add_ptr_i_i31=(($cond_i_i+($sub_ptr_div_i<<2))|0);
 var $__n_addr_0_i18=$__n;var $9=$add_ptr_i_i31;label=13;break;
 case 13: 
 var $9;
 var $__n_addr_0_i18;
 var $new_isnull_i_i_i19=($9|0)==0;
 if($new_isnull_i_i_i19){var $10=0;label=15;break;}else{label=14;break;}
 case 14: 
 HEAP32[(($9)>>2)]=0;
 var $10=$9;label=15;break;
 case 15: 
 var $10;
 var $incdec_ptr_i23=(($10+4)|0);
 var $dec_i24=((($__n_addr_0_i18)-(1))|0);
 var $cmp_i25=($dec_i24|0)==0;
 if($cmp_i25){label=16;break;}else{var $__n_addr_0_i18=$dec_i24;var $9=$incdec_ptr_i23;label=13;break;}
 case 16: 
 var $add_ptr5_i_i=(($cond_i_i+($retval_i_040<<2))|0);
 var $11=HEAP32[(($__begin__i)>>2)];
 var $12=HEAP32[(($__end_)>>2)];
 var $sub_ptr_lhs_cast_i_i=$12;
 var $sub_ptr_rhs_cast_i_i=$11;
 var $sub_ptr_sub_i_i=((($sub_ptr_lhs_cast_i_i)-($sub_ptr_rhs_cast_i_i))|0);
 var $sub_ptr_div_i_i=$sub_ptr_sub_i_i>>2;
 var $add_ptr_i_i31_sum=((($sub_ptr_div_i)-($sub_ptr_div_i_i))|0);
 var $add_ptr_i_i=(($cond_i_i+($add_ptr_i_i31_sum<<2))|0);
 var $13=$add_ptr_i_i;
 var $14=$11;
 assert($sub_ptr_sub_i_i % 1 === 0);(_memcpy($13, $14, $sub_ptr_sub_i_i)|0);
 HEAP32[(($__begin__i)>>2)]=$add_ptr_i_i;
 HEAP32[(($__end_)>>2)]=$incdec_ptr_i23;
 HEAP32[(($__first__i_i_i)>>2)]=$add_ptr5_i_i;
 var $tobool_i_i=($11|0)==0;
 if($tobool_i_i){label=20;break;}else{label=17;break;}
 case 17: 
 var $15=$__second__i_i_i;
 var $cmp_i_i_i_i13=($11|0)==($15|0);
 if($cmp_i_i_i_i13){label=18;break;}else{label=19;break;}
 case 18: 
 var $__allocated__i_i_i_i=(($this+128)|0);
 HEAP8[($__allocated__i_i_i_i)]=0;
 label=20;break;
 case 19: 
 __ZdlPv($14);
 label=20;break;
 case 20: 
 return;
  default: assert(0, "bad label: " + label);
 }
}
function ___cxx_global_array_dtor($0){
 var label=0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(13164);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(13152);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(13140);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(13128);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(13116);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(13104);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(13092);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(13080);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(13068);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(13056);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(13044);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(13032);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(13020);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(13008);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(12996);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(12984);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(12972);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(12960);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(12948);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(12936);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(12924);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(12912);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(12900);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(12888);
 return;
}
function ___cxx_global_array_dtor53($0){
 var label=0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13908);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13896);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13884);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13872);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13860);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13848);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13836);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13824);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13812);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13800);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13788);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13776);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13764);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13752);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13740);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13728);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13716);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13704);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13692);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13680);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13668);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13656);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13644);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13632);
 return;
}
function ___cxx_global_array_dtor56($0){
 var label=0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(12708);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(12696);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(12684);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(12672);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(12660);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(12648);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(12636);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(12624);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(12612);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(12600);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(12588);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(12576);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(12564);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(12552);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(12540);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(12528);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(12516);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(12504);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(12492);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(12480);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(12468);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(12456);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(12444);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(12432);
 return;
}
function ___cxx_global_array_dtor81($0){
 var label=0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13452);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13440);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13428);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13416);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13404);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13392);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13380);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13368);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13356);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13344);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13332);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13320);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13308);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13296);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13284);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13272);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13260);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13248);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13236);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13224);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13212);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13200);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13188);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13176);
 return;
}
function ___cxx_global_array_dtor105($0){
 var label=0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(12876);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(12864);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(12852);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(12840);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(12828);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(12816);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(12804);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(12792);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(12780);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(12768);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(12756);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(12744);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(12732);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev(12720);
 return;
}
function ___cxx_global_array_dtor120($0){
 var label=0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13620);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13608);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13596);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13584);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13572);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13560);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13548);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13536);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13524);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13512);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13500);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13488);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13476);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(13464);
 return;
}
function _mbrlen($s,$n,$st){
 var label=0;
 var $tobool=($st|0)!=0;
 var $cond=($tobool?$st:11944);
 var $call=_mbrtowc(0,$s,$n,$cond);
 return $call;
}
function _mbrtowc($wc,$src,$n,$st){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $wc_addr=sp;
 HEAP32[(($wc_addr)>>2)]=$wc;
 var $tobool=($st|0)==0;
 var $st_addr_0=($tobool?11936:$st);
 var $0=(($st_addr_0)|0);
 var $1=HEAP32[(($0)>>2)];
 var $tobool1=($src|0)==0;
 if($tobool1){label=2;break;}else{label=3;break;}
 case 2: 
 var $tobool3=($1|0)==0;
 if($tobool3){var $retval_0=0;label=19;break;}else{label=18;break;}
 case 3: 
 var $tobool6=($wc|0)==0;
 if($tobool6){label=4;break;}else{var $3=$wc;label=5;break;}
 case 4: 
 var $2=$wc_addr;
 HEAP32[(($wc_addr)>>2)]=$2;
 var $3=$2;label=5;break;
 case 5: 
 var $3;
 var $tobool10=($n|0)==0;
 if($tobool10){var $retval_0=-2;label=19;break;}else{label=6;break;}
 case 6: 
 var $tobool13=($1|0)==0;
 if($tobool13){label=7;break;}else{var $s_0=$src;var $c_0=$1;var $n_addr_0=$n;label=11;break;}
 case 7: 
 var $4=HEAP8[($src)];
 var $conv=($4&255);
 var $cmp=(($4<<24)>>24)>-1;
 if($cmp){label=8;break;}else{label=9;break;}
 case 8: 
 HEAP32[(($3)>>2)]=$conv;
 var $tobool18=(($4<<24)>>24)!=0;
 var $lnot_ext=($tobool18&1);
 var $retval_0=$lnot_ext;label=19;break;
 case 9: 
 var $sub=((($conv)-(194))|0);
 var $cmp22=($sub>>>0)>50;
 if($cmp22){label=18;break;}else{label=10;break;}
 case 10: 
 var $incdec_ptr=(($src+1)|0);
 var $arrayidx=((___fsmu8+($sub<<2))|0);
 var $5=HEAP32[(($arrayidx)>>2)];
 var $dec=((($n)-(1))|0);
 var $s_0=$incdec_ptr;var $c_0=$5;var $n_addr_0=$dec;label=11;break;
 case 11: 
 var $n_addr_0;
 var $c_0;
 var $s_0;
 var $tobool29=($n_addr_0|0)==0;
 if($tobool29){var $c_2=$c_0;label=17;break;}else{label=12;break;}
 case 12: 
 var $6=HEAP8[($s_0)];
 var $conv31=($6&255);
 var $shr24=$conv31>>>3;
 var $sub32=((($shr24)-(16))|0);
 var $shr35=$c_0>>26;
 var $add=((($shr24)+($shr35))|0);
 var $or=$sub32|$add;
 var $tobool36=($or>>>0)>7;
 if($tobool36){label=18;break;}else{var $s_1=$s_0;var $c_1=$c_0;var $n_addr_1=$n_addr_0;var $7=$6;label=13;break;}
 case 13: 
 var $7;
 var $n_addr_1;
 var $c_1;
 var $s_1;
 var $shl=$c_1<<6;
 var $incdec_ptr39=(($s_1+1)|0);
 var $conv40=($7&255);
 var $sub41=((($conv40)-(128))|0);
 var $or42=$sub41|$shl;
 var $dec43=((($n_addr_1)-(1))|0);
 var $tobool45=($or42|0)<0;
 if($tobool45){label=15;break;}else{label=14;break;}
 case 14: 
 HEAP32[(($0)>>2)]=0;
 HEAP32[(($3)>>2)]=$or42;
 var $sub47=((($n)-($dec43))|0);
 var $retval_0=$sub47;label=19;break;
 case 15: 
 var $tobool49=($dec43|0)==0;
 if($tobool49){var $c_2=$or42;label=17;break;}else{label=16;break;}
 case 16: 
 var $8=HEAP8[($incdec_ptr39)];
 var $conv51=($8&255);
 var $sub52=((($conv51)-(128))|0);
 var $cmp53=($sub52>>>0)>63;
 if($cmp53){label=18;break;}else{var $s_1=$incdec_ptr39;var $c_1=$or42;var $n_addr_1=$dec43;var $7=$8;label=13;break;}
 case 17: 
 var $c_2;
 HEAP32[(($0)>>2)]=$c_2;
 var $retval_0=-2;label=19;break;
 case 18: 
 HEAP32[(($0)>>2)]=0;
 var $call=___errno_location();
 HEAP32[(($call)>>2)]=84;
 var $retval_0=-1;label=19;break;
 case 19: 
 var $retval_0;
 STACKTOP=sp;return $retval_0;
  default: assert(0, "bad label: " + label);
 }
}
function _mbsnrtowcs($wcs,$src,$n,$wn,$st){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+1032)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $wbuf=sp;
 var $s=(sp)+(1024);
 var $0=HEAP32[(($src)>>2)];
 HEAP32[(($s)>>2)]=$0;
 var $tobool=($wcs|0)!=0;
 var $arraydecay=(($wbuf)|0);
 var $wn_addr_0_ph=($tobool?$wn:256);
 var $ws_0_ph=($tobool?$wcs:$arraydecay);
 var $tobool150=($0|0)==0;
 var $tobool251=($wn_addr_0_ph|0)==0;
 var $or_cond52=$tobool150|$tobool251;
 if($or_cond52){var $cnt_1=0;var $n_addr_1=$n;var $wn_addr_2=$wn_addr_0_ph;var $ws_048=$ws_0_ph;var $2=$0;label=9;break;}else{label=2;break;}
 case 2: 
 var $arraydecay10=(($wbuf)|0);
 var $wn_addr_053=$wn_addr_0_ph;var $n_addr_054=$n;var $cnt_055=0;var $ws_056=$ws_0_ph;var $_pr67=$0;label=3;break;
 case 3: 
 var $_pr67;
 var $ws_056;
 var $cnt_055;
 var $n_addr_054;
 var $wn_addr_053;
 var $div=$n_addr_054>>>2;
 var $cmp=($div>>>0)>=($wn_addr_053>>>0);
 var $cmp3=($n_addr_054>>>0)>131;
 var $or_cond34=$cmp|$cmp3;
 if($or_cond34){label=4;break;}else{var $cnt_1=$cnt_055;var $n_addr_1=$n_addr_054;var $wn_addr_2=$wn_addr_053;var $ws_048=$ws_056;var $2=$_pr67;label=9;break;}
 case 4: 
 var $wn_addr_0_div=($cmp?$wn_addr_053:$div);
 var $sub=((($n_addr_054)-($wn_addr_0_div))|0);
 var $call=_mbsrtowcs($ws_056,$s,$wn_addr_0_div,$st);
 var $tobool7=($call|0)==-1;
 if($tobool7){label=5;break;}else{label=6;break;}
 case 5: 
 var $_pr_pre=HEAP32[(($s)>>2)];
 var $cnt_1=-1;var $n_addr_1=$sub;var $wn_addr_2=0;var $ws_048=$ws_056;var $2=$_pr_pre;label=9;break;
 case 6: 
 var $cmp11=($ws_056|0)==($arraydecay10|0);
 if($cmp11){var $ws_1=$arraydecay10;var $wn_addr_1=$wn_addr_053;label=8;break;}else{label=7;break;}
 case 7: 
 var $add_ptr=(($ws_056+($call<<2))|0);
 var $sub13=((($wn_addr_053)-($call))|0);
 var $ws_1=$add_ptr;var $wn_addr_1=$sub13;label=8;break;
 case 8: 
 var $wn_addr_1;
 var $ws_1;
 var $add15=((($call)+($cnt_055))|0);
 var $1=HEAP32[(($s)>>2)];
 var $tobool1=($1|0)==0;
 var $tobool2=($wn_addr_1|0)==0;
 var $or_cond=$tobool1|$tobool2;
 if($or_cond){var $cnt_1=$add15;var $n_addr_1=$sub;var $wn_addr_2=$wn_addr_1;var $ws_048=$ws_1;var $2=$1;label=9;break;}else{var $wn_addr_053=$wn_addr_1;var $n_addr_054=$sub;var $cnt_055=$add15;var $ws_056=$ws_1;var $_pr67=$1;label=3;break;}
 case 9: 
 var $2;
 var $ws_048;
 var $wn_addr_2;
 var $n_addr_1;
 var $cnt_1;
 var $tobool16=($2|0)==0;
 if($tobool16){var $cnt_3=$cnt_1;label=16;break;}else{label=10;break;}
 case 10: 
 var $tobool1937=($wn_addr_2|0)==0;
 var $tobool2138=($n_addr_1|0)==0;
 var $or_cond3539=$tobool1937|$tobool2138;
 if($or_cond3539){var $cnt_3=$cnt_1;label=16;break;}else{var $wn_addr_340=$wn_addr_2;var $n_addr_241=$n_addr_1;var $cnt_242=$cnt_1;var $ws_243=$ws_048;var $3=$2;label=11;break;}
 case 11: 
 var $3;
 var $ws_243;
 var $cnt_242;
 var $n_addr_241;
 var $wn_addr_340;
 var $call24=_mbrtowc($ws_243,$3,$n_addr_241,$st);
 var $add25=((($call24)+(2))|0);
 var $cmp26=($add25>>>0)<3;
 if($cmp26){label=12;break;}else{label=15;break;}
 case 12: 
 if(($call24|0)==0){ label=13;break;}else if(($call24|0)==-1){ var $cnt_3=-1;label=16;break;}else{label=14;break;}
 case 13: 
 HEAP32[(($s)>>2)]=0;
 var $cnt_3=$cnt_242;label=16;break;
 case 14: 
 var $4=(($st)|0);
 HEAP32[(($4)>>2)]=0;
 var $cnt_3=$cnt_242;label=16;break;
 case 15: 
 var $5=HEAP32[(($s)>>2)];
 var $add_ptr36=(($5+$call24)|0);
 HEAP32[(($s)>>2)]=$add_ptr36;
 var $sub37=((($n_addr_241)-($call24))|0);
 var $incdec_ptr=(($ws_243+4)|0);
 var $dec=((($wn_addr_340)-(1))|0);
 var $inc=((($cnt_242)+(1))|0);
 var $tobool19=($dec|0)==0;
 var $tobool21=($n_addr_241|0)==($call24|0);
 var $or_cond35=$tobool19|$tobool21;
 if($or_cond35){var $cnt_3=$inc;label=16;break;}else{var $wn_addr_340=$dec;var $n_addr_241=$sub37;var $cnt_242=$inc;var $ws_243=$incdec_ptr;var $3=$add_ptr36;label=11;break;}
 case 16: 
 var $cnt_3;
 if($tobool){label=17;break;}else{label=18;break;}
 case 17: 
 var $6=HEAP32[(($s)>>2)];
 HEAP32[(($src)>>2)]=$6;
 label=18;break;
 case 18: 
 STACKTOP=sp;return $cnt_3;
  default: assert(0, "bad label: " + label);
 }
}
function _mbsrtowcs($ws,$src,$wn,$st){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $0=HEAP32[(($src)>>2)];
 var $tobool=($st|0)==0;
 if($tobool){label=5;break;}else{label=2;break;}
 case 2: 
 var $1=(($st)|0);
 var $2=HEAP32[(($1)>>2)];
 var $tobool1=($2|0)==0;
 if($tobool1){label=5;break;}else{label=3;break;}
 case 3: 
 var $tobool2=($ws|0)==0;
 if($tobool2){var $c_2=$2;var $s_3=$0;var $wn_addr_3=$wn;label=16;break;}else{label=4;break;}
 case 4: 
 HEAP32[(($1)>>2)]=0;
 var $c_4=$2;var $s_8=$0;var $ws_addr_3=$ws;var $wn_addr_7=$wn;label=36;break;
 case 5: 
 var $tobool4=($ws|0)==0;
 if($tobool4){var $s_0=$0;var $wn_addr_0=$wn;label=7;break;}else{var $s_5_ph=$0;var $ws_addr_0_ph=$ws;var $wn_addr_4_ph=$wn;label=6;break;}
 case 6: 
 var $wn_addr_4_ph;
 var $ws_addr_0_ph;
 var $s_5_ph;
 var $tobool6988=($wn_addr_4_ph|0)==0;
 if($tobool6988){var $retval_0=$wn;label=53;break;}else{var $wn_addr_489=$wn_addr_4_ph;var $ws_addr_090=$ws_addr_0_ph;var $s_591=$s_5_ph;label=26;break;}
 case 7: 
 var $wn_addr_0;
 var $s_0;
 var $3=HEAP8[($s_0)];
 var $conv=($3&255);
 var $sub=((($conv)-(1))|0);
 var $cmp=($sub>>>0)<127;
 if($cmp){label=8;break;}else{var $s_2=$s_0;var $wn_addr_2=$wn_addr_0;var $11=$3;label=12;break;}
 case 8: 
 var $4=$s_0;
 var $rem=$4&3;
 var $cmp8=($rem|0)==0;
 if($cmp8){label=9;break;}else{var $s_2=$s_0;var $wn_addr_2=$wn_addr_0;var $11=$3;label=12;break;}
 case 9: 
 var $5=$s_0;
 var $6=HEAP32[(($5)>>2)];
 var $sub1174=((($6)-(16843009))|0);
 var $or75=$sub1174|$6;
 var $and76=$or75&-2139062144;
 var $lnot77=($and76|0)==0;
 var $7=(($6)&255);
 if($lnot77){var $wn_addr_178=$wn_addr_0;var $s_179=$s_0;label=10;break;}else{var $s_2=$s_0;var $wn_addr_2=$wn_addr_0;var $11=$7;label=12;break;}
 case 10: 
 var $s_179;
 var $wn_addr_178;
 var $add_ptr=(($s_179+4)|0);
 var $sub13=((($wn_addr_178)-(4))|0);
 var $8=$add_ptr;
 var $9=HEAP32[(($8)>>2)];
 var $sub11=((($9)-(16843009))|0);
 var $or=$sub11|$9;
 var $and=$or&-2139062144;
 var $lnot=($and|0)==0;
 if($lnot){var $wn_addr_178=$sub13;var $s_179=$add_ptr;label=10;break;}else{label=11;break;}
 case 11: 
 var $10=(($9)&255);
 var $s_2=$add_ptr;var $wn_addr_2=$sub13;var $11=$10;label=12;break;
 case 12: 
 var $11;
 var $wn_addr_2;
 var $s_2;
 var $conv15=($11&255);
 var $sub16=((($conv15)-(1))|0);
 var $cmp17=($sub16>>>0)<127;
 if($cmp17){label=13;break;}else{label=14;break;}
 case 13: 
 var $incdec_ptr=(($s_2+1)|0);
 var $dec=((($wn_addr_2)-(1))|0);
 var $s_0=$incdec_ptr;var $wn_addr_0=$dec;label=7;break;
 case 14: 
 var $sub22=((($conv15)-(194))|0);
 var $cmp23=($sub22>>>0)>50;
 if($cmp23){var $wn_addr_8101=$wn_addr_2;var $ws_addr_4103=$ws;var $s_10105=$s_2;label=47;break;}else{label=15;break;}
 case 15: 
 var $incdec_ptr27=(($s_2+1)|0);
 var $arrayidx=((___fsmu8+($sub22<<2))|0);
 var $12=HEAP32[(($arrayidx)>>2)];
 var $c_2=$12;var $s_3=$incdec_ptr27;var $wn_addr_3=$wn_addr_2;label=16;break;
 case 16: 
 var $wn_addr_3;
 var $s_3;
 var $c_2;
 var $13=HEAP8[($s_3)];
 var $conv30=($13&255);
 var $shr72=$conv30>>>3;
 var $sub31=((($shr72)-(16))|0);
 var $shr34=$c_2>>26;
 var $add=((($shr72)+($shr34))|0);
 var $or35=$sub31|$add;
 var $tobool37=($or35>>>0)>7;
 if($tobool37){label=17;break;}else{label=18;break;}
 case 17: 
 var $incdec_ptr39=((($s_3)-(1))|0);
 var $c_6=$c_2;var $s_10=$incdec_ptr39;var $ws_addr_4=$ws;var $wn_addr_8=$wn_addr_3;label=46;break;
 case 18: 
 var $incdec_ptr41=(($s_3+1)|0);
 var $and42=$c_2&33554432;
 var $tobool43=($and42|0)==0;
 if($tobool43){var $s_4=$incdec_ptr41;label=25;break;}else{label=19;break;}
 case 19: 
 var $14=HEAP8[($incdec_ptr41)];
 var $conv45=($14&255);
 var $sub46=((($conv45)-(128))|0);
 var $cmp47=($sub46>>>0)>63;
 if($cmp47){label=20;break;}else{label=21;break;}
 case 20: 
 var $add_ptr50=((($s_3)-(1))|0);
 var $c_6=$c_2;var $s_10=$add_ptr50;var $ws_addr_4=$ws;var $wn_addr_8=$wn_addr_3;label=46;break;
 case 21: 
 var $incdec_ptr52=(($s_3+2)|0);
 var $and53=$c_2&524288;
 var $tobool54=($and53|0)==0;
 if($tobool54){var $s_4=$incdec_ptr52;label=25;break;}else{label=22;break;}
 case 22: 
 var $15=HEAP8[($incdec_ptr52)];
 var $conv56=($15&255);
 var $sub57=((($conv56)-(128))|0);
 var $cmp58=($sub57>>>0)>63;
 if($cmp58){label=23;break;}else{label=24;break;}
 case 23: 
 var $add_ptr61=((($s_3)-(1))|0);
 var $c_6=$c_2;var $s_10=$add_ptr61;var $ws_addr_4=$ws;var $wn_addr_8=$wn_addr_3;label=46;break;
 case 24: 
 var $incdec_ptr63=(($s_3+3)|0);
 var $s_4=$incdec_ptr63;label=25;break;
 case 25: 
 var $s_4;
 var $dec66=((($wn_addr_3)-(1))|0);
 var $s_0=$s_4;var $wn_addr_0=$dec66;label=7;break;
 case 26: 
 var $s_591;
 var $ws_addr_090;
 var $wn_addr_489;
 var $16=HEAP8[($s_591)];
 var $conv72=($16&255);
 var $sub73=((($conv72)-(1))|0);
 var $cmp74=($sub73>>>0)<127;
 if($cmp74){label=27;break;}else{var $s_7=$s_591;var $ws_addr_2=$ws_addr_090;var $wn_addr_6=$wn_addr_489;var $24=$16;label=32;break;}
 case 27: 
 var $17=$s_591;
 var $rem77=$17&3;
 var $cmp78=($rem77|0)==0;
 var $cmp8281=($wn_addr_489>>>0)>3;
 var $or_cond=$cmp78&$cmp8281;
 if($or_cond){var $wn_addr_582=$wn_addr_489;var $ws_addr_183=$ws_addr_090;var $s_684=$s_591;label=28;break;}else{var $s_7=$s_591;var $ws_addr_2=$ws_addr_090;var $wn_addr_6=$wn_addr_489;var $24=$16;label=32;break;}
 case 28: 
 var $s_684;
 var $ws_addr_183;
 var $wn_addr_582;
 var $18=$s_684;
 var $19=HEAP32[(($18)>>2)];
 var $sub84=((($19)-(16843009))|0);
 var $or85=$sub84|$19;
 var $and86=$or85&-2139062144;
 var $lnot88=($and86|0)==0;
 if($lnot88){label=29;break;}else{label=30;break;}
 case 29: 
 var $incdec_ptr90=(($s_684+1)|0);
 var $conv91=$19&255;
 var $incdec_ptr92=(($ws_addr_183+4)|0);
 HEAP32[(($ws_addr_183)>>2)]=$conv91;
 var $incdec_ptr93=(($s_684+2)|0);
 var $20=HEAP8[($incdec_ptr90)];
 var $conv94=($20&255);
 var $incdec_ptr95=(($ws_addr_183+8)|0);
 HEAP32[(($incdec_ptr92)>>2)]=$conv94;
 var $incdec_ptr96=(($s_684+3)|0);
 var $21=HEAP8[($incdec_ptr93)];
 var $conv97=($21&255);
 var $incdec_ptr98=(($ws_addr_183+12)|0);
 HEAP32[(($incdec_ptr95)>>2)]=$conv97;
 var $incdec_ptr99=(($s_684+4)|0);
 var $22=HEAP8[($incdec_ptr96)];
 var $conv100=($22&255);
 var $incdec_ptr101=(($ws_addr_183+16)|0);
 HEAP32[(($incdec_ptr98)>>2)]=$conv100;
 var $sub102=((($wn_addr_582)-(4))|0);
 var $cmp82=($sub102>>>0)>3;
 if($cmp82){var $wn_addr_582=$sub102;var $ws_addr_183=$incdec_ptr101;var $s_684=$incdec_ptr99;label=28;break;}else{label=31;break;}
 case 30: 
 var $23=(($19)&255);
 var $s_7=$s_684;var $ws_addr_2=$ws_addr_183;var $wn_addr_6=$wn_addr_582;var $24=$23;label=32;break;
 case 31: 
 var $_pre_pre=HEAP8[($incdec_ptr99)];
 var $s_7=$incdec_ptr99;var $ws_addr_2=$incdec_ptr101;var $wn_addr_6=$sub102;var $24=$_pre_pre;label=32;break;
 case 32: 
 var $24;
 var $wn_addr_6;
 var $ws_addr_2;
 var $s_7;
 var $conv105=($24&255);
 var $sub106=((($conv105)-(1))|0);
 var $cmp107=($sub106>>>0)<127;
 if($cmp107){label=33;break;}else{label=34;break;}
 case 33: 
 var $incdec_ptr110=(($s_7+1)|0);
 var $incdec_ptr112=(($ws_addr_2+4)|0);
 HEAP32[(($ws_addr_2)>>2)]=$conv105;
 var $dec113=((($wn_addr_6)-(1))|0);
 var $tobool69=($dec113|0)==0;
 if($tobool69){var $retval_0=$wn;label=53;break;}else{var $wn_addr_489=$dec113;var $ws_addr_090=$incdec_ptr112;var $s_591=$incdec_ptr110;label=26;break;}
 case 34: 
 var $sub116=((($conv105)-(194))|0);
 var $cmp117=($sub116>>>0)>50;
 if($cmp117){var $wn_addr_8101=$wn_addr_6;var $ws_addr_4103=$ws_addr_2;var $s_10105=$s_7;label=47;break;}else{label=35;break;}
 case 35: 
 var $incdec_ptr121=(($s_7+1)|0);
 var $arrayidx124=((___fsmu8+($sub116<<2))|0);
 var $25=HEAP32[(($arrayidx124)>>2)];
 var $c_4=$25;var $s_8=$incdec_ptr121;var $ws_addr_3=$ws_addr_2;var $wn_addr_7=$wn_addr_6;label=36;break;
 case 36: 
 var $wn_addr_7;
 var $ws_addr_3;
 var $s_8;
 var $c_4;
 var $26=HEAP8[($s_8)];
 var $conv125=($26&255);
 var $shr12673=$conv125>>>3;
 var $sub127=((($shr12673)-(16))|0);
 var $shr130=$c_4>>26;
 var $add131=((($shr12673)+($shr130))|0);
 var $or132=$sub127|$add131;
 var $tobool134=($or132>>>0)>7;
 if($tobool134){label=37;break;}else{label=38;break;}
 case 37: 
 var $incdec_ptr136=((($s_8)-(1))|0);
 var $c_6=$c_4;var $s_10=$incdec_ptr136;var $ws_addr_4=$ws_addr_3;var $wn_addr_8=$wn_addr_7;label=46;break;
 case 38: 
 var $shl=$c_4<<6;
 var $incdec_ptr138=(($s_8+1)|0);
 var $sub140=((($conv125)-(128))|0);
 var $or141=$sub140|$shl;
 var $tobool143=($or141|0)<0;
 if($tobool143){label=39;break;}else{var $c_5=$or141;var $s_9=$incdec_ptr138;label=45;break;}
 case 39: 
 var $27=HEAP8[($incdec_ptr138)];
 var $conv145=($27&255);
 var $sub146=((($conv145)-(128))|0);
 var $cmp147=($sub146>>>0)>63;
 if($cmp147){label=40;break;}else{label=41;break;}
 case 40: 
 var $add_ptr150=((($s_8)-(1))|0);
 var $c_6=$or141;var $s_10=$add_ptr150;var $ws_addr_4=$ws_addr_3;var $wn_addr_8=$wn_addr_7;label=46;break;
 case 41: 
 var $shl152=$or141<<6;
 var $incdec_ptr153=(($s_8+2)|0);
 var $or156=$sub146|$shl152;
 var $tobool158=($or156|0)<0;
 if($tobool158){label=42;break;}else{var $c_5=$or156;var $s_9=$incdec_ptr153;label=45;break;}
 case 42: 
 var $28=HEAP8[($incdec_ptr153)];
 var $conv160=($28&255);
 var $sub161=((($conv160)-(128))|0);
 var $cmp162=($sub161>>>0)>63;
 if($cmp162){label=43;break;}else{label=44;break;}
 case 43: 
 var $add_ptr165=((($s_8)-(1))|0);
 var $c_6=$or156;var $s_10=$add_ptr165;var $ws_addr_4=$ws_addr_3;var $wn_addr_8=$wn_addr_7;label=46;break;
 case 44: 
 var $shl167=$or156<<6;
 var $incdec_ptr168=(($s_8+3)|0);
 var $or171=$sub161|$shl167;
 var $c_5=$or171;var $s_9=$incdec_ptr168;label=45;break;
 case 45: 
 var $s_9;
 var $c_5;
 var $incdec_ptr174=(($ws_addr_3+4)|0);
 HEAP32[(($ws_addr_3)>>2)]=$c_5;
 var $dec175=((($wn_addr_7)-(1))|0);
 var $s_5_ph=$s_9;var $ws_addr_0_ph=$incdec_ptr174;var $wn_addr_4_ph=$dec175;label=6;break;
 case 46: 
 var $wn_addr_8;
 var $ws_addr_4;
 var $s_10;
 var $c_6;
 var $tobool178=($c_6|0)==0;
 if($tobool178){var $wn_addr_8101=$wn_addr_8;var $ws_addr_4103=$ws_addr_4;var $s_10105=$s_10;label=47;break;}else{var $ws_addr_4102=$ws_addr_4;var $s_10104=$s_10;label=51;break;}
 case 47: 
 var $s_10105;
 var $ws_addr_4103;
 var $wn_addr_8101;
 var $29=HEAP8[($s_10105)];
 var $tobool180=(($29<<24)>>24)==0;
 if($tobool180){label=48;break;}else{var $ws_addr_4102=$ws_addr_4103;var $s_10104=$s_10105;label=51;break;}
 case 48: 
 var $tobool182=($ws_addr_4103|0)==0;
 if($tobool182){label=50;break;}else{label=49;break;}
 case 49: 
 HEAP32[(($ws_addr_4103)>>2)]=0;
 HEAP32[(($src)>>2)]=0;
 label=50;break;
 case 50: 
 var $sub185=((($wn)-($wn_addr_8101))|0);
 var $retval_0=$sub185;label=53;break;
 case 51: 
 var $s_10104;
 var $ws_addr_4102;
 var $call=___errno_location();
 HEAP32[(($call)>>2)]=84;
 var $tobool187=($ws_addr_4102|0)==0;
 if($tobool187){var $retval_0=-1;label=53;break;}else{label=52;break;}
 case 52: 
 HEAP32[(($src)>>2)]=$s_10104;
 var $retval_0=-1;label=53;break;
 case 53: 
 var $retval_0;
 return $retval_0;
  default: assert(0, "bad label: " + label);
 }
}
function _mbtowc($wc,$src,$n){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $wc_addr=sp;
 HEAP32[(($wc_addr)>>2)]=$wc;
 var $tobool=($src|0)==0;
 if($tobool){var $retval_0=0;label=19;break;}else{label=2;break;}
 case 2: 
 var $tobool1=($n|0)==0;
 if($tobool1){label=18;break;}else{label=3;break;}
 case 3: 
 var $tobool4=($wc|0)==0;
 if($tobool4){label=4;break;}else{var $1=$wc;label=5;break;}
 case 4: 
 var $0=$wc_addr;
 HEAP32[(($wc_addr)>>2)]=$0;
 var $1=$0;label=5;break;
 case 5: 
 var $1;
 var $2=HEAP8[($src)];
 var $conv=($2&255);
 var $cmp=(($2<<24)>>24)>-1;
 if($cmp){label=6;break;}else{label=7;break;}
 case 6: 
 HEAP32[(($1)>>2)]=$conv;
 var $tobool10=(($2<<24)>>24)!=0;
 var $lnot_ext=($tobool10&1);
 var $retval_0=$lnot_ext;label=19;break;
 case 7: 
 var $sub=((($conv)-(194))|0);
 var $cmp14=($sub>>>0)>50;
 if($cmp14){label=18;break;}else{label=8;break;}
 case 8: 
 var $incdec_ptr=(($src+1)|0);
 var $arrayidx=((___fsmu8+($sub<<2))|0);
 var $3=HEAP32[(($arrayidx)>>2)];
 var $cmp20=($n>>>0)<4;
 if($cmp20){label=9;break;}else{label=10;break;}
 case 9: 
 var $mul=((($n)*(6))&-1);
 var $sub22=((($mul)-(6))|0);
 var $4=-2147483648>>>($sub22>>>0);
 var $and22=$3&$4;
 var $tobool23=($and22|0)==0;
 if($tobool23){label=10;break;}else{label=18;break;}
 case 10: 
 var $5=HEAP8[($incdec_ptr)];
 var $conv26=($5&255);
 var $shr21=$conv26>>>3;
 var $sub27=((($shr21)-(16))|0);
 var $shr30=$3>>26;
 var $add=((($shr21)+($shr30))|0);
 var $or=$sub27|$add;
 var $tobool32=($or>>>0)>7;
 if($tobool32){label=18;break;}else{label=11;break;}
 case 11: 
 var $shl35=$3<<6;
 var $sub38=((($conv26)-(128))|0);
 var $or39=$sub38|$shl35;
 var $tobool41=($or39|0)<0;
 if($tobool41){label=13;break;}else{label=12;break;}
 case 12: 
 HEAP32[(($1)>>2)]=$or39;
 var $retval_0=2;label=19;break;
 case 13: 
 var $incdec_ptr36=(($src+2)|0);
 var $6=HEAP8[($incdec_ptr36)];
 var $conv44=($6&255);
 var $sub45=((($conv44)-(128))|0);
 var $cmp46=($sub45>>>0)>63;
 if($cmp46){label=18;break;}else{label=14;break;}
 case 14: 
 var $shl50=$or39<<6;
 var $or54=$sub45|$shl50;
 var $tobool56=($or54|0)<0;
 if($tobool56){label=16;break;}else{label=15;break;}
 case 15: 
 HEAP32[(($1)>>2)]=$or54;
 var $retval_0=3;label=19;break;
 case 16: 
 var $incdec_ptr51=(($src+3)|0);
 var $7=HEAP8[($incdec_ptr51)];
 var $conv59=($7&255);
 var $sub60=((($conv59)-(128))|0);
 var $cmp61=($sub60>>>0)>63;
 if($cmp61){label=18;break;}else{label=17;break;}
 case 17: 
 var $shl65=$or54<<6;
 var $or69=$sub60|$shl65;
 HEAP32[(($1)>>2)]=$or69;
 var $retval_0=4;label=19;break;
 case 18: 
 var $call=___errno_location();
 HEAP32[(($call)>>2)]=84;
 var $retval_0=-1;label=19;break;
 case 19: 
 var $retval_0;
 STACKTOP=sp;return $retval_0;
  default: assert(0, "bad label: " + label);
 }
}
function _wcrtomb($s,$wc,$st){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $tobool=($s|0)==0;
 if($tobool){var $retval_0=1;label=11;break;}else{label=2;break;}
 case 2: 
 var $cmp=($wc>>>0)<128;
 if($cmp){label=3;break;}else{label=4;break;}
 case 3: 
 var $conv=(($wc)&255);
 HEAP8[($s)]=$conv;
 var $retval_0=1;label=11;break;
 case 4: 
 var $cmp2=($wc>>>0)<2048;
 if($cmp2){label=5;break;}else{label=6;break;}
 case 5: 
 var $shr28=$wc>>>6;
 var $or=$shr28|192;
 var $conv5=(($or)&255);
 var $incdec_ptr=(($s+1)|0);
 HEAP8[($s)]=$conv5;
 var $and=$wc&63;
 var $or6=$and|128;
 var $conv7=(($or6)&255);
 HEAP8[($incdec_ptr)]=$conv7;
 var $retval_0=2;label=11;break;
 case 6: 
 var $cmp9=($wc>>>0)<55296;
 var $sub=((($wc)-(57344))|0);
 var $cmp11=($sub>>>0)<8192;
 var $or_cond=$cmp9|$cmp11;
 if($or_cond){label=7;break;}else{label=8;break;}
 case 7: 
 var $shr1426=$wc>>>12;
 var $or15=$shr1426|224;
 var $conv16=(($or15)&255);
 var $incdec_ptr17=(($s+1)|0);
 HEAP8[($s)]=$conv16;
 var $shr1827=$wc>>>6;
 var $and19=$shr1827&63;
 var $or20=$and19|128;
 var $conv21=(($or20)&255);
 var $incdec_ptr22=(($s+2)|0);
 HEAP8[($incdec_ptr17)]=$conv21;
 var $and23=$wc&63;
 var $or24=$and23|128;
 var $conv25=(($or24)&255);
 HEAP8[($incdec_ptr22)]=$conv25;
 var $retval_0=3;label=11;break;
 case 8: 
 var $sub27=((($wc)-(65536))|0);
 var $cmp28=($sub27>>>0)<1048576;
 if($cmp28){label=9;break;}else{label=10;break;}
 case 9: 
 var $shr3123=$wc>>>18;
 var $or32=$shr3123|240;
 var $conv33=(($or32)&255);
 var $incdec_ptr34=(($s+1)|0);
 HEAP8[($s)]=$conv33;
 var $shr3524=$wc>>>12;
 var $and36=$shr3524&63;
 var $or37=$and36|128;
 var $conv38=(($or37)&255);
 var $incdec_ptr39=(($s+2)|0);
 HEAP8[($incdec_ptr34)]=$conv38;
 var $shr4025=$wc>>>6;
 var $and41=$shr4025&63;
 var $or42=$and41|128;
 var $conv43=(($or42)&255);
 var $incdec_ptr44=(($s+3)|0);
 HEAP8[($incdec_ptr39)]=$conv43;
 var $and45=$wc&63;
 var $or46=$and45|128;
 var $conv47=(($or46)&255);
 HEAP8[($incdec_ptr44)]=$conv47;
 var $retval_0=4;label=11;break;
 case 10: 
 var $call=___errno_location();
 HEAP32[(($call)>>2)]=84;
 var $retval_0=-1;label=11;break;
 case 11: 
 var $retval_0;
 return $retval_0;
  default: assert(0, "bad label: " + label);
 }
}
function _wcsnrtombs($dst,$wcs,$wn,$n,$st){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+264)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $buf=sp;
 var $ws=(sp)+(256);
 var $0=HEAP32[(($wcs)>>2)];
 HEAP32[(($ws)>>2)]=$0;
 var $tobool=($dst|0)!=0;
 var $arraydecay=(($buf)|0);
 var $n_addr_0_ph=($tobool?$n:256);
 var $s_0_ph=($tobool?$dst:$arraydecay);
 var $tobool148=($0|0)==0;
 var $tobool249=($n_addr_0_ph|0)==0;
 var $or_cond50=$tobool148|$tobool249;
 if($or_cond50){var $cnt_1=0;var $wn_addr_1=$wn;var $n_addr_2=$n_addr_0_ph;var $s_046=$s_0_ph;var $2=$0;label=9;break;}else{label=2;break;}
 case 2: 
 var $arraydecay10=(($buf)|0);
 var $n_addr_051=$n_addr_0_ph;var $wn_addr_052=$wn;var $cnt_053=0;var $s_054=$s_0_ph;var $_pr65=$0;label=3;break;
 case 3: 
 var $_pr65;
 var $s_054;
 var $cnt_053;
 var $wn_addr_052;
 var $n_addr_051;
 var $cmp=($wn_addr_052>>>0)>=($n_addr_051>>>0);
 var $cmp3=($wn_addr_052>>>0)>32;
 var $or_cond32=$cmp|$cmp3;
 if($or_cond32){label=4;break;}else{var $cnt_1=$cnt_053;var $wn_addr_1=$wn_addr_052;var $n_addr_2=$n_addr_051;var $s_046=$s_054;var $2=$_pr65;label=9;break;}
 case 4: 
 var $n_addr_0_wn_addr_0=($cmp?$n_addr_051:$wn_addr_052);
 var $sub=((($wn_addr_052)-($n_addr_0_wn_addr_0))|0);
 var $call=_wcsrtombs($s_054,$ws,$n_addr_0_wn_addr_0,0);
 var $tobool7=($call|0)==-1;
 if($tobool7){label=5;break;}else{label=6;break;}
 case 5: 
 var $_pr_pre=HEAP32[(($ws)>>2)];
 var $cnt_1=-1;var $wn_addr_1=$sub;var $n_addr_2=0;var $s_046=$s_054;var $2=$_pr_pre;label=9;break;
 case 6: 
 var $cmp11=($s_054|0)==($arraydecay10|0);
 if($cmp11){var $s_1=$arraydecay10;var $n_addr_1=$n_addr_051;label=8;break;}else{label=7;break;}
 case 7: 
 var $add_ptr=(($s_054+$call)|0);
 var $sub13=((($n_addr_051)-($call))|0);
 var $s_1=$add_ptr;var $n_addr_1=$sub13;label=8;break;
 case 8: 
 var $n_addr_1;
 var $s_1;
 var $add15=((($call)+($cnt_053))|0);
 var $1=HEAP32[(($ws)>>2)];
 var $tobool1=($1|0)==0;
 var $tobool2=($n_addr_1|0)==0;
 var $or_cond=$tobool1|$tobool2;
 if($or_cond){var $cnt_1=$add15;var $wn_addr_1=$sub;var $n_addr_2=$n_addr_1;var $s_046=$s_1;var $2=$1;label=9;break;}else{var $n_addr_051=$n_addr_1;var $wn_addr_052=$sub;var $cnt_053=$add15;var $s_054=$s_1;var $_pr65=$1;label=3;break;}
 case 9: 
 var $2;
 var $s_046;
 var $n_addr_2;
 var $wn_addr_1;
 var $cnt_1;
 var $tobool16=($2|0)==0;
 if($tobool16){var $cnt_3=$cnt_1;label=15;break;}else{label=10;break;}
 case 10: 
 var $tobool1935=($n_addr_2|0)==0;
 var $tobool2136=($wn_addr_1|0)==0;
 var $or_cond3337=$tobool1935|$tobool2136;
 if($or_cond3337){var $cnt_3=$cnt_1;label=15;break;}else{var $n_addr_338=$n_addr_2;var $wn_addr_239=$wn_addr_1;var $cnt_240=$cnt_1;var $s_241=$s_046;var $3=$2;label=11;break;}
 case 11: 
 var $3;
 var $s_241;
 var $cnt_240;
 var $wn_addr_239;
 var $n_addr_338;
 var $4=HEAP32[(($3)>>2)];
 var $call24=_wcrtomb($s_241,$4,0);
 var $add25=((($call24)+(1))|0);
 var $cmp26=($add25>>>0)<2;
 if($cmp26){label=12;break;}else{label=14;break;}
 case 12: 
 var $tobool28=($call24|0)==0;
 if($tobool28){label=13;break;}else{var $cnt_3=-1;label=15;break;}
 case 13: 
 HEAP32[(($ws)>>2)]=0;
 var $cnt_3=$cnt_240;label=15;break;
 case 14: 
 var $5=HEAP32[(($ws)>>2)];
 var $incdec_ptr=(($5+4)|0);
 HEAP32[(($ws)>>2)]=$incdec_ptr;
 var $dec=((($wn_addr_239)-(1))|0);
 var $add_ptr33=(($s_241+$call24)|0);
 var $sub34=((($n_addr_338)-($call24))|0);
 var $inc=((($cnt_240)+(1))|0);
 var $tobool19=($n_addr_338|0)==($call24|0);
 var $tobool21=($dec|0)==0;
 var $or_cond33=$tobool19|$tobool21;
 if($or_cond33){var $cnt_3=$inc;label=15;break;}else{var $n_addr_338=$sub34;var $wn_addr_239=$dec;var $cnt_240=$inc;var $s_241=$add_ptr33;var $3=$incdec_ptr;label=11;break;}
 case 15: 
 var $cnt_3;
 if($tobool){label=16;break;}else{label=17;break;}
 case 16: 
 var $6=HEAP32[(($ws)>>2)];
 HEAP32[(($wcs)>>2)]=$6;
 label=17;break;
 case 17: 
 STACKTOP=sp;return $cnt_3;
  default: assert(0, "bad label: " + label);
 }
}
function _wcsrtombs($s,$ws,$n,$st){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+8)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $buf=sp;
 var $tobool=($s|0)==0;
 if($tobool){label=4;break;}else{label=2;break;}
 case 2: 
 var $cmp863=($n>>>0)>3;
 if($cmp863){label=3;break;}else{var $n_addr_2_lcssa=$n;var $s_addr_0_lcssa=$s;label=9;break;}
 case 3: 
 var $_pre79=HEAP32[(($ws)>>2)];
 var $n_addr_264=$n;var $s_addr_065=$s;var $4=$_pre79;label=8;break;
 case 4: 
 var $0=HEAP32[(($ws)>>2)];
 var $arraydecay=(($buf)|0);
 var $1=HEAP32[(($0)>>2)];
 var $tobool145=($1|0)==0;
 if($tobool145){var $retval_0=0;label=26;break;}else{var $n_addr_046=0;var $ws2_047=$0;var $2=$1;label=5;break;}
 case 5: 
 var $2;
 var $ws2_047;
 var $n_addr_046;
 var $cmp=($2>>>0)>127;
 if($cmp){label=6;break;}else{var $call_pn=1;label=7;break;}
 case 6: 
 var $call=_wcrtomb($arraydecay,$2,0);
 var $tobool3=($call|0)==-1;
 if($tobool3){var $retval_0=-1;label=26;break;}else{var $call_pn=$call;label=7;break;}
 case 7: 
 var $call_pn;
 var $n_addr_1=((($call_pn)+($n_addr_046))|0);
 var $incdec_ptr=(($ws2_047+4)|0);
 var $3=HEAP32[(($incdec_ptr)>>2)];
 var $tobool1=($3|0)==0;
 if($tobool1){var $retval_0=$n_addr_1;label=26;break;}else{var $n_addr_046=$n_addr_1;var $ws2_047=$incdec_ptr;var $2=$3;label=5;break;}
 case 8: 
 var $4;
 var $s_addr_065;
 var $n_addr_264;
 var $5=HEAP32[(($4)>>2)];
 var $tobool9=($5|0)==0;
 if($tobool9){var $n_addr_2_lcssa=$n_addr_264;var $s_addr_0_lcssa=$s_addr_065;label=9;break;}else{label=11;break;}
 case 9: 
 var $s_addr_0_lcssa;
 var $n_addr_2_lcssa;
 var $tobool2256=($n_addr_2_lcssa|0)==0;
 if($tobool2256){var $n_addr_452=0;label=25;break;}else{label=10;break;}
 case 10: 
 var $arraydecay30=(($buf)|0);
 var $_pre=HEAP32[(($ws)>>2)];
 var $n_addr_457=$n_addr_2_lcssa;var $s_addr_258=$s_addr_0_lcssa;var $7=$_pre;label=16;break;
 case 11: 
 var $cmp10=($5>>>0)>127;
 if($cmp10){label=12;break;}else{label=14;break;}
 case 12: 
 var $call12=_wcrtomb($s_addr_065,$5,0);
 var $tobool14=($call12|0)==-1;
 if($tobool14){var $retval_0=-1;label=26;break;}else{label=13;break;}
 case 13: 
 var $add_ptr=(($s_addr_065+$call12)|0);
 var $sub=((($n_addr_264)-($call12))|0);
 var $s_addr_1=$add_ptr;var $n_addr_3=$sub;var $6=$4;label=15;break;
 case 14: 
 var $conv=(($5)&255);
 var $incdec_ptr18=(($s_addr_065+1)|0);
 HEAP8[($s_addr_065)]=$conv;
 var $dec=((($n_addr_264)-(1))|0);
 var $_pre80=HEAP32[(($ws)>>2)];
 var $s_addr_1=$incdec_ptr18;var $n_addr_3=$dec;var $6=$_pre80;label=15;break;
 case 15: 
 var $6;
 var $n_addr_3;
 var $s_addr_1;
 var $incdec_ptr20=(($6+4)|0);
 HEAP32[(($ws)>>2)]=$incdec_ptr20;
 var $cmp8=($n_addr_3>>>0)>3;
 if($cmp8){var $n_addr_264=$n_addr_3;var $s_addr_065=$s_addr_1;var $4=$incdec_ptr20;label=8;break;}else{var $n_addr_2_lcssa=$n_addr_3;var $s_addr_0_lcssa=$s_addr_1;label=9;break;}
 case 16: 
 var $7;
 var $s_addr_258;
 var $n_addr_457;
 var $8=HEAP32[(($7)>>2)];
 var $tobool24=($8|0)==0;
 if($tobool24){label=24;break;}else{label=17;break;}
 case 17: 
 var $cmp27=($8>>>0)>127;
 if($cmp27){label=18;break;}else{label=22;break;}
 case 18: 
 var $call31=_wcrtomb($arraydecay30,$8,0);
 var $tobool33=($call31|0)==-1;
 if($tobool33){var $retval_0=-1;label=26;break;}else{label=19;break;}
 case 19: 
 var $cmp36=($call31>>>0)>($n_addr_457>>>0);
 if($cmp36){label=20;break;}else{label=21;break;}
 case 20: 
 var $sub39=((($n)-($n_addr_457))|0);
 var $retval_0=$sub39;label=26;break;
 case 21: 
 var $9=HEAP32[(($7)>>2)];
 var $call41=_wcrtomb($s_addr_258,$9,0);
 var $add_ptr42=(($s_addr_258+$call31)|0);
 var $sub43=((($n_addr_457)-($call31))|0);
 var $s_addr_3=$add_ptr42;var $n_addr_5=$sub43;var $10=$7;label=23;break;
 case 22: 
 var $conv45=(($8)&255);
 var $incdec_ptr46=(($s_addr_258+1)|0);
 HEAP8[($s_addr_258)]=$conv45;
 var $dec47=((($n_addr_457)-(1))|0);
 var $_pre78=HEAP32[(($ws)>>2)];
 var $s_addr_3=$incdec_ptr46;var $n_addr_5=$dec47;var $10=$_pre78;label=23;break;
 case 23: 
 var $10;
 var $n_addr_5;
 var $s_addr_3;
 var $incdec_ptr49=(($10+4)|0);
 HEAP32[(($ws)>>2)]=$incdec_ptr49;
 var $tobool22=($n_addr_5|0)==0;
 if($tobool22){var $n_addr_452=0;label=25;break;}else{var $n_addr_457=$n_addr_5;var $s_addr_258=$s_addr_3;var $7=$incdec_ptr49;label=16;break;}
 case 24: 
 HEAP8[($s_addr_258)]=0;
 var $n_addr_452=$n_addr_457;label=25;break;
 case 25: 
 var $n_addr_452;
 HEAP32[(($ws)>>2)]=0;
 var $sub54=((($n)-($n_addr_452))|0);
 var $retval_0=$sub54;label=26;break;
 case 26: 
 var $retval_0;
 STACKTOP=sp;return $retval_0;
  default: assert(0, "bad label: " + label);
 }
}
function _wcslen($s){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $s_addr_0=$s;label=2;break;
 case 2: 
 var $s_addr_0;
 var $0=HEAP32[(($s_addr_0)>>2)];
 var $tobool=($0|0)==0;
 var $incdec_ptr=(($s_addr_0+4)|0);
 if($tobool){label=3;break;}else{var $s_addr_0=$incdec_ptr;label=2;break;}
 case 3: 
 var $sub_ptr_lhs_cast=$s_addr_0;
 var $sub_ptr_rhs_cast=$s;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $sub_ptr_div=$sub_ptr_sub>>2;
 return $sub_ptr_div;
  default: assert(0, "bad label: " + label);
 }
}
function _wmemcpy($d,$s,$n){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $tobool2=($n|0)==0;
 if($tobool2){label=3;break;}else{var $s_addr_03=$s;var $n_addr_04=$n;var $d_addr_05=$d;label=2;break;}
 case 2: 
 var $d_addr_05;
 var $n_addr_04;
 var $s_addr_03;
 var $dec=((($n_addr_04)-(1))|0);
 var $incdec_ptr=(($s_addr_03+4)|0);
 var $0=HEAP32[(($s_addr_03)>>2)];
 var $incdec_ptr1=(($d_addr_05+4)|0);
 HEAP32[(($d_addr_05)>>2)]=$0;
 var $tobool=($dec|0)==0;
 if($tobool){label=3;break;}else{var $s_addr_03=$incdec_ptr;var $n_addr_04=$dec;var $d_addr_05=$incdec_ptr1;label=2;break;}
 case 3: 
 return $d;
  default: assert(0, "bad label: " + label);
 }
}
function _wmemmove($d,$s,$n){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $sub_ptr_lhs_cast=$d;
 var $sub_ptr_rhs_cast=$s;
 var $sub_ptr_sub=((($sub_ptr_lhs_cast)-($sub_ptr_rhs_cast))|0);
 var $sub_ptr_div=$sub_ptr_sub>>2;
 var $cmp=($sub_ptr_div>>>0)<($n>>>0);
 var $tobool11=($n|0)==0;
 if($cmp){label=3;break;}else{label=2;break;}
 case 2: 
 if($tobool11){label=6;break;}else{var $s_addr_015=$s;var $n_addr_116=$n;var $d_addr_017=$d;label=5;break;}
 case 3: 
 if($tobool11){label=6;break;}else{var $dec12_in=$n;label=4;break;}
 case 4: 
 var $dec12_in;
 var $dec12=((($dec12_in)-(1))|0);
 var $arrayidx=(($s+($dec12<<2))|0);
 var $0=HEAP32[(($arrayidx)>>2)];
 var $arrayidx1=(($d+($dec12<<2))|0);
 HEAP32[(($arrayidx1)>>2)]=$0;
 var $tobool=($dec12|0)==0;
 if($tobool){label=6;break;}else{var $dec12_in=$dec12;label=4;break;}
 case 5: 
 var $d_addr_017;
 var $n_addr_116;
 var $s_addr_015;
 var $dec3=((($n_addr_116)-(1))|0);
 var $incdec_ptr=(($s_addr_015+4)|0);
 var $1=HEAP32[(($s_addr_015)>>2)];
 var $incdec_ptr6=(($d_addr_017+4)|0);
 HEAP32[(($d_addr_017)>>2)]=$1;
 var $tobool4=($dec3|0)==0;
 if($tobool4){label=6;break;}else{var $s_addr_015=$incdec_ptr;var $n_addr_116=$dec3;var $d_addr_017=$incdec_ptr6;label=5;break;}
 case 6: 
 return $d;
  default: assert(0, "bad label: " + label);
 }
}
function _wmemset($d,$c,$n){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $tobool2=($n|0)==0;
 if($tobool2){label=3;break;}else{var $n_addr_03=$n;var $d_addr_04=$d;label=2;break;}
 case 2: 
 var $d_addr_04;
 var $n_addr_03;
 var $dec=((($n_addr_03)-(1))|0);
 var $incdec_ptr=(($d_addr_04+4)|0);
 HEAP32[(($d_addr_04)>>2)]=$c;
 var $tobool=($dec|0)==0;
 if($tobool){label=3;break;}else{var $n_addr_03=$dec;var $d_addr_04=$incdec_ptr;label=2;break;}
 case 3: 
 return $d;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNSt9type_infoD2Ev($this){
 var label=0;
 return;
}
function __ZNSt8bad_castC2Ev($this){
 var label=0;
 var $0=(($this)|0);
 HEAP32[(($0)>>2)]=4200;
 return;
}
function __ZNSt8bad_castD0Ev($this){
 var label=0;
 var $0=$this;
 __ZdlPv($0);
 return;
}
function __ZNSt8bad_castD2Ev($this){
 var label=0;
 return;
}
function __ZNKSt8bad_cast4whatEv($this){
 var label=0;
 return 2568;
}
function __ZN10__cxxabiv116__shim_type_infoD2Ev($this){
 var label=0;
 var $0=(($this)|0);
 __ZNSt9type_infoD2Ev($0);
 return;
}
function __ZNK10__cxxabiv116__shim_type_info5noop1Ev($this){
 var label=0;
 return;
}
function __ZNK10__cxxabiv116__shim_type_info5noop2Ev($this){
 var label=0;
 return;
}
function __ZN10__cxxabiv117__class_type_infoD0Ev($this){
 var label=0;
 var $0=(($this)|0);
 __ZNSt9type_infoD2Ev($0);
 var $1=$this;
 __ZdlPv($1);
 return;
}
function __ZN10__cxxabiv120__si_class_type_infoD0Ev($this){
 var label=0;
 var $0=(($this)|0);
 __ZNSt9type_infoD2Ev($0);
 var $1=$this;
 __ZdlPv($1);
 return;
}
function __ZN10__cxxabiv121__vmi_class_type_infoD0Ev($this){
 var label=0;
 var $0=(($this)|0);
 __ZNSt9type_infoD2Ev($0);
 var $1=$this;
 __ZdlPv($1);
 return;
}
function __ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv($this,$thrown_type,$adjustedPtr){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+56)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $info=sp;
 var $0=(($this)|0);
 var $1=(($thrown_type)|0);
 var $cmp_i=($0|0)==($1|0);
 if($cmp_i){var $retval_0=1;label=6;break;}else{label=2;break;}
 case 2: 
 var $2=($thrown_type|0)==0;
 if($2){var $retval_0=0;label=6;break;}else{label=3;break;}
 case 3: 
 var $3=$thrown_type;
 var $4=___dynamic_cast($3,11792,11776,-1);
 var $5=$4;
 var $cmp=($4|0)==0;
 if($cmp){var $retval_0=0;label=6;break;}else{label=4;break;}
 case 4: 
 var $6=$info;
 _memset($6, 0, 56)|0;
 var $dst_type=(($info)|0);
 HEAP32[(($dst_type)>>2)]=$5;
 var $static_type=(($info+8)|0);
 HEAP32[(($static_type)>>2)]=$this;
 var $src2dst_offset=(($info+12)|0);
 HEAP32[(($src2dst_offset)>>2)]=-1;
 var $number_of_dst_type=(($info+48)|0);
 HEAP32[(($number_of_dst_type)>>2)]=1;
 var $7=$4;
 var $vtable=HEAP32[(($7)>>2)];
 var $vfn=(($vtable+28)|0);
 var $8=HEAP32[(($vfn)>>2)];
 var $9=HEAP32[(($adjustedPtr)>>2)];
 FUNCTION_TABLE[$8]($5,$info,$9,1);
 var $path_dst_ptr_to_static_ptr=(($info+24)|0);
 var $10=HEAP32[(($path_dst_ptr_to_static_ptr)>>2)];
 var $cmp4=($10|0)==1;
 if($cmp4){label=5;break;}else{var $retval_0=0;label=6;break;}
 case 5: 
 var $dst_ptr_leading_to_static_ptr=(($info+16)|0);
 var $11=HEAP32[(($dst_ptr_leading_to_static_ptr)>>2)];
 HEAP32[(($adjustedPtr)>>2)]=$11;
 var $retval_0=1;label=6;break;
 case 6: 
 var $retval_0;
 STACKTOP=sp;return $retval_0;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $static_type=(($info+8)|0);
 var $0=HEAP32[(($static_type)>>2)];
 var $cmp_i=($0|0)==($this|0);
 if($cmp_i){label=2;break;}else{label=8;break;}
 case 2: 
 var $dst_ptr_leading_to_static_ptr_i=(($info+16)|0);
 var $1=HEAP32[(($dst_ptr_leading_to_static_ptr_i)>>2)];
 var $cmp_i2=($1|0)==0;
 if($cmp_i2){label=3;break;}else{label=4;break;}
 case 3: 
 HEAP32[(($dst_ptr_leading_to_static_ptr_i)>>2)]=$adjustedPtr;
 var $path_dst_ptr_to_static_ptr_i=(($info+24)|0);
 HEAP32[(($path_dst_ptr_to_static_ptr_i)>>2)]=$path_below;
 var $number_to_static_ptr_i=(($info+36)|0);
 HEAP32[(($number_to_static_ptr_i)>>2)]=1;
 label=8;break;
 case 4: 
 var $cmp4_i=($1|0)==($adjustedPtr|0);
 if($cmp4_i){label=5;break;}else{label=7;break;}
 case 5: 
 var $path_dst_ptr_to_static_ptr6_i=(($info+24)|0);
 var $2=HEAP32[(($path_dst_ptr_to_static_ptr6_i)>>2)];
 var $cmp7_i=($2|0)==2;
 if($cmp7_i){label=6;break;}else{label=8;break;}
 case 6: 
 HEAP32[(($path_dst_ptr_to_static_ptr6_i)>>2)]=$path_below;
 label=8;break;
 case 7: 
 var $number_to_static_ptr11_i=(($info+36)|0);
 var $3=HEAP32[(($number_to_static_ptr11_i)>>2)];
 var $add_i=((($3)+(1))|0);
 HEAP32[(($number_to_static_ptr11_i)>>2)]=$add_i;
 var $path_dst_ptr_to_static_ptr12_i=(($info+24)|0);
 HEAP32[(($path_dst_ptr_to_static_ptr12_i)>>2)]=2;
 var $search_done_i=(($info+54)|0);
 HEAP8[($search_done_i)]=1;
 label=8;break;
 case 8: 
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $0=(($this)|0);
 var $static_type=(($info+8)|0);
 var $1=HEAP32[(($static_type)>>2)];
 var $2=(($1)|0);
 var $cmp_i=($0|0)==($2|0);
 if($cmp_i){label=2;break;}else{label=8;break;}
 case 2: 
 var $dst_ptr_leading_to_static_ptr_i=(($info+16)|0);
 var $3=HEAP32[(($dst_ptr_leading_to_static_ptr_i)>>2)];
 var $cmp_i5=($3|0)==0;
 if($cmp_i5){label=3;break;}else{label=4;break;}
 case 3: 
 HEAP32[(($dst_ptr_leading_to_static_ptr_i)>>2)]=$adjustedPtr;
 var $path_dst_ptr_to_static_ptr_i=(($info+24)|0);
 HEAP32[(($path_dst_ptr_to_static_ptr_i)>>2)]=$path_below;
 var $number_to_static_ptr_i=(($info+36)|0);
 HEAP32[(($number_to_static_ptr_i)>>2)]=1;
 label=9;break;
 case 4: 
 var $cmp4_i=($3|0)==($adjustedPtr|0);
 if($cmp4_i){label=5;break;}else{label=7;break;}
 case 5: 
 var $path_dst_ptr_to_static_ptr6_i=(($info+24)|0);
 var $4=HEAP32[(($path_dst_ptr_to_static_ptr6_i)>>2)];
 var $cmp7_i=($4|0)==2;
 if($cmp7_i){label=6;break;}else{label=9;break;}
 case 6: 
 HEAP32[(($path_dst_ptr_to_static_ptr6_i)>>2)]=$path_below;
 label=9;break;
 case 7: 
 var $number_to_static_ptr11_i=(($info+36)|0);
 var $5=HEAP32[(($number_to_static_ptr11_i)>>2)];
 var $add_i=((($5)+(1))|0);
 HEAP32[(($number_to_static_ptr11_i)>>2)]=$add_i;
 var $path_dst_ptr_to_static_ptr12_i=(($info+24)|0);
 HEAP32[(($path_dst_ptr_to_static_ptr12_i)>>2)]=2;
 var $search_done_i=(($info+54)|0);
 HEAP8[($search_done_i)]=1;
 label=9;break;
 case 8: 
 var $__base_type=(($this+8)|0);
 var $6=HEAP32[(($__base_type)>>2)];
 var $7=$6;
 var $vtable=HEAP32[(($7)>>2)];
 var $vfn=(($vtable+28)|0);
 var $8=HEAP32[(($vfn)>>2)];
 FUNCTION_TABLE[$8]($6,$info,$adjustedPtr,$path_below);
 label=9;break;
 case 9: 
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $0=(($this)|0);
 var $static_type=(($info+8)|0);
 var $1=HEAP32[(($static_type)>>2)];
 var $2=(($1)|0);
 var $cmp_i=($0|0)==($2|0);
 if($cmp_i){label=2;break;}else{label=8;break;}
 case 2: 
 var $dst_ptr_leading_to_static_ptr_i=(($info+16)|0);
 var $3=HEAP32[(($dst_ptr_leading_to_static_ptr_i)>>2)];
 var $cmp_i13=($3|0)==0;
 if($cmp_i13){label=3;break;}else{label=4;break;}
 case 3: 
 HEAP32[(($dst_ptr_leading_to_static_ptr_i)>>2)]=$adjustedPtr;
 var $path_dst_ptr_to_static_ptr_i=(($info+24)|0);
 HEAP32[(($path_dst_ptr_to_static_ptr_i)>>2)]=$path_below;
 var $number_to_static_ptr_i=(($info+36)|0);
 HEAP32[(($number_to_static_ptr_i)>>2)]=1;
 label=16;break;
 case 4: 
 var $cmp4_i=($3|0)==($adjustedPtr|0);
 if($cmp4_i){label=5;break;}else{label=7;break;}
 case 5: 
 var $path_dst_ptr_to_static_ptr6_i=(($info+24)|0);
 var $4=HEAP32[(($path_dst_ptr_to_static_ptr6_i)>>2)];
 var $cmp7_i=($4|0)==2;
 if($cmp7_i){label=6;break;}else{label=16;break;}
 case 6: 
 HEAP32[(($path_dst_ptr_to_static_ptr6_i)>>2)]=$path_below;
 label=16;break;
 case 7: 
 var $number_to_static_ptr11_i=(($info+36)|0);
 var $5=HEAP32[(($number_to_static_ptr11_i)>>2)];
 var $add_i=((($5)+(1))|0);
 HEAP32[(($number_to_static_ptr11_i)>>2)]=$add_i;
 var $path_dst_ptr_to_static_ptr12_i=(($info+24)|0);
 HEAP32[(($path_dst_ptr_to_static_ptr12_i)>>2)]=2;
 var $search_done_i=(($info+54)|0);
 HEAP8[($search_done_i)]=1;
 label=16;break;
 case 8: 
 var $__base_count=(($this+12)|0);
 var $6=HEAP32[(($__base_count)>>2)];
 var $add_ptr=(($this+16+($6<<3))|0);
 var $__offset_flags_i15=(($this+20)|0);
 var $7=HEAP32[(($__offset_flags_i15)>>2)];
 var $shr_i16=$7>>8;
 var $and_i17=$7&1;
 var $tobool_i18=($and_i17|0)==0;
 if($tobool_i18){var $offset_to_base_0_i21=$shr_i16;label=10;break;}else{label=9;break;}
 case 9: 
 var $8=$adjustedPtr;
 var $9=HEAP32[(($8)>>2)];
 var $add_ptr_i19=(($9+$shr_i16)|0);
 var $10=$add_ptr_i19;
 var $11=HEAP32[(($10)>>2)];
 var $offset_to_base_0_i21=$11;label=10;break;
 case 10: 
 var $offset_to_base_0_i21;
 var $__base_type_i22=(($this+16)|0);
 var $12=HEAP32[(($__base_type_i22)>>2)];
 var $13=$12;
 var $vtable3_i23=HEAP32[(($13)>>2)];
 var $vfn_i24=(($vtable3_i23+28)|0);
 var $14=HEAP32[(($vfn_i24)>>2)];
 var $add_ptr4_i25=(($adjustedPtr+$offset_to_base_0_i21)|0);
 var $and6_i26=$7&2;
 var $tobool7_i27=($and6_i26|0)!=0;
 var $cond_i28=($tobool7_i27?$path_below:2);
 FUNCTION_TABLE[$14]($12,$info,$add_ptr4_i25,$cond_i28);
 var $cmp=($6|0)>1;
 if($cmp){label=11;break;}else{label=16;break;}
 case 11: 
 var $incdec_ptr=(($this+24)|0);
 var $search_done=(($info+54)|0);
 var $15=$adjustedPtr;
 var $p_0=$incdec_ptr;label=12;break;
 case 12: 
 var $p_0;
 var $__offset_flags_i=(($p_0+4)|0);
 var $16=HEAP32[(($__offset_flags_i)>>2)];
 var $shr_i=$16>>8;
 var $and_i=$16&1;
 var $tobool_i=($and_i|0)==0;
 if($tobool_i){var $offset_to_base_0_i=$shr_i;label=14;break;}else{label=13;break;}
 case 13: 
 var $17=HEAP32[(($15)>>2)];
 var $add_ptr_i=(($17+$shr_i)|0);
 var $18=$add_ptr_i;
 var $19=HEAP32[(($18)>>2)];
 var $offset_to_base_0_i=$19;label=14;break;
 case 14: 
 var $offset_to_base_0_i;
 var $__base_type_i=(($p_0)|0);
 var $20=HEAP32[(($__base_type_i)>>2)];
 var $21=$20;
 var $vtable3_i=HEAP32[(($21)>>2)];
 var $vfn_i=(($vtable3_i+28)|0);
 var $22=HEAP32[(($vfn_i)>>2)];
 var $add_ptr4_i=(($adjustedPtr+$offset_to_base_0_i)|0);
 var $and6_i=$16&2;
 var $tobool7_i=($and6_i|0)!=0;
 var $cond_i=($tobool7_i?$path_below:2);
 FUNCTION_TABLE[$22]($20,$info,$add_ptr4_i,$cond_i);
 var $23=HEAP8[($search_done)];
 var $24=$23&1;
 var $tobool=(($24<<24)>>24)==0;
 if($tobool){label=15;break;}else{label=16;break;}
 case 15: 
 var $incdec_ptr6=(($p_0+8)|0);
 var $cmp7=($incdec_ptr6>>>0)<($add_ptr>>>0);
 if($cmp7){var $p_0=$incdec_ptr6;label=12;break;}else{label=16;break;}
 case 16: 
 return;
  default: assert(0, "bad label: " + label);
 }
}
function ___dynamic_cast($static_ptr,$static_type,$dst_type,$src2dst_offset){
 var label=0;
 var sp=STACKTOP;STACKTOP=(STACKTOP+56)|0; (assert((STACKTOP|0) < (STACK_MAX|0))|0);
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $info=sp;
 var $0=$static_ptr;
 var $1=HEAP32[(($0)>>2)];
 var $arrayidx=((($1)-(8))|0);
 var $2=HEAP32[(($arrayidx)>>2)];
 var $3=$2;
 var $add_ptr=(($static_ptr+$3)|0);
 var $arrayidx1=((($1)-(4))|0);
 var $4=HEAP32[(($arrayidx1)>>2)];
 var $5=$4;
 var $dst_type2=(($info)|0);
 HEAP32[(($dst_type2)>>2)]=$dst_type;
 var $static_ptr3=(($info+4)|0);
 HEAP32[(($static_ptr3)>>2)]=$static_ptr;
 var $static_type4=(($info+8)|0);
 HEAP32[(($static_type4)>>2)]=$static_type;
 var $src2dst_offset5=(($info+12)|0);
 HEAP32[(($src2dst_offset5)>>2)]=$src2dst_offset;
 var $dst_ptr_leading_to_static_ptr=(($info+16)|0);
 var $dst_ptr_not_leading_to_static_ptr=(($info+20)|0);
 var $path_dst_ptr_to_static_ptr=(($info+24)|0);
 var $path_dynamic_ptr_to_static_ptr=(($info+28)|0);
 var $path_dynamic_ptr_to_dst_ptr=(($info+32)|0);
 var $number_to_dst_ptr=(($info+40)|0);
 var $6=$4;
 var $7=(($dst_type)|0);
 var $cmp_i=($6|0)==($7|0);
 var $8=$dst_ptr_leading_to_static_ptr;
 _memset($8, 0, 39)|0;
 if($cmp_i){label=2;break;}else{label=3;break;}
 case 2: 
 var $number_of_dst_type=(($info+48)|0);
 HEAP32[(($number_of_dst_type)>>2)]=1;
 var $9=$4;
 var $vtable7=HEAP32[(($9)>>2)];
 var $vfn=(($vtable7+20)|0);
 var $10=HEAP32[(($vfn)>>2)];
 FUNCTION_TABLE[$10]($5,$info,$add_ptr,$add_ptr,1,0);
 var $11=HEAP32[(($path_dst_ptr_to_static_ptr)>>2)];
 var $cmp=($11|0)==1;
 var $add_ptr_=($cmp?$add_ptr:0);
 STACKTOP=sp;return $add_ptr_;
 case 3: 
 var $number_to_static_ptr=(($info+36)|0);
 var $12=$4;
 var $vtable10=HEAP32[(($12)>>2)];
 var $vfn11=(($vtable10+24)|0);
 var $13=HEAP32[(($vfn11)>>2)];
 FUNCTION_TABLE[$13]($5,$info,$add_ptr,1,0);
 var $14=HEAP32[(($number_to_static_ptr)>>2)];
 if(($14|0)==0){ label=4;break;}else if(($14|0)==1){ label=7;break;}else{var $dst_ptr_0=0;label=12;break;}
 case 4: 
 var $15=HEAP32[(($number_to_dst_ptr)>>2)];
 var $cmp14=($15|0)==1;
 if($cmp14){label=5;break;}else{var $dst_ptr_0=0;label=12;break;}
 case 5: 
 var $16=HEAP32[(($path_dynamic_ptr_to_static_ptr)>>2)];
 var $cmp16=($16|0)==1;
 if($cmp16){label=6;break;}else{var $dst_ptr_0=0;label=12;break;}
 case 6: 
 var $17=HEAP32[(($path_dynamic_ptr_to_dst_ptr)>>2)];
 var $cmp19=($17|0)==1;
 var $18=HEAP32[(($dst_ptr_not_leading_to_static_ptr)>>2)];
 var $_=($cmp19?$18:0);
 var $dst_ptr_0=$_;label=12;break;
 case 7: 
 var $19=HEAP32[(($path_dst_ptr_to_static_ptr)>>2)];
 var $cmp25=($19|0)==1;
 if($cmp25){label=11;break;}else{label=8;break;}
 case 8: 
 var $20=HEAP32[(($number_to_dst_ptr)>>2)];
 var $cmp27=($20|0)==0;
 if($cmp27){label=9;break;}else{var $dst_ptr_0=0;label=12;break;}
 case 9: 
 var $21=HEAP32[(($path_dynamic_ptr_to_static_ptr)>>2)];
 var $cmp30=($21|0)==1;
 if($cmp30){label=10;break;}else{var $dst_ptr_0=0;label=12;break;}
 case 10: 
 var $22=HEAP32[(($path_dynamic_ptr_to_dst_ptr)>>2)];
 var $cmp33=($22|0)==1;
 if($cmp33){label=11;break;}else{var $dst_ptr_0=0;label=12;break;}
 case 11: 
 var $23=HEAP32[(($dst_ptr_leading_to_static_ptr)>>2)];
 var $dst_ptr_0=$23;label=12;break;
 case 12: 
 var $dst_ptr_0;
 STACKTOP=sp;return $dst_ptr_0;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $0=(($this)|0);
 var $static_type=(($info+8)|0);
 var $1=HEAP32[(($static_type)>>2)];
 var $2=(($1)|0);
 var $cmp_i=($0|0)==($2|0);
 if($cmp_i){label=2;break;}else{label=5;break;}
 case 2: 
 var $static_ptr_i=(($info+4)|0);
 var $3=HEAP32[(($static_ptr_i)>>2)];
 var $cmp_i73=($3|0)==($current_ptr|0);
 if($cmp_i73){label=3;break;}else{label=53;break;}
 case 3: 
 var $path_dynamic_ptr_to_static_ptr_i=(($info+28)|0);
 var $4=HEAP32[(($path_dynamic_ptr_to_static_ptr_i)>>2)];
 var $cmp2_i=($4|0)==1;
 if($cmp2_i){label=53;break;}else{label=4;break;}
 case 4: 
 HEAP32[(($path_dynamic_ptr_to_static_ptr_i)>>2)]=$path_below;
 label=53;break;
 case 5: 
 var $dst_type=(($info)|0);
 var $5=HEAP32[(($dst_type)>>2)];
 var $6=(($5)|0);
 var $cmp_i90=($0|0)==($6|0);
 if($cmp_i90){label=6;break;}else{label=29;break;}
 case 6: 
 var $dst_ptr_leading_to_static_ptr=(($info+16)|0);
 var $7=HEAP32[(($dst_ptr_leading_to_static_ptr)>>2)];
 var $cmp=($7|0)==($current_ptr|0);
 if($cmp){label=8;break;}else{label=7;break;}
 case 7: 
 var $dst_ptr_not_leading_to_static_ptr=(($info+20)|0);
 var $8=HEAP32[(($dst_ptr_not_leading_to_static_ptr)>>2)];
 var $cmp5=($8|0)==($current_ptr|0);
 if($cmp5){label=8;break;}else{label=10;break;}
 case 8: 
 var $cmp7=($path_below|0)==1;
 if($cmp7){label=9;break;}else{label=53;break;}
 case 9: 
 var $path_dynamic_ptr_to_dst_ptr=(($info+32)|0);
 HEAP32[(($path_dynamic_ptr_to_dst_ptr)>>2)]=1;
 label=53;break;
 case 10: 
 var $path_dynamic_ptr_to_dst_ptr10=(($info+32)|0);
 HEAP32[(($path_dynamic_ptr_to_dst_ptr10)>>2)]=$path_below;
 var $is_dst_type_derived_from_static_type=(($info+44)|0);
 var $9=HEAP32[(($is_dst_type_derived_from_static_type)>>2)];
 var $cmp11=($9|0)==4;
 if($cmp11){label=53;break;}else{label=11;break;}
 case 11: 
 var $__base_count=(($this+12)|0);
 var $10=HEAP32[(($__base_count)>>2)];
 var $add_ptr=(($this+16+($10<<3))|0);
 var $cmp16137=($10|0)>0;
 if($cmp16137){label=12;break;}else{var $is_dst_type_derived_from_static_type13_2_off0146=0;label=23;break;}
 case 12: 
 var $arraydecay=(($this+16)|0);
 var $found_our_static_ptr=(($info+52)|0);
 var $found_any_static_type=(($info+53)|0);
 var $search_done=(($info+54)|0);
 var $__flags34=(($this+8)|0);
 var $path_dst_ptr_to_static_ptr=(($info+24)|0);
 var $11=$current_ptr;
 var $does_dst_type_point_to_our_static_type_0_off0138=0;var $p_0139=$arraydecay;var $is_dst_type_derived_from_static_type13_0_off0140=0;label=13;break;
 case 13: 
 var $is_dst_type_derived_from_static_type13_0_off0140;
 var $p_0139;
 var $does_dst_type_point_to_our_static_type_0_off0138;
 HEAP8[($found_our_static_ptr)]=0;
 HEAP8[($found_any_static_type)]=0;
 var $__offset_flags_i106=(($p_0139+4)|0);
 var $12=HEAP32[(($__offset_flags_i106)>>2)];
 var $shr_i107=$12>>8;
 var $and_i108=$12&1;
 var $tobool_i109=($and_i108|0)==0;
 if($tobool_i109){var $offset_to_base_0_i112=$shr_i107;label=15;break;}else{label=14;break;}
 case 14: 
 var $13=HEAP32[(($11)>>2)];
 var $add_ptr_i110=(($13+$shr_i107)|0);
 var $14=$add_ptr_i110;
 var $15=HEAP32[(($14)>>2)];
 var $offset_to_base_0_i112=$15;label=15;break;
 case 15: 
 var $offset_to_base_0_i112;
 var $__base_type_i113=(($p_0139)|0);
 var $16=HEAP32[(($__base_type_i113)>>2)];
 var $17=$16;
 var $vtable3_i114=HEAP32[(($17)>>2)];
 var $vfn_i115=(($vtable3_i114+20)|0);
 var $18=HEAP32[(($vfn_i115)>>2)];
 var $add_ptr4_i116=(($current_ptr+$offset_to_base_0_i112)|0);
 var $and6_i117=$12>>>1;
 var $19=$and6_i117&1;
 var $20=(((2)-($19))|0);
 FUNCTION_TABLE[$18]($16,$info,$current_ptr,$add_ptr4_i116,$20,$use_strcmp);
 var $21=HEAP8[($search_done)];
 var $22=$21&1;
 var $tobool18=(($22<<24)>>24)==0;
 if($tobool18){label=16;break;}else{var $is_dst_type_derived_from_static_type13_2_off0=$is_dst_type_derived_from_static_type13_0_off0140;var $does_dst_type_point_to_our_static_type_0_off0_lcssa=$does_dst_type_point_to_our_static_type_0_off0138;label=22;break;}
 case 16: 
 var $23=HEAP8[($found_any_static_type)];
 var $24=$23&1;
 var $tobool22=(($24<<24)>>24)==0;
 if($tobool22){var $is_dst_type_derived_from_static_type13_1_off0=$is_dst_type_derived_from_static_type13_0_off0140;var $does_dst_type_point_to_our_static_type_1_off0=$does_dst_type_point_to_our_static_type_0_off0138;label=21;break;}else{label=17;break;}
 case 17: 
 var $25=HEAP8[($found_our_static_ptr)];
 var $26=$25&1;
 var $tobool25=(($26<<24)>>24)==0;
 if($tobool25){label=20;break;}else{label=18;break;}
 case 18: 
 var $27=HEAP32[(($path_dst_ptr_to_static_ptr)>>2)];
 var $cmp27=($27|0)==1;
 if($cmp27){label=27;break;}else{label=19;break;}
 case 19: 
 var $28=HEAP32[(($__flags34)>>2)];
 var $and=$28&2;
 var $tobool30=($and|0)==0;
 if($tobool30){label=27;break;}else{var $is_dst_type_derived_from_static_type13_1_off0=1;var $does_dst_type_point_to_our_static_type_1_off0=1;label=21;break;}
 case 20: 
 var $29=HEAP32[(($__flags34)>>2)];
 var $and35=$29&1;
 var $tobool36=($and35|0)==0;
 if($tobool36){var $is_dst_type_derived_from_static_type13_2_off0=1;var $does_dst_type_point_to_our_static_type_0_off0_lcssa=$does_dst_type_point_to_our_static_type_0_off0138;label=22;break;}else{var $is_dst_type_derived_from_static_type13_1_off0=1;var $does_dst_type_point_to_our_static_type_1_off0=$does_dst_type_point_to_our_static_type_0_off0138;label=21;break;}
 case 21: 
 var $does_dst_type_point_to_our_static_type_1_off0;
 var $is_dst_type_derived_from_static_type13_1_off0;
 var $incdec_ptr=(($p_0139+8)|0);
 var $cmp16=($incdec_ptr>>>0)<($add_ptr>>>0);
 if($cmp16){var $does_dst_type_point_to_our_static_type_0_off0138=$does_dst_type_point_to_our_static_type_1_off0;var $p_0139=$incdec_ptr;var $is_dst_type_derived_from_static_type13_0_off0140=$is_dst_type_derived_from_static_type13_1_off0;label=13;break;}else{var $is_dst_type_derived_from_static_type13_2_off0=$is_dst_type_derived_from_static_type13_1_off0;var $does_dst_type_point_to_our_static_type_0_off0_lcssa=$does_dst_type_point_to_our_static_type_1_off0;label=22;break;}
 case 22: 
 var $does_dst_type_point_to_our_static_type_0_off0_lcssa;
 var $is_dst_type_derived_from_static_type13_2_off0;
 if($does_dst_type_point_to_our_static_type_0_off0_lcssa){var $is_dst_type_derived_from_static_type13_2_off0147=$is_dst_type_derived_from_static_type13_2_off0;label=26;break;}else{var $is_dst_type_derived_from_static_type13_2_off0146=$is_dst_type_derived_from_static_type13_2_off0;label=23;break;}
 case 23: 
 var $is_dst_type_derived_from_static_type13_2_off0146;
 HEAP32[(($dst_ptr_not_leading_to_static_ptr)>>2)]=$current_ptr;
 var $number_to_dst_ptr=(($info+40)|0);
 var $30=HEAP32[(($number_to_dst_ptr)>>2)];
 var $add=((($30)+(1))|0);
 HEAP32[(($number_to_dst_ptr)>>2)]=$add;
 var $number_to_static_ptr=(($info+36)|0);
 var $31=HEAP32[(($number_to_static_ptr)>>2)];
 var $cmp44=($31|0)==1;
 if($cmp44){label=24;break;}else{var $is_dst_type_derived_from_static_type13_2_off0147=$is_dst_type_derived_from_static_type13_2_off0146;label=26;break;}
 case 24: 
 var $path_dst_ptr_to_static_ptr45=(($info+24)|0);
 var $32=HEAP32[(($path_dst_ptr_to_static_ptr45)>>2)];
 var $cmp46=($32|0)==2;
 if($cmp46){label=25;break;}else{var $is_dst_type_derived_from_static_type13_2_off0147=$is_dst_type_derived_from_static_type13_2_off0146;label=26;break;}
 case 25: 
 var $search_done48=(($info+54)|0);
 HEAP8[($search_done48)]=1;
 if($is_dst_type_derived_from_static_type13_2_off0146){label=27;break;}else{label=28;break;}
 case 26: 
 var $is_dst_type_derived_from_static_type13_2_off0147;
 if($is_dst_type_derived_from_static_type13_2_off0147){label=27;break;}else{label=28;break;}
 case 27: 
 HEAP32[(($is_dst_type_derived_from_static_type)>>2)]=3;
 label=53;break;
 case 28: 
 HEAP32[(($is_dst_type_derived_from_static_type)>>2)]=4;
 label=53;break;
 case 29: 
 var $__base_count63=(($this+12)|0);
 var $33=HEAP32[(($__base_count63)>>2)];
 var $add_ptr64=(($this+16+($33<<3))|0);
 var $__offset_flags_i120=(($this+20)|0);
 var $34=HEAP32[(($__offset_flags_i120)>>2)];
 var $shr_i121=$34>>8;
 var $and_i122=$34&1;
 var $tobool_i123=($and_i122|0)==0;
 if($tobool_i123){var $offset_to_base_0_i126=$shr_i121;label=31;break;}else{label=30;break;}
 case 30: 
 var $35=$current_ptr;
 var $36=HEAP32[(($35)>>2)];
 var $add_ptr_i124=(($36+$shr_i121)|0);
 var $37=$add_ptr_i124;
 var $38=HEAP32[(($37)>>2)];
 var $offset_to_base_0_i126=$38;label=31;break;
 case 31: 
 var $offset_to_base_0_i126;
 var $__base_type_i127=(($this+16)|0);
 var $39=HEAP32[(($__base_type_i127)>>2)];
 var $40=$39;
 var $vtable3_i128=HEAP32[(($40)>>2)];
 var $vfn_i129=(($vtable3_i128+24)|0);
 var $41=HEAP32[(($vfn_i129)>>2)];
 var $add_ptr4_i130=(($current_ptr+$offset_to_base_0_i126)|0);
 var $and6_i131=$34&2;
 var $tobool7_i132=($and6_i131|0)!=0;
 var $cond_i133=($tobool7_i132?$path_below:2);
 FUNCTION_TABLE[$41]($39,$info,$add_ptr4_i130,$cond_i133,$use_strcmp);
 var $incdec_ptr69=(($this+24)|0);
 var $cmp70=($33|0)>1;
 if($cmp70){label=32;break;}else{label=53;break;}
 case 32: 
 var $__flags72=(($this+8)|0);
 var $42=HEAP32[(($__flags72)>>2)];
 var $and73=$42&2;
 var $tobool74=($and73|0)==0;
 if($tobool74){label=33;break;}else{label=34;break;}
 case 33: 
 var $number_to_static_ptr76=(($info+36)|0);
 var $43=HEAP32[(($number_to_static_ptr76)>>2)];
 var $cmp77=($43|0)==1;
 if($cmp77){label=34;break;}else{label=39;break;}
 case 34: 
 var $search_done79=(($info+54)|0);
 var $44=$current_ptr;
 var $p65_0=$incdec_ptr69;label=35;break;
 case 35: 
 var $p65_0;
 var $45=HEAP8[($search_done79)];
 var $46=$45&1;
 var $tobool80=(($46<<24)>>24)==0;
 if($tobool80){label=36;break;}else{label=53;break;}
 case 36: 
 var $__offset_flags_i91=(($p65_0+4)|0);
 var $47=HEAP32[(($__offset_flags_i91)>>2)];
 var $shr_i92=$47>>8;
 var $and_i93=$47&1;
 var $tobool_i94=($and_i93|0)==0;
 if($tobool_i94){var $offset_to_base_0_i97=$shr_i92;label=38;break;}else{label=37;break;}
 case 37: 
 var $48=HEAP32[(($44)>>2)];
 var $add_ptr_i95=(($48+$shr_i92)|0);
 var $49=$add_ptr_i95;
 var $50=HEAP32[(($49)>>2)];
 var $offset_to_base_0_i97=$50;label=38;break;
 case 38: 
 var $offset_to_base_0_i97;
 var $__base_type_i98=(($p65_0)|0);
 var $51=HEAP32[(($__base_type_i98)>>2)];
 var $52=$51;
 var $vtable3_i99=HEAP32[(($52)>>2)];
 var $vfn_i100=(($vtable3_i99+24)|0);
 var $53=HEAP32[(($vfn_i100)>>2)];
 var $add_ptr4_i101=(($current_ptr+$offset_to_base_0_i97)|0);
 var $and6_i102=$47&2;
 var $tobool7_i103=($and6_i102|0)!=0;
 var $cond_i104=($tobool7_i103?$path_below:2);
 FUNCTION_TABLE[$53]($51,$info,$add_ptr4_i101,$cond_i104,$use_strcmp);
 var $incdec_ptr84=(($p65_0+8)|0);
 var $cmp85=($incdec_ptr84>>>0)<($add_ptr64>>>0);
 if($cmp85){var $p65_0=$incdec_ptr84;label=35;break;}else{label=53;break;}
 case 39: 
 var $and88=$42&1;
 var $tobool89=($and88|0)==0;
 if($tobool89){label=41;break;}else{label=40;break;}
 case 40: 
 var $path_dst_ptr_to_static_ptr99=(($info+24)|0);
 var $search_done92=(($info+54)|0);
 var $54=$current_ptr;
 var $p65_1=$incdec_ptr69;label=42;break;
 case 41: 
 var $search_done110=(($info+54)|0);
 var $55=$current_ptr;
 var $p65_2=$incdec_ptr69;label=48;break;
 case 42: 
 var $p65_1;
 var $56=HEAP8[($search_done92)];
 var $57=$56&1;
 var $tobool93=(($57<<24)>>24)==0;
 if($tobool93){label=43;break;}else{label=53;break;}
 case 43: 
 var $58=HEAP32[(($number_to_static_ptr76)>>2)];
 var $cmp97=($58|0)==1;
 if($cmp97){label=44;break;}else{label=45;break;}
 case 44: 
 var $59=HEAP32[(($path_dst_ptr_to_static_ptr99)>>2)];
 var $cmp100=($59|0)==1;
 if($cmp100){label=53;break;}else{label=45;break;}
 case 45: 
 var $__offset_flags_i75=(($p65_1+4)|0);
 var $60=HEAP32[(($__offset_flags_i75)>>2)];
 var $shr_i76=$60>>8;
 var $and_i77=$60&1;
 var $tobool_i78=($and_i77|0)==0;
 if($tobool_i78){var $offset_to_base_0_i81=$shr_i76;label=47;break;}else{label=46;break;}
 case 46: 
 var $61=HEAP32[(($54)>>2)];
 var $add_ptr_i79=(($61+$shr_i76)|0);
 var $62=$add_ptr_i79;
 var $63=HEAP32[(($62)>>2)];
 var $offset_to_base_0_i81=$63;label=47;break;
 case 47: 
 var $offset_to_base_0_i81;
 var $__base_type_i82=(($p65_1)|0);
 var $64=HEAP32[(($__base_type_i82)>>2)];
 var $65=$64;
 var $vtable3_i83=HEAP32[(($65)>>2)];
 var $vfn_i84=(($vtable3_i83+24)|0);
 var $66=HEAP32[(($vfn_i84)>>2)];
 var $add_ptr4_i85=(($current_ptr+$offset_to_base_0_i81)|0);
 var $and6_i86=$60&2;
 var $tobool7_i87=($and6_i86|0)!=0;
 var $cond_i88=($tobool7_i87?$path_below:2);
 FUNCTION_TABLE[$66]($64,$info,$add_ptr4_i85,$cond_i88,$use_strcmp);
 var $incdec_ptr105=(($p65_1+8)|0);
 var $cmp106=($incdec_ptr105>>>0)<($add_ptr64>>>0);
 if($cmp106){var $p65_1=$incdec_ptr105;label=42;break;}else{label=53;break;}
 case 48: 
 var $p65_2;
 var $67=HEAP8[($search_done110)];
 var $68=$67&1;
 var $tobool111=(($68<<24)>>24)==0;
 if($tobool111){label=49;break;}else{label=53;break;}
 case 49: 
 var $69=HEAP32[(($number_to_static_ptr76)>>2)];
 var $cmp115=($69|0)==1;
 if($cmp115){label=53;break;}else{label=50;break;}
 case 50: 
 var $__offset_flags_i=(($p65_2+4)|0);
 var $70=HEAP32[(($__offset_flags_i)>>2)];
 var $shr_i=$70>>8;
 var $and_i=$70&1;
 var $tobool_i=($and_i|0)==0;
 if($tobool_i){var $offset_to_base_0_i=$shr_i;label=52;break;}else{label=51;break;}
 case 51: 
 var $71=HEAP32[(($55)>>2)];
 var $add_ptr_i=(($71+$shr_i)|0);
 var $72=$add_ptr_i;
 var $73=HEAP32[(($72)>>2)];
 var $offset_to_base_0_i=$73;label=52;break;
 case 52: 
 var $offset_to_base_0_i;
 var $__base_type_i=(($p65_2)|0);
 var $74=HEAP32[(($__base_type_i)>>2)];
 var $75=$74;
 var $vtable3_i=HEAP32[(($75)>>2)];
 var $vfn_i=(($vtable3_i+24)|0);
 var $76=HEAP32[(($vfn_i)>>2)];
 var $add_ptr4_i=(($current_ptr+$offset_to_base_0_i)|0);
 var $and6_i=$70&2;
 var $tobool7_i=($and6_i|0)!=0;
 var $cond_i=($tobool7_i?$path_below:2);
 FUNCTION_TABLE[$76]($74,$info,$add_ptr4_i,$cond_i,$use_strcmp);
 var $incdec_ptr120=(($p65_2+8)|0);
 var $cmp121=($incdec_ptr120>>>0)<($add_ptr64>>>0);
 if($cmp121){var $p65_2=$incdec_ptr120;label=48;break;}else{label=53;break;}
 case 53: 
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $0=(($this)|0);
 var $static_type=(($info+8)|0);
 var $1=HEAP32[(($static_type)>>2)];
 var $2=(($1)|0);
 var $cmp_i=($0|0)==($2|0);
 if($cmp_i){label=2;break;}else{label=5;break;}
 case 2: 
 var $static_ptr_i=(($info+4)|0);
 var $3=HEAP32[(($static_ptr_i)>>2)];
 var $cmp_i32=($3|0)==($current_ptr|0);
 if($cmp_i32){label=3;break;}else{label=20;break;}
 case 3: 
 var $path_dynamic_ptr_to_static_ptr_i=(($info+28)|0);
 var $4=HEAP32[(($path_dynamic_ptr_to_static_ptr_i)>>2)];
 var $cmp2_i=($4|0)==1;
 if($cmp2_i){label=20;break;}else{label=4;break;}
 case 4: 
 HEAP32[(($path_dynamic_ptr_to_static_ptr_i)>>2)]=$path_below;
 label=20;break;
 case 5: 
 var $dst_type=(($info)|0);
 var $5=HEAP32[(($dst_type)>>2)];
 var $6=(($5)|0);
 var $cmp_i33=($0|0)==($6|0);
 if($cmp_i33){label=6;break;}else{label=19;break;}
 case 6: 
 var $dst_ptr_leading_to_static_ptr=(($info+16)|0);
 var $7=HEAP32[(($dst_ptr_leading_to_static_ptr)>>2)];
 var $cmp=($7|0)==($current_ptr|0);
 if($cmp){label=8;break;}else{label=7;break;}
 case 7: 
 var $dst_ptr_not_leading_to_static_ptr=(($info+20)|0);
 var $8=HEAP32[(($dst_ptr_not_leading_to_static_ptr)>>2)];
 var $cmp5=($8|0)==($current_ptr|0);
 if($cmp5){label=8;break;}else{label=10;break;}
 case 8: 
 var $cmp7=($path_below|0)==1;
 if($cmp7){label=9;break;}else{label=20;break;}
 case 9: 
 var $path_dynamic_ptr_to_dst_ptr=(($info+32)|0);
 HEAP32[(($path_dynamic_ptr_to_dst_ptr)>>2)]=1;
 label=20;break;
 case 10: 
 var $path_dynamic_ptr_to_dst_ptr10=(($info+32)|0);
 HEAP32[(($path_dynamic_ptr_to_dst_ptr10)>>2)]=$path_below;
 var $is_dst_type_derived_from_static_type=(($info+44)|0);
 var $9=HEAP32[(($is_dst_type_derived_from_static_type)>>2)];
 var $cmp11=($9|0)==4;
 if($cmp11){label=20;break;}else{label=11;break;}
 case 11: 
 var $found_our_static_ptr=(($info+52)|0);
 HEAP8[($found_our_static_ptr)]=0;
 var $found_any_static_type=(($info+53)|0);
 HEAP8[($found_any_static_type)]=0;
 var $__base_type=(($this+8)|0);
 var $10=HEAP32[(($__base_type)>>2)];
 var $11=$10;
 var $vtable=HEAP32[(($11)>>2)];
 var $vfn=(($vtable+20)|0);
 var $12=HEAP32[(($vfn)>>2)];
 FUNCTION_TABLE[$12]($10,$info,$current_ptr,$current_ptr,1,$use_strcmp);
 var $13=HEAP8[($found_any_static_type)];
 var $14=$13&1;
 var $tobool16=(($14<<24)>>24)==0;
 if($tobool16){var $is_dst_type_derived_from_static_type13_0_off034=0;label=13;break;}else{label=12;break;}
 case 12: 
 var $15=HEAP8[($found_our_static_ptr)];
 var $16=$15&1;
 var $not_tobool19=(($16<<24)>>24)==0;
 if($not_tobool19){var $is_dst_type_derived_from_static_type13_0_off034=1;label=13;break;}else{label=17;break;}
 case 13: 
 var $is_dst_type_derived_from_static_type13_0_off034;
 HEAP32[(($dst_ptr_not_leading_to_static_ptr)>>2)]=$current_ptr;
 var $number_to_dst_ptr=(($info+40)|0);
 var $17=HEAP32[(($number_to_dst_ptr)>>2)];
 var $add=((($17)+(1))|0);
 HEAP32[(($number_to_dst_ptr)>>2)]=$add;
 var $number_to_static_ptr=(($info+36)|0);
 var $18=HEAP32[(($number_to_static_ptr)>>2)];
 var $cmp26=($18|0)==1;
 if($cmp26){label=14;break;}else{label=16;break;}
 case 14: 
 var $path_dst_ptr_to_static_ptr=(($info+24)|0);
 var $19=HEAP32[(($path_dst_ptr_to_static_ptr)>>2)];
 var $cmp27=($19|0)==2;
 if($cmp27){label=15;break;}else{label=16;break;}
 case 15: 
 var $search_done=(($info+54)|0);
 HEAP8[($search_done)]=1;
 if($is_dst_type_derived_from_static_type13_0_off034){label=17;break;}else{label=18;break;}
 case 16: 
 if($is_dst_type_derived_from_static_type13_0_off034){label=17;break;}else{label=18;break;}
 case 17: 
 HEAP32[(($is_dst_type_derived_from_static_type)>>2)]=3;
 label=20;break;
 case 18: 
 HEAP32[(($is_dst_type_derived_from_static_type)>>2)]=4;
 label=20;break;
 case 19: 
 var $__base_type40=(($this+8)|0);
 var $20=HEAP32[(($__base_type40)>>2)];
 var $21=$20;
 var $vtable41=HEAP32[(($21)>>2)];
 var $vfn42=(($vtable41+24)|0);
 var $22=HEAP32[(($vfn42)>>2)];
 FUNCTION_TABLE[$22]($20,$info,$current_ptr,$path_below,$use_strcmp);
 label=20;break;
 case 20: 
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $static_type=(($info+8)|0);
 var $0=HEAP32[(($static_type)>>2)];
 var $cmp_i=($0|0)==($this|0);
 if($cmp_i){label=2;break;}else{label=5;break;}
 case 2: 
 var $static_ptr_i=(($info+4)|0);
 var $1=HEAP32[(($static_ptr_i)>>2)];
 var $cmp_i20=($1|0)==($current_ptr|0);
 if($cmp_i20){label=3;break;}else{label=14;break;}
 case 3: 
 var $path_dynamic_ptr_to_static_ptr_i=(($info+28)|0);
 var $2=HEAP32[(($path_dynamic_ptr_to_static_ptr_i)>>2)];
 var $cmp2_i=($2|0)==1;
 if($cmp2_i){label=14;break;}else{label=4;break;}
 case 4: 
 HEAP32[(($path_dynamic_ptr_to_static_ptr_i)>>2)]=$path_below;
 label=14;break;
 case 5: 
 var $dst_type=(($info)|0);
 var $3=HEAP32[(($dst_type)>>2)];
 var $cmp_i19=($3|0)==($this|0);
 if($cmp_i19){label=6;break;}else{label=14;break;}
 case 6: 
 var $dst_ptr_leading_to_static_ptr=(($info+16)|0);
 var $4=HEAP32[(($dst_ptr_leading_to_static_ptr)>>2)];
 var $cmp=($4|0)==($current_ptr|0);
 if($cmp){label=8;break;}else{label=7;break;}
 case 7: 
 var $dst_ptr_not_leading_to_static_ptr=(($info+20)|0);
 var $5=HEAP32[(($dst_ptr_not_leading_to_static_ptr)>>2)];
 var $cmp5=($5|0)==($current_ptr|0);
 if($cmp5){label=8;break;}else{label=10;break;}
 case 8: 
 var $cmp7=($path_below|0)==1;
 if($cmp7){label=9;break;}else{label=14;break;}
 case 9: 
 var $path_dynamic_ptr_to_dst_ptr=(($info+32)|0);
 HEAP32[(($path_dynamic_ptr_to_dst_ptr)>>2)]=1;
 label=14;break;
 case 10: 
 var $path_dynamic_ptr_to_dst_ptr10=(($info+32)|0);
 HEAP32[(($path_dynamic_ptr_to_dst_ptr10)>>2)]=$path_below;
 HEAP32[(($dst_ptr_not_leading_to_static_ptr)>>2)]=$current_ptr;
 var $number_to_dst_ptr=(($info+40)|0);
 var $6=HEAP32[(($number_to_dst_ptr)>>2)];
 var $add=((($6)+(1))|0);
 HEAP32[(($number_to_dst_ptr)>>2)]=$add;
 var $number_to_static_ptr=(($info+36)|0);
 var $7=HEAP32[(($number_to_static_ptr)>>2)];
 var $cmp12=($7|0)==1;
 if($cmp12){label=11;break;}else{label=13;break;}
 case 11: 
 var $path_dst_ptr_to_static_ptr=(($info+24)|0);
 var $8=HEAP32[(($path_dst_ptr_to_static_ptr)>>2)];
 var $cmp13=($8|0)==2;
 if($cmp13){label=12;break;}else{label=13;break;}
 case 12: 
 var $search_done=(($info+54)|0);
 HEAP8[($search_done)]=1;
 label=13;break;
 case 13: 
 var $is_dst_type_derived_from_static_type=(($info+44)|0);
 HEAP32[(($is_dst_type_derived_from_static_type)>>2)]=4;
 label=14;break;
 case 14: 
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $0=(($this)|0);
 var $static_type=(($info+8)|0);
 var $1=HEAP32[(($static_type)>>2)];
 var $2=(($1)|0);
 var $cmp_i=($0|0)==($2|0);
 if($cmp_i){label=2;break;}else{label=12;break;}
 case 2: 
 var $found_any_static_type_i=(($info+53)|0);
 HEAP8[($found_any_static_type_i)]=1;
 var $static_ptr_i=(($info+4)|0);
 var $3=HEAP32[(($static_ptr_i)>>2)];
 var $cmp_i27=($3|0)==($current_ptr|0);
 if($cmp_i27){label=3;break;}else{label=26;break;}
 case 3: 
 var $found_our_static_ptr_i=(($info+52)|0);
 HEAP8[($found_our_static_ptr_i)]=1;
 var $dst_ptr_leading_to_static_ptr_i=(($info+16)|0);
 var $4=HEAP32[(($dst_ptr_leading_to_static_ptr_i)>>2)];
 var $cmp2_i=($4|0)==0;
 if($cmp2_i){label=4;break;}else{label=6;break;}
 case 4: 
 HEAP32[(($dst_ptr_leading_to_static_ptr_i)>>2)]=$dst_ptr;
 var $path_dst_ptr_to_static_ptr_i=(($info+24)|0);
 HEAP32[(($path_dst_ptr_to_static_ptr_i)>>2)]=$path_below;
 var $number_to_static_ptr_i=(($info+36)|0);
 HEAP32[(($number_to_static_ptr_i)>>2)]=1;
 var $number_of_dst_type_i=(($info+48)|0);
 var $5=HEAP32[(($number_of_dst_type_i)>>2)];
 var $cmp5_i=($5|0)==1;
 var $cmp7_i=($path_below|0)==1;
 var $or_cond_i=$cmp5_i&$cmp7_i;
 if($or_cond_i){label=5;break;}else{label=26;break;}
 case 5: 
 var $search_done_i=(($info+54)|0);
 HEAP8[($search_done_i)]=1;
 label=26;break;
 case 6: 
 var $cmp10_i=($4|0)==($dst_ptr|0);
 if($cmp10_i){label=7;break;}else{label=11;break;}
 case 7: 
 var $path_dst_ptr_to_static_ptr12_i=(($info+24)|0);
 var $6=HEAP32[(($path_dst_ptr_to_static_ptr12_i)>>2)];
 var $cmp13_i=($6|0)==2;
 if($cmp13_i){label=8;break;}else{var $7=$6;label=9;break;}
 case 8: 
 HEAP32[(($path_dst_ptr_to_static_ptr12_i)>>2)]=$path_below;
 var $7=$path_below;label=9;break;
 case 9: 
 var $7;
 var $number_of_dst_type17_i=(($info+48)|0);
 var $8=HEAP32[(($number_of_dst_type17_i)>>2)];
 var $cmp18_i=($8|0)==1;
 var $cmp21_i=($7|0)==1;
 var $or_cond19_i=$cmp18_i&$cmp21_i;
 if($or_cond19_i){label=10;break;}else{label=26;break;}
 case 10: 
 var $search_done23_i=(($info+54)|0);
 HEAP8[($search_done23_i)]=1;
 label=26;break;
 case 11: 
 var $number_to_static_ptr26_i=(($info+36)|0);
 var $9=HEAP32[(($number_to_static_ptr26_i)>>2)];
 var $add_i=((($9)+(1))|0);
 HEAP32[(($number_to_static_ptr26_i)>>2)]=$add_i;
 var $search_done27_i=(($info+54)|0);
 HEAP8[($search_done27_i)]=1;
 label=26;break;
 case 12: 
 var $found_our_static_ptr2=(($info+52)|0);
 var $10=HEAP8[($found_our_static_ptr2)];
 var $11=$10&1;
 var $found_any_static_type5=(($info+53)|0);
 var $12=HEAP8[($found_any_static_type5)];
 var $13=$12&1;
 var $__base_count=(($this+12)|0);
 var $14=HEAP32[(($__base_count)>>2)];
 var $add_ptr=(($this+16+($14<<3))|0);
 HEAP8[($found_our_static_ptr2)]=0;
 HEAP8[($found_any_static_type5)]=0;
 var $__offset_flags_i29=(($this+20)|0);
 var $15=HEAP32[(($__offset_flags_i29)>>2)];
 var $shr_i30=$15>>8;
 var $and_i31=$15&1;
 var $tobool_i32=($and_i31|0)==0;
 if($tobool_i32){var $offset_to_base_0_i35=$shr_i30;label=14;break;}else{label=13;break;}
 case 13: 
 var $16=$current_ptr;
 var $17=HEAP32[(($16)>>2)];
 var $add_ptr_i33=(($17+$shr_i30)|0);
 var $18=$add_ptr_i33;
 var $19=HEAP32[(($18)>>2)];
 var $offset_to_base_0_i35=$19;label=14;break;
 case 14: 
 var $offset_to_base_0_i35;
 var $__base_type_i36=(($this+16)|0);
 var $20=HEAP32[(($__base_type_i36)>>2)];
 var $21=$20;
 var $vtable3_i37=HEAP32[(($21)>>2)];
 var $vfn_i38=(($vtable3_i37+20)|0);
 var $22=HEAP32[(($vfn_i38)>>2)];
 var $add_ptr4_i39=(($current_ptr+$offset_to_base_0_i35)|0);
 var $and6_i40=$15&2;
 var $tobool7_i41=($and6_i40|0)!=0;
 var $cond_i42=($tobool7_i41?$path_below:2);
 FUNCTION_TABLE[$22]($20,$info,$dst_ptr,$add_ptr4_i39,$cond_i42,$use_strcmp);
 var $cmp=($14|0)>1;
 if($cmp){label=15;break;}else{label=25;break;}
 case 15: 
 var $incdec_ptr=(($this+24)|0);
 var $path_dst_ptr_to_static_ptr=(($info+24)|0);
 var $__flags=(($this+8)|0);
 var $search_done=(($info+54)|0);
 var $23=$current_ptr;
 var $p_0=$incdec_ptr;label=16;break;
 case 16: 
 var $p_0;
 var $24=HEAP8[($search_done)];
 var $25=$24&1;
 var $tobool14=(($25<<24)>>24)==0;
 if($tobool14){label=17;break;}else{label=25;break;}
 case 17: 
 var $26=HEAP8[($found_our_static_ptr2)];
 var $27=$26&1;
 var $tobool17=(($27<<24)>>24)==0;
 if($tobool17){label=20;break;}else{label=18;break;}
 case 18: 
 var $28=HEAP32[(($path_dst_ptr_to_static_ptr)>>2)];
 var $cmp19=($28|0)==1;
 if($cmp19){label=25;break;}else{label=19;break;}
 case 19: 
 var $29=HEAP32[(($__flags)>>2)];
 var $and=$29&2;
 var $tobool22=($and|0)==0;
 if($tobool22){label=25;break;}else{label=22;break;}
 case 20: 
 var $30=HEAP8[($found_any_static_type5)];
 var $31=$30&1;
 var $tobool27=(($31<<24)>>24)==0;
 if($tobool27){label=22;break;}else{label=21;break;}
 case 21: 
 var $32=HEAP32[(($__flags)>>2)];
 var $and30=$32&1;
 var $tobool31=($and30|0)==0;
 if($tobool31){label=25;break;}else{label=22;break;}
 case 22: 
 HEAP8[($found_our_static_ptr2)]=0;
 HEAP8[($found_any_static_type5)]=0;
 var $__offset_flags_i=(($p_0+4)|0);
 var $33=HEAP32[(($__offset_flags_i)>>2)];
 var $shr_i=$33>>8;
 var $and_i=$33&1;
 var $tobool_i=($and_i|0)==0;
 if($tobool_i){var $offset_to_base_0_i=$shr_i;label=24;break;}else{label=23;break;}
 case 23: 
 var $34=HEAP32[(($23)>>2)];
 var $add_ptr_i=(($34+$shr_i)|0);
 var $35=$add_ptr_i;
 var $36=HEAP32[(($35)>>2)];
 var $offset_to_base_0_i=$36;label=24;break;
 case 24: 
 var $offset_to_base_0_i;
 var $__base_type_i=(($p_0)|0);
 var $37=HEAP32[(($__base_type_i)>>2)];
 var $38=$37;
 var $vtable3_i=HEAP32[(($38)>>2)];
 var $vfn_i=(($vtable3_i+20)|0);
 var $39=HEAP32[(($vfn_i)>>2)];
 var $add_ptr4_i=(($current_ptr+$offset_to_base_0_i)|0);
 var $and6_i=$33&2;
 var $tobool7_i=($and6_i|0)!=0;
 var $cond_i=($tobool7_i?$path_below:2);
 FUNCTION_TABLE[$39]($37,$info,$dst_ptr,$add_ptr4_i,$cond_i,$use_strcmp);
 var $incdec_ptr39=(($p_0+8)|0);
 var $cmp40=($incdec_ptr39>>>0)<($add_ptr>>>0);
 if($cmp40){var $p_0=$incdec_ptr39;label=16;break;}else{label=25;break;}
 case 25: 
 HEAP8[($found_our_static_ptr2)]=$11;
 HEAP8[($found_any_static_type5)]=$13;
 label=26;break;
 case 26: 
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $0=(($this)|0);
 var $static_type=(($info+8)|0);
 var $1=HEAP32[(($static_type)>>2)];
 var $2=(($1)|0);
 var $cmp_i=($0|0)==($2|0);
 if($cmp_i){label=2;break;}else{label=12;break;}
 case 2: 
 var $found_any_static_type_i=(($info+53)|0);
 HEAP8[($found_any_static_type_i)]=1;
 var $static_ptr_i=(($info+4)|0);
 var $3=HEAP32[(($static_ptr_i)>>2)];
 var $cmp_i7=($3|0)==($current_ptr|0);
 if($cmp_i7){label=3;break;}else{label=13;break;}
 case 3: 
 var $found_our_static_ptr_i=(($info+52)|0);
 HEAP8[($found_our_static_ptr_i)]=1;
 var $dst_ptr_leading_to_static_ptr_i=(($info+16)|0);
 var $4=HEAP32[(($dst_ptr_leading_to_static_ptr_i)>>2)];
 var $cmp2_i=($4|0)==0;
 if($cmp2_i){label=4;break;}else{label=6;break;}
 case 4: 
 HEAP32[(($dst_ptr_leading_to_static_ptr_i)>>2)]=$dst_ptr;
 var $path_dst_ptr_to_static_ptr_i=(($info+24)|0);
 HEAP32[(($path_dst_ptr_to_static_ptr_i)>>2)]=$path_below;
 var $number_to_static_ptr_i=(($info+36)|0);
 HEAP32[(($number_to_static_ptr_i)>>2)]=1;
 var $number_of_dst_type_i=(($info+48)|0);
 var $5=HEAP32[(($number_of_dst_type_i)>>2)];
 var $cmp5_i=($5|0)==1;
 var $cmp7_i=($path_below|0)==1;
 var $or_cond_i=$cmp5_i&$cmp7_i;
 if($or_cond_i){label=5;break;}else{label=13;break;}
 case 5: 
 var $search_done_i=(($info+54)|0);
 HEAP8[($search_done_i)]=1;
 label=13;break;
 case 6: 
 var $cmp10_i=($4|0)==($dst_ptr|0);
 if($cmp10_i){label=7;break;}else{label=11;break;}
 case 7: 
 var $path_dst_ptr_to_static_ptr12_i=(($info+24)|0);
 var $6=HEAP32[(($path_dst_ptr_to_static_ptr12_i)>>2)];
 var $cmp13_i=($6|0)==2;
 if($cmp13_i){label=8;break;}else{var $7=$6;label=9;break;}
 case 8: 
 HEAP32[(($path_dst_ptr_to_static_ptr12_i)>>2)]=$path_below;
 var $7=$path_below;label=9;break;
 case 9: 
 var $7;
 var $number_of_dst_type17_i=(($info+48)|0);
 var $8=HEAP32[(($number_of_dst_type17_i)>>2)];
 var $cmp18_i=($8|0)==1;
 var $cmp21_i=($7|0)==1;
 var $or_cond19_i=$cmp18_i&$cmp21_i;
 if($or_cond19_i){label=10;break;}else{label=13;break;}
 case 10: 
 var $search_done23_i=(($info+54)|0);
 HEAP8[($search_done23_i)]=1;
 label=13;break;
 case 11: 
 var $number_to_static_ptr26_i=(($info+36)|0);
 var $9=HEAP32[(($number_to_static_ptr26_i)>>2)];
 var $add_i=((($9)+(1))|0);
 HEAP32[(($number_to_static_ptr26_i)>>2)]=$add_i;
 var $search_done27_i=(($info+54)|0);
 HEAP8[($search_done27_i)]=1;
 label=13;break;
 case 12: 
 var $__base_type=(($this+8)|0);
 var $10=HEAP32[(($__base_type)>>2)];
 var $11=$10;
 var $vtable=HEAP32[(($11)>>2)];
 var $vfn=(($vtable+20)|0);
 var $12=HEAP32[(($vfn)>>2)];
 FUNCTION_TABLE[$12]($10,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp);
 label=13;break;
 case 13: 
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $static_type=(($info+8)|0);
 var $0=HEAP32[(($static_type)>>2)];
 var $cmp_i=($0|0)==($this|0);
 if($cmp_i){label=2;break;}else{label=12;break;}
 case 2: 
 var $found_any_static_type_i=(($info+53)|0);
 HEAP8[($found_any_static_type_i)]=1;
 var $static_ptr_i=(($info+4)|0);
 var $1=HEAP32[(($static_ptr_i)>>2)];
 var $cmp_i2=($1|0)==($current_ptr|0);
 if($cmp_i2){label=3;break;}else{label=12;break;}
 case 3: 
 var $found_our_static_ptr_i=(($info+52)|0);
 HEAP8[($found_our_static_ptr_i)]=1;
 var $dst_ptr_leading_to_static_ptr_i=(($info+16)|0);
 var $2=HEAP32[(($dst_ptr_leading_to_static_ptr_i)>>2)];
 var $cmp2_i=($2|0)==0;
 if($cmp2_i){label=4;break;}else{label=6;break;}
 case 4: 
 HEAP32[(($dst_ptr_leading_to_static_ptr_i)>>2)]=$dst_ptr;
 var $path_dst_ptr_to_static_ptr_i=(($info+24)|0);
 HEAP32[(($path_dst_ptr_to_static_ptr_i)>>2)]=$path_below;
 var $number_to_static_ptr_i=(($info+36)|0);
 HEAP32[(($number_to_static_ptr_i)>>2)]=1;
 var $number_of_dst_type_i=(($info+48)|0);
 var $3=HEAP32[(($number_of_dst_type_i)>>2)];
 var $cmp5_i=($3|0)==1;
 var $cmp7_i=($path_below|0)==1;
 var $or_cond_i=$cmp5_i&$cmp7_i;
 if($or_cond_i){label=5;break;}else{label=12;break;}
 case 5: 
 var $search_done_i=(($info+54)|0);
 HEAP8[($search_done_i)]=1;
 label=12;break;
 case 6: 
 var $cmp10_i=($2|0)==($dst_ptr|0);
 if($cmp10_i){label=7;break;}else{label=11;break;}
 case 7: 
 var $path_dst_ptr_to_static_ptr12_i=(($info+24)|0);
 var $4=HEAP32[(($path_dst_ptr_to_static_ptr12_i)>>2)];
 var $cmp13_i=($4|0)==2;
 if($cmp13_i){label=8;break;}else{var $5=$4;label=9;break;}
 case 8: 
 HEAP32[(($path_dst_ptr_to_static_ptr12_i)>>2)]=$path_below;
 var $5=$path_below;label=9;break;
 case 9: 
 var $5;
 var $number_of_dst_type17_i=(($info+48)|0);
 var $6=HEAP32[(($number_of_dst_type17_i)>>2)];
 var $cmp18_i=($6|0)==1;
 var $cmp21_i=($5|0)==1;
 var $or_cond19_i=$cmp18_i&$cmp21_i;
 if($or_cond19_i){label=10;break;}else{label=12;break;}
 case 10: 
 var $search_done23_i=(($info+54)|0);
 HEAP8[($search_done23_i)]=1;
 label=12;break;
 case 11: 
 var $number_to_static_ptr26_i=(($info+36)|0);
 var $7=HEAP32[(($number_to_static_ptr26_i)>>2)];
 var $add_i=((($7)+(1))|0);
 HEAP32[(($number_to_static_ptr26_i)>>2)]=$add_i;
 var $search_done27_i=(($info+54)|0);
 HEAP8[($search_done27_i)]=1;
 label=12;break;
 case 12: 
 return;
  default: assert(0, "bad label: " + label);
 }
}
function _malloc($bytes){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $cmp=($bytes>>>0)<245;
 if($cmp){label=2;break;}else{label=78;break;}
 case 2: 
 var $cmp1=($bytes>>>0)<11;
 if($cmp1){var $cond=16;label=4;break;}else{label=3;break;}
 case 3: 
 var $add2=((($bytes)+(11))|0);
 var $and=$add2&-8;
 var $cond=$and;label=4;break;
 case 4: 
 var $cond;
 var $shr=$cond>>>3;
 var $0=HEAP32[((11960)>>2)];
 var $shr3=$0>>>($shr>>>0);
 var $and4=$shr3&3;
 var $cmp5=($and4|0)==0;
 if($cmp5){label=12;break;}else{label=5;break;}
 case 5: 
 var $neg=$shr3&1;
 var $and7=$neg^1;
 var $add8=((($and7)+($shr))|0);
 var $shl=$add8<<1;
 var $arrayidx=((12000+($shl<<2))|0);
 var $1=$arrayidx;
 var $arrayidx_sum=((($shl)+(2))|0);
 var $2=((12000+($arrayidx_sum<<2))|0);
 var $3=HEAP32[(($2)>>2)];
 var $fd9=(($3+8)|0);
 var $4=HEAP32[(($fd9)>>2)];
 var $cmp10=($1|0)==($4|0);
 if($cmp10){label=6;break;}else{label=7;break;}
 case 6: 
 var $shl12=1<<$add8;
 var $neg13=$shl12^-1;
 var $and14=$0&$neg13;
 HEAP32[((11960)>>2)]=$and14;
 label=11;break;
 case 7: 
 var $5=$4;
 var $6=HEAP32[((11976)>>2)];
 var $cmp15=($5>>>0)<($6>>>0);
 if($cmp15){label=10;break;}else{label=8;break;}
 case 8: 
 var $bk=(($4+12)|0);
 var $7=HEAP32[(($bk)>>2)];
 var $cmp16=($7|0)==($3|0);
 if($cmp16){label=9;break;}else{label=10;break;}
 case 9: 
 HEAP32[(($bk)>>2)]=$1;
 HEAP32[(($2)>>2)]=$4;
 label=11;break;
 case 10: 
 _abort();
 throw "Reached an unreachable!";
 case 11: 
 var $shl22=$add8<<3;
 var $or23=$shl22|3;
 var $head=(($3+4)|0);
 HEAP32[(($head)>>2)]=$or23;
 var $8=$3;
 var $add_ptr_sum106=$shl22|4;
 var $head25=(($8+$add_ptr_sum106)|0);
 var $9=$head25;
 var $10=HEAP32[(($9)>>2)];
 var $or26=$10|1;
 HEAP32[(($9)>>2)]=$or26;
 var $11=$fd9;
 var $mem_0=$11;label=341;break;
 case 12: 
 var $12=HEAP32[((11968)>>2)];
 var $cmp29=($cond>>>0)>($12>>>0);
 if($cmp29){label=13;break;}else{var $nb_0=$cond;label=160;break;}
 case 13: 
 var $cmp31=($shr3|0)==0;
 if($cmp31){label=27;break;}else{label=14;break;}
 case 14: 
 var $shl35=$shr3<<$shr;
 var $shl37=2<<$shr;
 var $sub=(((-$shl37))|0);
 var $or40=$shl37|$sub;
 var $and41=$shl35&$or40;
 var $sub42=(((-$and41))|0);
 var $and43=$and41&$sub42;
 var $sub44=((($and43)-(1))|0);
 var $shr45=$sub44>>>12;
 var $and46=$shr45&16;
 var $shr47=$sub44>>>($and46>>>0);
 var $shr48=$shr47>>>5;
 var $and49=$shr48&8;
 var $add50=$and49|$and46;
 var $shr51=$shr47>>>($and49>>>0);
 var $shr52=$shr51>>>2;
 var $and53=$shr52&4;
 var $add54=$add50|$and53;
 var $shr55=$shr51>>>($and53>>>0);
 var $shr56=$shr55>>>1;
 var $and57=$shr56&2;
 var $add58=$add54|$and57;
 var $shr59=$shr55>>>($and57>>>0);
 var $shr60=$shr59>>>1;
 var $and61=$shr60&1;
 var $add62=$add58|$and61;
 var $shr63=$shr59>>>($and61>>>0);
 var $add64=((($add62)+($shr63))|0);
 var $shl65=$add64<<1;
 var $arrayidx66=((12000+($shl65<<2))|0);
 var $13=$arrayidx66;
 var $arrayidx66_sum=((($shl65)+(2))|0);
 var $14=((12000+($arrayidx66_sum<<2))|0);
 var $15=HEAP32[(($14)>>2)];
 var $fd69=(($15+8)|0);
 var $16=HEAP32[(($fd69)>>2)];
 var $cmp70=($13|0)==($16|0);
 if($cmp70){label=15;break;}else{label=16;break;}
 case 15: 
 var $shl72=1<<$add64;
 var $neg73=$shl72^-1;
 var $and74=$0&$neg73;
 HEAP32[((11960)>>2)]=$and74;
 label=20;break;
 case 16: 
 var $17=$16;
 var $18=HEAP32[((11976)>>2)];
 var $cmp76=($17>>>0)<($18>>>0);
 if($cmp76){label=19;break;}else{label=17;break;}
 case 17: 
 var $bk78=(($16+12)|0);
 var $19=HEAP32[(($bk78)>>2)];
 var $cmp79=($19|0)==($15|0);
 if($cmp79){label=18;break;}else{label=19;break;}
 case 18: 
 HEAP32[(($bk78)>>2)]=$13;
 HEAP32[(($14)>>2)]=$16;
 label=20;break;
 case 19: 
 _abort();
 throw "Reached an unreachable!";
 case 20: 
 var $shl90=$add64<<3;
 var $sub91=((($shl90)-($cond))|0);
 var $or93=$cond|3;
 var $head94=(($15+4)|0);
 HEAP32[(($head94)>>2)]=$or93;
 var $20=$15;
 var $add_ptr95=(($20+$cond)|0);
 var $21=$add_ptr95;
 var $or96=$sub91|1;
 var $add_ptr95_sum103=$cond|4;
 var $head97=(($20+$add_ptr95_sum103)|0);
 var $22=$head97;
 HEAP32[(($22)>>2)]=$or96;
 var $add_ptr98=(($20+$shl90)|0);
 var $prev_foot=$add_ptr98;
 HEAP32[(($prev_foot)>>2)]=$sub91;
 var $23=HEAP32[((11968)>>2)];
 var $cmp99=($23|0)==0;
 if($cmp99){label=26;break;}else{label=21;break;}
 case 21: 
 var $24=HEAP32[((11980)>>2)];
 var $shr101=$23>>>3;
 var $shl102=$shr101<<1;
 var $arrayidx103=((12000+($shl102<<2))|0);
 var $25=$arrayidx103;
 var $26=HEAP32[((11960)>>2)];
 var $shl105=1<<$shr101;
 var $and106=$26&$shl105;
 var $tobool107=($and106|0)==0;
 if($tobool107){label=22;break;}else{label=23;break;}
 case 22: 
 var $or110=$26|$shl105;
 HEAP32[((11960)>>2)]=$or110;
 var $arrayidx103_sum_pre=((($shl102)+(2))|0);
 var $_pre=((12000+($arrayidx103_sum_pre<<2))|0);
 var $F104_0=$25;var $_pre_phi=$_pre;label=25;break;
 case 23: 
 var $arrayidx103_sum104=((($shl102)+(2))|0);
 var $27=((12000+($arrayidx103_sum104<<2))|0);
 var $28=HEAP32[(($27)>>2)];
 var $29=$28;
 var $30=HEAP32[((11976)>>2)];
 var $cmp113=($29>>>0)<($30>>>0);
 if($cmp113){label=24;break;}else{var $F104_0=$28;var $_pre_phi=$27;label=25;break;}
 case 24: 
 _abort();
 throw "Reached an unreachable!";
 case 25: 
 var $_pre_phi;
 var $F104_0;
 HEAP32[(($_pre_phi)>>2)]=$24;
 var $bk122=(($F104_0+12)|0);
 HEAP32[(($bk122)>>2)]=$24;
 var $fd123=(($24+8)|0);
 HEAP32[(($fd123)>>2)]=$F104_0;
 var $bk124=(($24+12)|0);
 HEAP32[(($bk124)>>2)]=$25;
 label=26;break;
 case 26: 
 HEAP32[((11968)>>2)]=$sub91;
 HEAP32[((11980)>>2)]=$21;
 var $31=$fd69;
 var $mem_0=$31;label=341;break;
 case 27: 
 var $32=HEAP32[((11964)>>2)];
 var $cmp128=($32|0)==0;
 if($cmp128){var $nb_0=$cond;label=160;break;}else{label=28;break;}
 case 28: 
 var $sub_i=(((-$32))|0);
 var $and_i=$32&$sub_i;
 var $sub2_i=((($and_i)-(1))|0);
 var $shr_i=$sub2_i>>>12;
 var $and3_i=$shr_i&16;
 var $shr4_i=$sub2_i>>>($and3_i>>>0);
 var $shr5_i=$shr4_i>>>5;
 var $and6_i=$shr5_i&8;
 var $add_i=$and6_i|$and3_i;
 var $shr7_i=$shr4_i>>>($and6_i>>>0);
 var $shr8_i=$shr7_i>>>2;
 var $and9_i=$shr8_i&4;
 var $add10_i=$add_i|$and9_i;
 var $shr11_i=$shr7_i>>>($and9_i>>>0);
 var $shr12_i=$shr11_i>>>1;
 var $and13_i=$shr12_i&2;
 var $add14_i=$add10_i|$and13_i;
 var $shr15_i=$shr11_i>>>($and13_i>>>0);
 var $shr16_i=$shr15_i>>>1;
 var $and17_i=$shr16_i&1;
 var $add18_i=$add14_i|$and17_i;
 var $shr19_i=$shr15_i>>>($and17_i>>>0);
 var $add20_i=((($add18_i)+($shr19_i))|0);
 var $arrayidx_i=((12264+($add20_i<<2))|0);
 var $33=HEAP32[(($arrayidx_i)>>2)];
 var $head_i=(($33+4)|0);
 var $34=HEAP32[(($head_i)>>2)];
 var $and21_i=$34&-8;
 var $sub22_i=((($and21_i)-($cond))|0);
 var $t_0_i=$33;var $v_0_i=$33;var $rsize_0_i=$sub22_i;label=29;break;
 case 29: 
 var $rsize_0_i;
 var $v_0_i;
 var $t_0_i;
 var $arrayidx23_i=(($t_0_i+16)|0);
 var $35=HEAP32[(($arrayidx23_i)>>2)];
 var $cmp_i=($35|0)==0;
 if($cmp_i){label=30;break;}else{var $cond7_i=$35;label=31;break;}
 case 30: 
 var $arrayidx27_i=(($t_0_i+20)|0);
 var $36=HEAP32[(($arrayidx27_i)>>2)];
 var $cmp28_i=($36|0)==0;
 if($cmp28_i){label=32;break;}else{var $cond7_i=$36;label=31;break;}
 case 31: 
 var $cond7_i;
 var $head29_i=(($cond7_i+4)|0);
 var $37=HEAP32[(($head29_i)>>2)];
 var $and30_i=$37&-8;
 var $sub31_i=((($and30_i)-($cond))|0);
 var $cmp32_i=($sub31_i>>>0)<($rsize_0_i>>>0);
 var $sub31_rsize_0_i=($cmp32_i?$sub31_i:$rsize_0_i);
 var $cond_v_0_i=($cmp32_i?$cond7_i:$v_0_i);
 var $t_0_i=$cond7_i;var $v_0_i=$cond_v_0_i;var $rsize_0_i=$sub31_rsize_0_i;label=29;break;
 case 32: 
 var $38=$v_0_i;
 var $39=HEAP32[((11976)>>2)];
 var $cmp33_i=($38>>>0)<($39>>>0);
 if($cmp33_i){label=76;break;}else{label=33;break;}
 case 33: 
 var $add_ptr_i=(($38+$cond)|0);
 var $40=$add_ptr_i;
 var $cmp35_i=($38>>>0)<($add_ptr_i>>>0);
 if($cmp35_i){label=34;break;}else{label=76;break;}
 case 34: 
 var $parent_i=(($v_0_i+24)|0);
 var $41=HEAP32[(($parent_i)>>2)];
 var $bk_i=(($v_0_i+12)|0);
 var $42=HEAP32[(($bk_i)>>2)];
 var $cmp40_i=($42|0)==($v_0_i|0);
 if($cmp40_i){label=40;break;}else{label=35;break;}
 case 35: 
 var $fd_i=(($v_0_i+8)|0);
 var $43=HEAP32[(($fd_i)>>2)];
 var $44=$43;
 var $cmp45_i=($44>>>0)<($39>>>0);
 if($cmp45_i){label=39;break;}else{label=36;break;}
 case 36: 
 var $bk47_i=(($43+12)|0);
 var $45=HEAP32[(($bk47_i)>>2)];
 var $cmp48_i=($45|0)==($v_0_i|0);
 if($cmp48_i){label=37;break;}else{label=39;break;}
 case 37: 
 var $fd50_i=(($42+8)|0);
 var $46=HEAP32[(($fd50_i)>>2)];
 var $cmp51_i=($46|0)==($v_0_i|0);
 if($cmp51_i){label=38;break;}else{label=39;break;}
 case 38: 
 HEAP32[(($bk47_i)>>2)]=$42;
 HEAP32[(($fd50_i)>>2)]=$43;
 var $R_1_i=$42;label=47;break;
 case 39: 
 _abort();
 throw "Reached an unreachable!";
 case 40: 
 var $arrayidx61_i=(($v_0_i+20)|0);
 var $47=HEAP32[(($arrayidx61_i)>>2)];
 var $cmp62_i=($47|0)==0;
 if($cmp62_i){label=41;break;}else{var $R_0_i=$47;var $RP_0_i=$arrayidx61_i;label=42;break;}
 case 41: 
 var $arrayidx65_i=(($v_0_i+16)|0);
 var $48=HEAP32[(($arrayidx65_i)>>2)];
 var $cmp66_i=($48|0)==0;
 if($cmp66_i){var $R_1_i=0;label=47;break;}else{var $R_0_i=$48;var $RP_0_i=$arrayidx65_i;label=42;break;}
 case 42: 
 var $RP_0_i;
 var $R_0_i;
 var $arrayidx71_i=(($R_0_i+20)|0);
 var $49=HEAP32[(($arrayidx71_i)>>2)];
 var $cmp72_i=($49|0)==0;
 if($cmp72_i){label=43;break;}else{var $R_0_i=$49;var $RP_0_i=$arrayidx71_i;label=42;break;}
 case 43: 
 var $arrayidx75_i=(($R_0_i+16)|0);
 var $50=HEAP32[(($arrayidx75_i)>>2)];
 var $cmp76_i=($50|0)==0;
 if($cmp76_i){label=44;break;}else{var $R_0_i=$50;var $RP_0_i=$arrayidx75_i;label=42;break;}
 case 44: 
 var $51=$RP_0_i;
 var $cmp81_i=($51>>>0)<($39>>>0);
 if($cmp81_i){label=46;break;}else{label=45;break;}
 case 45: 
 HEAP32[(($RP_0_i)>>2)]=0;
 var $R_1_i=$R_0_i;label=47;break;
 case 46: 
 _abort();
 throw "Reached an unreachable!";
 case 47: 
 var $R_1_i;
 var $cmp90_i=($41|0)==0;
 if($cmp90_i){label=67;break;}else{label=48;break;}
 case 48: 
 var $index_i=(($v_0_i+28)|0);
 var $52=HEAP32[(($index_i)>>2)];
 var $arrayidx94_i=((12264+($52<<2))|0);
 var $53=HEAP32[(($arrayidx94_i)>>2)];
 var $cmp95_i=($v_0_i|0)==($53|0);
 if($cmp95_i){label=49;break;}else{label=51;break;}
 case 49: 
 HEAP32[(($arrayidx94_i)>>2)]=$R_1_i;
 var $cond5_i=($R_1_i|0)==0;
 if($cond5_i){label=50;break;}else{label=57;break;}
 case 50: 
 var $54=HEAP32[(($index_i)>>2)];
 var $shl_i=1<<$54;
 var $neg_i=$shl_i^-1;
 var $55=HEAP32[((11964)>>2)];
 var $and103_i=$55&$neg_i;
 HEAP32[((11964)>>2)]=$and103_i;
 label=67;break;
 case 51: 
 var $56=$41;
 var $57=HEAP32[((11976)>>2)];
 var $cmp107_i=($56>>>0)<($57>>>0);
 if($cmp107_i){label=55;break;}else{label=52;break;}
 case 52: 
 var $arrayidx113_i=(($41+16)|0);
 var $58=HEAP32[(($arrayidx113_i)>>2)];
 var $cmp114_i=($58|0)==($v_0_i|0);
 if($cmp114_i){label=53;break;}else{label=54;break;}
 case 53: 
 HEAP32[(($arrayidx113_i)>>2)]=$R_1_i;
 label=56;break;
 case 54: 
 var $arrayidx121_i=(($41+20)|0);
 HEAP32[(($arrayidx121_i)>>2)]=$R_1_i;
 label=56;break;
 case 55: 
 _abort();
 throw "Reached an unreachable!";
 case 56: 
 var $cmp126_i=($R_1_i|0)==0;
 if($cmp126_i){label=67;break;}else{label=57;break;}
 case 57: 
 var $59=$R_1_i;
 var $60=HEAP32[((11976)>>2)];
 var $cmp130_i=($59>>>0)<($60>>>0);
 if($cmp130_i){label=66;break;}else{label=58;break;}
 case 58: 
 var $parent135_i=(($R_1_i+24)|0);
 HEAP32[(($parent135_i)>>2)]=$41;
 var $arrayidx137_i=(($v_0_i+16)|0);
 var $61=HEAP32[(($arrayidx137_i)>>2)];
 var $cmp138_i=($61|0)==0;
 if($cmp138_i){label=62;break;}else{label=59;break;}
 case 59: 
 var $62=$61;
 var $63=HEAP32[((11976)>>2)];
 var $cmp142_i=($62>>>0)<($63>>>0);
 if($cmp142_i){label=61;break;}else{label=60;break;}
 case 60: 
 var $arrayidx148_i=(($R_1_i+16)|0);
 HEAP32[(($arrayidx148_i)>>2)]=$61;
 var $parent149_i=(($61+24)|0);
 HEAP32[(($parent149_i)>>2)]=$R_1_i;
 label=62;break;
 case 61: 
 _abort();
 throw "Reached an unreachable!";
 case 62: 
 var $arrayidx154_i=(($v_0_i+20)|0);
 var $64=HEAP32[(($arrayidx154_i)>>2)];
 var $cmp155_i=($64|0)==0;
 if($cmp155_i){label=67;break;}else{label=63;break;}
 case 63: 
 var $65=$64;
 var $66=HEAP32[((11976)>>2)];
 var $cmp159_i=($65>>>0)<($66>>>0);
 if($cmp159_i){label=65;break;}else{label=64;break;}
 case 64: 
 var $arrayidx165_i=(($R_1_i+20)|0);
 HEAP32[(($arrayidx165_i)>>2)]=$64;
 var $parent166_i=(($64+24)|0);
 HEAP32[(($parent166_i)>>2)]=$R_1_i;
 label=67;break;
 case 65: 
 _abort();
 throw "Reached an unreachable!";
 case 66: 
 _abort();
 throw "Reached an unreachable!";
 case 67: 
 var $cmp174_i=($rsize_0_i>>>0)<16;
 if($cmp174_i){label=68;break;}else{label=69;break;}
 case 68: 
 var $add177_i=((($rsize_0_i)+($cond))|0);
 var $or178_i=$add177_i|3;
 var $head179_i=(($v_0_i+4)|0);
 HEAP32[(($head179_i)>>2)]=$or178_i;
 var $add_ptr181_sum_i=((($add177_i)+(4))|0);
 var $head182_i=(($38+$add_ptr181_sum_i)|0);
 var $67=$head182_i;
 var $68=HEAP32[(($67)>>2)];
 var $or183_i=$68|1;
 HEAP32[(($67)>>2)]=$or183_i;
 label=77;break;
 case 69: 
 var $or186_i=$cond|3;
 var $head187_i=(($v_0_i+4)|0);
 HEAP32[(($head187_i)>>2)]=$or186_i;
 var $or188_i=$rsize_0_i|1;
 var $add_ptr_sum_i175=$cond|4;
 var $head189_i=(($38+$add_ptr_sum_i175)|0);
 var $69=$head189_i;
 HEAP32[(($69)>>2)]=$or188_i;
 var $add_ptr_sum1_i=((($rsize_0_i)+($cond))|0);
 var $add_ptr190_i=(($38+$add_ptr_sum1_i)|0);
 var $prev_foot_i=$add_ptr190_i;
 HEAP32[(($prev_foot_i)>>2)]=$rsize_0_i;
 var $70=HEAP32[((11968)>>2)];
 var $cmp191_i=($70|0)==0;
 if($cmp191_i){label=75;break;}else{label=70;break;}
 case 70: 
 var $71=HEAP32[((11980)>>2)];
 var $shr194_i=$70>>>3;
 var $shl195_i=$shr194_i<<1;
 var $arrayidx196_i=((12000+($shl195_i<<2))|0);
 var $72=$arrayidx196_i;
 var $73=HEAP32[((11960)>>2)];
 var $shl198_i=1<<$shr194_i;
 var $and199_i=$73&$shl198_i;
 var $tobool200_i=($and199_i|0)==0;
 if($tobool200_i){label=71;break;}else{label=72;break;}
 case 71: 
 var $or204_i=$73|$shl198_i;
 HEAP32[((11960)>>2)]=$or204_i;
 var $arrayidx196_sum_pre_i=((($shl195_i)+(2))|0);
 var $_pre_i=((12000+($arrayidx196_sum_pre_i<<2))|0);
 var $F197_0_i=$72;var $_pre_phi_i=$_pre_i;label=74;break;
 case 72: 
 var $arrayidx196_sum2_i=((($shl195_i)+(2))|0);
 var $74=((12000+($arrayidx196_sum2_i<<2))|0);
 var $75=HEAP32[(($74)>>2)];
 var $76=$75;
 var $77=HEAP32[((11976)>>2)];
 var $cmp208_i=($76>>>0)<($77>>>0);
 if($cmp208_i){label=73;break;}else{var $F197_0_i=$75;var $_pre_phi_i=$74;label=74;break;}
 case 73: 
 _abort();
 throw "Reached an unreachable!";
 case 74: 
 var $_pre_phi_i;
 var $F197_0_i;
 HEAP32[(($_pre_phi_i)>>2)]=$71;
 var $bk218_i=(($F197_0_i+12)|0);
 HEAP32[(($bk218_i)>>2)]=$71;
 var $fd219_i=(($71+8)|0);
 HEAP32[(($fd219_i)>>2)]=$F197_0_i;
 var $bk220_i=(($71+12)|0);
 HEAP32[(($bk220_i)>>2)]=$72;
 label=75;break;
 case 75: 
 HEAP32[((11968)>>2)]=$rsize_0_i;
 HEAP32[((11980)>>2)]=$40;
 label=77;break;
 case 76: 
 _abort();
 throw "Reached an unreachable!";
 case 77: 
 var $add_ptr225_i=(($v_0_i+8)|0);
 var $78=$add_ptr225_i;
 var $cmp130=($add_ptr225_i|0)==0;
 if($cmp130){var $nb_0=$cond;label=160;break;}else{var $mem_0=$78;label=341;break;}
 case 78: 
 var $cmp138=($bytes>>>0)>4294967231;
 if($cmp138){var $nb_0=-1;label=160;break;}else{label=79;break;}
 case 79: 
 var $add143=((($bytes)+(11))|0);
 var $and144=$add143&-8;
 var $79=HEAP32[((11964)>>2)];
 var $cmp145=($79|0)==0;
 if($cmp145){var $nb_0=$and144;label=160;break;}else{label=80;break;}
 case 80: 
 var $sub_i107=(((-$and144))|0);
 var $shr_i108=$add143>>>8;
 var $cmp_i109=($shr_i108|0)==0;
 if($cmp_i109){var $idx_0_i=0;label=83;break;}else{label=81;break;}
 case 81: 
 var $cmp1_i=($and144>>>0)>16777215;
 if($cmp1_i){var $idx_0_i=31;label=83;break;}else{label=82;break;}
 case 82: 
 var $sub4_i=((($shr_i108)+(1048320))|0);
 var $shr5_i111=$sub4_i>>>16;
 var $and_i112=$shr5_i111&8;
 var $shl_i113=$shr_i108<<$and_i112;
 var $sub6_i=((($shl_i113)+(520192))|0);
 var $shr7_i114=$sub6_i>>>16;
 var $and8_i=$shr7_i114&4;
 var $add_i115=$and8_i|$and_i112;
 var $shl9_i=$shl_i113<<$and8_i;
 var $sub10_i=((($shl9_i)+(245760))|0);
 var $shr11_i116=$sub10_i>>>16;
 var $and12_i=$shr11_i116&2;
 var $add13_i=$add_i115|$and12_i;
 var $sub14_i=(((14)-($add13_i))|0);
 var $shl15_i=$shl9_i<<$and12_i;
 var $shr16_i117=$shl15_i>>>15;
 var $add17_i=((($sub14_i)+($shr16_i117))|0);
 var $shl18_i=$add17_i<<1;
 var $add19_i=((($add17_i)+(7))|0);
 var $shr20_i=$and144>>>($add19_i>>>0);
 var $and21_i118=$shr20_i&1;
 var $add22_i=$and21_i118|$shl18_i;
 var $idx_0_i=$add22_i;label=83;break;
 case 83: 
 var $idx_0_i;
 var $arrayidx_i119=((12264+($idx_0_i<<2))|0);
 var $80=HEAP32[(($arrayidx_i119)>>2)];
 var $cmp24_i=($80|0)==0;
 if($cmp24_i){var $v_2_i=0;var $rsize_2_i=$sub_i107;var $t_1_i=0;label=90;break;}else{label=84;break;}
 case 84: 
 var $cmp26_i=($idx_0_i|0)==31;
 if($cmp26_i){var $cond_i=0;label=86;break;}else{label=85;break;}
 case 85: 
 var $shr27_i=$idx_0_i>>>1;
 var $sub30_i=(((25)-($shr27_i))|0);
 var $cond_i=$sub30_i;label=86;break;
 case 86: 
 var $cond_i;
 var $shl31_i=$and144<<$cond_i;
 var $v_0_i123=0;var $rsize_0_i122=$sub_i107;var $t_0_i121=$80;var $sizebits_0_i=$shl31_i;var $rst_0_i=0;label=87;break;
 case 87: 
 var $rst_0_i;
 var $sizebits_0_i;
 var $t_0_i121;
 var $rsize_0_i122;
 var $v_0_i123;
 var $head_i124=(($t_0_i121+4)|0);
 var $81=HEAP32[(($head_i124)>>2)];
 var $and32_i=$81&-8;
 var $sub33_i=((($and32_i)-($and144))|0);
 var $cmp34_i=($sub33_i>>>0)<($rsize_0_i122>>>0);
 if($cmp34_i){label=88;break;}else{var $v_1_i=$v_0_i123;var $rsize_1_i=$rsize_0_i122;label=89;break;}
 case 88: 
 var $cmp36_i=($and32_i|0)==($and144|0);
 if($cmp36_i){var $v_2_i=$t_0_i121;var $rsize_2_i=$sub33_i;var $t_1_i=$t_0_i121;label=90;break;}else{var $v_1_i=$t_0_i121;var $rsize_1_i=$sub33_i;label=89;break;}
 case 89: 
 var $rsize_1_i;
 var $v_1_i;
 var $arrayidx40_i=(($t_0_i121+20)|0);
 var $82=HEAP32[(($arrayidx40_i)>>2)];
 var $shr41_i=$sizebits_0_i>>>31;
 var $arrayidx44_i=(($t_0_i121+16+($shr41_i<<2))|0);
 var $83=HEAP32[(($arrayidx44_i)>>2)];
 var $cmp45_i125=($82|0)==0;
 var $cmp46_i=($82|0)==($83|0);
 var $or_cond_i=$cmp45_i125|$cmp46_i;
 var $rst_1_i=($or_cond_i?$rst_0_i:$82);
 var $cmp49_i=($83|0)==0;
 var $shl52_i=$sizebits_0_i<<1;
 if($cmp49_i){var $v_2_i=$v_1_i;var $rsize_2_i=$rsize_1_i;var $t_1_i=$rst_1_i;label=90;break;}else{var $v_0_i123=$v_1_i;var $rsize_0_i122=$rsize_1_i;var $t_0_i121=$83;var $sizebits_0_i=$shl52_i;var $rst_0_i=$rst_1_i;label=87;break;}
 case 90: 
 var $t_1_i;
 var $rsize_2_i;
 var $v_2_i;
 var $cmp54_i=($t_1_i|0)==0;
 var $cmp56_i=($v_2_i|0)==0;
 var $or_cond18_i=$cmp54_i&$cmp56_i;
 if($or_cond18_i){label=91;break;}else{var $t_2_ph_i=$t_1_i;label=93;break;}
 case 91: 
 var $shl59_i=2<<$idx_0_i;
 var $sub62_i=(((-$shl59_i))|0);
 var $or_i=$shl59_i|$sub62_i;
 var $and63_i=$79&$or_i;
 var $cmp64_i=($and63_i|0)==0;
 if($cmp64_i){var $nb_0=$and144;label=160;break;}else{label=92;break;}
 case 92: 
 var $sub66_i=(((-$and63_i))|0);
 var $and67_i=$and63_i&$sub66_i;
 var $sub69_i=((($and67_i)-(1))|0);
 var $shr71_i=$sub69_i>>>12;
 var $and72_i=$shr71_i&16;
 var $shr74_i=$sub69_i>>>($and72_i>>>0);
 var $shr75_i=$shr74_i>>>5;
 var $and76_i=$shr75_i&8;
 var $add77_i=$and76_i|$and72_i;
 var $shr78_i=$shr74_i>>>($and76_i>>>0);
 var $shr79_i=$shr78_i>>>2;
 var $and80_i=$shr79_i&4;
 var $add81_i=$add77_i|$and80_i;
 var $shr82_i=$shr78_i>>>($and80_i>>>0);
 var $shr83_i=$shr82_i>>>1;
 var $and84_i=$shr83_i&2;
 var $add85_i=$add81_i|$and84_i;
 var $shr86_i=$shr82_i>>>($and84_i>>>0);
 var $shr87_i=$shr86_i>>>1;
 var $and88_i=$shr87_i&1;
 var $add89_i=$add85_i|$and88_i;
 var $shr90_i=$shr86_i>>>($and88_i>>>0);
 var $add91_i=((($add89_i)+($shr90_i))|0);
 var $arrayidx93_i=((12264+($add91_i<<2))|0);
 var $84=HEAP32[(($arrayidx93_i)>>2)];
 var $t_2_ph_i=$84;label=93;break;
 case 93: 
 var $t_2_ph_i;
 var $cmp9623_i=($t_2_ph_i|0)==0;
 if($cmp9623_i){var $rsize_3_lcssa_i=$rsize_2_i;var $v_3_lcssa_i=$v_2_i;label=96;break;}else{var $t_224_i=$t_2_ph_i;var $rsize_325_i=$rsize_2_i;var $v_326_i=$v_2_i;label=94;break;}
 case 94: 
 var $v_326_i;
 var $rsize_325_i;
 var $t_224_i;
 var $head98_i=(($t_224_i+4)|0);
 var $85=HEAP32[(($head98_i)>>2)];
 var $and99_i=$85&-8;
 var $sub100_i=((($and99_i)-($and144))|0);
 var $cmp101_i=($sub100_i>>>0)<($rsize_325_i>>>0);
 var $sub100_rsize_3_i=($cmp101_i?$sub100_i:$rsize_325_i);
 var $t_2_v_3_i=($cmp101_i?$t_224_i:$v_326_i);
 var $arrayidx105_i=(($t_224_i+16)|0);
 var $86=HEAP32[(($arrayidx105_i)>>2)];
 var $cmp106_i=($86|0)==0;
 if($cmp106_i){label=95;break;}else{var $t_224_i=$86;var $rsize_325_i=$sub100_rsize_3_i;var $v_326_i=$t_2_v_3_i;label=94;break;}
 case 95: 
 var $arrayidx112_i=(($t_224_i+20)|0);
 var $87=HEAP32[(($arrayidx112_i)>>2)];
 var $cmp96_i=($87|0)==0;
 if($cmp96_i){var $rsize_3_lcssa_i=$sub100_rsize_3_i;var $v_3_lcssa_i=$t_2_v_3_i;label=96;break;}else{var $t_224_i=$87;var $rsize_325_i=$sub100_rsize_3_i;var $v_326_i=$t_2_v_3_i;label=94;break;}
 case 96: 
 var $v_3_lcssa_i;
 var $rsize_3_lcssa_i;
 var $cmp115_i=($v_3_lcssa_i|0)==0;
 if($cmp115_i){var $nb_0=$and144;label=160;break;}else{label=97;break;}
 case 97: 
 var $88=HEAP32[((11968)>>2)];
 var $sub117_i=((($88)-($and144))|0);
 var $cmp118_i=($rsize_3_lcssa_i>>>0)<($sub117_i>>>0);
 if($cmp118_i){label=98;break;}else{var $nb_0=$and144;label=160;break;}
 case 98: 
 var $89=$v_3_lcssa_i;
 var $90=HEAP32[((11976)>>2)];
 var $cmp120_i=($89>>>0)<($90>>>0);
 if($cmp120_i){label=158;break;}else{label=99;break;}
 case 99: 
 var $add_ptr_i128=(($89+$and144)|0);
 var $91=$add_ptr_i128;
 var $cmp122_i=($89>>>0)<($add_ptr_i128>>>0);
 if($cmp122_i){label=100;break;}else{label=158;break;}
 case 100: 
 var $parent_i129=(($v_3_lcssa_i+24)|0);
 var $92=HEAP32[(($parent_i129)>>2)];
 var $bk_i130=(($v_3_lcssa_i+12)|0);
 var $93=HEAP32[(($bk_i130)>>2)];
 var $cmp127_i=($93|0)==($v_3_lcssa_i|0);
 if($cmp127_i){label=106;break;}else{label=101;break;}
 case 101: 
 var $fd_i131=(($v_3_lcssa_i+8)|0);
 var $94=HEAP32[(($fd_i131)>>2)];
 var $95=$94;
 var $cmp132_i=($95>>>0)<($90>>>0);
 if($cmp132_i){label=105;break;}else{label=102;break;}
 case 102: 
 var $bk135_i=(($94+12)|0);
 var $96=HEAP32[(($bk135_i)>>2)];
 var $cmp136_i=($96|0)==($v_3_lcssa_i|0);
 if($cmp136_i){label=103;break;}else{label=105;break;}
 case 103: 
 var $fd138_i=(($93+8)|0);
 var $97=HEAP32[(($fd138_i)>>2)];
 var $cmp139_i=($97|0)==($v_3_lcssa_i|0);
 if($cmp139_i){label=104;break;}else{label=105;break;}
 case 104: 
 HEAP32[(($bk135_i)>>2)]=$93;
 HEAP32[(($fd138_i)>>2)]=$94;
 var $R_1_i139=$93;label=113;break;
 case 105: 
 _abort();
 throw "Reached an unreachable!";
 case 106: 
 var $arrayidx150_i=(($v_3_lcssa_i+20)|0);
 var $98=HEAP32[(($arrayidx150_i)>>2)];
 var $cmp151_i=($98|0)==0;
 if($cmp151_i){label=107;break;}else{var $R_0_i137=$98;var $RP_0_i136=$arrayidx150_i;label=108;break;}
 case 107: 
 var $arrayidx154_i133=(($v_3_lcssa_i+16)|0);
 var $99=HEAP32[(($arrayidx154_i133)>>2)];
 var $cmp155_i134=($99|0)==0;
 if($cmp155_i134){var $R_1_i139=0;label=113;break;}else{var $R_0_i137=$99;var $RP_0_i136=$arrayidx154_i133;label=108;break;}
 case 108: 
 var $RP_0_i136;
 var $R_0_i137;
 var $arrayidx160_i=(($R_0_i137+20)|0);
 var $100=HEAP32[(($arrayidx160_i)>>2)];
 var $cmp161_i=($100|0)==0;
 if($cmp161_i){label=109;break;}else{var $R_0_i137=$100;var $RP_0_i136=$arrayidx160_i;label=108;break;}
 case 109: 
 var $arrayidx164_i=(($R_0_i137+16)|0);
 var $101=HEAP32[(($arrayidx164_i)>>2)];
 var $cmp165_i=($101|0)==0;
 if($cmp165_i){label=110;break;}else{var $R_0_i137=$101;var $RP_0_i136=$arrayidx164_i;label=108;break;}
 case 110: 
 var $102=$RP_0_i136;
 var $cmp170_i=($102>>>0)<($90>>>0);
 if($cmp170_i){label=112;break;}else{label=111;break;}
 case 111: 
 HEAP32[(($RP_0_i136)>>2)]=0;
 var $R_1_i139=$R_0_i137;label=113;break;
 case 112: 
 _abort();
 throw "Reached an unreachable!";
 case 113: 
 var $R_1_i139;
 var $cmp179_i=($92|0)==0;
 if($cmp179_i){label=133;break;}else{label=114;break;}
 case 114: 
 var $index_i140=(($v_3_lcssa_i+28)|0);
 var $103=HEAP32[(($index_i140)>>2)];
 var $arrayidx183_i=((12264+($103<<2))|0);
 var $104=HEAP32[(($arrayidx183_i)>>2)];
 var $cmp184_i=($v_3_lcssa_i|0)==($104|0);
 if($cmp184_i){label=115;break;}else{label=117;break;}
 case 115: 
 HEAP32[(($arrayidx183_i)>>2)]=$R_1_i139;
 var $cond20_i=($R_1_i139|0)==0;
 if($cond20_i){label=116;break;}else{label=123;break;}
 case 116: 
 var $105=HEAP32[(($index_i140)>>2)];
 var $shl191_i=1<<$105;
 var $neg_i141=$shl191_i^-1;
 var $106=HEAP32[((11964)>>2)];
 var $and193_i=$106&$neg_i141;
 HEAP32[((11964)>>2)]=$and193_i;
 label=133;break;
 case 117: 
 var $107=$92;
 var $108=HEAP32[((11976)>>2)];
 var $cmp197_i=($107>>>0)<($108>>>0);
 if($cmp197_i){label=121;break;}else{label=118;break;}
 case 118: 
 var $arrayidx203_i=(($92+16)|0);
 var $109=HEAP32[(($arrayidx203_i)>>2)];
 var $cmp204_i=($109|0)==($v_3_lcssa_i|0);
 if($cmp204_i){label=119;break;}else{label=120;break;}
 case 119: 
 HEAP32[(($arrayidx203_i)>>2)]=$R_1_i139;
 label=122;break;
 case 120: 
 var $arrayidx211_i=(($92+20)|0);
 HEAP32[(($arrayidx211_i)>>2)]=$R_1_i139;
 label=122;break;
 case 121: 
 _abort();
 throw "Reached an unreachable!";
 case 122: 
 var $cmp216_i=($R_1_i139|0)==0;
 if($cmp216_i){label=133;break;}else{label=123;break;}
 case 123: 
 var $110=$R_1_i139;
 var $111=HEAP32[((11976)>>2)];
 var $cmp220_i=($110>>>0)<($111>>>0);
 if($cmp220_i){label=132;break;}else{label=124;break;}
 case 124: 
 var $parent225_i=(($R_1_i139+24)|0);
 HEAP32[(($parent225_i)>>2)]=$92;
 var $arrayidx227_i=(($v_3_lcssa_i+16)|0);
 var $112=HEAP32[(($arrayidx227_i)>>2)];
 var $cmp228_i=($112|0)==0;
 if($cmp228_i){label=128;break;}else{label=125;break;}
 case 125: 
 var $113=$112;
 var $114=HEAP32[((11976)>>2)];
 var $cmp232_i=($113>>>0)<($114>>>0);
 if($cmp232_i){label=127;break;}else{label=126;break;}
 case 126: 
 var $arrayidx238_i=(($R_1_i139+16)|0);
 HEAP32[(($arrayidx238_i)>>2)]=$112;
 var $parent239_i=(($112+24)|0);
 HEAP32[(($parent239_i)>>2)]=$R_1_i139;
 label=128;break;
 case 127: 
 _abort();
 throw "Reached an unreachable!";
 case 128: 
 var $arrayidx244_i=(($v_3_lcssa_i+20)|0);
 var $115=HEAP32[(($arrayidx244_i)>>2)];
 var $cmp245_i=($115|0)==0;
 if($cmp245_i){label=133;break;}else{label=129;break;}
 case 129: 
 var $116=$115;
 var $117=HEAP32[((11976)>>2)];
 var $cmp249_i=($116>>>0)<($117>>>0);
 if($cmp249_i){label=131;break;}else{label=130;break;}
 case 130: 
 var $arrayidx255_i=(($R_1_i139+20)|0);
 HEAP32[(($arrayidx255_i)>>2)]=$115;
 var $parent256_i=(($115+24)|0);
 HEAP32[(($parent256_i)>>2)]=$R_1_i139;
 label=133;break;
 case 131: 
 _abort();
 throw "Reached an unreachable!";
 case 132: 
 _abort();
 throw "Reached an unreachable!";
 case 133: 
 var $cmp264_i=($rsize_3_lcssa_i>>>0)<16;
 if($cmp264_i){label=134;break;}else{label=135;break;}
 case 134: 
 var $add267_i=((($rsize_3_lcssa_i)+($and144))|0);
 var $or269_i=$add267_i|3;
 var $head270_i=(($v_3_lcssa_i+4)|0);
 HEAP32[(($head270_i)>>2)]=$or269_i;
 var $add_ptr272_sum_i=((($add267_i)+(4))|0);
 var $head273_i=(($89+$add_ptr272_sum_i)|0);
 var $118=$head273_i;
 var $119=HEAP32[(($118)>>2)];
 var $or274_i=$119|1;
 HEAP32[(($118)>>2)]=$or274_i;
 label=159;break;
 case 135: 
 var $or277_i=$and144|3;
 var $head278_i=(($v_3_lcssa_i+4)|0);
 HEAP32[(($head278_i)>>2)]=$or277_i;
 var $or279_i=$rsize_3_lcssa_i|1;
 var $add_ptr_sum_i143174=$and144|4;
 var $head280_i=(($89+$add_ptr_sum_i143174)|0);
 var $120=$head280_i;
 HEAP32[(($120)>>2)]=$or279_i;
 var $add_ptr_sum1_i144=((($rsize_3_lcssa_i)+($and144))|0);
 var $add_ptr281_i=(($89+$add_ptr_sum1_i144)|0);
 var $prev_foot_i145=$add_ptr281_i;
 HEAP32[(($prev_foot_i145)>>2)]=$rsize_3_lcssa_i;
 var $shr282_i=$rsize_3_lcssa_i>>>3;
 var $cmp283_i=($rsize_3_lcssa_i>>>0)<256;
 if($cmp283_i){label=136;break;}else{label=141;break;}
 case 136: 
 var $shl287_i=$shr282_i<<1;
 var $arrayidx288_i=((12000+($shl287_i<<2))|0);
 var $121=$arrayidx288_i;
 var $122=HEAP32[((11960)>>2)];
 var $shl290_i=1<<$shr282_i;
 var $and291_i=$122&$shl290_i;
 var $tobool292_i=($and291_i|0)==0;
 if($tobool292_i){label=137;break;}else{label=138;break;}
 case 137: 
 var $or296_i=$122|$shl290_i;
 HEAP32[((11960)>>2)]=$or296_i;
 var $arrayidx288_sum_pre_i=((($shl287_i)+(2))|0);
 var $_pre_i146=((12000+($arrayidx288_sum_pre_i<<2))|0);
 var $F289_0_i=$121;var $_pre_phi_i147=$_pre_i146;label=140;break;
 case 138: 
 var $arrayidx288_sum16_i=((($shl287_i)+(2))|0);
 var $123=((12000+($arrayidx288_sum16_i<<2))|0);
 var $124=HEAP32[(($123)>>2)];
 var $125=$124;
 var $126=HEAP32[((11976)>>2)];
 var $cmp300_i=($125>>>0)<($126>>>0);
 if($cmp300_i){label=139;break;}else{var $F289_0_i=$124;var $_pre_phi_i147=$123;label=140;break;}
 case 139: 
 _abort();
 throw "Reached an unreachable!";
 case 140: 
 var $_pre_phi_i147;
 var $F289_0_i;
 HEAP32[(($_pre_phi_i147)>>2)]=$91;
 var $bk310_i=(($F289_0_i+12)|0);
 HEAP32[(($bk310_i)>>2)]=$91;
 var $add_ptr_sum14_i=((($and144)+(8))|0);
 var $fd311_i=(($89+$add_ptr_sum14_i)|0);
 var $127=$fd311_i;
 HEAP32[(($127)>>2)]=$F289_0_i;
 var $add_ptr_sum15_i=((($and144)+(12))|0);
 var $bk312_i=(($89+$add_ptr_sum15_i)|0);
 var $128=$bk312_i;
 HEAP32[(($128)>>2)]=$121;
 label=159;break;
 case 141: 
 var $129=$add_ptr_i128;
 var $shr317_i=$rsize_3_lcssa_i>>>8;
 var $cmp318_i=($shr317_i|0)==0;
 if($cmp318_i){var $I315_0_i=0;label=144;break;}else{label=142;break;}
 case 142: 
 var $cmp322_i=($rsize_3_lcssa_i>>>0)>16777215;
 if($cmp322_i){var $I315_0_i=31;label=144;break;}else{label=143;break;}
 case 143: 
 var $sub328_i=((($shr317_i)+(1048320))|0);
 var $shr329_i=$sub328_i>>>16;
 var $and330_i=$shr329_i&8;
 var $shl332_i=$shr317_i<<$and330_i;
 var $sub333_i=((($shl332_i)+(520192))|0);
 var $shr334_i=$sub333_i>>>16;
 var $and335_i=$shr334_i&4;
 var $add336_i=$and335_i|$and330_i;
 var $shl337_i=$shl332_i<<$and335_i;
 var $sub338_i=((($shl337_i)+(245760))|0);
 var $shr339_i=$sub338_i>>>16;
 var $and340_i=$shr339_i&2;
 var $add341_i=$add336_i|$and340_i;
 var $sub342_i=(((14)-($add341_i))|0);
 var $shl343_i=$shl337_i<<$and340_i;
 var $shr344_i=$shl343_i>>>15;
 var $add345_i=((($sub342_i)+($shr344_i))|0);
 var $shl346_i=$add345_i<<1;
 var $add347_i=((($add345_i)+(7))|0);
 var $shr348_i=$rsize_3_lcssa_i>>>($add347_i>>>0);
 var $and349_i=$shr348_i&1;
 var $add350_i=$and349_i|$shl346_i;
 var $I315_0_i=$add350_i;label=144;break;
 case 144: 
 var $I315_0_i;
 var $arrayidx354_i=((12264+($I315_0_i<<2))|0);
 var $add_ptr_sum2_i=((($and144)+(28))|0);
 var $index355_i=(($89+$add_ptr_sum2_i)|0);
 var $130=$index355_i;
 HEAP32[(($130)>>2)]=$I315_0_i;
 var $add_ptr_sum3_i=((($and144)+(16))|0);
 var $child356_i=(($89+$add_ptr_sum3_i)|0);
 var $child356_sum_i=((($and144)+(20))|0);
 var $arrayidx357_i=(($89+$child356_sum_i)|0);
 var $131=$arrayidx357_i;
 HEAP32[(($131)>>2)]=0;
 var $arrayidx359_i=$child356_i;
 HEAP32[(($arrayidx359_i)>>2)]=0;
 var $132=HEAP32[((11964)>>2)];
 var $shl361_i=1<<$I315_0_i;
 var $and362_i=$132&$shl361_i;
 var $tobool363_i=($and362_i|0)==0;
 if($tobool363_i){label=145;break;}else{label=146;break;}
 case 145: 
 var $or367_i=$132|$shl361_i;
 HEAP32[((11964)>>2)]=$or367_i;
 HEAP32[(($arrayidx354_i)>>2)]=$129;
 var $133=$arrayidx354_i;
 var $add_ptr_sum4_i=((($and144)+(24))|0);
 var $parent368_i=(($89+$add_ptr_sum4_i)|0);
 var $134=$parent368_i;
 HEAP32[(($134)>>2)]=$133;
 var $add_ptr_sum5_i=((($and144)+(12))|0);
 var $bk369_i=(($89+$add_ptr_sum5_i)|0);
 var $135=$bk369_i;
 HEAP32[(($135)>>2)]=$129;
 var $add_ptr_sum6_i=((($and144)+(8))|0);
 var $fd370_i=(($89+$add_ptr_sum6_i)|0);
 var $136=$fd370_i;
 HEAP32[(($136)>>2)]=$129;
 label=159;break;
 case 146: 
 var $137=HEAP32[(($arrayidx354_i)>>2)];
 var $cmp373_i=($I315_0_i|0)==31;
 if($cmp373_i){var $cond382_i=0;label=148;break;}else{label=147;break;}
 case 147: 
 var $shr377_i=$I315_0_i>>>1;
 var $sub380_i=(((25)-($shr377_i))|0);
 var $cond382_i=$sub380_i;label=148;break;
 case 148: 
 var $cond382_i;
 var $shl383_i=$rsize_3_lcssa_i<<$cond382_i;
 var $K372_0_i=$shl383_i;var $T_0_i=$137;label=149;break;
 case 149: 
 var $T_0_i;
 var $K372_0_i;
 var $head385_i=(($T_0_i+4)|0);
 var $138=HEAP32[(($head385_i)>>2)];
 var $and386_i=$138&-8;
 var $cmp387_i=($and386_i|0)==($rsize_3_lcssa_i|0);
 if($cmp387_i){label=154;break;}else{label=150;break;}
 case 150: 
 var $shr390_i=$K372_0_i>>>31;
 var $arrayidx393_i=(($T_0_i+16+($shr390_i<<2))|0);
 var $139=HEAP32[(($arrayidx393_i)>>2)];
 var $cmp395_i=($139|0)==0;
 var $shl394_i=$K372_0_i<<1;
 if($cmp395_i){label=151;break;}else{var $K372_0_i=$shl394_i;var $T_0_i=$139;label=149;break;}
 case 151: 
 var $140=$arrayidx393_i;
 var $141=HEAP32[((11976)>>2)];
 var $cmp400_i=($140>>>0)<($141>>>0);
 if($cmp400_i){label=153;break;}else{label=152;break;}
 case 152: 
 HEAP32[(($arrayidx393_i)>>2)]=$129;
 var $add_ptr_sum11_i=((($and144)+(24))|0);
 var $parent405_i=(($89+$add_ptr_sum11_i)|0);
 var $142=$parent405_i;
 HEAP32[(($142)>>2)]=$T_0_i;
 var $add_ptr_sum12_i=((($and144)+(12))|0);
 var $bk406_i=(($89+$add_ptr_sum12_i)|0);
 var $143=$bk406_i;
 HEAP32[(($143)>>2)]=$129;
 var $add_ptr_sum13_i=((($and144)+(8))|0);
 var $fd407_i=(($89+$add_ptr_sum13_i)|0);
 var $144=$fd407_i;
 HEAP32[(($144)>>2)]=$129;
 label=159;break;
 case 153: 
 _abort();
 throw "Reached an unreachable!";
 case 154: 
 var $fd412_i=(($T_0_i+8)|0);
 var $145=HEAP32[(($fd412_i)>>2)];
 var $146=$T_0_i;
 var $147=HEAP32[((11976)>>2)];
 var $cmp414_i=($146>>>0)<($147>>>0);
 if($cmp414_i){label=157;break;}else{label=155;break;}
 case 155: 
 var $148=$145;
 var $cmp418_i=($148>>>0)<($147>>>0);
 if($cmp418_i){label=157;break;}else{label=156;break;}
 case 156: 
 var $bk425_i=(($145+12)|0);
 HEAP32[(($bk425_i)>>2)]=$129;
 HEAP32[(($fd412_i)>>2)]=$129;
 var $add_ptr_sum8_i=((($and144)+(8))|0);
 var $fd427_i=(($89+$add_ptr_sum8_i)|0);
 var $149=$fd427_i;
 HEAP32[(($149)>>2)]=$145;
 var $add_ptr_sum9_i=((($and144)+(12))|0);
 var $bk428_i=(($89+$add_ptr_sum9_i)|0);
 var $150=$bk428_i;
 HEAP32[(($150)>>2)]=$T_0_i;
 var $add_ptr_sum10_i=((($and144)+(24))|0);
 var $parent429_i=(($89+$add_ptr_sum10_i)|0);
 var $151=$parent429_i;
 HEAP32[(($151)>>2)]=0;
 label=159;break;
 case 157: 
 _abort();
 throw "Reached an unreachable!";
 case 158: 
 _abort();
 throw "Reached an unreachable!";
 case 159: 
 var $add_ptr436_i=(($v_3_lcssa_i+8)|0);
 var $152=$add_ptr436_i;
 var $cmp149=($add_ptr436_i|0)==0;
 if($cmp149){var $nb_0=$and144;label=160;break;}else{var $mem_0=$152;label=341;break;}
 case 160: 
 var $nb_0;
 var $153=HEAP32[((11968)>>2)];
 var $cmp155=($nb_0>>>0)>($153>>>0);
 if($cmp155){label=165;break;}else{label=161;break;}
 case 161: 
 var $sub159=((($153)-($nb_0))|0);
 var $154=HEAP32[((11980)>>2)];
 var $cmp161=($sub159>>>0)>15;
 if($cmp161){label=162;break;}else{label=163;break;}
 case 162: 
 var $155=$154;
 var $add_ptr165=(($155+$nb_0)|0);
 var $156=$add_ptr165;
 HEAP32[((11980)>>2)]=$156;
 HEAP32[((11968)>>2)]=$sub159;
 var $or166=$sub159|1;
 var $add_ptr165_sum=((($nb_0)+(4))|0);
 var $head167=(($155+$add_ptr165_sum)|0);
 var $157=$head167;
 HEAP32[(($157)>>2)]=$or166;
 var $add_ptr168=(($155+$153)|0);
 var $prev_foot169=$add_ptr168;
 HEAP32[(($prev_foot169)>>2)]=$sub159;
 var $or171=$nb_0|3;
 var $head172=(($154+4)|0);
 HEAP32[(($head172)>>2)]=$or171;
 label=164;break;
 case 163: 
 HEAP32[((11968)>>2)]=0;
 HEAP32[((11980)>>2)]=0;
 var $or175=$153|3;
 var $head176=(($154+4)|0);
 HEAP32[(($head176)>>2)]=$or175;
 var $158=$154;
 var $add_ptr177_sum=((($153)+(4))|0);
 var $head178=(($158+$add_ptr177_sum)|0);
 var $159=$head178;
 var $160=HEAP32[(($159)>>2)];
 var $or179=$160|1;
 HEAP32[(($159)>>2)]=$or179;
 label=164;break;
 case 164: 
 var $add_ptr181=(($154+8)|0);
 var $161=$add_ptr181;
 var $mem_0=$161;label=341;break;
 case 165: 
 var $162=HEAP32[((11972)>>2)];
 var $cmp183=($nb_0>>>0)<($162>>>0);
 if($cmp183){label=166;break;}else{label=167;break;}
 case 166: 
 var $sub187=((($162)-($nb_0))|0);
 HEAP32[((11972)>>2)]=$sub187;
 var $163=HEAP32[((11984)>>2)];
 var $164=$163;
 var $add_ptr190=(($164+$nb_0)|0);
 var $165=$add_ptr190;
 HEAP32[((11984)>>2)]=$165;
 var $or191=$sub187|1;
 var $add_ptr190_sum=((($nb_0)+(4))|0);
 var $head192=(($164+$add_ptr190_sum)|0);
 var $166=$head192;
 HEAP32[(($166)>>2)]=$or191;
 var $or194=$nb_0|3;
 var $head195=(($163+4)|0);
 HEAP32[(($head195)>>2)]=$or194;
 var $add_ptr196=(($163+8)|0);
 var $167=$add_ptr196;
 var $mem_0=$167;label=341;break;
 case 167: 
 var $168=HEAP32[((11912)>>2)];
 var $cmp_i148=($168|0)==0;
 if($cmp_i148){label=168;break;}else{label=171;break;}
 case 168: 
 var $call_i_i=_sysconf(30);
 var $sub_i_i=((($call_i_i)-(1))|0);
 var $and_i_i=$sub_i_i&$call_i_i;
 var $cmp1_i_i=($and_i_i|0)==0;
 if($cmp1_i_i){label=170;break;}else{label=169;break;}
 case 169: 
 _abort();
 throw "Reached an unreachable!";
 case 170: 
 HEAP32[((11920)>>2)]=$call_i_i;
 HEAP32[((11916)>>2)]=$call_i_i;
 HEAP32[((11924)>>2)]=-1;
 HEAP32[((11928)>>2)]=-1;
 HEAP32[((11932)>>2)]=0;
 HEAP32[((12404)>>2)]=0;
 var $call6_i_i=_time(0);
 var $xor_i_i=$call6_i_i&-16;
 var $and7_i_i=$xor_i_i^1431655768;
 HEAP32[((11912)>>2)]=$and7_i_i;
 label=171;break;
 case 171: 
 var $add_i149=((($nb_0)+(48))|0);
 var $169=HEAP32[((11920)>>2)];
 var $sub_i150=((($nb_0)+(47))|0);
 var $add9_i=((($169)+($sub_i150))|0);
 var $neg_i151=(((-$169))|0);
 var $and11_i=$add9_i&$neg_i151;
 var $cmp12_i=($and11_i>>>0)>($nb_0>>>0);
 if($cmp12_i){label=172;break;}else{var $mem_0=0;label=341;break;}
 case 172: 
 var $170=HEAP32[((12400)>>2)];
 var $cmp15_i=($170|0)==0;
 if($cmp15_i){label=174;break;}else{label=173;break;}
 case 173: 
 var $171=HEAP32[((12392)>>2)];
 var $add17_i152=((($171)+($and11_i))|0);
 var $cmp19_i=($add17_i152>>>0)<=($171>>>0);
 var $cmp21_i=($add17_i152>>>0)>($170>>>0);
 var $or_cond1_i=$cmp19_i|$cmp21_i;
 if($or_cond1_i){var $mem_0=0;label=341;break;}else{label=174;break;}
 case 174: 
 var $172=HEAP32[((12404)>>2)];
 var $and26_i=$172&4;
 var $tobool27_i=($and26_i|0)==0;
 if($tobool27_i){label=175;break;}else{var $tsize_1_i=0;label=198;break;}
 case 175: 
 var $173=HEAP32[((11984)>>2)];
 var $cmp29_i=($173|0)==0;
 if($cmp29_i){label=181;break;}else{label=176;break;}
 case 176: 
 var $174=$173;
 var $sp_0_i_i=12408;label=177;break;
 case 177: 
 var $sp_0_i_i;
 var $base_i_i=(($sp_0_i_i)|0);
 var $175=HEAP32[(($base_i_i)>>2)];
 var $cmp_i9_i=($175>>>0)>($174>>>0);
 if($cmp_i9_i){label=179;break;}else{label=178;break;}
 case 178: 
 var $size_i_i=(($sp_0_i_i+4)|0);
 var $176=HEAP32[(($size_i_i)>>2)];
 var $add_ptr_i_i=(($175+$176)|0);
 var $cmp2_i_i=($add_ptr_i_i>>>0)>($174>>>0);
 if($cmp2_i_i){label=180;break;}else{label=179;break;}
 case 179: 
 var $next_i_i=(($sp_0_i_i+8)|0);
 var $177=HEAP32[(($next_i_i)>>2)];
 var $cmp3_i_i=($177|0)==0;
 if($cmp3_i_i){label=181;break;}else{var $sp_0_i_i=$177;label=177;break;}
 case 180: 
 var $cmp32_i154=($sp_0_i_i|0)==0;
 if($cmp32_i154){label=181;break;}else{label=188;break;}
 case 181: 
 var $call34_i=_sbrk(0);
 var $cmp35_i156=($call34_i|0)==-1;
 if($cmp35_i156){var $tsize_0758385_i=0;label=197;break;}else{label=182;break;}
 case 182: 
 var $178=$call34_i;
 var $179=HEAP32[((11916)>>2)];
 var $sub38_i=((($179)-(1))|0);
 var $and39_i=$sub38_i&$178;
 var $cmp40_i157=($and39_i|0)==0;
 if($cmp40_i157){var $ssize_0_i=$and11_i;label=184;break;}else{label=183;break;}
 case 183: 
 var $add43_i=((($sub38_i)+($178))|0);
 var $neg45_i=(((-$179))|0);
 var $and46_i=$add43_i&$neg45_i;
 var $sub47_i=((($and11_i)-($178))|0);
 var $add48_i=((($sub47_i)+($and46_i))|0);
 var $ssize_0_i=$add48_i;label=184;break;
 case 184: 
 var $ssize_0_i;
 var $180=HEAP32[((12392)>>2)];
 var $add51_i=((($180)+($ssize_0_i))|0);
 var $cmp52_i=($ssize_0_i>>>0)>($nb_0>>>0);
 var $cmp54_i158=($ssize_0_i>>>0)<2147483647;
 var $or_cond_i159=$cmp52_i&$cmp54_i158;
 if($or_cond_i159){label=185;break;}else{var $tsize_0758385_i=0;label=197;break;}
 case 185: 
 var $181=HEAP32[((12400)>>2)];
 var $cmp57_i=($181|0)==0;
 if($cmp57_i){label=187;break;}else{label=186;break;}
 case 186: 
 var $cmp60_i=($add51_i>>>0)<=($180>>>0);
 var $cmp63_i=($add51_i>>>0)>($181>>>0);
 var $or_cond2_i=$cmp60_i|$cmp63_i;
 if($or_cond2_i){var $tsize_0758385_i=0;label=197;break;}else{label=187;break;}
 case 187: 
 var $call65_i=_sbrk($ssize_0_i);
 var $cmp66_i160=($call65_i|0)==($call34_i|0);
 var $ssize_0__i=($cmp66_i160?$ssize_0_i:0);
 var $call34__i=($cmp66_i160?$call34_i:-1);
 var $tbase_0_i=$call34__i;var $tsize_0_i=$ssize_0__i;var $br_0_i=$call65_i;var $ssize_1_i=$ssize_0_i;label=190;break;
 case 188: 
 var $182=HEAP32[((11972)>>2)];
 var $add74_i=((($add9_i)-($182))|0);
 var $and77_i=$add74_i&$neg_i151;
 var $cmp78_i=($and77_i>>>0)<2147483647;
 if($cmp78_i){label=189;break;}else{var $tsize_0758385_i=0;label=197;break;}
 case 189: 
 var $call80_i=_sbrk($and77_i);
 var $183=HEAP32[(($base_i_i)>>2)];
 var $184=HEAP32[(($size_i_i)>>2)];
 var $add_ptr_i162=(($183+$184)|0);
 var $cmp82_i=($call80_i|0)==($add_ptr_i162|0);
 var $and77__i=($cmp82_i?$and77_i:0);
 var $call80__i=($cmp82_i?$call80_i:-1);
 var $tbase_0_i=$call80__i;var $tsize_0_i=$and77__i;var $br_0_i=$call80_i;var $ssize_1_i=$and77_i;label=190;break;
 case 190: 
 var $ssize_1_i;
 var $br_0_i;
 var $tsize_0_i;
 var $tbase_0_i;
 var $sub109_i=(((-$ssize_1_i))|0);
 var $cmp86_i=($tbase_0_i|0)==-1;
 if($cmp86_i){label=191;break;}else{var $tsize_291_i=$tsize_0_i;var $tbase_292_i=$tbase_0_i;label=201;break;}
 case 191: 
 var $cmp88_i=($br_0_i|0)!=-1;
 var $cmp90_i163=($ssize_1_i>>>0)<2147483647;
 var $or_cond3_i=$cmp88_i&$cmp90_i163;
 var $cmp93_i=($ssize_1_i>>>0)<($add_i149>>>0);
 var $or_cond4_i=$or_cond3_i&$cmp93_i;
 if($or_cond4_i){label=192;break;}else{var $ssize_2_i=$ssize_1_i;label=196;break;}
 case 192: 
 var $185=HEAP32[((11920)>>2)];
 var $sub96_i=((($sub_i150)-($ssize_1_i))|0);
 var $add98_i=((($sub96_i)+($185))|0);
 var $neg100_i=(((-$185))|0);
 var $and101_i=$add98_i&$neg100_i;
 var $cmp102_i=($and101_i>>>0)<2147483647;
 if($cmp102_i){label=193;break;}else{var $ssize_2_i=$ssize_1_i;label=196;break;}
 case 193: 
 var $call104_i=_sbrk($and101_i);
 var $cmp105_i=($call104_i|0)==-1;
 if($cmp105_i){label=195;break;}else{label=194;break;}
 case 194: 
 var $add107_i=((($and101_i)+($ssize_1_i))|0);
 var $ssize_2_i=$add107_i;label=196;break;
 case 195: 
 var $call110_i=_sbrk($sub109_i);
 var $tsize_0758385_i=$tsize_0_i;label=197;break;
 case 196: 
 var $ssize_2_i;
 var $cmp115_i164=($br_0_i|0)==-1;
 if($cmp115_i164){var $tsize_0758385_i=$tsize_0_i;label=197;break;}else{var $tsize_291_i=$ssize_2_i;var $tbase_292_i=$br_0_i;label=201;break;}
 case 197: 
 var $tsize_0758385_i;
 var $186=HEAP32[((12404)>>2)];
 var $or_i165=$186|4;
 HEAP32[((12404)>>2)]=$or_i165;
 var $tsize_1_i=$tsize_0758385_i;label=198;break;
 case 198: 
 var $tsize_1_i;
 var $cmp124_i=($and11_i>>>0)<2147483647;
 if($cmp124_i){label=199;break;}else{label=340;break;}
 case 199: 
 var $call128_i=_sbrk($and11_i);
 var $call129_i=_sbrk(0);
 var $notlhs_i=($call128_i|0)!=-1;
 var $notrhs_i=($call129_i|0)!=-1;
 var $or_cond6_not_i=$notrhs_i&$notlhs_i;
 var $cmp134_i=($call128_i>>>0)<($call129_i>>>0);
 var $or_cond7_i=$or_cond6_not_i&$cmp134_i;
 if($or_cond7_i){label=200;break;}else{label=340;break;}
 case 200: 
 var $sub_ptr_lhs_cast_i=$call129_i;
 var $sub_ptr_rhs_cast_i=$call128_i;
 var $sub_ptr_sub_i=((($sub_ptr_lhs_cast_i)-($sub_ptr_rhs_cast_i))|0);
 var $add137_i=((($nb_0)+(40))|0);
 var $cmp138_i166=($sub_ptr_sub_i>>>0)>($add137_i>>>0);
 var $sub_ptr_sub_tsize_1_i=($cmp138_i166?$sub_ptr_sub_i:$tsize_1_i);
 var $call128_tbase_1_i=($cmp138_i166?$call128_i:-1);
 var $cmp144_i=($call128_tbase_1_i|0)==-1;
 if($cmp144_i){label=340;break;}else{var $tsize_291_i=$sub_ptr_sub_tsize_1_i;var $tbase_292_i=$call128_tbase_1_i;label=201;break;}
 case 201: 
 var $tbase_292_i;
 var $tsize_291_i;
 var $187=HEAP32[((12392)>>2)];
 var $add147_i=((($187)+($tsize_291_i))|0);
 HEAP32[((12392)>>2)]=$add147_i;
 var $188=HEAP32[((12396)>>2)];
 var $cmp148_i=($add147_i>>>0)>($188>>>0);
 if($cmp148_i){label=202;break;}else{label=203;break;}
 case 202: 
 HEAP32[((12396)>>2)]=$add147_i;
 label=203;break;
 case 203: 
 var $189=HEAP32[((11984)>>2)];
 var $cmp154_i=($189|0)==0;
 if($cmp154_i){label=204;break;}else{var $sp_0105_i=12408;label=211;break;}
 case 204: 
 var $190=HEAP32[((11976)>>2)];
 var $cmp156_i=($190|0)==0;
 var $cmp159_i168=($tbase_292_i>>>0)<($190>>>0);
 var $or_cond8_i=$cmp156_i|$cmp159_i168;
 if($or_cond8_i){label=205;break;}else{label=206;break;}
 case 205: 
 HEAP32[((11976)>>2)]=$tbase_292_i;
 label=206;break;
 case 206: 
 HEAP32[((12408)>>2)]=$tbase_292_i;
 HEAP32[((12412)>>2)]=$tsize_291_i;
 HEAP32[((12420)>>2)]=0;
 var $191=HEAP32[((11912)>>2)];
 HEAP32[((11996)>>2)]=$191;
 HEAP32[((11992)>>2)]=-1;
 var $i_02_i_i=0;label=207;break;
 case 207: 
 var $i_02_i_i;
 var $shl_i_i=$i_02_i_i<<1;
 var $arrayidx_i_i=((12000+($shl_i_i<<2))|0);
 var $192=$arrayidx_i_i;
 var $arrayidx_sum_i_i=((($shl_i_i)+(3))|0);
 var $193=((12000+($arrayidx_sum_i_i<<2))|0);
 HEAP32[(($193)>>2)]=$192;
 var $arrayidx_sum1_i_i=((($shl_i_i)+(2))|0);
 var $194=((12000+($arrayidx_sum1_i_i<<2))|0);
 HEAP32[(($194)>>2)]=$192;
 var $inc_i_i=((($i_02_i_i)+(1))|0);
 var $cmp_i11_i=($inc_i_i>>>0)<32;
 if($cmp_i11_i){var $i_02_i_i=$inc_i_i;label=207;break;}else{label=208;break;}
 case 208: 
 var $sub169_i=((($tsize_291_i)-(40))|0);
 var $add_ptr_i12_i=(($tbase_292_i+8)|0);
 var $195=$add_ptr_i12_i;
 var $and_i13_i=$195&7;
 var $cmp_i14_i=($and_i13_i|0)==0;
 if($cmp_i14_i){var $cond_i_i=0;label=210;break;}else{label=209;break;}
 case 209: 
 var $196=(((-$195))|0);
 var $and3_i_i=$196&7;
 var $cond_i_i=$and3_i_i;label=210;break;
 case 210: 
 var $cond_i_i;
 var $add_ptr4_i_i=(($tbase_292_i+$cond_i_i)|0);
 var $197=$add_ptr4_i_i;
 var $sub5_i_i=((($sub169_i)-($cond_i_i))|0);
 HEAP32[((11984)>>2)]=$197;
 HEAP32[((11972)>>2)]=$sub5_i_i;
 var $or_i_i=$sub5_i_i|1;
 var $add_ptr4_sum_i_i=((($cond_i_i)+(4))|0);
 var $head_i_i=(($tbase_292_i+$add_ptr4_sum_i_i)|0);
 var $198=$head_i_i;
 HEAP32[(($198)>>2)]=$or_i_i;
 var $add_ptr6_sum_i_i=((($tsize_291_i)-(36))|0);
 var $head7_i_i=(($tbase_292_i+$add_ptr6_sum_i_i)|0);
 var $199=$head7_i_i;
 HEAP32[(($199)>>2)]=40;
 var $200=HEAP32[((11928)>>2)];
 HEAP32[((11988)>>2)]=$200;
 label=338;break;
 case 211: 
 var $sp_0105_i;
 var $base184_i=(($sp_0105_i)|0);
 var $201=HEAP32[(($base184_i)>>2)];
 var $size185_i=(($sp_0105_i+4)|0);
 var $202=HEAP32[(($size185_i)>>2)];
 var $add_ptr186_i=(($201+$202)|0);
 var $cmp187_i=($tbase_292_i|0)==($add_ptr186_i|0);
 if($cmp187_i){label=213;break;}else{label=212;break;}
 case 212: 
 var $next_i=(($sp_0105_i+8)|0);
 var $203=HEAP32[(($next_i)>>2)];
 var $cmp183_i=($203|0)==0;
 if($cmp183_i){label=218;break;}else{var $sp_0105_i=$203;label=211;break;}
 case 213: 
 var $sflags190_i=(($sp_0105_i+12)|0);
 var $204=HEAP32[(($sflags190_i)>>2)];
 var $and191_i=$204&8;
 var $tobool192_i=($and191_i|0)==0;
 if($tobool192_i){label=214;break;}else{label=218;break;}
 case 214: 
 var $205=$189;
 var $cmp200_i=($205>>>0)>=($201>>>0);
 var $cmp206_i=($205>>>0)<($tbase_292_i>>>0);
 var $or_cond94_i=$cmp200_i&$cmp206_i;
 if($or_cond94_i){label=215;break;}else{label=218;break;}
 case 215: 
 var $add209_i=((($202)+($tsize_291_i))|0);
 HEAP32[(($size185_i)>>2)]=$add209_i;
 var $206=HEAP32[((11984)>>2)];
 var $207=HEAP32[((11972)>>2)];
 var $add212_i=((($207)+($tsize_291_i))|0);
 var $208=$206;
 var $add_ptr_i23_i=(($206+8)|0);
 var $209=$add_ptr_i23_i;
 var $and_i24_i=$209&7;
 var $cmp_i25_i=($and_i24_i|0)==0;
 if($cmp_i25_i){var $cond_i28_i=0;label=217;break;}else{label=216;break;}
 case 216: 
 var $210=(((-$209))|0);
 var $and3_i26_i=$210&7;
 var $cond_i28_i=$and3_i26_i;label=217;break;
 case 217: 
 var $cond_i28_i;
 var $add_ptr4_i29_i=(($208+$cond_i28_i)|0);
 var $211=$add_ptr4_i29_i;
 var $sub5_i30_i=((($add212_i)-($cond_i28_i))|0);
 HEAP32[((11984)>>2)]=$211;
 HEAP32[((11972)>>2)]=$sub5_i30_i;
 var $or_i31_i=$sub5_i30_i|1;
 var $add_ptr4_sum_i32_i=((($cond_i28_i)+(4))|0);
 var $head_i33_i=(($208+$add_ptr4_sum_i32_i)|0);
 var $212=$head_i33_i;
 HEAP32[(($212)>>2)]=$or_i31_i;
 var $add_ptr6_sum_i34_i=((($add212_i)+(4))|0);
 var $head7_i35_i=(($208+$add_ptr6_sum_i34_i)|0);
 var $213=$head7_i35_i;
 HEAP32[(($213)>>2)]=40;
 var $214=HEAP32[((11928)>>2)];
 HEAP32[((11988)>>2)]=$214;
 label=338;break;
 case 218: 
 var $215=HEAP32[((11976)>>2)];
 var $cmp215_i=($tbase_292_i>>>0)<($215>>>0);
 if($cmp215_i){label=219;break;}else{label=220;break;}
 case 219: 
 HEAP32[((11976)>>2)]=$tbase_292_i;
 label=220;break;
 case 220: 
 var $add_ptr224_i=(($tbase_292_i+$tsize_291_i)|0);
 var $sp_1101_i=12408;label=221;break;
 case 221: 
 var $sp_1101_i;
 var $base223_i=(($sp_1101_i)|0);
 var $216=HEAP32[(($base223_i)>>2)];
 var $cmp225_i=($216|0)==($add_ptr224_i|0);
 if($cmp225_i){label=223;break;}else{label=222;break;}
 case 222: 
 var $next228_i=(($sp_1101_i+8)|0);
 var $217=HEAP32[(($next228_i)>>2)];
 var $cmp221_i=($217|0)==0;
 if($cmp221_i){label=304;break;}else{var $sp_1101_i=$217;label=221;break;}
 case 223: 
 var $sflags232_i=(($sp_1101_i+12)|0);
 var $218=HEAP32[(($sflags232_i)>>2)];
 var $and233_i=$218&8;
 var $tobool234_i=($and233_i|0)==0;
 if($tobool234_i){label=224;break;}else{label=304;break;}
 case 224: 
 HEAP32[(($base223_i)>>2)]=$tbase_292_i;
 var $size242_i=(($sp_1101_i+4)|0);
 var $219=HEAP32[(($size242_i)>>2)];
 var $add243_i=((($219)+($tsize_291_i))|0);
 HEAP32[(($size242_i)>>2)]=$add243_i;
 var $add_ptr_i38_i=(($tbase_292_i+8)|0);
 var $220=$add_ptr_i38_i;
 var $and_i39_i=$220&7;
 var $cmp_i40_i=($and_i39_i|0)==0;
 if($cmp_i40_i){var $cond_i43_i=0;label=226;break;}else{label=225;break;}
 case 225: 
 var $221=(((-$220))|0);
 var $and3_i41_i=$221&7;
 var $cond_i43_i=$and3_i41_i;label=226;break;
 case 226: 
 var $cond_i43_i;
 var $add_ptr4_i44_i=(($tbase_292_i+$cond_i43_i)|0);
 var $add_ptr224_sum_i=((($tsize_291_i)+(8))|0);
 var $add_ptr5_i_i=(($tbase_292_i+$add_ptr224_sum_i)|0);
 var $222=$add_ptr5_i_i;
 var $and6_i45_i=$222&7;
 var $cmp7_i_i=($and6_i45_i|0)==0;
 if($cmp7_i_i){var $cond15_i_i=0;label=228;break;}else{label=227;break;}
 case 227: 
 var $223=(((-$222))|0);
 var $and13_i_i=$223&7;
 var $cond15_i_i=$and13_i_i;label=228;break;
 case 228: 
 var $cond15_i_i;
 var $add_ptr224_sum122_i=((($cond15_i_i)+($tsize_291_i))|0);
 var $add_ptr16_i_i=(($tbase_292_i+$add_ptr224_sum122_i)|0);
 var $224=$add_ptr16_i_i;
 var $sub_ptr_lhs_cast_i47_i=$add_ptr16_i_i;
 var $sub_ptr_rhs_cast_i48_i=$add_ptr4_i44_i;
 var $sub_ptr_sub_i49_i=((($sub_ptr_lhs_cast_i47_i)-($sub_ptr_rhs_cast_i48_i))|0);
 var $add_ptr4_sum_i50_i=((($cond_i43_i)+($nb_0))|0);
 var $add_ptr17_i_i=(($tbase_292_i+$add_ptr4_sum_i50_i)|0);
 var $225=$add_ptr17_i_i;
 var $sub18_i_i=((($sub_ptr_sub_i49_i)-($nb_0))|0);
 var $or19_i_i=$nb_0|3;
 var $add_ptr4_sum1_i_i=((($cond_i43_i)+(4))|0);
 var $head_i51_i=(($tbase_292_i+$add_ptr4_sum1_i_i)|0);
 var $226=$head_i51_i;
 HEAP32[(($226)>>2)]=$or19_i_i;
 var $227=HEAP32[((11984)>>2)];
 var $cmp20_i_i=($224|0)==($227|0);
 if($cmp20_i_i){label=229;break;}else{label=230;break;}
 case 229: 
 var $228=HEAP32[((11972)>>2)];
 var $add_i_i=((($228)+($sub18_i_i))|0);
 HEAP32[((11972)>>2)]=$add_i_i;
 HEAP32[((11984)>>2)]=$225;
 var $or22_i_i=$add_i_i|1;
 var $add_ptr17_sum39_i_i=((($add_ptr4_sum_i50_i)+(4))|0);
 var $head23_i_i=(($tbase_292_i+$add_ptr17_sum39_i_i)|0);
 var $229=$head23_i_i;
 HEAP32[(($229)>>2)]=$or22_i_i;
 label=303;break;
 case 230: 
 var $230=HEAP32[((11980)>>2)];
 var $cmp24_i_i=($224|0)==($230|0);
 if($cmp24_i_i){label=231;break;}else{label=232;break;}
 case 231: 
 var $231=HEAP32[((11968)>>2)];
 var $add26_i_i=((($231)+($sub18_i_i))|0);
 HEAP32[((11968)>>2)]=$add26_i_i;
 HEAP32[((11980)>>2)]=$225;
 var $or28_i_i=$add26_i_i|1;
 var $add_ptr17_sum37_i_i=((($add_ptr4_sum_i50_i)+(4))|0);
 var $head29_i_i=(($tbase_292_i+$add_ptr17_sum37_i_i)|0);
 var $232=$head29_i_i;
 HEAP32[(($232)>>2)]=$or28_i_i;
 var $add_ptr17_sum38_i_i=((($add26_i_i)+($add_ptr4_sum_i50_i))|0);
 var $add_ptr30_i53_i=(($tbase_292_i+$add_ptr17_sum38_i_i)|0);
 var $prev_foot_i54_i=$add_ptr30_i53_i;
 HEAP32[(($prev_foot_i54_i)>>2)]=$add26_i_i;
 label=303;break;
 case 232: 
 var $add_ptr16_sum_i_i=((($tsize_291_i)+(4))|0);
 var $add_ptr224_sum123_i=((($add_ptr16_sum_i_i)+($cond15_i_i))|0);
 var $head32_i_i=(($tbase_292_i+$add_ptr224_sum123_i)|0);
 var $233=$head32_i_i;
 var $234=HEAP32[(($233)>>2)];
 var $and33_i_i=$234&3;
 var $cmp34_i_i=($and33_i_i|0)==1;
 if($cmp34_i_i){label=233;break;}else{var $oldfirst_0_i_i=$224;var $qsize_0_i_i=$sub18_i_i;label=280;break;}
 case 233: 
 var $and37_i_i=$234&-8;
 var $shr_i55_i=$234>>>3;
 var $cmp38_i_i=($234>>>0)<256;
 if($cmp38_i_i){label=234;break;}else{label=246;break;}
 case 234: 
 var $add_ptr16_sum3233_i_i=$cond15_i_i|8;
 var $add_ptr224_sum133_i=((($add_ptr16_sum3233_i_i)+($tsize_291_i))|0);
 var $fd_i_i=(($tbase_292_i+$add_ptr224_sum133_i)|0);
 var $235=$fd_i_i;
 var $236=HEAP32[(($235)>>2)];
 var $add_ptr16_sum34_i_i=((($tsize_291_i)+(12))|0);
 var $add_ptr224_sum134_i=((($add_ptr16_sum34_i_i)+($cond15_i_i))|0);
 var $bk_i56_i=(($tbase_292_i+$add_ptr224_sum134_i)|0);
 var $237=$bk_i56_i;
 var $238=HEAP32[(($237)>>2)];
 var $shl_i57_i=$shr_i55_i<<1;
 var $arrayidx_i58_i=((12000+($shl_i57_i<<2))|0);
 var $239=$arrayidx_i58_i;
 var $cmp41_i_i=($236|0)==($239|0);
 if($cmp41_i_i){label=237;break;}else{label=235;break;}
 case 235: 
 var $240=$236;
 var $241=HEAP32[((11976)>>2)];
 var $cmp42_i_i=($240>>>0)<($241>>>0);
 if($cmp42_i_i){label=245;break;}else{label=236;break;}
 case 236: 
 var $bk43_i_i=(($236+12)|0);
 var $242=HEAP32[(($bk43_i_i)>>2)];
 var $cmp44_i_i=($242|0)==($224|0);
 if($cmp44_i_i){label=237;break;}else{label=245;break;}
 case 237: 
 var $cmp46_i60_i=($238|0)==($236|0);
 if($cmp46_i60_i){label=238;break;}else{label=239;break;}
 case 238: 
 var $shl48_i_i=1<<$shr_i55_i;
 var $neg_i_i=$shl48_i_i^-1;
 var $243=HEAP32[((11960)>>2)];
 var $and49_i_i=$243&$neg_i_i;
 HEAP32[((11960)>>2)]=$and49_i_i;
 label=279;break;
 case 239: 
 var $cmp54_i_i=($238|0)==($239|0);
 if($cmp54_i_i){label=240;break;}else{label=241;break;}
 case 240: 
 var $fd68_pre_i_i=(($238+8)|0);
 var $fd68_pre_phi_i_i=$fd68_pre_i_i;label=243;break;
 case 241: 
 var $244=$238;
 var $245=HEAP32[((11976)>>2)];
 var $cmp57_i_i=($244>>>0)<($245>>>0);
 if($cmp57_i_i){label=244;break;}else{label=242;break;}
 case 242: 
 var $fd59_i_i=(($238+8)|0);
 var $246=HEAP32[(($fd59_i_i)>>2)];
 var $cmp60_i_i=($246|0)==($224|0);
 if($cmp60_i_i){var $fd68_pre_phi_i_i=$fd59_i_i;label=243;break;}else{label=244;break;}
 case 243: 
 var $fd68_pre_phi_i_i;
 var $bk67_i_i=(($236+12)|0);
 HEAP32[(($bk67_i_i)>>2)]=$238;
 HEAP32[(($fd68_pre_phi_i_i)>>2)]=$236;
 label=279;break;
 case 244: 
 _abort();
 throw "Reached an unreachable!";
 case 245: 
 _abort();
 throw "Reached an unreachable!";
 case 246: 
 var $247=$add_ptr16_i_i;
 var $add_ptr16_sum23_i_i=$cond15_i_i|24;
 var $add_ptr224_sum124_i=((($add_ptr16_sum23_i_i)+($tsize_291_i))|0);
 var $parent_i62_i=(($tbase_292_i+$add_ptr224_sum124_i)|0);
 var $248=$parent_i62_i;
 var $249=HEAP32[(($248)>>2)];
 var $add_ptr16_sum4_i_i=((($tsize_291_i)+(12))|0);
 var $add_ptr224_sum125_i=((($add_ptr16_sum4_i_i)+($cond15_i_i))|0);
 var $bk74_i_i=(($tbase_292_i+$add_ptr224_sum125_i)|0);
 var $250=$bk74_i_i;
 var $251=HEAP32[(($250)>>2)];
 var $cmp75_i_i=($251|0)==($247|0);
 if($cmp75_i_i){label=252;break;}else{label=247;break;}
 case 247: 
 var $add_ptr16_sum2930_i_i=$cond15_i_i|8;
 var $add_ptr224_sum126_i=((($add_ptr16_sum2930_i_i)+($tsize_291_i))|0);
 var $fd78_i_i=(($tbase_292_i+$add_ptr224_sum126_i)|0);
 var $252=$fd78_i_i;
 var $253=HEAP32[(($252)>>2)];
 var $254=$253;
 var $255=HEAP32[((11976)>>2)];
 var $cmp81_i_i=($254>>>0)<($255>>>0);
 if($cmp81_i_i){label=251;break;}else{label=248;break;}
 case 248: 
 var $bk82_i_i=(($253+12)|0);
 var $256=HEAP32[(($bk82_i_i)>>2)];
 var $cmp83_i_i=($256|0)==($247|0);
 if($cmp83_i_i){label=249;break;}else{label=251;break;}
 case 249: 
 var $fd85_i_i=(($251+8)|0);
 var $257=HEAP32[(($fd85_i_i)>>2)];
 var $cmp86_i_i=($257|0)==($247|0);
 if($cmp86_i_i){label=250;break;}else{label=251;break;}
 case 250: 
 HEAP32[(($bk82_i_i)>>2)]=$251;
 HEAP32[(($fd85_i_i)>>2)]=$253;
 var $R_1_i_i=$251;label=259;break;
 case 251: 
 _abort();
 throw "Reached an unreachable!";
 case 252: 
 var $add_ptr16_sum56_i_i=$cond15_i_i|16;
 var $add_ptr224_sum131_i=((($add_ptr16_sum_i_i)+($add_ptr16_sum56_i_i))|0);
 var $arrayidx96_i_i=(($tbase_292_i+$add_ptr224_sum131_i)|0);
 var $258=$arrayidx96_i_i;
 var $259=HEAP32[(($258)>>2)];
 var $cmp97_i_i=($259|0)==0;
 if($cmp97_i_i){label=253;break;}else{var $R_0_i_i=$259;var $RP_0_i_i=$258;label=254;break;}
 case 253: 
 var $add_ptr224_sum132_i=((($add_ptr16_sum56_i_i)+($tsize_291_i))|0);
 var $child_i_i=(($tbase_292_i+$add_ptr224_sum132_i)|0);
 var $arrayidx99_i_i=$child_i_i;
 var $260=HEAP32[(($arrayidx99_i_i)>>2)];
 var $cmp100_i_i=($260|0)==0;
 if($cmp100_i_i){var $R_1_i_i=0;label=259;break;}else{var $R_0_i_i=$260;var $RP_0_i_i=$arrayidx99_i_i;label=254;break;}
 case 254: 
 var $RP_0_i_i;
 var $R_0_i_i;
 var $arrayidx103_i_i=(($R_0_i_i+20)|0);
 var $261=HEAP32[(($arrayidx103_i_i)>>2)];
 var $cmp104_i_i=($261|0)==0;
 if($cmp104_i_i){label=255;break;}else{var $R_0_i_i=$261;var $RP_0_i_i=$arrayidx103_i_i;label=254;break;}
 case 255: 
 var $arrayidx107_i_i=(($R_0_i_i+16)|0);
 var $262=HEAP32[(($arrayidx107_i_i)>>2)];
 var $cmp108_i_i=($262|0)==0;
 if($cmp108_i_i){label=256;break;}else{var $R_0_i_i=$262;var $RP_0_i_i=$arrayidx107_i_i;label=254;break;}
 case 256: 
 var $263=$RP_0_i_i;
 var $264=HEAP32[((11976)>>2)];
 var $cmp112_i_i=($263>>>0)<($264>>>0);
 if($cmp112_i_i){label=258;break;}else{label=257;break;}
 case 257: 
 HEAP32[(($RP_0_i_i)>>2)]=0;
 var $R_1_i_i=$R_0_i_i;label=259;break;
 case 258: 
 _abort();
 throw "Reached an unreachable!";
 case 259: 
 var $R_1_i_i;
 var $cmp120_i64_i=($249|0)==0;
 if($cmp120_i64_i){label=279;break;}else{label=260;break;}
 case 260: 
 var $add_ptr16_sum26_i_i=((($tsize_291_i)+(28))|0);
 var $add_ptr224_sum127_i=((($add_ptr16_sum26_i_i)+($cond15_i_i))|0);
 var $index_i65_i=(($tbase_292_i+$add_ptr224_sum127_i)|0);
 var $265=$index_i65_i;
 var $266=HEAP32[(($265)>>2)];
 var $arrayidx123_i_i=((12264+($266<<2))|0);
 var $267=HEAP32[(($arrayidx123_i_i)>>2)];
 var $cmp124_i_i=($247|0)==($267|0);
 if($cmp124_i_i){label=261;break;}else{label=263;break;}
 case 261: 
 HEAP32[(($arrayidx123_i_i)>>2)]=$R_1_i_i;
 var $cond41_i_i=($R_1_i_i|0)==0;
 if($cond41_i_i){label=262;break;}else{label=269;break;}
 case 262: 
 var $268=HEAP32[(($265)>>2)];
 var $shl131_i_i=1<<$268;
 var $neg132_i_i=$shl131_i_i^-1;
 var $269=HEAP32[((11964)>>2)];
 var $and133_i_i=$269&$neg132_i_i;
 HEAP32[((11964)>>2)]=$and133_i_i;
 label=279;break;
 case 263: 
 var $270=$249;
 var $271=HEAP32[((11976)>>2)];
 var $cmp137_i_i=($270>>>0)<($271>>>0);
 if($cmp137_i_i){label=267;break;}else{label=264;break;}
 case 264: 
 var $arrayidx143_i_i=(($249+16)|0);
 var $272=HEAP32[(($arrayidx143_i_i)>>2)];
 var $cmp144_i_i=($272|0)==($247|0);
 if($cmp144_i_i){label=265;break;}else{label=266;break;}
 case 265: 
 HEAP32[(($arrayidx143_i_i)>>2)]=$R_1_i_i;
 label=268;break;
 case 266: 
 var $arrayidx151_i_i=(($249+20)|0);
 HEAP32[(($arrayidx151_i_i)>>2)]=$R_1_i_i;
 label=268;break;
 case 267: 
 _abort();
 throw "Reached an unreachable!";
 case 268: 
 var $cmp156_i_i=($R_1_i_i|0)==0;
 if($cmp156_i_i){label=279;break;}else{label=269;break;}
 case 269: 
 var $273=$R_1_i_i;
 var $274=HEAP32[((11976)>>2)];
 var $cmp160_i_i=($273>>>0)<($274>>>0);
 if($cmp160_i_i){label=278;break;}else{label=270;break;}
 case 270: 
 var $parent165_i_i=(($R_1_i_i+24)|0);
 HEAP32[(($parent165_i_i)>>2)]=$249;
 var $add_ptr16_sum2728_i_i=$cond15_i_i|16;
 var $add_ptr224_sum128_i=((($add_ptr16_sum2728_i_i)+($tsize_291_i))|0);
 var $child166_i_i=(($tbase_292_i+$add_ptr224_sum128_i)|0);
 var $arrayidx167_i_i=$child166_i_i;
 var $275=HEAP32[(($arrayidx167_i_i)>>2)];
 var $cmp168_i_i=($275|0)==0;
 if($cmp168_i_i){label=274;break;}else{label=271;break;}
 case 271: 
 var $276=$275;
 var $277=HEAP32[((11976)>>2)];
 var $cmp172_i_i=($276>>>0)<($277>>>0);
 if($cmp172_i_i){label=273;break;}else{label=272;break;}
 case 272: 
 var $arrayidx178_i_i=(($R_1_i_i+16)|0);
 HEAP32[(($arrayidx178_i_i)>>2)]=$275;
 var $parent179_i_i=(($275+24)|0);
 HEAP32[(($parent179_i_i)>>2)]=$R_1_i_i;
 label=274;break;
 case 273: 
 _abort();
 throw "Reached an unreachable!";
 case 274: 
 var $add_ptr224_sum129_i=((($add_ptr16_sum_i_i)+($add_ptr16_sum2728_i_i))|0);
 var $arrayidx184_i_i=(($tbase_292_i+$add_ptr224_sum129_i)|0);
 var $278=$arrayidx184_i_i;
 var $279=HEAP32[(($278)>>2)];
 var $cmp185_i_i=($279|0)==0;
 if($cmp185_i_i){label=279;break;}else{label=275;break;}
 case 275: 
 var $280=$279;
 var $281=HEAP32[((11976)>>2)];
 var $cmp189_i_i=($280>>>0)<($281>>>0);
 if($cmp189_i_i){label=277;break;}else{label=276;break;}
 case 276: 
 var $arrayidx195_i_i=(($R_1_i_i+20)|0);
 HEAP32[(($arrayidx195_i_i)>>2)]=$279;
 var $parent196_i_i=(($279+24)|0);
 HEAP32[(($parent196_i_i)>>2)]=$R_1_i_i;
 label=279;break;
 case 277: 
 _abort();
 throw "Reached an unreachable!";
 case 278: 
 _abort();
 throw "Reached an unreachable!";
 case 279: 
 var $add_ptr16_sum7_i_i=$and37_i_i|$cond15_i_i;
 var $add_ptr224_sum130_i=((($add_ptr16_sum7_i_i)+($tsize_291_i))|0);
 var $add_ptr205_i_i=(($tbase_292_i+$add_ptr224_sum130_i)|0);
 var $282=$add_ptr205_i_i;
 var $add206_i_i=((($and37_i_i)+($sub18_i_i))|0);
 var $oldfirst_0_i_i=$282;var $qsize_0_i_i=$add206_i_i;label=280;break;
 case 280: 
 var $qsize_0_i_i;
 var $oldfirst_0_i_i;
 var $head208_i_i=(($oldfirst_0_i_i+4)|0);
 var $283=HEAP32[(($head208_i_i)>>2)];
 var $and209_i_i=$283&-2;
 HEAP32[(($head208_i_i)>>2)]=$and209_i_i;
 var $or210_i_i=$qsize_0_i_i|1;
 var $add_ptr17_sum_i_i=((($add_ptr4_sum_i50_i)+(4))|0);
 var $head211_i_i=(($tbase_292_i+$add_ptr17_sum_i_i)|0);
 var $284=$head211_i_i;
 HEAP32[(($284)>>2)]=$or210_i_i;
 var $add_ptr17_sum8_i_i=((($qsize_0_i_i)+($add_ptr4_sum_i50_i))|0);
 var $add_ptr212_i_i=(($tbase_292_i+$add_ptr17_sum8_i_i)|0);
 var $prev_foot213_i_i=$add_ptr212_i_i;
 HEAP32[(($prev_foot213_i_i)>>2)]=$qsize_0_i_i;
 var $shr214_i_i=$qsize_0_i_i>>>3;
 var $cmp215_i_i=($qsize_0_i_i>>>0)<256;
 if($cmp215_i_i){label=281;break;}else{label=286;break;}
 case 281: 
 var $shl221_i_i=$shr214_i_i<<1;
 var $arrayidx223_i_i=((12000+($shl221_i_i<<2))|0);
 var $285=$arrayidx223_i_i;
 var $286=HEAP32[((11960)>>2)];
 var $shl226_i_i=1<<$shr214_i_i;
 var $and227_i_i=$286&$shl226_i_i;
 var $tobool228_i_i=($and227_i_i|0)==0;
 if($tobool228_i_i){label=282;break;}else{label=283;break;}
 case 282: 
 var $or232_i_i=$286|$shl226_i_i;
 HEAP32[((11960)>>2)]=$or232_i_i;
 var $arrayidx223_sum_pre_i_i=((($shl221_i_i)+(2))|0);
 var $_pre_i67_i=((12000+($arrayidx223_sum_pre_i_i<<2))|0);
 var $F224_0_i_i=$285;var $_pre_phi_i68_i=$_pre_i67_i;label=285;break;
 case 283: 
 var $arrayidx223_sum25_i_i=((($shl221_i_i)+(2))|0);
 var $287=((12000+($arrayidx223_sum25_i_i<<2))|0);
 var $288=HEAP32[(($287)>>2)];
 var $289=$288;
 var $290=HEAP32[((11976)>>2)];
 var $cmp236_i_i=($289>>>0)<($290>>>0);
 if($cmp236_i_i){label=284;break;}else{var $F224_0_i_i=$288;var $_pre_phi_i68_i=$287;label=285;break;}
 case 284: 
 _abort();
 throw "Reached an unreachable!";
 case 285: 
 var $_pre_phi_i68_i;
 var $F224_0_i_i;
 HEAP32[(($_pre_phi_i68_i)>>2)]=$225;
 var $bk246_i_i=(($F224_0_i_i+12)|0);
 HEAP32[(($bk246_i_i)>>2)]=$225;
 var $add_ptr17_sum23_i_i=((($add_ptr4_sum_i50_i)+(8))|0);
 var $fd247_i_i=(($tbase_292_i+$add_ptr17_sum23_i_i)|0);
 var $291=$fd247_i_i;
 HEAP32[(($291)>>2)]=$F224_0_i_i;
 var $add_ptr17_sum24_i_i=((($add_ptr4_sum_i50_i)+(12))|0);
 var $bk248_i_i=(($tbase_292_i+$add_ptr17_sum24_i_i)|0);
 var $292=$bk248_i_i;
 HEAP32[(($292)>>2)]=$285;
 label=303;break;
 case 286: 
 var $293=$add_ptr17_i_i;
 var $shr253_i_i=$qsize_0_i_i>>>8;
 var $cmp254_i_i=($shr253_i_i|0)==0;
 if($cmp254_i_i){var $I252_0_i_i=0;label=289;break;}else{label=287;break;}
 case 287: 
 var $cmp258_i_i=($qsize_0_i_i>>>0)>16777215;
 if($cmp258_i_i){var $I252_0_i_i=31;label=289;break;}else{label=288;break;}
 case 288: 
 var $sub262_i_i=((($shr253_i_i)+(1048320))|0);
 var $shr263_i_i=$sub262_i_i>>>16;
 var $and264_i_i=$shr263_i_i&8;
 var $shl265_i_i=$shr253_i_i<<$and264_i_i;
 var $sub266_i_i=((($shl265_i_i)+(520192))|0);
 var $shr267_i_i=$sub266_i_i>>>16;
 var $and268_i_i=$shr267_i_i&4;
 var $add269_i_i=$and268_i_i|$and264_i_i;
 var $shl270_i_i=$shl265_i_i<<$and268_i_i;
 var $sub271_i_i=((($shl270_i_i)+(245760))|0);
 var $shr272_i_i=$sub271_i_i>>>16;
 var $and273_i_i=$shr272_i_i&2;
 var $add274_i_i=$add269_i_i|$and273_i_i;
 var $sub275_i_i=(((14)-($add274_i_i))|0);
 var $shl276_i_i=$shl270_i_i<<$and273_i_i;
 var $shr277_i_i=$shl276_i_i>>>15;
 var $add278_i_i=((($sub275_i_i)+($shr277_i_i))|0);
 var $shl279_i_i=$add278_i_i<<1;
 var $add280_i_i=((($add278_i_i)+(7))|0);
 var $shr281_i_i=$qsize_0_i_i>>>($add280_i_i>>>0);
 var $and282_i_i=$shr281_i_i&1;
 var $add283_i_i=$and282_i_i|$shl279_i_i;
 var $I252_0_i_i=$add283_i_i;label=289;break;
 case 289: 
 var $I252_0_i_i;
 var $arrayidx287_i_i=((12264+($I252_0_i_i<<2))|0);
 var $add_ptr17_sum9_i_i=((($add_ptr4_sum_i50_i)+(28))|0);
 var $index288_i_i=(($tbase_292_i+$add_ptr17_sum9_i_i)|0);
 var $294=$index288_i_i;
 HEAP32[(($294)>>2)]=$I252_0_i_i;
 var $add_ptr17_sum10_i_i=((($add_ptr4_sum_i50_i)+(16))|0);
 var $child289_i_i=(($tbase_292_i+$add_ptr17_sum10_i_i)|0);
 var $child289_sum_i_i=((($add_ptr4_sum_i50_i)+(20))|0);
 var $arrayidx290_i_i=(($tbase_292_i+$child289_sum_i_i)|0);
 var $295=$arrayidx290_i_i;
 HEAP32[(($295)>>2)]=0;
 var $arrayidx292_i_i=$child289_i_i;
 HEAP32[(($arrayidx292_i_i)>>2)]=0;
 var $296=HEAP32[((11964)>>2)];
 var $shl294_i_i=1<<$I252_0_i_i;
 var $and295_i_i=$296&$shl294_i_i;
 var $tobool296_i_i=($and295_i_i|0)==0;
 if($tobool296_i_i){label=290;break;}else{label=291;break;}
 case 290: 
 var $or300_i_i=$296|$shl294_i_i;
 HEAP32[((11964)>>2)]=$or300_i_i;
 HEAP32[(($arrayidx287_i_i)>>2)]=$293;
 var $297=$arrayidx287_i_i;
 var $add_ptr17_sum11_i_i=((($add_ptr4_sum_i50_i)+(24))|0);
 var $parent301_i_i=(($tbase_292_i+$add_ptr17_sum11_i_i)|0);
 var $298=$parent301_i_i;
 HEAP32[(($298)>>2)]=$297;
 var $add_ptr17_sum12_i_i=((($add_ptr4_sum_i50_i)+(12))|0);
 var $bk302_i_i=(($tbase_292_i+$add_ptr17_sum12_i_i)|0);
 var $299=$bk302_i_i;
 HEAP32[(($299)>>2)]=$293;
 var $add_ptr17_sum13_i_i=((($add_ptr4_sum_i50_i)+(8))|0);
 var $fd303_i_i=(($tbase_292_i+$add_ptr17_sum13_i_i)|0);
 var $300=$fd303_i_i;
 HEAP32[(($300)>>2)]=$293;
 label=303;break;
 case 291: 
 var $301=HEAP32[(($arrayidx287_i_i)>>2)];
 var $cmp306_i_i=($I252_0_i_i|0)==31;
 if($cmp306_i_i){var $cond315_i_i=0;label=293;break;}else{label=292;break;}
 case 292: 
 var $shr310_i_i=$I252_0_i_i>>>1;
 var $sub313_i_i=(((25)-($shr310_i_i))|0);
 var $cond315_i_i=$sub313_i_i;label=293;break;
 case 293: 
 var $cond315_i_i;
 var $shl316_i_i=$qsize_0_i_i<<$cond315_i_i;
 var $K305_0_i_i=$shl316_i_i;var $T_0_i69_i=$301;label=294;break;
 case 294: 
 var $T_0_i69_i;
 var $K305_0_i_i;
 var $head317_i_i=(($T_0_i69_i+4)|0);
 var $302=HEAP32[(($head317_i_i)>>2)];
 var $and318_i_i=$302&-8;
 var $cmp319_i_i=($and318_i_i|0)==($qsize_0_i_i|0);
 if($cmp319_i_i){label=299;break;}else{label=295;break;}
 case 295: 
 var $shr322_i_i=$K305_0_i_i>>>31;
 var $arrayidx325_i_i=(($T_0_i69_i+16+($shr322_i_i<<2))|0);
 var $303=HEAP32[(($arrayidx325_i_i)>>2)];
 var $cmp327_i_i=($303|0)==0;
 var $shl326_i_i=$K305_0_i_i<<1;
 if($cmp327_i_i){label=296;break;}else{var $K305_0_i_i=$shl326_i_i;var $T_0_i69_i=$303;label=294;break;}
 case 296: 
 var $304=$arrayidx325_i_i;
 var $305=HEAP32[((11976)>>2)];
 var $cmp332_i_i=($304>>>0)<($305>>>0);
 if($cmp332_i_i){label=298;break;}else{label=297;break;}
 case 297: 
 HEAP32[(($arrayidx325_i_i)>>2)]=$293;
 var $add_ptr17_sum20_i_i=((($add_ptr4_sum_i50_i)+(24))|0);
 var $parent337_i_i=(($tbase_292_i+$add_ptr17_sum20_i_i)|0);
 var $306=$parent337_i_i;
 HEAP32[(($306)>>2)]=$T_0_i69_i;
 var $add_ptr17_sum21_i_i=((($add_ptr4_sum_i50_i)+(12))|0);
 var $bk338_i_i=(($tbase_292_i+$add_ptr17_sum21_i_i)|0);
 var $307=$bk338_i_i;
 HEAP32[(($307)>>2)]=$293;
 var $add_ptr17_sum22_i_i=((($add_ptr4_sum_i50_i)+(8))|0);
 var $fd339_i_i=(($tbase_292_i+$add_ptr17_sum22_i_i)|0);
 var $308=$fd339_i_i;
 HEAP32[(($308)>>2)]=$293;
 label=303;break;
 case 298: 
 _abort();
 throw "Reached an unreachable!";
 case 299: 
 var $fd344_i_i=(($T_0_i69_i+8)|0);
 var $309=HEAP32[(($fd344_i_i)>>2)];
 var $310=$T_0_i69_i;
 var $311=HEAP32[((11976)>>2)];
 var $cmp346_i_i=($310>>>0)<($311>>>0);
 if($cmp346_i_i){label=302;break;}else{label=300;break;}
 case 300: 
 var $312=$309;
 var $cmp350_i_i=($312>>>0)<($311>>>0);
 if($cmp350_i_i){label=302;break;}else{label=301;break;}
 case 301: 
 var $bk357_i_i=(($309+12)|0);
 HEAP32[(($bk357_i_i)>>2)]=$293;
 HEAP32[(($fd344_i_i)>>2)]=$293;
 var $add_ptr17_sum17_i_i=((($add_ptr4_sum_i50_i)+(8))|0);
 var $fd359_i_i=(($tbase_292_i+$add_ptr17_sum17_i_i)|0);
 var $313=$fd359_i_i;
 HEAP32[(($313)>>2)]=$309;
 var $add_ptr17_sum18_i_i=((($add_ptr4_sum_i50_i)+(12))|0);
 var $bk360_i_i=(($tbase_292_i+$add_ptr17_sum18_i_i)|0);
 var $314=$bk360_i_i;
 HEAP32[(($314)>>2)]=$T_0_i69_i;
 var $add_ptr17_sum19_i_i=((($add_ptr4_sum_i50_i)+(24))|0);
 var $parent361_i_i=(($tbase_292_i+$add_ptr17_sum19_i_i)|0);
 var $315=$parent361_i_i;
 HEAP32[(($315)>>2)]=0;
 label=303;break;
 case 302: 
 _abort();
 throw "Reached an unreachable!";
 case 303: 
 var $add_ptr4_sum1415_i_i=$cond_i43_i|8;
 var $add_ptr368_i_i=(($tbase_292_i+$add_ptr4_sum1415_i_i)|0);
 var $mem_0=$add_ptr368_i_i;label=341;break;
 case 304: 
 var $316=$189;
 var $sp_0_i_i_i=12408;label=305;break;
 case 305: 
 var $sp_0_i_i_i;
 var $base_i_i_i=(($sp_0_i_i_i)|0);
 var $317=HEAP32[(($base_i_i_i)>>2)];
 var $cmp_i_i_i=($317>>>0)>($316>>>0);
 if($cmp_i_i_i){label=307;break;}else{label=306;break;}
 case 306: 
 var $size_i_i_i=(($sp_0_i_i_i+4)|0);
 var $318=HEAP32[(($size_i_i_i)>>2)];
 var $add_ptr_i_i_i=(($317+$318)|0);
 var $cmp2_i_i_i=($add_ptr_i_i_i>>>0)>($316>>>0);
 if($cmp2_i_i_i){label=308;break;}else{label=307;break;}
 case 307: 
 var $next_i_i_i=(($sp_0_i_i_i+8)|0);
 var $319=HEAP32[(($next_i_i_i)>>2)];
 var $sp_0_i_i_i=$319;label=305;break;
 case 308: 
 var $add_ptr_sum_i_i=((($318)-(47))|0);
 var $add_ptr2_sum_i_i=((($318)-(39))|0);
 var $add_ptr3_i_i=(($317+$add_ptr2_sum_i_i)|0);
 var $320=$add_ptr3_i_i;
 var $and_i15_i=$320&7;
 var $cmp_i16_i=($and_i15_i|0)==0;
 if($cmp_i16_i){var $cond_i18_i=0;label=310;break;}else{label=309;break;}
 case 309: 
 var $321=(((-$320))|0);
 var $and6_i_i=$321&7;
 var $cond_i18_i=$and6_i_i;label=310;break;
 case 310: 
 var $cond_i18_i;
 var $add_ptr2_sum1_i_i=((($add_ptr_sum_i_i)+($cond_i18_i))|0);
 var $add_ptr7_i_i=(($317+$add_ptr2_sum1_i_i)|0);
 var $add_ptr82_i_i=(($189+16)|0);
 var $add_ptr8_i_i=$add_ptr82_i_i;
 var $cmp9_i_i=($add_ptr7_i_i>>>0)<($add_ptr8_i_i>>>0);
 var $cond13_i_i=($cmp9_i_i?$316:$add_ptr7_i_i);
 var $add_ptr14_i_i=(($cond13_i_i+8)|0);
 var $322=$add_ptr14_i_i;
 var $sub16_i_i=((($tsize_291_i)-(40))|0);
 var $add_ptr_i11_i_i=(($tbase_292_i+8)|0);
 var $323=$add_ptr_i11_i_i;
 var $and_i_i_i=$323&7;
 var $cmp_i12_i_i=($and_i_i_i|0)==0;
 if($cmp_i12_i_i){var $cond_i_i_i=0;label=312;break;}else{label=311;break;}
 case 311: 
 var $324=(((-$323))|0);
 var $and3_i_i_i=$324&7;
 var $cond_i_i_i=$and3_i_i_i;label=312;break;
 case 312: 
 var $cond_i_i_i;
 var $add_ptr4_i_i_i=(($tbase_292_i+$cond_i_i_i)|0);
 var $325=$add_ptr4_i_i_i;
 var $sub5_i_i_i=((($sub16_i_i)-($cond_i_i_i))|0);
 HEAP32[((11984)>>2)]=$325;
 HEAP32[((11972)>>2)]=$sub5_i_i_i;
 var $or_i_i_i=$sub5_i_i_i|1;
 var $add_ptr4_sum_i_i_i=((($cond_i_i_i)+(4))|0);
 var $head_i_i_i=(($tbase_292_i+$add_ptr4_sum_i_i_i)|0);
 var $326=$head_i_i_i;
 HEAP32[(($326)>>2)]=$or_i_i_i;
 var $add_ptr6_sum_i_i_i=((($tsize_291_i)-(36))|0);
 var $head7_i_i_i=(($tbase_292_i+$add_ptr6_sum_i_i_i)|0);
 var $327=$head7_i_i_i;
 HEAP32[(($327)>>2)]=40;
 var $328=HEAP32[((11928)>>2)];
 HEAP32[((11988)>>2)]=$328;
 var $head_i19_i=(($cond13_i_i+4)|0);
 var $329=$head_i19_i;
 HEAP32[(($329)>>2)]=27;
 assert(16 % 1 === 0);HEAP32[(($add_ptr14_i_i)>>2)]=HEAP32[((12408)>>2)];HEAP32[((($add_ptr14_i_i)+(4))>>2)]=HEAP32[((12412)>>2)];HEAP32[((($add_ptr14_i_i)+(8))>>2)]=HEAP32[((12416)>>2)];HEAP32[((($add_ptr14_i_i)+(12))>>2)]=HEAP32[((12420)>>2)];
 HEAP32[((12408)>>2)]=$tbase_292_i;
 HEAP32[((12412)>>2)]=$tsize_291_i;
 HEAP32[((12420)>>2)]=0;
 HEAP32[((12416)>>2)]=$322;
 var $add_ptr2414_i_i=(($cond13_i_i+28)|0);
 var $330=$add_ptr2414_i_i;
 HEAP32[(($330)>>2)]=7;
 var $331=(($cond13_i_i+32)|0);
 var $cmp2715_i_i=($331>>>0)<($add_ptr_i_i_i>>>0);
 if($cmp2715_i_i){var $add_ptr2416_i_i=$330;label=313;break;}else{label=314;break;}
 case 313: 
 var $add_ptr2416_i_i;
 var $332=(($add_ptr2416_i_i+4)|0);
 HEAP32[(($332)>>2)]=7;
 var $333=(($add_ptr2416_i_i+8)|0);
 var $334=$333;
 var $cmp27_i_i=($334>>>0)<($add_ptr_i_i_i>>>0);
 if($cmp27_i_i){var $add_ptr2416_i_i=$332;label=313;break;}else{label=314;break;}
 case 314: 
 var $cmp28_i_i=($cond13_i_i|0)==($316|0);
 if($cmp28_i_i){label=338;break;}else{label=315;break;}
 case 315: 
 var $sub_ptr_lhs_cast_i_i=$cond13_i_i;
 var $sub_ptr_rhs_cast_i_i=$189;
 var $sub_ptr_sub_i_i=((($sub_ptr_lhs_cast_i_i)-($sub_ptr_rhs_cast_i_i))|0);
 var $add_ptr30_i_i=(($316+$sub_ptr_sub_i_i)|0);
 var $add_ptr30_sum_i_i=((($sub_ptr_sub_i_i)+(4))|0);
 var $head31_i_i=(($316+$add_ptr30_sum_i_i)|0);
 var $335=$head31_i_i;
 var $336=HEAP32[(($335)>>2)];
 var $and32_i_i=$336&-2;
 HEAP32[(($335)>>2)]=$and32_i_i;
 var $or33_i_i=$sub_ptr_sub_i_i|1;
 var $head34_i_i=(($189+4)|0);
 HEAP32[(($head34_i_i)>>2)]=$or33_i_i;
 var $prev_foot_i_i=$add_ptr30_i_i;
 HEAP32[(($prev_foot_i_i)>>2)]=$sub_ptr_sub_i_i;
 var $shr_i_i=$sub_ptr_sub_i_i>>>3;
 var $cmp36_i_i=($sub_ptr_sub_i_i>>>0)<256;
 if($cmp36_i_i){label=316;break;}else{label=321;break;}
 case 316: 
 var $shl_i21_i=$shr_i_i<<1;
 var $arrayidx_i22_i=((12000+($shl_i21_i<<2))|0);
 var $337=$arrayidx_i22_i;
 var $338=HEAP32[((11960)>>2)];
 var $shl39_i_i=1<<$shr_i_i;
 var $and40_i_i=$338&$shl39_i_i;
 var $tobool_i_i=($and40_i_i|0)==0;
 if($tobool_i_i){label=317;break;}else{label=318;break;}
 case 317: 
 var $or44_i_i=$338|$shl39_i_i;
 HEAP32[((11960)>>2)]=$or44_i_i;
 var $arrayidx_sum_pre_i_i=((($shl_i21_i)+(2))|0);
 var $_pre_i_i=((12000+($arrayidx_sum_pre_i_i<<2))|0);
 var $F_0_i_i=$337;var $_pre_phi_i_i=$_pre_i_i;label=320;break;
 case 318: 
 var $arrayidx_sum10_i_i=((($shl_i21_i)+(2))|0);
 var $339=((12000+($arrayidx_sum10_i_i<<2))|0);
 var $340=HEAP32[(($339)>>2)];
 var $341=$340;
 var $342=HEAP32[((11976)>>2)];
 var $cmp46_i_i=($341>>>0)<($342>>>0);
 if($cmp46_i_i){label=319;break;}else{var $F_0_i_i=$340;var $_pre_phi_i_i=$339;label=320;break;}
 case 319: 
 _abort();
 throw "Reached an unreachable!";
 case 320: 
 var $_pre_phi_i_i;
 var $F_0_i_i;
 HEAP32[(($_pre_phi_i_i)>>2)]=$189;
 var $bk_i_i=(($F_0_i_i+12)|0);
 HEAP32[(($bk_i_i)>>2)]=$189;
 var $fd54_i_i=(($189+8)|0);
 HEAP32[(($fd54_i_i)>>2)]=$F_0_i_i;
 var $bk55_i_i=(($189+12)|0);
 HEAP32[(($bk55_i_i)>>2)]=$337;
 label=338;break;
 case 321: 
 var $343=$189;
 var $shr58_i_i=$sub_ptr_sub_i_i>>>8;
 var $cmp59_i_i=($shr58_i_i|0)==0;
 if($cmp59_i_i){var $I57_0_i_i=0;label=324;break;}else{label=322;break;}
 case 322: 
 var $cmp63_i_i=($sub_ptr_sub_i_i>>>0)>16777215;
 if($cmp63_i_i){var $I57_0_i_i=31;label=324;break;}else{label=323;break;}
 case 323: 
 var $sub67_i_i=((($shr58_i_i)+(1048320))|0);
 var $shr68_i_i=$sub67_i_i>>>16;
 var $and69_i_i=$shr68_i_i&8;
 var $shl70_i_i=$shr58_i_i<<$and69_i_i;
 var $sub71_i_i=((($shl70_i_i)+(520192))|0);
 var $shr72_i_i=$sub71_i_i>>>16;
 var $and73_i_i=$shr72_i_i&4;
 var $add74_i_i=$and73_i_i|$and69_i_i;
 var $shl75_i_i=$shl70_i_i<<$and73_i_i;
 var $sub76_i_i=((($shl75_i_i)+(245760))|0);
 var $shr77_i_i=$sub76_i_i>>>16;
 var $and78_i_i=$shr77_i_i&2;
 var $add79_i_i=$add74_i_i|$and78_i_i;
 var $sub80_i_i=(((14)-($add79_i_i))|0);
 var $shl81_i_i=$shl75_i_i<<$and78_i_i;
 var $shr82_i_i=$shl81_i_i>>>15;
 var $add83_i_i=((($sub80_i_i)+($shr82_i_i))|0);
 var $shl84_i_i=$add83_i_i<<1;
 var $add85_i_i=((($add83_i_i)+(7))|0);
 var $shr86_i_i=$sub_ptr_sub_i_i>>>($add85_i_i>>>0);
 var $and87_i_i=$shr86_i_i&1;
 var $add88_i_i=$and87_i_i|$shl84_i_i;
 var $I57_0_i_i=$add88_i_i;label=324;break;
 case 324: 
 var $I57_0_i_i;
 var $arrayidx91_i_i=((12264+($I57_0_i_i<<2))|0);
 var $index_i_i=(($189+28)|0);
 var $I57_0_c_i_i=$I57_0_i_i;
 HEAP32[(($index_i_i)>>2)]=$I57_0_c_i_i;
 var $arrayidx92_i_i=(($189+20)|0);
 HEAP32[(($arrayidx92_i_i)>>2)]=0;
 var $344=(($189+16)|0);
 HEAP32[(($344)>>2)]=0;
 var $345=HEAP32[((11964)>>2)];
 var $shl95_i_i=1<<$I57_0_i_i;
 var $and96_i_i=$345&$shl95_i_i;
 var $tobool97_i_i=($and96_i_i|0)==0;
 if($tobool97_i_i){label=325;break;}else{label=326;break;}
 case 325: 
 var $or101_i_i=$345|$shl95_i_i;
 HEAP32[((11964)>>2)]=$or101_i_i;
 HEAP32[(($arrayidx91_i_i)>>2)]=$343;
 var $parent_i_i=(($189+24)|0);
 var $_c_i_i=$arrayidx91_i_i;
 HEAP32[(($parent_i_i)>>2)]=$_c_i_i;
 var $bk102_i_i=(($189+12)|0);
 HEAP32[(($bk102_i_i)>>2)]=$189;
 var $fd103_i_i=(($189+8)|0);
 HEAP32[(($fd103_i_i)>>2)]=$189;
 label=338;break;
 case 326: 
 var $346=HEAP32[(($arrayidx91_i_i)>>2)];
 var $cmp106_i_i=($I57_0_i_i|0)==31;
 if($cmp106_i_i){var $cond115_i_i=0;label=328;break;}else{label=327;break;}
 case 327: 
 var $shr110_i_i=$I57_0_i_i>>>1;
 var $sub113_i_i=(((25)-($shr110_i_i))|0);
 var $cond115_i_i=$sub113_i_i;label=328;break;
 case 328: 
 var $cond115_i_i;
 var $shl116_i_i=$sub_ptr_sub_i_i<<$cond115_i_i;
 var $K105_0_i_i=$shl116_i_i;var $T_0_i_i=$346;label=329;break;
 case 329: 
 var $T_0_i_i;
 var $K105_0_i_i;
 var $head118_i_i=(($T_0_i_i+4)|0);
 var $347=HEAP32[(($head118_i_i)>>2)];
 var $and119_i_i=$347&-8;
 var $cmp120_i_i=($and119_i_i|0)==($sub_ptr_sub_i_i|0);
 if($cmp120_i_i){label=334;break;}else{label=330;break;}
 case 330: 
 var $shr123_i_i=$K105_0_i_i>>>31;
 var $arrayidx126_i_i=(($T_0_i_i+16+($shr123_i_i<<2))|0);
 var $348=HEAP32[(($arrayidx126_i_i)>>2)];
 var $cmp128_i_i=($348|0)==0;
 var $shl127_i_i=$K105_0_i_i<<1;
 if($cmp128_i_i){label=331;break;}else{var $K105_0_i_i=$shl127_i_i;var $T_0_i_i=$348;label=329;break;}
 case 331: 
 var $349=$arrayidx126_i_i;
 var $350=HEAP32[((11976)>>2)];
 var $cmp133_i_i=($349>>>0)<($350>>>0);
 if($cmp133_i_i){label=333;break;}else{label=332;break;}
 case 332: 
 HEAP32[(($arrayidx126_i_i)>>2)]=$343;
 var $parent138_i_i=(($189+24)|0);
 var $T_0_c7_i_i=$T_0_i_i;
 HEAP32[(($parent138_i_i)>>2)]=$T_0_c7_i_i;
 var $bk139_i_i=(($189+12)|0);
 HEAP32[(($bk139_i_i)>>2)]=$189;
 var $fd140_i_i=(($189+8)|0);
 HEAP32[(($fd140_i_i)>>2)]=$189;
 label=338;break;
 case 333: 
 _abort();
 throw "Reached an unreachable!";
 case 334: 
 var $fd145_i_i=(($T_0_i_i+8)|0);
 var $351=HEAP32[(($fd145_i_i)>>2)];
 var $352=$T_0_i_i;
 var $353=HEAP32[((11976)>>2)];
 var $cmp147_i_i=($352>>>0)<($353>>>0);
 if($cmp147_i_i){label=337;break;}else{label=335;break;}
 case 335: 
 var $354=$351;
 var $cmp150_i_i=($354>>>0)<($353>>>0);
 if($cmp150_i_i){label=337;break;}else{label=336;break;}
 case 336: 
 var $bk155_i_i=(($351+12)|0);
 HEAP32[(($bk155_i_i)>>2)]=$343;
 HEAP32[(($fd145_i_i)>>2)]=$343;
 var $fd157_i_i=(($189+8)|0);
 var $_c6_i_i=$351;
 HEAP32[(($fd157_i_i)>>2)]=$_c6_i_i;
 var $bk158_i_i=(($189+12)|0);
 var $T_0_c_i_i=$T_0_i_i;
 HEAP32[(($bk158_i_i)>>2)]=$T_0_c_i_i;
 var $parent159_i_i=(($189+24)|0);
 HEAP32[(($parent159_i_i)>>2)]=0;
 label=338;break;
 case 337: 
 _abort();
 throw "Reached an unreachable!";
 case 338: 
 var $355=HEAP32[((11972)>>2)];
 var $cmp250_i=($355>>>0)>($nb_0>>>0);
 if($cmp250_i){label=339;break;}else{label=340;break;}
 case 339: 
 var $sub253_i=((($355)-($nb_0))|0);
 HEAP32[((11972)>>2)]=$sub253_i;
 var $356=HEAP32[((11984)>>2)];
 var $357=$356;
 var $add_ptr255_i=(($357+$nb_0)|0);
 var $358=$add_ptr255_i;
 HEAP32[((11984)>>2)]=$358;
 var $or257_i=$sub253_i|1;
 var $add_ptr255_sum_i=((($nb_0)+(4))|0);
 var $head258_i=(($357+$add_ptr255_sum_i)|0);
 var $359=$head258_i;
 HEAP32[(($359)>>2)]=$or257_i;
 var $or260_i=$nb_0|3;
 var $head261_i=(($356+4)|0);
 HEAP32[(($head261_i)>>2)]=$or260_i;
 var $add_ptr262_i=(($356+8)|0);
 var $360=$add_ptr262_i;
 var $mem_0=$360;label=341;break;
 case 340: 
 var $call265_i=___errno_location();
 HEAP32[(($call265_i)>>2)]=12;
 var $mem_0=0;label=341;break;
 case 341: 
 var $mem_0;
 return $mem_0;
  default: assert(0, "bad label: " + label);
 }
}
Module["_malloc"] = _malloc;
function _free($mem){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $cmp=($mem|0)==0;
 if($cmp){label=140;break;}else{label=2;break;}
 case 2: 
 var $add_ptr=((($mem)-(8))|0);
 var $0=$add_ptr;
 var $1=HEAP32[((11976)>>2)];
 var $cmp1=($add_ptr>>>0)<($1>>>0);
 if($cmp1){label=139;break;}else{label=3;break;}
 case 3: 
 var $head=((($mem)-(4))|0);
 var $2=$head;
 var $3=HEAP32[(($2)>>2)];
 var $and=$3&3;
 var $cmp2=($and|0)==1;
 if($cmp2){label=139;break;}else{label=4;break;}
 case 4: 
 var $and5=$3&-8;
 var $add_ptr_sum=((($and5)-(8))|0);
 var $add_ptr6=(($mem+$add_ptr_sum)|0);
 var $4=$add_ptr6;
 var $and8=$3&1;
 var $tobool9=($and8|0)==0;
 if($tobool9){label=5;break;}else{var $p_0=$0;var $psize_0=$and5;label=56;break;}
 case 5: 
 var $prev_foot=$add_ptr;
 var $5=HEAP32[(($prev_foot)>>2)];
 var $cmp13=($and|0)==0;
 if($cmp13){label=140;break;}else{label=6;break;}
 case 6: 
 var $add_ptr_sum231=(((-8)-($5))|0);
 var $add_ptr16=(($mem+$add_ptr_sum231)|0);
 var $6=$add_ptr16;
 var $add17=((($5)+($and5))|0);
 var $cmp18=($add_ptr16>>>0)<($1>>>0);
 if($cmp18){label=139;break;}else{label=7;break;}
 case 7: 
 var $7=HEAP32[((11980)>>2)];
 var $cmp22=($6|0)==($7|0);
 if($cmp22){label=54;break;}else{label=8;break;}
 case 8: 
 var $shr=$5>>>3;
 var $cmp25=($5>>>0)<256;
 if($cmp25){label=9;break;}else{label=21;break;}
 case 9: 
 var $add_ptr16_sum268=((($add_ptr_sum231)+(8))|0);
 var $fd=(($mem+$add_ptr16_sum268)|0);
 var $8=$fd;
 var $9=HEAP32[(($8)>>2)];
 var $add_ptr16_sum269=((($add_ptr_sum231)+(12))|0);
 var $bk=(($mem+$add_ptr16_sum269)|0);
 var $10=$bk;
 var $11=HEAP32[(($10)>>2)];
 var $shl=$shr<<1;
 var $arrayidx=((12000+($shl<<2))|0);
 var $12=$arrayidx;
 var $cmp29=($9|0)==($12|0);
 if($cmp29){label=12;break;}else{label=10;break;}
 case 10: 
 var $13=$9;
 var $cmp31=($13>>>0)<($1>>>0);
 if($cmp31){label=20;break;}else{label=11;break;}
 case 11: 
 var $bk34=(($9+12)|0);
 var $14=HEAP32[(($bk34)>>2)];
 var $cmp35=($14|0)==($6|0);
 if($cmp35){label=12;break;}else{label=20;break;}
 case 12: 
 var $cmp42=($11|0)==($9|0);
 if($cmp42){label=13;break;}else{label=14;break;}
 case 13: 
 var $shl45=1<<$shr;
 var $neg=$shl45^-1;
 var $15=HEAP32[((11960)>>2)];
 var $and46=$15&$neg;
 HEAP32[((11960)>>2)]=$and46;
 var $p_0=$6;var $psize_0=$add17;label=56;break;
 case 14: 
 var $cmp50=($11|0)==($12|0);
 if($cmp50){label=15;break;}else{label=16;break;}
 case 15: 
 var $fd67_pre=(($11+8)|0);
 var $fd67_pre_phi=$fd67_pre;label=18;break;
 case 16: 
 var $16=$11;
 var $cmp53=($16>>>0)<($1>>>0);
 if($cmp53){label=19;break;}else{label=17;break;}
 case 17: 
 var $fd56=(($11+8)|0);
 var $17=HEAP32[(($fd56)>>2)];
 var $cmp57=($17|0)==($6|0);
 if($cmp57){var $fd67_pre_phi=$fd56;label=18;break;}else{label=19;break;}
 case 18: 
 var $fd67_pre_phi;
 var $bk66=(($9+12)|0);
 HEAP32[(($bk66)>>2)]=$11;
 HEAP32[(($fd67_pre_phi)>>2)]=$9;
 var $p_0=$6;var $psize_0=$add17;label=56;break;
 case 19: 
 _abort();
 throw "Reached an unreachable!";
 case 20: 
 _abort();
 throw "Reached an unreachable!";
 case 21: 
 var $18=$add_ptr16;
 var $add_ptr16_sum260=((($add_ptr_sum231)+(24))|0);
 var $parent=(($mem+$add_ptr16_sum260)|0);
 var $19=$parent;
 var $20=HEAP32[(($19)>>2)];
 var $add_ptr16_sum261=((($add_ptr_sum231)+(12))|0);
 var $bk73=(($mem+$add_ptr16_sum261)|0);
 var $21=$bk73;
 var $22=HEAP32[(($21)>>2)];
 var $cmp74=($22|0)==($18|0);
 if($cmp74){label=27;break;}else{label=22;break;}
 case 22: 
 var $add_ptr16_sum265=((($add_ptr_sum231)+(8))|0);
 var $fd78=(($mem+$add_ptr16_sum265)|0);
 var $23=$fd78;
 var $24=HEAP32[(($23)>>2)];
 var $25=$24;
 var $cmp80=($25>>>0)<($1>>>0);
 if($cmp80){label=26;break;}else{label=23;break;}
 case 23: 
 var $bk82=(($24+12)|0);
 var $26=HEAP32[(($bk82)>>2)];
 var $cmp83=($26|0)==($18|0);
 if($cmp83){label=24;break;}else{label=26;break;}
 case 24: 
 var $fd86=(($22+8)|0);
 var $27=HEAP32[(($fd86)>>2)];
 var $cmp87=($27|0)==($18|0);
 if($cmp87){label=25;break;}else{label=26;break;}
 case 25: 
 HEAP32[(($bk82)>>2)]=$22;
 HEAP32[(($fd86)>>2)]=$24;
 var $R_1=$22;label=34;break;
 case 26: 
 _abort();
 throw "Reached an unreachable!";
 case 27: 
 var $child_sum=((($add_ptr_sum231)+(20))|0);
 var $arrayidx99=(($mem+$child_sum)|0);
 var $28=$arrayidx99;
 var $29=HEAP32[(($28)>>2)];
 var $cmp100=($29|0)==0;
 if($cmp100){label=28;break;}else{var $R_0=$29;var $RP_0=$28;label=29;break;}
 case 28: 
 var $add_ptr16_sum262=((($add_ptr_sum231)+(16))|0);
 var $child=(($mem+$add_ptr16_sum262)|0);
 var $arrayidx103=$child;
 var $30=HEAP32[(($arrayidx103)>>2)];
 var $cmp104=($30|0)==0;
 if($cmp104){var $R_1=0;label=34;break;}else{var $R_0=$30;var $RP_0=$arrayidx103;label=29;break;}
 case 29: 
 var $RP_0;
 var $R_0;
 var $arrayidx108=(($R_0+20)|0);
 var $31=HEAP32[(($arrayidx108)>>2)];
 var $cmp109=($31|0)==0;
 if($cmp109){label=30;break;}else{var $R_0=$31;var $RP_0=$arrayidx108;label=29;break;}
 case 30: 
 var $arrayidx113=(($R_0+16)|0);
 var $32=HEAP32[(($arrayidx113)>>2)];
 var $cmp114=($32|0)==0;
 if($cmp114){label=31;break;}else{var $R_0=$32;var $RP_0=$arrayidx113;label=29;break;}
 case 31: 
 var $33=$RP_0;
 var $cmp118=($33>>>0)<($1>>>0);
 if($cmp118){label=33;break;}else{label=32;break;}
 case 32: 
 HEAP32[(($RP_0)>>2)]=0;
 var $R_1=$R_0;label=34;break;
 case 33: 
 _abort();
 throw "Reached an unreachable!";
 case 34: 
 var $R_1;
 var $cmp127=($20|0)==0;
 if($cmp127){var $p_0=$6;var $psize_0=$add17;label=56;break;}else{label=35;break;}
 case 35: 
 var $add_ptr16_sum263=((($add_ptr_sum231)+(28))|0);
 var $index=(($mem+$add_ptr16_sum263)|0);
 var $34=$index;
 var $35=HEAP32[(($34)>>2)];
 var $arrayidx130=((12264+($35<<2))|0);
 var $36=HEAP32[(($arrayidx130)>>2)];
 var $cmp131=($18|0)==($36|0);
 if($cmp131){label=36;break;}else{label=38;break;}
 case 36: 
 HEAP32[(($arrayidx130)>>2)]=$R_1;
 var $cond278=($R_1|0)==0;
 if($cond278){label=37;break;}else{label=44;break;}
 case 37: 
 var $37=HEAP32[(($34)>>2)];
 var $shl138=1<<$37;
 var $neg139=$shl138^-1;
 var $38=HEAP32[((11964)>>2)];
 var $and140=$38&$neg139;
 HEAP32[((11964)>>2)]=$and140;
 var $p_0=$6;var $psize_0=$add17;label=56;break;
 case 38: 
 var $39=$20;
 var $40=HEAP32[((11976)>>2)];
 var $cmp143=($39>>>0)<($40>>>0);
 if($cmp143){label=42;break;}else{label=39;break;}
 case 39: 
 var $arrayidx149=(($20+16)|0);
 var $41=HEAP32[(($arrayidx149)>>2)];
 var $cmp150=($41|0)==($18|0);
 if($cmp150){label=40;break;}else{label=41;break;}
 case 40: 
 HEAP32[(($arrayidx149)>>2)]=$R_1;
 label=43;break;
 case 41: 
 var $arrayidx157=(($20+20)|0);
 HEAP32[(($arrayidx157)>>2)]=$R_1;
 label=43;break;
 case 42: 
 _abort();
 throw "Reached an unreachable!";
 case 43: 
 var $cmp162=($R_1|0)==0;
 if($cmp162){var $p_0=$6;var $psize_0=$add17;label=56;break;}else{label=44;break;}
 case 44: 
 var $42=$R_1;
 var $43=HEAP32[((11976)>>2)];
 var $cmp165=($42>>>0)<($43>>>0);
 if($cmp165){label=53;break;}else{label=45;break;}
 case 45: 
 var $parent170=(($R_1+24)|0);
 HEAP32[(($parent170)>>2)]=$20;
 var $add_ptr16_sum264=((($add_ptr_sum231)+(16))|0);
 var $child171=(($mem+$add_ptr16_sum264)|0);
 var $arrayidx172=$child171;
 var $44=HEAP32[(($arrayidx172)>>2)];
 var $cmp173=($44|0)==0;
 if($cmp173){label=49;break;}else{label=46;break;}
 case 46: 
 var $45=$44;
 var $46=HEAP32[((11976)>>2)];
 var $cmp176=($45>>>0)<($46>>>0);
 if($cmp176){label=48;break;}else{label=47;break;}
 case 47: 
 var $arrayidx182=(($R_1+16)|0);
 HEAP32[(($arrayidx182)>>2)]=$44;
 var $parent183=(($44+24)|0);
 HEAP32[(($parent183)>>2)]=$R_1;
 label=49;break;
 case 48: 
 _abort();
 throw "Reached an unreachable!";
 case 49: 
 var $child171_sum=((($add_ptr_sum231)+(20))|0);
 var $arrayidx188=(($mem+$child171_sum)|0);
 var $47=$arrayidx188;
 var $48=HEAP32[(($47)>>2)];
 var $cmp189=($48|0)==0;
 if($cmp189){var $p_0=$6;var $psize_0=$add17;label=56;break;}else{label=50;break;}
 case 50: 
 var $49=$48;
 var $50=HEAP32[((11976)>>2)];
 var $cmp192=($49>>>0)<($50>>>0);
 if($cmp192){label=52;break;}else{label=51;break;}
 case 51: 
 var $arrayidx198=(($R_1+20)|0);
 HEAP32[(($arrayidx198)>>2)]=$48;
 var $parent199=(($48+24)|0);
 HEAP32[(($parent199)>>2)]=$R_1;
 var $p_0=$6;var $psize_0=$add17;label=56;break;
 case 52: 
 _abort();
 throw "Reached an unreachable!";
 case 53: 
 _abort();
 throw "Reached an unreachable!";
 case 54: 
 var $add_ptr6_sum=((($and5)-(4))|0);
 var $head209=(($mem+$add_ptr6_sum)|0);
 var $51=$head209;
 var $52=HEAP32[(($51)>>2)];
 var $and210=$52&3;
 var $cmp211=($and210|0)==3;
 if($cmp211){label=55;break;}else{var $p_0=$6;var $psize_0=$add17;label=56;break;}
 case 55: 
 HEAP32[((11968)>>2)]=$add17;
 var $53=HEAP32[(($51)>>2)];
 var $and215=$53&-2;
 HEAP32[(($51)>>2)]=$and215;
 var $or=$add17|1;
 var $add_ptr16_sum=((($add_ptr_sum231)+(4))|0);
 var $head216=(($mem+$add_ptr16_sum)|0);
 var $54=$head216;
 HEAP32[(($54)>>2)]=$or;
 var $prev_foot218=$add_ptr6;
 HEAP32[(($prev_foot218)>>2)]=$add17;
 label=140;break;
 case 56: 
 var $psize_0;
 var $p_0;
 var $55=$p_0;
 var $cmp225=($55>>>0)<($add_ptr6>>>0);
 if($cmp225){label=57;break;}else{label=139;break;}
 case 57: 
 var $add_ptr6_sum258=((($and5)-(4))|0);
 var $head228=(($mem+$add_ptr6_sum258)|0);
 var $56=$head228;
 var $57=HEAP32[(($56)>>2)];
 var $and229=$57&1;
 var $phitmp=($and229|0)==0;
 if($phitmp){label=139;break;}else{label=58;break;}
 case 58: 
 var $and237=$57&2;
 var $tobool238=($and237|0)==0;
 if($tobool238){label=59;break;}else{label=112;break;}
 case 59: 
 var $58=HEAP32[((11984)>>2)];
 var $cmp240=($4|0)==($58|0);
 if($cmp240){label=60;break;}else{label=62;break;}
 case 60: 
 var $59=HEAP32[((11972)>>2)];
 var $add243=((($59)+($psize_0))|0);
 HEAP32[((11972)>>2)]=$add243;
 HEAP32[((11984)>>2)]=$p_0;
 var $or244=$add243|1;
 var $head245=(($p_0+4)|0);
 HEAP32[(($head245)>>2)]=$or244;
 var $60=HEAP32[((11980)>>2)];
 var $cmp246=($p_0|0)==($60|0);
 if($cmp246){label=61;break;}else{label=140;break;}
 case 61: 
 HEAP32[((11980)>>2)]=0;
 HEAP32[((11968)>>2)]=0;
 label=140;break;
 case 62: 
 var $61=HEAP32[((11980)>>2)];
 var $cmp251=($4|0)==($61|0);
 if($cmp251){label=63;break;}else{label=64;break;}
 case 63: 
 var $62=HEAP32[((11968)>>2)];
 var $add254=((($62)+($psize_0))|0);
 HEAP32[((11968)>>2)]=$add254;
 HEAP32[((11980)>>2)]=$p_0;
 var $or255=$add254|1;
 var $head256=(($p_0+4)|0);
 HEAP32[(($head256)>>2)]=$or255;
 var $add_ptr257=(($55+$add254)|0);
 var $prev_foot258=$add_ptr257;
 HEAP32[(($prev_foot258)>>2)]=$add254;
 label=140;break;
 case 64: 
 var $and261=$57&-8;
 var $add262=((($and261)+($psize_0))|0);
 var $shr263=$57>>>3;
 var $cmp264=($57>>>0)<256;
 if($cmp264){label=65;break;}else{label=77;break;}
 case 65: 
 var $fd268=(($mem+$and5)|0);
 var $63=$fd268;
 var $64=HEAP32[(($63)>>2)];
 var $add_ptr6_sum252253=$and5|4;
 var $bk270=(($mem+$add_ptr6_sum252253)|0);
 var $65=$bk270;
 var $66=HEAP32[(($65)>>2)];
 var $shl273=$shr263<<1;
 var $arrayidx274=((12000+($shl273<<2))|0);
 var $67=$arrayidx274;
 var $cmp275=($64|0)==($67|0);
 if($cmp275){label=68;break;}else{label=66;break;}
 case 66: 
 var $68=$64;
 var $69=HEAP32[((11976)>>2)];
 var $cmp278=($68>>>0)<($69>>>0);
 if($cmp278){label=76;break;}else{label=67;break;}
 case 67: 
 var $bk281=(($64+12)|0);
 var $70=HEAP32[(($bk281)>>2)];
 var $cmp282=($70|0)==($4|0);
 if($cmp282){label=68;break;}else{label=76;break;}
 case 68: 
 var $cmp291=($66|0)==($64|0);
 if($cmp291){label=69;break;}else{label=70;break;}
 case 69: 
 var $shl294=1<<$shr263;
 var $neg295=$shl294^-1;
 var $71=HEAP32[((11960)>>2)];
 var $and296=$71&$neg295;
 HEAP32[((11960)>>2)]=$and296;
 label=110;break;
 case 70: 
 var $cmp300=($66|0)==($67|0);
 if($cmp300){label=71;break;}else{label=72;break;}
 case 71: 
 var $fd317_pre=(($66+8)|0);
 var $fd317_pre_phi=$fd317_pre;label=74;break;
 case 72: 
 var $72=$66;
 var $73=HEAP32[((11976)>>2)];
 var $cmp303=($72>>>0)<($73>>>0);
 if($cmp303){label=75;break;}else{label=73;break;}
 case 73: 
 var $fd306=(($66+8)|0);
 var $74=HEAP32[(($fd306)>>2)];
 var $cmp307=($74|0)==($4|0);
 if($cmp307){var $fd317_pre_phi=$fd306;label=74;break;}else{label=75;break;}
 case 74: 
 var $fd317_pre_phi;
 var $bk316=(($64+12)|0);
 HEAP32[(($bk316)>>2)]=$66;
 HEAP32[(($fd317_pre_phi)>>2)]=$64;
 label=110;break;
 case 75: 
 _abort();
 throw "Reached an unreachable!";
 case 76: 
 _abort();
 throw "Reached an unreachable!";
 case 77: 
 var $75=$add_ptr6;
 var $add_ptr6_sum233=((($and5)+(16))|0);
 var $parent326=(($mem+$add_ptr6_sum233)|0);
 var $76=$parent326;
 var $77=HEAP32[(($76)>>2)];
 var $add_ptr6_sum234235=$and5|4;
 var $bk328=(($mem+$add_ptr6_sum234235)|0);
 var $78=$bk328;
 var $79=HEAP32[(($78)>>2)];
 var $cmp329=($79|0)==($75|0);
 if($cmp329){label=83;break;}else{label=78;break;}
 case 78: 
 var $fd333=(($mem+$and5)|0);
 var $80=$fd333;
 var $81=HEAP32[(($80)>>2)];
 var $82=$81;
 var $83=HEAP32[((11976)>>2)];
 var $cmp335=($82>>>0)<($83>>>0);
 if($cmp335){label=82;break;}else{label=79;break;}
 case 79: 
 var $bk338=(($81+12)|0);
 var $84=HEAP32[(($bk338)>>2)];
 var $cmp339=($84|0)==($75|0);
 if($cmp339){label=80;break;}else{label=82;break;}
 case 80: 
 var $fd342=(($79+8)|0);
 var $85=HEAP32[(($fd342)>>2)];
 var $cmp343=($85|0)==($75|0);
 if($cmp343){label=81;break;}else{label=82;break;}
 case 81: 
 HEAP32[(($bk338)>>2)]=$79;
 HEAP32[(($fd342)>>2)]=$81;
 var $R327_1=$79;label=90;break;
 case 82: 
 _abort();
 throw "Reached an unreachable!";
 case 83: 
 var $child356_sum=((($and5)+(12))|0);
 var $arrayidx357=(($mem+$child356_sum)|0);
 var $86=$arrayidx357;
 var $87=HEAP32[(($86)>>2)];
 var $cmp358=($87|0)==0;
 if($cmp358){label=84;break;}else{var $R327_0=$87;var $RP355_0=$86;label=85;break;}
 case 84: 
 var $add_ptr6_sum236=((($and5)+(8))|0);
 var $child356=(($mem+$add_ptr6_sum236)|0);
 var $arrayidx362=$child356;
 var $88=HEAP32[(($arrayidx362)>>2)];
 var $cmp363=($88|0)==0;
 if($cmp363){var $R327_1=0;label=90;break;}else{var $R327_0=$88;var $RP355_0=$arrayidx362;label=85;break;}
 case 85: 
 var $RP355_0;
 var $R327_0;
 var $arrayidx369=(($R327_0+20)|0);
 var $89=HEAP32[(($arrayidx369)>>2)];
 var $cmp370=($89|0)==0;
 if($cmp370){label=86;break;}else{var $R327_0=$89;var $RP355_0=$arrayidx369;label=85;break;}
 case 86: 
 var $arrayidx374=(($R327_0+16)|0);
 var $90=HEAP32[(($arrayidx374)>>2)];
 var $cmp375=($90|0)==0;
 if($cmp375){label=87;break;}else{var $R327_0=$90;var $RP355_0=$arrayidx374;label=85;break;}
 case 87: 
 var $91=$RP355_0;
 var $92=HEAP32[((11976)>>2)];
 var $cmp381=($91>>>0)<($92>>>0);
 if($cmp381){label=89;break;}else{label=88;break;}
 case 88: 
 HEAP32[(($RP355_0)>>2)]=0;
 var $R327_1=$R327_0;label=90;break;
 case 89: 
 _abort();
 throw "Reached an unreachable!";
 case 90: 
 var $R327_1;
 var $cmp390=($77|0)==0;
 if($cmp390){label=110;break;}else{label=91;break;}
 case 91: 
 var $add_ptr6_sum246=((($and5)+(20))|0);
 var $index394=(($mem+$add_ptr6_sum246)|0);
 var $93=$index394;
 var $94=HEAP32[(($93)>>2)];
 var $arrayidx395=((12264+($94<<2))|0);
 var $95=HEAP32[(($arrayidx395)>>2)];
 var $cmp396=($75|0)==($95|0);
 if($cmp396){label=92;break;}else{label=94;break;}
 case 92: 
 HEAP32[(($arrayidx395)>>2)]=$R327_1;
 var $cond279=($R327_1|0)==0;
 if($cond279){label=93;break;}else{label=100;break;}
 case 93: 
 var $96=HEAP32[(($93)>>2)];
 var $shl403=1<<$96;
 var $neg404=$shl403^-1;
 var $97=HEAP32[((11964)>>2)];
 var $and405=$97&$neg404;
 HEAP32[((11964)>>2)]=$and405;
 label=110;break;
 case 94: 
 var $98=$77;
 var $99=HEAP32[((11976)>>2)];
 var $cmp408=($98>>>0)<($99>>>0);
 if($cmp408){label=98;break;}else{label=95;break;}
 case 95: 
 var $arrayidx414=(($77+16)|0);
 var $100=HEAP32[(($arrayidx414)>>2)];
 var $cmp415=($100|0)==($75|0);
 if($cmp415){label=96;break;}else{label=97;break;}
 case 96: 
 HEAP32[(($arrayidx414)>>2)]=$R327_1;
 label=99;break;
 case 97: 
 var $arrayidx422=(($77+20)|0);
 HEAP32[(($arrayidx422)>>2)]=$R327_1;
 label=99;break;
 case 98: 
 _abort();
 throw "Reached an unreachable!";
 case 99: 
 var $cmp427=($R327_1|0)==0;
 if($cmp427){label=110;break;}else{label=100;break;}
 case 100: 
 var $101=$R327_1;
 var $102=HEAP32[((11976)>>2)];
 var $cmp430=($101>>>0)<($102>>>0);
 if($cmp430){label=109;break;}else{label=101;break;}
 case 101: 
 var $parent437=(($R327_1+24)|0);
 HEAP32[(($parent437)>>2)]=$77;
 var $add_ptr6_sum247=((($and5)+(8))|0);
 var $child438=(($mem+$add_ptr6_sum247)|0);
 var $arrayidx439=$child438;
 var $103=HEAP32[(($arrayidx439)>>2)];
 var $cmp440=($103|0)==0;
 if($cmp440){label=105;break;}else{label=102;break;}
 case 102: 
 var $104=$103;
 var $105=HEAP32[((11976)>>2)];
 var $cmp443=($104>>>0)<($105>>>0);
 if($cmp443){label=104;break;}else{label=103;break;}
 case 103: 
 var $arrayidx449=(($R327_1+16)|0);
 HEAP32[(($arrayidx449)>>2)]=$103;
 var $parent450=(($103+24)|0);
 HEAP32[(($parent450)>>2)]=$R327_1;
 label=105;break;
 case 104: 
 _abort();
 throw "Reached an unreachable!";
 case 105: 
 var $child438_sum=((($and5)+(12))|0);
 var $arrayidx455=(($mem+$child438_sum)|0);
 var $106=$arrayidx455;
 var $107=HEAP32[(($106)>>2)];
 var $cmp456=($107|0)==0;
 if($cmp456){label=110;break;}else{label=106;break;}
 case 106: 
 var $108=$107;
 var $109=HEAP32[((11976)>>2)];
 var $cmp459=($108>>>0)<($109>>>0);
 if($cmp459){label=108;break;}else{label=107;break;}
 case 107: 
 var $arrayidx465=(($R327_1+20)|0);
 HEAP32[(($arrayidx465)>>2)]=$107;
 var $parent466=(($107+24)|0);
 HEAP32[(($parent466)>>2)]=$R327_1;
 label=110;break;
 case 108: 
 _abort();
 throw "Reached an unreachable!";
 case 109: 
 _abort();
 throw "Reached an unreachable!";
 case 110: 
 var $or475=$add262|1;
 var $head476=(($p_0+4)|0);
 HEAP32[(($head476)>>2)]=$or475;
 var $add_ptr477=(($55+$add262)|0);
 var $prev_foot478=$add_ptr477;
 HEAP32[(($prev_foot478)>>2)]=$add262;
 var $110=HEAP32[((11980)>>2)];
 var $cmp479=($p_0|0)==($110|0);
 if($cmp479){label=111;break;}else{var $psize_1=$add262;label=113;break;}
 case 111: 
 HEAP32[((11968)>>2)]=$add262;
 label=140;break;
 case 112: 
 var $and487=$57&-2;
 HEAP32[(($56)>>2)]=$and487;
 var $or488=$psize_0|1;
 var $head489=(($p_0+4)|0);
 HEAP32[(($head489)>>2)]=$or488;
 var $add_ptr490=(($55+$psize_0)|0);
 var $prev_foot491=$add_ptr490;
 HEAP32[(($prev_foot491)>>2)]=$psize_0;
 var $psize_1=$psize_0;label=113;break;
 case 113: 
 var $psize_1;
 var $shr493=$psize_1>>>3;
 var $cmp494=($psize_1>>>0)<256;
 if($cmp494){label=114;break;}else{label=119;break;}
 case 114: 
 var $shl500=$shr493<<1;
 var $arrayidx501=((12000+($shl500<<2))|0);
 var $111=$arrayidx501;
 var $112=HEAP32[((11960)>>2)];
 var $shl503=1<<$shr493;
 var $and504=$112&$shl503;
 var $tobool505=($and504|0)==0;
 if($tobool505){label=115;break;}else{label=116;break;}
 case 115: 
 var $or508=$112|$shl503;
 HEAP32[((11960)>>2)]=$or508;
 var $arrayidx501_sum_pre=((($shl500)+(2))|0);
 var $_pre=((12000+($arrayidx501_sum_pre<<2))|0);
 var $F502_0=$111;var $_pre_phi=$_pre;label=118;break;
 case 116: 
 var $arrayidx501_sum245=((($shl500)+(2))|0);
 var $113=((12000+($arrayidx501_sum245<<2))|0);
 var $114=HEAP32[(($113)>>2)];
 var $115=$114;
 var $116=HEAP32[((11976)>>2)];
 var $cmp511=($115>>>0)<($116>>>0);
 if($cmp511){label=117;break;}else{var $F502_0=$114;var $_pre_phi=$113;label=118;break;}
 case 117: 
 _abort();
 throw "Reached an unreachable!";
 case 118: 
 var $_pre_phi;
 var $F502_0;
 HEAP32[(($_pre_phi)>>2)]=$p_0;
 var $bk521=(($F502_0+12)|0);
 HEAP32[(($bk521)>>2)]=$p_0;
 var $fd522=(($p_0+8)|0);
 HEAP32[(($fd522)>>2)]=$F502_0;
 var $bk523=(($p_0+12)|0);
 HEAP32[(($bk523)>>2)]=$111;
 label=140;break;
 case 119: 
 var $117=$p_0;
 var $shr527=$psize_1>>>8;
 var $cmp528=($shr527|0)==0;
 if($cmp528){var $I526_0=0;label=122;break;}else{label=120;break;}
 case 120: 
 var $cmp532=($psize_1>>>0)>16777215;
 if($cmp532){var $I526_0=31;label=122;break;}else{label=121;break;}
 case 121: 
 var $sub=((($shr527)+(1048320))|0);
 var $shr536=$sub>>>16;
 var $and537=$shr536&8;
 var $shl538=$shr527<<$and537;
 var $sub539=((($shl538)+(520192))|0);
 var $shr540=$sub539>>>16;
 var $and541=$shr540&4;
 var $add542=$and541|$and537;
 var $shl543=$shl538<<$and541;
 var $sub544=((($shl543)+(245760))|0);
 var $shr545=$sub544>>>16;
 var $and546=$shr545&2;
 var $add547=$add542|$and546;
 var $sub548=(((14)-($add547))|0);
 var $shl549=$shl543<<$and546;
 var $shr550=$shl549>>>15;
 var $add551=((($sub548)+($shr550))|0);
 var $shl552=$add551<<1;
 var $add553=((($add551)+(7))|0);
 var $shr554=$psize_1>>>($add553>>>0);
 var $and555=$shr554&1;
 var $add556=$and555|$shl552;
 var $I526_0=$add556;label=122;break;
 case 122: 
 var $I526_0;
 var $arrayidx559=((12264+($I526_0<<2))|0);
 var $index560=(($p_0+28)|0);
 var $I526_0_c=$I526_0;
 HEAP32[(($index560)>>2)]=$I526_0_c;
 var $arrayidx562=(($p_0+20)|0);
 HEAP32[(($arrayidx562)>>2)]=0;
 var $118=(($p_0+16)|0);
 HEAP32[(($118)>>2)]=0;
 var $119=HEAP32[((11964)>>2)];
 var $shl565=1<<$I526_0;
 var $and566=$119&$shl565;
 var $tobool567=($and566|0)==0;
 if($tobool567){label=123;break;}else{label=124;break;}
 case 123: 
 var $or570=$119|$shl565;
 HEAP32[((11964)>>2)]=$or570;
 HEAP32[(($arrayidx559)>>2)]=$117;
 var $parent571=(($p_0+24)|0);
 var $_c=$arrayidx559;
 HEAP32[(($parent571)>>2)]=$_c;
 var $bk572=(($p_0+12)|0);
 HEAP32[(($bk572)>>2)]=$p_0;
 var $fd573=(($p_0+8)|0);
 HEAP32[(($fd573)>>2)]=$p_0;
 label=136;break;
 case 124: 
 var $120=HEAP32[(($arrayidx559)>>2)];
 var $cmp576=($I526_0|0)==31;
 if($cmp576){var $cond=0;label=126;break;}else{label=125;break;}
 case 125: 
 var $shr578=$I526_0>>>1;
 var $sub581=(((25)-($shr578))|0);
 var $cond=$sub581;label=126;break;
 case 126: 
 var $cond;
 var $shl582=$psize_1<<$cond;
 var $K575_0=$shl582;var $T_0=$120;label=127;break;
 case 127: 
 var $T_0;
 var $K575_0;
 var $head583=(($T_0+4)|0);
 var $121=HEAP32[(($head583)>>2)];
 var $and584=$121&-8;
 var $cmp585=($and584|0)==($psize_1|0);
 if($cmp585){label=132;break;}else{label=128;break;}
 case 128: 
 var $shr588=$K575_0>>>31;
 var $arrayidx591=(($T_0+16+($shr588<<2))|0);
 var $122=HEAP32[(($arrayidx591)>>2)];
 var $cmp593=($122|0)==0;
 var $shl592=$K575_0<<1;
 if($cmp593){label=129;break;}else{var $K575_0=$shl592;var $T_0=$122;label=127;break;}
 case 129: 
 var $123=$arrayidx591;
 var $124=HEAP32[((11976)>>2)];
 var $cmp597=($123>>>0)<($124>>>0);
 if($cmp597){label=131;break;}else{label=130;break;}
 case 130: 
 HEAP32[(($arrayidx591)>>2)]=$117;
 var $parent602=(($p_0+24)|0);
 var $T_0_c242=$T_0;
 HEAP32[(($parent602)>>2)]=$T_0_c242;
 var $bk603=(($p_0+12)|0);
 HEAP32[(($bk603)>>2)]=$p_0;
 var $fd604=(($p_0+8)|0);
 HEAP32[(($fd604)>>2)]=$p_0;
 label=136;break;
 case 131: 
 _abort();
 throw "Reached an unreachable!";
 case 132: 
 var $fd609=(($T_0+8)|0);
 var $125=HEAP32[(($fd609)>>2)];
 var $126=$T_0;
 var $127=HEAP32[((11976)>>2)];
 var $cmp610=($126>>>0)<($127>>>0);
 if($cmp610){label=135;break;}else{label=133;break;}
 case 133: 
 var $128=$125;
 var $cmp613=($128>>>0)<($127>>>0);
 if($cmp613){label=135;break;}else{label=134;break;}
 case 134: 
 var $bk620=(($125+12)|0);
 HEAP32[(($bk620)>>2)]=$117;
 HEAP32[(($fd609)>>2)]=$117;
 var $fd622=(($p_0+8)|0);
 var $_c241=$125;
 HEAP32[(($fd622)>>2)]=$_c241;
 var $bk623=(($p_0+12)|0);
 var $T_0_c=$T_0;
 HEAP32[(($bk623)>>2)]=$T_0_c;
 var $parent624=(($p_0+24)|0);
 HEAP32[(($parent624)>>2)]=0;
 label=136;break;
 case 135: 
 _abort();
 throw "Reached an unreachable!";
 case 136: 
 var $129=HEAP32[((11992)>>2)];
 var $dec=((($129)-(1))|0);
 HEAP32[((11992)>>2)]=$dec;
 var $cmp628=($dec|0)==0;
 if($cmp628){var $sp_0_in_i=12416;label=137;break;}else{label=140;break;}
 case 137: 
 var $sp_0_in_i;
 var $sp_0_i=HEAP32[(($sp_0_in_i)>>2)];
 var $cmp_i=($sp_0_i|0)==0;
 var $next4_i=(($sp_0_i+8)|0);
 if($cmp_i){label=138;break;}else{var $sp_0_in_i=$next4_i;label=137;break;}
 case 138: 
 HEAP32[((11992)>>2)]=-1;
 label=140;break;
 case 139: 
 _abort();
 throw "Reached an unreachable!";
 case 140: 
 return;
  default: assert(0, "bad label: " + label);
 }
}
Module["_free"] = _free;
function _realloc($oldmem,$bytes){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $cmp=($oldmem|0)==0;
 if($cmp){label=2;break;}else{label=3;break;}
 case 2: 
 var $call=_malloc($bytes);
 var $mem_0=$call;label=11;break;
 case 3: 
 var $cmp1=($bytes>>>0)>4294967231;
 if($cmp1){label=4;break;}else{label=5;break;}
 case 4: 
 var $call3=___errno_location();
 HEAP32[(($call3)>>2)]=12;
 var $mem_0=0;label=11;break;
 case 5: 
 var $cmp5=($bytes>>>0)<11;
 if($cmp5){var $cond=16;label=7;break;}else{label=6;break;}
 case 6: 
 var $add6=((($bytes)+(11))|0);
 var $and=$add6&-8;
 var $cond=$and;label=7;break;
 case 7: 
 var $cond;
 var $add_ptr=((($oldmem)-(8))|0);
 var $0=$add_ptr;
 var $call7=_try_realloc_chunk($0,$cond);
 var $cmp8=($call7|0)==0;
 if($cmp8){label=9;break;}else{label=8;break;}
 case 8: 
 var $add_ptr10=(($call7+8)|0);
 var $1=$add_ptr10;
 var $mem_0=$1;label=11;break;
 case 9: 
 var $call12=_malloc($bytes);
 var $cmp13=($call12|0)==0;
 if($cmp13){var $mem_0=0;label=11;break;}else{label=10;break;}
 case 10: 
 var $head=((($oldmem)-(4))|0);
 var $2=$head;
 var $3=HEAP32[(($2)>>2)];
 var $and15=$3&-8;
 var $and17=$3&3;
 var $cmp18=($and17|0)==0;
 var $cond19=($cmp18?8:4);
 var $sub=((($and15)-($cond19))|0);
 var $cmp20=($sub>>>0)<($bytes>>>0);
 var $cond24=($cmp20?$sub:$bytes);
 assert($cond24 % 1 === 0);(_memcpy($call12, $oldmem, $cond24)|0);
 _free($oldmem);
 var $mem_0=$call12;label=11;break;
 case 11: 
 var $mem_0;
 return $mem_0;
  default: assert(0, "bad label: " + label);
 }
}
Module["_realloc"] = _realloc;
function _try_realloc_chunk($p,$nb){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $head=(($p+4)|0);
 var $0=HEAP32[(($head)>>2)];
 var $and=$0&-8;
 var $1=$p;
 var $add_ptr=(($1+$and)|0);
 var $2=$add_ptr;
 var $3=HEAP32[((11976)>>2)];
 var $cmp=($1>>>0)<($3>>>0);
 if($cmp){label=72;break;}else{label=2;break;}
 case 2: 
 var $and2=$0&3;
 var $cmp3=($and2|0)!=1;
 var $cmp5=($1>>>0)<($add_ptr>>>0);
 var $or_cond=$cmp3&$cmp5;
 if($or_cond){label=3;break;}else{label=72;break;}
 case 3: 
 var $add_ptr_sum2122=$and|4;
 var $head6=(($1+$add_ptr_sum2122)|0);
 var $4=$head6;
 var $5=HEAP32[(($4)>>2)];
 var $and7=$5&1;
 var $phitmp=($and7|0)==0;
 if($phitmp){label=72;break;}else{label=4;break;}
 case 4: 
 var $cmp11=($and2|0)==0;
 if($cmp11){label=5;break;}else{label=9;break;}
 case 5: 
 var $cmp_i=($nb>>>0)<256;
 if($cmp_i){var $newp_0=0;label=73;break;}else{label=6;break;}
 case 6: 
 var $add_i=((($nb)+(4))|0);
 var $cmp1_i=($and>>>0)<($add_i>>>0);
 if($cmp1_i){label=8;break;}else{label=7;break;}
 case 7: 
 var $sub_i=((($and)-($nb))|0);
 var $6=HEAP32[((11920)>>2)];
 var $shl_i=$6<<1;
 var $cmp2_i=($sub_i>>>0)>($shl_i>>>0);
 if($cmp2_i){label=8;break;}else{var $newp_0=$p;label=73;break;}
 case 8: 
 var $newp_0=0;label=73;break;
 case 9: 
 var $cmp13=($and>>>0)<($nb>>>0);
 if($cmp13){label=12;break;}else{label=10;break;}
 case 10: 
 var $sub=((($and)-($nb))|0);
 var $cmp15=($sub>>>0)>15;
 if($cmp15){label=11;break;}else{var $newp_0=$p;label=73;break;}
 case 11: 
 var $add_ptr17=(($1+$nb)|0);
 var $7=$add_ptr17;
 var $and19=$0&1;
 var $or=$and19|$nb;
 var $or20=$or|2;
 HEAP32[(($head)>>2)]=$or20;
 var $add_ptr17_sum=((($nb)+(4))|0);
 var $head23=(($1+$add_ptr17_sum)|0);
 var $8=$head23;
 var $or28=$sub|3;
 HEAP32[(($8)>>2)]=$or28;
 var $9=HEAP32[(($4)>>2)];
 var $or32=$9|1;
 HEAP32[(($4)>>2)]=$or32;
 _dispose_chunk($7,$sub);
 var $newp_0=$p;label=73;break;
 case 12: 
 var $10=HEAP32[((11984)>>2)];
 var $cmp34=($2|0)==($10|0);
 if($cmp34){label=13;break;}else{label=15;break;}
 case 13: 
 var $11=HEAP32[((11972)>>2)];
 var $add=((($11)+($and))|0);
 var $cmp36=($add>>>0)>($nb>>>0);
 if($cmp36){label=14;break;}else{var $newp_0=0;label=73;break;}
 case 14: 
 var $sub40=((($add)-($nb))|0);
 var $add_ptr41=(($1+$nb)|0);
 var $12=$add_ptr41;
 var $and43=$0&1;
 var $or44=$and43|$nb;
 var $or45=$or44|2;
 HEAP32[(($head)>>2)]=$or45;
 var $add_ptr41_sum=((($nb)+(4))|0);
 var $head48=(($1+$add_ptr41_sum)|0);
 var $13=$head48;
 var $or50=$sub40|1;
 HEAP32[(($13)>>2)]=$or50;
 HEAP32[((11984)>>2)]=$12;
 HEAP32[((11972)>>2)]=$sub40;
 var $newp_0=$p;label=73;break;
 case 15: 
 var $14=HEAP32[((11980)>>2)];
 var $cmp56=($2|0)==($14|0);
 if($cmp56){label=16;break;}else{label=21;break;}
 case 16: 
 var $15=HEAP32[((11968)>>2)];
 var $add58=((($15)+($and))|0);
 var $cmp59=($add58>>>0)<($nb>>>0);
 if($cmp59){var $newp_0=0;label=73;break;}else{label=17;break;}
 case 17: 
 var $sub62=((($add58)-($nb))|0);
 var $cmp63=($sub62>>>0)>15;
 if($cmp63){label=18;break;}else{label=19;break;}
 case 18: 
 var $add_ptr66=(($1+$nb)|0);
 var $16=$add_ptr66;
 var $add_ptr67=(($1+$add58)|0);
 var $and69=$0&1;
 var $or70=$and69|$nb;
 var $or71=$or70|2;
 HEAP32[(($head)>>2)]=$or71;
 var $add_ptr66_sum=((($nb)+(4))|0);
 var $head74=(($1+$add_ptr66_sum)|0);
 var $17=$head74;
 var $or76=$sub62|1;
 HEAP32[(($17)>>2)]=$or76;
 var $prev_foot=$add_ptr67;
 HEAP32[(($prev_foot)>>2)]=$sub62;
 var $add_ptr67_sum=((($add58)+(4))|0);
 var $head79=(($1+$add_ptr67_sum)|0);
 var $18=$head79;
 var $19=HEAP32[(($18)>>2)];
 var $and80=$19&-2;
 HEAP32[(($18)>>2)]=$and80;
 var $storemerge=$16;var $storemerge18=$sub62;label=20;break;
 case 19: 
 var $and87=$0&1;
 var $or88=$and87|$add58;
 var $or89=$or88|2;
 HEAP32[(($head)>>2)]=$or89;
 var $add_ptr91_sum=((($add58)+(4))|0);
 var $head92=(($1+$add_ptr91_sum)|0);
 var $20=$head92;
 var $21=HEAP32[(($20)>>2)];
 var $or93=$21|1;
 HEAP32[(($20)>>2)]=$or93;
 var $storemerge=0;var $storemerge18=0;label=20;break;
 case 20: 
 var $storemerge18;
 var $storemerge;
 HEAP32[((11968)>>2)]=$storemerge18;
 HEAP32[((11980)>>2)]=$storemerge;
 var $newp_0=$p;label=73;break;
 case 21: 
 var $and100=$5&2;
 var $tobool101=($and100|0)==0;
 if($tobool101){label=22;break;}else{var $newp_0=0;label=73;break;}
 case 22: 
 var $and104=$5&-8;
 var $add105=((($and104)+($and))|0);
 var $cmp106=($add105>>>0)<($nb>>>0);
 if($cmp106){var $newp_0=0;label=73;break;}else{label=23;break;}
 case 23: 
 var $sub110=((($add105)-($nb))|0);
 var $shr=$5>>>3;
 var $cmp111=($5>>>0)<256;
 if($cmp111){label=24;break;}else{label=36;break;}
 case 24: 
 var $add_ptr_sum12=((($and)+(8))|0);
 var $fd=(($1+$add_ptr_sum12)|0);
 var $22=$fd;
 var $23=HEAP32[(($22)>>2)];
 var $add_ptr_sum13=((($and)+(12))|0);
 var $bk=(($1+$add_ptr_sum13)|0);
 var $24=$bk;
 var $25=HEAP32[(($24)>>2)];
 var $shl=$shr<<1;
 var $arrayidx=((12000+($shl<<2))|0);
 var $26=$arrayidx;
 var $cmp114=($23|0)==($26|0);
 if($cmp114){label=27;break;}else{label=25;break;}
 case 25: 
 var $27=$23;
 var $cmp116=($27>>>0)<($3>>>0);
 if($cmp116){label=35;break;}else{label=26;break;}
 case 26: 
 var $bk118=(($23+12)|0);
 var $28=HEAP32[(($bk118)>>2)];
 var $cmp119=($28|0)==($2|0);
 if($cmp119){label=27;break;}else{label=35;break;}
 case 27: 
 var $cmp125=($25|0)==($23|0);
 if($cmp125){label=28;break;}else{label=29;break;}
 case 28: 
 var $shl127=1<<$shr;
 var $neg=$shl127^-1;
 var $29=HEAP32[((11960)>>2)];
 var $and128=$29&$neg;
 HEAP32[((11960)>>2)]=$and128;
 label=69;break;
 case 29: 
 var $cmp133=($25|0)==($26|0);
 if($cmp133){label=30;break;}else{label=31;break;}
 case 30: 
 var $fd148_pre=(($25+8)|0);
 var $fd148_pre_phi=$fd148_pre;label=33;break;
 case 31: 
 var $30=$25;
 var $cmp136=($30>>>0)<($3>>>0);
 if($cmp136){label=34;break;}else{label=32;break;}
 case 32: 
 var $fd138=(($25+8)|0);
 var $31=HEAP32[(($fd138)>>2)];
 var $cmp139=($31|0)==($2|0);
 if($cmp139){var $fd148_pre_phi=$fd138;label=33;break;}else{label=34;break;}
 case 33: 
 var $fd148_pre_phi;
 var $bk147=(($23+12)|0);
 HEAP32[(($bk147)>>2)]=$25;
 HEAP32[(($fd148_pre_phi)>>2)]=$23;
 label=69;break;
 case 34: 
 _abort();
 throw "Reached an unreachable!";
 case 35: 
 _abort();
 throw "Reached an unreachable!";
 case 36: 
 var $32=$add_ptr;
 var $add_ptr_sum=((($and)+(24))|0);
 var $parent=(($1+$add_ptr_sum)|0);
 var $33=$parent;
 var $34=HEAP32[(($33)>>2)];
 var $add_ptr_sum2=((($and)+(12))|0);
 var $bk155=(($1+$add_ptr_sum2)|0);
 var $35=$bk155;
 var $36=HEAP32[(($35)>>2)];
 var $cmp156=($36|0)==($32|0);
 if($cmp156){label=42;break;}else{label=37;break;}
 case 37: 
 var $add_ptr_sum9=((($and)+(8))|0);
 var $fd159=(($1+$add_ptr_sum9)|0);
 var $37=$fd159;
 var $38=HEAP32[(($37)>>2)];
 var $39=$38;
 var $cmp162=($39>>>0)<($3>>>0);
 if($cmp162){label=41;break;}else{label=38;break;}
 case 38: 
 var $bk164=(($38+12)|0);
 var $40=HEAP32[(($bk164)>>2)];
 var $cmp165=($40|0)==($32|0);
 if($cmp165){label=39;break;}else{label=41;break;}
 case 39: 
 var $fd167=(($36+8)|0);
 var $41=HEAP32[(($fd167)>>2)];
 var $cmp168=($41|0)==($32|0);
 if($cmp168){label=40;break;}else{label=41;break;}
 case 40: 
 HEAP32[(($bk164)>>2)]=$36;
 HEAP32[(($fd167)>>2)]=$38;
 var $R_1=$36;label=49;break;
 case 41: 
 _abort();
 throw "Reached an unreachable!";
 case 42: 
 var $child_sum=((($and)+(20))|0);
 var $arrayidx179=(($1+$child_sum)|0);
 var $42=$arrayidx179;
 var $43=HEAP32[(($42)>>2)];
 var $cmp180=($43|0)==0;
 if($cmp180){label=43;break;}else{var $R_0=$43;var $RP_0=$42;label=44;break;}
 case 43: 
 var $add_ptr_sum3=((($and)+(16))|0);
 var $child=(($1+$add_ptr_sum3)|0);
 var $arrayidx182=$child;
 var $44=HEAP32[(($arrayidx182)>>2)];
 var $cmp183=($44|0)==0;
 if($cmp183){var $R_1=0;label=49;break;}else{var $R_0=$44;var $RP_0=$arrayidx182;label=44;break;}
 case 44: 
 var $RP_0;
 var $R_0;
 var $arrayidx186=(($R_0+20)|0);
 var $45=HEAP32[(($arrayidx186)>>2)];
 var $cmp187=($45|0)==0;
 if($cmp187){label=45;break;}else{var $R_0=$45;var $RP_0=$arrayidx186;label=44;break;}
 case 45: 
 var $arrayidx190=(($R_0+16)|0);
 var $46=HEAP32[(($arrayidx190)>>2)];
 var $cmp191=($46|0)==0;
 if($cmp191){label=46;break;}else{var $R_0=$46;var $RP_0=$arrayidx190;label=44;break;}
 case 46: 
 var $47=$RP_0;
 var $cmp195=($47>>>0)<($3>>>0);
 if($cmp195){label=48;break;}else{label=47;break;}
 case 47: 
 HEAP32[(($RP_0)>>2)]=0;
 var $R_1=$R_0;label=49;break;
 case 48: 
 _abort();
 throw "Reached an unreachable!";
 case 49: 
 var $R_1;
 var $cmp203=($34|0)==0;
 if($cmp203){label=69;break;}else{label=50;break;}
 case 50: 
 var $add_ptr_sum7=((($and)+(28))|0);
 var $index=(($1+$add_ptr_sum7)|0);
 var $48=$index;
 var $49=HEAP32[(($48)>>2)];
 var $arrayidx206=((12264+($49<<2))|0);
 var $50=HEAP32[(($arrayidx206)>>2)];
 var $cmp207=($32|0)==($50|0);
 if($cmp207){label=51;break;}else{label=53;break;}
 case 51: 
 HEAP32[(($arrayidx206)>>2)]=$R_1;
 var $cond=($R_1|0)==0;
 if($cond){label=52;break;}else{label=59;break;}
 case 52: 
 var $51=HEAP32[(($48)>>2)];
 var $shl214=1<<$51;
 var $neg215=$shl214^-1;
 var $52=HEAP32[((11964)>>2)];
 var $and216=$52&$neg215;
 HEAP32[((11964)>>2)]=$and216;
 label=69;break;
 case 53: 
 var $53=$34;
 var $54=HEAP32[((11976)>>2)];
 var $cmp220=($53>>>0)<($54>>>0);
 if($cmp220){label=57;break;}else{label=54;break;}
 case 54: 
 var $arrayidx226=(($34+16)|0);
 var $55=HEAP32[(($arrayidx226)>>2)];
 var $cmp227=($55|0)==($32|0);
 if($cmp227){label=55;break;}else{label=56;break;}
 case 55: 
 HEAP32[(($arrayidx226)>>2)]=$R_1;
 label=58;break;
 case 56: 
 var $arrayidx234=(($34+20)|0);
 HEAP32[(($arrayidx234)>>2)]=$R_1;
 label=58;break;
 case 57: 
 _abort();
 throw "Reached an unreachable!";
 case 58: 
 var $cmp239=($R_1|0)==0;
 if($cmp239){label=69;break;}else{label=59;break;}
 case 59: 
 var $56=$R_1;
 var $57=HEAP32[((11976)>>2)];
 var $cmp243=($56>>>0)<($57>>>0);
 if($cmp243){label=68;break;}else{label=60;break;}
 case 60: 
 var $parent248=(($R_1+24)|0);
 HEAP32[(($parent248)>>2)]=$34;
 var $add_ptr_sum8=((($and)+(16))|0);
 var $child249=(($1+$add_ptr_sum8)|0);
 var $arrayidx250=$child249;
 var $58=HEAP32[(($arrayidx250)>>2)];
 var $cmp251=($58|0)==0;
 if($cmp251){label=64;break;}else{label=61;break;}
 case 61: 
 var $59=$58;
 var $60=HEAP32[((11976)>>2)];
 var $cmp255=($59>>>0)<($60>>>0);
 if($cmp255){label=63;break;}else{label=62;break;}
 case 62: 
 var $arrayidx261=(($R_1+16)|0);
 HEAP32[(($arrayidx261)>>2)]=$58;
 var $parent262=(($58+24)|0);
 HEAP32[(($parent262)>>2)]=$R_1;
 label=64;break;
 case 63: 
 _abort();
 throw "Reached an unreachable!";
 case 64: 
 var $child249_sum=((($and)+(20))|0);
 var $arrayidx267=(($1+$child249_sum)|0);
 var $61=$arrayidx267;
 var $62=HEAP32[(($61)>>2)];
 var $cmp268=($62|0)==0;
 if($cmp268){label=69;break;}else{label=65;break;}
 case 65: 
 var $63=$62;
 var $64=HEAP32[((11976)>>2)];
 var $cmp272=($63>>>0)<($64>>>0);
 if($cmp272){label=67;break;}else{label=66;break;}
 case 66: 
 var $arrayidx278=(($R_1+20)|0);
 HEAP32[(($arrayidx278)>>2)]=$62;
 var $parent279=(($62+24)|0);
 HEAP32[(($parent279)>>2)]=$R_1;
 label=69;break;
 case 67: 
 _abort();
 throw "Reached an unreachable!";
 case 68: 
 _abort();
 throw "Reached an unreachable!";
 case 69: 
 var $cmp288=($sub110>>>0)<16;
 if($cmp288){label=70;break;}else{label=71;break;}
 case 70: 
 var $65=HEAP32[(($head)>>2)];
 var $and294=$65&1;
 var $or295=$add105|$and294;
 var $or296=$or295|2;
 HEAP32[(($head)>>2)]=$or296;
 var $add_ptr298_sum6=$add105|4;
 var $head299=(($1+$add_ptr298_sum6)|0);
 var $66=$head299;
 var $67=HEAP32[(($66)>>2)];
 var $or300=$67|1;
 HEAP32[(($66)>>2)]=$or300;
 var $newp_0=$p;label=73;break;
 case 71: 
 var $add_ptr303=(($1+$nb)|0);
 var $68=$add_ptr303;
 var $69=HEAP32[(($head)>>2)];
 var $and305=$69&1;
 var $or306=$and305|$nb;
 var $or307=$or306|2;
 HEAP32[(($head)>>2)]=$or307;
 var $add_ptr303_sum=((($nb)+(4))|0);
 var $head310=(($1+$add_ptr303_sum)|0);
 var $70=$head310;
 var $or315=$sub110|3;
 HEAP32[(($70)>>2)]=$or315;
 var $add_ptr317_sum5=$add105|4;
 var $head318=(($1+$add_ptr317_sum5)|0);
 var $71=$head318;
 var $72=HEAP32[(($71)>>2)];
 var $or319=$72|1;
 HEAP32[(($71)>>2)]=$or319;
 _dispose_chunk($68,$sub110);
 var $newp_0=$p;label=73;break;
 case 72: 
 _abort();
 throw "Reached an unreachable!";
 case 73: 
 var $newp_0;
 return $newp_0;
  default: assert(0, "bad label: " + label);
 }
}
function _dispose_chunk($p,$psize){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $0=$p;
 var $add_ptr=(($0+$psize)|0);
 var $1=$add_ptr;
 var $head=(($p+4)|0);
 var $2=HEAP32[(($head)>>2)];
 var $and=$2&1;
 var $tobool=($and|0)==0;
 if($tobool){label=2;break;}else{var $p_addr_0=$p;var $psize_addr_0=$psize;label=54;break;}
 case 2: 
 var $prev_foot=(($p)|0);
 var $3=HEAP32[(($prev_foot)>>2)];
 var $and2=$2&3;
 var $cmp=($and2|0)==0;
 if($cmp){label=134;break;}else{label=3;break;}
 case 3: 
 var $idx_neg=(((-$3))|0);
 var $add_ptr5=(($0+$idx_neg)|0);
 var $4=$add_ptr5;
 var $add6=((($3)+($psize))|0);
 var $5=HEAP32[((11976)>>2)];
 var $cmp7=($add_ptr5>>>0)<($5>>>0);
 if($cmp7){label=53;break;}else{label=4;break;}
 case 4: 
 var $6=HEAP32[((11980)>>2)];
 var $cmp10=($4|0)==($6|0);
 if($cmp10){label=51;break;}else{label=5;break;}
 case 5: 
 var $shr=$3>>>3;
 var $cmp13=($3>>>0)<256;
 if($cmp13){label=6;break;}else{label=18;break;}
 case 6: 
 var $add_ptr5_sum29=(((8)-($3))|0);
 var $fd=(($0+$add_ptr5_sum29)|0);
 var $7=$fd;
 var $8=HEAP32[(($7)>>2)];
 var $add_ptr5_sum30=(((12)-($3))|0);
 var $bk=(($0+$add_ptr5_sum30)|0);
 var $9=$bk;
 var $10=HEAP32[(($9)>>2)];
 var $shl=$shr<<1;
 var $arrayidx=((12000+($shl<<2))|0);
 var $11=$arrayidx;
 var $cmp17=($8|0)==($11|0);
 if($cmp17){label=9;break;}else{label=7;break;}
 case 7: 
 var $12=$8;
 var $cmp20=($12>>>0)<($5>>>0);
 if($cmp20){label=17;break;}else{label=8;break;}
 case 8: 
 var $bk22=(($8+12)|0);
 var $13=HEAP32[(($bk22)>>2)];
 var $cmp23=($13|0)==($4|0);
 if($cmp23){label=9;break;}else{label=17;break;}
 case 9: 
 var $cmp28=($10|0)==($8|0);
 if($cmp28){label=10;break;}else{label=11;break;}
 case 10: 
 var $shl31=1<<$shr;
 var $neg=$shl31^-1;
 var $14=HEAP32[((11960)>>2)];
 var $and32=$14&$neg;
 HEAP32[((11960)>>2)]=$and32;
 var $p_addr_0=$4;var $psize_addr_0=$add6;label=54;break;
 case 11: 
 var $cmp36=($10|0)==($11|0);
 if($cmp36){label=12;break;}else{label=13;break;}
 case 12: 
 var $fd53_pre=(($10+8)|0);
 var $fd53_pre_phi=$fd53_pre;label=15;break;
 case 13: 
 var $15=$10;
 var $cmp40=($15>>>0)<($5>>>0);
 if($cmp40){label=16;break;}else{label=14;break;}
 case 14: 
 var $fd43=(($10+8)|0);
 var $16=HEAP32[(($fd43)>>2)];
 var $cmp44=($16|0)==($4|0);
 if($cmp44){var $fd53_pre_phi=$fd43;label=15;break;}else{label=16;break;}
 case 15: 
 var $fd53_pre_phi;
 var $bk52=(($8+12)|0);
 HEAP32[(($bk52)>>2)]=$10;
 HEAP32[(($fd53_pre_phi)>>2)]=$8;
 var $p_addr_0=$4;var $psize_addr_0=$add6;label=54;break;
 case 16: 
 _abort();
 throw "Reached an unreachable!";
 case 17: 
 _abort();
 throw "Reached an unreachable!";
 case 18: 
 var $17=$add_ptr5;
 var $add_ptr5_sum22=(((24)-($3))|0);
 var $parent=(($0+$add_ptr5_sum22)|0);
 var $18=$parent;
 var $19=HEAP32[(($18)>>2)];
 var $add_ptr5_sum23=(((12)-($3))|0);
 var $bk60=(($0+$add_ptr5_sum23)|0);
 var $20=$bk60;
 var $21=HEAP32[(($20)>>2)];
 var $cmp61=($21|0)==($17|0);
 if($cmp61){label=24;break;}else{label=19;break;}
 case 19: 
 var $add_ptr5_sum27=(((8)-($3))|0);
 var $fd65=(($0+$add_ptr5_sum27)|0);
 var $22=$fd65;
 var $23=HEAP32[(($22)>>2)];
 var $24=$23;
 var $cmp68=($24>>>0)<($5>>>0);
 if($cmp68){label=23;break;}else{label=20;break;}
 case 20: 
 var $bk70=(($23+12)|0);
 var $25=HEAP32[(($bk70)>>2)];
 var $cmp71=($25|0)==($17|0);
 if($cmp71){label=21;break;}else{label=23;break;}
 case 21: 
 var $fd74=(($21+8)|0);
 var $26=HEAP32[(($fd74)>>2)];
 var $cmp75=($26|0)==($17|0);
 if($cmp75){label=22;break;}else{label=23;break;}
 case 22: 
 HEAP32[(($bk70)>>2)]=$21;
 HEAP32[(($fd74)>>2)]=$23;
 var $R_1=$21;label=31;break;
 case 23: 
 _abort();
 throw "Reached an unreachable!";
 case 24: 
 var $add_ptr5_sum24=(((16)-($3))|0);
 var $child_sum=((($add_ptr5_sum24)+(4))|0);
 var $arrayidx86=(($0+$child_sum)|0);
 var $27=$arrayidx86;
 var $28=HEAP32[(($27)>>2)];
 var $cmp87=($28|0)==0;
 if($cmp87){label=25;break;}else{var $R_0=$28;var $RP_0=$27;label=26;break;}
 case 25: 
 var $child=(($0+$add_ptr5_sum24)|0);
 var $arrayidx90=$child;
 var $29=HEAP32[(($arrayidx90)>>2)];
 var $cmp91=($29|0)==0;
 if($cmp91){var $R_1=0;label=31;break;}else{var $R_0=$29;var $RP_0=$arrayidx90;label=26;break;}
 case 26: 
 var $RP_0;
 var $R_0;
 var $arrayidx95=(($R_0+20)|0);
 var $30=HEAP32[(($arrayidx95)>>2)];
 var $cmp96=($30|0)==0;
 if($cmp96){label=27;break;}else{var $R_0=$30;var $RP_0=$arrayidx95;label=26;break;}
 case 27: 
 var $arrayidx100=(($R_0+16)|0);
 var $31=HEAP32[(($arrayidx100)>>2)];
 var $cmp101=($31|0)==0;
 if($cmp101){label=28;break;}else{var $R_0=$31;var $RP_0=$arrayidx100;label=26;break;}
 case 28: 
 var $32=$RP_0;
 var $cmp106=($32>>>0)<($5>>>0);
 if($cmp106){label=30;break;}else{label=29;break;}
 case 29: 
 HEAP32[(($RP_0)>>2)]=0;
 var $R_1=$R_0;label=31;break;
 case 30: 
 _abort();
 throw "Reached an unreachable!";
 case 31: 
 var $R_1;
 var $cmp115=($19|0)==0;
 if($cmp115){var $p_addr_0=$4;var $psize_addr_0=$add6;label=54;break;}else{label=32;break;}
 case 32: 
 var $add_ptr5_sum25=(((28)-($3))|0);
 var $index=(($0+$add_ptr5_sum25)|0);
 var $33=$index;
 var $34=HEAP32[(($33)>>2)];
 var $arrayidx118=((12264+($34<<2))|0);
 var $35=HEAP32[(($arrayidx118)>>2)];
 var $cmp119=($17|0)==($35|0);
 if($cmp119){label=33;break;}else{label=35;break;}
 case 33: 
 HEAP32[(($arrayidx118)>>2)]=$R_1;
 var $cond36=($R_1|0)==0;
 if($cond36){label=34;break;}else{label=41;break;}
 case 34: 
 var $36=HEAP32[(($33)>>2)];
 var $shl126=1<<$36;
 var $neg127=$shl126^-1;
 var $37=HEAP32[((11964)>>2)];
 var $and128=$37&$neg127;
 HEAP32[((11964)>>2)]=$and128;
 var $p_addr_0=$4;var $psize_addr_0=$add6;label=54;break;
 case 35: 
 var $38=$19;
 var $39=HEAP32[((11976)>>2)];
 var $cmp132=($38>>>0)<($39>>>0);
 if($cmp132){label=39;break;}else{label=36;break;}
 case 36: 
 var $arrayidx138=(($19+16)|0);
 var $40=HEAP32[(($arrayidx138)>>2)];
 var $cmp139=($40|0)==($17|0);
 if($cmp139){label=37;break;}else{label=38;break;}
 case 37: 
 HEAP32[(($arrayidx138)>>2)]=$R_1;
 label=40;break;
 case 38: 
 var $arrayidx146=(($19+20)|0);
 HEAP32[(($arrayidx146)>>2)]=$R_1;
 label=40;break;
 case 39: 
 _abort();
 throw "Reached an unreachable!";
 case 40: 
 var $cmp151=($R_1|0)==0;
 if($cmp151){var $p_addr_0=$4;var $psize_addr_0=$add6;label=54;break;}else{label=41;break;}
 case 41: 
 var $41=$R_1;
 var $42=HEAP32[((11976)>>2)];
 var $cmp155=($41>>>0)<($42>>>0);
 if($cmp155){label=50;break;}else{label=42;break;}
 case 42: 
 var $parent160=(($R_1+24)|0);
 HEAP32[(($parent160)>>2)]=$19;
 var $add_ptr5_sum26=(((16)-($3))|0);
 var $child161=(($0+$add_ptr5_sum26)|0);
 var $arrayidx162=$child161;
 var $43=HEAP32[(($arrayidx162)>>2)];
 var $cmp163=($43|0)==0;
 if($cmp163){label=46;break;}else{label=43;break;}
 case 43: 
 var $44=$43;
 var $45=HEAP32[((11976)>>2)];
 var $cmp167=($44>>>0)<($45>>>0);
 if($cmp167){label=45;break;}else{label=44;break;}
 case 44: 
 var $arrayidx173=(($R_1+16)|0);
 HEAP32[(($arrayidx173)>>2)]=$43;
 var $parent174=(($43+24)|0);
 HEAP32[(($parent174)>>2)]=$R_1;
 label=46;break;
 case 45: 
 _abort();
 throw "Reached an unreachable!";
 case 46: 
 var $child161_sum=((($add_ptr5_sum26)+(4))|0);
 var $arrayidx179=(($0+$child161_sum)|0);
 var $46=$arrayidx179;
 var $47=HEAP32[(($46)>>2)];
 var $cmp180=($47|0)==0;
 if($cmp180){var $p_addr_0=$4;var $psize_addr_0=$add6;label=54;break;}else{label=47;break;}
 case 47: 
 var $48=$47;
 var $49=HEAP32[((11976)>>2)];
 var $cmp184=($48>>>0)<($49>>>0);
 if($cmp184){label=49;break;}else{label=48;break;}
 case 48: 
 var $arrayidx190=(($R_1+20)|0);
 HEAP32[(($arrayidx190)>>2)]=$47;
 var $parent191=(($47+24)|0);
 HEAP32[(($parent191)>>2)]=$R_1;
 var $p_addr_0=$4;var $psize_addr_0=$add6;label=54;break;
 case 49: 
 _abort();
 throw "Reached an unreachable!";
 case 50: 
 _abort();
 throw "Reached an unreachable!";
 case 51: 
 var $add_ptr_sum=((($psize)+(4))|0);
 var $head201=(($0+$add_ptr_sum)|0);
 var $50=$head201;
 var $51=HEAP32[(($50)>>2)];
 var $and202=$51&3;
 var $cmp203=($and202|0)==3;
 if($cmp203){label=52;break;}else{var $p_addr_0=$4;var $psize_addr_0=$add6;label=54;break;}
 case 52: 
 HEAP32[((11968)>>2)]=$add6;
 var $52=HEAP32[(($50)>>2)];
 var $and207=$52&-2;
 HEAP32[(($50)>>2)]=$and207;
 var $or=$add6|1;
 var $add_ptr5_sum=(((4)-($3))|0);
 var $head208=(($0+$add_ptr5_sum)|0);
 var $53=$head208;
 HEAP32[(($53)>>2)]=$or;
 var $prev_foot210=$add_ptr;
 HEAP32[(($prev_foot210)>>2)]=$add6;
 label=134;break;
 case 53: 
 _abort();
 throw "Reached an unreachable!";
 case 54: 
 var $psize_addr_0;
 var $p_addr_0;
 var $54=HEAP32[((11976)>>2)];
 var $cmp217=($add_ptr>>>0)<($54>>>0);
 if($cmp217){label=133;break;}else{label=55;break;}
 case 55: 
 var $add_ptr_sum1=((($psize)+(4))|0);
 var $head222=(($0+$add_ptr_sum1)|0);
 var $55=$head222;
 var $56=HEAP32[(($55)>>2)];
 var $and223=$56&2;
 var $tobool224=($and223|0)==0;
 if($tobool224){label=56;break;}else{label=109;break;}
 case 56: 
 var $57=HEAP32[((11984)>>2)];
 var $cmp226=($1|0)==($57|0);
 if($cmp226){label=57;break;}else{label=59;break;}
 case 57: 
 var $58=HEAP32[((11972)>>2)];
 var $add229=((($58)+($psize_addr_0))|0);
 HEAP32[((11972)>>2)]=$add229;
 HEAP32[((11984)>>2)]=$p_addr_0;
 var $or231=$add229|1;
 var $head232=(($p_addr_0+4)|0);
 HEAP32[(($head232)>>2)]=$or231;
 var $59=HEAP32[((11980)>>2)];
 var $cmp234=($p_addr_0|0)==($59|0);
 if($cmp234){label=58;break;}else{label=134;break;}
 case 58: 
 HEAP32[((11980)>>2)]=0;
 HEAP32[((11968)>>2)]=0;
 label=134;break;
 case 59: 
 var $60=HEAP32[((11980)>>2)];
 var $cmp242=($1|0)==($60|0);
 if($cmp242){label=60;break;}else{label=61;break;}
 case 60: 
 var $61=HEAP32[((11968)>>2)];
 var $add246=((($61)+($psize_addr_0))|0);
 HEAP32[((11968)>>2)]=$add246;
 HEAP32[((11980)>>2)]=$p_addr_0;
 var $or248=$add246|1;
 var $head249=(($p_addr_0+4)|0);
 HEAP32[(($head249)>>2)]=$or248;
 var $62=$p_addr_0;
 var $add_ptr250=(($62+$add246)|0);
 var $prev_foot251=$add_ptr250;
 HEAP32[(($prev_foot251)>>2)]=$add246;
 label=134;break;
 case 61: 
 var $and254=$56&-8;
 var $add255=((($and254)+($psize_addr_0))|0);
 var $shr256=$56>>>3;
 var $cmp257=($56>>>0)<256;
 if($cmp257){label=62;break;}else{label=74;break;}
 case 62: 
 var $add_ptr_sum17=((($psize)+(8))|0);
 var $fd261=(($0+$add_ptr_sum17)|0);
 var $63=$fd261;
 var $64=HEAP32[(($63)>>2)];
 var $add_ptr_sum18=((($psize)+(12))|0);
 var $bk263=(($0+$add_ptr_sum18)|0);
 var $65=$bk263;
 var $66=HEAP32[(($65)>>2)];
 var $shl266=$shr256<<1;
 var $arrayidx268=((12000+($shl266<<2))|0);
 var $67=$arrayidx268;
 var $cmp269=($64|0)==($67|0);
 if($cmp269){label=65;break;}else{label=63;break;}
 case 63: 
 var $68=$64;
 var $cmp273=($68>>>0)<($54>>>0);
 if($cmp273){label=73;break;}else{label=64;break;}
 case 64: 
 var $bk276=(($64+12)|0);
 var $69=HEAP32[(($bk276)>>2)];
 var $cmp277=($69|0)==($1|0);
 if($cmp277){label=65;break;}else{label=73;break;}
 case 65: 
 var $cmp286=($66|0)==($64|0);
 if($cmp286){label=66;break;}else{label=67;break;}
 case 66: 
 var $shl289=1<<$shr256;
 var $neg290=$shl289^-1;
 var $70=HEAP32[((11960)>>2)];
 var $and292=$70&$neg290;
 HEAP32[((11960)>>2)]=$and292;
 label=107;break;
 case 67: 
 var $cmp297=($66|0)==($67|0);
 if($cmp297){label=68;break;}else{label=69;break;}
 case 68: 
 var $fd315_pre=(($66+8)|0);
 var $fd315_pre_phi=$fd315_pre;label=71;break;
 case 69: 
 var $71=$66;
 var $cmp301=($71>>>0)<($54>>>0);
 if($cmp301){label=72;break;}else{label=70;break;}
 case 70: 
 var $fd304=(($66+8)|0);
 var $72=HEAP32[(($fd304)>>2)];
 var $cmp305=($72|0)==($1|0);
 if($cmp305){var $fd315_pre_phi=$fd304;label=71;break;}else{label=72;break;}
 case 71: 
 var $fd315_pre_phi;
 var $bk314=(($64+12)|0);
 HEAP32[(($bk314)>>2)]=$66;
 HEAP32[(($fd315_pre_phi)>>2)]=$64;
 label=107;break;
 case 72: 
 _abort();
 throw "Reached an unreachable!";
 case 73: 
 _abort();
 throw "Reached an unreachable!";
 case 74: 
 var $73=$add_ptr;
 var $add_ptr_sum2=((($psize)+(24))|0);
 var $parent324=(($0+$add_ptr_sum2)|0);
 var $74=$parent324;
 var $75=HEAP32[(($74)>>2)];
 var $add_ptr_sum3=((($psize)+(12))|0);
 var $bk326=(($0+$add_ptr_sum3)|0);
 var $76=$bk326;
 var $77=HEAP32[(($76)>>2)];
 var $cmp327=($77|0)==($73|0);
 if($cmp327){label=80;break;}else{label=75;break;}
 case 75: 
 var $add_ptr_sum15=((($psize)+(8))|0);
 var $fd331=(($0+$add_ptr_sum15)|0);
 var $78=$fd331;
 var $79=HEAP32[(($78)>>2)];
 var $80=$79;
 var $cmp334=($80>>>0)<($54>>>0);
 if($cmp334){label=79;break;}else{label=76;break;}
 case 76: 
 var $bk337=(($79+12)|0);
 var $81=HEAP32[(($bk337)>>2)];
 var $cmp338=($81|0)==($73|0);
 if($cmp338){label=77;break;}else{label=79;break;}
 case 77: 
 var $fd341=(($77+8)|0);
 var $82=HEAP32[(($fd341)>>2)];
 var $cmp342=($82|0)==($73|0);
 if($cmp342){label=78;break;}else{label=79;break;}
 case 78: 
 HEAP32[(($bk337)>>2)]=$77;
 HEAP32[(($fd341)>>2)]=$79;
 var $R325_1=$77;label=87;break;
 case 79: 
 _abort();
 throw "Reached an unreachable!";
 case 80: 
 var $child355_sum=((($psize)+(20))|0);
 var $arrayidx356=(($0+$child355_sum)|0);
 var $83=$arrayidx356;
 var $84=HEAP32[(($83)>>2)];
 var $cmp357=($84|0)==0;
 if($cmp357){label=81;break;}else{var $R325_0=$84;var $RP354_0=$83;label=82;break;}
 case 81: 
 var $add_ptr_sum4=((($psize)+(16))|0);
 var $child355=(($0+$add_ptr_sum4)|0);
 var $arrayidx361=$child355;
 var $85=HEAP32[(($arrayidx361)>>2)];
 var $cmp362=($85|0)==0;
 if($cmp362){var $R325_1=0;label=87;break;}else{var $R325_0=$85;var $RP354_0=$arrayidx361;label=82;break;}
 case 82: 
 var $RP354_0;
 var $R325_0;
 var $arrayidx368=(($R325_0+20)|0);
 var $86=HEAP32[(($arrayidx368)>>2)];
 var $cmp369=($86|0)==0;
 if($cmp369){label=83;break;}else{var $R325_0=$86;var $RP354_0=$arrayidx368;label=82;break;}
 case 83: 
 var $arrayidx373=(($R325_0+16)|0);
 var $87=HEAP32[(($arrayidx373)>>2)];
 var $cmp374=($87|0)==0;
 if($cmp374){label=84;break;}else{var $R325_0=$87;var $RP354_0=$arrayidx373;label=82;break;}
 case 84: 
 var $88=$RP354_0;
 var $cmp381=($88>>>0)<($54>>>0);
 if($cmp381){label=86;break;}else{label=85;break;}
 case 85: 
 HEAP32[(($RP354_0)>>2)]=0;
 var $R325_1=$R325_0;label=87;break;
 case 86: 
 _abort();
 throw "Reached an unreachable!";
 case 87: 
 var $R325_1;
 var $cmp390=($75|0)==0;
 if($cmp390){label=107;break;}else{label=88;break;}
 case 88: 
 var $add_ptr_sum13=((($psize)+(28))|0);
 var $index394=(($0+$add_ptr_sum13)|0);
 var $89=$index394;
 var $90=HEAP32[(($89)>>2)];
 var $arrayidx396=((12264+($90<<2))|0);
 var $91=HEAP32[(($arrayidx396)>>2)];
 var $cmp397=($73|0)==($91|0);
 if($cmp397){label=89;break;}else{label=91;break;}
 case 89: 
 HEAP32[(($arrayidx396)>>2)]=$R325_1;
 var $cond37=($R325_1|0)==0;
 if($cond37){label=90;break;}else{label=97;break;}
 case 90: 
 var $92=HEAP32[(($89)>>2)];
 var $shl404=1<<$92;
 var $neg405=$shl404^-1;
 var $93=HEAP32[((11964)>>2)];
 var $and407=$93&$neg405;
 HEAP32[((11964)>>2)]=$and407;
 label=107;break;
 case 91: 
 var $94=$75;
 var $95=HEAP32[((11976)>>2)];
 var $cmp411=($94>>>0)<($95>>>0);
 if($cmp411){label=95;break;}else{label=92;break;}
 case 92: 
 var $arrayidx417=(($75+16)|0);
 var $96=HEAP32[(($arrayidx417)>>2)];
 var $cmp418=($96|0)==($73|0);
 if($cmp418){label=93;break;}else{label=94;break;}
 case 93: 
 HEAP32[(($arrayidx417)>>2)]=$R325_1;
 label=96;break;
 case 94: 
 var $arrayidx425=(($75+20)|0);
 HEAP32[(($arrayidx425)>>2)]=$R325_1;
 label=96;break;
 case 95: 
 _abort();
 throw "Reached an unreachable!";
 case 96: 
 var $cmp430=($R325_1|0)==0;
 if($cmp430){label=107;break;}else{label=97;break;}
 case 97: 
 var $97=$R325_1;
 var $98=HEAP32[((11976)>>2)];
 var $cmp434=($97>>>0)<($98>>>0);
 if($cmp434){label=106;break;}else{label=98;break;}
 case 98: 
 var $parent441=(($R325_1+24)|0);
 HEAP32[(($parent441)>>2)]=$75;
 var $add_ptr_sum14=((($psize)+(16))|0);
 var $child442=(($0+$add_ptr_sum14)|0);
 var $arrayidx443=$child442;
 var $99=HEAP32[(($arrayidx443)>>2)];
 var $cmp444=($99|0)==0;
 if($cmp444){label=102;break;}else{label=99;break;}
 case 99: 
 var $100=$99;
 var $101=HEAP32[((11976)>>2)];
 var $cmp448=($100>>>0)<($101>>>0);
 if($cmp448){label=101;break;}else{label=100;break;}
 case 100: 
 var $arrayidx454=(($R325_1+16)|0);
 HEAP32[(($arrayidx454)>>2)]=$99;
 var $parent455=(($99+24)|0);
 HEAP32[(($parent455)>>2)]=$R325_1;
 label=102;break;
 case 101: 
 _abort();
 throw "Reached an unreachable!";
 case 102: 
 var $child442_sum=((($psize)+(20))|0);
 var $arrayidx460=(($0+$child442_sum)|0);
 var $102=$arrayidx460;
 var $103=HEAP32[(($102)>>2)];
 var $cmp461=($103|0)==0;
 if($cmp461){label=107;break;}else{label=103;break;}
 case 103: 
 var $104=$103;
 var $105=HEAP32[((11976)>>2)];
 var $cmp465=($104>>>0)<($105>>>0);
 if($cmp465){label=105;break;}else{label=104;break;}
 case 104: 
 var $arrayidx471=(($R325_1+20)|0);
 HEAP32[(($arrayidx471)>>2)]=$103;
 var $parent472=(($103+24)|0);
 HEAP32[(($parent472)>>2)]=$R325_1;
 label=107;break;
 case 105: 
 _abort();
 throw "Reached an unreachable!";
 case 106: 
 _abort();
 throw "Reached an unreachable!";
 case 107: 
 var $or481=$add255|1;
 var $head482=(($p_addr_0+4)|0);
 HEAP32[(($head482)>>2)]=$or481;
 var $106=$p_addr_0;
 var $add_ptr483=(($106+$add255)|0);
 var $prev_foot484=$add_ptr483;
 HEAP32[(($prev_foot484)>>2)]=$add255;
 var $107=HEAP32[((11980)>>2)];
 var $cmp486=($p_addr_0|0)==($107|0);
 if($cmp486){label=108;break;}else{var $psize_addr_1=$add255;label=110;break;}
 case 108: 
 HEAP32[((11968)>>2)]=$add255;
 label=134;break;
 case 109: 
 var $and495=$56&-2;
 HEAP32[(($55)>>2)]=$and495;
 var $or496=$psize_addr_0|1;
 var $head497=(($p_addr_0+4)|0);
 HEAP32[(($head497)>>2)]=$or496;
 var $108=$p_addr_0;
 var $add_ptr498=(($108+$psize_addr_0)|0);
 var $prev_foot499=$add_ptr498;
 HEAP32[(($prev_foot499)>>2)]=$psize_addr_0;
 var $psize_addr_1=$psize_addr_0;label=110;break;
 case 110: 
 var $psize_addr_1;
 var $shr501=$psize_addr_1>>>3;
 var $cmp502=($psize_addr_1>>>0)<256;
 if($cmp502){label=111;break;}else{label=116;break;}
 case 111: 
 var $shl508=$shr501<<1;
 var $arrayidx510=((12000+($shl508<<2))|0);
 var $109=$arrayidx510;
 var $110=HEAP32[((11960)>>2)];
 var $shl513=1<<$shr501;
 var $and514=$110&$shl513;
 var $tobool515=($and514|0)==0;
 if($tobool515){label=112;break;}else{label=113;break;}
 case 112: 
 var $or519=$110|$shl513;
 HEAP32[((11960)>>2)]=$or519;
 var $arrayidx510_sum_pre=((($shl508)+(2))|0);
 var $_pre=((12000+($arrayidx510_sum_pre<<2))|0);
 var $F511_0=$109;var $_pre_phi=$_pre;label=115;break;
 case 113: 
 var $arrayidx510_sum12=((($shl508)+(2))|0);
 var $111=((12000+($arrayidx510_sum12<<2))|0);
 var $112=HEAP32[(($111)>>2)];
 var $113=$112;
 var $114=HEAP32[((11976)>>2)];
 var $cmp523=($113>>>0)<($114>>>0);
 if($cmp523){label=114;break;}else{var $F511_0=$112;var $_pre_phi=$111;label=115;break;}
 case 114: 
 _abort();
 throw "Reached an unreachable!";
 case 115: 
 var $_pre_phi;
 var $F511_0;
 HEAP32[(($_pre_phi)>>2)]=$p_addr_0;
 var $bk533=(($F511_0+12)|0);
 HEAP32[(($bk533)>>2)]=$p_addr_0;
 var $fd534=(($p_addr_0+8)|0);
 HEAP32[(($fd534)>>2)]=$F511_0;
 var $bk535=(($p_addr_0+12)|0);
 HEAP32[(($bk535)>>2)]=$109;
 label=134;break;
 case 116: 
 var $115=$p_addr_0;
 var $shr540=$psize_addr_1>>>8;
 var $cmp541=($shr540|0)==0;
 if($cmp541){var $I539_0=0;label=119;break;}else{label=117;break;}
 case 117: 
 var $cmp545=($psize_addr_1>>>0)>16777215;
 if($cmp545){var $I539_0=31;label=119;break;}else{label=118;break;}
 case 118: 
 var $sub=((($shr540)+(1048320))|0);
 var $shr549=$sub>>>16;
 var $and550=$shr549&8;
 var $shl551=$shr540<<$and550;
 var $sub552=((($shl551)+(520192))|0);
 var $shr553=$sub552>>>16;
 var $and554=$shr553&4;
 var $add555=$and554|$and550;
 var $shl556=$shl551<<$and554;
 var $sub557=((($shl556)+(245760))|0);
 var $shr558=$sub557>>>16;
 var $and559=$shr558&2;
 var $add560=$add555|$and559;
 var $sub561=(((14)-($add560))|0);
 var $shl562=$shl556<<$and559;
 var $shr563=$shl562>>>15;
 var $add564=((($sub561)+($shr563))|0);
 var $shl565=$add564<<1;
 var $add566=((($add564)+(7))|0);
 var $shr567=$psize_addr_1>>>($add566>>>0);
 var $and568=$shr567&1;
 var $add569=$and568|$shl565;
 var $I539_0=$add569;label=119;break;
 case 119: 
 var $I539_0;
 var $arrayidx573=((12264+($I539_0<<2))|0);
 var $index574=(($p_addr_0+28)|0);
 var $I539_0_c=$I539_0;
 HEAP32[(($index574)>>2)]=$I539_0_c;
 var $arrayidx576=(($p_addr_0+20)|0);
 HEAP32[(($arrayidx576)>>2)]=0;
 var $116=(($p_addr_0+16)|0);
 HEAP32[(($116)>>2)]=0;
 var $117=HEAP32[((11964)>>2)];
 var $shl580=1<<$I539_0;
 var $and581=$117&$shl580;
 var $tobool582=($and581|0)==0;
 if($tobool582){label=120;break;}else{label=121;break;}
 case 120: 
 var $or586=$117|$shl580;
 HEAP32[((11964)>>2)]=$or586;
 HEAP32[(($arrayidx573)>>2)]=$115;
 var $parent587=(($p_addr_0+24)|0);
 var $_c=$arrayidx573;
 HEAP32[(($parent587)>>2)]=$_c;
 var $bk588=(($p_addr_0+12)|0);
 HEAP32[(($bk588)>>2)]=$p_addr_0;
 var $fd589=(($p_addr_0+8)|0);
 HEAP32[(($fd589)>>2)]=$p_addr_0;
 label=134;break;
 case 121: 
 var $118=HEAP32[(($arrayidx573)>>2)];
 var $cmp592=($I539_0|0)==31;
 if($cmp592){var $cond=0;label=123;break;}else{label=122;break;}
 case 122: 
 var $shr594=$I539_0>>>1;
 var $sub597=(((25)-($shr594))|0);
 var $cond=$sub597;label=123;break;
 case 123: 
 var $cond;
 var $shl598=$psize_addr_1<<$cond;
 var $K591_0=$shl598;var $T_0=$118;label=124;break;
 case 124: 
 var $T_0;
 var $K591_0;
 var $head599=(($T_0+4)|0);
 var $119=HEAP32[(($head599)>>2)];
 var $and600=$119&-8;
 var $cmp601=($and600|0)==($psize_addr_1|0);
 if($cmp601){label=129;break;}else{label=125;break;}
 case 125: 
 var $shr604=$K591_0>>>31;
 var $arrayidx607=(($T_0+16+($shr604<<2))|0);
 var $120=HEAP32[(($arrayidx607)>>2)];
 var $cmp609=($120|0)==0;
 var $shl608=$K591_0<<1;
 if($cmp609){label=126;break;}else{var $K591_0=$shl608;var $T_0=$120;label=124;break;}
 case 126: 
 var $121=$arrayidx607;
 var $122=HEAP32[((11976)>>2)];
 var $cmp614=($121>>>0)<($122>>>0);
 if($cmp614){label=128;break;}else{label=127;break;}
 case 127: 
 HEAP32[(($arrayidx607)>>2)]=$115;
 var $parent619=(($p_addr_0+24)|0);
 var $T_0_c9=$T_0;
 HEAP32[(($parent619)>>2)]=$T_0_c9;
 var $bk620=(($p_addr_0+12)|0);
 HEAP32[(($bk620)>>2)]=$p_addr_0;
 var $fd621=(($p_addr_0+8)|0);
 HEAP32[(($fd621)>>2)]=$p_addr_0;
 label=134;break;
 case 128: 
 _abort();
 throw "Reached an unreachable!";
 case 129: 
 var $fd626=(($T_0+8)|0);
 var $123=HEAP32[(($fd626)>>2)];
 var $124=$T_0;
 var $125=HEAP32[((11976)>>2)];
 var $cmp628=($124>>>0)<($125>>>0);
 if($cmp628){label=132;break;}else{label=130;break;}
 case 130: 
 var $126=$123;
 var $cmp632=($126>>>0)<($125>>>0);
 if($cmp632){label=132;break;}else{label=131;break;}
 case 131: 
 var $bk639=(($123+12)|0);
 HEAP32[(($bk639)>>2)]=$115;
 HEAP32[(($fd626)>>2)]=$115;
 var $fd641=(($p_addr_0+8)|0);
 var $_c8=$123;
 HEAP32[(($fd641)>>2)]=$_c8;
 var $bk642=(($p_addr_0+12)|0);
 var $T_0_c=$T_0;
 HEAP32[(($bk642)>>2)]=$T_0_c;
 var $parent643=(($p_addr_0+24)|0);
 HEAP32[(($parent643)>>2)]=0;
 label=134;break;
 case 132: 
 _abort();
 throw "Reached an unreachable!";
 case 133: 
 _abort();
 throw "Reached an unreachable!";
 case 134: 
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __Znwj($size){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $cmp=($size|0)==0;
 var $_size=($cmp?1:$size);
 label=2;break;
 case 2: 
 var $call=_malloc($_size);
 var $cmp1=($call|0)==0;
 if($cmp1){label=3;break;}else{label=10;break;}
 case 3: 
 var $0=(tempValue=HEAP32[((15872)>>2)],HEAP32[((15872)>>2)]=tempValue+0,tempValue);
 var $tobool=($0|0)==0;
 if($tobool){label=9;break;}else{label=4;break;}
 case 4: 
 var $1=$0;
 (function() { try { __THREW__ = 0; return FUNCTION_TABLE[$1]() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=5;break; }
 case 5: 
 var $lpad_loopexit4$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_loopexit4$1 = tempRet0;
 var $lpad_phi$1=$lpad_loopexit4$1;var $lpad_phi$0=$lpad_loopexit4$0;label=7;break;
 case 6: 
 var $lpad_nonloopexit5$0 = ___cxa_find_matching_catch(-1, -1); var $lpad_nonloopexit5$1 = tempRet0;
 var $lpad_phi$1=$lpad_nonloopexit5$1;var $lpad_phi$0=$lpad_nonloopexit5$0;label=7;break;
 case 7: 
 var $lpad_phi$0;
 var $lpad_phi$1;
 var $2=$lpad_phi$1;
 var $ehspec_fails=($2|0)<0;
 if($ehspec_fails){label=8;break;}else{label=11;break;}
 case 8: 
 var $3=$lpad_phi$0;
 ___cxa_call_unexpected($3);
 throw "Reached an unreachable!";
 case 9: 
 var $exception=___cxa_allocate_exception(4);
 var $4=$exception;
 HEAP32[(($4)>>2)]=4168;
 (function() { try { __THREW__ = 0; return ___cxa_throw($exception,10248,(74)) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=12;break; } else { label=6;break; }
 case 10: 
 return $call;
 case 11: 
 ___resumeException($lpad_phi$0)
 case 12: 
 throw "Reached an unreachable!";
  default: assert(0, "bad label: " + label);
 }
}
function __Znaj($size){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $call=(function() { try { __THREW__ = 0; return __Znwj($size) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = 1; return null } })();if (!__THREW__) { label=2;break; } else { label=3;break; }
 case 2: 
 return $call;
 case 3: 
 var $0$0 = ___cxa_find_matching_catch(-1, -1); var $0$1 = tempRet0;
 var $1=$0$1;
 var $ehspec_fails=($1|0)<0;
 if($ehspec_fails){label=4;break;}else{label=5;break;}
 case 4: 
 var $2=$0$0;
 ___cxa_call_unexpected($2);
 throw "Reached an unreachable!";
 case 5: 
 ___resumeException($0$0)
  default: assert(0, "bad label: " + label);
 }
}
function __ZdlPv($ptr){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $tobool=($ptr|0)==0;
 if($tobool){label=3;break;}else{label=2;break;}
 case 2: 
 _free($ptr);
 label=3;break;
 case 3: 
 return;
  default: assert(0, "bad label: " + label);
 }
}
function __ZdaPv($ptr){
 var label=0;
 __ZdlPv($ptr);
 return;
}
function __ZNSt9bad_allocD0Ev($this){
 var label=0;
 var $0=$this;
 __ZdlPv($0);
 return;
}
function __ZNSt9bad_allocD2Ev($this){
 var label=0;
 return;
}
function __ZNKSt9bad_alloc4whatEv($this){
 var label=0;
 return 1672;
}
function __ZSt17__throw_bad_allocv(){
 var label=0;
 var $exception=___cxa_allocate_exception(4);
 var $0=$exception;
 HEAP32[(($0)>>2)]=4168;
 ___cxa_throw($exception,10248,(74));
 throw "Reached an unreachable!";
}
function _strtod($string,$endPtr){
 var label=0;
 label = 1; 
 while(1)switch(label){
 case 1: 
 var $p_0=$string;label=2;break;
 case 2: 
 var $p_0;
 var $0=HEAP8[($p_0)];
 var $conv=(($0<<24)>>24);
 var $call=_isspace($conv);
 var $tobool=($call|0)==0;
 var $add_ptr=(($p_0+1)|0);
 if($tobool){label=3;break;}else{var $p_0=$add_ptr;label=2;break;}
 case 3: 
 var $1=HEAP8[($p_0)];
 if((($1<<24)>>24)==45){ label=4;break;}else if((($1<<24)>>24)==43){ label=5;break;}else{var $p_2=$p_0;var $sign_0=0;label=6;break;}
 case 4: 
 var $p_2=$add_ptr;var $sign_0=1;label=6;break;
 case 5: 
 var $p_2=$add_ptr;var $sign_0=0;label=6;break;
 case 6: 
 var $sign_0;
 var $p_2;
 var $decPt_0=-1;var $mantSize_0=0;var $p_3=$p_2;label=7;break;
 case 7: 
 var $p_3;
 var $mantSize_0;
 var $decPt_0;
 var $2=HEAP8[($p_3)];
 var $conv10=(($2<<24)>>24);
 var $isdigittmp=((($conv10)-(48))|0);
 var $isdigit=($isdigittmp>>>0)<10;
 if($isdigit){var $decPt_1=$decPt_0;label=9;break;}else{label=8;break;}
 case 8: 
 var $cmp14=(($2<<24)>>24)!=46;
 var $cmp16=($decPt_0|0)>-1;
 var $or_cond=$cmp14|$cmp16;
 if($or_cond){label=10;break;}else{var $decPt_1=$mantSize_0;label=9;break;}
 case 9: 
 var $decPt_1;
 var $add_ptr21=(($p_3+1)|0);
 var $add=((($mantSize_0)+(1))|0);
 var $decPt_0=$decPt_1;var $mantSize_0=$add;var $p_3=$add_ptr21;label=7;break;
 case 10: 
 var $idx_neg=(((-$mantSize_0))|0);
 var $add_ptr22=(($p_3+$idx_neg)|0);
 var $cmp23=($decPt_0|0)<0;
 var $not_cmp23=$cmp23^1;
 var $sub=(($not_cmp23<<31)>>31);
 var $mantSize_1=((($sub)+($mantSize_0))|0);
 var $decPt_2=($cmp23?$mantSize_0:$decPt_0);
 var $cmp28=($mantSize_1|0)>18;
 var $3=(((-$mantSize_1))|0);
 var $fracExp_0_p=($cmp28?-18:$3);
 var $fracExp_0=((($fracExp_0_p)+($decPt_2))|0);
 var $mantSize_2=($cmp28?18:$mantSize_1);
 var $cmp35=($mantSize_2|0)==0;
 if($cmp35){var $p_11=$string;var $fraction_0=0;label=37;break;}else{label=11;break;}
 case 11: 
 var $cmp4078=($mantSize_2|0)>9;
 if($cmp4078){var $p_479=$add_ptr22;var $mantSize_380=$mantSize_2;var $frac1_081=0;label=15;break;}else{label=13;break;}
 case 12: 
 var $phitmp=($add51|0);
 var $phitmp85=($phitmp)*(1000000000);
 var $frac1_0_lcssa89=$phitmp85;var $mantSize_3_lcssa90=9;var $p_4_lcssa91=$p_5;label=14;break;
 case 13: 
 var $cmp5673=($mantSize_2|0)>0;
 if($cmp5673){var $frac1_0_lcssa89=0;var $mantSize_3_lcssa90=$mantSize_2;var $p_4_lcssa91=$add_ptr22;label=14;break;}else{var $frac2_0_lcssa=0;var $frac1_0_lcssa88=0;label=22;break;}
 case 14: 
 var $p_4_lcssa91;
 var $mantSize_3_lcssa90;
 var $frac1_0_lcssa89;
 var $p_674=$p_4_lcssa91;var $mantSize_475=$mantSize_3_lcssa90;var $frac2_076=0;label=18;break;
 case 15: 
 var $frac1_081;
 var $mantSize_380;
 var $p_479;
 var $4=HEAP8[($p_479)];
 var $add_ptr43=(($p_479+1)|0);
 var $cmp44=(($4<<24)>>24)==46;
 if($cmp44){label=16;break;}else{var $c_0_in=$4;var $p_5=$add_ptr43;label=17;break;}
 case 16: 
 var $5=HEAP8[($add_ptr43)];
 var $add_ptr48=(($p_479+2)|0);
 var $c_0_in=$5;var $p_5=$add_ptr48;label=17;break;
 case 17: 
 var $p_5;
 var $c_0_in;
 var $c_0=(($c_0_in<<24)>>24);
 var $mul=((($frac1_081)*(10))&-1);
 var $sub50=((($mul)-(48))|0);
 var $add51=((($sub50)+($c_0))|0);
 var $sub53=((($mantSize_380)-(1))|0);
 var $cmp40=($sub53|0)>9;
 if($cmp40){var $p_479=$p_5;var $mantSize_380=$sub53;var $frac1_081=$add51;label=15;break;}else{label=12;break;}
 case 18: 
 var $frac2_076;
 var $mantSize_475;
 var $p_674;
 var $6=HEAP8[($p_674)];
 var $add_ptr60=(($p_674+1)|0);
 var $cmp61=(($6<<24)>>24)==46;
 if($cmp61){label=19;break;}else{var $c_1_in=$6;var $p_7=$add_ptr60;label=20;break;}
 case 19: 
 var $7=HEAP8[($add_ptr60)];
 var $add_ptr65=(($p_674+2)|0);
 var $c_1_in=$7;var $p_7=$add_ptr65;label=20;break;
 case 20: 
 var $p_7;
 var $c_1_in;
 var $c_1=(($c_1_in<<24)>>24);
 var $mul67=((($frac2_076)*(10))&-1);
 var $sub68=((($mul67)-(48))|0);
 var $add69=((($sub68)+($c_1))|0);
 var $sub71=((($mantSize_475)-(1))|0);
 var $cmp56=($sub71|0)>0;
 if($cmp56){var $p_674=$p_7;var $mantSize_475=$sub71;var $frac2_076=$add69;label=18;break;}else{label=21;break;}
 case 21: 
 var $phitmp86=($add69|0);
 var $frac2_0_lcssa=$phitmp86;var $frac1_0_lcssa88=$frac1_0_lcssa89;label=22;break;
 case 22: 
 var $frac1_0_lcssa88;
 var $frac2_0_lcssa;
 var $add76=($frac1_0_lcssa88)+($frac2_0_lcssa);
 if((($2<<24)>>24)==69|(($2<<24)>>24)==101){ label=23;break;}else{var $exp_1=0;var $p_10=$p_3;var $expSign_1=0;label=28;break;}
 case 23: 
 var $add_ptr86=(($p_3+1)|0);
 var $8=HEAP8[($add_ptr86)];
 if((($8<<24)>>24)==45){ label=24;break;}else if((($8<<24)>>24)==43){ label=25;break;}else{var $p_9_ph=$add_ptr86;var $expSign_0_ph=0;label=26;break;}
 case 24: 
 var $add_ptr91=(($p_3+2)|0);
 var $p_9_ph=$add_ptr91;var $expSign_0_ph=1;label=26;break;
 case 25: 
 var $add_ptr97=(($p_3+2)|0);
 var $p_9_ph=$add_ptr97;var $expSign_0_ph=0;label=26;break;
 case 26: 
 var $expSign_0_ph;
 var $p_9_ph;
 var $9=HEAP8[($p_9_ph)];
 var $conv10166=(($9<<24)>>24);
 var $isdigittmp6067=((($conv10166)-(48))|0);
 var $isdigit6168=($isdigittmp6067>>>0)<10;
 if($isdigit6168){var $p_969=$p_9_ph;var $exp_070=0;var $10=$9;label=27;break;}else{var $exp_1=0;var $p_10=$p_9_ph;var $expSign_1=$expSign_0_ph;label=28;break;}
 case 27: 
 var $10;
 var $exp_070;
 var $p_969;
 var $mul105=((($exp_070)*(10))&-1);
 var $conv106=(($10<<24)>>24);
 var $sub107=((($mul105)-(48))|0);
 var $add108=((($sub107)+($conv106))|0);
 var $add_ptr109=(($p_969+1)|0);
 var $11=HEAP8[($add_ptr109)];
 var $conv101=(($11<<24)>>24);
 var $isdigittmp60=((($conv101)-(48))|0);
 var $isdigit61=($isdigittmp60>>>0)<10;
 if($isdigit61){var $p_969=$add_ptr109;var $exp_070=$add108;var $10=$11;label=27;break;}else{var $exp_1=$add108;var $p_10=$add_ptr109;var $expSign_1=$expSign_0_ph;label=28;break;}
 case 28: 
 var $expSign_1;
 var $p_10;
 var $exp_1;
 var $tobool112=($expSign_1|0)==0;
 var $12=(((-$exp_1))|0);
 var $exp_2_p=($tobool112?$exp_1:$12);
 var $exp_2=((($fracExp_0)+($exp_2_p))|0);
 var $cmp118=($exp_2|0)<0;
 var $sub121=(((-$exp_2))|0);
 var $exp_3=($cmp118?$sub121:$exp_2);
 var $cmp124=($exp_3|0)>511;
 if($cmp124){label=29;break;}else{label=30;break;}
 case 29: 
 var $call127=___errno_location();
 HEAP32[(($call127)>>2)]=34;
 var $dblExp_063=1;var $d_064=8;var $exp_565=511;label=31;break;
 case 30: 
 var $cmp13062=($exp_3|0)==0;
 if($cmp13062){var $dblExp_0_lcssa=1;label=34;break;}else{var $dblExp_063=1;var $d_064=8;var $exp_565=$exp_3;label=31;break;}
 case 31: 
 var $exp_565;
 var $d_064;
 var $dblExp_063;
 var $and=$exp_565&1;
 var $tobool133=($and|0)==0;
 if($tobool133){var $dblExp_1=$dblExp_063;label=33;break;}else{label=32;break;}
 case 32: 
 var $13=HEAPF64[(($d_064)>>3)];
 var $mul135=($dblExp_063)*($13);
 var $dblExp_1=$mul135;label=33;break;
 case 33: 
 var $dblExp_1;
 var $shr=$exp_565>>1;
 var $add_ptr138=(($d_064+8)|0);
 var $cmp130=($shr|0)==0;
 if($cmp130){var $dblExp_0_lcssa=$dblExp_1;label=34;break;}else{var $dblExp_063=$dblExp_1;var $d_064=$add_ptr138;var $exp_565=$shr;label=31;break;}
 case 34: 
 var $dblExp_0_lcssa;
 var $tobool140=($exp_2|0)>-1;
 if($tobool140){label=36;break;}else{label=35;break;}
 case 35: 
 var $div=($add76)/($dblExp_0_lcssa);
 var $p_11=$p_10;var $fraction_0=$div;label=37;break;
 case 36: 
 var $mul143=($add76)*($dblExp_0_lcssa);
 var $p_11=$p_10;var $fraction_0=$mul143;label=37;break;
 case 37: 
 var $fraction_0;
 var $p_11;
 var $cmp145=($endPtr|0)==0;
 if($cmp145){label=39;break;}else{label=38;break;}
 case 38: 
 HEAP32[(($endPtr)>>2)]=$p_11;
 label=39;break;
 case 39: 
 var $tobool149=($sign_0|0)==0;
 if($tobool149){var $retval_0=$fraction_0;label=41;break;}else{label=40;break;}
 case 40: 
 var $sub151=((-.0))-($fraction_0);
 var $retval_0=$sub151;label=41;break;
 case 41: 
 var $retval_0;
 return $retval_0;
  default: assert(0, "bad label: " + label);
 }
}
function _strtold_l($nptr,$endptr,$loc){
 var label=0;
 var $call_i=_strtod($nptr,$endptr);
 return $call_i;
}
// EMSCRIPTEN_END_FUNCS
function _i64Add(a, b, c, d) {
    /*
      x = a + b*2^32
      y = c + d*2^32
      result = l + h*2^32
    */
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a + c)>>>0;
    h = (b + d + (((l>>>0) < (a>>>0))|0))>>>0; // Add carry from low word to high word on overflow.
    return tempRet0 = h,l|0;
  }
function _i64Subtract(a, b, c, d) {
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a - c)>>>0;
    h = (b - d)>>>0;
    h = (b - d - (((c>>>0) > (a>>>0))|0))>>>0; // Borrow one from high word to low word on underflow.
    return tempRet0 = h,l|0;
  }
function _bitshift64Shl(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = (high << bits) | ((low&(ander << (32 - bits))) >>> (32 - bits));
      return low << bits;
    }
    tempRet0 = low << (bits - 32);
    return 0;
  }
function _bitshift64Lshr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >>> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = 0;
    return (high >>> (bits - 32))|0;
  }
function _bitshift64Ashr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = (high|0) < 0 ? -1 : 0;
    return (high >> (bits - 32))|0;
  }
function _llvm_ctlz_i32(x) {
    x = x|0;
    var ret = 0;
    ret = HEAP8[(((ctlz_i8)+(x >>> 24))|0)];
    if ((ret|0) < 8) return ret|0;
    ret = HEAP8[(((ctlz_i8)+((x >> 16)&0xff))|0)];
    if ((ret|0) < 8) return (ret + 8)|0;
    ret = HEAP8[(((ctlz_i8)+((x >> 8)&0xff))|0)];
    if ((ret|0) < 8) return (ret + 16)|0;
    return (HEAP8[(((ctlz_i8)+(x&0xff))|0)] + 24)|0;
  }
/* PRE_ASM */ var ctlz_i8 = allocate([8,7,6,6,5,5,5,5,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_DYNAMIC);
function _llvm_cttz_i32(x) {
    x = x|0;
    var ret = 0;
    ret = HEAP8[(((cttz_i8)+(x & 0xff))|0)];
    if ((ret|0) < 8) return ret|0;
    ret = HEAP8[(((cttz_i8)+((x >> 8)&0xff))|0)];
    if ((ret|0) < 8) return (ret + 8)|0;
    ret = HEAP8[(((cttz_i8)+((x >> 16)&0xff))|0)];
    if ((ret|0) < 8) return (ret + 16)|0;
    return (HEAP8[(((cttz_i8)+(x >>> 24))|0)] + 24)|0;
  }
/* PRE_ASM */ var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_DYNAMIC);
// ======== compiled code from system/lib/compiler-rt , see readme therein
function ___muldsi3($a, $b) {
  $a = $a | 0;
  $b = $b | 0;
  var $1 = 0, $2 = 0, $3 = 0, $6 = 0, $8 = 0, $11 = 0, $12 = 0;
  $1 = $a & 65535;
  $2 = $b & 65535;
  $3 = Math_imul($2, $1) | 0;
  $6 = $a >>> 16;
  $8 = ($3 >>> 16) + (Math_imul($2, $6) | 0) | 0;
  $11 = $b >>> 16;
  $12 = Math_imul($11, $1) | 0;
  return (tempRet0 = (($8 >>> 16) + (Math_imul($11, $6) | 0) | 0) + ((($8 & 65535) + $12 | 0) >>> 16) | 0, 0 | ($8 + $12 << 16 | $3 & 65535)) | 0;
}
function ___divdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $6$0 = 0, $7$0 = 0, $7$1 = 0, $8$0 = 0, $10$0 = 0;
  $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $4$0 = _i64Subtract($1$0 ^ $a$0, $1$1 ^ $a$1, $1$0, $1$1) | 0;
  $4$1 = tempRet0;
  $6$0 = _i64Subtract($2$0 ^ $b$0, $2$1 ^ $b$1, $2$0, $2$1) | 0;
  $7$0 = $2$0 ^ $1$0;
  $7$1 = $2$1 ^ $1$1;
  $8$0 = ___udivmoddi4($4$0, $4$1, $6$0, tempRet0, 0) | 0;
  $10$0 = _i64Subtract($8$0 ^ $7$0, tempRet0 ^ $7$1, $7$0, $7$1) | 0;
  return (tempRet0 = tempRet0, $10$0) | 0;
}
function ___remdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $rem = 0, $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $6$0 = 0, $10$0 = 0, $10$1 = 0, __stackBase__ = 0;
  __stackBase__ = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  $rem = __stackBase__ | 0;
  $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $4$0 = _i64Subtract($1$0 ^ $a$0, $1$1 ^ $a$1, $1$0, $1$1) | 0;
  $4$1 = tempRet0;
  $6$0 = _i64Subtract($2$0 ^ $b$0, $2$1 ^ $b$1, $2$0, $2$1) | 0;
  ___udivmoddi4($4$0, $4$1, $6$0, tempRet0, $rem) | 0;
  $10$0 = _i64Subtract(HEAP32[$rem >> 2] ^ $1$0, HEAP32[$rem + 4 >> 2] ^ $1$1, $1$0, $1$1) | 0;
  $10$1 = tempRet0;
  STACKTOP = __stackBase__;
  return (tempRet0 = $10$1, $10$0) | 0;
}
function ___muldi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $x_sroa_0_0_extract_trunc = 0, $y_sroa_0_0_extract_trunc = 0, $1$0 = 0, $1$1 = 0, $2 = 0;
  $x_sroa_0_0_extract_trunc = $a$0;
  $y_sroa_0_0_extract_trunc = $b$0;
  $1$0 = ___muldsi3($x_sroa_0_0_extract_trunc, $y_sroa_0_0_extract_trunc) | 0;
  $1$1 = tempRet0;
  $2 = Math_imul($a$1, $y_sroa_0_0_extract_trunc) | 0;
  return (tempRet0 = ((Math_imul($b$1, $x_sroa_0_0_extract_trunc) | 0) + $2 | 0) + $1$1 | $1$1 & 0, 0 | $1$0 & -1) | 0;
}
function ___udivdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $1$0 = 0;
  $1$0 = ___udivmoddi4($a$0, $a$1, $b$0, $b$1, 0) | 0;
  return (tempRet0 = tempRet0, $1$0) | 0;
}
function ___uremdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $rem = 0, __stackBase__ = 0;
  __stackBase__ = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  $rem = __stackBase__ | 0;
  ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) | 0;
  STACKTOP = __stackBase__;
  return (tempRet0 = HEAP32[$rem + 4 >> 2] | 0, HEAP32[$rem >> 2] | 0) | 0;
}
function ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  $rem = $rem | 0;
  var $n_sroa_0_0_extract_trunc = 0, $n_sroa_1_4_extract_shift$0 = 0, $n_sroa_1_4_extract_trunc = 0, $d_sroa_0_0_extract_trunc = 0, $d_sroa_1_4_extract_shift$0 = 0, $d_sroa_1_4_extract_trunc = 0, $4 = 0, $17 = 0, $37 = 0, $49 = 0, $51 = 0, $57 = 0, $58 = 0, $66 = 0, $78 = 0, $86 = 0, $88 = 0, $89 = 0, $91 = 0, $92 = 0, $95 = 0, $105 = 0, $117 = 0, $119 = 0, $125 = 0, $126 = 0, $130 = 0, $q_sroa_1_1_ph = 0, $q_sroa_0_1_ph = 0, $r_sroa_1_1_ph = 0, $r_sroa_0_1_ph = 0, $sr_1_ph = 0, $d_sroa_0_0_insert_insert99$0 = 0, $d_sroa_0_0_insert_insert99$1 = 0, $137$0 = 0, $137$1 = 0, $carry_0203 = 0, $sr_1202 = 0, $r_sroa_0_1201 = 0, $r_sroa_1_1200 = 0, $q_sroa_0_1199 = 0, $q_sroa_1_1198 = 0, $147 = 0, $149 = 0, $r_sroa_0_0_insert_insert42$0 = 0, $r_sroa_0_0_insert_insert42$1 = 0, $150$1 = 0, $151$0 = 0, $152 = 0, $154$0 = 0, $r_sroa_0_0_extract_trunc = 0, $r_sroa_1_4_extract_trunc = 0, $155 = 0, $carry_0_lcssa$0 = 0, $carry_0_lcssa$1 = 0, $r_sroa_0_1_lcssa = 0, $r_sroa_1_1_lcssa = 0, $q_sroa_0_1_lcssa = 0, $q_sroa_1_1_lcssa = 0, $q_sroa_0_0_insert_ext75$0 = 0, $q_sroa_0_0_insert_ext75$1 = 0, $q_sroa_0_0_insert_insert77$1 = 0, $_0$0 = 0, $_0$1 = 0;
  $n_sroa_0_0_extract_trunc = $a$0;
  $n_sroa_1_4_extract_shift$0 = $a$1;
  $n_sroa_1_4_extract_trunc = $n_sroa_1_4_extract_shift$0;
  $d_sroa_0_0_extract_trunc = $b$0;
  $d_sroa_1_4_extract_shift$0 = $b$1;
  $d_sroa_1_4_extract_trunc = $d_sroa_1_4_extract_shift$0;
  if (($n_sroa_1_4_extract_trunc | 0) == 0) {
    $4 = ($rem | 0) != 0;
    if (($d_sroa_1_4_extract_trunc | 0) == 0) {
      if ($4) {
        HEAP32[$rem >> 2] = ($n_sroa_0_0_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
        HEAP32[$rem + 4 >> 2] = 0;
      }
      $_0$1 = 0;
      $_0$0 = ($n_sroa_0_0_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    } else {
      if (!$4) {
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      HEAP32[$rem >> 2] = $a$0 & -1;
      HEAP32[$rem + 4 >> 2] = $a$1 & 0;
      $_0$1 = 0;
      $_0$0 = 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    }
  }
  $17 = ($d_sroa_1_4_extract_trunc | 0) == 0;
  do {
    if (($d_sroa_0_0_extract_trunc | 0) == 0) {
      if ($17) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
          HEAP32[$rem + 4 >> 2] = 0;
        }
        $_0$1 = 0;
        $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      if (($n_sroa_0_0_extract_trunc | 0) == 0) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = 0;
          HEAP32[$rem + 4 >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_1_4_extract_trunc >>> 0);
        }
        $_0$1 = 0;
        $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_1_4_extract_trunc >>> 0) >>> 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $37 = $d_sroa_1_4_extract_trunc - 1 | 0;
      if (($37 & $d_sroa_1_4_extract_trunc | 0) == 0) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = 0 | $a$0 & -1;
          HEAP32[$rem + 4 >> 2] = $37 & $n_sroa_1_4_extract_trunc | $a$1 & 0;
        }
        $_0$1 = 0;
        $_0$0 = $n_sroa_1_4_extract_trunc >>> ((_llvm_cttz_i32($d_sroa_1_4_extract_trunc | 0) | 0) >>> 0);
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $49 = _llvm_ctlz_i32($d_sroa_1_4_extract_trunc | 0) | 0;
      $51 = $49 - (_llvm_ctlz_i32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
      if ($51 >>> 0 <= 30) {
        $57 = $51 + 1 | 0;
        $58 = 31 - $51 | 0;
        $sr_1_ph = $57;
        $r_sroa_0_1_ph = $n_sroa_1_4_extract_trunc << $58 | $n_sroa_0_0_extract_trunc >>> ($57 >>> 0);
        $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($57 >>> 0);
        $q_sroa_0_1_ph = 0;
        $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $58;
        break;
      }
      if (($rem | 0) == 0) {
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      HEAP32[$rem >> 2] = 0 | $a$0 & -1;
      HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
      $_0$1 = 0;
      $_0$0 = 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    } else {
      if (!$17) {
        $117 = _llvm_ctlz_i32($d_sroa_1_4_extract_trunc | 0) | 0;
        $119 = $117 - (_llvm_ctlz_i32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
        if ($119 >>> 0 <= 31) {
          $125 = $119 + 1 | 0;
          $126 = 31 - $119 | 0;
          $130 = $119 - 31 >> 31;
          $sr_1_ph = $125;
          $r_sroa_0_1_ph = $n_sroa_0_0_extract_trunc >>> ($125 >>> 0) & $130 | $n_sroa_1_4_extract_trunc << $126;
          $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($125 >>> 0) & $130;
          $q_sroa_0_1_ph = 0;
          $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $126;
          break;
        }
        if (($rem | 0) == 0) {
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        HEAP32[$rem >> 2] = 0 | $a$0 & -1;
        HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $66 = $d_sroa_0_0_extract_trunc - 1 | 0;
      if (($66 & $d_sroa_0_0_extract_trunc | 0) != 0) {
        $86 = (_llvm_ctlz_i32($d_sroa_0_0_extract_trunc | 0) | 0) + 33 | 0;
        $88 = $86 - (_llvm_ctlz_i32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
        $89 = 64 - $88 | 0;
        $91 = 32 - $88 | 0;
        $92 = $91 >> 31;
        $95 = $88 - 32 | 0;
        $105 = $95 >> 31;
        $sr_1_ph = $88;
        $r_sroa_0_1_ph = $91 - 1 >> 31 & $n_sroa_1_4_extract_trunc >>> ($95 >>> 0) | ($n_sroa_1_4_extract_trunc << $91 | $n_sroa_0_0_extract_trunc >>> ($88 >>> 0)) & $105;
        $r_sroa_1_1_ph = $105 & $n_sroa_1_4_extract_trunc >>> ($88 >>> 0);
        $q_sroa_0_1_ph = $n_sroa_0_0_extract_trunc << $89 & $92;
        $q_sroa_1_1_ph = ($n_sroa_1_4_extract_trunc << $89 | $n_sroa_0_0_extract_trunc >>> ($95 >>> 0)) & $92 | $n_sroa_0_0_extract_trunc << $91 & $88 - 33 >> 31;
        break;
      }
      if (($rem | 0) != 0) {
        HEAP32[$rem >> 2] = $66 & $n_sroa_0_0_extract_trunc;
        HEAP32[$rem + 4 >> 2] = 0;
      }
      if (($d_sroa_0_0_extract_trunc | 0) == 1) {
        $_0$1 = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
        $_0$0 = 0 | $a$0 & -1;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      } else {
        $78 = _llvm_cttz_i32($d_sroa_0_0_extract_trunc | 0) | 0;
        $_0$1 = 0 | $n_sroa_1_4_extract_trunc >>> ($78 >>> 0);
        $_0$0 = $n_sroa_1_4_extract_trunc << 32 - $78 | $n_sroa_0_0_extract_trunc >>> ($78 >>> 0) | 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
    }
  } while (0);
  if (($sr_1_ph | 0) == 0) {
    $q_sroa_1_1_lcssa = $q_sroa_1_1_ph;
    $q_sroa_0_1_lcssa = $q_sroa_0_1_ph;
    $r_sroa_1_1_lcssa = $r_sroa_1_1_ph;
    $r_sroa_0_1_lcssa = $r_sroa_0_1_ph;
    $carry_0_lcssa$1 = 0;
    $carry_0_lcssa$0 = 0;
  } else {
    $d_sroa_0_0_insert_insert99$0 = 0 | $b$0 & -1;
    $d_sroa_0_0_insert_insert99$1 = $d_sroa_1_4_extract_shift$0 | $b$1 & 0;
    $137$0 = _i64Add($d_sroa_0_0_insert_insert99$0, $d_sroa_0_0_insert_insert99$1, -1, -1) | 0;
    $137$1 = tempRet0;
    $q_sroa_1_1198 = $q_sroa_1_1_ph;
    $q_sroa_0_1199 = $q_sroa_0_1_ph;
    $r_sroa_1_1200 = $r_sroa_1_1_ph;
    $r_sroa_0_1201 = $r_sroa_0_1_ph;
    $sr_1202 = $sr_1_ph;
    $carry_0203 = 0;
    while (1) {
      $147 = $q_sroa_0_1199 >>> 31 | $q_sroa_1_1198 << 1;
      $149 = $carry_0203 | $q_sroa_0_1199 << 1;
      $r_sroa_0_0_insert_insert42$0 = 0 | ($r_sroa_0_1201 << 1 | $q_sroa_1_1198 >>> 31);
      $r_sroa_0_0_insert_insert42$1 = $r_sroa_0_1201 >>> 31 | $r_sroa_1_1200 << 1 | 0;
      _i64Subtract($137$0, $137$1, $r_sroa_0_0_insert_insert42$0, $r_sroa_0_0_insert_insert42$1) | 0;
      $150$1 = tempRet0;
      $151$0 = $150$1 >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1;
      $152 = $151$0 & 1;
      $154$0 = _i64Subtract($r_sroa_0_0_insert_insert42$0, $r_sroa_0_0_insert_insert42$1, $151$0 & $d_sroa_0_0_insert_insert99$0, ((($150$1 | 0) < 0 ? -1 : 0) >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1) & $d_sroa_0_0_insert_insert99$1) | 0;
      $r_sroa_0_0_extract_trunc = $154$0;
      $r_sroa_1_4_extract_trunc = tempRet0;
      $155 = $sr_1202 - 1 | 0;
      if (($155 | 0) == 0) {
        break;
      } else {
        $q_sroa_1_1198 = $147;
        $q_sroa_0_1199 = $149;
        $r_sroa_1_1200 = $r_sroa_1_4_extract_trunc;
        $r_sroa_0_1201 = $r_sroa_0_0_extract_trunc;
        $sr_1202 = $155;
        $carry_0203 = $152;
      }
    }
    $q_sroa_1_1_lcssa = $147;
    $q_sroa_0_1_lcssa = $149;
    $r_sroa_1_1_lcssa = $r_sroa_1_4_extract_trunc;
    $r_sroa_0_1_lcssa = $r_sroa_0_0_extract_trunc;
    $carry_0_lcssa$1 = 0;
    $carry_0_lcssa$0 = $152;
  }
  $q_sroa_0_0_insert_ext75$0 = $q_sroa_0_1_lcssa;
  $q_sroa_0_0_insert_ext75$1 = 0;
  $q_sroa_0_0_insert_insert77$1 = $q_sroa_1_1_lcssa | $q_sroa_0_0_insert_ext75$1;
  if (($rem | 0) != 0) {
    HEAP32[$rem >> 2] = 0 | $r_sroa_0_1_lcssa;
    HEAP32[$rem + 4 >> 2] = $r_sroa_1_1_lcssa | 0;
  }
  $_0$1 = (0 | $q_sroa_0_0_insert_ext75$0) >>> 31 | $q_sroa_0_0_insert_insert77$1 << 1 | ($q_sroa_0_0_insert_ext75$1 << 1 | $q_sroa_0_0_insert_ext75$0 >>> 31) & 0 | $carry_0_lcssa$1;
  $_0$0 = ($q_sroa_0_0_insert_ext75$0 << 1 | 0 >>> 31) & -2 | $carry_0_lcssa$0;
  return (tempRet0 = $_0$1, $_0$0) | 0;
}
// =======================================================================
// EMSCRIPTEN_END_FUNCS
// TODO: strip out parts of this we do not need
//======= begin closure i64 code =======
// Copyright 2009 The Closure Library Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Defines a Long class for representing a 64-bit two's-complement
 * integer value, which faithfully simulates the behavior of a Java "long". This
 * implementation is derived from LongLib in GWT.
 *
 */
var i64Math = (function() { // Emscripten wrapper
  var goog = { math: {} };
  /**
   * Constructs a 64-bit two's-complement integer, given its low and high 32-bit
   * values as *signed* integers.  See the from* functions below for more
   * convenient ways of constructing Longs.
   *
   * The internal representation of a long is the two given signed, 32-bit values.
   * We use 32-bit pieces because these are the size of integers on which
   * Javascript performs bit-operations.  For operations like addition and
   * multiplication, we split each number into 16-bit pieces, which can easily be
   * multiplied within Javascript's floating-point representation without overflow
   * or change in sign.
   *
   * In the algorithms below, we frequently reduce the negative case to the
   * positive case by negating the input(s) and then post-processing the result.
   * Note that we must ALWAYS check specially whether those values are MIN_VALUE
   * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as
   * a positive number, it overflows back into a negative).  Not handling this
   * case would often result in infinite recursion.
   *
   * @param {number} low  The low (signed) 32 bits of the long.
   * @param {number} high  The high (signed) 32 bits of the long.
   * @constructor
   */
  goog.math.Long = function(low, high) {
    /**
     * @type {number}
     * @private
     */
    this.low_ = low | 0;  // force into 32 signed bits.
    /**
     * @type {number}
     * @private
     */
    this.high_ = high | 0;  // force into 32 signed bits.
  };
  // NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the
  // from* methods on which they depend.
  /**
   * A cache of the Long representations of small integer values.
   * @type {!Object}
   * @private
   */
  goog.math.Long.IntCache_ = {};
  /**
   * Returns a Long representing the given (32-bit) integer value.
   * @param {number} value The 32-bit integer in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromInt = function(value) {
    if (-128 <= value && value < 128) {
      var cachedObj = goog.math.Long.IntCache_[value];
      if (cachedObj) {
        return cachedObj;
      }
    }
    var obj = new goog.math.Long(value | 0, value < 0 ? -1 : 0);
    if (-128 <= value && value < 128) {
      goog.math.Long.IntCache_[value] = obj;
    }
    return obj;
  };
  /**
   * Returns a Long representing the given value, provided that it is a finite
   * number.  Otherwise, zero is returned.
   * @param {number} value The number in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromNumber = function(value) {
    if (isNaN(value) || !isFinite(value)) {
      return goog.math.Long.ZERO;
    } else if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MIN_VALUE;
    } else if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MAX_VALUE;
    } else if (value < 0) {
      return goog.math.Long.fromNumber(-value).negate();
    } else {
      return new goog.math.Long(
          (value % goog.math.Long.TWO_PWR_32_DBL_) | 0,
          (value / goog.math.Long.TWO_PWR_32_DBL_) | 0);
    }
  };
  /**
   * Returns a Long representing the 64-bit integer that comes by concatenating
   * the given high and low bits.  Each is assumed to use 32 bits.
   * @param {number} lowBits The low 32-bits.
   * @param {number} highBits The high 32-bits.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromBits = function(lowBits, highBits) {
    return new goog.math.Long(lowBits, highBits);
  };
  /**
   * Returns a Long representation of the given string, written using the given
   * radix.
   * @param {string} str The textual representation of the Long.
   * @param {number=} opt_radix The radix in which the text is written.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromString = function(str, opt_radix) {
    if (str.length == 0) {
      throw Error('number format error: empty string');
    }
    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }
    if (str.charAt(0) == '-') {
      return goog.math.Long.fromString(str.substring(1), radix).negate();
    } else if (str.indexOf('-') >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }
    // Do several (8) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));
    var result = goog.math.Long.ZERO;
    for (var i = 0; i < str.length; i += 8) {
      var size = Math.min(8, str.length - i);
      var value = parseInt(str.substring(i, i + size), radix);
      if (size < 8) {
        var power = goog.math.Long.fromNumber(Math.pow(radix, size));
        result = result.multiply(power).add(goog.math.Long.fromNumber(value));
      } else {
        result = result.multiply(radixToPower);
        result = result.add(goog.math.Long.fromNumber(value));
      }
    }
    return result;
  };
  // NOTE: the compiler should inline these constant values below and then remove
  // these variables, so there should be no runtime penalty for these.
  /**
   * Number used repeated below in calculations.  This must appear before the
   * first call to any from* function below.
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_24_DBL_ = 1 << 24;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_32_DBL_ =
      goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_31_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ / 2;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_48_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_64_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_63_DBL_ =
      goog.math.Long.TWO_PWR_64_DBL_ / 2;
  /** @type {!goog.math.Long} */
  goog.math.Long.ZERO = goog.math.Long.fromInt(0);
  /** @type {!goog.math.Long} */
  goog.math.Long.ONE = goog.math.Long.fromInt(1);
  /** @type {!goog.math.Long} */
  goog.math.Long.NEG_ONE = goog.math.Long.fromInt(-1);
  /** @type {!goog.math.Long} */
  goog.math.Long.MAX_VALUE =
      goog.math.Long.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);
  /** @type {!goog.math.Long} */
  goog.math.Long.MIN_VALUE = goog.math.Long.fromBits(0, 0x80000000 | 0);
  /**
   * @type {!goog.math.Long}
   * @private
   */
  goog.math.Long.TWO_PWR_24_ = goog.math.Long.fromInt(1 << 24);
  /** @return {number} The value, assuming it is a 32-bit integer. */
  goog.math.Long.prototype.toInt = function() {
    return this.low_;
  };
  /** @return {number} The closest floating-point representation to this value. */
  goog.math.Long.prototype.toNumber = function() {
    return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ +
           this.getLowBitsUnsigned();
  };
  /**
   * @param {number=} opt_radix The radix in which the text should be written.
   * @return {string} The textual representation of this value.
   */
  goog.math.Long.prototype.toString = function(opt_radix) {
    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }
    if (this.isZero()) {
      return '0';
    }
    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        // We need to change the Long value before it can be negated, so we remove
        // the bottom-most digit in this base and then recurse to do the rest.
        var radixLong = goog.math.Long.fromNumber(radix);
        var div = this.div(radixLong);
        var rem = div.multiply(radixLong).subtract(this);
        return div.toString(radix) + rem.toInt().toString(radix);
      } else {
        return '-' + this.negate().toString(radix);
      }
    }
    // Do several (6) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));
    var rem = this;
    var result = '';
    while (true) {
      var remDiv = rem.div(radixToPower);
      var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();
      var digits = intval.toString(radix);
      rem = remDiv;
      if (rem.isZero()) {
        return digits + result;
      } else {
        while (digits.length < 6) {
          digits = '0' + digits;
        }
        result = '' + digits + result;
      }
    }
  };
  /** @return {number} The high 32-bits as a signed value. */
  goog.math.Long.prototype.getHighBits = function() {
    return this.high_;
  };
  /** @return {number} The low 32-bits as a signed value. */
  goog.math.Long.prototype.getLowBits = function() {
    return this.low_;
  };
  /** @return {number} The low 32-bits as an unsigned value. */
  goog.math.Long.prototype.getLowBitsUnsigned = function() {
    return (this.low_ >= 0) ?
        this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
  };
  /**
   * @return {number} Returns the number of bits needed to represent the absolute
   *     value of this Long.
   */
  goog.math.Long.prototype.getNumBitsAbs = function() {
    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        return 64;
      } else {
        return this.negate().getNumBitsAbs();
      }
    } else {
      var val = this.high_ != 0 ? this.high_ : this.low_;
      for (var bit = 31; bit > 0; bit--) {
        if ((val & (1 << bit)) != 0) {
          break;
        }
      }
      return this.high_ != 0 ? bit + 33 : bit + 1;
    }
  };
  /** @return {boolean} Whether this value is zero. */
  goog.math.Long.prototype.isZero = function() {
    return this.high_ == 0 && this.low_ == 0;
  };
  /** @return {boolean} Whether this value is negative. */
  goog.math.Long.prototype.isNegative = function() {
    return this.high_ < 0;
  };
  /** @return {boolean} Whether this value is odd. */
  goog.math.Long.prototype.isOdd = function() {
    return (this.low_ & 1) == 1;
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long equals the other.
   */
  goog.math.Long.prototype.equals = function(other) {
    return (this.high_ == other.high_) && (this.low_ == other.low_);
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long does not equal the other.
   */
  goog.math.Long.prototype.notEquals = function(other) {
    return (this.high_ != other.high_) || (this.low_ != other.low_);
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than the other.
   */
  goog.math.Long.prototype.lessThan = function(other) {
    return this.compare(other) < 0;
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than or equal to the other.
   */
  goog.math.Long.prototype.lessThanOrEqual = function(other) {
    return this.compare(other) <= 0;
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than the other.
   */
  goog.math.Long.prototype.greaterThan = function(other) {
    return this.compare(other) > 0;
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than or equal to the other.
   */
  goog.math.Long.prototype.greaterThanOrEqual = function(other) {
    return this.compare(other) >= 0;
  };
  /**
   * Compares this Long with the given one.
   * @param {goog.math.Long} other Long to compare against.
   * @return {number} 0 if they are the same, 1 if the this is greater, and -1
   *     if the given one is greater.
   */
  goog.math.Long.prototype.compare = function(other) {
    if (this.equals(other)) {
      return 0;
    }
    var thisNeg = this.isNegative();
    var otherNeg = other.isNegative();
    if (thisNeg && !otherNeg) {
      return -1;
    }
    if (!thisNeg && otherNeg) {
      return 1;
    }
    // at this point, the signs are the same, so subtraction will not overflow
    if (this.subtract(other).isNegative()) {
      return -1;
    } else {
      return 1;
    }
  };
  /** @return {!goog.math.Long} The negation of this value. */
  goog.math.Long.prototype.negate = function() {
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.MIN_VALUE;
    } else {
      return this.not().add(goog.math.Long.ONE);
    }
  };
  /**
   * Returns the sum of this and the given Long.
   * @param {goog.math.Long} other Long to add to this one.
   * @return {!goog.math.Long} The sum of this and the given Long.
   */
  goog.math.Long.prototype.add = function(other) {
    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.
    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;
    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;
    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 + b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 + b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 + b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 + b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };
  /**
   * Returns the difference of this and the given Long.
   * @param {goog.math.Long} other Long to subtract from this.
   * @return {!goog.math.Long} The difference of this and the given Long.
   */
  goog.math.Long.prototype.subtract = function(other) {
    return this.add(other.negate());
  };
  /**
   * Returns the product of this and the given long.
   * @param {goog.math.Long} other Long to multiply with this.
   * @return {!goog.math.Long} The product of this and the other.
   */
  goog.math.Long.prototype.multiply = function(other) {
    if (this.isZero()) {
      return goog.math.Long.ZERO;
    } else if (other.isZero()) {
      return goog.math.Long.ZERO;
    }
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return other.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return this.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    }
    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().multiply(other.negate());
      } else {
        return this.negate().multiply(other).negate();
      }
    } else if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }
    // If both longs are small, use float multiplication
    if (this.lessThan(goog.math.Long.TWO_PWR_24_) &&
        other.lessThan(goog.math.Long.TWO_PWR_24_)) {
      return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
    }
    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.
    // We can skip products that would overflow.
    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;
    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;
    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 * b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 * b00;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c16 += a00 * b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 * b00;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a16 * b16;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a00 * b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };
  /**
   * Returns this Long divided by the given one.
   * @param {goog.math.Long} other Long by which to divide.
   * @return {!goog.math.Long} This Long divided by the given one.
   */
  goog.math.Long.prototype.div = function(other) {
    if (other.isZero()) {
      throw Error('division by zero');
    } else if (this.isZero()) {
      return goog.math.Long.ZERO;
    }
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      if (other.equals(goog.math.Long.ONE) ||
          other.equals(goog.math.Long.NEG_ONE)) {
        return goog.math.Long.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE
      } else if (other.equals(goog.math.Long.MIN_VALUE)) {
        return goog.math.Long.ONE;
      } else {
        // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.ZERO)) {
          return other.isNegative() ? goog.math.Long.ONE : goog.math.Long.NEG_ONE;
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.ZERO;
    }
    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().div(other.negate());
      } else {
        return this.negate().div(other).negate();
      }
    } else if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }
    // Repeat the following until the remainder is less than other:  find a
    // floating-point that approximates remainder / other *from below*, add this
    // into the result, and subtract it from the remainder.  It is critical that
    // the approximate value is less than or equal to the real value so that the
    // remainder never becomes negative.
    var res = goog.math.Long.ZERO;
    var rem = this;
    while (rem.greaterThanOrEqual(other)) {
      // Approximate the result of division. This may be a little greater or
      // smaller than the actual value.
      var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));
      // We will tweak the approximate result by changing it in the 48-th digit or
      // the smallest non-fractional digit, whichever is larger.
      var log2 = Math.ceil(Math.log(approx) / Math.LN2);
      var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);
      // Decrease the approximation until it is smaller than the remainder.  Note
      // that if it is too large, the product overflows and is negative.
      var approxRes = goog.math.Long.fromNumber(approx);
      var approxRem = approxRes.multiply(other);
      while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
        approx -= delta;
        approxRes = goog.math.Long.fromNumber(approx);
        approxRem = approxRes.multiply(other);
      }
      // We know the answer can't be zero... and actually, zero would cause
      // infinite recursion since we would make no progress.
      if (approxRes.isZero()) {
        approxRes = goog.math.Long.ONE;
      }
      res = res.add(approxRes);
      rem = rem.subtract(approxRem);
    }
    return res;
  };
  /**
   * Returns this Long modulo the given one.
   * @param {goog.math.Long} other Long by which to mod.
   * @return {!goog.math.Long} This Long modulo the given one.
   */
  goog.math.Long.prototype.modulo = function(other) {
    return this.subtract(this.div(other).multiply(other));
  };
  /** @return {!goog.math.Long} The bitwise-NOT of this value. */
  goog.math.Long.prototype.not = function() {
    return goog.math.Long.fromBits(~this.low_, ~this.high_);
  };
  /**
   * Returns the bitwise-AND of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to AND.
   * @return {!goog.math.Long} The bitwise-AND of this and the other.
   */
  goog.math.Long.prototype.and = function(other) {
    return goog.math.Long.fromBits(this.low_ & other.low_,
                                   this.high_ & other.high_);
  };
  /**
   * Returns the bitwise-OR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to OR.
   * @return {!goog.math.Long} The bitwise-OR of this and the other.
   */
  goog.math.Long.prototype.or = function(other) {
    return goog.math.Long.fromBits(this.low_ | other.low_,
                                   this.high_ | other.high_);
  };
  /**
   * Returns the bitwise-XOR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to XOR.
   * @return {!goog.math.Long} The bitwise-XOR of this and the other.
   */
  goog.math.Long.prototype.xor = function(other) {
    return goog.math.Long.fromBits(this.low_ ^ other.low_,
                                   this.high_ ^ other.high_);
  };
  /**
   * Returns this Long with bits shifted to the left by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the left by the given amount.
   */
  goog.math.Long.prototype.shiftLeft = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var low = this.low_;
      if (numBits < 32) {
        var high = this.high_;
        return goog.math.Long.fromBits(
            low << numBits,
            (high << numBits) | (low >>> (32 - numBits)));
      } else {
        return goog.math.Long.fromBits(0, low << (numBits - 32));
      }
    }
  };
  /**
   * Returns this Long with bits shifted to the right by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount.
   */
  goog.math.Long.prototype.shiftRight = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >> numBits);
      } else {
        return goog.math.Long.fromBits(
            high >> (numBits - 32),
            high >= 0 ? 0 : -1);
      }
    }
  };
  /**
   * Returns this Long with bits shifted to the right by the given amount, with
   * the new top bits matching the current sign bit.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount, with
   *     zeros placed into the new leading bits.
   */
  goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >>> numBits);
      } else if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> (numBits - 32), 0);
      }
    }
  };
  //======= begin jsbn =======
  var navigator = { appName: 'Modern Browser' }; // polyfill a little
  // Copyright (c) 2005  Tom Wu
  // All Rights Reserved.
  // http://www-cs-students.stanford.edu/~tjw/jsbn/
  /*
   * Copyright (c) 2003-2005  Tom Wu
   * All Rights Reserved.
   *
   * Permission is hereby granted, free of charge, to any person obtaining
   * a copy of this software and associated documentation files (the
   * "Software"), to deal in the Software without restriction, including
   * without limitation the rights to use, copy, modify, merge, publish,
   * distribute, sublicense, and/or sell copies of the Software, and to
   * permit persons to whom the Software is furnished to do so, subject to
   * the following conditions:
   *
   * The above copyright notice and this permission notice shall be
   * included in all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
   * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
   * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
   *
   * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,
   * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER
   * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF
   * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT
   * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
   *
   * In addition, the following condition applies:
   *
   * All redistributions must retain an intact copy of this copyright notice
   * and disclaimer.
   */
  // Basic JavaScript BN library - subset useful for RSA encryption.
  // Bits per digit
  var dbits;
  // JavaScript engine analysis
  var canary = 0xdeadbeefcafe;
  var j_lm = ((canary&0xffffff)==0xefcafe);
  // (public) Constructor
  function BigInteger(a,b,c) {
    if(a != null)
      if("number" == typeof a) this.fromNumber(a,b,c);
      else if(b == null && "string" != typeof a) this.fromString(a,256);
      else this.fromString(a,b);
  }
  // return new, unset BigInteger
  function nbi() { return new BigInteger(null); }
  // am: Compute w_j += (x*this_i), propagate carries,
  // c is initial carry, returns final carry.
  // c < 3*dvalue, x < 2*dvalue, this_i < dvalue
  // We need to select the fastest one that works in this environment.
  // am1: use a single mult and divide to get the high bits,
  // max digit bits should be 26 because
  // max internal value = 2*dvalue^2-2*dvalue (< 2^53)
  function am1(i,x,w,j,c,n) {
    while(--n >= 0) {
      var v = x*this[i++]+w[j]+c;
      c = Math.floor(v/0x4000000);
      w[j++] = v&0x3ffffff;
    }
    return c;
  }
  // am2 avoids a big mult-and-extract completely.
  // Max digit bits should be <= 30 because we do bitwise ops
  // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)
  function am2(i,x,w,j,c,n) {
    var xl = x&0x7fff, xh = x>>15;
    while(--n >= 0) {
      var l = this[i]&0x7fff;
      var h = this[i++]>>15;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);
      c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);
      w[j++] = l&0x3fffffff;
    }
    return c;
  }
  // Alternately, set max digit bits to 28 since some
  // browsers slow down when dealing with 32-bit numbers.
  function am3(i,x,w,j,c,n) {
    var xl = x&0x3fff, xh = x>>14;
    while(--n >= 0) {
      var l = this[i]&0x3fff;
      var h = this[i++]>>14;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x3fff)<<14)+w[j]+c;
      c = (l>>28)+(m>>14)+xh*h;
      w[j++] = l&0xfffffff;
    }
    return c;
  }
  if(j_lm && (navigator.appName == "Microsoft Internet Explorer")) {
    BigInteger.prototype.am = am2;
    dbits = 30;
  }
  else if(j_lm && (navigator.appName != "Netscape")) {
    BigInteger.prototype.am = am1;
    dbits = 26;
  }
  else { // Mozilla/Netscape seems to prefer am3
    BigInteger.prototype.am = am3;
    dbits = 28;
  }
  BigInteger.prototype.DB = dbits;
  BigInteger.prototype.DM = ((1<<dbits)-1);
  BigInteger.prototype.DV = (1<<dbits);
  var BI_FP = 52;
  BigInteger.prototype.FV = Math.pow(2,BI_FP);
  BigInteger.prototype.F1 = BI_FP-dbits;
  BigInteger.prototype.F2 = 2*dbits-BI_FP;
  // Digit conversions
  var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";
  var BI_RC = new Array();
  var rr,vv;
  rr = "0".charCodeAt(0);
  for(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;
  rr = "a".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
  rr = "A".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
  function int2char(n) { return BI_RM.charAt(n); }
  function intAt(s,i) {
    var c = BI_RC[s.charCodeAt(i)];
    return (c==null)?-1:c;
  }
  // (protected) copy this to r
  function bnpCopyTo(r) {
    for(var i = this.t-1; i >= 0; --i) r[i] = this[i];
    r.t = this.t;
    r.s = this.s;
  }
  // (protected) set from integer value x, -DV <= x < DV
  function bnpFromInt(x) {
    this.t = 1;
    this.s = (x<0)?-1:0;
    if(x > 0) this[0] = x;
    else if(x < -1) this[0] = x+DV;
    else this.t = 0;
  }
  // return bigint initialized to value
  function nbv(i) { var r = nbi(); r.fromInt(i); return r; }
  // (protected) set from string and radix
  function bnpFromString(s,b) {
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 256) k = 8; // byte array
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else { this.fromRadix(s,b); return; }
    this.t = 0;
    this.s = 0;
    var i = s.length, mi = false, sh = 0;
    while(--i >= 0) {
      var x = (k==8)?s[i]&0xff:intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-") mi = true;
        continue;
      }
      mi = false;
      if(sh == 0)
        this[this.t++] = x;
      else if(sh+k > this.DB) {
        this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;
        this[this.t++] = (x>>(this.DB-sh));
      }
      else
        this[this.t-1] |= x<<sh;
      sh += k;
      if(sh >= this.DB) sh -= this.DB;
    }
    if(k == 8 && (s[0]&0x80) != 0) {
      this.s = -1;
      if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;
    }
    this.clamp();
    if(mi) BigInteger.ZERO.subTo(this,this);
  }
  // (protected) clamp off excess high words
  function bnpClamp() {
    var c = this.s&this.DM;
    while(this.t > 0 && this[this.t-1] == c) --this.t;
  }
  // (public) return string representation in given radix
  function bnToString(b) {
    if(this.s < 0) return "-"+this.negate().toString(b);
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else return this.toRadix(b);
    var km = (1<<k)-1, d, m = false, r = "", i = this.t;
    var p = this.DB-(i*this.DB)%k;
    if(i-- > 0) {
      if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r = int2char(d); }
      while(i >= 0) {
        if(p < k) {
          d = (this[i]&((1<<p)-1))<<(k-p);
          d |= this[--i]>>(p+=this.DB-k);
        }
        else {
          d = (this[i]>>(p-=k))&km;
          if(p <= 0) { p += this.DB; --i; }
        }
        if(d > 0) m = true;
        if(m) r += int2char(d);
      }
    }
    return m?r:"0";
  }
  // (public) -this
  function bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }
  // (public) |this|
  function bnAbs() { return (this.s<0)?this.negate():this; }
  // (public) return + if this > a, - if this < a, 0 if equal
  function bnCompareTo(a) {
    var r = this.s-a.s;
    if(r != 0) return r;
    var i = this.t;
    r = i-a.t;
    if(r != 0) return (this.s<0)?-r:r;
    while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;
    return 0;
  }
  // returns bit length of the integer x
  function nbits(x) {
    var r = 1, t;
    if((t=x>>>16) != 0) { x = t; r += 16; }
    if((t=x>>8) != 0) { x = t; r += 8; }
    if((t=x>>4) != 0) { x = t; r += 4; }
    if((t=x>>2) != 0) { x = t; r += 2; }
    if((t=x>>1) != 0) { x = t; r += 1; }
    return r;
  }
  // (public) return the number of bits in "this"
  function bnBitLength() {
    if(this.t <= 0) return 0;
    return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));
  }
  // (protected) r = this << n*DB
  function bnpDLShiftTo(n,r) {
    var i;
    for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];
    for(i = n-1; i >= 0; --i) r[i] = 0;
    r.t = this.t+n;
    r.s = this.s;
  }
  // (protected) r = this >> n*DB
  function bnpDRShiftTo(n,r) {
    for(var i = n; i < this.t; ++i) r[i-n] = this[i];
    r.t = Math.max(this.t-n,0);
    r.s = this.s;
  }
  // (protected) r = this << n
  function bnpLShiftTo(n,r) {
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<cbs)-1;
    var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;
    for(i = this.t-1; i >= 0; --i) {
      r[i+ds+1] = (this[i]>>cbs)|c;
      c = (this[i]&bm)<<bs;
    }
    for(i = ds-1; i >= 0; --i) r[i] = 0;
    r[ds] = c;
    r.t = this.t+ds+1;
    r.s = this.s;
    r.clamp();
  }
  // (protected) r = this >> n
  function bnpRShiftTo(n,r) {
    r.s = this.s;
    var ds = Math.floor(n/this.DB);
    if(ds >= this.t) { r.t = 0; return; }
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<bs)-1;
    r[0] = this[ds]>>bs;
    for(var i = ds+1; i < this.t; ++i) {
      r[i-ds-1] |= (this[i]&bm)<<cbs;
      r[i-ds] = this[i]>>bs;
    }
    if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;
    r.t = this.t-ds;
    r.clamp();
  }
  // (protected) r = this - a
  function bnpSubTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]-a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c -= a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c -= a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c -= a.s;
    }
    r.s = (c<0)?-1:0;
    if(c < -1) r[i++] = this.DV+c;
    else if(c > 0) r[i++] = c;
    r.t = i;
    r.clamp();
  }
  // (protected) r = this * a, r != this,a (HAC 14.12)
  // "this" should be the larger one if appropriate.
  function bnpMultiplyTo(a,r) {
    var x = this.abs(), y = a.abs();
    var i = x.t;
    r.t = i+y.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);
    r.s = 0;
    r.clamp();
    if(this.s != a.s) BigInteger.ZERO.subTo(r,r);
  }
  // (protected) r = this^2, r != this (HAC 14.16)
  function bnpSquareTo(r) {
    var x = this.abs();
    var i = r.t = 2*x.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < x.t-1; ++i) {
      var c = x.am(i,x[i],r,2*i,0,1);
      if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {
        r[i+x.t] -= x.DV;
        r[i+x.t+1] = 1;
      }
    }
    if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);
    r.s = 0;
    r.clamp();
  }
  // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)
  // r != q, this != m.  q or r may be null.
  function bnpDivRemTo(m,q,r) {
    var pm = m.abs();
    if(pm.t <= 0) return;
    var pt = this.abs();
    if(pt.t < pm.t) {
      if(q != null) q.fromInt(0);
      if(r != null) this.copyTo(r);
      return;
    }
    if(r == null) r = nbi();
    var y = nbi(), ts = this.s, ms = m.s;
    var nsh = this.DB-nbits(pm[pm.t-1]);	// normalize modulus
    if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }
    else { pm.copyTo(y); pt.copyTo(r); }
    var ys = y.t;
    var y0 = y[ys-1];
    if(y0 == 0) return;
    var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);
    var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;
    var i = r.t, j = i-ys, t = (q==null)?nbi():q;
    y.dlShiftTo(j,t);
    if(r.compareTo(t) >= 0) {
      r[r.t++] = 1;
      r.subTo(t,r);
    }
    BigInteger.ONE.dlShiftTo(ys,t);
    t.subTo(y,y);	// "negative" y so we can replace sub with am later
    while(y.t < ys) y[y.t++] = 0;
    while(--j >= 0) {
      // Estimate quotient digit
      var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);
      if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {	// Try it out
        y.dlShiftTo(j,t);
        r.subTo(t,r);
        while(r[i] < --qd) r.subTo(t,r);
      }
    }
    if(q != null) {
      r.drShiftTo(ys,q);
      if(ts != ms) BigInteger.ZERO.subTo(q,q);
    }
    r.t = ys;
    r.clamp();
    if(nsh > 0) r.rShiftTo(nsh,r);	// Denormalize remainder
    if(ts < 0) BigInteger.ZERO.subTo(r,r);
  }
  // (public) this mod a
  function bnMod(a) {
    var r = nbi();
    this.abs().divRemTo(a,null,r);
    if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);
    return r;
  }
  // Modular reduction using "classic" algorithm
  function Classic(m) { this.m = m; }
  function cConvert(x) {
    if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);
    else return x;
  }
  function cRevert(x) { return x; }
  function cReduce(x) { x.divRemTo(this.m,null,x); }
  function cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }
  function cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }
  Classic.prototype.convert = cConvert;
  Classic.prototype.revert = cRevert;
  Classic.prototype.reduce = cReduce;
  Classic.prototype.mulTo = cMulTo;
  Classic.prototype.sqrTo = cSqrTo;
  // (protected) return "-1/this % 2^DB"; useful for Mont. reduction
  // justification:
  //         xy == 1 (mod m)
  //         xy =  1+km
  //   xy(2-xy) = (1+km)(1-km)
  // x[y(2-xy)] = 1-k^2m^2
  // x[y(2-xy)] == 1 (mod m^2)
  // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2
  // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.
  // JS multiply "overflows" differently from C/C++, so care is needed here.
  function bnpInvDigit() {
    if(this.t < 1) return 0;
    var x = this[0];
    if((x&1) == 0) return 0;
    var y = x&3;		// y == 1/x mod 2^2
    y = (y*(2-(x&0xf)*y))&0xf;	// y == 1/x mod 2^4
    y = (y*(2-(x&0xff)*y))&0xff;	// y == 1/x mod 2^8
    y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;	// y == 1/x mod 2^16
    // last step - calculate inverse mod DV directly;
    // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints
    y = (y*(2-x*y%this.DV))%this.DV;		// y == 1/x mod 2^dbits
    // we really want the negative inverse, and -DV < y < DV
    return (y>0)?this.DV-y:-y;
  }
  // Montgomery reduction
  function Montgomery(m) {
    this.m = m;
    this.mp = m.invDigit();
    this.mpl = this.mp&0x7fff;
    this.mph = this.mp>>15;
    this.um = (1<<(m.DB-15))-1;
    this.mt2 = 2*m.t;
  }
  // xR mod m
  function montConvert(x) {
    var r = nbi();
    x.abs().dlShiftTo(this.m.t,r);
    r.divRemTo(this.m,null,r);
    if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);
    return r;
  }
  // x/R mod m
  function montRevert(x) {
    var r = nbi();
    x.copyTo(r);
    this.reduce(r);
    return r;
  }
  // x = x/R mod m (HAC 14.32)
  function montReduce(x) {
    while(x.t <= this.mt2)	// pad x so am has enough room later
      x[x.t++] = 0;
    for(var i = 0; i < this.m.t; ++i) {
      // faster way of calculating u0 = x[i]*mp mod DV
      var j = x[i]&0x7fff;
      var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;
      // use am to combine the multiply-shift-add into one call
      j = i+this.m.t;
      x[j] += this.m.am(0,u0,x,i,0,this.m.t);
      // propagate carry
      while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }
    }
    x.clamp();
    x.drShiftTo(this.m.t,x);
    if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);
  }
  // r = "x^2/R mod m"; x != r
  function montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }
  // r = "xy/R mod m"; x,y != r
  function montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }
  Montgomery.prototype.convert = montConvert;
  Montgomery.prototype.revert = montRevert;
  Montgomery.prototype.reduce = montReduce;
  Montgomery.prototype.mulTo = montMulTo;
  Montgomery.prototype.sqrTo = montSqrTo;
  // (protected) true iff this is even
  function bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }
  // (protected) this^e, e < 2^32, doing sqr and mul with "r" (HAC 14.79)
  function bnpExp(e,z) {
    if(e > 0xffffffff || e < 1) return BigInteger.ONE;
    var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;
    g.copyTo(r);
    while(--i >= 0) {
      z.sqrTo(r,r2);
      if((e&(1<<i)) > 0) z.mulTo(r2,g,r);
      else { var t = r; r = r2; r2 = t; }
    }
    return z.revert(r);
  }
  // (public) this^e % m, 0 <= e < 2^32
  function bnModPowInt(e,m) {
    var z;
    if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);
    return this.exp(e,z);
  }
  // protected
  BigInteger.prototype.copyTo = bnpCopyTo;
  BigInteger.prototype.fromInt = bnpFromInt;
  BigInteger.prototype.fromString = bnpFromString;
  BigInteger.prototype.clamp = bnpClamp;
  BigInteger.prototype.dlShiftTo = bnpDLShiftTo;
  BigInteger.prototype.drShiftTo = bnpDRShiftTo;
  BigInteger.prototype.lShiftTo = bnpLShiftTo;
  BigInteger.prototype.rShiftTo = bnpRShiftTo;
  BigInteger.prototype.subTo = bnpSubTo;
  BigInteger.prototype.multiplyTo = bnpMultiplyTo;
  BigInteger.prototype.squareTo = bnpSquareTo;
  BigInteger.prototype.divRemTo = bnpDivRemTo;
  BigInteger.prototype.invDigit = bnpInvDigit;
  BigInteger.prototype.isEven = bnpIsEven;
  BigInteger.prototype.exp = bnpExp;
  // public
  BigInteger.prototype.toString = bnToString;
  BigInteger.prototype.negate = bnNegate;
  BigInteger.prototype.abs = bnAbs;
  BigInteger.prototype.compareTo = bnCompareTo;
  BigInteger.prototype.bitLength = bnBitLength;
  BigInteger.prototype.mod = bnMod;
  BigInteger.prototype.modPowInt = bnModPowInt;
  // "constants"
  BigInteger.ZERO = nbv(0);
  BigInteger.ONE = nbv(1);
  // jsbn2 stuff
  // (protected) convert from radix string
  function bnpFromRadix(s,b) {
    this.fromInt(0);
    if(b == null) b = 10;
    var cs = this.chunkSize(b);
    var d = Math.pow(b,cs), mi = false, j = 0, w = 0;
    for(var i = 0; i < s.length; ++i) {
      var x = intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-" && this.signum() == 0) mi = true;
        continue;
      }
      w = b*w+x;
      if(++j >= cs) {
        this.dMultiply(d);
        this.dAddOffset(w,0);
        j = 0;
        w = 0;
      }
    }
    if(j > 0) {
      this.dMultiply(Math.pow(b,j));
      this.dAddOffset(w,0);
    }
    if(mi) BigInteger.ZERO.subTo(this,this);
  }
  // (protected) return x s.t. r^x < DV
  function bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }
  // (public) 0 if this == 0, 1 if this > 0
  function bnSigNum() {
    if(this.s < 0) return -1;
    else if(this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;
    else return 1;
  }
  // (protected) this *= n, this >= 0, 1 < n < DV
  function bnpDMultiply(n) {
    this[this.t] = this.am(0,n-1,this,0,0,this.t);
    ++this.t;
    this.clamp();
  }
  // (protected) this += n << w words, this >= 0
  function bnpDAddOffset(n,w) {
    if(n == 0) return;
    while(this.t <= w) this[this.t++] = 0;
    this[w] += n;
    while(this[w] >= this.DV) {
      this[w] -= this.DV;
      if(++w >= this.t) this[this.t++] = 0;
      ++this[w];
    }
  }
  // (protected) convert to radix string
  function bnpToRadix(b) {
    if(b == null) b = 10;
    if(this.signum() == 0 || b < 2 || b > 36) return "0";
    var cs = this.chunkSize(b);
    var a = Math.pow(b,cs);
    var d = nbv(a), y = nbi(), z = nbi(), r = "";
    this.divRemTo(d,y,z);
    while(y.signum() > 0) {
      r = (a+z.intValue()).toString(b).substr(1) + r;
      y.divRemTo(d,y,z);
    }
    return z.intValue().toString(b) + r;
  }
  // (public) return value as integer
  function bnIntValue() {
    if(this.s < 0) {
      if(this.t == 1) return this[0]-this.DV;
      else if(this.t == 0) return -1;
    }
    else if(this.t == 1) return this[0];
    else if(this.t == 0) return 0;
    // assumes 16 < DB < 32
    return ((this[1]&((1<<(32-this.DB))-1))<<this.DB)|this[0];
  }
  // (protected) r = this + a
  function bnpAddTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]+a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c += a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c += a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += a.s;
    }
    r.s = (c<0)?-1:0;
    if(c > 0) r[i++] = c;
    else if(c < -1) r[i++] = this.DV+c;
    r.t = i;
    r.clamp();
  }
  BigInteger.prototype.fromRadix = bnpFromRadix;
  BigInteger.prototype.chunkSize = bnpChunkSize;
  BigInteger.prototype.signum = bnSigNum;
  BigInteger.prototype.dMultiply = bnpDMultiply;
  BigInteger.prototype.dAddOffset = bnpDAddOffset;
  BigInteger.prototype.toRadix = bnpToRadix;
  BigInteger.prototype.intValue = bnIntValue;
  BigInteger.prototype.addTo = bnpAddTo;
  //======= end jsbn =======
  // Emscripten wrapper
  var Wrapper = {
    abs: function(l, h) {
      var x = new goog.math.Long(l, h);
      var ret;
      if (x.isNegative()) {
        ret = x.negate();
      } else {
        ret = x;
      }
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
    },
    ensureTemps: function() {
      if (Wrapper.ensuredTemps) return;
      Wrapper.ensuredTemps = true;
      Wrapper.two32 = new BigInteger();
      Wrapper.two32.fromString('4294967296', 10);
      Wrapper.two64 = new BigInteger();
      Wrapper.two64.fromString('18446744073709551616', 10);
      Wrapper.temp1 = new BigInteger();
      Wrapper.temp2 = new BigInteger();
    },
    lh2bignum: function(l, h) {
      var a = new BigInteger();
      a.fromString(h.toString(), 10);
      var b = new BigInteger();
      a.multiplyTo(Wrapper.two32, b);
      var c = new BigInteger();
      c.fromString(l.toString(), 10);
      var d = new BigInteger();
      c.addTo(b, d);
      return d;
    },
    stringify: function(l, h, unsigned) {
      var ret = new goog.math.Long(l, h).toString();
      if (unsigned && ret[0] == '-') {
        // unsign slowly using jsbn bignums
        Wrapper.ensureTemps();
        var bignum = new BigInteger();
        bignum.fromString(ret, 10);
        ret = new BigInteger();
        Wrapper.two64.addTo(bignum, ret);
        ret = ret.toString(10);
      }
      return ret;
    },
    fromString: function(str, base, min, max, unsigned) {
      Wrapper.ensureTemps();
      var bignum = new BigInteger();
      bignum.fromString(str, base);
      var bigmin = new BigInteger();
      bigmin.fromString(min, 10);
      var bigmax = new BigInteger();
      bigmax.fromString(max, 10);
      if (unsigned && bignum.compareTo(BigInteger.ZERO) < 0) {
        var temp = new BigInteger();
        bignum.addTo(Wrapper.two64, temp);
        bignum = temp;
      }
      var error = false;
      if (bignum.compareTo(bigmin) < 0) {
        bignum = bigmin;
        error = true;
      } else if (bignum.compareTo(bigmax) > 0) {
        bignum = bigmax;
        error = true;
      }
      var ret = goog.math.Long.fromString(bignum.toString()); // min-max checks should have clamped this to a range goog.math.Long can handle well
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
      if (error) throw 'range error';
    }
  };
  return Wrapper;
})();
//======= end closure i64 code =======
// === Auto-generated postamble setup entry stuff ===
if (memoryInitializer) {
  function applyData(data) {
    HEAPU8.set(data, STATIC_BASE);
  }
  if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {
    applyData(Module['readBinary'](memoryInitializer));
  } else {
    addRunDependency('memory initializer');
    Browser.asyncLoad(memoryInitializer, function(data) {
      applyData(data);
      removeRunDependency('memory initializer');
    }, function(data) {
      throw 'could not load memory initializer ' + memoryInitializer;
    });
  }
}
function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;
var initialStackTop;
var preloadStartTime = null;
var calledMain = false;
dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun'] && shouldRunNow) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}
Module['callMain'] = Module.callMain = function callMain(args) {
  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');
  args = args || [];
  if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {
    Module.printErr('preload time: ' + (Date.now() - preloadStartTime) + ' ms');
  }
  ensureInitRuntime();
  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString("/bin/this.program"), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);
  initialStackTop = STACKTOP;
  try {
    var ret = Module['_main'](argc, argv, 0);
    // if we're not running an evented main loop, it's time to exit
    if (!Module['noExitRuntime']) {
      exit(ret);
    }
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      return;
    } else {
      if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
      throw e;
    }
  } finally {
    calledMain = true;
  }
}
function run(args) {
  args = args || Module['arguments'];
  if (preloadStartTime === null) preloadStartTime = Date.now();
  if (runDependencies > 0) {
    Module.printErr('run() called, but dependencies remain, so not running');
    return;
  }
  preRun();
  if (runDependencies > 0) {
    // a preRun added a dependency, run will be called later
    return;
  }
  function doRun() {
    ensureInitRuntime();
    preMain();
    Module['calledRun'] = true;
    if (Module['_main'] && shouldRunNow) {
      Module['callMain'](args);
    }
    postRun();
  }
  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      if (!ABORT) doRun();
    }, 1);
  } else {
    doRun();
  }
}
Module['run'] = Module.run = run;
function exit(status) {
  ABORT = true;
  EXITSTATUS = status;
  STACKTOP = initialStackTop;
  // exit the runtime
  exitRuntime();
  // TODO We should handle this differently based on environment.
  // In the browser, the best we can do is throw an exception
  // to halt execution, but in node we could process.exit and
  // I'd imagine SM shell would have something equivalent.
  // This would let us set a proper exit status (which
  // would be great for checking test exit statuses).
  // https://github.com/kripken/emscripten/issues/1371
  // throw an exception to halt the current execution
  throw new ExitStatus(status);
}
Module['exit'] = Module.exit = exit;
function abort(text) {
  if (text) {
    Module.print(text);
    Module.printErr(text);
  }
  ABORT = true;
  EXITSTATUS = 1;
  throw 'abort() at ' + stackTrace();
}
Module['abort'] = Module.abort = abort;
// {{PRE_RUN_ADDITIONS}}
if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}
// shouldRunNow refers to calling main(), not run().
var shouldRunNow = true;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}
run();
// {{POST_RUN_ADDITIONS}}
// {{MODULE_ADDITIONS}}
//@ sourceMappingURL=faust-reverbDesigner-temp.js.map  // This should be made to only make a new context if one does not exist

  if (!faust.context)
  {
    faust.context = new webkitAudioContext();
  }

  var REVERBDESIGNER_constructor = Module.cwrap('REVERBDESIGNER_constructor', 'number', 'number');
  var REVERBDESIGNER_destructor = Module.cwrap('REVERBDESIGNER_destructor', null, ['number']);
  var REVERBDESIGNER_compute = Module.cwrap('REVERBDESIGNER_compute', ['number'], ['number', 'number', 'number', 'number']);
  var REVERBDESIGNER_getNumInputs = Module.cwrap('REVERBDESIGNER_getNumInputs', 'number', 'number');
  var REVERBDESIGNER_getNumOutputs = Module.cwrap('REVERBDESIGNER_getNumOutputs', 'number', 'number');
  var REVERBDESIGNER_getNumParams = Module.cwrap('REVERBDESIGNER_getNumParams', 'number', 'number');
  var REVERBDESIGNER_getNextParam = Module.cwrap('REVERBDESIGNER_getNextParam', 'number', ['number', 'number']);

  faust.reverbDesigner = function () {
    var that = {};
    
    that.model = {
    };

    that.ptr = REVERBDESIGNER_constructor(faust.context.sampleRate);

    // Bind to C++ Member Functions

    that.getNumInputs = function () {
      return REVERBDESIGNER_getNumInputs(that.ptr);
    };

    that.getNumOutputs = function () {
      return REVERBDESIGNER_getNumOutputs(that.ptr);
    };
    
    that.compute = function (e) {
      var reverbDesignerOutChans = HEAP32.subarray(that.outs >> 2, (that.outs + that.numOut * that.ptrsize) >> 2);
      var reverbDesignerInChans = HEAP32.subarray(that.ins >> 2, (that.ins + that.ins * that.ptrsize) >> 2);
      var i, j;
      for (i = 0; i < that.numIn; i++)
      {
        var input = e.inputBuffer.getChannelData(i);
        var reverbDesignerInput = HEAPF32.subarray(reverbDesignerInChans[i] >> 2, (reverbDesignerInChans[i] + that.vectorsize * that.ptrsize) >> 2);
        
        for (j = 0; j < input.length; j++) {
          reverbDesignerInput[j] = input[j];
        }
      }
      
      REVERBDESIGNER_compute(that.ptr, that.vectorsize, that.ins, that.outs);
      
      for (i = 0; i < that.numOut; i++)
      {
        var output = e.outputBuffer.getChannelData(i);
        var reverbDesignerOutput = HEAPF32.subarray(reverbDesignerOutChans[i] >> 2, (reverbDesignerOutChans[i] + that.vectorsize * that.ptrsize) >> 2);
        
        for (j = 0; j < output.length; j++) {
          output[j] = reverbDesignerOutput[j];
        }
      }
    };

    that.destroy = function () {
      REVERBDESIGNER_destructor(that.ptr);
    };
    
    // Connect to another node
    that.connect = function (node) {
      that.jsNode.connect(node);
    };

    // Bind to Web Audio

    that.play = function () {
      that.jsNode.connect(faust.context.destination);
    };

    that.pause = function () {
      that.jsNode.disconnect(faust.context.destination);
    };

    that.setupModel = function () {
      var i;
      var numParams = REVERBDESIGNER_getNumParams(that.ptr);
      for (i = 0; i < numParams; i++) {
        //TODO keyptr is allocated on stack, but is it properly freed?
        var keyPtr = allocate(intArrayFromString(''), 'i8', ALLOC_STACK);
        var valPtr = REVERBDESIGNER_getNextParam(that.ptr, keyPtr);
        var key = Pointer_stringify(keyPtr);
        that.model[key] = valPtr;
      }
    };
    
    that.update = function (key, val) {
      HEAPF32[that.model[key] >> 2] = val;
    };

    that.init = function () {
      var i;
      that.ptrsize = 4; //assuming poitner in emscripten are 32bits
      that.vectorsize = 2048;
      that.samplesize = 4;
      
      // Get input / output counts
      that.numIn = that.getNumInputs();
      that.numOut = that.getNumOutputs();
      
      // Setup web audio context
      that.jsNode = faust.context.createJavaScriptNode(that.vectorsize, that.numIn, that.numOut);
      that.jsNode.onaudioprocess = that.compute;
      
      // TODO the below calls to malloc are not yet being freed, potential memory leak
      // allocate memory for input / output arrays
      that.ins = Module._malloc(that.ptrsize * that.numIn);
      
      for (i = 0; i < that.numIn; i++) { // assing to our array of pointer elements an array of 32bit floats, one for each channel. currently we assume pointers are 32bits
        HEAP32[(that.ins >> 2) + i] = Module._malloc(that.vectorsize * that.samplesize); // assign memory at that.ins[i] to a new ptr value. maybe there's an easier way, but this is clearer to me than any typedarray magic beyond the presumably TypedArray HEAP32
      }
      
      that.outs = Module._malloc(that.ptrsize * that.numOut); //ptrsize, change to eight or use Runtime.QUANTUM? or what?
      for (i = 0; i < that.numOut; i++) { // assing to our array of pointer elements an array of 64bit floats, one for each channel. currently we assume pointers are 32bits
        HEAP32[(that.outs >> 2) + i] = Module._malloc(that.vectorsize * that.samplesize); // assign memory at that.ins[i] to a new ptr value. maybe there's an easier way, but this is clearer to me than any typedarray magic beyond the presumably TypedArray HEAP32
      }
      that.setupModel();
    };

    that.init();
    

    return that;
  };
}());
